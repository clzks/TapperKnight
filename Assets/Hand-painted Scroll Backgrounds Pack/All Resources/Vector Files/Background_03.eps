%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: bg07.eps
%%Creator: Adobe Illustrator(R) 17.0
%%For: Krol
%%CreationDate: 7/31/2016
%%BoundingBox: 0 0 900 481
%%HiResBoundingBox: 0 0 900 480
%%CropBox: 0 0 900 480
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 17.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 17.0.0 x256 R agm 4.7700 ct 5.3328%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.5-c014 79.151739, 2013/04/03-12:12:15        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Web</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2016-07-31T22:49:13+04:00</xmp:CreateDate>
         <xmp:ModifyDate>2016-07-31T22:49:13+04:00</xmp:ModifyDate>
         <xmp:MetadataDate>2016-07-31T22:49:13+04:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>140</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAjAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8AlGVPjrsUgW86NxP0LfgM&#xA;w+EP1LbLdMtHu7aKe52j9JEij26KtORPapJ/jksmmhkjUg+Jdt9q/k9TPHpzc/FnKct+cpXw1yNA&#xA;AEnz4auyJGk8T+7ndV/lzXS7Exk8y0w9s8oj6scTL3kfZv8Aeire3jgUhakndmY1JPvmy02lhhjw&#xA;xec7R7Ty6yfHkPLkByCA8xep9Sj9OlfVFa+HFsjrK4Pi9l/wNv8AH5/8Jl/u4I6zr9Ugr19NK/8A&#xA;AjL8X0j3PI9t3+ez3/quT/dFWyx1bsVdirsVdirsVdirsVdirsVdirsVdiriabnIykALPJlCBkRG&#xA;IslTu47tIBIn7sP9hjQnpXpnL6jt8mVY9o9/V9B7O9kcUY3qDxS7gaA/Sfs/Ski6pfI278qdVIFP&#xA;wwQ7Tzg3du1y+zOimK4OHzBKH1C9FzcoSOLcAAO2xNaffmb+Z8b1cqes9kOzo6PTSxA8X7wy+YiB&#xA;9ybaF/vG3/GQ/qGbPRfR8Xzv/gkf8aEf+FR/3U0xzLfP3Yq7FUv1GFPUjK0VnJqT0NKZpe1eHHUq&#xA;fT/YbtHJLFlxzNwhGIj5XxdedfgJhCTM/CMVYitDtgydvYIi/Ufg8zD2Q1ZNEwA77/Z+pBTaokFy&#xA;0MibKaFlPL8Mjh7bjLnEge9zM3sZkEbhkEpdxFfbZQNyb6aRpQGeEMwULWlFYqdh8sq1+LUmZsHh&#xA;6U7PsTP2djxRiDEZKHFxbG/ef0IhNXjMfom2PqdAwJr9O+abGM/HUZSt6HLp9Nw8Uow4e+gxVruB&#xA;mYlaKWPFTvRa7fhnVQhIRF86e7hfCL5s70SITWFskUDOfSDEA0ooFSx22AHfMyIlXN+eu3o8faOc&#xA;RF/vJfeiBNaU/uSffn/ZiRIdfsdPExOwj9q8TWQ62xP/AD0P9MBhP+d9iieP+b9qTeap4zYxJbQc&#xA;JDKCSX5fCFbsaeOY2piREcRv4Pof/A4AOsySjGqxEc++Uf1IeGWSEJ9WjLK0Mbzp9oq7KKlSBml1&#xA;WgmCJ4ib8uYdtl1mOUpx1IjGJy5Ix4qqQjIjr8v7U3tbhJA7PbsiGnpgtQ9N+oObPswajgJyn3WH&#xA;hPaEaKOURwAcvVwnb9IVS0J6IR/sv7M2dHvedJj3LDTtk2DWKuxV2KuxV2KuxV2KuxVpmCqWPQCp&#xA;yvLPgiZdwtu0+E5ckYA1xSA+Zp0AeapVkQD+dqZzOX2ikPph+n9T3eL2Lxj68kj7gB99qFy3Byhk&#xA;VlH7S/ZzXajtHNnFSO3d+P0u/wBB2JptKeKEfX/OO5/UPgAoXur8wObhyooqL0GYmPC7ZJSSST3O&#xA;ZapfqrSQ3MCFSrgc9/Btv4Zt9Hp5QBMhVu37ByQyRlOBEhxcO3eOf3si8sytJYSFqVEpG3+qubrS&#xA;Co/F80/4JP8Aj8P+Ex/3c03zKfPXYq7FVG6gilCiReQFadc0nbB+ke/9D6b/AMDnGJDUWP5n+/QS&#xA;6dcmRwk7Rwg0Qk8iR9BGY8OyYZSZRNR6bf2Lr/aGWijDHliJajhBnEGhG+h571Wy6PRYA1ZHZ/bp&#xA;XMvH2PjH1En7HRaj2xzyFY4xh5/V+ofYjPKtgbrR0lN3bxHm4KyycW+1WtKe+bXV5+CdcMj7g89+&#xA;U49+KEfeab1TSCup2MFvc2z3V16tGRywISMni9B+10X3ymOTijKQjIGNdOdu67KlwyGDLIZMMyNo&#xA;y3ibsSjt9n8Vn3sJ+rw/yjKOIvv1PXNYFrZ+T9Js7K8tbflaW7X1nHUzyy+mpPqMobYHcBiB+GbC&#xA;P0h8N9rDCOTJHHOEeKcjKI+qR4jz/Ua+5hkkjKPgNCN/6ZqtbqxHJCA/nAlxOweyDkwZc0hzhKMP&#xA;fW5/R81S21FWYJOQgPWTcgfMAE/dm3lGhs80MdnnSW67cRrPccZkmjheFFaMkg80ZqrUDodjmFrL&#xA;MI7EXb6Z/wADnHwajKLB9A5e9kukaKjabbyre2y+vGkpDy0YclBoRTag2yrFqOCNcMz8HnPaYT1G&#xA;uyGU8URCUoxF1QEpeXMkmUv6RKL/AEMK0+v2dRvT1fH6Ms/Of0J/J0P8nmr48f8Apv2Lho5HS+sv&#xA;pkB/WuA6r+hP5ftUaL/bMfz/AGLxpj/8t1j/AMGv/NOD8wP5mT5H9bL8of5+L5j9TY05x/x+WB+b&#xA;L/zTgOoH83J+PikaU/z8XzH6l31B/wDlr0//AIJP+acHjj+bk+39afy5/n4vs/U2LNx0utOH+yX/&#xA;AJpweKP5uRkMB/n4fn+xv6pL/wAten/8EP8AmnB4o/m5E+Cf5+H5/sXC3lHS606vjz/sweIP5uT5&#xA;JGI/zsPzb9Gb/lr0/wD4P+zBxj+bk+SfDl/PxfNwhm/5atOP+z/sx4x/NyfJeCX8/D82/Sl/5adO&#xA;/wCDODiH83L8k8Ev52H5tlJyKG606nSnqHBcf5uT5MgJjlPF82Matot/Zq0ltc288JJPpwyKzoPA&#xA;BviI+Vc02o7PPFcIyrzD3HZvb2OUBHNOAyd4lsf1MecSFvjB5e9a5i8BG1O+jlhIWCCPejLLRb68&#xA;VmjEcYUVBmkWKp8ByIy+GkyS/hNe4uDl7X0uM1LJG/fyTjyxYFZ7yOb6nDd2zqP38iueLoCCpQsn&#xA;WvTNth0+PH/DMn3finQe0OacoY5Y8sDhyRPeATGRv30OG/NIPPEDjXQxeKU+inxW55INz+OXSkO4&#xA;j383tvYWJGh3MT65fTy6Jx5DgkbTrikttD++6XBox+EdKg7YYTA6TP8AVeZ/4IGMnU494D93/F/W&#xA;LJvqkv8Ay16f/wAEP+acn4o/m5HgfBP8/D8/2LTYuf8Aj604f7Jf+acPjD+bk/HxY/lz/Pw/Z+po&#xA;6e5/4+9P/wCCX/mnD44/m5Pt/Wj8sf5+L7P1JXrMM1u0AR7e49TlX0GBC0p9qgHWua7tCcZ8NiUa&#xA;vm+jewOGUI5zcZXwfT5cf60xOlMf+P6x+h1H6lzZx1AAoQn8v2vnGTTSnIylkxmR3J4uf2KF1pgg&#xA;tprhr20YRIzlVl3PEVoBTLIamyBwT38ms6H+nj/037Ek/L86HNJLa6vf/Uo2kiW3O3xGTkG69AKD&#xA;fNlqMcyQY1XVy9LpMOaX7yXDyRt5q2gxefNJm0iQjToYYw00h+ItPGzOz12BAkCkDwywQqBdlpI4&#xA;cesxDD9Nx95J7/nTzkTzD9s/TvmnoPvNs2twn1G2bnWVowZFpQLtsK9zTrt9+ZP8Pc/OHbEMY12Q&#xA;QJyA5DyFczyHPrtdeakep75xucgzJBvzfVNDAxwxBiIUPpHTyQzgBiM7LSZDPFGR50+V9p4Bi1E4&#xA;AUAfx+zySZWkkeRkIHJqmu/jg7UAEYvof/A4B8TN/Vj95eg+U9Hv9RhgifT7sxlFCXUKfuqUpuXA&#xA;H3HKyMnADCjsNi8j2j2bLNr8/pnRzZNxy+soRn0q2823unXc7x2sYEKy7EiWP7SmgP7RYZgDU5eM&#xA;ihxcq9zfqexcePTDiJHAST8a/UE+Gl6ERUXM5B6H0n/5oyz8zn/mx+Y/W6X8ppv50v8ASn/iVken&#xA;6A7OBcz/AANx/u2Pb2T6N8A1WY/wx+f7XL1PY2PDGEpmVZI8Udjyuv5vx9xC/wDRWhf8tM//ACKf&#xA;/mjD+Zz/AM2PzH63E/Kab+dL/Sn/AIl36K0L/lpn/wCRT/8ANGP5nP8AzY/MfrX8ppv50v8ASn/i&#xA;XforQv8Alpn/AORT/wDNGP5nP/Nj8x+tfymm/nS/0p/4l36K0L/lpn/5FP8A80Y/mc/82PzH61/K&#xA;ab+dL/Sn/iXforQv+Wmf/kU//NGP5nP/ADY/MfrX8ppv50v9Kf8AiXforQv+Wmf/AJFP/wA0Y/mc&#xA;/wDNj8x+tfymm/nS/wBKf+Jd+itC/wCWmf8A5FP/AM0Y/mc/82PzH61/Kab+dL/Sn/iXforQv+Wm&#xA;f/kU/wDzRj+Zz/zY/MfrX8ppv50v9Kf+Jd+itC/5aZ/+RT/80Y/mc/8ANj8x+tfymm/nS/0p/wCJ&#xA;d+itC/5aZ/8AkU//ADRj+Zz/AM2PzH61/Kab+dL/AEp/4l36K0L/AJaZ/wDkU/8AzRj+Zz/zY/Mf&#xA;rX8ppv50v9Kf+Jd+itC/5aZ/+RT/APNGP5nP/Nj8x+tfymm/nS/0p/4lK9X8t6aa3umXMq6igpR4&#xA;5Asij9k0SlfCv+1A5cxN0B8R+t6fsbtHR4sZ02pvLppd8ZXA98aFjzrfqOoMR1GZ5biskZilVQsi&#xA;N/MOuxAp8sqyZDM2X1b2f7MxaPTeHhlx4zIyiduR8xzTnydZQXEs7XM7xQRgfBGjOWY1puFagGSx&#xA;ZMkfoo/J5P8A4IA00oY45AfEN8Mt/SBV8tt9ubKf0VoX/LTP/wAin/5oy78zn/mx+Y/W+XflNN/O&#xA;l/pT/wASgdctdFtdJupo7mb1hGwhDIyguVPHcoMu0+bNKYBjGr33/axlpdOBYlK/cf1IPRp9Fvr2&#xA;WGS4lWlvBKgCljydeUgoFP2SwyrJqM0ckogDbz/a5kuzcAwQyEyHFfT9nkv1lNMtpIxbTs6spLGQ&#xA;FflSoXNX2hLJMjiFe59D9gseOGLKIEn1Dnt09wQkuo6KsuoyJNK0UFsklqCKc3LMu/w7A8kzof3o&#xA;EbA3lv8Ai/e+YR0eGRIBl5fikF5h1LThZXEVpI7yG5e3TkKAwxxqWY7Dcu1B7ZfpYZDIGQFcN/G/&#xA;1NcsGKO8SSb+z5MSzZIaY0Un2yGQ1E+52HZWPj1eKPfkh/ughSdietM0b9CMvsbuKayi9M8iEUNW&#xA;vWg8cxO1cxhAQr6vxy/W+L9l9lCevy5SaEMk6AH9I9ar4Dfvoc1wCQSOwqf1Zzb26W6jLLCWanJH&#xA;Wi07N751nYmWEocHKQ+38dXz/wBpdDMZfE5wP2eXu7vklUUyxV5V38My+1hYj8XqP+Bz9Wb3Q/3y&#xA;6e7uLgr6sryKoAjDsW4qNgBXoAM2GAVijX80fc8T2ySddmBP+Vn/ALoqsbUkVmqd9/HORjMDJZ73&#xA;rM+OUsBjHY8PX7j7+RZZofmjVNJcCErPB3tphzT6OhX6Dm81Gkx5BZG/e8NoNbPDkA+qN0RXF8vP&#xA;3FO/KXmI2+q3E12IzFLyM6upPxseY4qobccu/Y5rdb2bkwwEpV3Pp57b0faYGDSQM8mONiwABEER&#xA;O5Pu5M/i1W3ljDpaxFT0+Gnt4ZqpAg0Q6fUZTimYTxxEgu/SEX/LJF9w/pkbafzkf5kfk79IRf8A&#xA;LJF9w/pja/nI/wAyPyd+kIv+WSL7h/TG1/OR/mR+Tv0hF/yyRfcP6Y2v5yP8yPycb+E/8ekX3Y2g&#xA;6uP8yLX16H/lljxtH5qP8yLX11CdrWL7jja/mQf4Iu+sr/yyx/c39cbR44/mR+1o3Hhax/8AAt/X&#xA;G0HN/Qj8j+tb6w/5Zo/uf/mrFj4n9CP2/rWmSv8AuhPub+uKOP8Aoj7f1tE/8Ugf8H/XFiT/AEfv&#xA;/W8i/MSdIvNFwGXiSkZCj/UA75mYY3F9O9mJf4FH3y+9OPyru0kOoR9GPpsq+y8gx/4YZHUQIALo&#xA;vbSQ4sQ61L/eptrXne00yC5jarXjGYWgAqtVoELe1T+GT7P0Us5v+EHd4ntOQ04j3yhfxYj5383w&#xA;6ylvBZ8kgiZjJXbmSFAP/Es33ZugOC5S5l0er1PiUIscsNRubKdp4GpI0TxV/wAmRCn4VqM0pyiW&#xA;bjP08V/C3rZaQ/lvDH1CP20mKapc34LXBq6Eb9qCNIx+EeZHa+GMDHh5Ufvv9LtvYKZlDNffH7ik&#xA;8s0hLfEQCoQgE/ZWlB/wubrVnhw31eH7LxCWs4f4RxfcVldvbM4Gxbp5Rokdz2k6To5Ys2nWjE9S&#xA;1vCSfp455AO0tSP8pP8A00v1vth7H0h54of6UJN5x0/RrbyxqE0Wm2scoiokqQqrKWYKCCOnXNj2&#xA;d2jqcmeMZZJEE97PTdj6WGSMo44iQNjYPHo2LFx2O4zsS9E9p8vaH5dk0DTZJLImWS1gZ3Esgqxj&#xA;BY05UFTnB67V5PGmL5SP3uhyaOPGSOpP3rdU0zQ7e4gjghZI5P8AegFySUqPs1Jp3w6fJOcSS4ub&#xA;EIEBVuvJHlm5FGe7QUp8LR9/mrZPS9s5cBuIj8b/AF/tcfW9iQ1AqZPw/s/Z5MF88eXdM0SW0Syl&#xA;mkEyuZDMVNKFQKcQPHOh03a2TWAmYA4e7zdh7NdiY9CMnCSePh5+V+Q704078ubO702zuxqTxPPD&#xA;HK6GEOAXQNQHmvSuVZvacxEsXBy9N8Xdt3POar2T4tXPNx88kpVw95J725vy+t4zT9LJXuDC1f8A&#xA;hWbNTHtO/wCH7XZ/yPPoVCfQJLFYT663ALBKQpIW5MQqAKVqSSaCmb7TdrjLDwwKlXUiqAs/ID5O&#xA;n0XstHT60arPKPhRN114yajy8z77rYo+3RoLiJbi3nhZzSL14ZIwz0JUVdVHauZuLNk1UgJTE4R3&#xA;NSieX9VztSOzOyMGTLpYRhmmOEfVZMjsPV0vcgd19E6u7i/0S5EFgrT2/wAMhhmoCQ9eR5bU+Jaj&#xA;r1zB/N4dRjGXMYxlIyHpBr01+iQeby9nakXhwxlklh4fqMTIxnx8zf8ADKEq8pV0Cb2OvWdzHylB&#xA;tZB9pJth9DfZOYGSUAdpRkFh2dqiN8Uwfdf3IxL2yf7FxG3+q6n9RyPEGM9Hmj9UJD4FXVyN1br3&#xA;BwtFkHuXetN/O33nFPiS7yuFzcjpK4/2Rw2zGfIP4j83fW7r/fz/APBHG1/MZP5x+a767d/7+f7z&#xA;jbL81l/nFB2uuz3F9e2izNzs2jVqMf8AdiBxXCbpkdRlAB4jujPrt3/v5vvwWx/NZf5xb+v3n+/W&#xA;xtP5vL/OLRv7w7es3342p1eX+cVr6jcRqWkuCijqzNQfjjaYZ80jQMiXjH5lXa3XmmWVJROPSjHq&#xA;KwYbDpUVzP05uD6X7OxyR0o8QESs8+ap+XerT6Zf3NyhPAwmIqpINXZWB/5J5HWZ4xx8PUm/lf63&#xA;G7d7KzanLjlCQjGMZA873MeXyTC+0+01GWJ5nJaIluI/bqRUEn5Zh6TtGeASEP4vsdJ2j2DHPwzy&#xA;2BD3b3W3u2Qmp+XtMt9JmuIlpIPi9SRm+Hf7KqtAanYVy09t6icuAkUe4OMPZnR48XixB4hvueXu&#xA;A+y2JjrhaWXf7xWNtBPBCWUNxngVQJU2KsxopJ3pvmF4kssieKRroenk9f2PpRhgRwxBJux/F5ss&#xA;1fQ4dZ0aG15i2/u5A6Ip6L0I223zV4dfPFkJJMhvzLTm0OOWwAifcjrbSdPgt4ofq8UnpIqc3ijL&#xA;NxFKt8PU5VLtDOSTxyH+cf1sB2bp+uOB/wA0LF1RP2oyPka/0yk4XZeGkHnq6s5tEAkeUL6qAxKe&#xA;IcVqQ1OtFBp75seyoyjl2rlz7nF1eQ4oX5j9aEb8u/KkgDQ3VxETupDKRv8A6yZkjtzUjnGJ/Hvc&#xA;4ZpMi06Kx0XSRAtw00dshIaRiSVUEgeA222zV55yz5OIijItGWRAMiOSIn/RdwVlkIc0+Egnp17Z&#xA;XCWSGwapYBPcheNTteTKCTxp0HX78icEqB72cTcjEdHnn5l3iTanZKqkARV3/wBc50fYmOscve7L&#xA;SxoFkOktPLo1lxnkjHoRrxVjx+FQOhPt2zWakAZZbfxFqnQkdnSpqMakpJzHiACfuORBgeYUGJSa&#xA;VdbkZWOpsODK6cYlWjKQymqkbgiuZ2LLDGbjHfcd/MUefeHH1GiGWPDM3Hb7DY5dxVJP0vO8bXWp&#xA;z3HpHknM1o1CKjkW8TmZg7Ulhvw4wje20Y/qdRqvZXSagAZeOUQbrjn/AMUimublyWeaR3NAzsxJ&#xA;NPE46zU482GHScb2rbfqOgaOx+yMui1mUCIlp8gBEibkCL9Ju5GrO/6SVMkk1O58TmrerUbi7tbc&#xA;AzypGD05ECvyy3FhnkNRBKt6Fc3Ot6vHpmjVMr1aS4Y8ESNftNQkFj4DNnHsqUI8eU0O4c/1Bw9f&#xA;mhix8UwJHpHbc/F6xa6HfW9ukIDycBT1JHVmPuTXKKfNc+mzZJmZiBfQUAq/ou+/31/wy/1xpq/I&#xA;Zv5v2j9bv0Xff76/4Zf640v5DN/N+0frU7m0uLW2luZ1CQQo0krlloFUVJ6+GPCVOhy932h5z+W+&#xA;qXWpeaNV+H4tQU3CqSBT03oFFT2V/wAMvyx2Dbk08pACO5D0r9F33++v+GX+uUU1fkM3837R+tQS&#xA;GZ76axVa3EEcc0i8l2WUuq9/+KzkziIiJdD+j+1rGlyGRjW4APMdb/UlcF3Jc+aZNLiAZraB+YBH&#xA;95yUsK1psMpB9VOZ/J2QYrr1GX2bpV588uXEWnT61Ai87Xe6TkCHUUU0oTRlzJw6YZZcJ2J5F3vY&#xA;Wvyac+Hl/uu/b0n9X3PI9Qu47u49aMFVKgUPWo+WZsNOcI4S9/AbJp5XcB7he5CH7q/1zA7RG0fi&#xA;wysgzVtKX687Gw4vKfSBHGLxbt9A3NMv0w9XLd0/bMB4Vk15d5/YxjNg8kyLTTLe6fEkkg/0csiH&#xA;qeJoQD8sxJAQkSOr13YuUyxUf4TTMrSaWOCPg5A4r8unhmmyRBJc6QFotNRuF+1RvmKfqyo4gwMA&#xA;kq6o37UYPuDT+GZfg+bkeGkHnO+WaC1iQEAszuCO4AA/Wc2XZmKjIl0na9gRDItFmabSbSRq8jEo&#xA;NfEClfppmt1MaySHm5+llxY4nyWa9KY9KuKGjOvAf7I0P4YdLG8gae0cnDhl57fNvQ7j19NhqavG&#xA;PTf5rsPwx1MOGZ817PzeJhHeNvki0h4uX5Vr1GQnlsVTZi03BMyvmlWq+VdP1KdrieSYTEAKysKK&#xA;B0AUgimZODXzxCgBTnRymKrDbR2Okmyiuh6gRlSU1JBPQ8atSntkJ5PEycZGzXmEpg1sSpWV1Na2&#xA;ENsWEskS8fVIoKDpt7DDliJzMuVsdPgMICMjdKFy1y6s0TKJjuC4JUn3Clcnj4Qd+Tk0xHVvNPmP&#xA;TZRHPZwpU/DLR2Rh/kkMub7S9m6fMLjKR+VpCWP571xyABDHU/sof+Ni2ZkexsA/nH4rSDufMeuT&#xA;y8HvJAtRslE/4gFzKx9n4I8oj7/vZVuttuUk5dyWYbljuScy4RA5NgZdpEDW0CyAlZmo/IbEeG/t&#xA;lh3fDfbLtg6rWmMT+7w+mPv/AIj89vcAz7y9+ZurWHCDUQb+1G3Mmkyj/W/a/wBl9+a3P2bCW8fS&#xA;fscPQe0eXFUcnrj/ALL59fj83oOk+cNI1ZK2PqSOBV4uI9RfmtfxzTZtPPGfUHqtN2zhzfQJE91b&#xA;/emP1/8A5dp/+A/tyi3K/N/0J/JgX5t+bUtdGXSYlkjuL81lDCh9BTv3/abb5VyzGLYz1HEKqQ9+&#xA;zzHyl5gbSPMlhqBB9GKSk4G59JwUf7lauXSjs1Qlwm30PBq8FxDFPDFNJFMgkidU2ZGAIYb9CDmN&#xA;IEGi3R1oIsRnv5PJ778wZk87ajeWXwh7aSxRX6coXYo48TtUV7mmbzNo5DSDvvi91jf5Oh0/acZa&#xA;4y3ojhrqSDsgNG1yfSdVTUwebJyMvLfkHBDV++uczgFzA7y9fqJcOMnuCF8x+dLq5uNTsAx+qSXd&#xA;48ZPXjLxRBT2EZ/4LO302jAjGXXhj+Px3PnWr7SlIzh/CZT+2q+77WGzMrSFgONdyPem5+k75rtW&#xA;KyEPtXs7qZ59Dink+ox+41fxpLtTnuIEV4JXiaoqyMVNN+4x00IyJEgD73bZFsfmnXoo0K3RPYhl&#xA;Vq/eK5OXZuCX8LVSZQa1fajCpuWDBOjAcRyPb3Pjmsz6SGKXpeV7bnIyAPIdP0n9CpmO6JP/AC3/&#xA;AHM3+sP1ZjajmHp+wPol708S4nTZZCAOg6j7jmvlEEu9MQrLqNwOvFvmP6UyBxBjwBRMEw/Z+7fJ&#xA;8QbeEqckRoBImx3AYf1yQPcwIB2LaO6fYYr8iR+rARa0gdZvpWRIXkqteZB+4ZkabGBZed7dygcM&#xA;B7z+hD6PqrQXBhRqLNtWgpyHTrlmpw8QvucTsfUCGTgPKX3p213dHrId/Cg/VmDwDuerACC1C9uY&#xA;IDMInugu7orVeniAeuZGnwxnLhJEfuZAJInnjSSwV4pkJr+ypG3ybNkexcvQx/HwZcJQ9/52gjjL&#xA;2lHIpSOSMip/1g/8Mtw9jSO0/mD+iv0rRSp/zA1cn4IYFHurk/8AEhmYOw8XUy+z9SKQ2oa9q99p&#xA;r/WnX0pCKRBFA69akE/jmbg7NxYjxRHq95ZcOySKNgf8rMxQuXe4+k49E9U60e39WZFPR23+S7nD&#xA;F1/bOu/KaTJm6xjt7ztH7SGXVWvGu9K09sk/ORJO7eKF0FxJDKssEjRyxmqyISrKw8CMEogiiyhK&#xA;USCDRZx5f/NW9tmW21dPrcdNp0oswHTcbK/4ZrM/ZkZbw2+56fQe0uSG2Ycce/r+37GE+cNRtdY1&#xA;3U76Sd55WliWyKVWNYQp5KVYcqrRR2qanMXNpThhG+ZvZ3WDtCOonLh+kVRSRVVBsABmLblJ9H5/&#xA;1y2stOtrSZozYQPBzruQ8wk29uEaJv750ODQYpRJ5iVH7P7XmNT2rnhIR5ShYPzv7gPtQGlWz1a4&#xA;lALNWhO7b9Tmp7c1oNYonbr3ft+79G69nOzzG80wL6d/7Pv93UxYEqQOpHffOdiaIL1cxYIDGp0K&#xA;TOpXgQfs+GejabIJ4xIHisc/x9r5Pq8RhllEjhIPL8dO7yQc7UIPga5otQbyS97732BDg0GEf7XE&#xA;/MX+lD6hBNPH6cMbSyt9lEBZjQ9gN8GnmIysmg7WfJHeYvK1/FPb/VYC8SwRCWQUCh0Xg1SSN/hr&#xA;kdJ2jj4TxGjxH9bq9LqQcZlI7CR/Wo2emz2iKbjl6hHwK1QFX/JBzF1OpjkPp5fe832nquOVRjwx&#xA;O/KjLz/UicxXVJto1zLDE4WhUtWh8aZVliC9T2D/AHcv636GQ28M0kCyLQ8/iox6V+jNfMgSId7H&#xA;GVNo9VEqqtshQn4pPV6Dxpx3yYGKr4jfu/ay4Cm2Yba43LW8bycqIilnHUUAqag7YRGzTDLwiJMu&#xA;QX2tzpt7bxzS26qJVDB4/h6iu4FMM4yhIi+TjY4mcRKJ2Ith3mFLVNTkS2laVVA5u383cKKDYdM2&#xA;mmvgFvG9p/353s9fx5JakV7LIiWcRmnLfDGCFJ77E98yo8H8ZoNWiwxyZBEy4T0PmnGrX2vWNlZy&#xA;JZ+rIwYXacGYoajjXgaDrvlen0uHJKQMqrlvz+b1ehyGU5iR32/Ullt5yuJZxAbCsrbBQ9N6V6Fc&#xA;yMnY0QL49vd+12EqiLLGdX1NNQvhKtsluaEtwrVie7dB+GbnS6c4ocPEZMwKS6Q1hB8T/XMoKeTV&#xA;rD60yp26t8hkggC0x1La1oNhUCmSLOXJLV/ugf8AKrkGHRVs4ZJ7kpGKtxd6eyqWP4DIzkIiygyA&#xA;3LI9DaKBuchpRaAAV3bfLoQJ5PEf8EHUmOjhiH8c/siP10jTen656w3T7IH+TmR4fpp8h4NqRVvf&#xA;rNMsQQ8nIVe+5ynLHgiZE7BOLTSySEY7ykaULK8CyOJDT1GrXsCctyQ22Yzgo3Vwz3DMjEAfCCDT&#xA;bJRjUd2UI9FEzcdl3Pdj45zOtmZ5Df8AY9x2dhjDCBHr9vn+ryaCSybnp4nMWwHORVtp8rkEqCpq&#xA;QC1K0+QY5sh2lixQ4Yk37rr5kOPh9ltXrJjJIQ4d69dcQB60Je7oyTT7FJIVX1EjYDeNQTT76Vzl&#xA;9Vm4pmW5vqeb3Ok7AnjxiMjGNdI2R9tL7GK2uZ7qHkS1s4Q0oK7de/7QIyrKDERP84Num0OKcpRs&#xA;3A1+PjaJbRNLlIkeL1D1DFmP6jluLtLPiHDCXCPcGWX2b0OWQnOHGfMn9f7Hnt+VM78RRSzUA6AV&#xA;zfQJI35u9hAQiIxFACgitDl4atYP4yBK/wCt8OU6oXjl7kZIkxIHOnoUqTGJlikEch6OV5U+iozn&#xA;pTiSNnWaTR5cUZDiAJ+P6mPXHlW8lkaRrtZZG3LOCCf15lR1kQKp1mbsHLORkZiRPepDypdrFLye&#xA;NpdvR4k0671qB2ywaqJ3dfl7IyQkIkxMpcvxSilnPYkQTgCRyWFCDtT+zLBMTFh33ZmkngxmM+fF&#xA;f3Ml0pwbCP2qD95zXZ4+su0OWMI2eSMyhtdiqXeYPrH6KmSBGkd6KQgJIUnfYe2ZWk4fEBJcDtPj&#xA;8EiIJJ7lLy4LsaSIpkaF0LLGXUg8TuDQ/PJa3h8Sxu19ljJ4HDIGJF1aS31rAl5IqEsqmhZjUs37&#xA;RP05l4pExFvIa+MI5pRjuB1PU9ftWo/osroeBQhlYbUI3ByRFuKCQbDL7C+nWIXJZQzrV2G6mu9R&#xA;mtzUfSHr+zdJMnjlyI+fmvfVReJw5K560K0IwY8ZiXJ7SxjHi26lDyadok1TJpdk7UoWEKBvDqtD&#xA;lg1WaJ2nL5lzMUeKIlZ3CDl8p+U5hSTSox1I9OSVKE/J6ZdHtTUj+P7B+pmcZ71FPJPlVGZorWaI&#xA;tT7MxPT/AFg2Xx7b1A6g/BIhIdVG68heXbhAhlu0Fa7PGf8AjQZaO38/UQ+39amMj3IJ/wAs9FKF&#xA;EvblR1WqRmnzoRXJjt/J1iEcMlXSPIljpd79aF09weDIEZAn2xQnZm7ZHN2vLNHh4eH4uv7SkY4x&#xA;5lR/wxZQMQb6u+6iLenhXlTM+HtBID+7/wBl+x1nbvs2e1Djl4nBGA5cN3xV/SHd3LJtHtFWsTyS&#xA;HwIVf65OPtBk6xj8y6Yf8DnD/qsvkF+iWUZ1RGAYekC5VjXtQdh3OU6vtbJkxmJA37v7W6fsZpdF&#xA;WaM5ykDtfDX3NXVrp8V7LHJGQQxINSRQ7jYH3yr+U9SYgCW3uDtdF7JdnTgMhx8UjvvKXPrtdNSx&#xA;24hL26RhgP7ygqv8a5j/AJnLI1KUiO6y5mt7N0+mxGWHFihL+dwxFfZZPd5pYsSLvSp8Tl9vCEr6&#xA;064EK1hMPrSgNUUII+e/6xlWaPpej9n9RKOYRP0m/hf9gTfMF7pqIvbeq9qAksgJJ23PauSJ4qEu&#xA;QcY6aMBI44gTP3t2GoX1pYKkgDmIGgoWJFdumOXHCc7HVp0GGcMIjk+oMRmt7pmH7iQU8VPfN2Mk&#xA;e8OVTVrK0E8clPjhkWQKdieJrTDOPFEjvCvQbHXLO6t0m3j5dVPxUPhVa5zeXTShKl4SmEUkcq80&#xA;PJelcp4a5um7S7QlhkIR+pp+IahYA9hkhKhVNWHGdVWUmjHbl3bsd1mK6l1ItFC7rGAAVVjXbftm&#xA;bp5RENy7iQ3THRpHaAwujIVNRyBFa/MZTnIEr5uNqdMc0eG+FMxmIS5WOBjEAm6SYaldj9oH5gZl&#xA;eFFyOENjVLr/ACT9GDwQvAHSatdemxARSB9o129+uGOCNuHrskoYzwfV9g8yfJjr3LEnj95zYiL5&#xA;0ebobeac16L/ADH+GJkAhNYeccKwh2Ma9FJ2zFmBd9XrvZ3LMxMbBiPmP2H71e3uGgYsoBqKGuQd&#xA;3q9IM8QCapZLKXdpDsTuaY03YsYxQEegWwXczRJIsjDkoNAT3xnAA0x0+UZccZ/zgCri9ux0kP07&#xA;/ryHhx7m7hCPtE1We0nvOQW2gUlpHA3bsq06muVyjEGurTPJGMhHqUI2pTsvFgCPbkD+BGTGINvC&#xA;shuzEzMq1LdamvTJ04ur0Uc4FmqUHcu7OerGpp74XJxYxCIiOQaxZuVnRuUbFHpTkOtMNteXDDIK&#xA;kLCW3az+qXmYuzf7s8cviRWzZjhGEeGIoBDsCeuXQLznbmny5IGU5VAfTCO5lI8r/sQ0k9CQu9O+&#xA;XgPDzgYmjzDSw3M29DTxOwxsBimlhbrGQ3LjLSjhfssPke+YuYn4PV9gZMcp7Hgy9R0mPd3+7396&#xA;IvYrxole3iaRYnVpWUVCitBX5nKsPDZs9Hf9pTyDgEBZ4gfkiMpdm7FXYqiJtKk9ESuiuKVKkVIH&#xA;0jBHLRoOtx9q4ZZOD4X0KhHpzRIZo4OCNuxUUr70GSll4tibcgazDx8AkOJPNPAFnHTwJ/E5iz5v&#xA;KdqG9RL8dEZb6NFeXhkuQfRt0rIvTpvT6cj4hA2btDq544mMdt7JSO7gvAXuWAQM1SqGgUE7Cg6D&#xA;MiMgdnfabtDDklwRO/3oYXNwOkrfecPAO52FBeL+7HSQ/TQ/rweHHuXhCr+h9V/5ZJf+BOR8eHeG&#xA;vx4d4RVn5Z1G4ildh6DxiqxyAqX69DTIS1MB1ap6uMSOqM0vRLS7gay1Oxlhc/3d0vMV9m7fhTBL&#xA;UCJuMg4XaFTjXFcTzH9nRS07yZHaHUZb6MXLIhWxRByVuQIDcf5umx6fjk564GgDXe83+TNzlKP9&#xA;UDkl8mgarGsZ+rOwdeVFBPHcijeB2y0arGf4g4B0WUV6SsGjar/yyS/8CcB1OPvDtuzNHOMuLi8O&#xA;Y5dQR3Fd+h9V/wCWSX/gTkPHx94eujnjW5FoHWba9srF5J4XiD/u1ZgQKt/ZXL9POM50Dbru19bH&#xA;Hp5UfUdh8f2LdDs72709XggeVUJQsoJFRvT7iMOqnGM9zTV2HqonSxBO8bH4+DP9AtLuGzEF4Umt&#xA;HUFI3Uh0PdWVhuM1mXLAmwd2WpnEyuO0kde6baXNitiG9G2BHJY6AlV3oK+++QjnAN3u048soy4u&#xA;ZYTfaNd/W5Ra2kwtw1I6qSSBtX6euZkc8K3Idxjzx4RxEWjbbyhcy2pd5FimIDIp6EEbq1aMrDIH&#xA;VxBaMmuAOwtVl8rkW8ZCHlWrBTVqe/zyI1Qvm6ga7VRJlV307lNPL5SQP6LsAPssKivjidSO9qyd&#xA;oaqcOGq8wvutHnnj4iEqwIo3HpgjqIjq06LPmwz4qkR3JVd+XtQX4PQeVGHUKcvjqYd70ml1wyRu&#xA;Q4D5pXJ5a1jkV+qTFezBDWmZUNVi6yDru2dXk4KxRs/zttv6o535uj8s6nH9mwlr4lCTlp1mP+cH&#xA;ifyWb+bL5Kn6C1n/AJYpv+AOD83i/nBH5LN/Ml8kfp3lHUrpGZx9XdCKxzBkJHirUIynLrsY5G3Y&#xA;9n9nkm8gkPdsR7ujNbLRbSHTms5isjOvpyzKArOqklK07gGmayeoBlYeijkmK3JrvSa68sWdvFPc&#xA;MslxIzt9XtoNgFJPHkaHt1y2OqB2sOwhq5SIGw7yUh/Q+q/8skv/AAJy/wAeHeHN8eHeHfofVf8A&#xA;lkl/4E4jUY+8IOaH85PY7O7MSkwOCQKgg+GYxyxvm8Vl08xM0DzVo9OunVzw48RWjbV9hkfGj3sY&#xA;6bId6V/0SyXXpOS0TfZmQbAnoSMHjRrm2flJcVG67079G3KyA0rKAJKHrQUyvxB3uf4XPzY1rumz&#xA;KsiWsTSI4XiFBb2Nfurl+LNG9yx0en4dRE8ohj/6H1X/AJZJf+BOZPjw7w9P48O8O/Q+q/8ALJL/&#xA;AMCcfHh3hfHh3hgLXU6qT6jmn+Uf65shEOQQHLdTMKiVqf6xx4R3LQc8s7LQyP7fEcQApiEK09yp&#xA;IMj1H+Ucs4Q102t1cqaiV/8AgjjwDuWlZL2VtjIwP+scgYBmKVPrE/8Avxv+CODhCaCqjSMtXYt4&#xA;VJOXY4gPB+0ms8TMMY5Q+/8AZ+tTuWlEdUdlpvsSMZgOT7MZxc8Z/rD7j+hCJdTqwPqvTv8AEciY&#xA;h6+givrE/wDvxv8AgjkOEMqClNLcEchI9R1+I9MIAYmIUfrFx/v1/wDgjkuELQRKXU7KD6je/wAR&#xA;yBiEgBSke4XdZH49xyO2SACDENxXk/2Gkb2+I/diYBQA2zTH7Mrg/wCsaYKHcnhCk0t0vWR/nyOS&#xA;oIpy3d0vSV/lyOPAO5aVFv5/2nb5hjkfDDIEdyqt1K3SVj/sjkeAdzIAN/WJ/wDfjf8ABHHhC0Hf&#xA;WJ/9+N/wRx4QtB31if8A343/AARx4QtB3rz/AO/G/wCCOPCF4Q76xP8A78f/AII48IWgskedtxKw&#xA;b/WOEAIMAhzPcg0Mjg/6xyfCGFO+sXH+/X/4I48IWg4XNwDUSvt/lHHhHctIpbqdlBEjb/5RysxD&#xA;YAG/rE/+/G/4I48IWgy5fIdmY+Mt1IXI3KhQPuNcwvzZvk8vPt+ZO0RSAu/IV5DV7K4Wcf76ccGP&#xA;yO4/VlsdYDzFORg7dgT6417t0iubW5tZTFcRtFIOqsKZkRkCLDvcWaGSPFE2ENJHzG32h0yQLMi0&#xA;PQjY5Ng7ChVty5cLX4e9ewwcNuJrtZ4GIy5nkB3noj1KkVU1Htlr5rnhOMz4gIkdzfPdzgFSD0wS&#xA;5OT2ZPJHUROMXLu7+8fJKyKEjwyD6XGVgFXheq0PUZAhmFTAlDyR8TUfZPTJgsV8B2I98ElCrkWS&#xA;lJD3X7skCxIXRsSu/UbHAUhfgVRMaMSEO46jLCCACerRjzwnKUYnePNSIINCKHA2uxVUWdh13H44&#xA;DFkJKyurdDv4ZEhmC1InJad+2IKkKKyOhod6dQclTAEhWWRH26HwyJDIG13z+/Alp0VhQ/QcIKkW&#xA;h3jZDv07HJgtZFLcUKsDblfHcYJBnEprpWjXupylIFARf7yVtlX+32yjJlEBu42r1uPBG5c+gemZ&#xA;qngXYqhr7T7S+hMNzGHXsf2lPip7ZKEzE2G/T6meGXFA0wDXNDn0u4AJ527/AN1LT/hT75ssWUTH&#xA;m9noNfHUR7pDmPx0SiWLluPtfry8FziFDJNbaKzMFXqcLTqMsMUDklyimaKEUKOgyx8w1GeWXIZy&#xA;5yLmpxNdh3OK6czGSJh9d7e9LZEKOVPbofEZWX03SakZsYmOvTuPUNKxU1GByEzSwmew+uAfBX7P&#xA;fj0J+/BwmrcA9qYxqBg69/n3IUgEUPTIuxaRAlaGtcJKgNk0BPhgVTE69xTDSLVAwPQ1wJWyPwQn&#xA;v2yzFDilTia/U+DiMuvT3oaNyrhvvzPyQ4o08dodWcOYTPLr7vxuiyqsKHcZrXvOag8JXcbj8cIK&#xA;KUyaZfjxcTqu0O0xgIiBZ6+5sHuMqIrZ2WPIJxEo8iqJORs248e+RMWwSXugkHJdzgBpJFqGSYKi&#xA;TEbNuPxwEMhJWBBFRuMizV7azubt/St4mmbuFFdvfwyMpCPNry5oYxcyAEY/kzX+PNbcf6nNK/8A&#xA;EsgNVDvdae1tNf1fYf1JZNp1/bXKQTwPFM5ARWFORJpsehy4TiRYLl49TjlHiiQQHqOl6fFYWUVt&#xA;GB8A+Nh+0x+02abJPiNvFavUHNkMz1+5F5FxnYq7FUNqNhDf2cltMPhcfC3dWHRh8slCZibDkabU&#xA;SwzE49HmV1bS21xJbyikkTFWHyzbRkCLD32LKMkRKPIoaWLl8S/a/XkwUkN2asXJAoB1P8Msi8x7&#xA;R5YxxiJO55R/3x93Tz70bk3iHEAgg9DscWeOZhISHMG0skUq5U9tsrfUdLmjlxicf4t/x9yvp1k1&#xA;5dpCPs9ZD4KOuIFtPaGsGnwmfXp72ZiOMRiMKPTA4he1KUplz5wckjLiv1Xd+bF9QtDa3TR/sH4k&#xA;P+Scx5Ci+j9mawajCJ/xcj7/AMbobIuwdiqGkTi1O3bJgsVoJG42OKHSSMwAPbMvTR5l5nt/KeKM&#xA;PK1PMl55FwtWMe22a3PGpF7nsrLx6eN8xt8v2LyQASegysCzTm5MghEyPIC0Ex5MT45tYxoU+fZ8&#xA;xyTMzzLantmNqIdXoOwtTYOI9Nx+ldmK9E2rFTUGmKVxpJ02fw8cHJJ3VV03UWFVtZiD0IjYj9WD&#xA;jj3hoOoxjnKPzDrW0uZL2K1VSk0rqgVgR9o03BxlIVaZ5oxgZ3sA9U07TrbT7VbeBaAfabuzd2Oa&#xA;aczI2Xh9TqZ5pmUv7EVkXHWSQxSgCRA4Vgy8hWjKagjEEhnGZjyNL8WD1P8A5B//ANqn/p2ztv8A&#xA;A/8Aa/8AYtf73+l9rv8AkH//AGqf+nbH/BP9r/2K/vf6X2tf8g+/7VP/AE7Y/wCCf7X/ALFf3v8A&#xA;S+13/IPv+1T/ANO2P+Cf7X/sV/e/0vtUJf8AlWHqH1f0J6n7XP6pX6a5Iflenh/7Fycf5uvT4leX&#xA;Es/5BX/2ov8Apzw/4N/Q/wBiz/w3/bf9ksb/AJVHX4v0BX3+pVyQ8DpwfY4mbxeL95xcXnf6Vv8A&#xA;yCH/AL9//pyw/uP6H2NW7v8AkEP/AH7/AP05Y/uP6H2LuuX/AJVLT4f0BT2+p4D+X/ofY5eH8zw+&#xA;jj4fLir7F6f8qqr8H6Cr34/U/wCGI8DpwfYxzfmK/ecded/pX/8AIMP+1J/06ZL9x/R+xx/V5tH/&#xA;AJVb+1+g/p+qZE/l+vB9jkYfzFfu+P4X+hr/AJBX/wBqL/pzwf4N/Q/2Ld/hn+2/7J3/ACCv/tRf&#xA;9OeP+Df0P9iv+Gf7b/slrf8AKqf2v0F9P1PH/B/6H2L/AIZ/tv8Asmv+QTf9qH/pzx/wf+h9i/4Z&#xA;/tv+yUpf+VO8v3v+HuVNuX1GtPpycfB6cP2NGXx79fHfna0f8qY7f4c/6ccl+6/o/Y1/vP6X2q0X&#xA;/KpeH7n9AcK/sfU6V+jK5eBe/B9jfi/M16PEry4lz/8AKqOB5/oHh+1y+p0p71xH5e9uD7GU/wA3&#xA;Xq8Sv85D/wDIGf8Av3P+nHLP3X9H7HG/ef0vtXR/8qd5fu/8Pcv8n6jX8MEvBrfh+xnj8a/TxX5W&#xA;q/8AIJv+1D/055X/AIP/AEPscj/DP9t/2Tv+QTf9qH/pzx/wf+h9i/4Z/tv+yXxf8qs9Qel+g/U/&#xA;Z4fU+X0UwH8tW/B/sWM/zVerxK8+JE/8g+/7VP8A07ZD/BP9r/2Ljfvf6X2rH/5VvzT1P0Pzr+75&#xA;fVa1/wAmuEflP9r/ANizj49GuOuvNf8A8g+/7VP/AE7YP8E/2v8A2LD97/S+1v8A5B//ANqn/p2x&#xA;/wAD/wBr/wBiv73+l9rv+Qf/APap/wCnbH/A/wDa/wDYr+9/pfa7/kH/AP2qf+nbH/A/9r/2K/vf&#xA;6X2v/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:1a3b5f87-fc92-d740-b524-2a62ac205f20</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:1a3b5f87-fc92-d740-b524-2a62ac205f20</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:7e97d687-2097-b44a-8c3c-a0b433af3d62</stRef:instanceID>
            <stRef:documentID>xmp.did:7e97d687-2097-b44a-8c3c-a0b433af3d62</stRef:documentID>
            <stRef:originalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:385db32f-64e0-d74d-8e4a-0b6d2f5d89af</stEvt:instanceID>
                  <stEvt:when>2016-07-27T22:36:50+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7511520f-f43b-ce43-915e-11a4989038de</stEvt:instanceID>
                  <stEvt:when>2016-07-27T22:37:09+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:f40434ad-9f8c-3c4c-8bb5-9be8ffa40072</stEvt:instanceID>
                  <stEvt:when>2016-07-28T11:23:30+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:c435ad63-e9b1-3b4e-926b-3cd791162082</stEvt:instanceID>
                  <stEvt:when>2016-07-28T11:23:40+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7e97d687-2097-b44a-8c3c-a0b433af3d62</stEvt:instanceID>
                  <stEvt:when>2016-07-28T16:54:22+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1a3b5f87-fc92-d740-b524-2a62ac205f20</stEvt:instanceID>
                  <stEvt:when>2016-07-31T22:49:13+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>900.000000</stDim:w>
            <stDim:h>480.000088</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -480 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 480 li
900 480 li
900 0 li
cp
clp
0 0 mo
0 313.109 li
900 313.109 li
900 0 li
0 0 li
false sop
/0 
[/DeviceRGB] /CSA add_res
.643137 .984314 .513726 rgb
f
2.47814 287.172 mo
900 287.172 li
900 222.155 li
2.47814 222.155 li
2.47814 287.172 li
.988235 .988235 .658824 rgb
f
0 214.085 mo
900 214.085 li
900 190.146 li
0 190.146 li
0 214.085 li
f
0 0 mo
0 73.4185 li
900 73.4185 li
900 0 li
0 0 li
.14902 .866667 .588235 rgb
f
0 95.1731 mo
900 95.1731 li
900 80.9595 li
0 80.9595 li
0 95.1731 li
f
0 110.622 mo
900 110.622 li
900 105.706 li
0 105.706 li
0 110.622 li
f
408.444 142.544 mo
408.444 142.544 532.335 145.083 610.582 145.083 cv
699.732 145.083 812.724 142.544 812.724 142.544 cv
812.724 142.544 692.475 140.006 610.582 140.006 cv
528.693 140.006 408.444 142.544 408.444 142.544 cv
.988235 .988235 .658824 rgb
f
74.712 120.625 mo
74.712 120.625 264.422 124.798 384.24 124.798 cv
520.753 124.798 693.774 120.625 693.774 120.625 cv
693.774 120.625 509.64 116.452 384.24 116.452 cv
258.846 116.452 74.712 120.625 74.712 120.625 cv
f
567.67 66.2811 mo
447.788 66.2523 259.385 62.108 259.385 62.108 cv
259.385 62.108 436.763 58.0878 561.889 57.9391 cv
563.304 60.8326 565.234 63.5055 567.319 65.8852 cv
567.319 65.8852 li
567.436 66.0181 567.552 66.1496 567.67 66.2811 cv
656.111 65.8228 mo
655.891 65.5647 655.67 65.3067 655.45 65.0486 cv
658.778 63.1119 662.112 61.1857 665.474 59.3099 cv
665.932 59.0546 666.395 58.8018 666.863 58.5501 cv
672.955 58.6169 679.049 58.6879 685.121 58.7622 cv
685.101 61.0121 685.081 63.2629 685.061 65.5128 cv
675.488 65.6257 665.811 65.73 656.111 65.8228 cv
713.969 65.143 mo
713.913 63.1409 713.857 61.1413 713.801 59.1391 cv
758.263 59.7617 799.807 60.5126 830.043 61.1035 cv
830.027 61.7893 830.011 62.4746 829.995 63.1604 cv
800.105 63.765 758.949 64.5246 713.969 65.143 cv
842.652 62.9 mo
842.655 62.3983 842.658 61.897 842.66 61.3955 cv
842.66 61.3815 842.66 61.3676 842.66 61.3536 cv
864.907 61.8011 878.447 62.108 878.447 62.108 cv
878.447 62.108 865.001 62.4323 842.652 62.9 cv
.447059 .937255 .545098 rgb
f
382.896 170.644 mo
382.896 170.644 235.39 168.106 142.228 168.106 cv
95.6981 168.106 43.7156 168.593 0 169.141 cv
0 172.103 li
45.1785 172.669 98.3297 173.183 142.228 173.183 cv
239.726 173.183 382.896 170.644 382.896 170.644 cv
.988235 .988235 .658824 rgb
f
801.555 170.644 mo
801.555 170.644 844.832 171.412 900 172.103 cv
900 169.141 li
843.992 169.843 801.555 170.644 801.555 170.644 cv
f
181.719 41.787 mo
150.566 41.787 108.789 40.4415 88.3649 39.7094 cv
88.3739 39.3942 88.3807 39.0784 88.3855 38.763 cv
108.151 38.0261 148.166 36.7093 181.719 36.7093 cv
183.289 36.7093 184.893 36.713 186.528 36.7202 cv
186.414 41.7773 li
184.825 41.7837 183.26 41.787 181.719 41.787 cv
199.494 41.6663 mo
199.417 37.8164 li
199.417 37.8164 li
199.417 37.8164 li
199.417 37.8164 199.417 37.8164 199.417 37.8164 cv
199.398 36.836 li
199.752 36.8406 200.111 36.8453 200.467 36.8502 cv
201.873 38.3516 203.685 39.9883 205.583 41.5809 cv
203.54 41.6126 201.509 41.6412 199.494 41.6663 cv
238.056 40.8754 mo
238.069 39.7029 237.877 38.5895 237.479 37.6273 cv
264.558 38.3542 287.354 39.248 287.354 39.248 cv
287.354 39.248 265.096 40.1472 238.056 40.8754 cv
.447059 .937255 .545098 rgb
f
240.452 104.454 mo
235.842 114.128 li
213.161 121.915 li
217.361 113.839 li
193.841 113.839 li
224.558 106.32 li
112.576 50.7814 li
91.7782 70.8647 li
106.898 75.191 li
61.5375 93.6498 li
75.1879 95.6686 li
56.9174 104.249 li
56.9174 104.249 98.0785 100.572 98.6032 100.572 cv
99.1284 100.572 30.4568 123.645 28.1465 124.511 cv
25.8367 125.376 74.5579 131.433 75.1879 131.433 cv
75.7374 131.433 15.4278 147.886 0 152.093 cv
0 323.249 li
648.19 319.715 li
240.452 104.454 li
.0941176 .835294 .54902 rgb
f
199.437 112.47 mo
199.437 112.469 li
206.983 110.622 li
206.983 110.622 li
199.437 112.47 li
.607843 .882353 .498039 rgb
f
206.983 110.622 mo
206.983 110.622 li
224.558 106.32 li
206.983 110.622 li
.141176 .776471 .572549 rgb
f
477.53 280.747 mo
473.792 275.736 469.914 270.734 469.914 270.734 cv
469.914 270.734 468.796 272.177 467.184 274.286 cv
463.019 262.001 457.795 247.401 457.795 247.401 cv
457.795 247.401 452.486 262.234 448.306 274.578 cv
440.561 271.954 437.205 268.251 429.191 268.251 cv
428.007 268.251 426.722 268.332 425.307 268.508 cv
422.332 268.88 419.962 269.623 417.902 270.612 cv
413.657 260.714 407.89 248.068 407.89 248.068 cv
407.89 248.068 400.599 264.053 396.377 274.145 cv
394.062 273.438 391.562 273.121 388.94 273.121 cv
386.354 273.121 383.65 273.429 380.888 273.977 cv
386.038 248.216 395.017 217.063 410.415 194.184 cv
511.776 247.696 li
511.754 247.785 511.732 247.873 511.71 247.961 cv
511.109 250.374 510.426 252.835 509.813 255.176 cv
509.702 255.174 509.59 255.173 509.479 255.173 cv
505.277 255.173 500.714 256.663 497.034 258.241 cv
494.62 251.354 492.728 246.068 492.728 246.068 cv
492.728 246.068 488.44 258.051 484.536 269.439 cv
482.328 273.152 480.536 277.119 477.53 280.747 cv
354.845 164.847 mo
344.808 164.014 334.054 163.161 322.725 162.298 cv
322.725 160.003 li
326.089 160.003 li
319.019 145.933 li
354.845 164.847 li
301.6 160.725 mo
301.071 160.686 300.538 160.647 300.007 160.609 cv
309.174 141.402 li
301.835 159.61 li
301.835 160.679 li
301.757 160.694 301.678 160.71 301.6 160.725 cv
270.602 158.53 mo
268.841 158.409 267.079 158.288 265.305 158.167 cv
259.994 155.755 256.278 150.817 252.639 145.343 cv
254.802 146.262 257.004 146.856 259.215 147.352 cv
259.215 147.352 li
259.215 147.352 li
255.05 142.962 251.266 137.836 248.459 131.948 cv
250.465 133.579 252.591 134.861 254.743 136.065 cv
254.743 136.065 li
254.743 136.065 li
250.395 130.747 246.565 124.573 244.326 117.526 cv
247.158 118.283 249.958 119.394 252.676 120.829 cv
252.676 120.829 li
252.676 120.829 li
250.069 116.393 247.662 111.767 245.415 107.075 cv
280.982 125.852 li
279.812 128.061 278.929 129.428 278.929 129.428 cv
278.929 129.428 li
278.929 129.428 li
279.035 129.495 279.142 129.561 279.251 129.624 cv
280.521 130.361 281.996 130.825 283.571 131.088 cv
282.783 136.437 li
282.294 136.484 li
282.294 136.484 li
278.688 143.284 li
278.688 143.284 li
270.602 158.53 li
260.436 157.836 mo
258.651 157.715 256.85 157.593 255.054 157.473 cv
254.756 156.767 254.468 156.056 254.19 155.338 cv
256.248 156.511 258.329 157.367 260.436 157.836 cv
143.998 142.917 mo
143.586 142.473 143.178 142.024 142.777 141.57 cv
143.231 141.887 143.69 142.196 144.152 142.497 cv
144.101 142.637 144.049 142.777 143.998 142.917 cv
297.026 135.061 mo
296.966 134.325 li
296.963 134.289 li
298.21 134.947 li
297.026 135.061 li
157.468 132.712 mo
155.522 123.587 153.933 116.354 153.933 116.354 cv
153.933 116.354 153.551 117.358 152.898 119.084 cv
147.704 113.18 144.095 106.508 141.265 99.3992 cv
143.691 100.227 146.174 101.18 148.551 102.471 cv
148.551 102.471 li
148.551 102.471 li
141.164 94.0074 138.315 81.7972 136.854 70.7872 cv
136.482 68.0134 136.198 65.2144 136.005 62.4014 cv
174.845 81.6644 li
172.044 94.7361 168.646 110.696 165.647 125.066 cv
162.734 127.342 159.942 129.964 157.468 132.712 cv
149.539 128.004 mo
146.717 123.619 144.581 118.862 142.992 113.868 cv
146.039 116.017 149.32 117.809 152.794 119.36 cv
152.007 121.441 150.865 124.468 149.539 128.004 cv
199.355 119.001 mo
199.42 113.839 li
211.387 113.839 li
206.973 114.77 202.721 116.481 199.355 119.001 cv
184.703 117.518 mo
184.673 117.513 184.643 117.509 184.614 117.504 cv
183.959 106.646 183.255 95.4207 182.624 85.5224 cv
185.395 86.8966 li
184.703 117.518 li
199.437 112.469 mo
199.598 99.4929 li
199.598 99.4929 li
199.656 94.8093 li
199.656 94.8093 li
199.656 94.8092 li
199.656 94.8093 199.656 94.8093 199.656 94.8093 cv
199.667 93.9751 li
224.558 106.32 li
206.983 110.622 li
199.437 112.469 li
.0901961 .74902 .533333 rgb
f
28.1465 124.511 mo
30.4568 123.645 99.1284 100.572 98.6032 100.572 cv
98.0785 100.572 56.9174 104.249 56.9174 104.249 cv
75.1879 95.6686 li
61.5375 93.6498 li
106.898 75.191 li
91.7782 70.8647 li
112.576 50.7814 li
0 111.766 li
0 152.093 li
15.4278 147.886 75.7374 131.433 75.1879 131.433 cv
74.5579 131.433 25.8367 125.376 28.1465 124.511 cv
1 1 1 rgb
f
225.762 106.917 mo
240.042 104.249 li
240.452 104.454 li
241.544 102.163 li
224.558 106.32 li
225.762 106.917 li
cp
.752941 .92549 .980392 rgb
f
225.762 106.917 mo
224.558 106.32 li
193.841 113.839 li
217.361 113.839 li
213.161 121.915 li
235.842 114.128 li
240.452 104.454 li
240.042 104.249 li
225.762 106.917 li
cp
1 1 1 rgb
f
896.436 144.123 mo
896.436 144.123 828.792 160.971 792.28 170.119 cv
407.789 325.933 li
900 323.249 li
900 152.093 li
897.739 152.709 896.436 153.064 896.436 153.064 cv
896.436 144.123 li
.0941176 .835294 .54902 rgb
f
761.032 185.619 mo
761.721 185.89 762.416 186.146 763.106 186.412 cv
762.979 185.63 762.011 185.619 761.032 185.619 cv
.984314 .803922 .329412 rgb
f
519.516 295.506 mo
511.664 299.072 507.234 301.152 507.234 301.152 cv
519.516 295.506 li
1 1 1 rgb
f
761.032 185.619 mo
762.011 185.619 762.979 185.63 763.106 186.412 cv
762.416 186.146 761.721 185.89 761.032 185.619 cv
792.28 170.119 mo
519.516 295.506 li
563.756 275.41 716.788 208.026 800.285 198.346 cv
792.017 196.12 783.839 193.687 775.784 190.971 cv
814.876 178.332 852.421 162.477 889.2 145.926 cv
870.792 150.512 821.542 162.788 792.28 170.119 cv
f
792.28 170.119 mo
828.792 160.971 896.436 144.123 896.436 144.123 cv
896.436 153.064 li
896.436 153.064 897.739 152.709 900 152.093 cv
900 111.766 li
792.28 170.119 li
f
883.616 204.561 mo
880.878 207.045 878.286 209.865 876.021 212.788 cv
873.409 203.83 871.293 196.734 871.293 196.734 cv
871.293 196.734 866.619 212.409 862.588 226.581 cv
857.313 222.919 851.059 221.125 844.577 220.771 cv
841.385 209.748 838.498 200.068 838.498 200.068 cv
838.498 200.068 835.443 210.314 832.142 221.728 cv
827.621 222.635 823.225 224.105 819.214 225.999 cv
816.729 220.09 811.696 218.224 806.202 218.591 cv
801.983 210.323 796.436 200.068 796.436 200.068 cv
796.436 200.068 794.45 203.739 791.952 208.457 cv
788.208 201.596 784.316 194.734 784.316 194.734 cv
784.316 194.734 782.074 198.686 779.358 203.587 cv
776.942 196.694 775.048 191.401 775.048 191.401 cv
775.048 191.401 772.842 197.564 770.154 205.252 cv
765.994 179.39 760.789 148.734 760.789 148.734 cv
760.789 148.734 755.832 177.933 751.725 203.378 cv
749.228 197.017 747.244 192.067 747.244 192.067 cv
747.244 192.067 745.303 196.906 742.847 203.16 cv
740.17 197.742 737.976 193.401 737.976 193.401 cv
737.976 193.401 736.051 197.207 733.61 202.137 cv
730.32 191.199 727.281 181.401 727.281 181.401 cv
727.281 181.401 726.625 183.519 725.593 186.878 cv
721.867 159.739 718.014 132.734 718.014 132.734 cv
718.014 132.734 713.478 164.514 709.49 193.77 cv
709.472 193.599 709.451 193.417 709.433 193.25 cv
709.175 190.888 708.983 188.928 708.875 187.556 cv
708.761 186.185 708.745 185.401 708.745 185.401 cv
708.745 185.401 708.428 186.13 707.951 187.445 cv
707.471 188.758 706.819 190.648 706.064 192.935 cv
704.553 197.509 702.626 203.665 700.743 209.953 cv
700.677 210.172 li
700.492 209.155 700.306 208.132 700.124 207.134 cv
699.868 205.533 699.697 203.965 699.488 202.446 cv
699.088 199.396 698.717 196.566 698.4 194.15 cv
697.76 189.277 697.338 186.068 697.338 186.068 cv
697.338 186.068 696.42 189.177 695.026 193.898 cv
694.332 196.278 693.52 199.065 692.644 202.069 cv
692.219 203.578 691.732 205.143 691.321 206.746 cv
690.948 208.353 690.567 209.992 690.185 211.638 cv
690.134 211.857 li
689.347 205.945 688.78 200.368 688.444 195.988 cv
688.257 193.408 688.236 191.27 688.16 189.764 cv
688.103 188.256 688.07 187.401 688.07 187.401 cv
688.07 187.401 687.789 188.212 687.293 189.642 cv
686.816 191.076 686.041 193.135 685.266 195.66 cv
683.832 200.39 682.092 206.793 680.565 213.402 cv
680.448 213.045 680.33 212.686 680.213 212.331 cv
677.611 204.671 675.29 197.251 673.799 191.57 cv
673.37 190.155 673.142 188.854 672.881 187.697 cv
672.632 186.536 672.414 185.525 672.236 184.694 cv
671.877 183.02 671.673 182.067 671.673 182.067 cv
671.673 182.067 671.54 183.026 671.305 184.713 cv
671.189 185.562 671.047 186.595 670.884 187.782 cv
670.733 188.972 670.499 190.331 670.422 191.802 cv
669.891 197.7 669.567 205.747 669.49 213.769 cv
669.455 215.544 669.423 217.315 669.387 219.069 cv
669.036 219.06 668.688 219.074 668.339 219.075 cv
668.238 218.591 668.135 218.097 668.035 217.618 cv
667.71 215.992 667.465 214.399 667.187 212.849 cv
666.593 209.746 666.309 206.869 665.965 204.376 cv
665.779 203.129 665.712 201.995 665.633 200.984 cv
665.555 199.97 665.487 199.087 665.431 198.361 cv
665.32 196.899 665.257 196.068 665.257 196.068 cv
665.257 196.068 664.985 196.858 664.508 198.249 cv
664.269 198.949 663.979 199.801 663.645 200.78 cv
663.312 201.763 662.914 202.877 662.592 204.108 cv
661.92 206.565 661.013 209.472 660.336 212.631 cv
660.126 213.555 659.902 214.508 659.68 215.472 cv
658.256 210.35 656.812 205.597 655.795 201.836 cv
655.157 199.511 654.658 197.573 654.347 196.211 cv
654.03 194.844 653.85 194.067 653.85 194.067 cv
653.85 194.067 653.693 194.85 653.416 196.226 cv
653.135 197.607 652.789 199.595 652.414 201.999 cv
651.648 206.803 650.87 213.297 649.869 219.695 cv
649.643 221.201 649.391 222.693 649.121 224.157 cv
648.37 224.57 647.629 225.004 646.899 225.462 cv
646.094 221.109 645.331 217.058 644.821 213.806 cv
644.458 211.685 644.296 209.931 644.117 208.686 cv
643.959 207.442 643.869 206.734 643.869 206.734 cv
643.869 206.734 643.624 207.406 643.192 208.587 cv
642.782 209.771 642.098 211.479 641.445 213.56 cv
640.41 216.709 639.229 220.741 638.003 224.956 cv
636.956 221.081 635.939 217.485 635.215 214.601 cv
634.721 212.65 634.363 211.027 634.157 209.88 cv
633.948 208.735 633.888 208.068 633.888 208.068 cv
633.888 208.068 633.825 208.224 633.708 208.518 cv
633.584 208.813 633.424 209.25 633.228 209.815 cv
632.842 210.945 632.352 212.588 631.83 214.577 cv
630.801 218.466 629.64 223.68 628.367 228.881 cv
628.274 228.574 628.183 228.265 628.09 227.961 cv
626.432 222.575 624.719 217.278 623.651 213.339 cv
622.516 209.357 621.768 206.734 621.768 206.734 cv
621.768 206.734 621.172 209.392 620.268 213.427 cv
619.99 214.606 619.71 215.909 619.427 217.286 cv
618.271 212.579 617.49 209.401 617.49 209.401 cv
617.49 209.401 615.801 216.53 613.73 225.271 cv
613.565 224.658 613.399 224.045 613.23 223.418 cv
612.293 220.048 611.377 216.492 610.322 213.037 cv
608.191 206.13 606.087 199.383 604.473 194.384 cv
602.865 189.37 601.806 186.068 601.806 186.068 cv
601.806 186.068 600.693 199.787 599.54 214.01 cv
599.304 216.809 598.976 219.597 598.682 222.3 cv
597.195 214.862 596.102 209.401 596.102 209.401 cv
596.102 209.401 593.277 221.777 590.348 234.606 cv
589.945 236.406 589.542 238.216 589.146 240.005 cv
588.812 237.336 588.489 234.821 588.206 232.785 cv
587.809 229.941 587.547 228.068 587.547 228.068 cv
587.547 228.068 584.569 232.62 581.028 238.034 cv
580.725 235.444 580.495 233.012 580.307 230.934 cv
579.944 226.794 579.705 224.068 579.705 224.068 cv
579.705 224.068 578.615 226.61 576.958 230.47 cv
575.372 234.225 573.29 239.261 571.535 244.706 cv
571.008 243.067 570.472 241.397 569.94 239.727 cv
566.927 229.042 564.021 218.734 564.021 218.734 cv
564.021 218.734 561.56 229.133 559.117 240.154 cv
558.633 242.761 558.163 245.403 557.729 247.938 cv
554.703 236.297 551.188 223.401 551.188 223.401 cv
551.188 223.401 548.118 234.664 545.246 245.64 cv
542.149 230.117 538.355 212.068 538.355 212.068 cv
538.355 212.068 531.539 244.497 528.72 259.8 cv
527.703 260.28 526.704 260.667 525.728 260.917 cv
525.341 259.3 524.927 257.566 524.496 255.76 cv
523.869 253.221 523.254 250.579 522.543 247.924 cv
521.099 242.612 519.726 237.459 518.359 233.654 cv
517.09 229.884 516.255 227.401 516.255 227.401 cv
516.255 227.401 515.748 229.957 514.98 233.837 cv
514.314 237.675 512.975 242.808 511.71 247.961 cv
511.109 250.374 510.426 252.835 509.813 255.176 cv
505.521 255.093 500.812 256.621 497.034 258.241 cv
494.62 251.354 492.728 246.068 492.728 246.068 cv
492.728 246.068 488.44 258.051 484.536 269.439 cv
482.328 273.152 480.536 277.119 477.53 280.747 cv
473.792 275.736 469.914 270.734 469.914 270.734 cv
469.914 270.734 468.796 272.177 467.184 274.286 cv
463.019 262.001 457.795 247.401 457.795 247.401 cv
457.795 247.401 452.486 262.234 448.306 274.578 cv
439.418 271.567 436.31 267.134 425.307 268.508 cv
422.332 268.88 419.962 269.623 417.902 270.612 cv
413.657 260.714 407.89 248.068 407.89 248.068 cv
407.89 248.068 400.599 264.053 396.377 274.145 cv
383.935 270.346 366.149 277.803 352.827 285.261 cv
341.977 291.334 334.088 297.407 334.457 297.401 cv
324.565 322.741 li
900 307.325 li
900 181.055 li
896.606 156.185 893.394 133.401 893.394 133.401 cv
893.394 133.401 887.836 172.823 883.616 204.561 cv
.0470588 .615686 .52549 rgb
f
246.266 143.88 mo
243.687 130.912 242.69 117.27 226.192 113.687 cv
214.772 111.207 197.315 115.393 193.2 127.03 cv
191.783 120.955 188.629 118.107 184.614 117.504 cv
182.808 87.5553 180.628 54.8162 180.628 54.8162 cv
180.628 54.8162 172.188 93.7235 165.647 125.066 cv
162.734 127.342 159.942 129.964 157.468 132.712 cv
155.522 123.587 153.933 116.354 153.933 116.354 cv
153.933 116.354 148.119 131.643 143.058 145.481 cv
138.066 141.441 131.961 139.192 125.523 138.363 cv
123.149 127.135 120.982 117.269 120.982 117.269 cv
120.982 117.269 117.181 127.263 113.051 138.404 cv
108.476 138.976 103.983 140.119 99.8444 141.713 cv
97.8 135.637 92.9181 133.407 87.4114 133.369 cv
83.8112 124.813 79.0329 114.178 79.0329 114.178 cv
79.0329 114.178 76.7823 117.694 73.9444 122.215 cv
70.7151 115.098 67.3378 107.968 67.3378 107.968 cv
67.3378 107.968 64.8112 111.745 61.7427 116.434 cv
59.8396 109.382 58.3395 103.963 58.3395 103.963 cv
58.3395 103.963 55.687 109.948 52.4417 117.417 cv
50.1925 91.3195 47.2547 60.3641 47.2547 60.3641 cv
47.2547 60.3641 40.165 89.1196 34.1996 114.194 cv
32.1772 107.667 30.5616 102.585 30.5616 102.585 cv
30.5616 102.585 28.2709 107.268 25.3617 113.325 cv
23.0904 107.725 21.2206 103.234 21.2206 103.234 cv
21.2206 103.234 19.0219 106.888 16.2247 111.625 cv
13.7477 100.475 11.4372 90.4802 11.4372 90.4802 cv
11.4372 90.4802 10.6265 92.5445 9.35086 95.8189 cv
7.62907 68.4796 5.7703 41.2643 5.7703 41.2643 cv
5.7703 41.2643 3.29938 52.5629 0 67.8375 cv
0 262.114 li
246.198 262.114 li
246.266 143.88 li
f
892.785 101.508 mo
892.779 101.337 892.772 101.153 892.766 100.986 cv
892.682 98.6113 892.636 96.6419 892.628 95.2664 cv
892.615 93.8912 892.657 93.1075 892.657 93.1075 cv
892.657 93.1075 892.287 93.8112 891.715 95.0873 cv
891.139 96.3616 890.35 98.1992 889.429 100.424 cv
887.587 104.875 885.212 110.873 882.872 117.006 cv
882.791 117.219 li
882.681 116.191 882.57 115.157 882.462 114.148 cv
882.324 112.533 882.269 110.957 882.172 109.426 cv
881.998 106.355 881.836 103.506 881.697 101.072 cv
881.417 96.1658 881.232 92.9341 881.232 92.9341 cv
881.232 92.9341 880.088 95.9676 878.35 100.573 cv
877.484 102.896 876.469 105.616 875.375 108.548 cv
874.84 110.021 874.24 111.546 873.711 113.114 cv
873.221 114.69 872.721 116.296 872.219 117.909 cv
872.153 118.125 li
871.802 112.171 871.646 106.567 871.633 102.174 cv
871.635 99.5869 871.772 97.4544 871.806 95.9457 cv
871.86 94.438 871.891 93.5827 871.891 93.5827 cv
871.891 93.5827 871.551 94.3708 870.951 95.7603 cv
870.37 97.1565 869.446 99.1523 868.488 101.613 cv
866.71 106.226 864.504 112.483 862.495 118.962 cv
862.405 118.597 862.314 118.231 862.223 117.868 cv
860.191 110.038 858.422 102.467 857.352 96.6921 cv
857.028 95.2493 856.897 93.9353 856.721 92.7621 cv
856.558 91.5856 856.415 90.562 856.298 89.7201 cv
856.063 88.0233 855.93 87.059 855.93 87.059 cv
855.93 87.059 855.726 88.005 855.369 89.6696 cv
855.19 90.5084 854.973 91.5277 854.723 92.6997 cv
854.485 93.8756 854.152 95.2135 853.967 96.6753 cv
853.004 102.518 852.089 110.52 851.424 118.515 cv
851.259 120.282 851.096 122.046 850.931 123.793 cv
850.582 123.758 850.234 123.745 849.885 123.721 cv
849.82 123.231 849.754 122.731 849.69 122.246 cv
849.485 120.6 849.358 118.994 849.195 117.428 cv
848.829 114.29 848.758 111.399 848.598 108.888 cv
848.504 107.63 848.52 106.494 848.516 105.48 cv
848.513 104.463 848.51 103.578 848.508 102.85 cv
848.504 101.383 848.502 100.55 848.502 100.55 cv
848.502 100.55 848.174 101.318 847.595 102.67 cv
847.306 103.351 846.953 104.179 846.549 105.131 cv
846.145 106.086 845.665 107.169 845.254 108.372 cv
844.403 110.773 843.286 113.606 842.378 116.707 cv
842.101 117.613 841.807 118.547 841.515 119.492 cv
840.471 114.28 839.38 109.433 838.642 105.607 cv
838.177 103.242 837.822 101.272 837.611 99.8908 cv
837.396 98.505 837.273 97.7168 837.273 97.7168 cv
837.273 97.7168 837.059 98.4856 836.682 99.8381 cv
836.3 101.194 835.809 103.151 835.259 105.521 cv
834.141 110.256 832.889 116.675 831.42 122.983 cv
831.084 124.467 830.723 125.937 830.346 127.378 cv
829.567 127.734 828.796 128.113 828.034 128.516 cv
827.552 124.115 827.088 120.019 826.818 116.738 cv
826.612 114.596 826.579 112.835 826.493 111.581 cv
826.426 110.328 826.388 109.616 826.388 109.616 cv
826.388 109.616 826.095 110.267 825.578 111.414 cv
825.081 112.565 824.274 114.218 823.47 116.245 cv
822.207 119.31 820.732 123.243 819.199 127.358 cv
818.44 123.415 817.69 119.755 817.18 116.825 cv
816.831 114.844 816.593 113.198 816.471 112.04 cv
816.347 110.882 816.336 110.212 816.336 110.212 cv
816.336 110.212 816.263 110.363 816.124 110.648 cv
815.978 110.933 815.787 111.357 815.55 111.907 cv
815.082 113.005 814.473 114.607 813.806 116.553 cv
812.494 120.356 810.953 125.471 809.301 130.563 cv
809.231 130.251 809.163 129.936 809.092 129.626 cv
807.835 124.133 806.515 118.724 805.741 114.717 cv
804.901 110.662 804.347 107.992 804.347 107.992 cv
804.347 107.992 803.558 110.598 802.359 114.556 cv
801.996 115.712 801.62 116.991 801.237 118.343 cv
800.43 113.564 799.886 110.337 799.886 110.337 cv
799.886 110.337 797.677 117.323 794.969 125.888 cv
794.849 125.264 794.729 124.641 794.607 124.003 cv
793.919 120.573 793.267 116.96 792.47 113.437 cv
790.852 106.391 789.249 99.5082 788.007 94.4042 cv
786.772 89.2855 785.958 85.9142 785.958 85.9142 cv
785.958 85.9142 783.84 99.515 781.644 113.614 cv
781.203 116.389 780.672 119.145 780.18 121.819 cv
779.243 114.292 778.555 108.765 778.555 108.765 cv
778.555 108.765 774.828 120.9 770.965 133.48 cv
770.43 135.245 769.895 137.02 769.368 138.776 cv
769.232 136.09 769.095 133.557 768.962 131.506 cv
768.775 128.64 768.652 126.753 768.652 126.753 cv
768.652 126.753 765.347 131.074 761.418 136.213 cv
761.306 133.608 758.202 120.625 758.202 120.625 cv
753.313 133.668 li
746.404 130.667 li
746.404 130.667 734.381 155.735 734.61 172.333 cv
735.071 205.586 747.899 236.104 747.433 262.114 cv
900 262.114 li
900 67.8375 li
897.801 78.0163 895.235 89.958 892.785 101.508 cv
f
180.218 164.51 mo
164.262 160.136 152.098 152.09 142.777 141.57 cv
149.303 146.112 156.611 149.118 165.063 150.346 cv
157.856 146.484 152.651 141.386 148.781 135.056 cv
153.35 138.457 158.518 140.903 164.188 142.823 cv
153.139 135.5 146.632 125.305 142.992 113.868 cv
146.208 116.136 149.684 118.006 153.372 119.615 cv
147.922 113.581 144.18 106.722 141.265 99.3992 cv
143.691 100.227 146.174 101.18 148.551 102.471 cv
141.164 94.0074 138.315 81.7972 136.854 70.7872 cv
135.956 64.0862 135.57 57.2364 135.741 50.4045 cv
133.563 61.6869 127.776 71.9223 121.614 81.1823 cv
117.744 87.0511 113.433 92.8761 108.602 98.479 cv
112.679 97.2953 116.727 96.6 120.752 96.3907 cv
116.704 105.081 110.215 112.369 102.547 118.644 cv
106.06 117.491 109.506 116.241 112.76 114.527 cv
107.72 121.731 100.96 127.894 93.3391 133.184 cv
97.0125 132.91 100.692 132.5 104.33 131.654 cv
97.6459 138.391 90.4908 144.654 80.8602 147.251 cv
87.2663 148.241 93.9072 147.223 100.396 144.926 cv
97.6968 149.375 94.531 153.642 91.1413 157.907 cv
97.0736 155.022 102.777 151.956 107.935 148.322 cv
102.574 156.642 92.9852 163.976 82.9451 168.016 cv
87.6198 168.166 92.4217 167.476 97.1205 166.318 cv
91.0482 171.225 84.5126 175.659 77.1482 179.248 cv
111.695 177.659 147.063 175.601 183.243 173.051 cv
172.688 170.368 162.707 166.334 154.536 161.288 cv
162.781 163.518 171.38 164.491 180.218 164.51 cv
.643137 .588235 .172549 rgb
f
265.369 158.196 mo
260.024 155.795 256.293 150.839 252.639 145.343 cv
254.802 146.262 257.004 146.856 259.215 147.352 cv
255.05 142.962 251.266 137.836 248.459 131.948 cv
250.465 133.579 252.591 134.861 254.743 136.065 cv
250.395 130.747 246.565 124.573 244.326 117.526 cv
247.158 118.283 249.958 119.394 252.676 120.829 cv
249.914 116.129 247.377 111.217 245.016 106.237 cv
241.313 98.4241 237.32 89.552 236.488 80.7083 cv
235.888 85.7279 234.961 90.6902 233.846 95.5388 cv
232.006 103.543 229.575 112.433 224.745 118.204 cv
226.349 117.497 228.069 117.095 229.768 116.796 cv
227.729 122.138 225.406 127.165 222.28 131.566 cv
224.532 130.614 226.692 129.468 228.748 128.023 cv
226.58 136.748 223.083 144.486 217.48 150.142 cv
220.529 148.795 223.339 147.055 225.882 144.592 cv
223.894 149.499 221.276 153.461 217.673 156.495 cv
222.203 155.739 226.061 153.541 229.67 150.253 cv
224.651 158.212 218.775 164.646 211.169 168.484 cv
215.692 168.474 220.024 167.677 224.237 165.962 cv
220.253 170.018 215.58 173.487 210.727 176.041 cv
265.078 180.944 li
261.416 178.29 258.154 174.964 255.049 171.184 cv
257.547 172.165 260.097 172.787 262.639 172.815 cv
257.462 169.656 252.492 163.943 249.69 157.417 cv
252.514 160.406 255.584 162.921 258.727 165.257 cv
257.082 162.034 255.515 158.763 254.19 155.338 cv
257.838 157.417 261.558 158.501 265.369 158.196 cv
.435294 .52549 .192157 rgb
f
293.589 180.362 mo
193.582 195.844 64.5354 227.242 64.5354 227.242 cv
80.4918 343.604 li
80.4918 343.604 349.382 346.258 374.331 321.492 cv
374.331 321.492 380.768 212.344 427.877 174.706 cv
427.877 174.706 393.596 164.879 293.589 180.362 cv
.670588 .172549 .313726 rgb
f
299.251 292.796 mo
288.302 292.154 277.475 291.415 266.856 290.602 cv
274.638 269.754 284.619 249.913 298.901 232.045 cv
299.834 231.88 300.765 231.713 301.697 231.541 cv
300.899 251.844 299.942 272.319 299.251 292.796 cv
301.813 228.552 mo
301.804 228.546 301.795 228.539 301.786 228.532 cv
301.796 228.52 301.805 228.51 301.815 228.498 cv
301.814 228.516 301.813 228.535 301.813 228.552 cv
.741176 .219608 .407843 rgb
f
216.898 286.124 mo
212.834 285.706 208.837 285.282 204.931 284.855 cv
205.825 277.649 206.827 270.46 207.918 263.287 cv
209.032 262.964 210.145 262.64 211.257 262.314 cv
211.257 262.314 li
211.257 262.314 li
210.276 261.751 209.302 261.178 208.333 260.593 cv
209.292 254.418 210.317 248.257 211.397 242.107 cv
213.29 242.282 215.182 242.445 217.076 242.59 cv
217.076 242.931 217.076 243.269 217.076 243.609 cv
217.075 257.759 216.981 271.937 216.898 286.124 cv
.611765 .141176 .290196 rgb
f
233.135 287.722 mo
230.327 287.458 227.535 287.189 224.786 286.918 cv
225.444 272.294 226.392 257.689 228.061 243.187 cv
228.396 243.196 228.731 243.205 229.067 243.212 cv
230.88 257.998 232.164 272.847 233.135 287.722 cv
f
316.368 335.562 mo
321.688 334.976 326.773 334.348 331.566 333.676 cv
328.651 294.941 328.542 255.818 323.461 217.07 cv
318.141 256.567 317.675 296.064 316.368 335.562 cv
.670588 .172549 .313726 rgb
f
355.556 295.091 mo
346.831 294.906 338.051 294.632 329.271 294.281 cv
328.009 268.528 326.824 242.716 323.461 217.07 cv
320.017 242.638 318.608 268.206 317.687 293.774 cv
311.524 293.482 305.367 293.154 299.251 292.796 cv
299.942 272.319 300.899 251.844 301.697 231.541 cv
302.43 231.407 303.163 231.27 303.896 231.131 cv
303.565 230.876 303.234 230.621 302.902 230.367 cv
303.234 230.304 303.564 230.24 303.896 230.176 cv
303.896 230.176 li
303.896 230.176 303.896 230.176 303.896 230.176 cv
303.205 229.632 302.511 229.09 301.813 228.552 cv
301.813 228.535 301.814 228.516 301.815 228.498 cv
301.815 228.498 li
301.815 228.498 li
301.805 228.51 301.796 228.52 301.786 228.532 cv
296.684 224.602 291.373 220.852 285.852 217.442 cv
279.566 213.559 273.009 210.116 266.181 207.351 cv
271.832 207.574 277.513 207.691 283.201 207.691 cv
296.084 207.691 309.025 207.096 321.888 205.801 cv
326.747 205.312 331.597 204.723 336.425 204.028 cv
336.066 215.443 335.765 226.857 335.764 238.272 cv
335.764 252.43 336.227 266.587 337.615 280.745 cv
339.72 254.741 342.046 228.736 344.689 202.732 cv
350.988 201.66 357.239 200.403 363.439 198.945 cv
363.434 199 363.429 199.055 363.424 199.11 cv
359.202 231.314 357.621 263.26 355.556 295.091 cv
266.856 290.602 mo
257.99 289.923 249.282 289.194 240.794 288.428 cv
241.5 273.208 242.578 258.001 244.035 242.828 cv
245.254 242.73 246.475 242.613 247.699 242.477 cv
247.699 242.477 li
247.699 242.477 li
246.499 242.211 245.321 241.902 244.158 241.557 cv
244.348 239.611 244.544 237.663 244.746 235.718 cv
246.858 235.785 248.974 235.818 251.09 235.818 cv
260.073 235.818 269.09 235.228 278.095 234.2 cv
275.176 234.943 272.198 235.496 269.203 235.922 cv
279.117 235.141 289.036 233.785 298.901 232.045 cv
284.619 249.913 274.638 269.754 266.856 290.602 cv
.611765 .141176 .290196 rgb
f
337.615 280.745 mo
340.504 245.053 343.81 209.361 347.779 173.669 cv
344.419 173.962 340.93 174.295 337.323 174.666 cv
336.455 210.026 334.148 245.386 337.615 280.745 cv
.670588 .172549 .313726 rgb
f
366.596 172.319 mo
365.012 181.144 364.213 190.217 363.424 199.11 cv
357.66 243.072 356.819 286.55 352.949 329.917 cv
354.333 329.606 355.669 329.288 356.946 328.962 cv
368.197 275.943 379.828 222.764 397.319 171.708 cv
389.031 171.528 378.868 171.647 366.596 172.319 cv
f
413.266 190.146 mo
413.266 190.146 li
417.639 184.244 422.492 179.008 427.877 174.706 cv
427.877 174.706 li
422.492 179.008 417.639 184.244 413.266 190.146 cv
.717647 .988235 .658823 rgb
f
410.415 194.184 mo
410.415 194.184 li
411.342 192.807 412.292 191.46 413.266 190.146 cv
413.266 190.146 li
412.292 191.46 411.342 192.807 410.415 194.184 cv
.992157 .992157 .760784 rgb
f
410.415 194.184 mo
410.415 194.184 li
410.415 194.184 li
410.415 194.184 li
410.415 194.184 li
.113725 .882353 .686274 rgb
f
380.888 273.977 mo
386.038 248.216 395.017 217.063 410.415 194.184 cv
410.415 194.184 li
395.017 217.063 386.038 248.216 380.888 273.977 cv
380.888 273.977 li
.109804 .819608 .67451 rgb
f
377.214 295.359 mo
377.214 295.359 li
378.14 288.965 379.341 281.714 380.888 273.977 cv
380.888 273.977 li
379.341 281.714 378.14 288.965 377.214 295.359 cv
.054902 .721569 .670588 rgb
f
377.214 295.359 mo
372.904 295.346 368.559 295.307 364.204 295.245 cv
371.935 260.112 380.342 225.127 391.025 190.944 cv
395.458 189.396 399.848 187.728 404.182 185.935 cv
404.65 185.741 405.119 185.545 405.586 185.349 cv
405.925 185.206 406.263 185.063 406.601 184.918 cv
413.252 181.482 419.872 177.966 426.461 174.368 cv
427.421 174.575 427.877 174.706 427.877 174.706 cv
422.492 179.008 417.639 184.244 413.266 190.146 cv
412.292 191.46 411.342 192.807 410.415 194.184 cv
410.415 194.184 li
395.017 217.063 386.038 248.216 380.888 273.977 cv
379.341 281.714 378.14 288.965 377.214 295.359 cv
.741176 .219608 .407843 rgb
f
298.901 232.045 mo
299.193 231.679 299.489 231.312 299.785 230.948 cv
300.435 230.83 301.085 230.71 301.734 230.588 cv
301.721 230.905 301.709 231.224 301.697 231.541 cv
300.765 231.713 299.834 231.88 298.901 232.045 cv
.721569 .2 .4 rgb
f
269.203 235.922 mo
272.198 235.496 275.176 234.943 278.095 234.2 cv
285.341 233.373 292.575 232.263 299.785 230.948 cv
299.489 231.312 299.193 231.679 298.901 232.045 cv
289.036 233.785 279.117 235.141 269.203 235.922 cv
301.697 231.541 mo
301.709 231.224 301.721 230.905 301.734 230.588 cv
302.122 230.515 302.513 230.441 302.902 230.367 cv
303.234 230.621 303.565 230.876 303.896 231.131 cv
303.163 231.27 302.43 231.407 301.697 231.541 cv
.596078 .129412 .282353 rgb
f
101.677 343.602 mo
117.633 224.93 li
117.633 224.93 64.4996 211.746 0 198.126 cv
0 342.822 li
55.6964 344.065 101.677 343.602 101.677 343.602 cv
.670588 .172549 .313726 rgb
f
91.037 343.666 mo
110.254 343.735 153.364 343.699 200.396 342.385 cv
201.653 298.657 208.36 255.524 216.894 212.988 cv
217.46 255.744 216.489 298.877 216.856 341.875 cv
218.842 341.807 220.834 341.73 222.823 341.657 cv
224.263 307.552 224.313 273.039 228.55 239.111 cv
232.929 272.927 234.427 307.095 235.65 341.153 cv
237.042 341.094 238.435 341.041 239.824 340.98 cv
239.348 289.663 243.011 238.314 251.055 187.537 cv
192.647 198.088 131.995 211.545 96.2879 219.771 cv
74.9267 214.689 39.604 206.491 0 198.127 cv
0 342.82 li
39.6076 343.705 74.2997 343.727 91.037 343.666 cv
f
134.767 261.109 mo
153.997 262.923 173.227 264.532 192.219 267.717 cv
198.576 265.96 204.926 264.171 211.257 262.314 cv
200.324 256.038 190.11 248.464 181.094 239.147 cv
203.573 240.812 225.219 244.975 247.699 242.477 cv
240.206 240.812 233.545 237.482 226.052 234.152 cv
251.738 237.719 278.035 235.17 303.896 230.176 cv
292.409 221.12 279.837 212.882 266.181 207.351 cv
313.711 209.227 362.95 203.537 406.601 184.918 cv
414.17 181.008 421.699 176.994 429.186 172.873 cv
396.109 165.517 129.27 148.005 0 143.998 cv
0 237.954 li
.358687 237.926 .715571 237.894 1.07471 237.867 cv
.720753 238.233 .357785 238.586 0 238.946 cv
0 262.126 li
22.9312 268.748 46.6829 272.519 70.1617 273.777 cv
80.3419 274.076 90.2389 270.695 100.255 267.314 cv
111.426 263.544 122.744 259.773 134.767 261.109 cv
1 .772549 .203922 rgb
f
229.067 243.212 mo
229.067 243.212 li
229.066 243.212 li
229.067 243.212 li
229.067 243.212 li
.607843 .117647 .286274 rgb
f
217.076 242.59 mo
215.182 242.445 213.29 242.282 211.397 242.107 cv
211.397 242.107 li
213.29 242.282 215.182 242.445 217.076 242.59 cv
217.076 242.59 li
.552941 .0941176 .266667 rgb
f
229.067 243.212 mo
228.731 243.205 228.396 243.196 228.061 243.187 cv
228.061 243.186 li
228.396 243.196 228.731 243.204 229.066 243.212 cv
229.067 243.212 li
f
244.035 242.828 mo
244.035 242.828 li
245.254 242.73 246.475 242.613 247.699 242.477 cv
247.699 242.477 li
246.475 242.613 245.254 242.73 244.035 242.828 cv
f
232.891 243.256 mo
231.615 243.256 230.34 243.241 229.067 243.212 cv
229.067 243.212 li
230.34 243.241 231.615 243.256 232.891 243.256 cv
236.591 243.256 240.302 243.128 244.035 242.828 cv
244.035 242.828 li
240.302 243.128 236.59 243.256 232.891 243.256 cv
228.061 243.187 mo
224.392 243.083 220.733 242.87 217.076 242.59 cv
217.076 242.59 li
220.733 242.87 224.392 243.083 228.061 243.186 cv
228.061 243.187 li
211.397 242.107 mo
201.364 241.178 191.314 239.904 181.094 239.147 cv
181.094 239.147 li
191.314 239.904 201.364 241.178 211.397 242.107 cv
211.397 242.107 li
.607843 .117647 .286274 rgb
f
251.09 235.818 mo
248.974 235.818 246.858 235.785 244.746 235.718 cv
244.746 235.718 li
246.858 235.785 248.974 235.818 251.09 235.818 cv
260.075 235.818 269.089 235.228 278.096 234.2 cv
278.095 234.2 278.095 234.2 278.095 234.2 cv
269.09 235.228 260.073 235.818 251.09 235.818 cv
302.902 230.367 mo
302.902 230.367 li
303.233 230.304 303.564 230.24 303.896 230.176 cv
303.896 230.176 303.896 230.176 303.896 230.176 cv
303.564 230.24 303.234 230.304 302.902 230.367 cv
.552941 .0941176 .266667 rgb
f
299.785 230.948 mo
299.785 230.948 li
300.435 230.83 301.085 230.709 301.734 230.588 cv
301.734 230.588 li
301.085 230.71 300.435 230.83 299.785 230.948 cv
.65098 .137255 .364706 rgb
f
278.095 234.2 mo
278.095 234.2 278.095 234.2 278.096 234.2 cv
285.34 233.373 292.577 232.263 299.785 230.948 cv
299.785 230.948 li
292.575 232.263 285.341 233.373 278.095 234.2 cv
301.734 230.588 mo
301.734 230.588 li
302.123 230.515 302.513 230.441 302.902 230.367 cv
302.902 230.367 li
302.513 230.441 302.122 230.515 301.734 230.588 cv
.541176 .0862745 .258824 rgb
f
244.746 235.718 mo
238.489 235.518 232.252 235.013 226.052 234.152 cv
226.052 234.152 li
232.252 235.013 238.489 235.518 244.746 235.718 cv
244.746 235.718 li
.607843 .117647 .286274 rgb
f
285.852 217.442 mo
279.566 213.559 273.009 210.117 266.181 207.351 cv
266.181 207.351 li
273.009 210.116 279.566 213.559 285.852 217.442 cv
.552941 .0941176 .266667 rgb
f
321.888 205.801 mo
326.747 205.312 331.597 204.723 336.425 204.028 cv
336.425 204.028 li
331.597 204.723 326.747 205.312 321.888 205.801 cv
344.689 202.732 mo
344.689 202.732 li
350.985 201.66 357.242 200.402 363.439 198.945 cv
363.439 198.945 li
357.239 200.403 350.988 201.66 344.689 202.732 cv
f
336.425 204.028 mo
336.425 204.028 li
339.188 203.631 341.94 203.199 344.689 202.732 cv
344.689 202.732 li
341.943 203.199 339.185 203.631 336.425 204.028 cv
.607843 .117647 .286274 rgb
f
363.439 198.945 mo
363.439 198.945 li
372.787 196.746 382.001 194.094 391.025 190.944 cv
391.025 190.944 li
382.001 194.094 372.787 196.746 363.439 198.945 cv
f
391.025 190.944 mo
391.025 190.944 li
395.458 189.396 399.848 187.728 404.182 185.935 cv
399.848 187.728 395.458 189.396 391.025 190.944 cv
.670588 .14902 .372549 rgb
f
426.461 174.367 mo
426.461 174.367 426.461 174.367 426.461 174.367 cv
427.37 173.871 428.278 173.373 429.186 172.873 cv
429.186 172.873 429.186 172.873 429.186 172.873 cv
428.278 173.373 427.37 173.871 426.461 174.367 cv
.580392 .666667 .470588 rgb
f
426.461 174.368 mo
426.46 174.368 426.461 174.368 426.46 174.368 cv
426.461 174.367 li
426.461 174.367 426.461 174.367 426.461 174.367 cv
426.461 174.368 li
.607843 .117647 .286274 rgb
f
405.586 185.349 mo
405.925 185.206 406.263 185.063 406.601 184.918 cv
413.252 181.482 419.872 177.966 426.46 174.368 cv
426.461 174.368 426.46 174.368 426.461 174.368 cv
419.872 177.966 413.252 181.482 406.601 184.918 cv
406.263 185.063 405.925 185.206 405.586 185.349 cv
.670588 .14902 .372549 rgb
f
192.219 267.717 mo
192.219 267.717 li
179.287 265.548 166.247 264.111 153.169 262.841 cv
151.495 254.438 150.111 247.657 150.111 247.657 cv
150.111 247.657 148.79 254.131 147.167 262.268 cv
145.248 262.088 143.327 261.909 141.407 261.73 cv
137.548 254.672 133.897 247.446 130.423 240.15 cv
130.425 240.149 130.428 240.149 130.43 240.148 cv
130.3 239.875 130.164 239.606 130.035 239.333 cv
130.035 239.333 li
130.035 239.333 li
129.114 237.39 128.185 235.417 127.26 233.418 cv
132.805 233.332 138.349 233.066 143.882 232.624 cv
144.011 232.614 144.139 232.604 144.268 232.593 cv
144.268 232.593 li
184.172 228.793 224.076 222.459 260.179 202.824 cv
260.921 202.452 261.228 201.646 261.228 200.915 cv
261.228 200.398 261.074 199.919 260.812 199.657 cv
260.784 199.633 260.758 199.61 260.73 199.586 cv
260.722 199.579 260.714 199.572 260.706 199.565 cv
260.684 199.546 260.665 199.53 260.642 199.511 cv
260.636 199.505 260.628 199.498 260.621 199.492 cv
260.594 199.47 260.565 199.445 260.539 199.422 cv
260.534 199.418 260.528 199.413 260.523 199.409 cv
260.5 199.389 260.478 199.371 260.454 199.35 cv
260.447 199.344 260.439 199.338 260.432 199.331 cv
260.408 199.311 260.382 199.289 260.358 199.269 cv
260.355 199.266 260.352 199.263 260.348 199.26 cv
260.32 199.236 260.293 199.213 260.265 199.19 cv
260.258 199.184 260.25 199.178 260.244 199.172 cv
260.223 199.154 260.199 199.135 260.178 199.117 cv
260.17 199.111 260.164 199.105 260.156 199.099 cv
260.128 199.075 260.1 199.052 260.072 199.028 cv
260.071 199.027 260.069 199.025 260.068 199.025 cv
260.043 199.004 260.015 198.98 259.99 198.959 cv
259.981 198.952 259.974 198.946 259.965 198.939 cv
259.943 198.92 259.922 198.902 259.899 198.884 cv
259.892 198.878 259.888 198.874 259.881 198.868 cv
259.853 198.845 259.826 198.822 259.797 198.799 cv
259.792 198.794 259.786 198.79 259.78 198.785 cv
259.758 198.766 259.735 198.747 259.712 198.728 cv
259.704 198.722 259.697 198.716 259.689 198.709 cv
259.663 198.687 259.639 198.668 259.612 198.646 cv
259.61 198.644 259.607 198.642 259.605 198.64 cv
259.577 198.617 259.55 198.594 259.521 198.571 cv
259.514 198.565 259.507 198.559 259.499 198.553 cv
259.478 198.535 259.454 198.516 259.433 198.499 cv
259.426 198.493 259.42 198.488 259.412 198.482 cv
259.384 198.459 259.357 198.436 259.329 198.413 cv
259.324 198.409 259.32 198.407 259.316 198.403 cv
259.292 198.383 259.269 198.365 259.245 198.345 cv
259.236 198.338 259.228 198.331 259.219 198.324 cv
259.198 198.307 259.174 198.288 259.153 198.271 cv
259.146 198.265 259.141 198.261 259.134 198.255 cv
259.107 198.234 259.079 198.211 259.052 198.189 cv
259.044 198.182 259.037 198.177 259.029 198.17 cv
259.009 198.154 258.986 198.136 258.966 198.12 cv
258.957 198.113 258.949 198.106 258.941 198.099 cv
258.915 198.079 258.889 198.058 258.864 198.037 cv
258.861 198.035 258.857 198.032 258.854 198.03 cv
258.828 198.009 258.8 197.987 258.775 197.966 cv
258.765 197.958 258.757 197.952 258.747 197.944 cv
258.727 197.928 258.707 197.912 258.687 197.896 cv
258.678 197.889 258.67 197.883 258.661 197.876 cv
258.634 197.854 258.607 197.832 258.58 197.811 cv
258.574 197.806 258.567 197.801 258.561 197.796 cv
258.538 197.778 258.517 197.762 258.495 197.744 cv
258.486 197.737 258.477 197.73 258.468 197.723 cv
258.445 197.705 258.423 197.687 258.4 197.669 cv
258.395 197.665 258.388 197.659 258.383 197.656 cv
258.356 197.634 258.328 197.612 258.301 197.591 cv
258.292 197.584 258.284 197.578 258.275 197.571 cv
258.254 197.554 258.236 197.54 258.215 197.523 cv
258.205 197.515 258.197 197.51 258.188 197.502 cv
258.161 197.481 258.134 197.46 258.107 197.439 cv
258.102 197.435 258.096 197.43 258.091 197.426 cv
258.068 197.409 258.044 197.39 258.021 197.372 cv
258.012 197.365 258.003 197.358 257.994 197.351 cv
257.972 197.334 257.953 197.319 257.931 197.302 cv
257.924 197.296 257.915 197.29 257.907 197.284 cv
257.88 197.263 257.853 197.241 257.826 197.22 cv
257.818 197.214 257.811 197.209 257.803 197.203 cv
257.783 197.188 257.76 197.17 257.74 197.154 cv
257.731 197.147 257.721 197.14 257.712 197.133 cv
257.689 197.115 257.667 197.098 257.644 197.081 cv
257.638 197.076 257.632 197.072 257.626 197.067 cv
257.599 197.046 257.573 197.026 257.545 197.005 cv
257.535 196.998 257.526 196.991 257.517 196.983 cv
257.496 196.968 257.478 196.954 257.458 196.938 cv
257.449 196.932 257.439 196.924 257.43 196.917 cv
257.404 196.897 257.374 196.874 257.348 196.855 cv
257.342 196.85 257.336 196.845 257.33 196.841 cv
257.308 196.824 257.285 196.807 257.264 196.791 cv
257.254 196.783 257.243 196.775 257.233 196.768 cv
257.213 196.752 257.193 196.737 257.173 196.722 cv
257.165 196.716 257.156 196.709 257.148 196.703 cv
257.121 196.683 257.094 196.663 257.067 196.642 cv
257.058 196.635 257.048 196.628 257.039 196.622 cv
257.021 196.608 257 196.592 256.981 196.578 cv
256.971 196.57 256.96 196.562 256.95 196.555 cv
256.927 196.537 256.904 196.52 256.881 196.503 cv
256.874 196.498 256.866 196.491 256.859 196.486 cv
256.834 196.468 256.809 196.45 256.785 196.431 cv
256.775 196.424 256.763 196.415 256.753 196.408 cv
256.734 196.394 256.715 196.379 256.696 196.365 cv
256.686 196.358 256.677 196.351 256.667 196.344 cv
256.64 196.324 256.614 196.304 256.586 196.284 cv
256.578 196.278 256.571 196.272 256.563 196.266 cv
256.542 196.251 256.521 196.236 256.501 196.221 cv
256.491 196.213 256.479 196.205 256.469 196.198 cv
256.449 196.183 256.427 196.167 256.407 196.152 cv
256.399 196.146 256.392 196.141 256.384 196.135 cv
256.357 196.115 256.33 196.095 256.302 196.075 cv
256.293 196.069 256.283 196.061 256.274 196.054 cv
256.255 196.041 256.233 196.025 256.215 196.011 cv
256.205 196.004 256.196 195.997 256.186 195.99 cv
256.158 195.97 256.13 195.949 256.103 195.929 cv
256.099 195.926 256.096 195.924 256.092 195.921 cv
256.067 195.903 256.041 195.885 256.016 195.867 cv
256.007 195.86 255.998 195.854 255.989 195.847 cv
255.968 195.831 255.948 195.817 255.926 195.802 cv
255.917 195.795 255.91 195.79 255.901 195.783 cv
255.873 195.763 255.846 195.744 255.819 195.724 cv
255.81 195.718 255.802 195.712 255.792 195.705 cv
255.772 195.691 255.753 195.677 255.733 195.662 cv
255.722 195.655 255.712 195.647 255.701 195.639 cv
255.68 195.625 255.659 195.61 255.639 195.595 cv
255.63 195.589 255.623 195.584 255.614 195.577 cv
255.588 195.559 255.56 195.539 255.534 195.52 cv
255.523 195.512 255.513 195.506 255.502 195.498 cv
255.485 195.485 255.464 195.471 255.447 195.458 cv
255.436 195.45 255.425 195.443 255.414 195.435 cv
255.388 195.416 255.36 195.397 255.334 195.378 cv
255.326 195.372 255.318 195.367 255.31 195.361 cv
255.289 195.347 255.268 195.332 255.248 195.317 cv
255.237 195.309 255.226 195.302 255.215 195.294 cv
255.196 195.28 255.177 195.267 255.158 195.254 cv
255.148 195.247 255.138 195.24 255.128 195.233 cv
255.101 195.214 255.074 195.195 255.047 195.176 cv
255.037 195.169 255.028 195.163 255.018 195.156 cv
254.999 195.142 254.979 195.128 254.96 195.115 cv
254.949 195.107 254.939 195.1 254.928 195.093 cv
254.906 195.077 254.884 195.062 254.862 195.047 cv
254.852 195.04 254.843 195.033 254.833 195.026 cv
254.808 195.009 254.786 194.994 254.761 194.976 cv
254.75 194.969 254.738 194.961 254.727 194.953 cv
254.708 194.94 254.69 194.928 254.671 194.914 cv
254.661 194.907 254.65 194.9 254.64 194.893 cv
254.614 194.875 254.586 194.855 254.559 194.837 cv
254.55 194.831 254.54 194.824 254.531 194.818 cv
254.512 194.804 254.492 194.791 254.473 194.778 cv
254.461 194.769 254.45 194.762 254.438 194.754 cv
254.419 194.741 254.399 194.727 254.38 194.714 cv
254.371 194.708 254.361 194.701 254.352 194.695 cv
254.324 194.676 254.3 194.659 254.272 194.64 cv
254.259 194.632 254.249 194.625 254.237 194.616 cv
254.219 194.604 254.203 194.593 254.185 194.581 cv
254.173 194.573 254.161 194.564 254.148 194.556 cv
254.128 194.542 254.103 194.525 254.083 194.511 cv
254.069 194.502 254.059 194.495 254.045 194.486 cv
254.025 194.472 254.004 194.458 253.983 194.444 cv
253.972 194.436 253.959 194.428 253.948 194.42 cv
253.929 194.408 253.91 194.395 253.891 194.382 cv
253.88 194.375 253.871 194.369 253.861 194.362 cv
253.833 194.343 253.807 194.326 253.779 194.307 cv
253.77 194.301 253.76 194.294 253.75 194.287 cv
253.73 194.274 253.713 194.262 253.692 194.249 cv
253.681 194.241 253.669 194.233 253.658 194.225 cv
253.637 194.212 253.617 194.198 253.597 194.185 cv
253.587 194.179 253.58 194.174 253.571 194.168 cv
253.545 194.15 253.517 194.131 253.49 194.114 cv
253.479 194.106 253.468 194.099 253.456 194.091 cv
253.439 194.08 253.419 194.067 253.402 194.055 cv
253.39 194.048 253.378 194.04 253.367 194.032 cv
253.341 194.015 253.312 193.996 253.286 193.979 cv
253.279 193.974 253.27 193.968 253.262 193.963 cv
253.242 193.949 253.22 193.935 253.2 193.922 cv
253.188 193.914 253.175 193.906 253.164 193.898 cv
253.146 193.887 253.128 193.875 253.111 193.863 cv
253.099 193.856 253.087 193.848 253.075 193.84 cv
253.049 193.823 253.023 193.806 252.996 193.788 cv
252.985 193.781 252.973 193.773 252.962 193.766 cv
252.946 193.755 252.926 193.743 252.91 193.732 cv
252.896 193.723 252.884 193.715 252.871 193.707 cv
252.853 193.695 252.835 193.684 252.818 193.672 cv
252.799 193.66 252.781 193.649 252.763 193.637 cv
252.743 193.624 252.727 193.613 252.707 193.601 cv
252.693 193.591 252.679 193.582 252.664 193.573 cv
252.65 193.563 252.635 193.554 252.62 193.544 cv
252.606 193.535 252.593 193.527 252.578 193.517 cv
252.557 193.504 252.537 193.49 252.516 193.477 cv
252.498 193.466 252.48 193.454 252.462 193.443 cv
252.447 193.433 252.43 193.422 252.415 193.413 cv
252.401 193.403 252.387 193.395 252.373 193.385 cv
252.358 193.376 252.341 193.365 252.326 193.356 cv
252.313 193.347 252.3 193.339 252.287 193.33 cv
252.261 193.314 252.235 193.298 252.21 193.282 cv
252.197 193.273 252.181 193.263 252.167 193.254 cv
252.154 193.246 252.138 193.235 252.124 193.227 cv
252.109 193.217 252.095 193.209 252.08 193.199 cv
252.063 193.188 252.048 193.179 252.031 193.168 cv
252.009 193.154 251.986 193.14 251.963 193.125 cv
251.948 193.116 251.934 193.107 251.919 193.097 cv
251.904 193.088 251.888 193.078 251.872 193.068 cv
251.859 193.059 251.845 193.051 251.832 193.042 cv
251.817 193.033 251.801 193.023 251.786 193.014 cv
251.765 193.001 251.747 192.989 251.726 192.976 cv
251.706 192.964 251.686 192.951 251.666 192.939 cv
251.653 192.93 251.639 192.922 251.626 192.913 cv
251.61 192.904 251.595 192.894 251.579 192.884 cv
251.564 192.875 251.553 192.868 251.538 192.859 cv
251.513 192.843 251.489 192.828 251.464 192.813 cv
251.449 192.804 251.434 192.794 251.419 192.785 cv
251.404 192.775 251.387 192.765 251.371 192.755 cv
251.359 192.748 251.346 192.74 251.334 192.732 cv
251.317 192.722 251.301 192.712 251.284 192.701 cv
251.271 192.693 251.259 192.686 251.245 192.677 cv
251.219 192.661 251.193 192.645 251.167 192.629 cv
251.153 192.621 251.138 192.612 251.125 192.603 cv
251.108 192.593 251.093 192.584 251.077 192.574 cv
251.065 192.567 251.052 192.558 251.04 192.551 cv
251.024 192.542 251.006 192.531 250.991 192.521 cv
250.967 192.506 250.941 192.491 250.917 192.476 cv
250.902 192.467 250.886 192.457 250.87 192.448 cv
250.858 192.44 250.843 192.431 250.831 192.424 cv
250.815 192.414 250.798 192.404 250.783 192.394 cv
250.769 192.386 250.756 192.378 250.743 192.37 cv
250.718 192.355 250.691 192.339 250.666 192.324 cv
250.652 192.316 250.636 192.305 250.622 192.297 cv
250.606 192.288 250.592 192.279 250.576 192.27 cv
250.563 192.261 250.547 192.252 250.534 192.244 cv
250.519 192.235 250.502 192.225 250.488 192.216 cv
250.471 192.206 250.457 192.198 250.44 192.188 cv
250.415 192.173 250.393 192.159 250.368 192.144 cv
250.354 192.136 250.34 192.128 250.327 192.12 cv
250.311 192.11 250.294 192.101 250.279 192.091 cv
250.265 192.083 250.254 192.076 250.24 192.068 cv
250.216 192.054 250.193 192.04 250.169 192.026 cv
250.151 192.015 250.135 192.006 250.117 191.995 cv
250.102 191.986 250.087 191.977 250.071 191.968 cv
250.057 191.96 250.044 191.952 250.03 191.943 cv
250.015 191.934 249.998 191.924 249.982 191.915 cv
249.969 191.907 249.956 191.9 249.943 191.892 cv
249.915 191.876 249.887 191.859 249.86 191.843 cv
249.847 191.835 249.836 191.829 249.822 191.821 cv
249.805 191.811 249.789 191.801 249.772 191.791 cv
249.76 191.784 249.748 191.777 249.736 191.77 cv
249.719 191.76 249.702 191.75 249.685 191.74 cv
249.676 191.735 249.664 191.728 249.655 191.722 cv
249.623 191.704 249.592 191.686 249.561 191.668 cv
249.549 191.66 249.538 191.654 249.526 191.647 cv
249.509 191.637 249.491 191.627 249.475 191.617 cv
249.464 191.611 249.451 191.604 249.44 191.597 cv
249.41 191.58 249.379 191.562 249.348 191.544 cv
249.336 191.537 249.328 191.532 249.315 191.525 cv
249.298 191.515 249.282 191.505 249.264 191.495 cv
249.252 191.488 249.241 191.482 249.229 191.475 cv
249.212 191.465 249.194 191.455 249.177 191.445 cv
249.167 191.439 249.156 191.433 249.145 191.427 cv
249.112 191.408 249.081 191.39 249.049 191.371 cv
249.038 191.365 249.029 191.36 249.019 191.354 cv
249.001 191.344 248.983 191.334 248.965 191.324 cv
248.954 191.317 248.943 191.311 248.932 191.305 cv
248.914 191.294 248.897 191.285 248.879 191.275 cv
248.875 191.272 248.872 191.27 248.867 191.268 cv
248.829 191.246 248.793 191.225 248.755 191.204 cv
248.743 191.197 248.732 191.191 248.72 191.184 cv
248.702 191.174 248.685 191.164 248.667 191.154 cv
248.657 191.148 248.646 191.142 248.635 191.135 cv
248.603 191.118 248.572 191.1 248.54 191.082 cv
248.529 191.076 248.519 191.07 248.508 191.064 cv
248.49 191.054 248.472 191.044 248.454 191.034 cv
248.445 191.028 248.432 191.021 248.423 191.016 cv
248.405 191.006 248.386 190.995 248.368 190.985 cv
248.362 190.982 248.356 190.978 248.349 190.975 cv
248.313 190.954 248.275 190.933 248.238 190.912 cv
248.228 190.907 248.22 190.902 248.211 190.897 cv
248.191 190.886 248.174 190.876 248.153 190.865 cv
248.146 190.861 248.137 190.856 248.129 190.851 cv
248.065 190.816 248.003 190.781 247.939 190.746 cv
247.932 190.742 247.921 190.736 247.913 190.732 cv
247.893 190.721 247.874 190.71 247.854 190.699 cv
247.848 190.695 247.842 190.693 247.836 190.689 cv
247.798 190.668 247.758 190.646 247.72 190.625 cv
247.712 190.621 247.707 190.618 247.699 190.614 cv
247.68 190.603 247.66 190.592 247.641 190.582 cv
247.632 190.577 247.622 190.572 247.613 190.567 cv
247.551 190.532 247.485 190.497 247.423 190.462 cv
247.415 190.458 247.408 190.454 247.4 190.45 cv
247.38 190.439 247.36 190.428 247.34 190.418 cv
247.334 190.414 247.325 190.409 247.319 190.406 cv
247.254 190.371 247.189 190.336 247.124 190.301 cv
247.116 190.296 247.109 190.292 247.101 190.288 cv
247.08 190.277 247.06 190.266 247.038 190.254 cv
247.037 190.254 247.034 190.252 247.032 190.251 cv
246.99 190.228 246.945 190.204 246.902 190.181 cv
246.896 190.178 246.891 190.176 246.885 190.172 cv
246.865 190.161 246.843 190.15 246.823 190.139 cv
246.816 190.135 246.81 190.132 246.804 190.129 cv
246.737 190.093 246.67 190.057 246.603 190.022 cv
246.598 190.019 246.591 190.016 246.587 190.013 cv
246.565 190.002 246.542 189.99 246.521 189.978 cv
246.516 189.976 246.515 189.975 246.51 189.973 cv
246.442 189.936 246.372 189.9 246.304 189.864 cv
246.298 189.86 246.293 189.858 246.286 189.855 cv
246.217 189.818 246.146 189.781 246.076 189.744 cv
246.075 189.744 246.072 189.742 246.07 189.741 cv
246.047 189.729 246.024 189.717 246.001 189.705 cv
245.998 189.703 245.994 189.702 245.991 189.7 cv
245.921 189.663 245.851 189.627 245.78 189.591 cv
245.777 189.589 245.772 189.586 245.769 189.585 cv
245.747 189.573 245.722 189.561 245.7 189.549 cv
245.698 189.548 li
245.626 189.511 245.551 189.473 245.48 189.436 cv
245.476 189.434 245.473 189.432 245.47 189.431 cv
245.398 189.394 245.327 189.358 245.255 189.321 cv
245.254 189.32 245.251 189.319 245.249 189.318 cv
245.225 189.306 245.2 189.293 245.177 189.281 cv
245.175 189.28 li
245.102 189.243 245.028 189.206 244.955 189.169 cv
244.951 189.167 244.952 189.168 244.949 189.166 cv
244.85 189.116 244.751 189.067 244.652 189.017 cv
244.651 189.016 li
232.65 183.02 219.535 179.761 206.479 176.503 cv
206.479 176.503 li
204.414 175.988 202.35 175.472 200.293 174.946 cv
200.226 171.446 li
219.622 173.701 239.133 175.956 258.702 176.911 cv
254.441 177.758 li
251.482 180.587 li
262.101 182.676 li
299.18 181.37 li
317.27 174.817 li
334.691 172.777 351.954 169.909 368.956 166.048 cv
368.956 166.048 li
368.956 166.048 li
399.286 168.696 421.147 171.085 429.186 172.873 cv
428.278 173.373 427.37 173.871 426.461 174.367 cv
426.46 174.368 li
419.872 177.966 413.252 181.482 406.601 184.918 cv
406.263 185.063 405.925 185.206 405.586 185.349 cv
405.119 185.545 404.65 185.741 404.182 185.935 cv
399.848 187.728 395.458 189.396 391.025 190.944 cv
391.025 190.944 li
382.001 194.094 372.787 196.746 363.439 198.945 cv
363.439 198.945 li
357.242 200.402 350.985 201.66 344.689 202.732 cv
341.94 203.199 339.188 203.631 336.425 204.028 cv
336.425 204.028 li
331.597 204.723 326.747 205.312 321.888 205.801 cv
309.025 207.096 296.086 207.69 283.202 207.69 cv
277.515 207.69 271.832 207.574 266.181 207.351 cv
266.181 207.351 li
266.181 207.351 266.181 207.351 266.181 207.351 cv
273.009 210.117 279.566 213.559 285.852 217.442 cv
292.138 221.325 298.152 225.648 303.896 230.176 cv
303.564 230.24 303.233 230.304 302.902 230.367 cv
302.513 230.441 302.123 230.515 301.734 230.588 cv
301.734 230.588 li
301.085 230.709 300.435 230.83 299.785 230.948 cv
299.785 230.948 li
292.577 232.263 285.34 233.373 278.096 234.2 cv
269.089 235.228 260.075 235.818 251.09 235.818 cv
248.974 235.818 246.858 235.785 244.746 235.718 cv
238.489 235.518 232.252 235.013 226.052 234.152 cv
226.052 234.152 li
226.052 234.152 li
233.545 237.482 240.206 240.812 247.699 242.477 cv
246.475 242.613 245.254 242.73 244.035 242.828 cv
240.302 243.128 236.591 243.256 232.891 243.256 cv
231.615 243.256 230.34 243.241 229.067 243.212 cv
229.066 243.212 li
228.731 243.204 228.396 243.196 228.061 243.186 cv
224.392 243.083 220.733 242.87 217.076 242.59 cv
215.182 242.445 213.29 242.282 211.397 242.107 cv
201.364 241.178 191.314 239.904 181.094 239.147 cv
181.094 239.147 li
181.094 239.147 li
190.11 248.464 200.324 256.038 211.257 262.314 cv
204.926 264.171 198.576 265.96 192.219 267.717 cv
95.6037 265.729 mo
93.5096 265.163 91.4168 264.604 89.3196 264.052 cv
91.8244 263.238 94.4066 262.68 96.9684 262.23 cv
96.5202 263.403 96.0656 264.57 95.6037 265.729 cv
87.4515 263.562 mo
73.0696 259.806 58.6119 256.389 44.0673 253.412 cv
44.0009 253.399 43.935 253.385 43.8686 253.372 cv
43.8515 253.368 43.8346 253.365 43.8176 253.361 cv
29.2852 250.396 14.7643 248.173 .25416 246.59 cv
.243141 246.589 .230816 246.587 .219797 246.586 cv
.146333 246.578 .0734638 246.57 0 246.562 cv
0 262.126 li
0 262.126 li
0 238.946 li
.357785 238.586 .720753 238.233 1.07471 237.867 cv
1.07471 237.867 li
1.07471 237.867 li
.715571 237.894 .358687 237.926 0 237.954 cv
0 209.524 li
0 209.524 li
0 209.524 li
8.34227 210.656 16.7103 211.615 25.0965 212.407 cv
25.1625 212.413 25.2286 212.42 25.2946 212.426 cv
25.5317 212.537 25.7696 212.648 26.0071 212.759 cv
26.0138 212.762 26.0222 212.766 26.029 212.769 cv
26.1858 212.842 26.3406 212.914 26.4976 212.986 cv
50.049 223.863 75.5831 230.256 101.623 232.515 cv
99.2174 240.766 96.2698 248.849 92.3875 255.894 cv
92.3959 255.89 92.4048 255.887 92.4133 255.883 cv
90.9084 258.616 89.2616 261.194 87.4515 263.562 cv
181.871 169.56 mo
181.794 169.533 181.714 169.505 181.638 169.478 cv
181.632 169.476 181.628 169.474 181.622 169.472 cv
181.599 169.464 181.58 169.458 181.557 169.45 cv
181.551 169.447 181.544 169.445 181.538 169.443 cv
181.474 169.421 181.408 169.397 181.345 169.375 cv
181.333 169.37 181.322 169.366 181.31 169.362 cv
181.294 169.357 181.281 169.352 181.265 169.346 cv
181.25 169.341 181.236 169.336 181.221 169.331 cv
181.208 169.326 181.191 169.32 181.178 169.316 cv
181.162 169.31 181.146 169.304 181.129 169.298 cv
181.116 169.294 181.103 169.289 181.09 169.284 cv
181.062 169.274 181.034 169.264 181.005 169.254 cv
181.298 169.286 181.59 169.318 181.883 169.35 cv
181.871 169.56 li
.905882 .521569 .188235 rgb
f
52.1884 145.999 mo
33.2251 145.163 15.6065 144.482 0 143.998 cv
0 143.998 li
15.6105 144.482 33.2198 145.162 52.1884 145.999 cv
52.1884 145.999 li
.0745098 .831372 .764706 rgb
f
269.135 161.297 mo
261.331 161.189 253.532 161.089 245.733 160.987 cv
245.733 160.987 li
245.733 160.987 245.733 160.987 245.733 160.987 cv
245.733 160.987 245.733 160.987 245.733 160.987 cv
230.491 160.788 215.252 160.582 200.01 160.297 cv
199.888 153.928 li
223.987 155.411 247.852 156.964 270.602 158.531 cv
269.135 161.297 li
300.42 160.944 mo
299.848 160.944 li
300.007 160.61 li
300.54 160.648 301.066 160.687 301.597 160.725 cv
301.205 160.801 300.813 160.874 300.42 160.944 cv
182.435 159.928 mo
150.857 159.188 119.233 157.984 87.4377 155.666 cv
87.3496 152.99 87.2614 150.315 87.1732 147.639 cv
117.628 149.144 150.26 150.943 182.846 152.894 cv
182.435 159.928 li
51.6326 152.558 mo
43.8751 151.77 36.1021 150.901 28.3177 149.944 cv
28.3115 149.943 28.3116 149.943 28.3054 149.942 cv
28.014 149.906 27.7293 149.871 27.4378 149.835 cv
27.4254 149.833 27.4241 149.833 27.4117 149.832 cv
27.1249 149.796 26.8316 149.76 26.5448 149.724 cv
26.5386 149.723 26.5321 149.722 26.5259 149.722 cv
26.239 149.686 25.9492 149.65 25.6623 149.613 cv
25.6561 149.613 25.6392 149.611 25.633 149.61 cv
25.3508 149.574 25.071 149.539 24.7887 149.503 cv
24.7701 149.501 24.7494 149.498 24.7307 149.496 cv
24.4531 149.461 24.1799 149.426 23.9022 149.391 cv
23.8773 149.388 23.865 149.386 23.8401 149.383 cv
23.5671 149.348 23.2923 149.313 23.0191 149.278 cv
22.9943 149.275 22.9688 149.272 22.944 149.268 cv
22.6755 149.234 22.405 149.199 22.1364 149.165 cv
22.1054 149.161 22.0788 149.157 22.0477 149.153 cv
21.9135 149.136 21.7815 149.119 21.6472 149.101 cv
21.641 149.1 21.6478 149.101 21.6416 149.101 cv
21.512 149.084 21.3837 149.067 21.254 149.05 cv
21.2167 149.045 21.187 149.042 21.1498 149.037 cv
21.0201 149.02 20.8868 149.002 20.7572 148.986 cv
20.7572 148.986 li
13.8207 148.147 6.90314 147.545 0 147.122 cv
0 143.998 li
15.6065 144.482 33.2251 145.163 52.1884 145.999 cv
52.0031 148.185 51.8179 150.371 51.6326 152.558 cv
1 .898039 .305882 rgb
f
127.26 233.418 mo
123.924 226.209 120.631 218.653 117.9 210.919 cv
117.897 210.92 117.894 210.922 117.891 210.923 cv
115.6 204.437 113.709 197.824 112.528 191.183 cv
134.517 190.617 156.812 188.369 179.498 184.096 cv
179.669 184.064 179.836 184.033 180.007 184 cv
180.007 184 li
180.351 183.924 180.696 183.846 181.039 183.768 cv
180.16 198.786 li
178.936 200.049 177.703 201.278 176.458 202.467 cv
176.458 202.467 li
176.458 202.467 li
176.46 202.466 176.461 202.465 176.461 202.465 cv
176.461 202.465 176.461 202.465 176.461 202.465 cv
176.461 202.466 176.426 202.501 176.332 202.59 cv
176.458 202.467 li
176.458 202.467 li
176.416 202.504 175.879 203.007 175.882 203.007 cv
175.882 203.007 li
175.882 203.007 li
175.883 203.007 175.999 202.9 176.332 202.59 cv
175.628 203.246 174.923 203.902 174.218 204.558 cv
174.218 204.558 li
174.218 204.558 li
174.218 204.558 li
179.009 205.396 183.778 205.498 188.578 205.7 cv
188.599 205.701 188.62 205.702 188.641 205.703 cv
191.524 205.825 194.439 207.577 197.288 208.489 cv
197.288 208.489 li
197.309 208.496 197.33 208.502 197.351 208.509 cv
197.353 208.51 197.355 208.51 197.357 208.511 cv
199.681 209.25 202.013 209.749 204.357 210.135 cv
204.361 210.135 204.364 210.136 204.368 210.137 cv
204.392 210.141 204.417 210.145 204.441 210.149 cv
204.441 210.149 li
204.441 210.149 li
204.441 210.149 li
204.441 210.149 li
204.441 210.149 li
202.975 208.246 201.518 206.328 200.094 204.3 cv
200.094 204.3 li
202.286 203.733 204.452 202.876 206.619 202.016 cv
206.619 202.016 li
206.619 202.016 li
206.619 202.016 li
204.652 201.101 202.7 200.125 200.758 199.046 cv
200.362 178.504 li
202.413 177.858 204.452 177.19 206.479 176.503 cv
219.535 179.76 232.65 183.02 244.651 189.016 cv
244.652 189.017 li
244.75 189.066 244.851 189.116 244.949 189.166 cv
244.951 189.167 244.952 189.168 244.955 189.169 cv
245.028 189.206 245.102 189.243 245.175 189.28 cv
245.176 189.281 245.176 189.281 245.177 189.281 cv
245.202 189.294 245.224 189.305 245.249 189.318 cv
245.251 189.319 245.253 189.32 245.255 189.321 cv
245.327 189.358 245.398 189.394 245.47 189.431 cv
245.473 189.432 245.476 189.434 245.48 189.436 cv
245.553 189.473 245.625 189.51 245.698 189.548 cv
245.699 189.549 245.699 189.548 245.7 189.549 cv
245.723 189.561 245.746 189.573 245.769 189.585 cv
245.773 189.587 245.776 189.588 245.78 189.591 cv
245.852 189.628 245.92 189.663 245.991 189.7 cv
245.994 189.701 245.999 189.704 246.001 189.705 cv
246.024 189.717 246.047 189.729 246.07 189.741 cv
246.073 189.743 246.074 189.743 246.076 189.744 cv
246.146 189.781 246.217 189.818 246.286 189.855 cv
246.293 189.858 246.298 189.86 246.304 189.864 cv
246.372 189.9 246.442 189.937 246.51 189.973 cv
246.515 189.975 246.517 189.976 246.521 189.978 cv
246.543 189.99 246.565 190.002 246.587 190.013 cv
246.592 190.016 246.597 190.019 246.603 190.022 cv
246.671 190.058 246.736 190.092 246.804 190.129 cv
246.81 190.132 246.816 190.135 246.823 190.139 cv
246.843 190.149 246.865 190.161 246.885 190.172 cv
246.892 190.176 246.896 190.178 246.902 190.181 cv
246.945 190.204 246.989 190.228 247.032 190.251 cv
247.035 190.252 247.036 190.253 247.038 190.254 cv
247.06 190.266 247.079 190.276 247.101 190.288 cv
247.108 190.292 247.117 190.297 247.124 190.301 cv
247.189 190.336 247.254 190.371 247.319 190.406 cv
247.326 190.41 247.333 190.413 247.34 190.418 cv
247.36 190.428 247.38 190.439 247.4 190.45 cv
247.408 190.454 247.415 190.458 247.423 190.462 cv
247.487 190.498 247.549 190.531 247.613 190.567 cv
247.623 190.572 247.632 190.577 247.641 190.582 cv
247.66 190.592 247.681 190.604 247.699 190.614 cv
247.706 190.618 247.713 190.621 247.72 190.625 cv
247.758 190.646 247.798 190.668 247.836 190.689 cv
247.842 190.693 247.847 190.695 247.854 190.699 cv
247.874 190.71 247.893 190.721 247.913 190.732 cv
247.922 190.736 247.931 190.742 247.939 190.746 cv
248.004 190.782 248.065 190.816 248.129 190.851 cv
248.136 190.856 248.146 190.861 248.153 190.865 cv
248.172 190.875 248.193 190.887 248.211 190.897 cv
248.22 190.902 248.229 190.907 248.238 190.912 cv
248.274 190.933 248.313 190.954 248.349 190.975 cv
248.356 190.978 248.361 190.981 248.368 190.985 cv
248.388 190.996 248.403 191.005 248.423 191.016 cv
248.434 191.022 248.444 191.028 248.454 191.034 cv
248.473 191.044 248.49 191.054 248.508 191.064 cv
248.519 191.07 248.529 191.076 248.54 191.082 cv
248.572 191.1 248.603 191.117 248.635 191.135 cv
248.645 191.141 248.657 191.148 248.667 191.154 cv
248.684 191.163 248.703 191.174 248.72 191.184 cv
248.731 191.19 248.743 191.197 248.755 191.204 cv
248.792 191.225 248.831 191.247 248.867 191.268 cv
248.87 191.269 248.876 191.273 248.879 191.275 cv
248.898 191.285 248.914 191.294 248.932 191.305 cv
248.944 191.311 248.954 191.317 248.965 191.324 cv
248.982 191.333 249.002 191.345 249.019 191.354 cv
249.028 191.36 249.039 191.366 249.049 191.371 cv
249.081 191.39 249.113 191.408 249.145 191.427 cv
249.156 191.433 249.167 191.439 249.177 191.445 cv
249.194 191.455 249.212 191.465 249.229 191.475 cv
249.24 191.482 249.252 191.488 249.264 191.495 cv
249.281 191.505 249.299 191.515 249.315 191.525 cv
249.326 191.531 249.338 191.538 249.348 191.544 cv
249.379 191.562 249.41 191.58 249.44 191.597 cv
249.452 191.604 249.463 191.611 249.475 191.617 cv
249.491 191.627 249.509 191.637 249.526 191.647 cv
249.537 191.654 249.549 191.661 249.561 191.668 cv
249.593 191.686 249.623 191.704 249.655 191.722 cv
249.665 191.729 249.675 191.734 249.685 191.74 cv
249.702 191.75 249.719 191.76 249.736 191.77 cv
249.748 191.777 249.76 191.784 249.772 191.791 cv
249.789 191.801 249.805 191.811 249.822 191.821 cv
249.835 191.828 249.848 191.836 249.86 191.843 cv
249.888 191.859 249.915 191.876 249.943 191.892 cv
249.956 191.9 249.969 191.907 249.982 191.915 cv
249.998 191.924 250.015 191.934 250.03 191.943 cv
250.044 191.951 250.057 191.96 250.071 191.968 cv
250.086 191.977 250.102 191.986 250.117 191.995 cv
250.134 192.005 250.152 192.016 250.169 192.026 cv
250.192 192.039 250.217 192.054 250.24 192.068 cv
250.252 192.075 250.266 192.084 250.279 192.091 cv
250.294 192.1 250.311 192.111 250.327 192.12 cv
250.34 192.128 250.354 192.136 250.368 192.144 cv
250.392 192.159 250.416 192.173 250.44 192.188 cv
250.456 192.197 250.472 192.207 250.488 192.216 cv
250.503 192.226 250.519 192.235 250.534 192.244 cv
250.548 192.253 250.562 192.261 250.576 192.27 cv
250.593 192.28 250.605 192.287 250.622 192.297 cv
250.637 192.306 250.651 192.315 250.666 192.324 cv
250.692 192.339 250.717 192.355 250.743 192.37 cv
250.756 192.378 250.769 192.386 250.783 192.394 cv
250.799 192.405 250.814 192.414 250.831 192.424 cv
250.844 192.432 250.856 192.439 250.87 192.448 cv
250.887 192.458 250.901 192.466 250.917 192.476 cv
250.942 192.492 250.966 192.506 250.991 192.521 cv
251.007 192.531 251.023 192.541 251.04 192.551 cv
251.052 192.559 251.064 192.566 251.077 192.574 cv
251.093 192.584 251.108 192.593 251.125 192.603 cv
251.138 192.612 251.153 192.621 251.167 192.629 cv
251.192 192.645 251.219 192.662 251.245 192.677 cv
251.259 192.686 251.271 192.693 251.284 192.701 cv
251.301 192.712 251.317 192.722 251.334 192.732 cv
251.346 192.74 251.359 192.747 251.371 192.755 cv
251.388 192.765 251.403 192.775 251.419 192.785 cv
251.435 192.795 251.449 192.803 251.464 192.813 cv
251.488 192.828 251.514 192.844 251.538 192.859 cv
251.551 192.867 251.566 192.876 251.579 192.884 cv
251.594 192.894 251.611 192.904 251.626 192.913 cv
251.639 192.922 251.653 192.93 251.666 192.939 cv
251.686 192.951 251.707 192.964 251.726 192.976 cv
251.747 192.989 251.766 193.001 251.786 193.014 cv
251.801 193.023 251.817 193.033 251.832 193.042 cv
251.845 193.051 251.859 193.059 251.872 193.068 cv
251.887 193.077 251.904 193.088 251.919 193.097 cv
251.935 193.107 251.948 193.116 251.963 193.125 cv
251.986 193.139 252.009 193.154 252.031 193.168 cv
252.047 193.178 252.064 193.189 252.08 193.199 cv
252.095 193.208 252.109 193.217 252.124 193.227 cv
252.139 193.236 252.153 193.245 252.167 193.254 cv
252.182 193.264 252.195 193.272 252.21 193.282 cv
252.236 193.298 252.261 193.314 252.287 193.33 cv
252.3 193.339 252.313 193.347 252.326 193.356 cv
252.342 193.366 252.357 193.376 252.373 193.385 cv
252.388 193.395 252.4 193.403 252.415 193.413 cv
252.431 193.422 252.447 193.433 252.462 193.443 cv
252.48 193.454 252.498 193.466 252.516 193.477 cv
252.536 193.49 252.558 193.504 252.578 193.517 cv
252.593 193.527 252.605 193.535 252.62 193.544 cv
252.635 193.554 252.65 193.564 252.664 193.573 cv
252.678 193.582 252.694 193.592 252.707 193.601 cv
252.726 193.613 252.744 193.625 252.763 193.637 cv
252.781 193.648 252.8 193.66 252.818 193.672 cv
252.835 193.683 252.853 193.695 252.871 193.707 cv
252.884 193.715 252.896 193.723 252.91 193.732 cv
252.927 193.743 252.944 193.755 252.962 193.766 cv
252.974 193.774 252.984 193.781 252.996 193.788 cv
253.023 193.806 253.049 193.823 253.075 193.84 cv
253.087 193.848 253.099 193.855 253.111 193.863 cv
253.129 193.875 253.145 193.886 253.164 193.898 cv
253.176 193.906 253.188 193.914 253.2 193.922 cv
253.221 193.936 253.241 193.949 253.262 193.963 cv
253.27 193.968 253.278 193.974 253.286 193.979 cv
253.313 193.997 253.34 194.014 253.367 194.032 cv
253.379 194.04 253.39 194.047 253.402 194.055 cv
253.42 194.067 253.438 194.079 253.456 194.091 cv
253.468 194.099 253.478 194.106 253.49 194.114 cv
253.516 194.131 253.545 194.15 253.571 194.168 cv
253.58 194.174 253.588 194.179 253.597 194.185 cv
253.617 194.198 253.637 194.212 253.658 194.225 cv
253.668 194.232 253.682 194.242 253.692 194.249 cv
253.712 194.262 253.731 194.274 253.75 194.287 cv
253.759 194.293 253.771 194.301 253.779 194.307 cv
253.807 194.325 253.834 194.343 253.861 194.362 cv
253.87 194.368 253.882 194.376 253.891 194.382 cv
253.91 194.395 253.929 194.407 253.948 194.42 cv
253.96 194.428 253.971 194.436 253.983 194.444 cv
254.003 194.458 254.025 194.472 254.045 194.486 cv
254.059 194.495 254.069 194.502 254.083 194.511 cv
254.104 194.526 254.127 194.542 254.148 194.556 cv
254.162 194.565 254.172 194.572 254.185 194.581 cv
254.202 194.593 254.22 194.605 254.237 194.616 cv
254.247 194.623 254.261 194.633 254.272 194.64 cv
254.298 194.658 254.325 194.677 254.352 194.695 cv
254.361 194.701 254.371 194.708 254.38 194.714 cv
254.399 194.727 254.419 194.741 254.438 194.754 cv
254.45 194.762 254.461 194.77 254.473 194.778 cv
254.492 194.791 254.512 194.804 254.531 194.818 cv
254.541 194.825 254.549 194.83 254.559 194.837 cv
254.587 194.856 254.613 194.874 254.64 194.893 cv
254.65 194.9 254.661 194.907 254.671 194.914 cv
254.689 194.927 254.709 194.941 254.727 194.953 cv
254.738 194.96 254.75 194.969 254.761 194.976 cv
254.785 194.993 254.808 195.01 254.833 195.026 cv
254.841 195.033 254.853 195.041 254.862 195.047 cv
254.883 195.061 254.907 195.078 254.928 195.093 cv
254.939 195.101 254.948 195.107 254.96 195.115 cv
254.979 195.129 254.998 195.142 255.018 195.156 cv
255.028 195.163 255.037 195.169 255.047 195.176 cv
255.074 195.195 255.101 195.214 255.128 195.233 cv
255.138 195.24 255.148 195.247 255.158 195.254 cv
255.177 195.268 255.195 195.28 255.215 195.294 cv
255.225 195.301 255.238 195.31 255.248 195.317 cv
255.269 195.332 255.289 195.346 255.31 195.361 cv
255.319 195.367 255.325 195.372 255.334 195.378 cv
255.36 195.397 255.388 195.416 255.414 195.435 cv
255.426 195.443 255.435 195.45 255.447 195.458 cv
255.465 195.471 255.484 195.485 255.502 195.498 cv
255.514 195.506 255.522 195.512 255.534 195.52 cv
255.56 195.539 255.588 195.559 255.614 195.577 cv
255.623 195.584 255.63 195.589 255.639 195.595 cv
255.659 195.61 255.681 195.625 255.701 195.639 cv
255.711 195.647 255.723 195.655 255.733 195.662 cv
255.752 195.676 255.773 195.691 255.792 195.705 cv
255.801 195.711 255.81 195.718 255.819 195.724 cv
255.846 195.744 255.874 195.764 255.901 195.783 cv
255.908 195.788 255.919 195.796 255.926 195.802 cv
255.947 195.817 255.968 195.832 255.989 195.847 cv
255.998 195.854 256.008 195.861 256.016 195.867 cv
256.042 195.885 256.066 195.903 256.092 195.921 cv
256.096 195.924 256.098 195.926 256.103 195.929 cv
256.13 195.949 256.159 195.97 256.186 195.99 cv
256.196 195.997 256.204 196.004 256.215 196.011 cv
256.235 196.026 256.254 196.04 256.274 196.054 cv
256.284 196.062 256.292 196.068 256.302 196.075 cv
256.329 196.095 256.357 196.115 256.384 196.135 cv
256.391 196.14 256.4 196.146 256.407 196.152 cv
256.428 196.167 256.448 196.182 256.469 196.198 cv
256.481 196.206 256.489 196.212 256.501 196.221 cv
256.522 196.236 256.542 196.251 256.563 196.266 cv
256.57 196.272 256.579 196.278 256.586 196.284 cv
256.613 196.304 256.64 196.324 256.667 196.344 cv
256.677 196.351 256.686 196.358 256.696 196.365 cv
256.715 196.379 256.734 196.394 256.753 196.408 cv
256.763 196.415 256.775 196.424 256.785 196.431 cv
256.81 196.45 256.834 196.468 256.859 196.486 cv
256.866 196.492 256.874 196.498 256.881 196.503 cv
256.905 196.521 256.926 196.537 256.95 196.555 cv
256.961 196.563 256.97 196.569 256.981 196.578 cv
257.001 196.593 257.02 196.607 257.039 196.622 cv
257.048 196.628 257.058 196.636 257.067 196.642 cv
257.094 196.662 257.121 196.683 257.148 196.703 cv
257.156 196.71 257.164 196.715 257.173 196.722 cv
257.194 196.738 257.212 196.752 257.233 196.768 cv
257.243 196.775 257.254 196.783 257.264 196.791 cv
257.285 196.807 257.308 196.824 257.33 196.841 cv
257.337 196.846 257.341 196.849 257.348 196.855 cv
257.376 196.876 257.402 196.896 257.43 196.917 cv
257.44 196.924 257.448 196.931 257.458 196.938 cv
257.478 196.954 257.497 196.968 257.517 196.983 cv
257.525 196.99 257.537 196.999 257.545 197.005 cv
257.572 197.026 257.6 197.047 257.626 197.067 cv
257.632 197.072 257.638 197.076 257.644 197.081 cv
257.667 197.098 257.689 197.115 257.712 197.133 cv
257.722 197.14 257.73 197.146 257.74 197.154 cv
257.76 197.17 257.782 197.187 257.803 197.203 cv
257.812 197.21 257.817 197.214 257.826 197.22 cv
257.853 197.242 257.88 197.262 257.907 197.284 cv
257.914 197.289 257.924 197.297 257.931 197.302 cv
257.952 197.318 257.973 197.335 257.994 197.351 cv
258.002 197.357 258.012 197.365 258.021 197.372 cv
258.044 197.39 258.067 197.408 258.091 197.426 cv
258.097 197.431 258.102 197.435 258.107 197.439 cv
258.134 197.46 258.161 197.481 258.188 197.502 cv
258.196 197.509 258.206 197.516 258.215 197.523 cv
258.234 197.539 258.256 197.555 258.275 197.571 cv
258.284 197.577 258.293 197.584 258.301 197.591 cv
258.329 197.613 258.356 197.634 258.383 197.656 cv
258.389 197.66 258.394 197.664 258.4 197.669 cv
258.424 197.687 258.445 197.704 258.468 197.723 cv
258.477 197.729 258.486 197.737 258.495 197.744 cv
258.516 197.761 258.54 197.779 258.561 197.796 cv
258.567 197.801 258.574 197.806 258.58 197.811 cv
258.607 197.833 258.634 197.854 258.661 197.876 cv
258.67 197.883 258.679 197.89 258.687 197.896 cv
258.707 197.912 258.728 197.929 258.747 197.944 cv
258.757 197.952 258.765 197.958 258.775 197.966 cv
258.801 197.987 258.827 198.008 258.854 198.03 cv
258.858 198.033 258.859 198.034 258.864 198.037 cv
258.889 198.058 258.915 198.079 258.941 198.099 cv
258.949 198.106 258.958 198.113 258.966 198.12 cv
258.987 198.136 259.008 198.154 259.029 198.17 cv
259.037 198.177 259.044 198.183 259.052 198.189 cv
259.079 198.211 259.108 198.234 259.134 198.255 cv
259.141 198.261 259.146 198.265 259.153 198.271 cv
259.175 198.288 259.197 198.307 259.219 198.324 cv
259.227 198.331 259.237 198.338 259.245 198.345 cv
259.268 198.364 259.292 198.384 259.316 198.403 cv
259.32 198.406 259.324 198.41 259.329 198.413 cv
259.356 198.436 259.385 198.459 259.412 198.482 cv
259.419 198.487 259.426 198.493 259.433 198.499 cv
259.455 198.516 259.478 198.535 259.499 198.553 cv
259.507 198.56 259.513 198.564 259.521 198.571 cv
259.55 198.594 259.577 198.617 259.605 198.64 cv
259.607 198.641 259.61 198.644 259.612 198.646 cv
259.637 198.666 259.664 198.689 259.689 198.709 cv
259.696 198.715 259.705 198.723 259.712 198.728 cv
259.735 198.748 259.757 198.765 259.78 198.785 cv
259.786 198.789 259.792 198.794 259.797 198.799 cv
259.825 198.821 259.854 198.846 259.881 198.868 cv
259.886 198.873 259.894 198.879 259.899 198.884 cv
259.921 198.901 259.944 198.921 259.965 198.939 cv
259.974 198.946 259.981 198.952 259.99 198.959 cv
260.016 198.981 260.042 199.003 260.068 199.025 cv
260.07 199.026 260.071 199.027 260.072 199.028 cv
260.1 199.052 260.128 199.075 260.156 199.099 cv
260.165 199.106 260.17 199.11 260.178 199.117 cv
260.199 199.135 260.222 199.154 260.244 199.172 cv
260.251 199.178 260.258 199.184 260.265 199.19 cv
260.293 199.213 260.32 199.236 260.348 199.26 cv
260.352 199.264 260.354 199.266 260.358 199.269 cv
260.383 199.29 260.408 199.311 260.432 199.331 cv
260.439 199.337 260.447 199.344 260.454 199.35 cv
260.477 199.37 260.5 199.39 260.523 199.409 cv
260.529 199.414 260.533 199.418 260.539 199.422 cv
260.567 199.446 260.593 199.469 260.621 199.492 cv
260.628 199.498 260.635 199.505 260.642 199.511 cv
260.664 199.529 260.685 199.547 260.706 199.565 cv
260.713 199.571 260.723 199.58 260.73 199.586 cv
260.758 199.61 260.784 199.633 260.812 199.657 cv
261.074 199.919 261.228 200.398 261.228 200.915 cv
261.228 201.646 260.921 202.452 260.179 202.824 cv
224.076 222.459 184.172 228.793 144.268 232.593 cv
144.268 232.593 li
144.139 232.604 144.011 232.614 143.882 232.624 cv
138.351 233.066 132.802 233.332 127.26 233.418 cv
101.623 232.515 mo
75.5832 230.256 50.049 223.863 26.4976 212.986 cv
26.3406 212.914 26.1858 212.842 26.029 212.769 cv
26.0222 212.766 26.0138 212.762 26.0071 212.759 cv
25.7696 212.648 25.5317 212.537 25.2946 212.426 cv
25.2286 212.42 25.1625 212.413 25.0965 212.407 cv
16.7103 211.615 8.34227 210.656 0 209.524 cv
0 209.524 li
0 180.634 li
0 180.634 li
0 180.634 li
33.1689 187.316 66.8273 191.327 101.234 191.328 cv
101.237 191.328 101.238 191.328 101.242 191.328 cv
101.242 191.328 li
101.242 191.328 li
101.245 191.328 101.244 191.328 101.248 191.328 cv
104.346 191.328 107.459 191.295 110.569 191.229 cv
109.323 199.641 107.691 207.961 105.812 216.132 cv
105.74 216.444 105.668 216.755 105.596 217.068 cv
105.595 217.068 105.594 217.068 105.594 217.069 cv
104.418 222.141 103.126 227.361 101.623 232.515 cv
.952941 .647059 .196078 rgb
f
127.26 233.418 mo
127.26 233.418 li
132.802 233.332 138.351 233.066 143.882 232.624 cv
138.349 233.066 132.805 233.332 127.26 233.418 cv
144.268 232.593 mo
144.268 232.593 li
184.172 228.793 224.076 222.459 260.179 202.824 cv
260.921 202.452 261.228 201.646 261.228 200.915 cv
261.228 201.646 260.921 202.452 260.179 202.824 cv
224.076 222.459 184.172 228.793 144.268 232.593 cv
144.268 232.593 li
26.4976 212.986 mo
26.3406 212.914 26.1858 212.842 26.029 212.769 cv
26.1858 212.842 26.3406 212.914 26.4976 212.986 cv
26.0071 212.759 mo
25.7696 212.648 25.5317 212.537 25.2946 212.426 cv
25.2286 212.42 25.1625 212.413 25.0965 212.407 cv
25.1625 212.413 25.2286 212.42 25.2946 212.426 cv
25.5317 212.537 25.7696 212.648 26.0071 212.759 cv
0 209.524 mo
0 209.524 li
0 209.524 li
260.73 199.586 mo
260.723 199.58 260.713 199.571 260.706 199.565 cv
260.714 199.572 260.722 199.579 260.73 199.586 cv
260.642 199.511 mo
260.635 199.505 260.628 199.498 260.621 199.492 cv
260.628 199.498 260.636 199.505 260.642 199.511 cv
260.539 199.422 mo
260.533 199.418 260.529 199.414 260.523 199.409 cv
260.528 199.413 260.534 199.418 260.539 199.422 cv
260.454 199.35 mo
260.447 199.344 260.439 199.337 260.432 199.331 cv
260.439 199.338 260.447 199.344 260.454 199.35 cv
260.358 199.269 mo
260.354 199.266 260.352 199.264 260.348 199.26 cv
260.352 199.263 260.355 199.266 260.358 199.269 cv
260.265 199.19 mo
260.258 199.184 260.251 199.178 260.244 199.172 cv
260.25 199.178 260.258 199.184 260.265 199.19 cv
260.178 199.117 mo
260.17 199.11 260.165 199.106 260.156 199.099 cv
260.164 199.105 260.17 199.111 260.178 199.117 cv
260.072 199.028 mo
260.071 199.027 260.07 199.026 260.068 199.025 cv
260.069 199.025 260.071 199.027 260.072 199.028 cv
259.99 198.959 mo
259.981 198.952 259.974 198.946 259.965 198.939 cv
259.974 198.946 259.981 198.952 259.99 198.959 cv
259.899 198.884 mo
259.894 198.879 259.886 198.873 259.881 198.868 cv
259.888 198.874 259.892 198.878 259.899 198.884 cv
259.797 198.799 mo
259.792 198.794 259.786 198.789 259.78 198.785 cv
259.786 198.79 259.792 198.794 259.797 198.799 cv
259.712 198.728 mo
259.705 198.723 259.696 198.715 259.689 198.709 cv
259.697 198.716 259.704 198.722 259.712 198.728 cv
259.612 198.646 mo
259.61 198.644 259.607 198.641 259.605 198.64 cv
259.607 198.642 259.61 198.644 259.612 198.646 cv
259.521 198.571 mo
259.513 198.564 259.507 198.56 259.499 198.553 cv
259.507 198.559 259.514 198.565 259.521 198.571 cv
259.433 198.499 mo
259.426 198.493 259.419 198.487 259.412 198.482 cv
259.42 198.488 259.426 198.493 259.433 198.499 cv
259.329 198.413 mo
259.324 198.41 259.32 198.406 259.316 198.403 cv
259.32 198.407 259.324 198.409 259.329 198.413 cv
259.245 198.345 mo
259.237 198.338 259.227 198.331 259.219 198.324 cv
259.228 198.331 259.236 198.338 259.245 198.345 cv
259.153 198.271 mo
259.146 198.265 259.141 198.261 259.134 198.255 cv
259.141 198.261 259.146 198.265 259.153 198.271 cv
259.052 198.189 mo
259.044 198.183 259.037 198.177 259.029 198.17 cv
259.037 198.177 259.044 198.182 259.052 198.189 cv
258.966 198.12 mo
258.958 198.113 258.949 198.106 258.941 198.099 cv
258.949 198.106 258.957 198.113 258.966 198.12 cv
258.864 198.037 mo
258.859 198.034 258.858 198.033 258.854 198.03 cv
258.857 198.032 258.861 198.035 258.864 198.037 cv
258.775 197.966 mo
258.765 197.958 258.757 197.952 258.747 197.944 cv
258.757 197.952 258.765 197.958 258.775 197.966 cv
258.687 197.896 mo
258.679 197.89 258.67 197.883 258.661 197.876 cv
258.67 197.883 258.678 197.889 258.687 197.896 cv
258.58 197.811 mo
258.574 197.806 258.567 197.801 258.561 197.796 cv
258.567 197.801 258.574 197.806 258.58 197.811 cv
258.495 197.744 mo
258.486 197.737 258.477 197.729 258.468 197.723 cv
258.477 197.73 258.486 197.737 258.495 197.744 cv
258.4 197.669 mo
258.394 197.664 258.389 197.66 258.383 197.656 cv
258.388 197.659 258.395 197.665 258.4 197.669 cv
258.301 197.591 mo
258.293 197.584 258.284 197.577 258.275 197.571 cv
258.284 197.578 258.292 197.584 258.301 197.591 cv
258.215 197.523 mo
258.206 197.516 258.196 197.509 258.188 197.502 cv
258.197 197.51 258.205 197.515 258.215 197.523 cv
258.107 197.439 mo
258.102 197.435 258.097 197.431 258.091 197.426 cv
258.096 197.43 258.102 197.435 258.107 197.439 cv
258.021 197.372 mo
258.012 197.365 258.002 197.357 257.994 197.351 cv
258.003 197.358 258.012 197.365 258.021 197.372 cv
257.931 197.302 mo
257.924 197.297 257.914 197.289 257.907 197.284 cv
257.915 197.29 257.924 197.296 257.931 197.302 cv
257.826 197.22 mo
257.817 197.214 257.812 197.21 257.803 197.203 cv
257.811 197.209 257.818 197.214 257.826 197.22 cv
257.74 197.154 mo
257.73 197.146 257.722 197.14 257.712 197.133 cv
257.721 197.14 257.731 197.147 257.74 197.154 cv
257.644 197.081 mo
257.638 197.076 257.632 197.072 257.626 197.067 cv
257.632 197.072 257.638 197.076 257.644 197.081 cv
257.545 197.005 mo
257.537 196.999 257.525 196.99 257.517 196.983 cv
257.526 196.991 257.535 196.998 257.545 197.005 cv
257.458 196.938 mo
257.448 196.931 257.44 196.924 257.43 196.917 cv
257.439 196.924 257.449 196.932 257.458 196.938 cv
257.348 196.855 mo
257.341 196.849 257.337 196.846 257.33 196.841 cv
257.336 196.845 257.342 196.85 257.348 196.855 cv
257.264 196.791 mo
257.254 196.783 257.243 196.775 257.233 196.768 cv
257.243 196.775 257.254 196.783 257.264 196.791 cv
257.173 196.722 mo
257.164 196.715 257.156 196.71 257.148 196.703 cv
257.156 196.709 257.165 196.716 257.173 196.722 cv
257.067 196.642 mo
257.058 196.636 257.048 196.628 257.039 196.622 cv
257.048 196.628 257.058 196.635 257.067 196.642 cv
256.981 196.578 mo
256.97 196.569 256.961 196.563 256.95 196.555 cv
256.96 196.562 256.971 196.57 256.981 196.578 cv
256.881 196.503 mo
256.874 196.498 256.866 196.492 256.859 196.486 cv
256.866 196.491 256.874 196.498 256.881 196.503 cv
256.785 196.431 mo
256.775 196.424 256.763 196.415 256.753 196.408 cv
256.763 196.415 256.775 196.424 256.785 196.431 cv
256.696 196.365 mo
256.686 196.358 256.677 196.351 256.667 196.344 cv
256.677 196.351 256.686 196.358 256.696 196.365 cv
256.586 196.284 mo
256.579 196.278 256.57 196.272 256.563 196.266 cv
256.571 196.272 256.578 196.278 256.586 196.284 cv
256.501 196.221 mo
256.489 196.212 256.481 196.206 256.469 196.198 cv
256.479 196.205 256.491 196.213 256.501 196.221 cv
256.407 196.152 mo
256.4 196.146 256.391 196.14 256.384 196.135 cv
256.392 196.141 256.399 196.146 256.407 196.152 cv
256.302 196.075 mo
256.292 196.068 256.284 196.062 256.274 196.054 cv
256.283 196.061 256.293 196.069 256.302 196.075 cv
256.215 196.011 mo
256.204 196.004 256.196 195.997 256.186 195.99 cv
256.196 195.997 256.205 196.004 256.215 196.011 cv
256.103 195.929 mo
256.098 195.926 256.096 195.924 256.092 195.921 cv
256.096 195.924 256.099 195.926 256.103 195.929 cv
256.016 195.867 mo
256.008 195.861 255.998 195.854 255.989 195.847 cv
255.998 195.854 256.007 195.86 256.016 195.867 cv
255.926 195.802 mo
255.919 195.796 255.908 195.788 255.901 195.783 cv
255.91 195.79 255.917 195.795 255.926 195.802 cv
255.819 195.724 mo
255.81 195.718 255.801 195.711 255.792 195.705 cv
255.802 195.712 255.81 195.718 255.819 195.724 cv
255.733 195.662 mo
255.723 195.655 255.711 195.647 255.701 195.639 cv
255.712 195.647 255.722 195.655 255.733 195.662 cv
255.639 195.595 mo
255.63 195.589 255.623 195.584 255.614 195.577 cv
255.623 195.584 255.63 195.589 255.639 195.595 cv
255.534 195.52 mo
255.522 195.512 255.514 195.506 255.502 195.498 cv
255.513 195.506 255.523 195.512 255.534 195.52 cv
255.447 195.458 mo
255.435 195.45 255.426 195.443 255.414 195.435 cv
255.425 195.443 255.436 195.45 255.447 195.458 cv
255.334 195.378 mo
255.325 195.372 255.319 195.367 255.31 195.361 cv
255.318 195.367 255.326 195.372 255.334 195.378 cv
255.248 195.317 mo
255.238 195.31 255.225 195.301 255.215 195.294 cv
255.226 195.302 255.237 195.309 255.248 195.317 cv
255.158 195.254 mo
255.148 195.247 255.138 195.24 255.128 195.233 cv
255.138 195.24 255.148 195.247 255.158 195.254 cv
255.047 195.176 mo
255.037 195.169 255.028 195.163 255.018 195.156 cv
255.028 195.163 255.037 195.169 255.047 195.176 cv
254.96 195.115 mo
254.948 195.107 254.939 195.101 254.928 195.093 cv
254.939 195.1 254.949 195.107 254.96 195.115 cv
254.862 195.047 mo
254.853 195.041 254.841 195.033 254.833 195.026 cv
254.843 195.033 254.852 195.04 254.862 195.047 cv
254.761 194.976 mo
254.75 194.969 254.738 194.96 254.727 194.953 cv
254.738 194.961 254.75 194.969 254.761 194.976 cv
254.671 194.914 mo
254.661 194.907 254.65 194.9 254.64 194.893 cv
254.65 194.9 254.661 194.907 254.671 194.914 cv
254.559 194.837 mo
254.549 194.83 254.541 194.825 254.531 194.818 cv
254.54 194.824 254.55 194.831 254.559 194.837 cv
254.473 194.778 mo
254.461 194.77 254.45 194.762 254.438 194.754 cv
254.45 194.762 254.461 194.769 254.473 194.778 cv
254.38 194.714 mo
254.371 194.708 254.361 194.701 254.352 194.695 cv
254.361 194.701 254.371 194.708 254.38 194.714 cv
254.272 194.64 mo
254.261 194.633 254.247 194.623 254.237 194.616 cv
254.249 194.625 254.259 194.632 254.272 194.64 cv
254.185 194.581 mo
254.172 194.572 254.162 194.565 254.148 194.556 cv
254.161 194.564 254.173 194.573 254.185 194.581 cv
254.083 194.511 mo
254.069 194.502 254.059 194.495 254.045 194.486 cv
254.059 194.495 254.069 194.502 254.083 194.511 cv
253.983 194.444 mo
253.971 194.436 253.96 194.428 253.948 194.42 cv
253.959 194.428 253.972 194.436 253.983 194.444 cv
253.891 194.382 mo
253.882 194.376 253.87 194.368 253.861 194.362 cv
253.871 194.369 253.88 194.375 253.891 194.382 cv
253.779 194.307 mo
253.771 194.301 253.759 194.293 253.75 194.287 cv
253.76 194.294 253.77 194.301 253.779 194.307 cv
253.692 194.249 mo
253.682 194.242 253.668 194.232 253.658 194.225 cv
253.669 194.233 253.681 194.241 253.692 194.249 cv
253.597 194.185 mo
253.588 194.179 253.58 194.174 253.571 194.168 cv
253.58 194.174 253.587 194.179 253.597 194.185 cv
253.49 194.114 mo
253.478 194.106 253.468 194.099 253.456 194.091 cv
253.468 194.099 253.479 194.106 253.49 194.114 cv
253.402 194.055 mo
253.39 194.047 253.379 194.04 253.367 194.032 cv
253.378 194.04 253.39 194.048 253.402 194.055 cv
253.286 193.979 mo
253.278 193.974 253.27 193.968 253.262 193.963 cv
253.27 193.968 253.279 193.974 253.286 193.979 cv
253.2 193.922 mo
253.188 193.914 253.176 193.906 253.164 193.898 cv
253.175 193.906 253.188 193.914 253.2 193.922 cv
253.111 193.863 mo
253.099 193.855 253.087 193.848 253.075 193.84 cv
253.087 193.848 253.099 193.856 253.111 193.863 cv
252.996 193.788 mo
252.984 193.781 252.974 193.774 252.962 193.766 cv
252.973 193.773 252.985 193.781 252.996 193.788 cv
252.91 193.732 mo
252.896 193.723 252.884 193.715 252.871 193.707 cv
252.884 193.715 252.896 193.723 252.91 193.732 cv
252.818 193.672 mo
252.8 193.66 252.781 193.648 252.763 193.637 cv
252.781 193.649 252.799 193.66 252.818 193.672 cv
252.707 193.601 mo
252.694 193.592 252.678 193.582 252.664 193.573 cv
252.679 193.582 252.693 193.591 252.707 193.601 cv
252.62 193.544 mo
252.605 193.535 252.593 193.527 252.578 193.517 cv
252.593 193.527 252.606 193.535 252.62 193.544 cv
252.516 193.477 mo
252.498 193.466 252.48 193.454 252.462 193.443 cv
252.48 193.454 252.498 193.466 252.516 193.477 cv
252.415 193.413 mo
252.4 193.403 252.388 193.395 252.373 193.385 cv
252.387 193.395 252.401 193.403 252.415 193.413 cv
252.326 193.356 mo
252.313 193.347 252.3 193.339 252.287 193.33 cv
252.3 193.339 252.313 193.347 252.326 193.356 cv
252.21 193.282 mo
252.195 193.272 252.182 193.264 252.167 193.254 cv
252.181 193.263 252.197 193.273 252.21 193.282 cv
252.124 193.227 mo
252.109 193.217 252.095 193.208 252.08 193.199 cv
252.095 193.209 252.109 193.217 252.124 193.227 cv
252.031 193.168 mo
252.009 193.154 251.986 193.139 251.963 193.125 cv
251.986 193.14 252.009 193.154 252.031 193.168 cv
251.919 193.097 mo
251.904 193.088 251.887 193.077 251.872 193.068 cv
251.888 193.078 251.904 193.088 251.919 193.097 cv
251.832 193.042 mo
251.817 193.033 251.801 193.023 251.786 193.014 cv
251.801 193.023 251.817 193.033 251.832 193.042 cv
251.726 192.976 mo
251.707 192.964 251.686 192.951 251.666 192.939 cv
251.686 192.951 251.706 192.964 251.726 192.976 cv
251.626 192.913 mo
251.611 192.904 251.594 192.894 251.579 192.884 cv
251.595 192.894 251.61 192.904 251.626 192.913 cv
251.538 192.859 mo
251.514 192.844 251.488 192.828 251.464 192.813 cv
251.489 192.828 251.513 192.843 251.538 192.859 cv
251.419 192.785 mo
251.403 192.775 251.388 192.765 251.371 192.755 cv
251.387 192.765 251.404 192.775 251.419 192.785 cv
251.334 192.732 mo
251.317 192.722 251.301 192.712 251.284 192.701 cv
251.301 192.712 251.317 192.722 251.334 192.732 cv
251.245 192.677 mo
251.219 192.662 251.192 192.645 251.167 192.629 cv
251.193 192.645 251.219 192.661 251.245 192.677 cv
251.125 192.603 mo
251.108 192.593 251.093 192.584 251.077 192.574 cv
251.093 192.584 251.108 192.593 251.125 192.603 cv
251.04 192.551 mo
251.023 192.541 251.007 192.531 250.991 192.521 cv
251.006 192.531 251.024 192.542 251.04 192.551 cv
250.917 192.476 mo
250.901 192.466 250.887 192.458 250.87 192.448 cv
250.886 192.457 250.902 192.467 250.917 192.476 cv
250.831 192.424 mo
250.814 192.414 250.799 192.405 250.783 192.394 cv
250.798 192.404 250.815 192.414 250.831 192.424 cv
250.743 192.37 mo
250.717 192.355 250.692 192.339 250.666 192.324 cv
250.691 192.339 250.718 192.355 250.743 192.37 cv
250.622 192.297 mo
250.605 192.287 250.593 192.28 250.576 192.27 cv
250.592 192.279 250.606 192.288 250.622 192.297 cv
250.534 192.244 mo
250.519 192.235 250.503 192.226 250.488 192.216 cv
250.502 192.225 250.519 192.235 250.534 192.244 cv
250.44 192.188 mo
250.416 192.173 250.392 192.159 250.368 192.144 cv
250.393 192.159 250.415 192.173 250.44 192.188 cv
250.327 192.12 mo
250.311 192.111 250.294 192.1 250.279 192.091 cv
250.294 192.101 250.311 192.11 250.327 192.12 cv
250.24 192.068 mo
250.217 192.054 250.192 192.039 250.169 192.026 cv
250.193 192.04 250.216 192.054 250.24 192.068 cv
250.117 191.995 mo
250.102 191.986 250.086 191.977 250.071 191.968 cv
250.087 191.977 250.102 191.986 250.117 191.995 cv
250.03 191.943 mo
250.015 191.934 249.998 191.924 249.982 191.915 cv
249.998 191.924 250.015 191.934 250.03 191.943 cv
249.943 191.892 mo
249.915 191.876 249.888 191.859 249.86 191.843 cv
249.887 191.859 249.915 191.876 249.943 191.892 cv
249.822 191.821 mo
249.805 191.811 249.789 191.801 249.772 191.791 cv
249.789 191.801 249.805 191.811 249.822 191.821 cv
249.736 191.77 mo
249.719 191.76 249.702 191.75 249.685 191.74 cv
249.702 191.75 249.719 191.76 249.736 191.77 cv
249.655 191.722 mo
249.623 191.704 249.593 191.686 249.561 191.668 cv
249.592 191.686 249.623 191.704 249.655 191.722 cv
249.526 191.647 mo
249.509 191.637 249.491 191.627 249.475 191.617 cv
249.491 191.627 249.509 191.637 249.526 191.647 cv
249.44 191.597 mo
249.41 191.58 249.379 191.562 249.348 191.544 cv
249.379 191.562 249.41 191.58 249.44 191.597 cv
249.315 191.525 mo
249.299 191.515 249.281 191.505 249.264 191.495 cv
249.282 191.505 249.298 191.515 249.315 191.525 cv
249.229 191.475 mo
249.212 191.465 249.194 191.455 249.177 191.445 cv
249.194 191.455 249.212 191.465 249.229 191.475 cv
249.145 191.427 mo
249.113 191.408 249.081 191.39 249.049 191.371 cv
249.081 191.39 249.112 191.408 249.145 191.427 cv
249.019 191.354 mo
249.002 191.345 248.982 191.333 248.965 191.324 cv
248.983 191.334 249.001 191.344 249.019 191.354 cv
248.932 191.305 mo
248.914 191.294 248.898 191.285 248.879 191.275 cv
248.897 191.285 248.914 191.294 248.932 191.305 cv
248.867 191.268 mo
248.831 191.247 248.792 191.225 248.755 191.204 cv
248.793 191.225 248.829 191.246 248.867 191.268 cv
248.72 191.184 mo
248.703 191.174 248.684 191.163 248.667 191.154 cv
248.685 191.164 248.702 191.174 248.72 191.184 cv
248.635 191.135 mo
248.603 191.117 248.572 191.1 248.54 191.082 cv
248.572 191.1 248.603 191.118 248.635 191.135 cv
248.508 191.064 mo
248.49 191.054 248.473 191.044 248.454 191.034 cv
248.472 191.044 248.49 191.054 248.508 191.064 cv
248.423 191.016 mo
248.403 191.005 248.388 190.996 248.368 190.985 cv
248.386 190.995 248.405 191.006 248.423 191.016 cv
248.349 190.975 mo
248.313 190.954 248.274 190.933 248.238 190.912 cv
248.275 190.933 248.313 190.954 248.349 190.975 cv
248.211 190.897 mo
248.193 190.887 248.172 190.875 248.153 190.865 cv
248.174 190.876 248.191 190.886 248.211 190.897 cv
248.129 190.851 mo
248.065 190.816 248.004 190.782 247.939 190.746 cv
248.003 190.781 248.065 190.816 248.129 190.851 cv
247.913 190.732 mo
247.893 190.721 247.874 190.71 247.854 190.699 cv
247.874 190.71 247.893 190.721 247.913 190.732 cv
247.836 190.689 mo
247.798 190.668 247.758 190.646 247.72 190.625 cv
247.758 190.646 247.798 190.668 247.836 190.689 cv
247.699 190.614 mo
247.681 190.604 247.66 190.592 247.641 190.582 cv
247.66 190.592 247.68 190.603 247.699 190.614 cv
247.613 190.567 mo
247.549 190.531 247.487 190.498 247.423 190.462 cv
247.485 190.497 247.551 190.532 247.613 190.567 cv
247.4 190.45 mo
247.38 190.439 247.36 190.428 247.34 190.418 cv
247.36 190.428 247.38 190.439 247.4 190.45 cv
247.319 190.406 mo
247.254 190.371 247.189 190.336 247.124 190.301 cv
247.189 190.336 247.254 190.371 247.319 190.406 cv
247.101 190.288 mo
247.079 190.276 247.06 190.266 247.038 190.254 cv
247.06 190.266 247.08 190.277 247.101 190.288 cv
247.032 190.251 mo
246.989 190.228 246.945 190.204 246.902 190.181 cv
246.945 190.204 246.99 190.228 247.032 190.251 cv
246.885 190.172 mo
246.865 190.161 246.843 190.149 246.823 190.139 cv
246.843 190.15 246.865 190.161 246.885 190.172 cv
246.804 190.129 mo
246.736 190.092 246.671 190.058 246.603 190.022 cv
246.67 190.057 246.737 190.093 246.804 190.129 cv
246.587 190.013 mo
246.565 190.002 246.543 189.99 246.521 189.978 cv
246.542 189.99 246.565 190.002 246.587 190.013 cv
246.51 189.973 mo
246.442 189.937 246.372 189.9 246.304 189.864 cv
246.372 189.9 246.442 189.936 246.51 189.973 cv
246.286 189.855 mo
246.217 189.818 246.146 189.781 246.076 189.744 cv
246.146 189.781 246.217 189.818 246.286 189.855 cv
246.07 189.741 mo
246.047 189.729 246.024 189.717 246.001 189.705 cv
246.024 189.717 246.047 189.729 246.07 189.741 cv
245.991 189.7 mo
245.92 189.663 245.852 189.628 245.78 189.591 cv
245.851 189.627 245.921 189.663 245.991 189.7 cv
245.769 189.585 mo
245.746 189.573 245.723 189.561 245.7 189.549 cv
245.722 189.561 245.747 189.573 245.769 189.585 cv
245.698 189.548 mo
245.625 189.51 245.553 189.473 245.48 189.436 cv
245.551 189.473 245.626 189.511 245.698 189.548 cv
245.47 189.431 mo
245.398 189.394 245.327 189.358 245.255 189.321 cv
245.327 189.358 245.398 189.394 245.47 189.431 cv
245.249 189.318 mo
245.224 189.305 245.202 189.294 245.177 189.281 cv
245.2 189.293 245.225 189.306 245.249 189.318 cv
245.175 189.28 mo
245.102 189.243 245.028 189.206 244.955 189.169 cv
245.028 189.206 245.102 189.243 245.175 189.28 cv
244.949 189.166 mo
244.851 189.116 244.75 189.066 244.652 189.017 cv
244.751 189.067 244.85 189.116 244.949 189.166 cv
244.651 189.016 mo
232.65 183.02 219.535 179.76 206.479 176.503 cv
206.479 176.503 206.479 176.503 206.479 176.503 cv
206.479 176.503 li
206.479 176.503 li
219.535 179.761 232.65 183.02 244.651 189.016 cv
.862745 .439216 .180392 rgb
f
180.007 184 mo
189.119 181.975 197.899 179.411 206.479 176.503 cv
197.849 174.35 189.245 172.197 181.005 169.254 cv
192.531 170.515 204.109 171.928 215.723 173.22 cv
225.883 169.447 235.815 165.264 245.733 160.987 cv
171.1 160.013 96.6297 158.882 20.7572 148.986 cv
13.8202 148.147 6.90359 147.56 0 147.137 cv
0 180.634 li
58.0412 192.327 117.576 195.841 180.007 184 cv
1 .772549 .203922 rgb
f
258.703 176.911 mo
244.339 176.209 230.003 174.807 215.723 173.22 cv
225.883 169.447 235.815 165.264 245.733 160.987 cv
253.527 161.089 261.335 161.189 269.135 161.297 cv
269.032 161.491 li
269.032 161.491 li
269.032 161.491 li
268.861 161.814 li
274.435 161.658 li
274.445 163.823 li
274.383 163.832 274.32 163.841 274.258 163.851 cv
275.39 173.594 li
258.703 176.911 li
317.27 174.817 mo
322.725 172.84 li
322.724 172.84 li
322.725 172.84 li
322.725 162.299 li
339.558 163.581 355.138 164.842 368.956 166.048 cv
351.954 169.909 334.691 172.777 317.27 174.817 cv
.952941 .647059 .196078 rgb
f
269.135 161.297 mo
261.335 161.189 253.527 161.089 245.733 160.987 cv
245.733 160.987 245.733 160.987 245.733 160.987 cv
253.532 161.089 261.331 161.189 269.135 161.297 cv
269.135 161.297 li
.952941 .752941 .294118 rgb
f
788.579 177.119 mo
688.572 161.329 654.291 171.35 654.291 171.35 cv
701.401 209.736 707.837 321.051 707.837 321.051 cv
722.47 335.865 821.007 341.059 900 342.822 cv
900 198.126 li
863.98 190.52 824.415 182.777 788.579 177.119 cv
.670588 .172549 .313726 rgb
f
871.481 244.261 mo
869.35 244.146 867.225 244.044 865.094 243.954 cv
865.093 243.072 865.093 242.194 865.093 241.312 cv
867.028 241.165 868.962 240.998 870.897 240.818 cv
871.093 241.964 871.289 243.114 871.481 244.261 cv
.611765 .141176 .290196 rgb
f
831.113 184.437 mo
839.157 236.222 842.82 288.59 842.345 340.926 cv
843.733 340.989 845.127 341.043 846.518 341.103 cv
847.741 306.369 849.239 271.522 853.619 237.035 cv
857.855 271.636 857.905 306.834 859.345 341.617 cv
861.335 341.691 863.327 341.77 865.313 341.839 cv
865.68 297.988 864.708 253.998 865.275 210.393 cv
873.809 253.774 880.515 297.763 881.772 342.359 cv
887.931 342.534 894.02 342.687 900 342.82 cv
900 198.127 li
877.815 193.443 854.291 188.706 831.113 184.437 cv
.670588 .172549 .313726 rgb
f
854.373 243.6 mo
853.857 243.588 853.34 243.576 852.824 243.565 cv
852.887 243.023 852.951 242.477 853.016 241.935 cv
853.407 241.926 853.797 241.917 854.188 241.905 cv
854.25 242.47 854.312 243.035 854.373 243.6 cv
.611765 .141176 .290196 rgb
f
750.603 333.477 mo
755.395 334.163 760.48 334.803 765.801 335.4 cv
764.493 295.119 764.027 254.837 758.707 214.556 cv
753.626 254.073 753.518 293.973 750.603 333.477 cv
.670588 .172549 .313726 rgb
f
723.994 252.157 mo
723.97 251.941 723.947 251.724 723.923 251.507 cv
722.696 233.636 721.204 215.716 718.932 197.712 cv
725.113 199.161 731.353 200.412 737.633 201.477 cv
739.232 217.602 740.716 233.732 742.104 249.857 cv
736.07 250.579 730.03 251.349 723.994 252.157 cv
746.262 249.367 mo
746.361 244.972 746.404 240.574 746.404 236.179 cv
746.404 225.037 746.128 213.896 745.79 202.754 cv
754.574 204.017 763.427 204.93 772.293 205.528 cv
769.593 209.908 766.501 213.924 762.962 217.497 cv
768.683 214.97 773.956 211.705 778.728 207.084 cv
774.996 216.291 770.085 223.725 763.325 229.418 cv
771.824 227.999 779.063 223.876 785.834 217.706 cv
778.936 228.645 771.174 238.05 761.905 245.128 cv
761.088 234.938 760.053 224.746 758.707 214.556 cv
757.262 225.793 756.219 237.064 755.4 248.345 cv
752.354 248.673 749.309 249.014 746.262 249.367 cv
828.101 240.08 mo
826.957 238.259 825.896 236.378 824.931 234.448 cv
825.527 234.465 826.121 234.48 826.716 234.492 cv
827.249 235.005 827.785 235.509 828.325 236.008 cv
828.254 237.366 828.18 238.722 828.101 240.08 cv
.611765 .141176 .290196 rgb
f
734.389 170.293 mo
738.358 206.694 741.664 243.095 744.553 279.495 cv
748.021 243.434 745.713 207.372 744.845 171.31 cv
741.238 170.932 737.749 170.592 734.389 170.293 cv
.670588 .172549 .313726 rgb
f
715.572 168.916 mo
703.3 168.231 693.137 168.11 684.849 168.293 cv
702.34 220.364 713.972 274.598 725.222 328.67 cv
726.499 329.002 727.835 329.326 729.219 329.644 cv
725.349 285.415 724.509 241.074 718.744 196.239 cv
717.955 187.17 717.156 177.917 715.572 168.916 cv
f
670.642 189.562 mo
666.634 183.713 662.209 178.44 657.315 173.964 cv
657.315 173.964 li
662.209 178.44 666.634 183.713 670.642 189.562 cv
670.642 189.562 li
.717647 .988235 .658823 rgb
f
681.625 208.979 mo
679.659 204.808 677.553 200.771 675.29 196.908 cv
675.29 196.908 675.29 196.908 675.29 196.908 cv
677.553 200.771 679.659 204.807 681.625 208.979 cv
681.625 208.979 681.625 208.979 681.625 208.979 cv
.992157 .992157 .760784 rgb
f
682.342 210.522 mo
682.107 210.008 681.865 209.489 681.625 208.979 cv
681.625 208.979 681.625 208.979 681.625 208.979 cv
681.865 209.488 682.107 210.008 682.342 210.521 cv
682.342 210.522 li
675.29 196.908 mo
673.809 194.379 672.258 191.921 670.642 189.562 cv
670.642 189.562 li
672.258 191.921 673.809 194.378 675.29 196.908 cv
675.29 196.908 675.29 196.908 675.29 196.908 cv
.054902 .721569 .670588 rgb
f
682.342 210.521 mo
682.107 210.008 681.865 209.488 681.625 208.979 cv
679.659 204.807 677.553 200.771 675.29 196.908 cv
673.809 194.378 672.258 191.921 670.642 189.562 cv
666.634 183.713 662.209 178.44 657.315 173.964 cv
662.786 176.939 668.28 179.857 673.794 182.72 cv
674.385 183.027 674.976 183.333 675.568 183.638 cv
678.416 184.853 681.288 186.013 684.182 187.119 cv
684.102 189.807 683.96 192.483 683.722 195.139 cv
683.262 200.267 682.802 205.394 682.342 210.521 cv
.741176 .219608 .407843 rgb
f
838.321 143.585 mo
767.007 148.086 693.398 162.605 652.982 171.593 cv
660.469 175.714 667.999 179.728 675.568 183.638 cv
719.219 202.257 768.457 207.947 815.987 206.071 cv
802.331 211.602 789.759 219.84 778.272 228.896 cv
804.133 233.89 830.43 236.439 856.116 232.872 cv
848.623 236.202 841.963 239.532 834.47 241.198 cv
856.59 243.655 877.906 239.669 900 237.954 cv
900 143.998 li
871.318 143.11 849.401 142.885 838.321 143.585 cv
1 .772549 .203922 rgb
f
879.85 255.485 mo
886.474 257.961 893.202 260.163 900 262.126 cv
900 238.946 li
893.78 245.214 887.016 250.684 879.85 255.485 cv
f
895.235 243.499 mo
896.856 242.03 898.445 240.513 900 238.946 cv
900 238.946 li
898.445 240.513 896.856 242.03 895.235 243.499 cv
.607843 .117647 .286274 rgb
f
900 246.562 mo
897.535 246.294 895.074 246.046 892.61 245.814 cv
893.494 245.056 894.369 244.285 895.235 243.499 cv
896.856 242.03 898.445 240.513 900 238.946 cv
900 238.946 li
900 246.562 li
.905882 .521569 .188235 rgb
f
652.982 171.593 mo
652.982 171.593 li
657.635 170.558 662.728 169.45 668.207 168.292 cv
662.729 169.45 657.634 170.558 652.982 171.593 cv
.580392 .666667 .470588 rgb
f
849.29 241.977 mo
848.869 241.977 848.449 241.975 848.027 241.972 cv
847.876 240.212 847.726 238.453 847.575 236.694 cv
850.361 235.487 853.174 234.179 856.116 232.872 cv
856.116 232.872 li
856.116 232.872 li
854.898 233.041 853.677 233.197 852.456 233.339 cv
852.386 233.347 852.315 233.355 852.244 233.363 cv
851.298 233.472 850.355 233.573 849.407 233.666 cv
849.376 233.669 849.343 233.672 849.311 233.675 cv
849.306 233.676 849.303 233.676 849.299 233.676 cv
849.296 233.677 849.293 233.677 849.29 233.677 cv
848.872 233.718 848.449 233.758 848.03 233.795 cv
848.02 233.796 848.012 233.797 848.003 233.798 cv
847.779 233.818 847.555 233.838 847.332 233.857 cv
847.294 233.416 847.256 232.975 847.218 232.534 cv
848.285 232.647 849.356 232.704 850.43 232.704 cv
851.225 232.704 852.02 232.673 852.818 232.609 cv
850.734 231.673 848.782 230.531 846.934 229.215 cv
846.903 228.86 846.873 228.504 846.842 228.149 cv
846.696 226.445 846.55 224.742 846.404 223.039 cv
846.404 223.039 li
846.404 223.039 li
846.401 223.004 846.398 222.969 846.395 222.934 cv
846.394 222.926 846.394 222.919 846.393 222.912 cv
846.39 222.877 846.387 222.843 846.385 222.809 cv
846.384 222.804 846.384 222.799 846.383 222.795 cv
846.381 222.765 846.379 222.735 846.376 222.706 cv
846.375 222.697 846.375 222.688 846.374 222.678 cv
846.371 222.646 846.369 222.614 846.366 222.582 cv
846.365 222.572 846.365 222.562 846.364 222.552 cv
846.362 222.529 846.36 222.506 846.358 222.482 cv
846.357 222.469 846.356 222.456 846.355 222.443 cv
846.353 222.414 846.351 222.386 846.348 222.357 cv
846.347 222.342 846.346 222.327 846.345 222.311 cv
846.344 222.294 846.342 222.277 846.341 222.26 cv
846.339 222.23 846.336 222.199 846.334 222.169 cv
846.333 222.158 846.332 222.147 846.332 222.137 cv
846.33 222.115 846.328 222.093 846.327 222.071 cv
846.326 222.067 846.326 222.063 846.326 222.059 cv
845.877 216.002 846.047 209.825 845.892 203.765 cv
845.855 202.311 845.818 200.859 845.781 199.406 cv
863.661 203.731 881.769 207.051 900 209.524 cv
900 237.954 li
900 237.954 li
890.191 238.715 880.538 239.924 870.897 240.818 cv
868.962 240.998 867.028 241.165 865.093 241.312 cv
861.463 241.59 857.829 241.801 854.188 241.905 cv
854.188 241.905 li
853.797 241.917 853.407 241.926 853.016 241.935 cv
851.775 241.963 850.533 241.977 849.29 241.977 cv
826.716 234.492 mo
826.121 234.48 825.527 234.465 824.931 234.448 cv
824.389 233.362 823.877 232.26 823.399 231.147 cv
824.486 232.298 825.593 233.411 826.716 234.492 cv
829.006 208.605 mo
828.982 208.567 828.956 208.53 828.932 208.492 cv
828.957 208.503 828.982 208.514 829.007 208.524 cv
829.007 208.551 829.006 208.577 829.006 208.605 cv
772.293 205.528 mo
763.427 204.93 754.574 204.017 745.79 202.754 cv
743.064 202.362 740.345 201.937 737.633 201.477 cv
731.088 200.367 724.59 199.056 718.152 197.528 cv
718.152 197.527 718.152 197.526 718.152 197.526 cv
735.856 201.726 754.039 204.292 772.296 205.522 cv
772.295 205.525 772.294 205.526 772.293 205.528 cv
772.913 204.504 mo
754.454 201.533 735.652 198.713 717.837 193.595 cv
717.728 192.142 717.626 190.687 717.531 189.232 cv
717.531 189.232 li
716.87 179.157 716.543 169.05 716.32 158.939 cv
722.581 157.828 729.037 156.726 735.65 155.648 cv
735.65 155.648 li
735.65 155.648 li
735.673 155.674 735.696 155.701 735.719 155.727 cv
736.674 156.824 737.778 157.769 738.974 158.486 cv
738.974 158.486 li
751.086 165.178 763.428 171.156 775.956 176.482 cv
774.705 178.598 773.38 180.654 771.968 182.642 cv
774.882 181.411 777.713 180.006 780.456 178.364 cv
781.367 178.739 782.281 179.111 783.194 179.479 cv
780.686 188.584 777.347 197.05 772.913 204.504 cv
829.064 197.195 mo
828.472 196.326 827.89 195.444 827.319 194.553 cv
827.905 194.719 828.489 194.884 829.075 195.048 cv
829.072 195.765 829.068 196.479 829.064 197.195 cv
684.182 187.119 mo
681.288 186.013 678.416 184.853 675.568 183.638 cv
674.976 183.333 674.385 183.027 673.794 182.72 cv
666.822 179.1 659.884 175.392 652.982 171.593 cv
657.634 170.558 662.729 169.45 668.207 168.292 cv
673.222 167.233 678.558 166.132 684.179 165.007 cv
684.179 165.008 li
672.42 167.361 661.893 169.611 652.982 171.593 cv
660.469 175.714 667.999 179.728 675.568 183.638 cv
678.417 184.854 681.287 186.013 684.182 187.119 cv
684.182 187.119 li
684.274 179.78 mo
681.78 178.339 679.333 176.803 676.935 175.162 cv
679.344 174.017 681.773 172.911 684.214 171.831 cv
684.24 174.477 684.271 177.129 684.274 179.78 cv
.905882 .521569 .188235 rgb
f
900 143.998 mo
882.823 143.466 868.071 143.172 856.621 143.172 cv
851.964 143.172 847.855 143.221 844.348 143.322 cv
844.348 143.322 li
847.855 143.221 851.967 143.172 856.625 143.172 cv
868.074 143.172 882.824 143.466 900 143.998 cv
900 143.998 li
.0745098 .831372 .764706 rgb
f
769.735 150.557 mo
773.912 149.992 778.124 149.445 782.36 148.919 cv
782.144 149.32 781.924 149.718 781.701 150.111 cv
778.023 150.271 774.343 150.412 770.661 150.529 cv
770.653 150.529 770.649 150.529 770.641 150.529 cv
770.547 150.532 770.453 150.535 770.359 150.538 cv
770.351 150.538 770.35 150.538 770.342 150.539 cv
770.254 150.541 770.167 150.544 770.079 150.547 cv
770.053 150.548 770.024 150.548 769.998 150.549 cv
769.91 150.552 769.823 150.555 769.735 150.557 cv
769.735 150.557 li
821.032 148.042 mo
820.506 147.029 819.986 146.014 819.469 144.995 cv
822.756 144.713 826.047 144.448 829.334 144.203 cv
829.328 145.336 829.322 146.472 829.317 147.604 cv
826.552 147.745 823.795 147.891 821.032 148.042 cv
900 147.122 mo
890.709 146.552 881.446 146.32 872.201 146.32 cv
862.932 146.32 853.679 146.554 844.44 146.915 cv
844.41 145.717 844.379 144.52 844.348 143.322 cv
847.855 143.221 851.964 143.172 856.621 143.172 cv
868.071 143.172 882.823 143.466 900 143.998 cv
900 143.998 li
900 147.122 li
1 .898039 .305882 rgb
f
900 209.524 mo
881.769 207.051 863.661 203.731 845.781 199.406 cv
845.591 191.969 845.401 184.533 845.211 177.097 cv
845.127 173.8 845.043 170.503 844.958 167.206 cv
863.184 172.357 881.517 176.91 900 180.634 cv
900 209.524 li
829.075 195.048 mo
828.489 194.884 827.905 194.719 827.319 194.552 cv
825.046 190.999 822.953 187.269 821.09 183.36 cv
823.675 185.461 826.366 187.255 829.107 188.904 cv
829.096 190.952 829.086 193 829.075 195.048 cv
829.12 186.27 mo
822.844 177.841 817.402 168.372 813.839 157.842 cv
818.966 159.472 824.1 161.064 829.24 162.613 cv
829.227 165.285 829.213 167.957 829.199 170.629 cv
829.177 174.957 829.155 179.286 829.133 183.615 cv
829.133 183.615 li
829.129 184.499 829.124 185.385 829.12 186.27 cv
783.194 179.479 mo
782.281 179.111 781.367 178.738 780.456 178.364 cv
781.691 177.624 782.907 176.837 784.106 175.995 cv
783.815 177.166 783.511 178.327 783.194 179.479 cv
775.956 176.482 mo
763.428 171.156 751.086 165.178 738.974 158.486 cv
738.974 158.486 li
737.778 157.769 736.674 156.824 735.719 155.727 cv
735.696 155.701 735.673 155.674 735.65 155.648 cv
746.634 153.857 758.057 152.138 769.735 150.557 cv
769.735 150.557 li
769.823 150.555 769.91 150.552 769.998 150.549 cv
770.025 150.548 770.052 150.548 770.079 150.547 cv
770.167 150.544 770.255 150.541 770.342 150.539 cv
770.348 150.538 770.354 150.538 770.359 150.538 cv
770.452 150.535 770.548 150.532 770.641 150.529 cv
770.647 150.529 770.654 150.529 770.661 150.529 cv
774.341 150.412 778.024 150.271 781.701 150.112 cv
780.173 152.807 778.481 155.317 776.594 157.572 cv
779.604 156.244 782.83 155.49 786.019 154.929 cv
783.113 162.54 779.901 169.809 775.956 176.482 cv
.952941 .647059 .196078 rgb
f
900 209.524 mo
881.769 207.051 863.661 203.731 845.781 199.406 cv
845.781 199.406 li
863.661 203.731 881.769 207.051 900 209.524 cv
900 209.524 li
829.075 195.048 mo
828.489 194.884 827.905 194.719 827.319 194.553 cv
827.319 194.552 li
827.905 194.719 828.489 194.884 829.075 195.048 cv
829.075 195.048 li
783.194 179.479 mo
782.281 179.111 781.367 178.739 780.456 178.364 cv
780.456 178.364 li
781.367 178.738 782.281 179.111 783.194 179.479 cv
783.194 179.479 li
775.956 176.482 mo
763.428 171.156 751.086 165.178 738.974 158.486 cv
738.974 158.486 li
738.974 158.486 li
751.086 165.178 763.428 171.156 775.956 176.482 cv
775.956 176.482 li
735.719 155.727 mo
735.696 155.701 735.673 155.674 735.65 155.648 cv
735.65 155.648 li
735.673 155.674 735.696 155.701 735.719 155.727 cv
.862745 .439216 .180392 rgb
f
769.735 150.557 mo
769.823 150.555 769.91 150.552 769.998 150.549 cv
769.91 150.552 769.823 150.555 769.735 150.557 cv
770.079 150.547 mo
770.167 150.544 770.254 150.541 770.342 150.539 cv
770.255 150.541 770.167 150.544 770.079 150.547 cv
770.359 150.538 mo
770.453 150.535 770.547 150.532 770.641 150.529 cv
770.548 150.532 770.452 150.535 770.359 150.538 cv
770.661 150.529 mo
774.343 150.412 778.023 150.271 781.701 150.111 cv
781.701 150.112 781.701 150.111 781.701 150.112 cv
778.024 150.271 774.341 150.412 770.661 150.529 cv
.952941 .752941 .294118 rgb
f
789.287 149.76 mo
825.821 162.169 862.601 173.099 900 180.634 cv
900 147.137 li
862.833 144.86 826.099 147.958 789.287 149.76 cv
1 .772549 .203922 rgb
f
772.296 205.522 mo
754.039 204.292 735.856 201.726 718.152 197.526 cv
718.041 196.216 717.936 194.906 717.837 193.595 cv
735.652 198.713 754.454 201.533 772.913 204.504 cv
772.71 204.845 772.504 205.186 772.296 205.522 cv
684.182 187.119 mo
681.287 186.013 678.417 184.854 675.568 183.638 cv
667.999 179.728 660.469 175.714 652.982 171.593 cv
661.893 169.611 672.42 167.361 684.179 165.008 cv
684.173 167.273 684.192 169.55 684.214 171.831 cv
681.773 172.911 679.344 174.017 676.935 175.162 cv
679.333 176.803 681.78 178.339 684.274 179.78 cv
684.276 182.231 684.254 184.68 684.182 187.119 cv
.882353 .478431 .184314 rgb
f
679.552 282.829 mo
663.596 278.455 651.431 270.409 642.111 259.889 cv
648.637 264.431 655.944 267.437 664.397 268.665 cv
657.189 264.803 651.985 259.705 648.115 253.375 cv
652.684 256.776 657.852 259.222 663.522 261.142 cv
652.472 253.819 645.965 243.625 642.326 232.187 cv
645.542 234.455 649.017 236.325 652.705 237.934 cv
647.256 231.9 643.514 225.041 640.599 217.718 cv
643.025 218.546 645.507 219.499 647.884 220.789 cv
640.498 212.326 637.649 200.116 636.188 189.106 cv
635.289 182.405 634.903 175.555 635.074 168.723 cv
632.897 180.006 627.11 190.241 620.947 199.502 cv
617.078 205.37 612.767 211.195 607.936 216.798 cv
612.012 215.614 616.061 214.919 620.085 214.71 cv
616.038 223.4 609.549 230.688 601.88 236.963 cv
605.393 235.809 608.84 234.56 612.094 232.846 cv
607.054 240.05 600.294 246.213 592.673 251.503 cv
596.346 251.229 600.025 250.819 603.663 249.973 cv
596.979 256.71 589.824 262.973 580.194 265.57 cv
586.6 266.56 593.241 265.542 599.73 263.245 cv
597.031 267.694 593.865 271.961 590.475 276.226 cv
596.407 273.341 602.111 270.275 607.268 266.64 cv
601.908 274.961 592.319 282.295 582.279 286.335 cv
586.953 286.485 591.755 285.795 596.454 284.637 cv
590.382 289.544 583.846 293.978 576.482 297.567 cv
611.029 295.979 646.397 293.92 682.576 291.37 cv
672.021 288.687 662.04 284.653 653.87 279.607 cv
662.115 281.837 670.713 282.81 679.552 282.829 cv
.643137 .588235 .172549 rgb
f
803.567 244.416 mo
763.428 246.532 723.292 251.833 683.075 258.16 cv
623.682 267.504 564.219 275.169 504.854 283.663 cv
504.103 283.583 502.967 283.739 501.395 284.158 cv
501.386 284.161 li
480.943 287.097 460.512 290.137 440.1 293.385 cv
321.617 302.18 142.788 279.295 117.085 271.78 cv
92.9568 264.725 68.6366 258.441 44.0673 253.412 cv
29.3661 250.404 14.6784 248.156 0 246.562 cv
0 396 li
71.3806 396 li
407.945 396 li
900 396 li
900 246.562 li
867.825 243.069 835.695 242.721 803.567 244.416 cv
1 .560784 .203922 rgb
f
379.854 295.367 mo
378.974 295.366 378.095 295.364 377.213 295.362 cv
377.214 295.359 li
378.105 295.362 378.988 295.363 379.877 295.364 cv
379.869 295.365 379.861 295.366 379.854 295.367 cv
.0627451 .760784 .686274 rgb
f
233.135 287.724 mo
233.135 287.724 li
233.135 287.722 li
233.135 287.722 li
233.135 287.724 li
216.898 286.125 mo
216.898 286.125 li
216.898 286.124 li
216.898 286.124 li
216.898 286.125 li
.796078 .235294 .415686 rgb
f
299.251 292.798 mo
288.307 292.156 277.47 291.417 266.856 290.604 cv
266.856 290.602 li
277.475 291.415 288.302 292.154 299.251 292.796 cv
299.251 292.798 299.251 292.796 299.251 292.798 cv
.839216 .301961 .541176 rgb
f
216.898 286.125 mo
212.832 285.707 208.839 285.284 204.931 284.857 cv
204.931 284.855 li
208.837 285.282 212.834 285.706 216.898 286.124 cv
216.898 286.125 li
.756863 .192157 .384314 rgb
f
233.135 287.724 mo
230.321 287.459 227.542 287.191 224.786 286.919 cv
224.786 286.918 li
227.535 287.189 230.327 287.458 233.135 287.722 cv
233.135 287.724 li
f
329.271 294.284 mo
325.407 294.129 321.545 293.96 317.687 293.777 cv
317.687 293.774 li
321.543 293.957 325.409 294.127 329.271 294.281 cv
329.271 294.284 329.271 294.281 329.271 294.284 cv
.796078 .235294 .415686 rgb
f
355.556 295.094 mo
346.834 294.909 338.048 294.635 329.271 294.284 cv
329.271 294.281 329.271 294.284 329.271 294.281 cv
338.051 294.632 346.831 294.906 355.556 295.091 cv
355.556 295.094 355.556 295.091 355.556 295.094 cv
317.687 293.777 mo
311.516 293.484 305.375 293.157 299.251 292.798 cv
299.251 292.796 299.251 292.798 299.251 292.796 cv
305.367 293.154 311.524 293.482 317.687 293.774 cv
317.687 293.777 li
266.856 290.604 mo
257.991 289.925 249.28 289.196 240.794 288.43 cv
240.794 288.428 li
249.282 289.194 257.99 289.923 266.856 290.602 cv
266.856 290.604 li
.756863 .192157 .384314 rgb
f
364.204 295.247 mo
361.324 295.206 358.45 295.155 355.556 295.094 cv
355.556 295.091 355.556 295.094 355.556 295.091 cv
358.447 295.152 361.329 295.204 364.204 295.245 cv
364.204 295.247 li
.796078 .235294 .415686 rgb
f
377.213 295.362 mo
377.213 295.362 li
377.214 295.359 li
377.214 295.359 li
377.213 295.362 li
.0745098 .823529 .780392 rgb
f
377.213 295.362 mo
372.907 295.348 368.555 295.309 364.204 295.247 cv
364.204 295.245 li
368.559 295.307 372.904 295.346 377.214 295.359 cv
377.213 295.362 li
.839216 .301961 .541176 rgb
f
240.794 288.43 mo
238.221 288.198 235.665 287.962 233.135 287.724 cv
233.135 287.722 li
235.665 287.96 238.22 288.196 240.794 288.428 cv
240.794 288.43 li
224.786 286.919 mo
222.132 286.657 219.493 286.392 216.898 286.125 cv
216.898 286.124 li
219.502 286.391 222.122 286.655 224.786 286.918 cv
224.786 286.919 li
204.931 284.857 mo
186.572 282.851 170.066 280.765 156.299 278.8 cv
156.299 278.799 li
170.062 280.764 186.576 282.85 204.931 284.855 cv
204.931 284.857 li
144.268 277.005 mo
140.088 276.351 136.276 275.72 132.879 275.12 cv
132.878 275.12 li
136.277 275.72 140.088 276.351 144.268 277.005 cv
144.268 277.006 144.269 277.004 144.268 277.005 cv
.796078 .235294 .415686 rgb
f
43.8686 253.372 mo
43.8515 253.368 43.8346 253.365 43.8176 253.361 cv
43.8346 253.365 43.8515 253.368 43.8686 253.372 cv
.941176 .701961 .25098 rgb
f
325.113 298.334 mo
325.109 298.334 325.107 298.334 325.103 298.334 cv
284.671 298.333 244.804 294.198 204.489 291.315 cv
204.28 291.3 204.064 291.285 203.856 291.27 cv
203.746 291.262 203.64 291.254 203.53 291.247 cv
203.353 291.234 203.182 291.222 203.005 291.209 cv
202.602 291.181 202.191 291.152 201.788 291.124 cv
201.749 291.121 201.715 291.119 201.676 291.116 cv
201.531 291.106 201.389 291.096 201.244 291.086 cv
201.24 291.085 201.233 291.085 201.23 291.085 cv
201.032 291.071 200.834 291.057 200.636 291.043 cv
200.427 291.029 200.216 291.014 200.007 291 cv
200.007 291 li
199.877 290.984 199.747 290.968 199.617 290.952 cv
199.604 290.95 199.592 290.949 199.58 290.948 cv
193.821 290.252 188.191 290.068 182.593 290.068 cv
182.59 290.068 182.586 290.068 182.583 290.068 cv
182.583 290.068 li
182.583 290.068 li
182.582 290.068 182.58 290.068 182.578 290.068 cv
179.6 290.068 176.631 290.12 173.658 290.175 cv
173.5 290.178 173.342 290.181 173.185 290.183 cv
172.94 290.188 172.695 290.192 172.45 290.197 cv
172.449 290.197 172.448 290.197 172.447 290.197 cv
171.937 290.206 171.427 290.216 170.916 290.224 cv
168.734 290.262 166.545 290.293 164.347 290.298 cv
164.148 290.299 163.948 290.299 163.749 290.299 cv
163.749 290.299 li
163.693 290.299 163.638 290.299 163.583 290.299 cv
163.582 290.299 163.582 290.299 163.582 290.299 cv
161.865 290.298 160.14 290.279 158.407 290.234 cv
157.917 287.359 157.161 283.292 156.299 278.8 cv
170.066 280.765 186.572 282.851 204.931 284.857 cv
208.839 285.284 212.832 285.707 216.898 286.125 cv
216.898 286.125 li
219.493 286.392 222.132 286.657 224.786 286.919 cv
227.542 287.191 230.321 287.459 233.135 287.724 cv
233.135 287.724 li
235.665 287.962 238.221 288.198 240.794 288.43 cv
249.28 289.196 257.991 289.925 266.856 290.604 cv
266.856 290.604 li
277.47 291.417 288.307 292.156 299.251 292.798 cv
299.251 292.798 li
305.375 293.157 311.516 293.484 317.687 293.777 cv
317.687 293.777 li
321.545 293.96 325.407 294.129 329.271 294.284 cv
329.271 294.284 li
338.048 294.635 346.834 294.909 355.556 295.094 cv
355.556 295.094 li
358.45 295.155 361.324 295.206 364.204 295.247 cv
364.204 295.247 li
368.555 295.309 372.907 295.348 377.213 295.362 cv
377.213 295.362 li
378.095 295.364 378.974 295.366 379.854 295.367 cv
377.906 295.582 375.961 295.805 374.007 296 cv
373.899 296.011 373.793 296.022 373.685 296.033 cv
357.367 297.679 341.193 298.333 325.117 298.334 cv
325.113 298.334 li
141.997 289.181 mo
141.438 289.12 140.879 289.056 140.321 288.99 cv
138.024 285.298 135.892 281.456 133.977 277.465 cv
133.976 277.466 133.973 277.467 133.971 277.468 cv
133.599 276.691 133.234 275.908 132.879 275.12 cv
136.276 275.72 140.088 276.351 144.268 277.005 cv
143.369 281.664 142.555 285.991 141.997 289.181 cv
90.9493 276.494 mo
70.4199 268.994 50.42 259.473 30.1042 250.788 cv
34.674 251.577 39.2452 252.428 43.8176 253.361 cv
43.8346 253.365 43.8515 253.368 43.8686 253.372 cv
43.9348 253.385 44.0011 253.399 44.0673 253.412 cv
58.6119 256.389 73.0696 259.806 87.4515 263.562 cv
87.0028 264.149 86.5443 264.723 86.0751 265.284 cv
87.1361 264.816 88.2204 264.409 89.3196 264.052 cv
91.4168 264.604 93.5096 265.163 95.6037 265.729 cv
94.1396 269.402 92.6007 272.998 90.9493 276.494 cv
1 .72549 .270588 rgb
f
803.567 244.416 mo
763.428 246.532 723.292 251.833 683.075 258.16 cv
623.682 267.504 564.219 275.169 504.854 283.663 cv
504.103 283.583 502.967 283.739 501.395 284.158 cv
501.386 284.161 li
480.943 287.097 460.512 290.137 440.1 293.385 cv
421.266 294.783 400.904 295.378 379.877 295.364 cv
377.922 295.58 375.969 295.804 374.007 296 cv
315.007 302 258.007 295 200.007 291 cv
190.864 289.857 182.048 290.02 173.185 290.183 cv
166.538 290.306 159.864 290.428 153.007 290 cv
108.966 288.273 70.1444 267.906 30.1042 250.788 cv
20.0644 249.054 10.0299 247.651 0 246.562 cv
0 396 li
71.3806 396 li
407.945 396 li
900 396 li
900 246.562 li
867.825 243.069 835.695 242.721 803.567 244.416 cv
1 .560784 .203922 rgb
f
0 396 mo
0 396 li
0 316.872 li
29.2371 318.932 57.004 320.251 81.274 320.409 cv
78.8276 324.412 76.1006 328.155 73.0607 331.593 cv
73.0607 331.593 li
72.171 332.599 71.2639 333.589 70.3199 334.542 cv
70.3199 334.542 li
70.349 334.529 70.3785 334.516 70.4075 334.503 cv
70.4138 334.501 70.4206 334.498 70.4269 334.495 cv
70.4511 334.484 70.4747 334.474 70.4988 334.463 cv
70.5037 334.461 70.5086 334.458 70.5134 334.456 cv
77.0291 331.558 83.0405 327.821 88.4871 322.56 cv
88.5053 322.542 88.5233 322.525 88.5415 322.507 cv
88.5415 322.507 li
88.0501 323.72 87.5355 324.898 87.0076 326.057 cv
87.011 326.056 87.0154 326.054 87.0187 326.053 cv
83.6291 333.5 79.462 339.851 74.2149 345.122 cv
72.9761 344.768 71.7428 344.505 70.5711 344.347 cv
69.5073 344.244 68.5507 344.138 67.6586 344.138 cv
67.6106 344.138 67.5627 344.138 67.5151 344.139 cv
66.5746 344.168 65.7809 344.177 65.1054 344.275 cv
63.752 344.487 63.0072 344.667 63.0072 344.667 cv
63.0072 344.667 63.5844 345.13 64.5582 345.911 cv
65.4893 346.699 66.6907 347.851 67.9463 349.196 cv
70.4799 351.911 73.1736 355.526 76.2132 358.1 cv
76.6214 358.444 77.0681 358.787 77.5455 359.129 cv
76.6831 359.971 75.8085 360.795 74.922 361.599 cv
0 361.599 li
0 396 li
492.823 361.599 mo
462.716 361.599 li
462.035 356.544 456.362 351.803 450.416 351.803 cv
447.672 351.803 444.871 352.812 442.473 355.265 cv
442.388 343.521 436.472 338.726 429.363 338.726 cv
421.186 338.726 411.43 345.064 407.14 354.463 cv
407.169 348.806 403.409 346.724 398.907 346.724 cv
393.79 346.724 387.716 349.412 385.155 352.598 cv
383.606 345.846 380.761 343.347 377.581 343.347 cv
372.079 343.347 365.572 350.829 363.029 356.712 cv
360.945 354.724 358.376 352.949 355.971 351.774 cv
354.07 350.827 352.317 350.205 351.052 349.84 cv
349.769 349.492 349.007 349.333 349.007 349.333 cv
349.007 349.333 349.354 350.014 349.931 351.145 cv
350.491 352.263 351.218 353.813 351.958 355.54 cv
352.387 356.515 352.806 357.549 353.228 358.598 cv
351.144 357.679 348.798 357.038 346.769 356.557 cv
345.154 356.201 343.733 355.888 342.716 355.663 cv
341.65 355.457 341.007 355.333 341.007 355.333 cv
341.007 355.333 341.176 355.93 341.53 356.91 cv
341.885 357.879 342.419 359.296 343.192 360.742 cv
343.338 361.025 343.49 361.311 343.648 361.599 cv
309.241 361.599 li
310.458 359.306 311.59 356.883 312.628 354.638 cv
313.713 352.278 314.641 350.117 315.3 348.548 cv
315.965 346.985 316.341 346 316.341 346 cv
316.341 346 315.356 346.15 313.734 346.497 cv
312.116 346.851 309.867 347.418 307.352 348.289 cv
304.205 349.359 300.628 350.984 297.448 353.151 cv
298.214 351.045 298.933 348.739 299.64 346.365 cv
300.66 342.959 301.64 339.417 302.528 336.202 cv
303.426 332.93 304.212 330.069 304.774 328.026 cv
305.336 325.926 305.674 324.667 305.674 324.667 cv
305.674 324.667 304.57 325.254 302.793 326.368 cv
301.016 327.482 298.565 329.13 295.897 331.276 cv
293.227 333.416 290.355 336.071 287.74 339.128 cv
286.366 340.727 285.073 342.45 283.93 344.25 cv
282.524 342.973 280.894 341.783 279.117 340.776 cv
275.792 338.919 271.984 337.749 268.578 337.582 cv
268.125 337.553 267.682 337.539 267.251 337.539 cv
264.434 337.539 262.089 338.114 260.494 338.706 cv
259.565 339.025 258.866 339.381 258.393 339.624 cv
257.928 339.867 257.674 340 257.674 340 cv
257.674 340 257.93 340.117 258.4 340.333 cv
258.861 340.544 259.523 340.83 260.292 341.278 cv
261.839 342.115 263.779 343.466 265.449 345.219 cv
267.149 346.942 268.571 349.064 269.843 351.167 cv
271.116 353.288 272.261 355.43 273.565 357.242 cv
273.978 357.825 274.439 358.421 274.936 359.031 cv
274.367 358.555 273.79 358.122 273.212 357.749 cv
270.174 355.882 265.741 354.907 262.141 354.485 cv
258.531 354.038 255.674 354 255.674 354 cv
255.674 354 257.052 356.361 259.25 359.17 cv
259.875 359.958 260.552 360.781 261.271 361.599 cv
156.912 361.599 li
154.398 356.454 152.021 351.222 149.928 345.812 cv
156.956 349.816 164.109 352.118 171.413 352.118 cv
172.33 352.118 173.249 352.082 174.172 352.008 cv
174.172 352.008 li
174.172 352.008 li
162.58 346.803 154.488 336.055 146.565 324.135 cv
151.256 326.129 156.031 327.417 160.824 328.492 cv
160.824 328.492 li
160.824 328.492 li
160.824 328.492 li
160.824 328.492 li
160.824 328.492 li
160.824 328.492 li
160.794 328.46 160.763 328.428 160.733 328.396 cv
160.709 328.37 160.684 328.344 160.659 328.318 cv
160.657 328.316 160.654 328.312 160.652 328.31 cv
157.072 324.522 153.633 320.471 150.396 316.178 cv
150.392 316.181 150.387 316.184 150.382 316.187 cv
150.157 315.889 149.933 315.588 149.71 315.288 cv
162.27 312.175 169.28 307.505 168.884 300.895 cv
205.053 312.19 281.848 316.351 365.657 323.449 cv
352.455 320.51 339.244 317.526 326.007 314.445 cv
353.933 308.334 382.172 302.815 410.593 297.739 cv
410.593 297.739 li
410.593 297.739 li
440.405 310.046 465.927 331.63 488.506 356.719 cv
487.636 357.323 486.763 357.896 485.886 358.436 cv
485.881 358.438 485.875 358.442 485.871 358.445 cv
485.849 358.458 485.827 358.472 485.805 358.485 cv
485.798 358.49 485.791 358.494 485.784 358.498 cv
485.757 358.515 485.73 358.531 485.703 358.547 cv
485.703 358.547 li
485.703 358.547 li
485.703 358.547 li
487.1 358.532 488.497 358.437 489.894 358.27 cv
490.877 359.374 491.851 360.482 492.823 361.599 cv
152.404 361.599 mo
146.225 361.599 li
143.905 358.028 141.855 354.243 140.17 350.318 cv
144.064 354.44 148.175 358.145 152.404 361.599 cv
84.8809 351.202 mo
84.3762 350.66 83.8538 350.155 83.3155 349.701 cv
81.8726 348.461 79.999 347.36 77.9733 346.472 cv
84.7871 344.101 90.9214 340.099 96.7546 334.784 cv
93.04 340.675 89.1065 346.178 84.8809 351.202 cv
.929412 .423529 .192157 rgb
f
432.797 293.882 mo
435.324 293.454 437.852 293.028 440.381 292.604 cv
440.381 292.604 li
440.381 292.604 li
440.935 292.761 441.491 292.918 442.045 293.076 cv
441.397 293.179 440.748 293.282 440.1 293.385 cv
440.1 293.385 li
437.691 293.564 435.255 293.729 432.797 293.882 cv
.0392157 .364706 .466667 rgb
f
496.967 361.599 mo
492.823 361.599 li
491.851 360.482 490.877 359.374 489.894 358.27 cv
494.218 357.753 498.533 356.546 502.783 354.876 cv
500.876 357.199 498.94 359.441 496.967 361.599 cv
590.609 357.805 mo
589.638 357.276 588.583 356.797 587.448 356.37 cv
584.038 353.875 580.732 351.191 577.572 348.346 cv
581.896 350.847 586.169 353.417 590.394 356.063 cv
590.454 356.639 590.524 357.225 590.609 357.805 cv
488.506 356.719 mo
465.927 331.63 440.405 310.046 410.593 297.739 cv
417.981 296.419 425.385 295.139 432.797 293.882 cv
435.255 293.729 437.691 293.564 440.1 293.385 cv
440.1 293.385 li
440.748 293.282 441.397 293.179 442.045 293.076 cv
460.722 298.392 479.334 304.378 497.621 311.188 cv
492.382 317.37 486.591 322.493 479.56 325.65 cv
479.56 325.65 li
479.56 325.65 li
480.517 325.727 481.472 325.764 482.423 325.764 cv
490.003 325.764 497.423 323.376 504.717 319.22 cv
504.699 319.268 504.68 319.316 504.662 319.364 cv
502.998 323.65 501.156 327.822 499.221 331.936 cv
499.227 331.934 499.233 331.931 499.239 331.929 cv
499.239 331.929 li
499.233 331.931 499.227 331.934 499.221 331.936 cv
497.7 335.169 496.127 338.368 494.509 341.54 cv
494.509 341.54 li
501.261 336.521 507.863 331.133 513.978 324.801 cv
514.268 324.502 514.556 324.2 514.843 323.896 cv
514.843 323.896 li
514.584 324.5 514.291 325.089 514.016 325.685 cv
514.029 325.68 514.041 325.675 514.054 325.669 cv
509.795 334.917 503.633 343.358 496.704 349.986 cv
496.7 349.987 496.693 349.989 496.689 349.99 cv
494.05 352.513 491.302 354.777 488.506 356.719 cv
.878431 .333333 .180392 rgb
f
442.045 293.076 mo
441.491 292.918 440.935 292.761 440.381 292.604 cv
463.174 288.783 486.058 285.211 508.962 281.819 cv
508.653 282.285 508.341 282.749 508.027 283.21 cv
506.968 283.361 505.912 283.512 504.854 283.663 cv
504.727 283.65 504.59 283.643 504.441 283.643 cv
503.708 283.643 502.702 283.809 501.395 284.158 cv
501.386 284.161 li
481.592 287.004 461.811 289.944 442.045 293.076 cv
567.288 274.931 mo
567.12 274.489 566.954 274.045 566.79 273.599 cv
576.05 272.33 585.307 271.081 594.553 269.848 cv
594.468 270.214 594.461 270.576 594.539 270.934 cv
594.48 271.013 594.422 271.093 594.362 271.173 cv
585.335 272.433 576.314 273.682 567.288 274.931 cv
.0431373 .466667 .490196 rgb
f
594.362 271.173 mo
594.422 271.093 594.48 271.013 594.539 270.934 cv
594.555 271.003 594.573 271.072 594.595 271.141 cv
594.519 271.151 594.439 271.163 594.362 271.173 cv
.596078 .443137 .160784 rgb
f
900 361.599 mo
833.172 361.599 li
835.718 355.846 837.282 349.361 837.672 344.201 cv
838.398 334.607 833.172 328.435 826.759 328.435 cv
823.014 328.435 818.865 330.538 815.259 335.293 cv
816.02 332.397 816.602 326.946 815.377 323.021 cv
816.487 319.694 817.718 316.838 818.767 314.716 cv
819.417 313.447 819.96 312.417 820.381 311.742 cv
820.786 311.047 821.007 310.667 821.007 310.667 cv
821.007 310.667 820.668 310.927 820.047 311.406 cv
819.74 311.65 819.346 311.94 818.913 312.306 cv
818.488 312.684 818.003 313.115 817.463 313.595 cv
816.022 314.928 814.272 316.756 812.461 319.012 cv
812.206 318.874 811.935 318.759 811.646 318.667 cv
811.108 318.495 810.563 318.415 810.014 318.415 cv
804.914 318.415 799.511 325.324 797.227 330.149 cv
798.907 324.737 799.345 315.723 797.949 307.638 cv
831.861 311.256 866.867 314.539 900 316.872 cv
900 361.599 li
708.951 361.599 mo
633.87 361.599 li
636.516 358.986 639.098 355.34 641.693 352.535 cv
643.051 351.024 644.367 349.72 645.364 348.805 cv
646.39 347.886 647.007 347.333 647.007 347.333 cv
647.007 347.333 646.235 347.234 644.872 347.157 cv
644.63 347.136 644.375 347.128 644.105 347.128 cv
643.604 347.128 643.052 347.156 642.442 347.186 cv
641.495 347.214 640.47 347.361 639.352 347.554 cv
634.866 348.272 629.404 350.721 625.833 354.067 cv
624.493 355.316 623.251 356.919 622.136 358.661 cv
622.297 355.796 622.168 352.766 621.771 350.101 cv
621.429 347.73 620.913 345.683 620.465 344.256 cv
619.993 342.825 619.674 342 619.674 342 cv
619.674 342 619.327 342.796 618.75 344.12 cv
618.174 345.423 617.336 347.193 616.352 349.142 cv
615.879 350.096 615.364 351.094 614.838 352.119 cv
614.768 347.543 613.296 342.053 611.855 337.737 cv
611.113 335.523 610.418 333.601 609.888 332.216 cv
609.359 330.833 609.007 330 609.007 330 cv
609.007 330 608.671 330.781 608.168 332.114 cv
607.669 333.445 606.983 335.344 606.35 337.54 cv
605.7 339.776 605.061 342.309 604.59 344.892 cv
603.747 344.079 602.86 343.347 601.972 342.73 cv
599.987 341.35 597.994 340.605 596.591 340.296 cv
595.885 340.136 595.325 340.064 594.932 340.043 cv
594.55 340.015 594.341 340 594.341 340 cv
594.341 340 594.468 340.161 594.701 340.455 cv
594.936 340.735 595.254 341.16 595.6 341.702 cv
596.303 342.779 597.061 344.323 597.612 346.084 cv
597.688 346.323 597.76 346.565 597.829 346.81 cv
588.057 341.214 579.596 333.635 572.031 324.587 cv
572.026 324.589 572.023 324.59 572.018 324.592 cv
567.708 319.436 563.692 313.801 559.893 307.777 cv
567.99 315.155 576.645 320.093 586.8 321.808 cv
586.807 321.809 586.815 321.811 586.822 321.812 cv
586.844 321.815 586.867 321.819 586.888 321.823 cv
586.888 321.823 li
586.888 321.823 li
586.888 321.823 li
586.888 321.823 li
586.888 321.823 li
586.873 321.81 586.858 321.797 586.843 321.784 cv
586.11 321.165 585.413 320.51 584.716 319.857 cv
584.706 319.861 584.697 319.864 584.688 319.868 cv
581.254 316.652 578.246 313.02 575.593 308.969 cv
576.221 309.089 576.892 309.154 577.59 309.154 cv
580.852 309.154 583.538 307.73 583.877 305.903 cv
584.941 306.438 586.021 306.947 587.113 307.433 cv
587.119 307.435 587.125 307.438 587.131 307.441 cv
587.157 307.452 587.183 307.464 587.208 307.475 cv
587.215 307.478 587.222 307.481 587.23 307.484 cv
587.261 307.498 587.292 307.512 587.324 307.526 cv
587.324 307.526 li
587.324 307.526 li
587.324 307.526 li
587.324 307.526 li
587.324 307.526 li
587.302 307.504 587.281 307.484 587.26 307.462 cv
585.992 306.178 584.774 304.844 583.602 303.465 cv
582.332 296.663 577.59 276.156 577.59 276.156 cv
577.59 276.156 575.99 283.074 574.399 290.208 cv
571.686 285.422 569.331 280.308 567.288 274.931 cv
576.39 273.672 585.492 272.411 594.595 271.141 cv
594.812 271.823 595.356 272.483 596.295 273.105 cv
614.334 285.52 645.612 288.934 674.962 292.805 cv
674.853 294.029 674.743 295.253 674.633 296.477 cv
674.597 296.883 674.56 297.288 674.524 297.693 cv
674.465 298.348 674.406 299.003 674.348 299.658 cv
674.348 299.658 li
674.343 299.71 674.336 299.761 674.327 299.812 cv
673.987 301.773 670.595 303.181 669.135 304.28 cv
669.135 304.28 li
669.135 304.28 li
669.135 304.28 li
669.518 304.334 669.902 304.389 670.286 304.443 cv
670.286 304.443 li
670.286 304.443 670.286 304.443 670.286 304.443 cv
670.286 304.443 670.286 304.443 670.286 304.443 cv
675.855 305.235 681.492 306.043 687.123 306.043 cv
687.411 306.043 687.697 306.041 687.984 306.036 cv
689.37 306.016 690.741 305.996 692.101 305.996 cv
694.677 305.996 697.215 306.066 699.751 306.325 cv
699.755 306.325 699.758 306.326 699.761 306.326 cv
699.776 306.328 699.79 306.329 699.805 306.331 cv
699.813 306.331 699.82 306.332 699.828 306.333 cv
699.838 306.334 699.848 306.335 699.858 306.336 cv
699.869 306.337 699.881 306.339 699.892 306.34 cv
699.898 306.34 699.905 306.341 699.911 306.342 cv
699.928 306.344 699.945 306.345 699.961 306.347 cv
699.962 306.347 699.963 306.347 699.964 306.347 cv
701.93 306.557 703.894 306.883 705.874 307.381 cv
705.874 307.381 li
705.874 307.381 li
705.901 307.388 705.927 307.394 705.954 307.401 cv
705.96 307.403 705.966 307.404 705.972 307.406 cv
705.992 307.411 706.013 307.416 706.034 307.421 cv
706.042 307.423 706.05 307.425 706.058 307.427 cv
706.077 307.432 706.097 307.437 706.116 307.442 cv
706.12 307.443 706.123 307.443 706.127 307.444 cv
706.149 307.45 706.173 307.456 706.195 307.461 cv
706.202 307.463 706.211 307.465 706.218 307.467 cv
706.237 307.472 706.257 307.477 706.276 307.481 cv
706.282 307.483 706.287 307.484 706.292 307.485 cv
706.314 307.491 706.336 307.496 706.357 307.502 cv
706.362 307.503 706.367 307.504 706.371 307.505 cv
706.394 307.51 706.416 307.516 706.438 307.522 cv
706.443 307.523 706.447 307.524 706.451 307.525 cv
706.474 307.53 706.495 307.535 706.518 307.541 cv
706.524 307.542 706.529 307.544 706.534 307.545 cv
706.556 307.551 706.578 307.556 706.6 307.561 cv
706.604 307.562 706.608 307.563 706.611 307.564 cv
706.634 307.57 706.656 307.575 706.679 307.581 cv
706.685 307.582 706.69 307.583 706.696 307.585 cv
706.718 307.59 706.739 307.595 706.761 307.6 cv
706.765 307.601 706.77 307.603 706.774 307.604 cv
706.797 307.609 706.819 307.615 706.842 307.62 cv
706.846 307.621 706.849 307.622 706.853 307.623 cv
706.877 307.629 706.902 307.635 706.926 307.64 cv
706.927 307.641 706.928 307.641 706.93 307.641 cv
714.164 309.39 721.521 310.446 728.89 311.438 cv
732.323 311.902 735.759 312.356 739.188 312.854 cv
739.184 312.851 739.18 312.847 739.177 312.844 cv
739.177 312.844 li
739.18 312.847 739.184 312.851 739.188 312.854 cv
741.734 313.224 744.277 313.612 746.809 314.062 cv
746.809 314.062 li
746.809 314.062 li
746.809 314.062 li
746.809 314.062 li
741.982 309.958 737.03 305.992 732.02 302.112 cv
733.612 301.679 735.182 301.173 736.749 300.659 cv
747.421 301.949 758.43 303.244 769.666 304.521 cv
765.457 315.67 764.742 330.95 766.19 341.061 cv
767.709 343.065 768.524 345.75 767.835 348.007 cv
767.143 346.206 766.586 343.826 766.19 341.061 cv
764.883 339.337 763.055 338.118 761.211 338.118 cv
759.791 338.118 758.362 338.841 757.155 340.611 cv
754.599 334.31 749.766 331.476 744.876 331.476 cv
738.998 331.476 733.036 335.565 730.829 342.643 cv
729.542 335.682 720.86 326.716 713.555 326.716 cv
710.68 326.716 708.019 328.103 706.104 331.548 cv
703.097 336.957 704.151 351.969 708.951 361.599 cv
599.688 356.352 mo
599.498 356.162 599.303 355.974 599.106 355.79 cv
598.461 355.187 597.785 354.619 597.109 354.096 cv
596.367 353.586 595.63 353.127 594.931 352.724 cv
593.584 351.885 592.144 351.427 591.205 351.108 cv
590.246 350.799 589.674 350.667 589.674 350.667 cv
589.674 350.667 589.754 351.244 589.887 352.212 cv
589.956 352.665 590.038 353.209 590.131 353.823 cv
590.173 354.124 590.238 354.416 590.27 354.751 cv
590.301 355.084 590.333 355.432 590.366 355.791 cv
590.375 355.882 590.384 355.972 590.394 356.063 cv
586.169 353.417 581.896 350.847 577.572 348.346 cv
575.7 346.661 573.879 344.919 572.117 343.126 cv
580.592 346.575 589.278 348.375 598.298 348.733 cv
598.832 351.247 599.159 353.949 599.688 356.352 cv
796.317 332.491 mo
796.506 331.813 796.818 331.013 797.227 330.149 cv
796.954 331.028 796.652 331.822 796.317 332.491 cv
497.621 311.188 mo
479.334 304.378 460.722 298.392 442.045 293.076 cv
461.811 289.944 481.592 287.004 501.386 284.161 cv
501.395 284.158 li
502.702 283.809 503.708 283.643 504.441 283.643 cv
504.59 283.643 504.727 283.65 504.854 283.663 cv
505.912 283.512 506.968 283.361 508.027 283.21 cv
504.483 288.408 500.625 293.275 496.57 297.816 cv
496.564 297.819 496.56 297.82 496.554 297.823 cv
495.517 298.983 494.471 300.13 493.41 301.248 cv
493.41 301.248 li
493.41 301.248 li
493.41 301.248 li
498.384 300.133 503.339 298.796 508.207 296.727 cv
504.791 301.866 501.346 306.794 497.621 311.188 cv
571.781 302.404 mo
571.691 302.23 571.603 302.057 571.514 301.882 cv
571.518 301.88 571.522 301.879 571.526 301.878 cv
570.453 299.763 569.446 297.563 568.507 295.262 cv
568.506 295.259 568.505 295.257 568.504 295.254 cv
568.49 295.221 568.477 295.189 568.464 295.156 cv
568.448 295.116 568.432 295.078 568.416 295.038 cv
568.437 295.058 568.458 295.078 568.479 295.099 cv
568.482 295.102 568.486 295.105 568.489 295.109 cv
568.508 295.127 568.527 295.146 568.546 295.164 cv
568.548 295.166 568.55 295.167 568.552 295.169 cv
568.595 295.211 568.637 295.251 568.68 295.292 cv
568.684 295.296 568.687 295.299 568.691 295.302 cv
568.709 295.32 568.727 295.337 568.745 295.354 cv
568.748 295.357 568.752 295.361 568.755 295.364 cv
568.776 295.384 568.796 295.403 568.817 295.423 cv
568.822 295.427 568.827 295.433 568.832 295.437 cv
568.846 295.451 568.86 295.464 568.874 295.477 cv
568.884 295.487 568.895 295.497 568.905 295.507 cv
568.912 295.513 568.92 295.52 568.927 295.527 cv
570.108 296.645 571.315 297.695 572.547 298.684 cv
572.251 300.081 571.989 301.347 571.781 302.404 cv
.929412 .423529 .192157 rgb
f
176.332 202.59 mo
176.458 202.467 li
176.396 202.521 175.278 203.571 176.332 202.59 cv
.854902 .333333 .262745 rgb
f
184.568 123.471 mo
180.16 198.786 li
178.936 200.049 177.703 201.278 176.458 202.467 cv
176.471 202.456 176.441 202.486 176.332 202.59 cv
175.628 203.246 174.923 203.902 174.218 204.558 cv
179.03 205.399 183.82 205.499 188.641 205.703 cv
191.524 205.825 194.439 207.577 197.288 208.489 cv
199.662 209.249 202.046 209.757 204.441 210.149 cv
202.975 208.246 201.518 206.328 200.094 204.3 cv
202.286 203.733 204.452 202.876 206.619 202.016 cv
204.652 201.101 202.7 200.125 200.758 199.046 cv
199.3 123.502 li
199.299 123.502 li
199.996 67.5094 li
200.757 66.6046 202.864 64.1017 206.571 59.6979 cv
206.77 58.6365 206.993 57.4414 207.231 56.1673 cv
208.837 55.5308 210.696 54.0497 212.007 52.0386 cv
213.37 50.0498 214.304 47.7792 215.029 46.1406 cv
215.389 45.3157 215.703 44.6468 215.935 44.1881 cv
216.18 43.7417 216.32 43.4883 216.32 43.4883 cv
216.32 43.4883 216.164 43.7264 215.89 44.1453 cv
215.628 44.5785 215.269 45.2157 214.858 46.0004 cv
214.03 47.5584 212.954 49.7049 211.54 51.453 cv
210.347 53.0002 208.857 54.0621 207.525 54.5956 cv
209.104 46.1448 211.133 35.2874 211.133 35.2874 cv
211.133 35.2874 210.076 39.1496 208.752 43.9941 cv
208.086 46.4145 207.353 49.0806 206.651 51.6322 cv
206.323 52.8166 206.003 53.9706 205.699 55.0696 cv
205.628 55.3258 li
205.493 55.8091 205.363 56.2759 205.236 56.7308 cv
205.209 56.8277 205.182 56.9275 205.155 57.0228 cv
205.079 57.2948 205.005 57.5604 204.932 57.8193 cv
204.878 58.0126 li
204.852 58.1079 li
204.842 58.1302 li
204.805 58.2061 li
202.743 60.3517 201.189 61.9696 200.095 63.1074 cv
199.924 63.2861 li
198.664 0 li
186.352 0 li
186.635 31.9709 li
184.568 123.471 li
f
176.332 202.59 mo
176.458 202.467 li
176.396 202.521 175.278 203.571 176.332 202.59 cv
f
204.368 210.137 mo
204.364 210.136 204.361 210.135 204.357 210.135 cv
204.361 210.135 204.364 210.136 204.368 210.137 cv
.866667 .529412 .180392 rgb
f
204.441 210.149 mo
204.441 210.149 li
204.417 210.145 204.392 210.141 204.368 210.137 cv
204.364 210.136 204.361 210.135 204.357 210.135 cv
202.696 209.861 201.04 209.525 199.39 209.093 cv
196.845 206.466 194.515 203.405 192.467 200.166 cv
191.585 191.602 191.435 182.854 191.436 174.175 cv
191.436 170.011 191.471 165.863 191.476 161.758 cv
191.476 161.758 li
191.476 161.758 li
189.983 172.737 187.989 183.662 185.713 194.228 cv
185.329 191.729 184.176 189.731 184.176 187.232 cv
183.831 191.278 183.48 195.323 182.575 199.368 cv
180.419 201.588 178.094 203.423 175.6 204.774 cv
175.14 204.707 174.679 204.639 174.218 204.558 cv
174.218 204.558 li
174.923 203.902 175.628 203.246 176.332 202.59 cv
176.426 202.501 176.461 202.466 176.461 202.465 cv
176.461 202.465 176.461 202.465 176.461 202.465 cv
176.461 202.465 176.46 202.466 176.458 202.467 cv
177.703 201.278 178.936 200.049 180.16 198.786 cv
184.261 128.72 li
184.261 128.72 li
189.322 129.314 194.358 130.079 199.442 130.826 cv
199.442 130.826 li
199.442 130.826 li
200.758 199.046 li
202.7 200.125 204.652 201.101 206.619 202.016 cv
206.619 202.016 li
204.555 202.835 202.493 203.643 200.408 204.209 cv
200.303 204.237 200.199 204.273 200.094 204.3 cv
200.094 204.3 li
200.094 204.3 li
200.094 204.3 li
201.518 206.328 202.975 208.246 204.441 210.149 cv
.780392 .270588 .243137 rgb
f
197.357 208.511 mo
197.355 208.51 197.353 208.51 197.351 208.509 cv
197.353 208.51 197.355 208.51 197.357 208.511 cv
197.288 208.489 mo
197.288 208.489 li
194.439 207.577 191.524 205.825 188.641 205.703 cv
188.62 205.702 188.599 205.701 188.578 205.7 cv
188.599 205.701 188.62 205.702 188.641 205.703 cv
191.524 205.825 194.439 207.577 197.288 208.489 cv
197.288 208.489 li
.823529 .466667 .172549 rgb
f
199.39 209.093 mo
198.711 208.916 198.034 208.726 197.357 208.511 cv
197.355 208.51 197.353 208.51 197.351 208.509 cv
197.33 208.502 197.309 208.496 197.288 208.489 cv
197.288 208.489 li
194.439 207.577 191.524 205.825 188.641 205.703 cv
188.62 205.702 188.599 205.701 188.578 205.7 cv
184.24 205.517 179.927 205.411 175.6 204.774 cv
178.094 203.423 180.419 201.588 182.575 199.368 cv
183.48 195.323 183.831 191.278 184.176 187.232 cv
184.176 189.731 185.329 191.729 185.713 194.228 cv
187.989 183.662 189.983 172.737 191.476 161.758 cv
191.471 165.863 191.436 170.011 191.436 174.175 cv
191.435 182.854 191.585 191.602 192.467 200.166 cv
194.515 203.405 196.845 206.466 199.39 209.093 cv
.741176 .239216 .231373 rgb
f
185.1 99.9503 mo
184.568 123.471 li
184.261 128.72 li
189.322 129.314 194.358 130.079 199.442 130.826 cv
199.3 123.502 li
199.299 123.502 li
199.598 99.4929 li
194.78 99.6786 189.931 99.9237 185.1 99.9503 cv
.854902 .333333 .262745 rgb
f
198.877 10.7083 mo
198.665 0 li
186.352 0 li
186.434 9.20328 li
190.44 10.517 194.65 10.6779 198.877 10.7083 cv
f
186.534 20.558 mo
186.434 9.20328 li
186.434 9.20328 li
186.534 20.558 li
186.534 20.558 186.534 20.558 186.534 20.558 cv
199.024 18.0835 mo
198.877 10.7083 li
198.877 10.7083 198.877 10.7083 198.877 10.7083 cv
199.024 18.0835 li
199.024 18.0835 li
.137255 .709804 .545098 rgb
f
186.534 20.558 mo
186.434 9.20332 li
190.44 10.517 194.65 10.6779 198.877 10.7083 cv
199.024 18.0835 li
194.894 19.2643 190.74 20.273 186.534 20.558 cv
.780392 .270588 .243137 rgb
f
186.534 20.5581 mo
186.609 29.0327 li
190.799 28.146 195.018 27.327 199.195 26.6736 cv
199.024 18.0835 li
194.894 19.2642 190.74 20.2729 186.534 20.5581 cv
cp
.854902 .333333 .262745 rgb
f
186.609 29.0327 mo
186.635 31.9709 li
186.551 35.7263 li
186.508 37.6236 li
190.825 37.7497 195.105 37.7975 199.417 37.8164 cv
199.195 26.6737 li
195.018 27.3271 190.799 28.1461 186.609 29.0327 cv
f
199.648 49.4102 mo
199.494 41.6663 li
199.494 41.6663 li
199.648 49.4102 li
199.648 49.4102 li
.137255 .709804 .545098 rgb
f
199.494 41.6663 mo
199.417 37.8164 li
199.417 37.8164 199.417 37.8164 199.417 37.8164 cv
199.494 41.6663 li
199.494 41.6663 li
.407843 .764706 .505882 rgb
f
186.217 50.4858 mo
186.508 37.6236 li
190.825 37.7497 195.105 37.7975 199.417 37.8164 cv
199.494 41.6663 li
199.648 49.4102 li
195.14 49.5657 190.691 49.9424 186.217 50.4858 cv
.780392 .270588 .243137 rgb
f
209.197 53.6865 mo
209.195 53.6857 209.194 53.685 209.193 53.6842 cv
209.989 53.1357 210.776 52.4223 211.469 51.5448 cv
210.777 52.4215 209.991 53.1381 209.197 53.6865 cv
211.982 52.078 mo
211.982 52.0775 211.982 52.0769 211.983 52.0764 cv
211.982 52.0769 211.982 52.0774 211.982 52.078 cv
211.476 51.535 mo
211.48 51.5297 211.485 51.5243 211.489 51.519 cv
211.485 51.5243 211.48 51.5297 211.476 51.535 cv
211.509 51.493 mo
211.512 51.4899 211.514 51.4869 211.516 51.4838 cv
211.514 51.4868 211.511 51.49 211.509 51.493 cv
.137255 .709804 .545098 rgb
f
210.16 54.2279 mo
209.834 54.0643 209.512 53.8837 209.197 53.6865 cv
209.991 53.1381 210.777 52.4215 211.469 51.5448 cv
211.471 51.5416 211.474 51.5383 211.476 51.535 cv
211.48 51.5297 211.485 51.5243 211.489 51.519 cv
211.496 51.5103 211.502 51.5017 211.509 51.493 cv
211.511 51.49 211.514 51.4868 211.516 51.4838 cv
211.524 51.4736 211.532 51.4633 211.54 51.453 cv
212.416 50.3706 213.162 49.1353 213.799 47.9817 cv
213.905 48.0596 214.009 48.1363 214.11 48.2105 cv
213.54 49.4484 212.857 50.7983 212.007 52.0386 cv
212.007 52.0386 li
211.999 52.0512 211.991 52.0638 211.983 52.0764 cv
211.982 52.0769 211.982 52.0775 211.982 52.078 cv
211.446 52.8911 210.82 53.6106 210.16 54.2279 cv
.780392 .270588 .243137 rgb
f
206.665 51.5802 mo
206.665 51.5802 206.665 51.5801 206.665 51.5801 cv
207.132 49.8805 207.614 48.1313 208.079 46.4387 cv
207.614 48.1314 207.133 49.8806 206.665 51.5802 cv
.137255 .709804 .545098 rgb
f
207.873 52.7321 mo
207.451 52.3815 207.047 51.9959 206.665 51.5802 cv
207.133 49.8806 207.614 48.1314 208.079 46.4387 cv
208.296 45.6506 208.509 44.8748 208.717 44.1219 cv
208.941 44.2983 209.163 44.472 209.384 44.6442 cv
208.903 47.2193 208.375 50.0445 207.873 52.7321 cv
.780392 .270588 .243137 rgb
f
207.525 54.5956 mo
207.639 53.9857 207.755 53.3623 207.873 52.7321 cv
207.451 52.3815 207.047 51.9958 206.665 51.5801 cv
206.651 51.6322 li
206.323 52.8166 206.003 53.9706 205.699 55.0696 cv
205.628 55.3258 li
205.493 55.8091 205.363 56.2759 205.236 56.7308 cv
205.209 56.8277 205.182 56.9275 205.155 57.0228 cv
205.079 57.2948 205.005 57.5604 204.932 57.8193 cv
204.878 58.0126 li
204.852 58.1079 li
204.842 58.1302 li
204.805 58.2061 li
202.743 60.3517 201.189 61.9696 200.095 63.1074 cv
199.924 63.2861 li
199.648 49.4102 li
195.14 49.5657 190.691 49.9424 186.217 50.4858 cv
185.714 72.7796 li
190.44 73.7995 195.171 74.8506 199.89 76.0375 cv
199.996 67.5094 li
200.757 66.6046 202.864 64.1017 206.571 59.6979 cv
206.77 58.6365 206.993 57.4414 207.231 56.1673 cv
208.174 55.7933 209.203 55.1212 210.16 54.2279 cv
209.832 54.0637 209.51 53.8823 209.193 53.6842 cv
208.631 54.0715 208.065 54.3793 207.525 54.5956 cv
.854902 .333333 .262745 rgb
f
199.829 80.9595 mo
199.828 80.9595 li
199.89 76.0374 li
199.89 76.0375 199.89 76.0375 199.89 76.0375 cv
199.829 80.9595 li
.584314 .803922 .47451 rgb
f
199.747 87.5229 mo
199.747 87.5229 li
199.828 80.9595 li
199.829 80.9595 li
199.747 87.5229 li
.137255 .709804 .545098 rgb
f
199.747 87.5229 mo
194.984 86.3461 190.206 85.2324 185.464 83.8222 cv
185.714 72.7796 li
190.44 73.7995 195.171 74.8506 199.89 76.0375 cv
199.828 80.9595 li
199.747 87.5229 li
.780392 .270588 .243137 rgb
f
185.27 92.4278 mo
190.057 93.3119 194.862 94.0676 199.656 94.8093 cv
199.747 87.5229 li
194.984 86.3461 190.206 85.2324 185.464 83.8222 cv
185.27 92.4278 li
.854902 .333333 .262745 rgb
f
199.598 99.4929 mo
199.656 94.8092 li
199.656 94.8093 199.656 94.8093 199.656 94.8093 cv
199.598 99.4929 li
199.598 99.4929 li
199.598 99.4929 li
.0823529 .611765 .494118 rgb
f
185.1 99.9503 mo
185.27 92.4278 li
190.057 93.3119 194.862 94.0676 199.656 94.8093 cv
199.598 99.4929 li
194.78 99.6786 189.931 99.9237 185.1 99.9503 cv
.780392 .270588 .243137 rgb
f
233.825 34.5101 mo
229.688 33.7019 225.594 33.7267 221.532 32.193 cv
217.443 30.6494 213.842 28.3133 209.496 28.0704 cv
207.485 27.9579 205.462 28.1637 203.489 28.6868 cv
201.683 29.1663 199.301 29.8388 197.958 31.6216 cv
195.405 35.0109 213.755 47.8993 216.237 49.775 cv
215.989 49.5841 215.907 49.5206 216.331 49.8457 cv
222.732 54.7743 233.432 54.5746 237.261 44.8365 cv
239.019 40.3646 237.857 35.2982 233.825 34.5101 cv
.682353 .623529 .113725 rgb
f
216.331 49.8457 mo
216.237 49.775 li
216.84 50.2391 218.451 51.4778 216.331 49.8457 cv
f
216.2 49.7466 mo
216.774 50.1893 218.489 51.5073 216.331 49.8457 cv
216.2 49.7466 li
f
218.489 51.2299 mo
218.47 51.22 218.451 51.21 218.433 51.2 cv
218.451 51.21 218.47 51.22 218.489 51.2299 cv
218.409 51.1877 mo
218.391 51.1776 218.372 51.1677 218.354 51.1576 cv
218.372 51.1677 218.391 51.1776 218.409 51.1877 cv
218.308 51.1329 mo
218.215 51.0821 218.123 51.0308 218.031 50.9781 cv
218.123 51.0308 218.215 51.0821 218.308 51.1329 cv
217.98 50.9485 mo
217.405 50.6167 216.854 50.2485 216.331 49.8457 cv
216.331 49.8457 li
216.331 49.8457 li
216.331 49.8457 li
216.331 49.8457 li
216.854 50.2482 217.406 50.6169 217.98 50.9485 cv
237.274 44.8042 mo
237.275 44.8014 237.276 44.7993 237.277 44.7966 cv
237.276 44.7991 237.275 44.8017 237.274 44.8042 cv
237.288 44.7673 mo
237.288 44.7662 237.289 44.7658 237.289 44.7647 cv
237.289 44.7655 237.288 44.7664 237.288 44.7673 cv
.129412 .72549 .572549 rgb
f
197.902 31.7023 mo
197.902 31.702 li
197.902 31.7023 li
197.915 31.6819 mo
197.916 31.6812 197.916 31.6807 197.917 31.6801 cv
197.916 31.6807 197.916 31.6812 197.915 31.6819 cv
197.922 31.6717 mo
197.923 31.6709 197.924 31.6699 197.924 31.669 cv
197.923 31.6701 197.923 31.6706 197.922 31.6717 cv
197.929 31.6616 mo
197.93 31.6604 197.931 31.6593 197.932 31.6581 cv
197.931 31.6593 197.93 31.6604 197.929 31.6616 cv
197.936 31.6515 mo
197.937 31.6511 197.937 31.6507 197.937 31.6503 cv
197.937 31.6507 197.937 31.6511 197.936 31.6515 cv
197.943 31.6415 mo
197.944 31.6411 197.944 31.6408 197.944 31.6404 cv
197.944 31.6408 197.944 31.6411 197.943 31.6415 cv
.741176 .278431 .254902 rgb
f
203.531 28.6759 mo
203.535 28.6748 203.539 28.6738 203.543 28.6727 cv
203.539 28.6738 203.535 28.6748 203.531 28.6759 cv
203.574 28.6645 mo
203.577 28.6637 203.58 28.6629 203.583 28.6622 cv
203.58 28.6629 203.577 28.6637 203.574 28.6645 cv
203.621 28.6524 mo
203.622 28.6522 203.622 28.6521 203.623 28.6519 cv
203.622 28.6521 203.622 28.6522 203.621 28.6524 cv
.129412 .72549 .572549 rgb
f
225.571 53.0177 mo
223.131 53.0177 220.667 52.3806 218.489 51.2299 cv
218.47 51.22 218.451 51.21 218.433 51.2 cv
218.425 51.1958 218.417 51.1919 218.409 51.1877 cv
218.391 51.1776 218.372 51.1677 218.354 51.1576 cv
218.339 51.1495 218.323 51.141 218.308 51.1329 cv
218.215 51.0821 218.123 51.0308 218.031 50.9781 cv
218.014 50.9685 217.997 50.9582 217.98 50.9485 cv
217.406 50.6169 216.854 50.2482 216.331 49.8457 cv
216.331 49.8457 li
216.116 49.6807 216.03 49.6148 216.03 49.6148 cv
216.029 49.6148 216.096 49.6664 216.2 49.7466 cv
213.565 47.7669 195.703 35.1894 197.902 31.7023 cv
197.902 31.702 li
197.907 31.6952 197.911 31.6887 197.915 31.6819 cv
197.916 31.6812 197.916 31.6807 197.917 31.6801 cv
197.919 31.6773 197.92 31.6745 197.922 31.6717 cv
197.923 31.6706 197.923 31.6701 197.924 31.669 cv
197.926 31.6665 197.927 31.6642 197.929 31.6616 cv
197.93 31.6604 197.931 31.6593 197.932 31.6581 cv
197.933 31.656 197.935 31.6536 197.936 31.6515 cv
197.937 31.6511 197.937 31.6507 197.937 31.6503 cv
197.939 31.6473 197.941 31.6444 197.943 31.6415 cv
197.944 31.6411 197.944 31.6408 197.944 31.6404 cv
197.949 31.6342 197.953 31.6278 197.958 31.6216 cv
199.301 29.8388 201.683 29.1663 203.489 28.6868 cv
203.503 28.6831 203.517 28.6795 203.531 28.6759 cv
203.535 28.6748 203.539 28.6738 203.543 28.6727 cv
203.553 28.67 203.564 28.6672 203.574 28.6645 cv
203.577 28.6637 203.58 28.6629 203.583 28.6622 cv
203.596 28.6589 203.609 28.6556 203.621 28.6524 cv
203.622 28.6522 203.622 28.6521 203.623 28.6519 cv
204.522 28.4203 205.432 28.2565 206.345 28.1564 cv
206.74 35.656 215.811 39.7383 221.452 42.3268 cv
222.99 42.8268 223.758 45.325 225.295 46.3242 cv
226.478 46.9225 227.672 47.199 228.841 47.199 cv
232.549 47.199 236.003 44.4138 238.036 40.2835 cv
238.107 41.7213 237.864 43.2733 237.289 44.7647 cv
237.289 44.7658 237.288 44.7662 237.288 44.7673 cv
237.284 44.7771 237.28 44.7868 237.277 44.7966 cv
237.276 44.7993 237.275 44.8014 237.274 44.8042 cv
237.269 44.815 237.265 44.8257 237.261 44.8365 cv
237.261 44.8365 li
237.261 44.8365 li
234.997 50.5946 230.331 53.0177 225.571 53.0177 cv
.592157 .521569 .109804 rgb
f
229.163 41.7559 mo
228.027 41.7558 226.833 41.3133 226.115 40.681 cv
223.213 38.1244 226.314 36.4125 229.093 36.4125 cv
231.429 36.4125 233.538 37.6226 231.663 40.5575 cv
231.116 41.4138 230.162 41.756 229.163 41.7559 cv
.8 .764706 .152941 rgb
f
218.634 36.8829 mo
217.536 36.8829 216.392 36.6184 215.923 36.4371 cv
215.124 36.1273 211.724 34.1376 211.867 32.5623 cv
211.923 31.9484 212.815 31.6718 214.027 31.6718 cv
216.748 31.6718 221.076 33.0673 221.141 35.1729 cv
221.182 36.5083 219.941 36.8829 218.634 36.8829 cv
f
34.3172 54.3845 mo
34.3368 54.4104 li
34.3172 54.3798 34.1392 54.1276 34.3172 54.3845 cv
.796078 .317647 .329412 rgb
f
55.4934 69.7199 mo
53.7782 68.5134 52.0726 67.2929 50.3662 66.0738 cv
49.6472 65.5601 47.9263 64.7758 47.6217 63.8658 cv
47.1639 62.9506 46.0531 56.0997 45.6122 55.5829 cv
44.8214 54.6555 44.0306 53.7282 43.2395 52.8008 cv
42.0501 51.4064 40.8398 50.0293 39.6274 48.6547 cv
40.6118 50.0467 41.6056 51.4312 42.6028 52.8137 cv
43.2397 53.6869 43.8767 54.56 44.5139 55.4333 cv
45.199 56.3724 45.1663 56.8811 45.2141 58.0139 cv
45.2479 58.8095 45.3157 58.8255 44.5062 58.8748 cv
43.9211 58.9104 43.3348 58.9242 42.749 58.8994 cv
41.5702 58.8494 40.3872 58.6621 39.2719 58.2694 cv
37.2036 57.5624 35.6055 56.1482 34.3368 54.4104 cv
34.3172 54.3845 li
34.2012 54.2171 34.0849 54.0497 33.9691 53.8821 cv
34.2223 54.414 34.4677 54.9414 34.7728 55.4466 cv
36.8699 58.9217 40.5586 60.5522 44.4974 60.8819 cv
45.3925 60.9567 45.3468 60.9024 45.3914 61.811 cv
45.4135 62.2657 45.4358 62.7203 45.4581 63.175 cv
45.4851 63.6889 45.5158 64.2006 45.5561 64.7136 cv
45.6237 65.5786 45.9274 65.6646 46.602 66.2872 cv
49.5542 69.0627 52.4624 71.8804 55.4937 74.5712 cv
55.6807 75.0441 55.4937 75.9712 55.4937 76.468 cv
55.4939 84.7694 55.4939 93.0708 55.4939 101.372 cv
55.4939 112.652 54.0596 123.914 53.1079 135.147 cv
52.3646 143.919 51.6213 152.691 50.8783 161.462 cv
50.655 164.096 50.4317 166.73 50.2087 169.364 cv
50.1652 169.878 50.1217 170.391 50.0782 170.904 cv
50.03 171.473 47.9245 172.699 47.4512 173.077 cv
45.7073 174.471 43.9659 175.868 42.2302 177.272 cv
44.079 177.286 45.9267 177.284 47.774 177.282 cv
51.36 177.278 54.9444 177.274 58.5339 177.386 cv
63.004 177.526 67.5088 178.135 71.9608 178.569 cv
78.6551 179.221 85.3408 179.806 92.0558 180.211 cv
91.2037 179.965 90.3027 178.487 89.7651 177.85 cv
89.2068 177.19 88.6589 176.52 88.1199 175.843 cv
90.7206 175.568 93.3214 175.294 95.9212 175.011 cv
93.8055 174.74 91.7001 174.404 89.6043 174.009 cv
88.3714 173.777 88.0442 174.073 88.0093 173.01 cv
87.9821 172.184 87.9548 171.359 87.9278 170.533 cv
87.8266 167.469 87.7257 164.405 87.6247 161.342 cv
87.3278 152.331 87.0308 143.319 86.7339 134.308 cv
86.4838 126.719 86.2337 119.13 85.9836 111.541 cv
85.941 110.255 85.8987 108.969 85.8563 107.683 cv
85.8218 106.638 87.4393 105.078 88.0972 104.182 cv
89.1926 102.671 90.2822 101.167 91.304 99.6063 cv
92.3147 98.0618 91.486 98.5912 90.3802 99.3032 cv
88.9576 100.22 87.4889 101.051 86.0246 101.899 cv
86.194 97.4025 86.3635 92.9063 86.5329 88.4099 cv
87.1369 72.3738 87.7412 56.3377 88.3453 40.3015 cv
88.5449 35.0069 88.0844 29.6734 87.8852 24.3821 cv
87.8649 23.8459 87.8446 23.3097 87.8246 22.7732 cv
87.8023 22.1845 90.2644 20.574 90.7434 20.1615 cv
91.9857 19.0919 93.7675 18.0314 94.7574 16.7206 cv
95.0024 16.3085 94.9947 15.5752 95.0857 15.0874 cv
95.2337 14.2515 95.2056 12.3407 96.0471 12.1681 cv
97.0497 11.9619 98.0368 11.6731 98.9855 11.2878 cv
100.744 10.5844 102.389 9.53043 103.665 8.12204 cv
105.747 5.82438 106.524 2.97989 106.654 0 cv
106.562 0 li
106.296 2.23683 105.684 4.36417 104.318 6.24029 cv
102.478 8.98091 98.9885 10.369 95.84 10.7874 cv
96.1415 9.05436 96.2291 7.19671 97.0684 5.64683 cv
97.9151 4.08344 98.7616 2.52004 99.6081 .956648 cv
99.7804 .638516 99.9498 .318582 100.122 0 cv
99.269 0 li
98.7756 .705657 98.2765 1.40748 97.7851 2.11472 cv
96.9087 3.37688 95.4832 4.84655 94.9967 6.31261 cv
94.6849 7.25236 94.3735 8.19211 94.0622 9.13209 cv
93.6636 10.3348 93.2653 11.5374 92.8671 12.7404 cv
92.6772 13.3147 92.5585 14.0836 92.2496 14.6106 cv
92.0202 15.0022 91.8886 15.0648 91.477 15.3334 cv
90.1961 16.1686 88.9164 17.0056 87.6389 17.8458 cv
87.5905 16.5588 87.5418 15.2719 87.4936 13.9852 cv
87.3179 9.32337 87.1423 4.66157 86.9668 0 cv
56.7547 0 li
56.46 15.4032 56.1651 30.8067 55.8704 46.21 cv
55.7203 54.0454 55.4934 61.8829 55.4934 69.7199 cv
f
34.3172 54.3845 mo
34.3368 54.4104 li
34.317 54.3793 34.1392 54.1279 34.3172 54.3845 cv
f
47.2118 173.269 mo
47.2915 173.205 47.3712 173.141 47.4509 173.077 cv
47.8598 172.751 49.4848 171.792 49.9525 171.171 cv
49.4848 171.792 47.8598 172.751 47.4512 173.077 cv
47.3713 173.141 47.2916 173.205 47.2118 173.269 cv
50.0782 170.904 mo
50.1217 170.391 50.1652 169.878 50.2087 169.364 cv
50.1652 169.878 50.1217 170.391 50.0782 170.904 cv
.866667 .560784 .180392 rgb
f
45.0767 174.985 mo
45.7888 174.414 46.4992 173.84 47.2118 173.269 cv
47.2916 173.205 47.3713 173.141 47.4512 173.077 cv
47.8598 172.751 49.4848 171.792 49.9525 171.171 cv
50.0266 171.072 50.0716 170.982 50.0782 170.904 cv
50.0782 170.904 li
50.1217 170.391 50.1652 169.878 50.2087 169.364 cv
50.2087 169.364 li
50.3873 167.255 50.566 165.146 50.7449 163.037 cv
50.7449 163.037 li
50.7449 163.037 li
52.9218 156.519 54.5837 149.85 55.5058 143.141 cv
55.4628 151.406 55.2249 159.671 53.9062 167.936 cv
51.2399 170.637 48.1719 172.862 45.0767 174.985 cv
.690196 .231373 .294118 rgb
f
89.5051 173.991 mo
88.3537 173.792 88.0433 174.044 88.0093 173.01 cv
88.0435 174.044 88.3537 173.792 89.5051 173.991 cv
87.9278 170.533 mo
87.8266 167.469 87.7257 164.405 87.6247 161.342 cv
87.7259 164.405 87.8266 167.469 87.9278 170.533 cv
.866667 .560784 .180392 rgb
f
87.1732 147.638 mo
87.1731 147.638 li
87.1728 147.627 87.1724 147.616 87.1721 147.605 cv
87.1721 147.605 li
87.1725 147.616 87.1729 147.627 87.1732 147.638 cv
87.0843 144.941 mo
87.0635 144.312 87.0428 143.682 87.022 143.053 cv
87.0428 143.682 87.0636 144.312 87.0843 144.941 cv
87.0843 144.941 li
.0392157 .447059 .466667 rgb
f
87.1721 147.605 mo
87.1428 146.717 87.1135 145.83 87.0843 144.941 cv
87.0843 144.941 li
87.1136 145.829 87.1429 146.717 87.1721 147.605 cv
87.1721 147.605 li
.556863 .427451 .152941 rgb
f
87.1732 147.639 mo
87.1731 147.639 li
87.1731 147.638 li
87.1732 147.638 li
87.1732 147.639 li
.866667 .560784 .180392 rgb
f
87.4377 155.666 mo
87.4377 155.666 li
87.3495 152.99 87.2613 150.314 87.1731 147.639 cv
87.1732 147.639 li
87.2614 150.315 87.3496 152.99 87.4377 155.666 cv
.866667 .65098 .270588 rgb
f
87.6247 161.342 mo
87.5624 159.45 87.5 157.558 87.4377 155.666 cv
87.4377 155.666 li
87.5001 157.558 87.5624 159.45 87.6247 161.342 cv
.866667 .560784 .180392 rgb
f
90.1583 178.357 mo
88.1887 176.296 86.5424 174.039 84.7532 171.746 cv
84.0737 156.322 83.1166 140.898 82.7883 125.474 cv
83.6517 131.23 85.3048 136.865 87.004 142.506 cv
87.004 142.506 li
87.004 142.506 li
87.004 142.506 li
87.004 142.506 li
87.01 142.688 87.016 142.87 87.022 143.053 cv
87.0428 143.682 87.0635 144.312 87.0843 144.941 cv
87.1135 145.83 87.1428 146.717 87.1721 147.605 cv
87.1724 147.616 87.1728 147.627 87.1731 147.638 cv
87.1731 147.639 li
87.2613 150.314 87.3495 152.99 87.4377 155.666 cv
87.5 157.558 87.5624 159.45 87.6247 161.342 cv
87.6247 161.342 li
87.6247 161.342 li
87.7257 164.405 87.8266 167.469 87.9278 170.533 cv
87.9278 170.533 li
87.9548 171.359 87.9821 172.184 88.0093 173.01 cv
88.0093 173.01 li
88.0433 174.044 88.3537 173.792 89.5051 173.991 cv
89.5375 173.997 89.5705 174.003 89.6043 174.009 cv
91.7001 174.404 93.8055 174.74 95.9212 175.011 cv
95.9212 175.011 li
93.3214 175.294 90.7204 175.568 88.1199 175.843 cv
88.1199 175.843 li
88.1199 175.843 li
88.1199 175.843 li
88.6589 176.52 89.2068 177.19 89.7651 177.85 cv
89.8805 177.987 90.0134 178.164 90.1583 178.357 cv
.690196 .231373 .294118 rgb
f
92.0465 180.209 mo
92.0459 180.208 92.0452 180.208 92.0445 180.208 cv
92.0452 180.208 92.0459 180.208 92.0465 180.209 cv
92.0368 180.206 mo
92.0362 180.205 92.0356 180.205 92.035 180.205 cv
92.0356 180.205 92.0362 180.205 92.0368 180.206 cv
90.3887 178.665 mo
90.3885 178.664 90.3884 178.664 90.3882 178.664 cv
90.3884 178.664 90.3885 178.664 90.3887 178.665 cv
90.3818 178.655 mo
90.3808 178.654 90.3798 178.653 90.3788 178.652 cv
90.3798 178.653 90.3808 178.654 90.3818 178.655 cv
90.3765 178.648 mo
90.3302 178.587 90.285 178.527 90.2407 178.468 cv
90.285 178.527 90.3303 178.587 90.3765 178.648 cv
90.2393 178.466 mo
90.2359 178.461 90.2326 178.457 90.2293 178.452 cv
90.2326 178.457 90.2359 178.461 90.2393 178.466 cv
90.2265 178.449 mo
90.2229 178.444 90.2194 178.439 90.2159 178.434 cv
90.2194 178.439 90.2229 178.444 90.2265 178.449 cv
90.2114 178.428 mo
90.2098 178.426 90.2083 178.424 90.2067 178.422 cv
90.2082 178.424 90.2098 178.426 90.2114 178.428 cv
43.3845 177.279 mo
42.9998 177.277 42.615 177.275 42.2302 177.272 cv
42.2302 177.272 li
42.615 177.275 42.9998 177.277 43.3845 177.279 cv
42.2302 177.272 mo
42.2905 177.223 42.3508 177.175 42.4112 177.126 cv
42.3509 177.175 42.2904 177.223 42.2302 177.272 cv
.909804 .631373 .188235 rgb
f
86.849 137.801 mo
86.8106 136.637 86.7722 135.472 86.7339 134.308 cv
86.7723 135.473 86.8106 136.637 86.849 137.801 cv
.0431373 .501961 .486274 rgb
f
85.9836 111.541 mo
85.941 110.255 85.8987 108.969 85.8563 107.683 cv
85.8989 108.969 85.941 110.255 85.9836 111.541 cv
.0862745 .682353 .509804 rgb
f
85.8558 107.646 mo
85.8596 106.614 87.4094 105.104 88.0735 104.214 cv
88.0735 104.214 li
87.4096 105.104 85.8596 106.614 85.8558 107.646 cv
f
88.0735 104.214 mo
88.0815 104.203 88.0894 104.192 88.0972 104.182 cv
88.7927 103.223 89.4858 102.266 90.1607 101.296 cv
90.1607 101.296 li
89.4858 102.266 88.7927 103.223 88.0972 104.182 cv
88.0894 104.192 88.0815 104.203 88.0735 104.214 cv
88.0735 104.214 li
.909804 .815686 .92549 rgb
f
86.0336 101.66 mo
86.1529 98.494 86.2722 95.3272 86.3916 92.1608 cv
86.3916 92.1608 86.3916 92.1608 86.3916 92.1608 cv
86.2723 95.3273 86.1531 98.4938 86.0336 101.66 cv
86.0336 101.66 li
.0862745 .682353 .509804 rgb
f
86.0246 101.899 mo
86.0276 101.819 86.0306 101.74 86.0336 101.66 cv
86.0336 101.66 li
86.0306 101.74 86.0276 101.819 86.0246 101.899 cv
86.0246 101.899 li
.909804 .815686 .92549 rgb
f
90.3802 99.3032 mo
90.9602 98.9297 91.464 98.6065 91.6661 98.6065 cv
91.6661 98.6065 91.6661 98.6065 91.6661 98.6065 cv
91.464 98.6065 90.9602 98.9298 90.3802 99.3032 cv
.0862745 .682353 .509804 rgb
f
92.0558 180.211 mo
92.0558 180.211 li
90.6898 180.129 89.3256 180.034 87.9618 179.938 cv
82.83 176.817 77.3632 174.217 72.6302 170.595 cv
71.5564 163.394 69.8337 156.169 69.8337 148.656 cv
68.4701 152.747 67.1066 157.179 66.0837 161.611 cv
65.7428 152.747 64.3793 144.224 64.3793 135.361 cv
61.296 147.694 60.1638 160.864 55.1834 172.853 cv
52.2695 174.687 49.1272 176.09 45.9031 177.283 cv
45.8394 177.283 45.776 177.283 45.7123 177.283 cv
44.9366 177.283 44.1606 177.282 43.3845 177.279 cv
42.9998 177.277 42.615 177.275 42.2302 177.272 cv
42.2302 177.272 li
42.2904 177.223 42.3509 177.175 42.4112 177.126 cv
43.2977 176.41 44.1879 175.699 45.0767 174.985 cv
48.1719 172.862 51.2399 170.637 53.9062 167.936 cv
55.2249 159.671 55.4628 151.406 55.5058 143.141 cv
55.5058 143.141 li
55.5058 143.141 li
54.5837 149.85 52.9218 156.519 50.7449 163.037 cv
50.7893 162.512 50.8339 161.987 50.8783 161.462 cv
51.6213 152.691 52.3646 143.919 53.1079 135.147 cv
54.0596 123.914 55.4939 112.652 55.4939 101.372 cv
55.4939 97.0366 55.4939 92.7009 55.4939 88.3653 cv
65.8672 88.9937 76.231 90.0499 86.3916 92.1608 cv
86.2722 95.3272 86.1529 98.494 86.0336 101.66 cv
86.0336 101.66 li
86.0306 101.74 86.0276 101.819 86.0246 101.899 cv
86.0246 101.899 li
86.0246 101.899 li
87.4889 101.051 88.9576 100.22 90.3802 99.3032 cv
90.3802 99.3032 li
90.9602 98.9298 91.464 98.6065 91.6661 98.6065 cv
91.8377 98.6066 91.7915 98.84 91.3892 99.474 cv
91.3624 99.5163 91.334 99.5603 91.304 99.6063 cv
90.9309 100.176 90.5488 100.739 90.1607 101.296 cv
89.4858 102.266 88.7927 103.223 88.0972 104.182 cv
88.0894 104.192 88.0815 104.203 88.0735 104.214 cv
87.4094 105.104 85.8596 106.614 85.8558 107.646 cv
85.8557 107.658 85.8559 107.671 85.8563 107.683 cv
85.8563 107.683 li
85.8987 108.969 85.941 110.255 85.9836 111.541 cv
85.9836 111.541 li
86.2337 119.13 86.4838 126.719 86.7339 134.308 cv
86.7339 134.308 li
86.7722 135.472 86.8106 136.637 86.849 137.801 cv
86.9006 139.37 86.9523 140.938 87.004 142.506 cv
85.3048 136.865 83.6517 131.23 82.7883 125.474 cv
82.7883 125.474 li
82.7883 125.474 li
83.1166 140.898 84.0737 156.322 84.7532 171.746 cv
86.5424 174.039 88.1887 176.296 90.1583 178.357 cv
90.1743 178.379 90.1904 178.4 90.2067 178.422 cv
90.2083 178.424 90.2098 178.426 90.2114 178.428 cv
90.2129 178.43 90.2143 178.432 90.2159 178.434 cv
90.2194 178.439 90.2229 178.444 90.2265 178.449 cv
90.2274 178.45 90.2283 178.451 90.2293 178.452 cv
90.2326 178.457 90.2359 178.461 90.2393 178.466 cv
90.2397 178.466 90.2402 178.467 90.2407 178.468 cv
90.285 178.527 90.3302 178.587 90.3765 178.648 cv
90.3773 178.649 90.378 178.65 90.3788 178.652 cv
90.3798 178.653 90.3808 178.654 90.3818 178.655 cv
90.384 178.658 90.3861 178.661 90.3882 178.664 cv
90.3884 178.664 90.3885 178.664 90.3887 178.665 cv
90.876 179.309 91.4654 180.028 92.035 180.205 cv
92.0356 180.205 92.0362 180.205 92.0368 180.206 cv
92.0394 180.206 92.042 180.207 92.0445 180.208 cv
92.0452 180.208 92.0459 180.208 92.0465 180.209 cv
92.0496 180.21 92.0527 180.21 92.0558 180.211 cv
.72549 .258824 .305882 rgb
f
95.2126 14.0106 mo
95.2125 14.0106 95.2123 14.0105 95.2122 14.0104 cv
95.269 13.5274 95.3514 13.0218 95.5215 12.6608 cv
95.3515 13.0219 95.2692 13.5275 95.2126 14.0106 cv
95.5224 12.6589 mo
95.524 12.6555 95.5256 12.6522 95.5272 12.6488 cv
95.5256 12.6521 95.524 12.6555 95.5224 12.6589 cv
95.5293 12.6445 mo
95.53 12.643 95.5308 12.6415 95.5315 12.64 cv
95.5307 12.6415 95.53 12.643 95.5293 12.6445 cv
95.5355 12.6317 mo
95.5358 12.6312 95.536 12.6308 95.5363 12.6303 cv
95.536 12.6308 95.5358 12.6312 95.5355 12.6317 cv
95.5407 12.6214 mo
95.5409 12.621 95.541 12.6207 95.5412 12.6204 cv
95.541 12.6207 95.5409 12.6211 95.5407 12.6214 cv
92.9278 12.557 mo
92.9278 12.557 92.9278 12.557 92.9277 12.557 cv
93.3058 11.4151 93.6839 10.2735 94.0619 9.13186 cv
94.3735 8.19211 94.6849 7.25236 94.9967 6.31261 cv
94.6849 7.25236 94.3735 8.19211 94.0622 9.13209 cv
93.6838 10.2737 93.3057 11.4152 92.9278 12.557 cv
96.0175 12.175 mo
96.0178 12.1749 96.018 12.1748 96.0183 12.1748 cv
96.018 12.1748 96.0177 12.1749 96.0175 12.175 cv
96.0364 12.1704 mo
96.037 12.1702 96.0376 12.1701 96.0382 12.17 cv
96.0376 12.1701 96.037 12.1703 96.0364 12.1704 cv
96.0471 12.1681 mo
96.0471 12.1681 li
97.0497 11.9619 98.0368 11.6731 98.9855 11.2878 cv
100.744 10.5844 102.389 9.53043 103.665 8.12204 cv
104.56 7.1349 105.213 6.04692 105.678 4.89054 cv
105.678 4.89054 li
105.213 6.04692 104.56 7.1349 103.665 8.12204 cv
102.389 9.53043 100.744 10.5844 98.9855 11.2878 cv
98.0368 11.6731 97.0497 11.9619 96.0471 12.1681 cv
96.0471 12.1681 li
.137255 .709804 .545098 rgb
f
95.2122 14.0104 mo
94.4321 13.5588 93.6696 13.0738 92.9278 12.557 cv
93.3057 11.4152 93.6838 10.2737 94.0622 9.13209 cv
94.3735 8.19211 94.6849 7.25236 94.9967 6.31261 cv
94.9967 6.31261 li
95.4832 4.84655 96.9087 3.37688 97.7851 2.11472 cv
97.93 1.90618 98.0755 1.69816 98.2214 1.49032 cv
98.5192 1.6158 98.8167 1.74225 99.1137 1.86966 cv
98.432 3.12875 97.7503 4.38774 97.0684 5.64683 cv
96.2291 7.19671 96.1415 9.05436 95.84 10.7874 cv
95.84 10.7874 li
95.84 10.7874 li
98.9885 10.369 102.478 8.98091 104.318 6.24029 cv
104.683 5.73874 104.994 5.2193 105.26 4.68455 cv
105.399 4.75295 105.539 4.8216 105.678 4.89054 cv
105.213 6.04692 104.56 7.1349 103.665 8.12204 cv
102.389 9.53043 100.744 10.5844 98.9855 11.2878 cv
98.0368 11.6731 97.0497 11.9619 96.0471 12.1681 cv
96.0471 12.1681 li
96.0441 12.1687 96.0412 12.1693 96.0382 12.17 cv
96.0376 12.1701 96.037 12.1702 96.0364 12.1704 cv
96.0303 12.1717 96.0243 12.1732 96.0183 12.1748 cv
96.018 12.1748 96.0178 12.1749 96.0175 12.175 cv
95.8092 12.2291 95.6562 12.3928 95.5412 12.6204 cv
95.541 12.6207 95.5409 12.621 95.5407 12.6214 cv
95.5392 12.6244 95.5377 12.6273 95.5363 12.6303 cv
95.536 12.6308 95.5358 12.6312 95.5355 12.6317 cv
95.5342 12.6345 95.5328 12.6372 95.5315 12.64 cv
95.5308 12.6415 95.53 12.643 95.5293 12.6445 cv
95.5286 12.646 95.5279 12.6474 95.5272 12.6488 cv
95.5256 12.6522 95.524 12.6555 95.5224 12.6589 cv
95.5221 12.6595 95.5218 12.6602 95.5215 12.6608 cv
95.3514 13.0218 95.269 13.5274 95.2122 14.0104 cv
.72549 .258824 .305882 rgb
f
87.9106 25.0249 mo
87.9099 25.0091 87.9093 24.9931 87.9086 24.9772 cv
87.9093 24.9932 87.9099 25.009 87.9106 25.0249 cv
87.9074 24.9465 mo
87.8997 24.7585 87.8923 24.5701 87.8852 24.3821 cv
87.8923 24.5701 87.8997 24.7584 87.9074 24.9465 cv
87.8246 22.7732 mo
87.8023 22.1845 90.2644 20.574 90.7434 20.1615 cv
91.9857 19.0919 93.7675 18.0314 94.7574 16.7206 cv
95.0024 16.3085 94.9947 15.5752 95.0857 15.0874 cv
95.0857 15.0874 li
95.0857 15.0874 li
94.9949 15.5752 95.0024 16.3085 94.7574 16.7206 cv
93.7675 18.0314 91.9857 19.0919 90.7434 20.1615 cv
90.2644 20.574 87.8025 22.1845 87.8246 22.7732 cv
87.6389 17.8458 mo
87.6026 16.8806 87.5661 15.9154 87.5298 14.9502 cv
87.5663 15.9154 87.6026 16.8806 87.6389 17.8458 cv
95.1186 14.8657 mo
95.1501 14.6187 95.1759 14.3192 95.2122 14.0104 cv
95.2123 14.0105 95.2125 14.0106 95.2126 14.0106 cv
95.1763 14.3192 95.1502 14.6188 95.1186 14.8657 cv
92.312 14.496 mo
92.5755 13.9765 92.6905 13.2743 92.8669 12.7404 cv
92.9277 12.557 li
92.9278 12.557 92.9278 12.557 92.9278 12.557 cv
92.9076 12.6181 92.8874 12.6793 92.8671 12.7404 cv
92.6906 13.2743 92.5755 13.9765 92.312 14.496 cv
87.2501 7.52267 mo
87.214 6.56465 87.1779 5.60629 87.1419 4.64828 cv
87.1419 4.64828 87.1419 4.64828 87.1419 4.64828 cv
87.178 5.60639 87.214 6.56452 87.2501 7.52267 cv
56.6147 7.31647 mo
56.6237 6.84375 56.6328 6.37077 56.6418 5.89805 cv
56.6418 5.89805 li
56.6328 6.37094 56.6238 6.84358 56.6147 7.31647 cv
.137255 .709804 .545098 rgb
f
88.2353 31.7178 mo
77.5696 29.8133 66.9556 27.6096 56.2683 25.4233 cv
56.3836 19.3878 56.4993 13.3522 56.6147 7.31647 cv
56.6238 6.84358 56.6328 6.37094 56.6418 5.89805 cv
66.7853 5.86042 77.0158 5.41184 87.1419 4.64828 cv
87.1779 5.60629 87.214 6.56465 87.2501 7.52267 cv
87.3312 9.67679 87.4123 11.831 87.4934 13.9852 cv
87.5055 14.3068 87.5177 14.6285 87.5298 14.9502 cv
87.5661 15.9154 87.6026 16.8806 87.6389 17.8458 cv
87.6389 17.8458 li
88.9164 17.0056 90.1961 16.1686 91.477 15.3334 cv
91.8886 15.0648 92.0202 15.0022 92.2496 14.6106 cv
92.2713 14.5736 92.2921 14.5353 92.312 14.496 cv
92.5755 13.9765 92.6906 13.2743 92.8671 12.7404 cv
92.8874 12.6793 92.9076 12.6181 92.9278 12.557 cv
93.6696 13.0738 94.4321 13.5588 95.2122 14.0104 cv
95.1759 14.3192 95.1501 14.6187 95.1186 14.8657 cv
95.1084 14.9456 95.0976 15.02 95.0857 15.0874 cv
95.0857 15.0874 li
94.9947 15.5752 95.0024 16.3085 94.7574 16.7206 cv
93.7675 18.0314 91.9857 19.0919 90.7434 20.1615 cv
90.2644 20.574 87.8023 22.1845 87.8246 22.7732 cv
87.8246 22.7732 li
87.8446 23.3097 87.8649 23.8459 87.8852 24.3821 cv
87.8852 24.3821 li
87.8923 24.5701 87.8997 24.7585 87.9074 24.9465 cv
87.9078 24.9568 87.9082 24.967 87.9086 24.9772 cv
87.9093 24.9931 87.9099 25.0091 87.9106 25.0249 cv
88.0025 27.251 88.1328 29.4841 88.2353 31.7178 cv
.72549 .258824 .305882 rgb
f
87.1419 4.64819 mo
87.0835 3.09888 87.0252 1.54932 86.9668 0 cv
56.7548 0 li
56.7171 1.96606 56.6796 3.93201 56.6419 5.89795 cv
66.7854 5.86035 77.0158 5.41174 87.1419 4.64819 cv
cp
.796078 .317647 .329412 rgb
f
64.3139 47.4606 mo
61.6889 47.3915 59.0606 47.3034 56.4252 47.1707 cv
57.8581 44.8337 58.9131 42.234 59.2186 39.5702 cv
59.541 36.9275 58.0941 35.1256 56.1056 33.9259 cv
56.107 33.8518 56.1085 33.7777 56.1099 33.7037 cv
60.2465 35.1772 63.6421 38.8916 64.3793 43.3157 cv
64.653 44.8216 64.6064 46.2018 64.3139 47.4606 cv
.72549 .258824 .305882 rgb
f
87.5712 60.8494 mo
87.7297 56.6407 87.8883 52.4313 88.0469 48.2226 cv
88.0472 48.2226 88.0472 48.2226 88.0472 48.2226 cv
87.8883 52.4315 87.7297 56.6405 87.5713 60.8494 cv
87.5713 60.8494 li
55.7395 52.4892 mo
55.7709 51.0231 55.8024 49.5578 55.8323 48.0918 cv
55.8325 48.0916 55.8329 48.091 55.833 48.0908 cv
55.803 49.5566 55.7712 51.0232 55.7395 52.4892 cv
.137255 .709804 .545098 rgb
f
55.5536 62.2733 mo
55.6008 59.0119 55.6697 55.7503 55.7395 52.4892 cv
55.7712 51.0232 55.803 49.5566 55.833 48.0908 cv
56.0365 47.7891 56.2343 47.4822 56.4252 47.1707 cv
67.0071 47.7039 77.4819 47.5248 88.0472 48.2226 cv
87.8883 52.4313 87.7297 56.6407 87.5712 60.8494 cv
76.888 61.4354 66.1704 61.8642 55.5536 62.2733 cv
.72549 .258824 .305882 rgb
f
45.9442 65.6953 mo
45.716 65.4591 45.5956 65.2196 45.5559 64.7136 cv
45.5323 64.4117 45.512 64.1102 45.4937 63.8084 cv
45.512 64.1102 45.5324 64.4116 45.5561 64.7136 cv
45.5957 65.2196 45.716 65.4591 45.9442 65.6953 cv
45.9442 65.6953 li
.137255 .709804 .545098 rgb
f
47.359 67.0027 mo
47.1067 66.7644 46.855 66.5251 46.602 66.2872 cv
46.3221 66.0288 46.106 65.8629 45.9442 65.6953 cv
45.9442 65.6953 li
46.106 65.8629 46.3221 66.0288 46.602 66.2872 cv
46.8551 66.5252 47.1079 66.7634 47.3605 67.002 cv
47.36 67.0022 47.3595 67.0025 47.359 67.0027 cv
.0431373 .501961 .486274 rgb
f
49.5931 65.5899 mo
49.2713 65.397 48.9203 65.184 48.6025 64.9545 cv
48.9203 65.1839 49.2714 65.3969 49.5931 65.5898 cv
49.5931 65.5898 li
48.5965 64.9501 mo
48.5952 64.9492 48.5939 64.9482 48.5926 64.9473 cv
48.5938 64.9482 48.5952 64.9492 48.5965 64.9501 cv
48.5826 64.94 mo
48.5822 64.9398 48.582 64.9396 48.5817 64.9394 cv
48.582 64.9396 48.5823 64.9398 48.5826 64.94 cv
47.6371 63.9087 mo
47.6371 63.9084 47.637 63.9083 47.6369 63.908 cv
47.637 63.9082 47.6371 63.9085 47.6371 63.9087 cv
47.6293 63.8875 mo
47.6291 63.8871 47.6289 63.8866 47.6288 63.8862 cv
47.6289 63.8866 47.6291 63.8871 47.6293 63.8875 cv
47.6257 63.8776 mo
47.6255 63.8769 47.6253 63.8763 47.6251 63.8757 cv
47.6253 63.8763 47.6255 63.8769 47.6257 63.8776 cv
45.4925 63.7888 mo
45.4913 63.7675 45.49 63.7462 45.4887 63.7248 cv
45.49 63.7462 45.4913 63.7675 45.4925 63.7888 cv
45.486 63.6781 mo
45.4852 63.6644 45.4844 63.6508 45.4836 63.6372 cv
45.4844 63.6508 45.4852 63.6644 45.486 63.6781 cv
45.4798 63.572 mo
45.4794 63.5646 45.479 63.5572 45.4786 63.5498 cv
45.479 63.5572 45.4794 63.5646 45.4798 63.572 cv
45.4741 63.4696 mo
45.4738 63.4659 45.4736 63.4621 45.4734 63.4583 cv
45.4736 63.4621 45.4738 63.4659 45.4741 63.4696 cv
45.2634 61.0337 mo
45.1573 60.9244 44.9449 60.9193 44.4974 60.8819 cv
40.7182 60.5656 37.1694 59.0519 35.0356 55.8602 cv
35.0356 55.8602 li
37.1694 59.0519 40.7182 60.5656 44.4974 60.8819 cv
44.945 60.9193 45.1573 60.9244 45.2634 61.0337 cv
42.749 58.8994 mo
41.6255 58.8517 40.4981 58.6794 39.4292 58.3233 cv
40.4981 58.6794 41.6257 58.8517 42.749 58.8994 cv
39.0555 58.1923 mo
37.7713 57.7151 36.6723 56.9618 35.7232 56.0287 cv
35.7232 56.0287 li
36.6723 56.9618 37.7713 57.7151 39.0555 58.1923 cv
.137255 .709804 .545098 rgb
f
47.3605 67.002 mo
47.1079 66.7634 46.8551 66.5252 46.602 66.2872 cv
46.3221 66.0288 46.106 65.8629 45.9442 65.6953 cv
45.716 65.4591 45.5957 65.2196 45.5561 64.7136 cv
45.5324 64.4116 45.512 64.1102 45.4937 63.8084 cv
45.4933 63.8019 45.4929 63.7954 45.4925 63.7888 cv
45.4913 63.7675 45.49 63.7462 45.4887 63.7248 cv
45.4878 63.7092 45.4869 63.6936 45.486 63.6781 cv
45.4852 63.6644 45.4844 63.6508 45.4836 63.6372 cv
45.4823 63.6155 45.4811 63.5937 45.4798 63.572 cv
45.4794 63.5646 45.479 63.5572 45.4786 63.5498 cv
45.4771 63.5231 45.4755 63.4964 45.4741 63.4696 cv
45.4738 63.4659 45.4736 63.4621 45.4734 63.4583 cv
45.4717 63.4281 45.4701 63.3979 45.4684 63.3676 cv
45.4684 63.3676 li
45.4667 63.3355 45.4649 63.3035 45.4632 63.2713 cv
45.4632 63.2713 li
45.4615 63.2392 45.4598 63.2071 45.4581 63.175 cv
45.4581 63.175 li
45.4358 62.7203 45.4135 62.2657 45.3914 61.811 cv
45.3914 61.811 li
45.3692 61.3567 45.3694 61.1431 45.2634 61.0337 cv
45.1573 60.9244 44.945 60.9193 44.4974 60.8819 cv
40.7182 60.5656 37.1694 59.0519 35.0356 55.8602 cv
35.2641 55.9192 35.4931 55.9754 35.7232 56.0287 cv
36.6723 56.9618 37.7713 57.7151 39.0555 58.1923 cv
39.127 58.2188 39.1992 58.2446 39.2719 58.2694 cv
39.3242 58.2878 39.3766 58.3058 39.4292 58.3233 cv
40.4981 58.6794 41.6255 58.8517 42.749 58.8994 cv
42.749 58.8994 li
42.9528 58.908 43.1566 58.912 43.3604 58.912 cv
43.7425 58.912 44.1246 58.898 44.5062 58.8748 cv
45.126 58.8371 45.2315 58.8188 45.2317 58.4553 cv
45.2318 58.344 45.222 58.2004 45.2141 58.0139 cv
45.1817 57.2465 45.1863 56.7654 44.9795 56.2429 cv
45.2564 56.1793 45.5297 56.108 45.8001 56.0293 cv
46.3132 57.6757 47.2195 63.0617 47.6217 63.8658 cv
47.6228 63.8691 47.6239 63.8724 47.6251 63.8757 cv
47.6253 63.8763 47.6255 63.8769 47.6257 63.8776 cv
47.6267 63.8804 47.6278 63.8833 47.6288 63.8862 cv
47.6289 63.8866 47.6291 63.8871 47.6293 63.8875 cv
47.6317 63.8944 47.6343 63.9012 47.6369 63.908 cv
47.637 63.9083 47.6371 63.9084 47.6371 63.9087 cv
47.7787 64.2767 48.1475 64.6235 48.5817 64.9394 cv
48.582 64.9396 48.5822 64.9398 48.5826 64.94 cv
48.5859 64.9425 48.5892 64.9449 48.5926 64.9473 cv
48.5939 64.9482 48.5952 64.9492 48.5965 64.9501 cv
48.5985 64.9516 48.6005 64.953 48.6025 64.9545 cv
48.9203 65.184 49.2713 65.397 49.5931 65.5899 cv
48.9125 66.1208 48.1612 66.5889 47.3605 67.002 cv
.72549 .258824 .305882 rgb
f
87.9618 179.938 mo
82.6207 179.56 77.2931 179.089 71.9608 178.569 cv
71.9608 178.569 li
71.6478 178.539 71.3345 178.507 71.021 178.475 cv
66.8755 178.052 62.6897 177.517 58.5339 177.386 cv
55.604 177.294 52.6782 177.28 49.7516 177.28 cv
48.4691 177.28 47.186 177.283 45.9031 177.283 cv
49.1272 176.09 52.2695 174.687 55.1834 172.853 cv
60.1638 160.864 61.296 147.694 64.3793 135.361 cv
64.3793 144.224 65.7428 152.747 66.0837 161.611 cv
67.1066 157.179 68.4701 152.747 69.8337 148.656 cv
69.8337 156.169 71.5564 163.394 72.6302 170.595 cv
77.3632 174.217 82.83 176.817 87.9618 179.938 cv
.690196 .231373 .294118 rgb
f
110.275 7.27534 mo
107.236 5.62228 109.166 6.66544 110.65 7.47001 cv
118.016 11.3673 126.458 13.4823 134.8 12.3772 cv
141.961 11.4286 151.348 7.62637 153.607 0 cv
94.5574 0 li
98.4013 1.51022 102.19 3.15766 105.897 4.99908 cv
107.371 5.73065 108.83 6.48948 110.275 7.27534 cv
.682353 .623529 .113725 rgb
f
110.65 7.47001 mo
110.525 7.40422 110.399 7.34226 110.275 7.27534 cv
112.816 8.647 111.888 8.14164 110.65 7.47001 cv
f
110.275 7.27534 mo
110.399 7.34226 110.525 7.40422 110.65 7.47001 cv
109.166 6.66544 107.236 5.62228 110.275 7.27534 cv
f
110.275 7.27534 mo
112.604 8.53277 112.019 8.21307 110.952 7.6338 cv
110.725 7.51597 110.5 7.39656 110.275 7.27534 cv
f
110.275 7.27534 mo
110.5 7.39656 110.725 7.51597 110.952 7.6338 cv
109.46 6.82406 107.025 5.50737 110.275 7.27534 cv
f
130.319 12.6697 mo
123.586 12.6697 116.923 10.7406 110.953 7.63443 cv
110.919 7.61611 110.885 7.59758 110.85 7.57878 cv
110.832 7.56885 110.814 7.55891 110.795 7.54886 cv
110.748 7.52347 110.701 7.49769 110.653 7.4717 cv
116.701 10.6715 123.476 12.6693 130.324 12.6693 cv
131.489 12.6693 132.654 12.6116 133.82 12.4922 cv
132.653 12.6118 131.485 12.6697 130.319 12.6697 cv
.129412 .72549 .572549 rgb
f
130.324 12.6693 mo
123.476 12.6693 116.701 10.6715 110.653 7.4717 cv
110.019 7.12781 109.303 6.73996 108.927 6.53757 cv
108.766 6.45028 108.667 6.39746 108.666 6.39745 cv
108.666 6.39745 li
108.666 6.39745 li
108.666 6.39745 108.666 6.39751 108.666 6.39762 cv
108.666 6.39895 109.02 6.59238 109.962 7.10478 cv
109.971 7.10974 109.98 7.11473 109.989 7.11974 cv
109.996 7.12331 110.002 7.12674 110.009 7.13034 cv
110.015 7.13394 110.022 7.1377 110.029 7.14133 cv
110.058 7.15722 110.087 7.17325 110.118 7.18973 cv
110.122 7.19227 110.128 7.19505 110.132 7.19761 cv
110.153 7.20896 110.174 7.22027 110.195 7.2319 cv
110.212 7.24081 110.228 7.24993 110.245 7.25901 cv
110.248 7.2605 110.251 7.26198 110.253 7.26348 cv
110.261 7.26744 110.268 7.27135 110.275 7.27534 cv
108.83 6.48948 107.371 5.73065 105.897 4.99908 cv
105.824 4.96278 105.752 4.9267 105.678 4.89054 cv
105.539 4.8216 105.399 4.75295 105.26 4.68455 cv
103.233 3.69268 101.183 2.75734 99.1137 1.86966 cv
98.8167 1.74225 98.5192 1.6158 98.2214 1.49032 cv
97.0063 .978326 95.7847 .482176 94.5574 0 cv
116.387 0 li
122.491 3.16377 128.941 5.11814 135.494 5.11793 cv
138.141 5.11784 140.806 4.79864 143.47 4.11115 cv
146.11 3.23088 148.599 1.91532 150.497 0 cv
153.607 0 li
151.348 7.62637 141.961 11.4286 134.8 12.3772 cv
134.8 12.3772 li
134.473 12.4204 134.147 12.4587 133.82 12.4922 cv
132.654 12.6116 131.489 12.6693 130.324 12.6693 cv
.592157 .521569 .109804 rgb
f
110.953 7.63443 mo
110.952 7.6342 110.952 7.63404 110.952 7.6338 cv
110.952 7.6338 li
110.952 7.6338 li
110.947 7.63143 110.943 7.629 110.938 7.62662 cv
110.909 7.61084 110.88 7.5949 110.85 7.57878 cv
110.885 7.59758 110.919 7.61611 110.953 7.63443 cv
f
108.927 6.53757 mo
108.766 6.45041 108.667 6.39761 108.666 6.39761 cv
108.666 6.39761 108.666 6.39762 108.666 6.39762 cv
108.666 6.39751 108.666 6.39745 108.666 6.39745 cv
108.666 6.39745 li
108.666 6.39745 li
108.667 6.39746 108.766 6.45028 108.927 6.53757 cv
f
110.952 7.6338 mo
110.952 7.6338 li
110.947 7.63143 110.943 7.629 110.938 7.62662 cv
110.943 7.629 110.947 7.63143 110.952 7.6338 cv
110.952 7.6338 li
110.795 7.54886 mo
109.862 7.0428 108.67 6.39761 108.666 6.39761 cv
108.664 6.39761 109.017 6.59067 109.962 7.10478 cv
109.02 6.59238 108.666 6.39895 108.666 6.39762 cv
108.666 6.39762 108.666 6.39761 108.666 6.39761 cv
108.667 6.39761 108.766 6.45041 108.927 6.53757 cv
109.303 6.73996 110.019 7.12781 110.653 7.4717 cv
110.701 7.49769 110.748 7.52347 110.795 7.54886 cv
110.253 7.26348 mo
110.251 7.26198 110.248 7.2605 110.245 7.25901 cv
110.248 7.2605 110.251 7.26198 110.253 7.26348 cv
110.195 7.2319 mo
110.174 7.22027 110.153 7.20896 110.132 7.19761 cv
110.153 7.20896 110.174 7.22027 110.195 7.2319 cv
110.118 7.18973 mo
110.087 7.17325 110.058 7.15722 110.029 7.14133 cv
110.058 7.15722 110.087 7.17325 110.118 7.18973 cv
110.009 7.13034 mo
110.002 7.12674 109.996 7.12331 109.989 7.11974 cv
109.996 7.12331 110.002 7.12674 110.009 7.13034 cv
f
32.1624 54.9689 mo
32.207 54.9838 li
32.0885 54.9412 32.0391 54.9239 32.1624 54.9689 cv
.682353 .623529 .113725 rgb
f
32.207 54.9838 mo
32.1624 54.9689 li
33.8828 55.5905 32.6141 55.1305 32.207 54.9838 cv
f
53.4772 32.7394 mo
45.3279 30.0051 36.203 31.1007 27.7739 30.0303 cv
19.534 29.0581 11.961 31.5604 6.1754 37.5693 cv
4.94861 38.8436 3.76846 40.19 2.74805 41.6365 cv
1.66704 43.1695 .960478 44.6747 2.70727 46.0148 cv
5.16603 47.9013 8.51497 48.6545 11.4604 49.3904 cv
18.3985 51.1234 25.4284 52.5007 32.1624 54.9689 cv
32.0391 54.9239 32.0885 54.9412 32.207 54.9838 cv
36.089 56.3809 40.3685 57.1411 44.4663 56.3514 cv
48.2276 55.6261 51.4215 53.4925 53.8996 50.6174 cv
56.538 47.5562 58.752 43.6376 59.2186 39.5702 cv
59.6729 35.8463 56.6141 33.792 53.4772 32.7394 cv
f
32.1624 54.9689 mo
33.8139 55.5658 32.7076 55.1645 32.2561 55.0016 cv
32.1624 54.9689 li
f
32.1624 54.9689 mo
32.2561 55.0016 li
32.1004 54.9455 32.0222 54.9176 32.1624 54.9689 cv
f
41.0258 56.6704 mo
39.2471 56.6704 37.4641 56.4326 35.7232 56.0287 cv
35.723 56.0285 li
37.464 56.4324 39.2473 56.6702 41.0261 56.6703 cv
42.1788 56.6703 43.3293 56.5705 44.4663 56.3514 cv
44.5839 56.3287 44.7008 56.3047 44.8173 56.2793 cv
44.7008 56.3047 44.5839 56.3287 44.4663 56.3514 cv
43.3291 56.5706 42.1786 56.6704 41.0258 56.6704 cv
35.0356 55.8602 mo
34.1027 55.6193 33.1834 55.3328 32.2853 55.0121 cv
32.2569 55.0018 32.2305 54.9923 32.207 54.9838 cv
33.1299 55.3159 34.0755 55.6121 35.0355 55.86 cv
35.0356 55.8602 li
.129412 .72549 .572549 rgb
f
35.7232 56.0287 mo
35.7232 56.0287 li
35.7231 56.0286 35.7231 56.0286 35.723 56.0285 cv
35.723 56.0285 li
35.7232 56.0287 li
.117647 .596078 .529412 rgb
f
35.7232 56.0287 mo
35.4931 55.9754 35.2641 55.9192 35.0356 55.8602 cv
35.0355 55.86 li
35.264 55.919 35.4929 55.9752 35.723 56.0285 cv
35.7231 56.0286 35.7231 56.0286 35.7232 56.0287 cv
.627451 .215686 .298039 rgb
f
32.1601 54.967 mo
32.1594 54.9667 32.1587 54.9665 32.158 54.9662 cv
32.1587 54.9665 32.1594 54.9667 32.1601 54.967 cv
32.153 54.9655 mo
25.4221 52.4995 18.3951 51.1226 11.4604 49.3904 cv
9.76476 48.9668 7.93514 48.5373 6.21885 47.8893 cv
6.21884 47.8892 li
7.93527 48.5374 9.76458 48.9667 11.4604 49.3904 cv
18.3951 51.1226 25.4221 52.4995 32.153 54.9655 cv
32.153 54.9655 li
4.49079 47.1307 mo
3.86095 46.8079 3.26143 46.4402 2.70727 46.0151 cv
1.94305 45.4287 1.64841 44.8107 1.64928 44.1726 cv
1.64841 44.8106 1.94305 45.4285 2.70727 46.0148 cv
3.26148 46.4401 3.86097 46.8077 4.49082 47.1306 cv
4.49079 47.1307 li
.129412 .72549 .572549 rgb
f
6.21885 47.8893 mo
5.62582 47.6654 5.04661 47.4156 4.49079 47.1307 cv
4.49082 47.1306 li
5.04648 47.4154 5.62601 47.6654 6.21884 47.8892 cv
6.21885 47.8893 li
.0392157 .517647 .509804 rgb
f
32.1507 54.9647 mo
32.149 54.9641 32.1474 54.9635 32.1458 54.9629 cv
32.1474 54.9635 32.149 54.9641 32.1507 54.9647 cv
53.8996 50.6174 mo
53.8996 50.6174 li
53.9091 50.6064 53.9184 50.5956 53.9279 50.5845 cv
53.9185 50.5955 53.9091 50.6064 53.8996 50.6174 cv
53.8996 50.6174 li
53.9336 50.5779 mo
53.9423 50.5677 53.9508 50.5578 53.9595 50.5477 cv
53.9509 50.5578 53.9423 50.5678 53.9336 50.5779 cv
53.9621 50.5446 mo
53.9719 50.5332 53.9817 50.5218 53.9915 50.5103 cv
53.9817 50.5217 53.9719 50.5332 53.9621 50.5446 cv
53.9941 50.5072 mo
54.0026 50.4972 54.011 50.4873 54.0195 50.4773 cv
54.0111 50.4872 54.0025 50.4973 53.9941 50.5072 cv
54.0251 50.4707 mo
54.0439 50.4487 54.0622 50.427 54.0809 50.4049 cv
54.0624 50.4269 54.0437 50.4489 54.0251 50.4707 cv
54.0891 50.3952 mo
54.0952 50.388 54.1015 50.3805 54.1075 50.3733 cv
54.1013 50.3807 54.0953 50.3878 54.0891 50.3952 cv
54.1269 50.3503 mo
54.1311 50.3453 54.1352 50.3404 54.1394 50.3354 cv
54.1352 50.3404 54.1311 50.3453 54.1269 50.3503 cv
54.1574 50.3139 mo
54.1595 50.3114 54.1619 50.3085 54.164 50.3061 cv
54.1618 50.3086 54.1595 50.3114 54.1574 50.3139 cv
29.5286 30.223 mo
28.9406 30.1677 28.3557 30.1042 27.7739 30.0303 cv
28.3558 30.104 28.9414 30.1668 29.5295 30.2223 cv
29.5291 30.2225 29.5289 30.2227 29.5286 30.223 cv
.129412 .72549 .572549 rgb
f
32.207 54.9838 mo
32.203 54.9825 li
32.16 54.967 32.1266 54.955 32.1075 54.9482 cv
32.1191 54.9523 32.1363 54.9585 32.158 54.9662 cv
32.1587 54.9665 32.1594 54.9667 32.1601 54.967 cv
32.174 54.972 32.1898 54.9776 32.207 54.9838 cv
32.1624 54.9689 mo
32.1608 54.9684 32.1592 54.9678 32.1577 54.9672 cv
32.1553 54.9663 32.153 54.9655 32.1507 54.9647 cv
32.149 54.9641 32.1474 54.9635 32.1458 54.9629 cv
32.1117 54.9504 32.0946 54.944 32.0913 54.9427 cv
32.097 54.9449 32.1154 54.9517 32.1493 54.9641 cv
32.1534 54.9656 32.1578 54.9672 32.1624 54.9689 cv
.592157 .521569 .109804 rgb
f
32.2853 55.0121 mo
32.2757 55.0086 32.2658 55.0051 32.2561 55.0016 cv
32.2561 55.0016 li
32.2372 54.9948 32.2194 54.9884 32.203 54.9825 cv
32.207 54.9838 li
32.207 54.9838 li
32.207 54.9838 li
32.2305 54.9923 32.2569 55.0018 32.2853 55.0121 cv
f
41.0261 56.6703 mo
39.2473 56.6702 37.464 56.4324 35.723 56.0285 cv
35.723 56.0285 li
35.4929 55.9752 35.264 55.919 35.0355 55.86 cv
35.0355 55.86 li
34.0755 55.6121 33.1299 55.3159 32.207 54.9838 cv
32.207 54.9838 li
32.207 54.9838 li
32.207 54.9838 li
32.1898 54.9776 32.174 54.972 32.1601 54.967 cv
32.1594 54.9667 32.1587 54.9665 32.158 54.9662 cv
32.1363 54.9585 32.1191 54.9523 32.1075 54.9482 cv
32.096 54.9441 32.0896 54.9419 32.0893 54.9419 cv
32.0893 54.9419 li
32.0893 54.9419 li
32.0893 54.9419 32.0897 54.9421 32.0905 54.9424 cv
32.0908 54.9425 32.091 54.9426 32.0913 54.9427 cv
32.0946 54.944 32.1117 54.9504 32.1458 54.9629 cv
32.1474 54.9635 32.149 54.9641 32.1507 54.9647 cv
32.153 54.9655 32.1553 54.9663 32.1577 54.9672 cv
32.1592 54.9678 32.1608 54.9684 32.1624 54.9689 cv
32.1624 54.9689 li
32.1591 54.9677 32.1563 54.9667 32.153 54.9655 cv
25.4221 52.4995 18.3951 51.1226 11.4604 49.3904 cv
9.76458 48.9667 7.93527 48.5374 6.21884 47.8892 cv
5.62601 47.6654 5.04648 47.4154 4.49082 47.1306 cv
3.86097 46.8077 3.26148 46.4401 2.70727 46.0148 cv
1.94305 45.4285 1.64841 44.8106 1.64928 44.1726 cv
1.65039 43.3523 2.13998 42.4988 2.74805 41.6365 cv
3.76846 40.19 4.94861 38.8436 6.1754 37.5693 cv
11.1524 32.4002 17.4509 29.8264 24.3598 29.8264 cv
25.4824 29.8264 26.6222 29.8944 27.7739 30.0303 cv
27.7739 30.0303 li
28.3557 30.1042 28.9406 30.1677 29.5286 30.223 cv
27.7489 31.5754 26.3282 33.3418 25.5156 35.4746 cv
23.4703 39.9066 28.243 43.3157 31.9929 43.6566 cv
38.4675 44.2451 44.4333 45.0877 50.769 45.0877 cv
51.7724 45.0877 52.7857 45.0665 53.8111 45.0199 cv
55.5063 45.0199 57.1168 44.2606 58.3918 43.0784 cv
57.465 45.7217 55.9225 48.2037 54.164 50.3061 cv
54.1619 50.3085 54.1595 50.3114 54.1574 50.3139 cv
54.1514 50.321 54.1453 50.3283 54.1394 50.3354 cv
54.1352 50.3404 54.1311 50.3453 54.1269 50.3503 cv
54.1205 50.3579 54.114 50.3657 54.1075 50.3733 cv
54.1015 50.3805 54.0952 50.388 54.0891 50.3952 cv
54.0864 50.3984 54.0836 50.4017 54.0809 50.4049 cv
54.0622 50.427 54.0439 50.4487 54.0251 50.4707 cv
54.0232 50.473 54.0214 50.4751 54.0195 50.4773 cv
54.011 50.4873 54.0026 50.4972 53.9941 50.5072 cv
53.9932 50.5083 53.9924 50.5092 53.9915 50.5103 cv
53.9817 50.5218 53.9719 50.5332 53.9621 50.5446 cv
53.9612 50.5457 53.9604 50.5466 53.9595 50.5477 cv
53.9508 50.5578 53.9423 50.5677 53.9336 50.5779 cv
53.9318 50.58 53.9297 50.5824 53.9279 50.5845 cv
53.9184 50.5956 53.9091 50.6064 53.8996 50.6174 cv
53.8996 50.6174 li
51.4989 53.4024 48.4265 55.4921 44.8173 56.2793 cv
44.7008 56.3047 44.5839 56.3287 44.4663 56.3514 cv
43.3293 56.5705 42.1788 56.6703 41.0261 56.6703 cv
f
32.2561 55.0016 mo
32.2561 55.0016 li
32.1576 54.9661 32.0901 54.9419 32.0893 54.9419 cv
32.0893 54.9419 li
32.0896 54.9419 32.096 54.9441 32.1075 54.9482 cv
32.1266 54.955 32.16 54.967 32.203 54.9825 cv
32.203 54.9825 li
32.2194 54.9884 32.2372 54.9948 32.2561 55.0016 cv
32.2561 55.0016 li
32.1493 54.9641 mo
32.1154 54.9517 32.097 54.9449 32.0913 54.9427 cv
32.091 54.9426 32.0908 54.9425 32.0905 54.9424 cv
32.0952 54.9442 32.1137 54.9511 32.1493 54.9641 cv
f
47.7178 40.7352 mo
45.7919 40.7351 44.23 39.6555 42.387 39.3566 cv
42.1153 39.3126 41.8498 39.2962 41.5876 39.2962 cv
41.1985 39.2962 40.8169 39.3324 40.4333 39.3688 cv
40.0492 39.4051 39.6631 39.4415 39.2659 39.4415 cv
39.1555 39.4415 39.0442 39.4387 38.9319 39.4323 cv
36.2084 39.2764 31.8825 36.6797 35.9996 34.8769 cv
37.1818 34.3591 38.3339 34.1652 39.4778 34.1652 cv
41.2674 34.1652 43.0367 34.6399 44.8685 35.0918 cv
46.7306 35.5514 50.6169 35.3338 51.3467 37.6583 cv
52.0091 39.7682 49.7245 40.6152 48.0489 40.7244 cv
47.9373 40.7317 47.827 40.7352 47.7178 40.7352 cv
.8 .764706 .152941 rgb
f
852.818 232.609 mo
842.789 228.105 835.788 218.806 828.932 208.492 cv
832.991 210.217 837.122 211.332 841.269 212.262 cv
833.456 204.025 826.355 194.407 821.09 183.36 cv
824.853 186.419 828.841 188.826 832.88 191.084 cv
824.72 181.105 817.534 169.523 813.333 156.3 cv
818.647 157.72 823.901 159.804 829.002 162.497 cv
823.82 153.678 819.058 144.461 814.629 135.118 cv
807.68 120.458 800.188 103.811 798.628 87.2167 cv
797.502 96.6351 795.762 105.946 793.67 115.044 cv
790.217 130.062 785.656 146.743 776.594 157.572 cv
779.604 156.244 782.83 155.49 786.019 154.929 cv
782.191 164.953 777.834 174.384 771.968 182.642 cv
776.194 180.856 780.247 178.705 784.106 175.995 cv
780.037 192.365 773.475 206.886 762.962 217.497 cv
768.683 214.97 773.956 211.705 778.728 207.084 cv
774.996 216.291 770.085 223.725 763.325 229.418 cv
771.824 227.999 779.063 223.876 785.834 217.706 cv
776.418 232.64 765.391 244.712 751.12 251.912 cv
759.608 251.895 767.736 250.399 775.641 247.181 cv
768.165 254.791 759.397 261.3 750.292 266.092 cv
852.272 275.292 li
845.4 270.313 839.279 264.072 833.454 256.979 cv
838.142 258.82 842.925 259.987 847.696 260.04 cv
837.982 254.112 828.656 243.393 823.399 231.147 cv
828.698 236.755 834.457 241.476 840.354 245.858 cv
837.268 239.811 834.328 233.673 831.841 227.247 cv
838.687 231.147 845.667 233.181 852.818 232.609 cv
.411765 .501961 .172549 rgb
f
309.93 136.848 mo
321.158 160.003 li
326.089 160.003 li
312.945 133.845 li
309.93 136.848 li
.921569 .376471 .254902 rgb
f
309.58 140.393 mo
314.277 146.551 318.435 153.247 322.725 159.812 cv
322.725 156.128 li
311.062 136.718 li
309.58 140.393 li
0 .878431 .780392 rgb
f
322.725 159.812 mo
318.449 153.269 314.304 146.594 309.626 140.453 cv
311.255 137.04 li
322.725 156.128 li
322.725 159.812 li
0 .72549 .764706 rgb
f
277.343 177.387 mo
271.125 177.387 264.911 177.214 258.702 176.911 cv
258.703 176.911 li
264.913 177.214 271.128 177.387 277.345 177.387 cv
280.868 177.387 284.391 177.331 287.915 177.213 cv
284.391 177.331 280.866 177.387 277.343 177.387 cv
303.597 176.247 mo
303.693 176.239 303.787 176.23 303.883 176.221 cv
303.787 176.23 303.693 176.239 303.597 176.247 cv
level3{
gsave
clp
[-71.2437 0 0 71.2437 322.725 177.758 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~]qR?sTesHU1qfP=]V%*oT/=3Q1q]D:]:CdjSM[sL1qT87]:1XgRl%^G1qK,3\sY@bR5;C@1V&l/\X51`
QSZ.;1Ur`,\<Sk[Pr#n61UiT)\!&VWP;B\21U`H&[ZNASOYaG-1UW<#[?!,OO#+2(1UW6![#HlKNAIr#
1UN)sZ\pWGM_h\s1UDrpZ\^KDLbl>m1U;fmZA16@LGQ2i1U2ZjZ%Y!=Keord1U)KfY_+a9K/9]_1TuBd
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-71.2437 0 0 71.2437 322.725 177.758 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~]Y(ni]Y(ni]Y(ni]Y(ni]Xtef]=Y\e]=Y\e]=Y\e]=PSb]"5Ja]"5Ja]"5Ja]"5Ja]",A^\[f8]\[f8]
\[f8]\[f5[\@B&Y\@B&Y\@B&Y\@B&Y\@B#W\$riU\$riU\$riU\$rfS[^NWQ[^NWQ[^NWQ[^NWQ[^NTO
[C*EM[C*EM[C*EM[C*EL['[3I['[3I['[3I['[3I['[3HZa7!EZa7!EZa7!EZa7!DZEgdAZEgdAZEgdA
ZEgdAZEgdAZ*CR=Z*CR=Z*CR=Z*CR=Yct@9Yct@9Yct@9Yct@9Yct@9YHP.5YHP.5YHP.5YHP.5Y-+q1
~>
<~TqS0RTqJ'OTV%jKT:_aJT:_aJT:VXGSt;OFSt2FCSXc4?S=H+>S=H+>S=?";S!oe7R[T\6R[T\6R[KS3
R@0G0R$a8.R$a5,Q^=&*Q^=&*Q^=#(QBmf$Q'IW"Q'ISuPa%DsPa%AqPEV2oPEV/mP*1ukP*1riOcbcg
OcbcfOH>QcOH>QbO,o?_O,o?^NfK-[NfK-ZNK&pWNK&pVN/W^SN/W^RMi3LOMi3LNMMd:KMMd:JM2@(G
M2@(GLkpkCLPLY?LPLY?LPLY?L5(G;L5(G;KnY57KnY57KS5#3KS5#3K7ef/JqAT+JqAT+JqAT+JUrB'
~>
<~1G^gC1G^gC1G^gC1G^gC1G^gC1G^gC1G^gC1G^gC1G^gC1G^gC1G^gC1G^gC1G^gC1G^gC1G^gC1GU^@
1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?
1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?
1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
262.101 182.676 mo
251.482 180.587 li
254.441 177.758 li
258.702 176.911 li
264.911 177.214 271.125 177.387 277.343 177.387 cv
280.866 177.387 284.391 177.331 287.915 177.213 cv
293.142 177.038 298.37 176.724 303.597 176.247 cv
303.693 176.239 303.787 176.23 303.883 176.221 cv
303.883 176.221 li
308.354 175.805 312.818 175.338 317.27 174.817 cv
299.18 181.37 li
262.101 182.676 li
level3{
gsave
clp
[-71.2437 0 0 71.2437 322.725 177.758 ]ct
/1 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~X)0PkD(r#,0WT"DX)'JjCG;c(0WJnBWbO5fC+uZ&0WAb?WG+&cBeZN"0W8Y<W+[i_B.p2r0;rJ9Ve.T[
AhU&n0;iA7VI_EXA1sfj0;`85VIM9V@kX]h0;W,2V.)*S@P=Qd0;N#0UgYpP?n\<`0;Mu/UL,[L?SA0]
0;Di,U0]LI?8&$Y0;;`*U0TFG>VDdU0;2W(Tj'1D>;)[S0;2Q&TNX"A=YHFN0;)H$T3*b==>-:K0:u<!
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-71.2437 0 0 71.2437 322.725 177.758 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!Wi;tsWMukrWMukrWMukrWMukrWMlboW2QYnW2QYnW2QYnW2HPk
Vl-GjVl-GjVl-GjVl-GjVl-DhVP^5fVP^5fVP^5fVP^2dV5:#bV5:#bV5:#bV5:#bV5:#bV5:#bV59u`
Unjf^Unjf^Unjf^Unjf]USFTZUSFTZUSFTZUSFTZUSFTYU8"BVU8"BVU8"BVU8"BUTqS0RTqS0RTqS0R
TqS0RTqS0RTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNT:_aJT:_aJT:_aJT:_aJSt;OFSt;OFSt;OF
~>
<~Ci!p(Ci!p(Chmg%CMR^$CMR^$CMIU!C2.KuC2.KuC2%BrBk_9qBk_9qBkV0nBP;'mBP;'mBP1sjB4kji
B4kjiB4kggAnGXeAnGUcAS#FaAS#FaAS#C_A7T4]A7T4]A7T1[@q0"Y@q0"Y@q/tW@U`eU@U`eU@U`bS
@:<SQ@:<SQ@:<SP?smAM?smAM?smAL?XI/I?XI/I?XI/H?=$rE?=$rE?=$rD?!U`A?!U`A?!U`@>[1N=
>[1N=>[1N=>?b<9>?b<9>?b<9>$>*5>$>*5>$>*5=]nm1=]nm1=BJ[-=BJ[-=BJ[-='&I)='&I)='&I)
~>
<~0/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30.nk0
/hSb//hSb//hSb//hSb//hSb//hSb//hSb//hSb//hSb//hSb//hSb//hSb//hSb//hSb//hSb//hSb/
/hSb//hSb//hSb//hSb//hSb//hSb//hSb//hSb//hSb//hSb//hSb//hSb//hSb//hSb//hSb//hSb/
/hSb//hSb//hSb//hSb//hSb//hSb//hSb//hSb//hSb//hSb//hSb//hSb//hSb//hSb//hSb//hSb/
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
277.345 177.387 mo
271.128 177.387 264.913 177.214 258.703 176.911 cv
275.39 173.594 li
275.505 174.581 li
301.835 176.291 li
301.835 176.322 li
301.969 176.299 li
302.314 176.322 li
302.314 176.242 li
322.724 172.84 li
322.725 172.84 li
317.27 174.817 li
312.818 175.338 308.354 175.805 303.883 176.221 cv
303.883 176.221 li
303.787 176.23 303.693 176.239 303.597 176.247 cv
298.371 176.724 293.141 177.038 287.915 177.213 cv
284.391 177.331 280.868 177.387 277.345 177.387 cv
level3{
gsave
clp
[-71.2437 0 0 71.2437 322.725 177.758 ]ct
/2 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~["gEDLGH5k1:2ckZ\C6AKefug1:)WhZ@k!=K/0`b19uNfZ@Xj:JhjT^19lBbZ%4X7J2+<Z0sQ3_Y^\C3
IPJ'U0sH*]YC/./I5.pQ0s>sZYBr",HSM[L0s5gWY'Mh)GqlFH0s,[TX`uS&G;61C0s#RRXEH>"Ftp%@
0roFOX*$.tF>9h<0rf:LWcKnpE\XS70r]1JWGsYlEA=G30r]+HW,FDhD_\2/0rStEVf"5eD)%r*0rJhB
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-71.2437 0 0 71.2437 322.725 177.758 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~Za7!EZa7!EZa7!EZa7!EZa-mBZEgdAZEgdAZEgdAZE^[>Z*CR=Z*CR=Z*CR=Z*CR=Z*:I:Yct@9Yct@9
Yct@9Yct@9Yct@9Yct@9Yct=7YHP.5YHP.5YHP.5YHP+3Y-+q1Y-+q1Y-+q1Y-+q1Y-+n/Xf\_-Xf\_-
Xf\_-Xf\_,XK8M)XK8M)XK8M)XK8M)XK8M(X/i;%X/i;%X/i;%X/i;$WiE)!WiE)!WiE)!WiE)!WiE(u
WMukrWMukrWMukrWMukrW2QYnW2QYnW2QYnW2QYnW2QYnVl-GjVl-GjVl-GjVl-GjVP^5fVP^5fVP^5f
~>
<~L5(G;L5(G;L4t>8KnY57KnY57KnP,4KS5#3KS+o0K7ef/K7\],JqAT+JqAT+Jq8K(JUrB'JUi9$J:N0#
J:N0#J:N-!It)rtIt)orIXZ`pIXZ]nI=6NlI=6NlI=6KjI!g<hI!g9fH[C*dH[C'bH?sm`H?sj^H$O[\
H$O[\H$O[[G^+IXG^+IWGB\7TGB\7SG'8%PG'8%PG'8%OF`hhLF`hhLF`hhKFEDVHFEDVGF)uDDF)uDC
EcQ2@EcQ2@EH,u<EH,u<EH,u<E,]c8E,]c8Df9Q4Df9Q4DJj?0DJj?0DJj?0D/F-,D/F-,Ci!p(Ci!p(
~>
<~0ekC;0ekC;0ekC;0ekC;0ekC;0ekC;0ekC;0ekC;0ekC;0ekC;0ekC;0ekC;0ekC;0ekC;0ekC;0eb:8
0JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG17
0JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG17
0JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG17
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
287.915 177.213 mo
293.141 177.038 298.371 176.724 303.597 176.247 cv
298.37 176.724 293.142 177.038 287.915 177.213 cv
303.883 176.221 mo
303.883 176.221 li
308.354 175.805 312.818 175.338 317.27 174.817 cv
317.27 174.817 li
312.818 175.338 308.354 175.805 303.883 176.221 cv
303.883 176.221 li
level3{
gsave
clp
[-71.2437 0 0 71.2437 322.725 177.758 ]ct
/3 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~UKfFH>V;dU/u)W'U0B7E=tZOQ/tuN%U00+C=Y?FO/tlE#Ti`q@=>$:L/tc8tTN<_<="U(G/YH,rT2mP9
<\9qD/Y?#pSlIA6<@seA/Y5onSl@;5;_=S>/Y,flSPq,2;D"G;/Y#]jS5Cl.;(\;8/Y#ZiRnt]+:bA/5
/XoNfRnkW*:G&&2/XfEdRSGH'9eDf./X]<bR8#9$9J)Z+/X]9aQqT*!9.cN(/XT0_QqArt8hHB%/XK']
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-71.2437 0 0 71.2437 322.725 177.758 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~U8"BVU8"BVU8"BVU8"BVU7n9STqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqJ'OTV.sNTV.sNTV.sNTV%jK
T:_aJT:_aJT:_aJT:_aJT:_^HSt;OFSt;OFSt;OFSt;LDSXl=BSXl=BSXl=BSXl=BSXl=BSXl=BSXl:@
S=H+>S=H+>S=H+>S=H+=S"#n:S"#n:S"#n:S"#n:S"#n9R[T\6R[T\6R[T\6R[T\6R[T\6R[T\6R[T\5
R@0J2R@0J2R@0J2R@0J2R$a8.R$a8.R$a8.R$a8.R$a8.Q^=&*Q^=&*Q^=&*Q^=&*Q^=&*Q^=&*QBmi&
~>
<~>?b<9>?b<9>?Y36>$>*5>$>*5>$5!2=]nm1=]nm1=]ed.=BJ[-=BJ[-=BJ[-=BAR*='&I)='&I)=&r@&
<`W7%<`W7%<`W4#<E3%!<E3%!<E3%!<E3!t<)cgr<)cgr<)cgr<)cdp;c?Un;c?Un;c?Rl;GpCj;GpCj
;GpCj;GpCi;,L1f;,L1f;,L1e:f'tb:f'tb:f'tb:f'ta:JXb^:JXb^:JXb]:/4PZ:/4PZ:/4PY9he>V
9he>V9he>V9MA,R9MA,R9MA,R9MA,R91qoN91qoN91qoN91qoN8kM]J8kM]J8kM]J8P)KF8P)KF8P)KF
~>
<~/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M&G(
/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'
/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'
/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /3 /Gradient get_res exec grestore
}if
np
301.835 159.61 mo
301.835 176.322 li
322.725 172.84 li
322.725 159.812 li
318.435 153.247 314.277 146.551 309.58 140.393 cv
301.835 159.61 li
0 .878431 .780392 rgb
f
275.505 174.581 mo
302.314 176.322 li
302.314 160.583 li
292.962 162.493 283.609 162.432 274.258 163.851 cv
275.505 174.581 li
.00784314 .631373 .701961 rgb
f
274.453 165.533 mo
302.314 163.851 li
302.314 160.944 li
274.431 160.944 li
274.453 165.533 li
f
274.453 165.533 mo
274.435 161.658 li
299.848 160.944 li
302.314 160.944 li
302.314 163.851 li
274.453 165.533 li
.00784314 .521569 .686274 rgb
f
268.861 161.814 mo
299.848 160.944 li
312.933 133.525 li
282.294 136.484 li
268.861 161.814 li
.94902 .505882 .368627 rgb
f
270.602 158.53 mo
270.602 158.53 li
278.688 143.284 li
278.688 143.284 li
278.688 143.284 li
270.602 158.53 li
.0862745 .619608 .513725 rgb
f
270.602 158.531 mo
270.602 158.531 li
270.602 158.53 li
270.602 158.53 li
270.602 158.531 li
.960784 .639216 .196078 rgb
f
269.135 161.297 mo
269.135 161.297 li
270.602 158.531 li
270.602 158.531 li
269.135 161.297 li
.960784 .741176 .294118 rgb
f
269.032 161.491 mo
269.135 161.297 li
269.135 161.297 li
270.602 158.531 li
270.602 158.53 li
278.688 143.284 li
279.726 143.184 280.767 143.102 281.81 143.034 cv
281.637 144.208 li
281.637 144.208 li
283.707 145.522 286.072 146.195 288.545 146.195 cv
288.545 146.195 li
288.545 146.195 li
289.845 146.195 291.174 146.009 292.507 145.633 cv
284.98 151.419 277.2 156.886 269.032 161.491 cv
.913725 .419608 .352941 rgb
f
278.688 143.284 mo
284.477 142.726 290.36 142.721 296.243 142.721 cv
287.557 149.577 278.559 156.12 269.032 161.491 cv
268.861 161.814 li
299.848 160.944 li
312.933 133.525 li
282.294 136.484 li
278.688 143.284 li
.94902 .505882 .368627 rgb
f
313.891 150.732 mo
309.8 150.383 309.277 157.869 309.277 157.869 cv
318.504 156.999 li
318.504 156.999 317.982 151.08 313.891 150.732 cv
cp
1 .92549 .27451 rgb
f
292.908 172.734 mo
297.937 172.84 li
297.937 165.46 li
292.908 165.626 li
292.908 167.995 292.908 170.365 292.908 172.734 cv
cp
f
285.468 165.872 mo
285.36 168.076 285.174 170.334 284.947 172.567 cv
292.036 172.716 li
291.927 170.366 291.798 168.016 291.704 165.666 cv
285.468 165.872 li
cp
f
278.456 172.431 mo
284.077 172.549 li
284.172 170.337 284.211 168.125 284.226 165.913 cv
278.456 166.104 li
278.456 172.431 li
cp
f
299.848 160.944 mo
301.835 162.743 li
312.823 136.455 li
326.089 160.003 li
327.485 159.132 li
312.695 133.178 li
299.848 160.944 li
cp
1 .682353 .627451 rgb
f
269.107 161.337 mo
271.284 162.961 li
301.835 162.743 li
299.848 160.944 li
269.107 161.337 li
cp
.921569 .376471 .254902 rgb
f
308.693 170.858 mo
318.504 169.189 li
319.032 160.061 li
308.693 160.641 li
308.693 170.858 li
cp
.756863 .984314 .588235 rgb
f
308.693 164.139 mo
312.087 163.815 315.521 163.49 318.852 163.165 cv
319.032 160.061 li
308.693 160.641 li
308.693 164.139 li
cp
1 .92549 .27451 rgb
f
308.693 170.858 mo
318.504 169.189 li
318.798 164.092 li
315.357 164.853 312.079 165.512 308.693 165.662 cv
308.693 170.858 li
cp
f
308.693 165.662 mo
312.079 165.512 315.357 164.853 318.798 164.092 cv
318.852 163.165 li
315.521 163.49 312.087 163.815 308.693 164.139 cv
308.693 165.662 li
cp
1 .631373 .27451 rgb
f
319.619 186.498 mo
319.976 186.969 320.34 187.443 320.717 187.923 cv
323.07 187.314 325.409 186.635 327.725 185.913 cv
327.392 185.539 327.074 185.148 326.753 184.759 cv
324.307 185.469 321.997 186.113 319.619 186.498 cv
cp
0 .878431 .780392 rgb
f
312.908 175.411 mo
312.964 175.741 313.05 176.074 313.148 176.408 cv
315.45 176.256 317.776 176.085 320.098 175.827 cv
319.704 175.094 319.538 174.613 319.486 174.306 cv
312.908 175.411 li
cp
f
313.815 177.075 mo
313.91 177.399 314.026 177.724 314.154 178.05 cv
316.48 177.876 318.888 177.561 321.175 177.209 cv
321.017 176.948 320.881 176.71 320.765 176.494 cv
318.443 176.751 316.117 176.923 313.815 177.075 cv
cp
f
314.649 179.171 mo
314.997 179.873 315.403 180.57 315.839 181.254 cv
318.104 180.698 320.419 180.026 322.596 179.329 cv
322.287 178.899 322.006 178.498 321.766 178.137 cv
319.394 178.524 317.021 178.851 314.649 179.171 cv
cp
f
315.839 181.254 mo
315.934 181.41 li
318.275 180.885 320.579 180.307 322.886 179.731 cv
322.78 179.588 322.693 179.463 322.596 179.329 cv
320.419 180.026 318.104 180.698 315.839 181.254 cv
cp
f
323.391 180.414 mo
321.003 180.816 318.615 181.25 316.227 181.846 cv
316.613 182.427 317.012 183 317.416 183.55 cv
319.692 182.968 321.857 182.115 324.199 181.495 cv
324.049 181.296 323.894 181.091 323.753 180.9 cv
323.391 180.414 li
cp
f
317.428 183.567 mo
317.529 183.703 317.629 183.843 317.729 183.977 cv
318.395 184.872 li
318.546 185.074 li
321.095 184.797 323.587 184.496 325.912 183.728 cv
325.475 183.176 325.049 182.626 324.645 182.091 cv
322.242 182.612 319.829 183.091 317.428 183.567 cv
cp
f
318.546 185.074 mo
318.724 185.313 318.905 185.554 319.087 185.796 cv
321.54 185.376 323.949 184.862 326.341 184.27 cv
326.195 184.089 326.055 183.909 325.912 183.728 cv
323.587 184.496 321.095 184.797 318.546 185.074 cv
cp
f
320.717 187.923 mo
320.934 188.199 321.14 188.473 321.364 188.748 cv
323.642 187.996 325.931 187.232 328.217 186.471 cv
328.05 186.292 327.89 186.098 327.725 185.913 cv
325.409 186.635 323.07 187.314 320.717 187.923 cv
cp
f
284.395 125.5 mo
281.637 144.208 li
286.217 147.116 292.246 146.887 297.69 143.163 cv
296.243 125.5 li
284.395 125.5 li
f
282.746 136.689 mo
281.637 144.208 li
286.217 147.116 292.246 146.887 297.69 143.163 cv
296.858 133.012 li
292.091 132.013 286.986 133.819 282.746 136.689 cv
f
296.858 133.012 mo
296.858 133.012 li
296.858 133.012 li
296.624 130.149 li
296.624 130.149 li
296.858 133.012 li
.552941 .811765 .501961 rgb
f
282.746 136.689 mo
283.571 131.088 li
284.746 131.283 285.977 131.367 287.221 131.367 cv
287.221 131.367 li
287.221 131.367 li
290.532 131.367 293.935 130.778 296.624 130.149 cv
296.858 133.012 li
295.957 132.823 295.045 132.734 294.128 132.734 cv
294.127 132.734 294.126 132.734 294.125 132.734 cv
294.125 132.734 li
294.125 132.734 li
294.122 132.734 294.119 132.734 294.116 132.734 cv
290.215 132.737 286.245 134.338 282.827 136.634 cv
282.827 136.635 282.826 136.635 282.825 136.636 cv
282.798 136.653 282.772 136.671 282.746 136.689 cv
0 .72549 .764706 rgb
f
282.746 136.689 mo
282.746 136.689 li
282.772 136.671 282.798 136.653 282.825 136.636 cv
282.798 136.653 282.772 136.671 282.746 136.689 cv
282.827 136.634 mo
286.245 134.338 290.215 132.737 294.116 132.734 cv
290.216 132.737 286.244 134.338 282.827 136.634 cv
296.858 133.012 mo
296.858 133.012 li
296.858 133.012 li
294.128 132.734 mo
294.127 132.734 294.126 132.734 294.125 132.734 cv
294.125 132.734 li
294.126 132.734 294.127 132.734 294.128 132.734 cv
f
289.037 101.418 mo
289.037 101.418 287.182 110.521 284.455 118.077 cv
282.166 124.419 278.929 129.428 278.929 129.428 cv
286.435 134.198 301.828 128.664 301.828 128.664 cv
301.828 128.664 299.174 124.046 296.38 118.538 cv
292.551 110.989 289.037 101.418 289.037 101.418 cv
.94902 .505882 .368627 rgb
f
289.481 102.599 mo
287.124 110.977 286.253 119.838 291.574 126.045 cv
293.134 128.126 296.317 125.745 299.224 123.963 cv
298.372 122.384 297.386 120.521 296.38 118.538 cv
293.362 112.588 290.541 105.384 289.481 102.599 cv
f
296.624 130.149 mo
296.624 130.149 li
299.692 129.432 301.828 128.664 301.828 128.664 cv
301.828 128.664 300.826 126.92 299.405 124.298 cv
299.405 124.298 li
300.825 126.918 301.828 128.664 301.828 128.664 cv
301.828 128.664 299.692 129.432 296.624 130.149 cv
.619608 .811765 .494118 rgb
f
299.405 124.298 mo
299.405 124.298 li
299.345 124.188 299.285 124.076 299.224 123.963 cv
299.224 123.963 299.224 123.963 299.224 123.963 cv
299.285 124.076 299.346 124.188 299.405 124.298 cv
.94902 .815686 .635294 rgb
f
281.581 124.693 mo
281.678 124.502 281.775 124.306 281.874 124.106 cv
281.874 124.106 li
281.775 124.306 281.678 124.502 281.581 124.693 cv
284.805 117.083 mo
285.547 114.937 286.217 112.705 286.793 110.622 cv
286.793 110.622 li
286.217 112.705 285.547 114.937 284.806 117.083 cv
284.805 117.083 li
288.065 105.706 mo
288.065 105.706 li
288.569 103.623 288.895 102.097 289 101.596 cv
288.895 102.097 288.569 103.623 288.065 105.706 cv
.619608 .811765 .494118 rgb
f
286.793 110.622 mo
286.793 110.622 li
287.291 108.823 287.72 107.133 288.065 105.706 cv
288.065 105.706 li
287.72 107.133 287.291 108.823 286.793 110.622 cv
.145098 .717647 .564706 rgb
f
281.874 124.106 mo
281.874 124.106 li
282.73 122.367 283.651 120.305 284.454 118.077 cv
284.573 117.749 284.69 117.417 284.805 117.083 cv
284.806 117.083 li
284.69 117.417 284.573 117.749 284.455 118.077 cv
283.651 120.305 282.73 122.367 281.874 124.106 cv
.94902 .815686 .635294 rgb
f
289.481 102.599 mo
289.381 102.337 289.297 102.114 289.23 101.935 cv
289.297 102.114 289.381 102.337 289.481 102.599 cv
289.481 102.599 li
289.038 101.421 mo
289.038 101.421 289.038 101.42 289.038 101.42 cv
289.038 101.42 289.038 101.421 289.038 101.421 cv
289.037 101.419 mo
289.037 101.419 289.037 101.418 289.037 101.418 cv
289.037 101.418 289.037 101.419 289.037 101.419 cv
.619608 .811765 .494118 rgb
f
296.624 130.149 mo
296.624 130.149 li
296.624 130.149 li
296.624 130.149 li
296.624 130.149 li
.533333 .670588 .482353 rgb
f
287.221 131.367 mo
287.221 131.367 li
290.532 131.367 293.935 130.778 296.624 130.149 cv
296.624 130.149 li
293.935 130.778 290.532 131.367 287.221 131.367 cv
0 .6 .737255 rgb
f
287.221 131.367 mo
284.309 131.367 281.468 130.911 279.251 129.624 cv
279.142 129.561 279.035 129.495 278.929 129.428 cv
278.929 129.428 280.127 127.574 281.581 124.693 cv
281.678 124.502 281.775 124.306 281.874 124.106 cv
282.73 122.367 283.651 120.305 284.455 118.077 cv
284.573 117.749 284.69 117.417 284.806 117.083 cv
285.547 114.937 286.217 112.705 286.793 110.622 cv
287.291 108.823 287.72 107.133 288.065 105.706 cv
288.569 103.623 288.895 102.097 289 101.596 cv
289.024 101.479 289.037 101.418 289.037 101.418 cv
289.037 101.418 289.037 101.418 289.037 101.418 cv
289.037 101.418 289.037 101.419 289.037 101.419 cv
289.038 101.419 289.038 101.42 289.038 101.42 cv
289.038 101.42 289.038 101.421 289.038 101.421 cv
289.048 101.447 289.114 101.627 289.23 101.935 cv
289.297 102.114 289.381 102.337 289.481 102.599 cv
288.399 106.444 287.63 110.391 287.629 114.137 cv
287.629 118.552 288.695 122.687 291.574 126.045 cv
291.574 126.045 li
291.59 126.068 291.607 126.09 291.625 126.111 cv
292.048 126.638 292.584 126.854 293.197 126.855 cv
293.198 126.855 293.199 126.855 293.2 126.855 cv
293.2 126.855 li
293.2 126.855 li
293.213 126.855 293.226 126.855 293.24 126.855 cv
294.564 126.835 296.241 125.831 297.921 124.778 cv
297.93 124.772 297.939 124.766 297.948 124.76 cv
297.952 124.758 297.956 124.755 297.96 124.753 cv
297.978 124.742 297.996 124.73 298.014 124.719 cv
298.037 124.705 298.059 124.691 298.081 124.677 cv
298.081 124.677 298.081 124.677 298.081 124.677 cv
298.105 124.662 298.129 124.647 298.153 124.632 cv
298.169 124.622 298.185 124.612 298.201 124.601 cv
298.23 124.583 298.258 124.565 298.287 124.547 cv
298.3 124.539 298.313 124.531 298.325 124.523 cv
298.329 124.521 298.333 124.519 298.337 124.516 cv
298.354 124.505 298.372 124.494 298.39 124.483 cv
298.507 124.409 298.624 124.336 298.74 124.263 cv
298.754 124.255 298.767 124.246 298.781 124.238 cv
298.901 124.163 299.021 124.088 299.14 124.015 cv
299.168 123.997 299.196 123.98 299.224 123.963 cv
299.285 124.076 299.345 124.188 299.405 124.298 cv
300.826 126.92 301.828 128.664 301.828 128.664 cv
301.828 128.664 299.692 129.432 296.624 130.149 cv
296.624 130.149 li
293.935 130.778 290.532 131.367 287.221 131.367 cv
.913725 .419608 .352941 rgb
f
293.2 126.855 mo
293.199 126.855 293.198 126.855 293.197 126.855 cv
293.198 126.855 293.199 126.855 293.2 126.855 cv
293.2 126.855 li
293.24 126.855 mo
294.564 126.835 296.242 125.831 297.921 124.778 cv
296.241 125.831 294.564 126.835 293.24 126.855 cv
291.625 126.111 mo
291.607 126.09 291.59 126.068 291.574 126.045 cv
291.59 126.068 291.607 126.09 291.625 126.111 cv
297.948 124.76 mo
297.952 124.758 297.956 124.755 297.96 124.753 cv
297.956 124.755 297.952 124.758 297.948 124.76 cv
298.014 124.719 mo
298.037 124.705 298.059 124.691 298.081 124.677 cv
298.059 124.691 298.037 124.705 298.014 124.719 cv
298.081 124.677 mo
298.105 124.662 298.129 124.647 298.153 124.632 cv
298.129 124.647 298.105 124.662 298.081 124.677 cv
298.201 124.601 mo
298.23 124.583 298.258 124.565 298.287 124.547 cv
298.258 124.565 298.23 124.583 298.201 124.601 cv
298.325 124.523 mo
298.329 124.521 298.333 124.519 298.337 124.516 cv
298.333 124.519 298.329 124.521 298.325 124.523 cv
298.39 124.483 mo
298.507 124.409 298.624 124.336 298.74 124.263 cv
298.624 124.336 298.507 124.409 298.39 124.483 cv
298.781 124.238 mo
298.901 124.163 299.021 124.088 299.14 124.015 cv
299.021 124.088 298.901 124.163 298.781 124.238 cv
287.629 114.137 mo
287.63 110.391 288.399 106.444 289.481 102.599 cv
289.481 102.599 li
289.481 102.599 li
288.399 106.444 287.63 110.391 287.629 114.137 cv
f
291.011 134.956 mo
289.283 134.927 287.871 136.419 287.857 138.295 cv
287.84 140.524 290.585 142.212 292.618 141.395 cv
295.585 140.203 293.708 135.269 291.011 134.956 cv
cp
.0156863 .6 .635294 rgb
f
524.768 292.022 mo
524.768 294.856 527.599 297.155 531.092 297.155 cv
534.584 297.155 537.415 294.856 537.415 292.022 cv
537.415 289.187 531.092 250.657 531.092 250.657 cv
531.092 250.657 524.768 289.187 524.768 292.022 cv
.45098 .45098 .227451 rgb
f
141.234 294.36 mo
141.234 297.56 145.208 300.155 150.111 300.155 cv
155.014 300.155 158.988 297.56 158.988 294.36 cv
158.988 291.159 150.111 247.657 150.111 247.657 cv
150.111 247.657 141.234 291.159 141.234 294.36 cv
.72549 .666667 .266667 rgb
f
866.754 32.4517 mo
866.644 32.5959 li
866.619 32.6319 866.695 32.5411 866.77 32.4503 cv
866.878 32.3169 866.983 32.1838 866.754 32.4517 cv
.913725 .513726 .231373 rgb
f
866.644 32.5959 mo
866.754 32.4517 li
866.683 32.542 866.656 32.5785 866.644 32.5959 cv
f
831.269 8.35658 mo
831.368 8.52737 831.252 9.07801 831.248 9.26592 cv
831.2 11.316 831.153 13.366 831.105 15.4161 cv
830.729 31.6086 830.352 47.8011 829.976 63.9933 cv
829.543 82.6214 829.552 101.25 829.457 119.883 cv
829.296 151.601 829.135 183.318 828.974 215.036 cv
828.868 235.729 826.91 256.401 825.583 277.054 cv
825.177 283.386 824.77 289.719 824.363 296.052 cv
824.247 297.865 824.13 299.678 824.014 301.492 cv
823.873 303.69 822.687 304.517 821.172 306.329 cv
824.594 306.427 828.121 306.579 831.498 305.898 cv
834.599 305.272 837.514 304.803 840.647 305.372 cv
847.715 306.653 854.925 306.077 862.052 306.646 cv
859.546 304.123 856.951 301.685 854.311 299.302 cv
855.596 298.604 856.821 297.806 858.068 297.044 cv
857.227 296.745 852.618 295.521 852.546 294.679 cv
852.5 294.143 852.454 293.607 852.408 293.071 cv
852.208 290.743 852.009 288.415 851.809 286.087 cv
851.136 278.235 850.463 270.383 849.79 262.532 cv
848.661 249.367 847.533 236.203 846.404 223.039 cv
845.858 216.669 846.055 210.152 845.892 203.765 cv
845.485 187.851 845.079 171.937 844.673 156.023 cv
843.997 129.56 843.321 103.097 842.645 76.6334 cv
842.512 71.4336 842.649 66.218 842.661 61.0166 cv
842.665 59.3933 844.782 58.2852 845.914 57.2506 cv
847.421 55.8738 848.929 54.4967 850.436 53.1194 cv
851.868 51.8115 851.271 48.2855 852.97 47.6688 cv
860.703 44.8615 862.943 37.601 867.474 31.6077 cv
867.234 31.8891 866.994 32.1705 866.754 32.4517 cv
866.983 32.1838 866.878 32.3169 866.77 32.4503 cv
866.695 32.5411 866.619 32.6319 866.644 32.5959 cv
862.609 37.7824 859.531 43.7972 852.782 45.8767 cv
854.791 37.6087 856.8 29.3406 858.808 21.0726 cv
856.64 27.1714 854.47 33.2695 852.29 39.3643 cv
851.079 42.7495 849.864 46.1333 848.636 49.5125 cv
847.773 51.8865 844.601 53.4269 842.675 54.9687 cv
842.717 36.646 842.76 18.323 842.802 0 cv
831.463 0 li
831.433 1.2928 831.403 2.58561 831.373 3.87841 cv
829.375 2.87197 827.377 1.86553 825.379 .858865 cv
825.336 .581514 825.256 .292447 825.163 0 cv
821.359 0 li
821.702 1.13824 822.045 2.27626 822.388 3.41451 cv
825.348 5.06194 828.309 6.70915 831.269 8.35658 cv
f
829.133 183.615 mo
829.155 179.286 829.177 174.957 829.199 170.629 cv
829.177 174.957 829.155 179.286 829.133 183.615 cv
829.133 183.615 829.133 183.615 829.133 183.615 cv
845.211 177.097 mo
845.127 173.8 845.042 170.502 844.958 167.206 cv
844.958 167.206 li
845.043 170.503 845.127 173.8 845.211 177.097 cv
.866667 .529412 .180392 rgb
f
844.958 167.206 mo
844.958 167.206 li
844.868 163.662 844.777 160.117 844.687 156.573 cv
844.687 156.573 844.687 156.573 844.687 156.573 cv
844.687 156.573 li
844.687 156.573 li
844.777 160.117 844.868 163.662 844.958 167.206 cv
.909804 .631373 .188235 rgb
f
829.133 183.615 mo
829.155 179.286 829.177 174.957 829.199 170.629 cv
829.226 165.381 829.253 160.134 829.28 154.886 cv
829.28 154.886 li
829.28 154.886 li
834.392 155.708 839.532 156.274 844.687 156.573 cv
844.777 160.117 844.868 163.662 844.958 167.206 cv
845.042 170.502 845.127 173.8 845.211 177.097 cv
845.26 179.019 845.309 180.941 845.358 182.863 cv
839.95 183.072 834.545 183.305 829.133 183.615 cv
.831372 .419608 .215686 rgb
f
844.348 143.296 mo
839.308 142.68 834.319 141.735 829.352 140.601 cv
829.328 145.363 829.304 150.124 829.28 154.886 cv
834.392 155.708 839.532 156.274 844.687 156.573 cv
844.682 156.39 844.677 156.206 844.673 156.023 cv
844.564 151.781 844.456 147.539 844.348 143.296 cv
.913725 .513726 .231373 rgb
f
842.694 78.5641 mo
842.678 77.9212 842.662 77.2763 842.645 76.6334 cv
842.662 77.2769 842.678 77.9204 842.695 78.5641 cv
842.695 78.5641 li
842.645 76.6334 mo
842.618 75.5623 842.602 74.4907 842.594 73.4185 cv
842.594 73.4185 li
842.602 74.4905 842.618 75.5624 842.645 76.6334 cv
.584314 .803922 .47451 rgb
f
842.594 73.4185 mo
842.594 73.4185 li
842.582 71.777 842.588 70.134 842.601 68.4915 cv
842.601 68.4915 842.601 68.4915 842.602 68.4915 cv
842.602 68.4915 li
842.589 70.1343 842.582 71.7767 842.594 73.4185 cv
.137255 .709804 .545098 rgb
f
829.696 81.0618 mo
829.746 76.6618 829.815 72.262 829.901 67.8623 cv
829.901 67.8623 li
829.901 67.8623 li
829.901 67.8623 li
830.049 67.878 830.198 67.8934 830.346 67.9085 cv
830.365 67.9104 830.383 67.9123 830.402 67.9142 cv
830.446 67.9186 830.49 67.923 830.534 67.9274 cv
830.554 67.9294 830.573 67.9314 830.594 67.9334 cv
834.415 68.3137 838.257 68.492 842.101 68.4925 cv
842.107 68.4925 842.112 68.4925 842.117 68.4925 cv
842.117 68.4925 li
842.117 68.4925 li
842.118 68.4925 842.118 68.4925 842.118 68.4925 cv
842.198 68.4925 842.278 68.4924 842.358 68.4923 cv
842.439 68.4921 842.52 68.4919 842.601 68.4915 cv
842.588 70.134 842.582 71.777 842.594 73.4185 cv
842.602 74.4907 842.618 75.5623 842.645 76.6334 cv
842.645 76.6334 li
842.645 76.6334 li
842.662 77.2763 842.678 77.9212 842.694 78.5641 cv
838.361 79.4797 834.029 80.3127 829.696 81.0618 cv
.831372 .419608 .215686 rgb
f
848.636 49.5125 mo
847.773 51.8865 844.601 53.4269 842.675 54.9687 cv
842.692 47.6118 842.709 40.2551 842.726 32.898 cv
838.731 33.5658 834.703 34.141 830.658 34.652 cv
830.431 44.4323 830.203 54.2128 829.976 63.9933 cv
829.946 65.283 829.926 66.5728 829.901 67.8623 cv
834.117 68.3091 838.358 68.508 842.602 68.4915 cv
842.621 65.9988 842.655 63.506 842.661 61.0166 cv
842.665 59.393 844.782 58.2852 845.914 57.2506 cv
847.421 55.8738 848.929 54.4967 850.436 53.1196 cv
851.484 52.1623 851.448 50.021 852.018 48.6976 cv
851.152 48.2082 850.306 47.692 849.492 47.1328 cv
849.206 47.9254 848.924 48.7201 848.636 49.5125 cv
.913725 .513726 .231373 rgb
f
831.105 15.4161 mo
831.153 13.366 831.2 11.316 831.248 9.26592 cv
831.252 9.07801 831.368 8.52737 831.269 8.35658 cv
828.309 6.70915 825.348 5.06194 822.388 3.41451 cv
822.045 2.27626 821.702 1.13824 821.359 0 cv
821.359 0 li
821.702 1.13824 822.045 2.27626 822.388 3.41451 cv
825.348 5.06194 828.309 6.70915 831.269 8.35658 cv
831.368 8.52737 831.252 9.07801 831.248 9.26592 cv
831.2 11.316 831.153 13.366 831.105 15.4161 cv
.137255 .709804 .545098 rgb
f
830.658 34.652 mo
830.807 28.24 830.956 21.8278 831.105 15.4161 cv
831.105 15.4161 li
831.153 13.366 831.2 11.316 831.248 9.26592 cv
831.252 9.07801 831.368 8.52737 831.269 8.35658 cv
828.309 6.70915 825.348 5.06194 822.388 3.41451 cv
822.045 2.27626 821.702 1.13824 821.359 0 cv
825.163 0 li
825.256 .292447 825.336 .581514 825.379 .858865 cv
827.377 1.86553 829.375 2.87197 831.373 3.87841 cv
831.403 2.58561 831.433 1.2928 831.463 0 cv
842.802 0 li
842.802 0 li
842.787 6.43681 842.773 12.8742 842.758 19.3109 cv
841.383 19.0449 840.011 18.7597 838.631 18.4967 cv
838.631 18.4967 li
838.631 18.4967 li
838.569 18.4843 838.507 18.4727 838.446 18.4619 cv
838.019 18.3859 837.623 18.3481 837.26 18.3481 cv
835.007 18.3481 834.017 19.8055 834.43 22.6473 cv
834.43 22.6482 834.43 22.6491 834.431 22.6499 cv
834.432 22.6617 834.434 22.6735 834.436 22.6853 cv
834.436 22.6875 834.436 22.6897 834.437 22.6919 cv
834.439 22.705 834.441 22.7181 834.443 22.7313 cv
834.443 22.7313 li
834.445 22.7439 834.447 22.7565 834.449 22.7691 cv
834.952 25.9801 836.652 28.9085 838.895 31.4208 cv
839.458 32.0516 840.056 32.6558 840.677 33.2321 cv
837.355 33.7603 834.012 34.2283 830.658 34.652 cv
.831372 .419608 .215686 rgb
f
856.6 30.163 mo
857.336 27.1329 858.072 24.1027 858.808 21.0726 cv
857.701 24.1877 856.588 27.301 855.479 30.4156 cv
855.853 30.332 856.227 30.2484 856.6 30.163 cv
.913725 .513726 .231373 rgb
f
852.018 48.6976 mo
852.018 48.6976 li
852.018 48.6976 li
852.017 48.6969 852.016 48.6962 852.014 48.6955 cv
852.223 48.2098 852.514 47.8344 852.97 47.6688 cv
856.305 46.4581 858.619 44.419 860.535 42.0106 cv
860.535 42.0106 li
858.619 44.419 856.305 46.4582 852.97 47.6688 cv
852.515 47.8342 852.227 48.2125 852.018 48.6976 cv
849.497 47.136 mo
849.496 47.1349 849.494 47.1339 849.492 47.1328 cv
850.34 44.7879 851.187 42.4429 852.028 40.0957 cv
852.028 40.0958 li
851.188 42.4436 850.345 44.7908 849.497 47.136 cv
852.782 45.8767 mo
852.782 45.8767 li
852.782 45.8767 li
852.845 45.8574 852.907 45.8379 852.969 45.818 cv
852.906 45.838 852.845 45.8574 852.782 45.8767 cv
852.979 45.8147 mo
853 45.8079 853.022 45.8008 853.043 45.7939 cv
853.022 45.8008 853 45.8078 852.979 45.8147 cv
853.057 45.7893 mo
855.588 44.957 857.596 43.5642 859.338 41.873 cv
859.338 41.873 li
857.597 43.5641 855.588 44.957 853.057 45.7893 cv
853.823 41.5932 mo
853.891 41.3116 853.959 41.0314 854.028 40.7498 cv
854.028 40.7498 li
853.959 41.0308 853.891 41.3122 853.823 41.5932 cv
.129412 .627451 .521569 rgb
f
852.014 48.6955 mo
851.152 48.2077 850.308 47.6932 849.497 47.136 cv
850.345 44.7908 851.188 42.4436 852.028 40.0958 cv
852.688 40.334 853.355 40.5521 854.028 40.7498 cv
853.959 41.0314 853.891 41.3116 853.823 41.5932 cv
853.476 43.021 853.129 44.4489 852.782 45.8767 cv
852.782 45.8767 li
852.845 45.8574 852.906 45.838 852.969 45.818 cv
852.972 45.8169 852.976 45.8157 852.979 45.8147 cv
853 45.8078 853.022 45.8008 853.043 45.7939 cv
853.048 45.7923 853.052 45.7909 853.057 45.7893 cv
855.588 44.957 857.597 43.5641 859.338 41.873 cv
859.736 41.9256 860.135 41.9715 860.535 42.0106 cv
858.619 44.419 856.305 46.4581 852.97 47.6688 cv
852.514 47.8344 852.223 48.2098 852.014 48.6955 cv
.792157 .372549 .203922 rgb
f
852.018 48.6976 mo
851.152 48.2082 850.306 47.692 849.492 47.1328 cv
849.492 47.1328 li
849.494 47.1339 849.496 47.1349 849.497 47.136 cv
850.308 47.6932 851.152 48.2077 852.014 48.6955 cv
852.016 48.6962 852.017 48.6969 852.018 48.6976 cv
852.018 48.6976 li
f
829.696 81.0618 mo
829.59 90.2894 829.543 99.5175 829.506 108.747 cv
834.134 108.807 838.797 108.886 843.468 108.846 cv
843.21 98.7521 842.952 88.658 842.695 78.5641 cv
838.361 79.4797 834.029 80.3127 829.696 81.0618 cv
.913725 .513726 .231373 rgb
f
843.574 113.019 mo
843.554 112.22 843.534 111.422 843.513 110.622 cv
843.513 110.622 li
843.534 111.421 843.554 112.22 843.575 113.019 cv
843.574 113.019 843.574 113.019 843.574 113.019 cv
.584314 .803922 .47451 rgb
f
843.513 110.622 mo
843.513 110.622 li
843.498 110.031 843.483 109.437 843.468 108.846 cv
843.468 108.846 843.468 108.846 843.468 108.846 cv
843.468 108.846 li
843.483 109.438 843.498 110.03 843.513 110.622 cv
.137255 .709804 .545098 rgb
f
844.348 143.296 mo
844.348 143.296 li
844.09 133.203 843.832 123.112 843.574 113.019 cv
843.574 113.019 843.574 113.019 843.575 113.019 cv
843.832 123.112 844.09 133.204 844.348 143.296 cv
.0431373 .501961 .486274 rgb
f
844.348 143.296 mo
839.308 142.68 834.319 141.735 829.352 140.601 cv
829.387 133.695 829.422 126.789 829.458 119.883 cv
829.476 116.171 829.491 112.459 829.506 108.747 cv
829.506 108.747 li
829.916 108.752 830.326 108.758 830.737 108.763 cv
830.747 108.763 830.758 108.763 830.769 108.763 cv
831.523 108.774 832.278 108.784 833.034 108.794 cv
835.623 108.828 838.22 108.857 840.821 108.857 cv
840.826 108.857 840.83 108.857 840.834 108.857 cv
840.834 108.857 li
840.834 108.857 li
840.835 108.857 840.836 108.857 840.837 108.857 cv
841.714 108.857 842.591 108.853 843.468 108.846 cv
843.483 109.437 843.498 110.031 843.513 110.622 cv
843.534 111.422 843.554 112.22 843.574 113.019 cv
843.832 123.112 844.09 133.203 844.348 143.296 cv
.831372 .419608 .215686 rgb
f
840.834 108.857 mo
840.83 108.857 840.826 108.857 840.821 108.857 cv
840.826 108.857 840.83 108.857 840.834 108.857 cv
840.834 108.857 li
840.837 108.857 mo
841.714 108.857 842.591 108.853 843.468 108.846 cv
843.468 108.846 li
842.591 108.853 841.714 108.857 840.837 108.857 cv
833.034 108.794 mo
832.278 108.784 831.523 108.774 830.769 108.763 cv
831.523 108.774 832.278 108.784 833.034 108.794 cv
830.737 108.763 mo
830.326 108.758 829.916 108.752 829.506 108.747 cv
829.916 108.752 830.326 108.758 830.737 108.763 cv
f
845.358 182.863 mo
839.95 183.072 834.545 183.305 829.133 183.615 cv
829.09 192.177 829.046 200.74 829.003 209.302 cv
834.691 209.079 840.307 208.628 845.958 207.996 cv
845.945 206.582 845.928 205.17 845.892 203.765 cv
845.714 196.797 845.536 189.83 845.358 182.863 cv
cp
.913725 .513726 .231373 rgb
f
845.958 207.996 mo
840.307 208.628 834.691 209.08 829.003 209.302 cv
828.993 211.214 828.983 213.125 828.974 215.036 cv
828.945 220.697 828.774 226.357 828.519 232.016 cv
834.821 234.568 841.245 236.933 847.768 238.955 cv
847.314 233.649 846.859 228.344 846.404 223.039 cv
845.978 218.07 846.003 213.013 845.958 207.996 cv
f
862.052 306.646 mo
862.023 306.644 861.994 306.641 861.965 306.639 cv
861.994 306.641 862.023 306.644 862.052 306.646 cv
862.052 306.646 li
861.943 306.637 mo
861.921 306.636 861.9 306.634 861.878 306.632 cv
861.9 306.634 861.921 306.636 861.943 306.637 cv
861.853 306.63 mo
861.831 306.629 861.81 306.627 861.789 306.625 cv
861.81 306.627 861.831 306.629 861.853 306.63 cv
861.769 306.624 mo
861.745 306.622 861.722 306.62 861.698 306.619 cv
861.722 306.62 861.745 306.622 861.769 306.624 cv
861.685 306.618 mo
861.659 306.616 861.633 306.614 861.608 306.612 cv
861.634 306.614 861.659 306.616 861.685 306.618 cv
861.6 306.611 mo
859.84 306.482 858.075 306.42 856.309 306.378 cv
856.308 306.378 856.308 306.378 856.307 306.377 cv
858.074 306.419 859.839 306.482 861.6 306.611 cv
858.068 297.044 mo
857.679 296.906 856.481 296.569 855.3 296.163 cv
856.481 296.569 857.679 296.906 858.068 297.044 cv
852.507 294.222 mo
852.474 293.838 852.441 293.455 852.408 293.071 cv
852.441 293.455 852.474 293.838 852.507 294.222 cv
852.408 293.071 mo
852.238 291.094 852.069 289.117 851.9 287.14 cv
852.069 289.117 852.239 291.094 852.408 293.071 cv
824.591 292.503 mo
824.922 287.353 825.253 282.203 825.583 277.054 cv
825.253 282.203 824.922 287.353 824.591 292.503 cv
.909804 .458824 .188235 rgb
f
828.104 240.084 mo
828.103 240.083 828.102 240.082 828.101 240.08 cv
828.18 238.722 828.254 237.366 828.325 236.008 cv
828.326 236.009 828.327 236.01 828.328 236.011 cv
828.257 237.369 828.182 238.727 828.104 240.084 cv
.556863 .113725 .266667 rgb
f
825.583 277.054 mo
825.672 275.672 825.764 274.291 825.857 272.909 cv
825.857 272.909 li
825.764 274.291 825.672 275.672 825.583 277.054 cv
.909804 .458824 .188235 rgb
f
825.857 272.909 mo
825.857 272.909 li
826.598 261.972 827.468 251.028 828.101 240.08 cv
828.102 240.082 828.103 240.083 828.104 240.084 cv
827.47 251.031 826.598 261.974 825.857 272.909 cv
828.328 236.011 mo
828.327 236.01 828.326 236.009 828.325 236.008 cv
828.394 234.677 828.459 233.346 828.519 232.016 cv
828.52 232.016 828.521 232.017 828.522 232.017 cv
828.462 233.349 828.397 234.679 828.328 236.011 cv
.376471 .411765 .160784 rgb
f
862.052 306.646 mo
862.023 306.644 861.994 306.641 861.965 306.639 cv
861.958 306.638 861.95 306.638 861.943 306.637 cv
861.921 306.636 861.9 306.634 861.878 306.632 cv
861.87 306.632 861.861 306.631 861.853 306.63 cv
861.831 306.629 861.81 306.627 861.789 306.625 cv
861.782 306.625 861.776 306.624 861.769 306.624 cv
861.745 306.622 861.722 306.62 861.698 306.619 cv
861.694 306.618 861.69 306.618 861.685 306.618 cv
861.659 306.616 861.634 306.614 861.608 306.612 cv
861.605 306.612 861.602 306.611 861.6 306.611 cv
859.839 306.482 858.074 306.419 856.307 306.377 cv
851 304.421 845.969 301.743 841.409 298.264 cv
836.629 288.669 836.295 277.75 832.811 267.881 cv
832.17 278.151 829.602 288.421 827.034 298.692 cv
826.122 297.779 825.211 296.784 824.385 295.71 cv
824.454 294.64 824.523 293.572 824.591 292.503 cv
824.922 287.353 825.253 282.203 825.583 277.054 cv
825.583 277.054 li
825.583 277.054 li
825.672 275.672 825.764 274.291 825.857 272.909 cv
826.598 261.974 827.47 251.031 828.104 240.084 cv
828.182 238.727 828.257 237.369 828.328 236.011 cv
828.397 234.679 828.462 233.349 828.522 232.017 cv
834.823 234.569 841.246 236.934 847.768 238.955 cv
848.442 246.813 849.116 254.673 849.79 262.532 cv
850.463 270.384 851.136 278.235 851.809 286.087 cv
851.839 286.438 851.869 286.789 851.9 287.14 cv
852.069 289.117 852.238 291.094 852.408 293.071 cv
852.408 293.071 li
852.408 293.071 li
852.441 293.455 852.474 293.838 852.507 294.222 cv
852.52 294.374 852.533 294.527 852.546 294.679 cv
852.585 295.131 853.931 295.693 855.3 296.163 cv
856.481 296.569 857.679 296.906 858.068 297.044 cv
858.068 297.044 li
858.068 297.044 li
856.841 297.794 855.634 298.579 854.371 299.269 cv
854.351 299.28 854.331 299.291 854.311 299.302 cv
854.311 299.302 li
854.311 299.302 li
856.951 301.685 859.546 304.123 862.052 306.646 cv
.831372 .419608 .215686 rgb
f
825.304 306.416 mo
823.921 306.416 822.538 306.368 821.172 306.329 cv
821.172 306.329 li
822.538 306.368 823.921 306.416 825.304 306.416 cv
827.386 306.416 829.469 306.307 831.498 305.898 cv
833.618 305.47 835.651 305.116 837.726 305.116 cv
838.686 305.116 839.656 305.192 840.647 305.372 cv
840.673 305.376 840.698 305.381 840.723 305.385 cv
840.698 305.381 840.673 305.376 840.647 305.372 cv
839.656 305.192 838.686 305.116 837.726 305.116 cv
835.651 305.116 833.618 305.47 831.498 305.898 cv
829.469 306.307 827.386 306.416 825.304 306.416 cv
856.309 306.378 mo
851.184 306.256 846.046 306.308 840.981 305.431 cv
846.046 306.307 851.182 306.255 856.307 306.377 cv
856.308 306.378 856.308 306.378 856.309 306.378 cv
821.486 305.96 mo
822.849 304.394 823.883 303.536 824.014 301.492 cv
824.13 299.678 824.247 297.865 824.363 296.052 cv
824.247 297.865 824.13 299.678 824.014 301.492 cv
823.883 303.536 822.849 304.394 821.486 305.96 cv
840.977 305.43 mo
840.924 305.421 840.87 305.411 840.817 305.402 cv
840.87 305.411 840.923 305.421 840.977 305.43 cv
840.806 305.4 mo
840.784 305.396 840.762 305.392 840.74 305.388 cv
840.762 305.392 840.784 305.396 840.806 305.4 cv
824.363 296.052 mo
824.368 295.982 824.372 295.913 824.377 295.843 cv
824.372 295.913 824.368 295.982 824.363 296.052 cv
.866667 .403922 .180392 rgb
f
825.304 306.416 mo
823.921 306.416 822.538 306.368 821.172 306.329 cv
821.278 306.201 821.383 306.079 821.486 305.96 cv
822.849 304.394 823.883 303.536 824.014 301.492 cv
824.13 299.678 824.247 297.865 824.363 296.052 cv
824.363 296.052 li
824.363 296.052 li
824.368 295.982 824.372 295.913 824.377 295.843 cv
824.38 295.799 824.383 295.754 824.385 295.71 cv
825.211 296.784 826.122 297.779 827.034 298.692 cv
829.602 288.421 832.17 278.151 832.811 267.881 cv
836.295 277.75 836.629 288.669 841.409 298.264 cv
845.969 301.743 851 304.421 856.307 306.377 cv
851.182 306.255 846.046 306.307 840.981 305.431 cv
840.979 305.43 840.978 305.43 840.977 305.43 cv
840.923 305.421 840.87 305.411 840.817 305.402 cv
840.813 305.401 840.809 305.401 840.806 305.4 cv
840.784 305.396 840.762 305.392 840.74 305.388 cv
840.734 305.387 840.729 305.386 840.723 305.385 cv
840.698 305.381 840.673 305.376 840.647 305.372 cv
839.656 305.192 838.686 305.116 837.726 305.116 cv
835.651 305.116 833.618 305.47 831.498 305.898 cv
829.469 306.307 827.386 306.416 825.304 306.416 cv
.792157 .372549 .203922 rgb
f
866.754 32.4517 mo
866.678 32.5492 866.644 32.5941 866.635 32.6078 cv
866.754 32.4517 li
.913725 .513726 .231373 rgb
f
866.635 32.6078 mo
866.618 32.6333 866.693 32.5443 866.766 32.455 cv
866.876 32.3194 866.982 32.1838 866.754 32.4517 cv
866.635 32.6078 li
f
898.427 20.0914 mo
895.705 18.0704 892.685 16.3876 889.419 15.4332 cv
883.116 13.5907 876.555 14.91 870.563 17.2154 cv
869.355 17.6914 867.728 18.3302 870.225 17.3438 cv
863.359 20.0567 855.814 20.8966 848.488 20.1937 cv
845.153 19.8738 841.914 19.1226 838.631 18.4967 cv
835.393 17.8532 833.916 19.306 834.443 22.7313 cv
835.435 29.1829 841.261 34.4974 846.632 37.5938 cv
852.844 41.1755 860.163 42.699 867.292 42.0215 cv
874.837 41.3242 882.459 40.4442 889.78 38.4234 cv
892.249 37.7423 896.651 36.4639 900 34.397 cv
900 21.3218 li
899.453 20.8732 898.915 20.46 898.427 20.0914 cv
.682353 .623529 .113725 rgb
f
870.564 17.2153 mo
870.451 17.2587 870.337 17.2998 870.225 17.3438 cv
867.728 18.3303 869.355 17.6914 870.564 17.2153 cv
cp
f
870.225 17.3438 mo
870.337 17.2998 870.451 17.2587 870.564 17.2153 cv
871.548 16.8274 872.255 16.5475 870.225 17.3438 cv
cp
f
870.563 17.2153 mo
871.548 16.8275 872.255 16.5474 870.225 17.3438 cv
870.337 17.2998 870.451 17.2587 870.563 17.2153 cv
cp
f
870.563 17.2153 mo
870.451 17.2587 870.337 17.2998 870.225 17.3438 cv
867.729 18.3301 869.355 17.6915 870.563 17.2153 cv
cp
f
877.896 15.0797 mo
875.397 15.5479 872.936 16.3024 870.563 17.2154 cv
869.355 17.6914 867.729 18.3302 870.225 17.3438 cv
863.359 20.0567 855.814 20.8966 848.488 20.1937 cv
845.153 19.874 841.914 19.1224 838.631 18.4967 cv
836.231 18.0197 834.801 18.6972 834.435 20.4728 cv
834.85 22.4591 836.183 24.3911 837.305 25.8867 cv
839.23 28.4543 842.44 29.7381 845.008 30.38 cv
857.204 33.5895 871.325 36.157 880.312 25.2448 cv
883.609 20.848 881.729 16.9236 877.896 15.0797 cv
f
855.602 41.1729 mo
855.074 41.0441 854.549 40.9032 854.028 40.7498 cv
854.028 40.7495 854.028 40.7501 854.028 40.7498 cv
854.549 40.9032 855.074 41.0441 855.602 41.1729 cv
852.028 40.0957 mo
850.163 39.4221 848.355 38.587 846.632 37.5938 cv
845.33 36.8434 844.001 35.9623 842.721 34.9666 cv
842.721 34.9665 li
844.001 35.9622 845.33 36.8433 846.632 37.5938 cv
848.355 38.587 850.163 39.4221 852.028 40.0957 cv
852.028 40.0957 li
.129412 .72549 .572549 rgb
f
842.721 34.9666 mo
842.721 34.9663 842.722 34.9668 842.721 34.9666 cv
842.721 34.9665 li
842.722 34.9667 842.721 34.9663 842.721 34.9665 cv
842.721 34.9666 li
.792157 .431373 .223529 rgb
f
842.721 34.9666 mo
842.021 34.4222 841.335 33.8427 840.677 33.2321 cv
840.677 33.2321 840.677 33.2321 840.677 33.2321 cv
841.335 33.8427 842.021 34.4221 842.721 34.9665 cv
842.721 34.9666 li
f
840.677 33.2321 mo
840.056 32.6558 839.458 32.0516 838.895 31.4208 cv
839.458 32.0516 840.056 32.6559 840.677 33.2321 cv
840.677 33.2321 840.677 33.2321 840.677 33.2321 cv
.717647 .352941 .207843 rgb
f
834.437 22.6919 mo
834.436 22.6897 834.436 22.6875 834.436 22.6853 cv
834.436 22.6874 834.436 22.6898 834.437 22.6919 cv
834.431 22.6499 mo
834.43 22.6491 834.43 22.6482 834.43 22.6473 cv
834.43 22.6483 834.43 22.6489 834.431 22.6499 cv
f
854.028 40.7498 mo
854.028 40.7498 li
854.028 40.7498 li
854.028 40.7498 li
854.028 40.7501 854.028 40.7495 854.028 40.7498 cv
852.028 40.0958 mo
852.028 40.0957 li
852.028 40.0957 li
852.028 40.0958 852.028 40.0956 852.028 40.0957 cv
852.028 40.0958 li
.113725 .52549 .505882 rgb
f
854.028 40.7498 mo
853.355 40.5521 852.688 40.334 852.028 40.0958 cv
852.028 40.0957 li
852.687 40.3338 853.355 40.5521 854.028 40.7498 cv
854.028 40.7498 li
.686274 .313725 .2 rgb
f
863.975 42.1784 mo
861.156 42.1783 858.339 41.8402 855.602 41.1729 cv
855.074 41.0441 854.549 40.9032 854.028 40.7498 cv
854.028 40.7498 li
853.355 40.5521 852.687 40.3338 852.028 40.0957 cv
852.028 40.0956 852.028 40.0958 852.028 40.0957 cv
850.163 39.4221 848.355 38.587 846.632 37.5938 cv
845.33 36.8433 844.001 35.9622 842.721 34.9665 cv
842.721 34.9663 842.722 34.9667 842.721 34.9665 cv
842.021 34.4221 841.335 33.8427 840.677 33.2321 cv
840.677 33.2321 li
840.056 32.6559 839.458 32.0516 838.895 31.4208 cv
836.652 28.9084 834.952 25.98 834.449 22.7691 cv
834.447 22.7565 834.445 22.7439 834.443 22.7313 cv
834.443 22.7313 li
834.441 22.7181 834.439 22.705 834.437 22.6919 cv
834.436 22.6898 834.436 22.6874 834.436 22.6853 cv
834.434 22.6735 834.432 22.6617 834.431 22.6499 cv
834.43 22.6489 834.43 22.6483 834.43 22.6473 cv
834.307 21.7972 834.311 21.0734 834.435 20.4728 cv
834.85 22.4591 836.183 24.3911 837.305 25.8867 cv
839.23 28.4543 842.44 29.7381 845.008 30.38 cv
845.042 30.389 845.076 30.3981 845.111 30.4071 cv
845.128 30.4116 845.145 30.416 845.162 30.4205 cv
845.23 30.4383 845.298 30.4562 845.366 30.474 cv
845.391 30.4804 845.415 30.4867 845.439 30.4932 cv
850.832 31.8997 856.581 33.1522 862.085 33.1531 cv
862.087 33.1531 862.09 33.1531 862.092 33.1531 cv
862.092 33.1531 li
862.092 33.1531 li
862.094 33.1531 862.096 33.1531 862.099 33.1531 cv
868.937 33.1521 875.393 31.2178 880.312 25.2448 cv
880.312 25.2448 li
881.497 23.6647 882.013 22.1456 882.01 20.7622 cv
882.005 18.296 880.351 16.261 877.896 15.0797 cv
879.641 14.7531 881.403 14.5664 883.167 14.5664 cv
885.259 14.5664 887.353 14.8293 889.419 15.4332 cv
892.685 16.3876 895.705 18.0704 898.427 20.0914 cv
898.915 20.46 899.453 20.8732 900 21.3218 cv
900 34.397 li
896.651 36.4639 892.249 37.7423 889.78 38.4234 cv
882.459 40.4442 874.837 41.3242 867.292 42.0215 cv
867.292 42.0215 li
866.189 42.1263 865.083 42.1784 863.975 42.1784 cv
.592157 .521569 .109804 rgb
f
862.092 33.1531 mo
862.09 33.1531 862.087 33.1531 862.085 33.1531 cv
862.087 33.1531 862.09 33.1531 862.092 33.1531 cv
862.092 33.1531 li
862.099 33.1531 mo
868.936 33.1516 875.393 31.2171 880.312 25.2448 cv
875.393 31.2178 868.937 33.1521 862.099 33.1531 cv
845.439 30.4932 mo
845.415 30.4867 845.391 30.4804 845.366 30.474 cv
845.391 30.4804 845.415 30.4867 845.439 30.4932 cv
845.162 30.4205 mo
845.145 30.416 845.128 30.4116 845.111 30.4071 cv
845.128 30.4116 845.145 30.416 845.162 30.4205 cv
882.01 20.7622 mo
882.005 18.296 880.351 16.261 877.896 15.0797 cv
877.896 15.0797 li
880.351 16.261 882.005 18.296 882.01 20.7622 cv
f
866.181 28.4834 mo
865.446 28.4834 864.788 28.4043 864.272 28.2443 cv
860.989 27.2257 860.134 24.5696 862.746 22.2566 cv
864.026 21.1238 867.545 19.9187 870.499 19.9187 cv
872.79 19.9187 874.74 20.6439 875.041 22.6903 cv
875.596 26.4694 869.895 28.4835 866.181 28.4834 cv
.8 .764706 .152941 rgb
f
571.266 305.512 mo
571.266 307.523 574.097 309.154 577.59 309.154 cv
581.082 309.154 583.913 307.523 583.913 305.512 cv
583.913 303.499 577.59 276.156 577.59 276.156 cv
577.59 276.156 571.266 303.499 571.266 305.512 cv
.45098 .45098 .227451 rgb
f
684.739 101.552 mo
678.764 97.4744 672.88 93.263 666.994 89.0577 cv
664.922 87.577 662.902 85.943 660.737 84.6007 cv
659.53 83.8522 659.469 81.4561 659.218 80.2507 cv
658.56 77.089 657.909 73.9257 657.23 70.7683 cv
656.883 69.1494 656.535 67.5308 656.187 65.9118 cv
654.989 64.5075 653.791 63.1029 652.593 61.6986 cv
649.131 57.6395 645.64 53.6072 642.111 49.6067 cv
644.3 52.7015 646.509 55.7805 648.727 58.8548 cv
650.144 60.796 651.56 62.7377 652.977 64.6794 cv
654.634 66.9514 654.454 68.5355 654.571 71.2982 cv
654.616 72.3688 654.324 72.3483 653.615 72.3278 cv
653.427 72.3224 653.208 72.3168 652.959 72.3321 cv
651.658 72.4112 650.355 72.4418 649.052 72.3866 cv
646.05 72.2593 643.022 71.7312 640.237 70.5756 cv
635.603 68.6533 632.336 65.2753 629.529 61.2299 cv
632.942 68.3933 638.361 73.6393 646.226 75.6599 cv
648.433 76.2346 650.668 76.6048 652.939 76.7947 cv
653.246 76.8202 653.512 76.8119 653.74 76.8035 cv
654.479 76.7763 654.825 76.7492 654.88 77.8803 cv
654.929 78.8761 654.977 79.8722 655.026 80.8683 cv
655.078 81.9362 654.768 86.1753 655.563 86.9139 cv
661.303 92.2437 666.912 97.7114 672.694 102.998 cv
675.829 105.865 678.985 108.715 682.248 111.437 cv
683.227 112.254 684.64 112.691 684.628 114.021 cv
684.482 130.444 684.335 146.867 684.189 163.29 cv
684.095 173.835 684.663 184.649 683.722 195.139 cv
682.294 211.062 680.866 226.985 679.438 242.908 cv
678.229 256.389 677.019 269.87 675.81 283.351 cv
675.418 287.726 675.025 292.102 674.633 296.477 cv
674.538 297.537 674.443 298.598 674.348 299.658 cv
674.165 301.699 670.633 303.153 669.135 304.28 cv
675.361 305.16 681.679 306.131 687.984 306.036 cv
694.103 305.944 699.917 305.882 705.874 307.381 cv
719.314 310.763 733.195 311.641 746.809 314.062 cv
741.982 309.958 737.03 305.992 732.02 302.112 cv
734.466 301.446 736.86 300.609 739.272 299.836 cv
738.029 299.368 728.828 296.604 728.713 295.546 cv
728.674 295.181 728.634 294.816 728.594 294.451 cv
728.367 292.365 728.14 290.279 727.914 288.193 cv
727.035 280.115 726.156 272.038 725.278 263.961 cv
723.167 244.554 721.056 225.147 718.945 205.741 cv
715.993 178.599 716.376 151.119 715.612 123.843 cv
715.454 118.192 715.296 112.541 715.138 106.89 cv
715.105 105.722 715.072 104.554 715.04 103.385 cv
715.012 102.404 716.897 100.792 717.484 100.04 cv
718.573 98.644 719.652 97.241 720.729 95.8358 cv
721.243 95.1657 721.756 94.4954 722.269 93.8254 cv
721.946 92.8464 721.63 91.865 721.312 90.8842 cv
719.154 92.2415 716.975 93.5667 714.802 94.8987 cv
713.916 63.2658 713.03 31.6329 712.144 0 cv
685.644 0 li
685.58 6.7452 685.525 13.4911 685.465 20.2394 cv
685.223 47.3437 684.981 74.448 684.739 101.552 cv
.854902 .333333 .262745 rgb
f
746.809 314.062 mo
744.277 313.612 741.734 313.224 739.188 312.854 cv
739.184 312.851 739.18 312.847 739.177 312.844 cv
741.727 313.214 744.273 313.611 746.809 314.062 cv
746.809 314.062 li
.803922 .305882 .172549 rgb
f
736.749 300.659 mo
736.749 300.659 li
737.59 300.384 738.43 300.106 739.272 299.836 cv
739.272 299.836 li
738.43 300.106 737.59 300.384 736.749 300.659 cv
.866667 .403922 .180392 rgb
f
732.02 302.112 mo
732.02 302.112 li
733.612 301.679 735.182 301.173 736.749 300.659 cv
736.749 300.659 li
735.182 301.173 733.612 301.679 732.02 302.112 cv
.803922 .305882 .172549 rgb
f
718.928 205.586 mo
718.928 205.585 718.928 205.581 718.927 205.58 cv
718.928 205.582 718.928 205.584 718.928 205.586 cv
718.882 205.158 mo
718.876 205.104 718.87 205.049 718.865 204.994 cv
718.87 205.049 718.876 205.104 718.882 205.158 cv
718.861 204.963 mo
718.598 202.487 718.362 200.008 718.15 197.527 cv
718.152 197.528 li
718.363 200.009 718.598 202.487 718.861 204.963 cv
.580392 .12549 .278431 rgb
f
718.152 197.528 mo
718.15 197.527 li
718.149 197.525 li
718.152 197.526 718.15 197.525 718.152 197.526 cv
718.152 197.526 718.152 197.527 718.152 197.528 cv
717.837 193.595 mo
717.835 193.594 717.835 193.594 717.833 193.594 cv
717.724 192.151 717.622 190.708 717.528 189.264 cv
717.529 189.253 717.53 189.243 717.531 189.232 cv
717.531 189.232 li
717.531 189.232 li
717.626 190.687 717.728 192.142 717.837 193.595 cv
.784314 .376471 .168627 rgb
f
718.152 197.526 mo
718.15 197.525 718.152 197.526 718.149 197.525 cv
718.037 196.215 717.932 194.905 717.833 193.594 cv
717.835 193.594 717.835 193.594 717.837 193.595 cv
717.936 194.906 718.041 196.216 718.152 197.526 cv
.764706 .345098 .164706 rgb
f
746.809 314.062 mo
744.273 313.611 741.727 313.214 739.177 312.844 cv
732.997 306.835 727.503 300.199 722.973 293.034 cv
719.012 268.338 716.205 243.311 716.202 218.188 cv
716.201 208.557 716.612 198.91 717.528 189.264 cv
717.622 190.708 717.724 192.151 717.833 193.594 cv
717.932 194.905 718.037 196.215 718.149 197.525 cv
718.15 197.527 li
718.15 197.527 li
718.362 200.008 718.598 202.487 718.861 204.963 cv
718.862 204.973 718.864 204.984 718.865 204.994 cv
718.87 205.049 718.876 205.104 718.882 205.158 cv
718.897 205.299 718.912 205.439 718.927 205.58 cv
718.928 205.581 718.928 205.585 718.928 205.586 cv
718.934 205.638 718.939 205.69 718.945 205.741 cv
721.056 225.147 723.167 244.554 725.278 263.961 cv
726.156 272.038 727.035 280.115 727.914 288.193 cv
728.14 290.279 728.367 292.365 728.594 294.451 cv
728.634 294.816 728.674 295.181 728.713 295.547 cv
728.828 296.604 738.029 299.368 739.272 299.836 cv
738.43 300.106 737.59 300.384 736.749 300.659 cv
735.182 301.173 733.612 301.679 732.02 302.112 cv
732.02 302.112 li
732.02 302.112 li
737.03 305.993 741.982 309.958 746.809 314.062 cv
.741176 .239216 .231373 rgb
f
712.624 17.1367 mo
712.464 11.4243 712.305 5.71217 712.145 0 cv
685.639 0 li
685.579 6.28941 685.531 12.5793 685.476 18.8716 cv
694.558 18.2639 703.617 17.8131 712.624 17.1367 cv
.854902 .333333 .262745 rgb
f
685.465 20.2394 mo
685.469 19.7834 685.472 19.3274 685.476 18.8716 cv
685.477 18.8716 685.477 18.8716 685.477 18.8716 cv
685.473 19.3275 685.469 19.7835 685.465 20.2394 cv
.129412 .627451 .521569 rgb
f
685.04 67.8873 mo
685.103 60.8278 685.166 53.7685 685.229 46.7089 cv
685.23 46.7072 685.232 46.7053 685.234 46.7036 cv
689.131 42.5021 690.092 36.6793 689.174 31.1346 cv
688.731 28.4614 687.851 25.8528 686.652 23.5217 cv
686.549 23.3203 686.443 23.1209 686.334 22.9237 cv
686.057 22.4185 685.763 21.9251 685.454 21.4436 cv
685.458 21.0421 685.461 20.6409 685.465 20.2394 cv
685.465 20.2394 li
685.469 19.7835 685.473 19.3275 685.477 18.8716 cv
685.79 18.8508 686.102 18.8326 686.415 18.8121 cv
692.924 23.0226 697.24 29.9697 698.307 37.5314 cv
698.307 37.5314 li
698.307 37.5314 li
698.478 38.7424 698.566 39.9691 698.566 41.2028 cv
698.567 43.9169 698.143 46.6648 697.247 49.3541 cv
694.801 56.6932 690.372 62.7084 685.04 67.8873 cv
.741176 .239216 .231373 rgb
f
714.479 83.3543 mo
714.19 83.341 713.9 83.3278 713.611 83.3148 cv
713.574 83.3131 713.537 83.3115 713.5 83.3098 cv
705.937 82.9706 698.377 82.7382 690.8 82.738 cv
690.796 82.738 690.792 82.738 690.788 82.738 cv
690.788 82.738 li
690.788 82.738 li
690.787 82.738 690.786 82.738 690.785 82.738 cv
689.175 82.738 687.564 82.7485 685.953 82.7707 cv
685.766 82.7733 685.579 82.776 685.392 82.7789 cv
685.231 82.7814 685.069 82.784 684.907 82.7867 cv
684.907 82.7867 li
684.951 77.8203 684.995 72.8537 685.04 67.8873 cv
690.372 62.7084 694.801 56.6932 697.247 49.3541 cv
698.143 46.6648 698.567 43.9169 698.566 41.2028 cv
698.566 39.9691 698.478 38.7424 698.307 37.5314 cv
703.279 38.2287 708.258 38.8666 713.248 39.4075 cv
713.658 54.0564 714.068 68.7054 714.479 83.3543 cv
.780392 .270588 .243137 rgb
f
714.802 94.8987 mo
714.694 91.0505 714.586 87.2025 714.479 83.3543 cv
704.631 82.901 694.786 82.6193 684.907 82.7867 cv
684.851 89.0419 684.795 95.2971 684.739 101.552 cv
678.764 97.4744 672.88 93.263 666.994 89.0577 cv
666.851 88.9529 li
665.224 90.3453 663.501 91.6005 661.681 92.668 cv
665.334 96.13 668.979 99.6011 672.694 102.998 cv
675.829 105.865 678.985 108.715 682.248 111.437 cv
683.227 112.254 684.64 112.691 684.628 114.021 cv
684.569 120.712 684.509 127.404 684.449 134.096 cv
694.865 131.571 705.28 129.359 715.695 127.177 cv
715.667 126.066 715.644 124.954 715.612 123.843 cv
715.454 118.192 715.296 112.541 715.138 106.89 cv
715.105 105.722 715.072 104.554 715.04 103.385 cv
715.012 102.404 716.897 100.792 717.484 100.04 cv
718.573 98.644 719.652 97.241 720.729 95.8353 cv
721.243 95.1655 721.756 94.4954 722.269 93.8254 cv
721.946 92.8462 721.63 91.865 721.312 90.8842 cv
719.154 92.2412 716.975 93.5667 714.802 94.8987 cv
.854902 .333333 .262745 rgb
f
716.076 146.401 mo
716.064 145.684 716.051 144.966 716.039 144.248 cv
716.041 144.248 li
716.053 144.96 716.066 145.671 716.078 146.383 cv
716.078 146.389 716.077 146.395 716.076 146.401 cv
715.981 140.883 mo
715.981 140.883 li
715.98 140.837 715.979 140.793 715.978 140.746 cv
715.979 140.792 715.98 140.838 715.981 140.883 cv
.584314 .803922 .47451 rgb
f
716.039 144.248 mo
716.02 143.126 716 142.005 715.981 140.883 cv
715.981 140.883 li
716.001 142.005 716.021 143.126 716.041 144.248 cv
716.039 144.248 li
.898039 .807843 .607843 rgb
f
716.202 153.437 mo
716.157 151.091 716.116 148.747 716.076 146.401 cv
716.077 146.395 716.078 146.389 716.078 146.383 cv
716.12 148.734 716.162 151.085 716.207 153.436 cv
716.205 153.436 716.204 153.437 716.202 153.437 cv
.0431373 .501961 .486274 rgb
f
684.35 145.218 mo
684.352 145.024 684.353 144.832 684.355 144.638 cv
684.355 144.638 li
684.353 144.831 684.352 145.025 684.35 145.218 cv
684.392 140.485 mo
684.392 140.485 li
684.411 138.355 684.43 136.226 684.449 134.096 cv
684.449 134.096 li
684.43 136.226 684.411 138.355 684.392 140.485 cv
.584314 .803922 .47451 rgb
f
684.355 144.638 mo
684.367 143.254 684.38 141.869 684.392 140.485 cv
684.392 140.485 li
684.38 141.87 684.367 143.254 684.355 144.638 cv
684.355 144.638 li
.898039 .807843 .607843 rgb
f
684.215 160.309 mo
684.26 155.279 684.305 150.248 684.35 145.218 cv
684.352 145.025 684.353 144.831 684.355 144.638 cv
684.367 143.254 684.38 141.87 684.392 140.485 cv
684.411 138.355 684.43 136.226 684.449 134.096 cv
694.865 131.571 705.28 129.359 715.695 127.177 cv
715.808 131.696 715.896 136.22 715.978 140.746 cv
715.979 140.793 715.98 140.837 715.981 140.883 cv
716 142.005 716.02 143.126 716.039 144.248 cv
716.051 144.966 716.064 145.684 716.076 146.401 cv
716.116 148.747 716.157 151.091 716.202 153.437 cv
705.499 155.436 694.829 157.683 684.215 160.309 cv
.780392 .270588 .243137 rgb
f
739.188 312.854 mo
735.759 312.356 732.323 311.902 728.89 311.438 cv
732.32 311.899 735.752 312.347 739.177 312.844 cv
739.18 312.847 739.184 312.851 739.188 312.854 cv
670.286 304.443 mo
669.902 304.389 669.518 304.334 669.135 304.28 cv
669.135 304.28 li
669.519 304.334 669.902 304.389 670.286 304.443 cv
670.286 304.443 670.286 304.443 670.286 304.443 cv
669.135 304.28 mo
670.595 303.181 673.987 301.773 674.327 299.812 cv
673.987 301.773 670.595 303.181 669.135 304.28 cv
674.348 299.658 mo
674.406 299.003 674.465 298.348 674.524 297.693 cv
674.465 298.348 674.406 299.003 674.348 299.658 cv
.847059 .345098 .176471 rgb
f
677.998 258.955 mo
678.478 253.605 678.958 248.257 679.438 242.908 cv
678.958 248.257 678.478 253.605 677.998 258.955 cv
677.998 258.955 li
.0431373 .501961 .486274 rgb
f
675.81 283.351 mo
676.54 275.219 677.269 267.086 677.998 258.955 cv
677.998 258.955 li
677.269 267.086 676.54 275.219 675.81 283.351 cv
.909804 .458824 .188235 rgb
f
716.314 158.939 mo
716.274 157.106 716.237 155.27 716.202 153.437 cv
716.204 153.437 716.205 153.436 716.207 153.436 cv
716.242 155.27 716.279 157.104 716.32 158.938 cv
716.314 158.939 li
.0431373 .501961 .486274 rgb
f
716.314 158.94 mo
716.314 158.939 li
716.32 158.938 li
716.32 158.939 li
716.318 158.939 716.316 158.94 716.314 158.94 cv
.909804 .631373 .188235 rgb
f
717.528 189.264 mo
716.866 179.177 716.537 169.061 716.314 158.94 cv
716.316 158.94 716.318 158.939 716.32 158.939 cv
716.543 169.05 716.87 179.157 717.531 189.232 cv
717.53 189.243 717.529 189.253 717.528 189.264 cv
.823529 .427451 .172549 rgb
f
739.177 312.844 mo
735.752 312.347 732.32 311.899 728.89 311.438 cv
728.209 311.346 727.529 311.253 726.849 311.16 cv
723.191 308.855 719.645 306.324 716.128 303.788 cv
707.664 277.257 704.499 249.412 694.215 223.703 cv
690.618 248.161 691.112 272.619 689.229 297.076 cv
682.969 299.505 676.764 302.474 670.286 304.443 cv
669.902 304.389 669.519 304.334 669.135 304.28 cv
669.135 304.28 li
670.595 303.181 673.987 301.773 674.327 299.812 cv
674.336 299.761 674.343 299.71 674.348 299.658 cv
674.348 299.658 li
674.406 299.003 674.465 298.348 674.524 297.693 cv
674.56 297.288 674.597 296.883 674.633 296.477 cv
675.025 292.102 675.418 287.726 675.81 283.351 cv
675.81 283.351 li
676.54 275.219 677.269 267.086 677.998 258.955 cv
677.998 258.955 li
678.478 253.605 678.958 248.257 679.438 242.908 cv
679.438 242.908 li
680.866 226.985 682.294 211.062 683.722 195.139 cv
684.663 184.649 684.095 173.835 684.189 163.289 cv
684.198 162.296 684.207 161.303 684.215 160.309 cv
694.829 157.683 705.499 155.436 716.202 153.437 cv
716.237 155.27 716.274 157.106 716.314 158.939 cv
716.314 158.94 li
716.537 169.061 716.866 179.177 717.528 189.264 cv
716.612 198.91 716.201 208.557 716.202 218.188 cv
716.205 243.311 719.012 268.338 722.973 293.034 cv
727.503 300.199 732.997 306.835 739.177 312.844 cv
.780392 .270588 .243137 rgb
f
706.93 307.641 mo
706.928 307.641 706.927 307.641 706.926 307.64 cv
706.927 307.641 706.928 307.641 706.93 307.641 cv
706.853 307.623 mo
706.849 307.622 706.846 307.621 706.842 307.62 cv
706.846 307.621 706.849 307.622 706.853 307.623 cv
706.774 307.604 mo
706.77 307.603 706.765 307.601 706.761 307.6 cv
706.765 307.601 706.77 307.603 706.774 307.604 cv
706.696 307.585 mo
706.69 307.583 706.685 307.582 706.679 307.581 cv
706.685 307.582 706.69 307.583 706.696 307.585 cv
706.611 307.564 mo
706.608 307.563 706.604 307.562 706.6 307.561 cv
706.604 307.562 706.608 307.563 706.611 307.564 cv
706.534 307.545 mo
706.529 307.544 706.524 307.542 706.518 307.541 cv
706.523 307.542 706.529 307.544 706.534 307.545 cv
706.451 307.525 mo
706.447 307.524 706.443 307.523 706.438 307.522 cv
706.442 307.523 706.447 307.524 706.451 307.525 cv
706.371 307.505 mo
706.367 307.504 706.362 307.503 706.357 307.502 cv
706.362 307.503 706.366 307.504 706.371 307.505 cv
706.292 307.485 mo
706.287 307.484 706.282 307.483 706.276 307.481 cv
706.282 307.483 706.287 307.484 706.292 307.485 cv
706.218 307.467 mo
706.211 307.465 706.202 307.463 706.195 307.461 cv
706.203 307.463 706.21 307.465 706.218 307.467 cv
706.127 307.444 mo
706.123 307.443 706.12 307.443 706.116 307.442 cv
706.12 307.443 706.122 307.443 706.127 307.444 cv
706.058 307.427 mo
706.05 307.425 706.042 307.423 706.034 307.421 cv
706.042 307.423 706.05 307.425 706.058 307.427 cv
705.972 307.406 mo
705.966 307.404 705.96 307.403 705.954 307.401 cv
705.96 307.403 705.966 307.404 705.972 307.406 cv
699.964 306.347 mo
699.963 306.347 699.962 306.347 699.961 306.347 cv
699.962 306.347 699.963 306.347 699.964 306.347 cv
699.911 306.342 mo
699.905 306.341 699.898 306.34 699.892 306.34 cv
699.898 306.34 699.905 306.341 699.911 306.342 cv
699.858 306.336 mo
699.848 306.335 699.838 306.334 699.828 306.333 cv
699.838 306.334 699.848 306.335 699.858 306.336 cv
699.805 306.331 mo
699.79 306.329 699.776 306.328 699.761 306.326 cv
699.776 306.328 699.79 306.329 699.805 306.331 cv
699.751 306.325 mo
697.215 306.066 694.677 305.996 692.101 305.996 cv
690.741 305.996 689.37 306.016 687.984 306.036 cv
687.697 306.041 687.411 306.043 687.123 306.043 cv
681.492 306.043 675.855 305.235 670.286 304.443 cv
670.286 304.443 li
675.854 305.235 681.491 306.043 687.121 306.043 cv
687.409 306.043 687.696 306.041 687.984 306.036 cv
689.369 306.015 690.739 305.996 692.098 305.996 cv
694.675 305.996 697.214 306.065 699.751 306.325 cv
.803922 .305882 .172549 rgb
f
726.849 311.16 mo
720.164 310.244 713.496 309.228 706.93 307.641 cv
706.928 307.641 706.927 307.641 706.926 307.64 cv
706.902 307.635 706.877 307.629 706.853 307.623 cv
706.849 307.622 706.846 307.621 706.842 307.62 cv
706.82 307.615 706.797 307.609 706.774 307.604 cv
706.77 307.603 706.765 307.601 706.761 307.6 cv
706.739 307.595 706.718 307.59 706.696 307.585 cv
706.69 307.583 706.685 307.582 706.679 307.581 cv
706.657 307.575 706.634 307.569 706.611 307.564 cv
706.608 307.563 706.604 307.562 706.6 307.561 cv
706.578 307.556 706.556 307.55 706.534 307.545 cv
706.529 307.544 706.523 307.542 706.518 307.541 cv
706.496 307.536 706.474 307.53 706.451 307.525 cv
706.447 307.524 706.442 307.523 706.438 307.522 cv
706.416 307.516 706.394 307.511 706.371 307.505 cv
706.366 307.504 706.362 307.503 706.357 307.502 cv
706.336 307.496 706.314 307.491 706.292 307.485 cv
706.287 307.484 706.282 307.483 706.276 307.481 cv
706.257 307.477 706.238 307.472 706.218 307.467 cv
706.21 307.465 706.203 307.463 706.195 307.461 cv
706.172 307.456 706.149 307.45 706.127 307.444 cv
706.122 307.443 706.12 307.443 706.116 307.442 cv
706.097 307.437 706.077 307.432 706.058 307.427 cv
706.05 307.425 706.042 307.423 706.034 307.421 cv
706.013 307.416 705.993 307.411 705.972 307.406 cv
705.966 307.404 705.96 307.403 705.954 307.401 cv
705.927 307.394 705.901 307.388 705.874 307.381 cv
705.874 307.381 li
705.874 307.381 li
703.894 306.883 701.93 306.557 699.964 306.347 cv
699.963 306.347 699.962 306.347 699.961 306.347 cv
699.945 306.345 699.928 306.344 699.911 306.342 cv
699.905 306.341 699.898 306.34 699.892 306.34 cv
699.881 306.339 699.869 306.337 699.858 306.336 cv
699.848 306.335 699.838 306.334 699.828 306.333 cv
699.82 306.332 699.813 306.331 699.805 306.331 cv
699.79 306.329 699.776 306.328 699.761 306.326 cv
699.758 306.326 699.755 306.325 699.751 306.325 cv
697.214 306.065 694.675 305.996 692.098 305.996 cv
690.739 305.996 689.369 306.015 687.984 306.036 cv
687.696 306.041 687.409 306.043 687.121 306.043 cv
681.491 306.043 675.854 305.235 670.286 304.443 cv
676.764 302.474 682.969 299.505 689.229 297.076 cv
691.112 272.619 690.618 248.161 694.215 223.703 cv
704.499 249.412 707.664 277.257 716.128 303.788 cv
719.645 306.324 723.191 308.855 726.849 311.16 cv
.741176 .239216 .231373 rgb
f
661.681 92.668 mo
659.779 90.8657 657.875 89.0652 655.957 87.2802 cv
657.875 89.0652 659.78 90.865 661.682 92.6674 cv
661.681 92.6676 661.681 92.6678 661.681 92.668 cv
661.681 92.668 li
661.681 92.668 li
666.85 88.9541 mo
664.828 87.5011 662.852 85.9118 660.737 84.6007 cv
662.852 85.9119 664.829 87.4999 666.851 88.9529 cv
666.851 88.9533 666.85 88.9537 666.85 88.9541 cv
655.913 87.2395 mo
655.873 87.202 655.833 87.1647 655.793 87.1273 cv
655.833 87.1644 655.873 87.2023 655.913 87.2395 cv
655.726 87.065 mo
655.672 87.0147 655.617 86.9642 655.563 86.9139 cv
655.091 86.4754 655.009 84.8028 655.009 83.2927 cv
655.009 84.8028 655.091 86.4754 655.563 86.9139 cv
655.617 86.9643 655.672 87.0146 655.726 87.065 cv
.129412 .627451 .521569 rgb
f
659.337 80.9595 mo
659.337 80.9595 li
659.298 80.6979 659.261 80.4568 659.218 80.2507 cv
658.744 77.9732 658.274 75.6949 657.794 73.4185 cv
657.794 73.4185 li
658.274 75.6948 658.744 77.9732 659.218 80.2507 cv
659.261 80.4569 659.298 80.6978 659.337 80.9595 cv
.556863 .713725 .454902 rgb
f
657.794 73.4185 mo
657.794 73.4185 li
657.652 72.7465 657.51 72.0748 657.366 71.4032 cv
657.51 72.0747 657.653 72.7466 657.794 73.4185 cv
.129412 .627451 .521569 rgb
f
660.681 84.5644 mo
659.728 83.9143 659.52 82.2037 659.337 80.9595 cv
659.337 80.9595 li
659.52 82.2036 659.728 83.9144 660.681 84.5644 cv
f
655.029 80.9595 mo
655.029 80.9595 li
655.029 80.9271 655.027 80.8966 655.026 80.8685 cv
654.977 79.8722 654.929 78.8761 654.88 77.8803 cv
654.833 76.9225 654.578 76.7952 654.052 76.7952 cv
653.957 76.7952 653.853 76.7993 653.74 76.8035 cv
653.627 76.8077 653.504 76.8118 653.372 76.8118 cv
653.238 76.8118 653.094 76.8075 652.939 76.7947 cv
650.668 76.6048 648.433 76.2346 646.226 75.6599 cv
644.243 75.1503 642.415 74.4356 640.735 73.5367 cv
640.735 73.5367 li
642.415 74.4356 644.243 75.1503 646.226 75.6599 cv
648.433 76.2346 650.668 76.6048 652.939 76.7947 cv
653.094 76.8075 653.238 76.8118 653.372 76.8118 cv
653.504 76.8118 653.627 76.8077 653.74 76.8035 cv
653.853 76.7993 653.957 76.7952 654.052 76.7952 cv
654.578 76.7952 654.833 76.9225 654.88 77.8803 cv
654.929 78.8761 654.977 79.8722 655.026 80.8683 cv
655.027 80.8965 655.029 80.927 655.029 80.9595 cv
.556863 .713725 .454902 rgb
f
655.032 81.2189 mo
655.032 81.1222 655.031 81.0351 655.029 80.9595 cv
655.029 80.9595 li
655.031 81.0352 655.032 81.1221 655.032 81.2189 cv
.129412 .627451 .521569 rgb
f
650.412 72.4146 mo
649.987 72.4146 649.562 72.4069 649.137 72.3901 cv
649.562 72.4069 649.986 72.4146 650.411 72.4146 cv
651.261 72.4146 652.11 72.3836 652.959 72.3319 cv
653.08 72.3245 653.194 72.322 653.301 72.322 cv
653.413 72.322 653.518 72.3248 653.615 72.3276 cv
653.712 72.3304 653.802 72.3332 653.883 72.3332 cv
654.381 72.3332 654.596 72.2292 654.574 71.3879 cv
654.596 72.2294 654.381 72.3334 653.883 72.3335 cv
653.802 72.3335 653.712 72.3306 653.615 72.3278 cv
653.518 72.325 653.413 72.3222 653.299 72.3222 cv
653.193 72.3222 653.08 72.3247 652.959 72.3321 cv
652.111 72.3837 651.261 72.4146 650.412 72.4146 cv
649.052 72.3866 mo
647.563 72.3235 646.067 72.1617 644.598 71.8736 cv
646.067 72.1616 647.563 72.3234 649.052 72.3866 cv
f
661.682 92.6674 mo
659.78 90.865 657.875 89.0652 655.957 87.2802 cv
655.943 87.2666 655.928 87.2531 655.913 87.2395 cv
655.873 87.2023 655.833 87.1644 655.793 87.1273 cv
655.77 87.1065 655.748 87.0857 655.726 87.065 cv
655.672 87.0146 655.617 86.9643 655.563 86.9139 cv
655.091 86.4754 655.009 84.8028 655.009 83.2927 cv
655.009 82.4828 655.032 81.7199 655.032 81.2189 cv
655.032 81.1221 655.031 81.0352 655.029 80.9595 cv
655.029 80.927 655.027 80.8965 655.026 80.8683 cv
654.977 79.8722 654.929 78.8761 654.88 77.8803 cv
654.833 76.9225 654.578 76.7952 654.052 76.7952 cv
653.957 76.7952 653.853 76.7993 653.74 76.8035 cv
653.627 76.8077 653.504 76.8118 653.372 76.8118 cv
653.238 76.8118 653.094 76.8075 652.939 76.7947 cv
650.668 76.6048 648.433 76.2346 646.226 75.6599 cv
644.243 75.1503 642.415 74.4356 640.735 73.5367 cv
640.776 73.5137 640.817 73.4909 640.858 73.4679 cv
640.934 73.4251 641.01 73.3823 641.087 73.3394 cv
641.087 73.3394 li
642.034 72.8072 642.98 72.271 643.925 71.7322 cv
644.148 71.7824 644.373 71.8294 644.598 71.8736 cv
646.067 72.1617 647.563 72.3235 649.052 72.3866 cv
649.052 72.3866 li
649.08 72.3878 649.109 72.389 649.137 72.3901 cv
649.562 72.4069 649.987 72.4146 650.412 72.4146 cv
651.261 72.4146 652.111 72.3837 652.959 72.3321 cv
653.08 72.3247 653.193 72.3222 653.299 72.3222 cv
653.413 72.3222 653.518 72.325 653.615 72.3278 cv
653.712 72.3306 653.802 72.3335 653.883 72.3335 cv
654.381 72.3334 654.596 72.2294 654.574 71.3879 cv
654.573 71.3589 654.572 71.329 654.571 71.2982 cv
654.571 71.2982 li
654.571 71.2982 li
654.478 69.1071 654.572 67.657 653.788 66.0171 cv
654.342 65.6941 654.896 65.3711 655.45 65.0486 cv
655.696 65.3364 655.941 65.6241 656.187 65.9118 cv
656.535 67.5308 656.883 69.1494 657.23 70.7685 cv
657.276 70.9801 657.321 71.1916 657.366 71.4032 cv
657.51 72.0748 657.652 72.7465 657.794 73.4185 cv
658.274 75.6949 658.744 77.9732 659.218 80.2507 cv
659.261 80.4568 659.298 80.6979 659.337 80.9595 cv
659.52 82.2037 659.728 83.9143 660.681 84.5644 cv
660.7 84.5769 660.718 84.589 660.737 84.6007 cv
660.737 84.6007 li
662.852 85.9118 664.828 87.5011 666.85 88.9541 cv
665.223 90.3457 663.501 91.6003 661.682 92.6674 cv
.741176 .239216 .231373 rgb
f
661.681 92.668 mo
661.681 92.668 li
661.681 92.6678 661.681 92.6676 661.682 92.6674 cv
663.501 91.6003 665.223 90.3457 666.85 88.9541 cv
666.85 88.9537 666.851 88.9533 666.851 88.9529 cv
666.851 88.9529 li
665.224 90.3453 663.501 91.6005 661.681 92.668 cv
f
619.685 23.0265 mo
619.706 23.0039 li
624.956 16.8472 620.139 22.49 619.685 23.0265 cv
cp
.682353 .623529 .113725 rgb
f
666.537 8.28449 mo
649.231 3.47827 631.247 9.4705 619.706 23.0039 cv
619.685 23.0265 li
617.634 25.4129 615.437 27.666 613.229 29.9055 cv
609.769 33.4142 604.571 35.5244 599.996 37.12 cv
589.342 40.8362 578.438 41.4008 567.36 42.7808 cv
565.123 43.0593 561.848 43.3177 560.471 45.384 cv
559.203 47.2874 559.519 50.3015 559.954 52.4 cv
561.002 57.4541 563.959 62.0503 567.319 65.8852 cv
574.572 74.1636 584.71 79.755 595.39 82.18 cv
603.69 84.0642 612.278 83.938 620.594 82.2298 cv
627.98 80.7128 634.581 76.9928 641.087 73.3394 cv
649.264 68.7473 657.283 63.8791 665.474 59.3099 cv
672.127 55.5989 679.979 52.3685 685.234 46.7036 cv
691.172 40.3013 690.294 30.1344 686.334 22.9237 cv
682.235 15.4602 674.571 10.5788 666.537 8.28449 cv
f
619.706 23.0039 mo
625.003 16.7915 620.053 22.5916 619.675 23.0387 cv
619.706 23.0039 li
cp
f
637.093 10.2066 mo
630.516 12.9893 624.544 17.3307 619.706 23.0039 cv
619.675 23.0386 li
617.626 25.4206 615.434 27.67 613.229 29.9055 cv
609.769 33.4142 604.571 35.5244 599.996 37.12 cv
589.342 40.8362 578.438 41.4008 567.36 42.7806 cv
565.123 43.0593 561.848 43.3177 560.471 45.384 cv
559.276 47.179 559.491 49.9525 559.884 52.0233 cv
560.793 53.2866 561.674 54.455 562.316 55.4186 cv
566.864 62.9991 576.719 66.7891 585.815 63.757 cv
590.364 62.9991 594.154 58.4508 597.944 57.6927 cv
620.685 54.6605 654.039 51.6283 648.733 24.3391 cv
647.504 17.2156 643.09 12.7214 637.093 10.2066 cv
f
590.888 80.9595 mo
590.888 80.9595 li
585.479 79.2495 580.303 76.7137 575.682 73.4185 cv
575.682 73.4185 li
580.303 76.7137 585.479 79.2495 590.888 80.9595 cv
.556863 .823529 .498039 rgb
f
607.851 83.5522 mo
603.673 83.5521 599.495 83.112 595.39 82.18 cv
593.876 81.8363 592.374 81.429 590.888 80.9595 cv
590.888 80.9595 li
592.374 81.429 593.876 81.8363 595.39 82.18 cv
599.495 83.112 603.673 83.5521 607.851 83.5522 cv
607.851 83.5522 li
.129412 .72549 .572549 rgb
f
559.954 52.4 mo
559.954 52.4 li
559.954 52.3955 559.953 52.391 559.952 52.3864 cv
559.953 52.3909 559.954 52.3955 559.954 52.4 cv
559.954 52.4 li
f
689.174 31.1346 mo
688.731 28.4614 687.851 25.8528 686.652 23.5217 cv
687.851 25.8528 688.731 28.4614 689.174 31.1346 cv
.643137 .2 .223529 rgb
f
666.537 8.28449 mo
666.505 8.27569 666.475 8.26735 666.444 8.25862 cv
666.475 8.26724 666.506 8.2758 666.537 8.28449 cv
666.442 8.2581 mo
666.411 8.24966 666.381 8.24137 666.35 8.233 cv
666.381 8.24138 666.411 8.24965 666.442 8.2581 cv
666.266 8.2102 mo
666.263 8.20934 666.26 8.20846 666.257 8.2076 cv
666.26 8.20844 666.263 8.20937 666.266 8.2102 cv
.129412 .72549 .572549 rgb
f
607.851 83.5522 mo
603.673 83.5521 599.495 83.112 595.39 82.18 cv
593.876 81.8363 592.374 81.429 590.888 80.9595 cv
585.479 79.2495 580.303 76.7137 575.682 73.4185 cv
572.763 71.3371 570.065 68.9521 567.67 66.2811 cv
567.552 66.1496 567.436 66.0181 567.319 65.8852 cv
567.319 65.8852 li
563.959 62.0503 561.002 57.4538 559.954 52.4 cv
559.954 52.4 li
559.954 52.3955 559.953 52.3909 559.952 52.3864 cv
559.928 52.2702 559.907 52.1436 559.884 52.0233 cv
560.793 53.2866 561.674 54.455 562.316 55.4186 cv
562.316 55.4186 li
562.341 55.4594 562.365 55.5005 562.39 55.541 cv
562.427 55.6008 562.463 55.66 562.501 55.7194 cv
562.502 55.7217 562.503 55.7235 562.505 55.7258 cv
566.03 61.3442 572.505 64.7993 579.357 64.8037 cv
579.362 64.8037 579.366 64.8037 579.371 64.8037 cv
579.371 64.8037 li
579.371 64.8037 li
579.372 64.8037 579.374 64.8037 579.375 64.8037 cv
581.456 64.8035 583.57 64.4848 585.649 63.8116 cv
585.704 63.7936 585.76 63.7755 585.815 63.757 cv
590.364 62.9991 594.154 58.4508 597.944 57.6927 cv
619.042 54.8796 649.274 52.0666 649.296 29.8844 cv
649.298 28.1566 649.116 26.3112 648.733 24.3391 cv
647.504 17.2156 643.09 12.7214 637.093 10.2066 cv
642.594 7.87949 648.518 6.6445 654.56 6.6445 cv
658.437 6.6445 662.363 7.1529 666.257 8.2076 cv
666.26 8.20846 666.263 8.20934 666.266 8.2102 cv
666.294 8.21769 666.323 8.22545 666.35 8.233 cv
666.381 8.24137 666.411 8.24966 666.442 8.2581 cv
666.442 8.25827 666.443 8.25845 666.444 8.25862 cv
666.475 8.26735 666.505 8.27569 666.537 8.28449 cv
666.537 8.28449 li
674.571 10.579 682.235 15.4602 686.334 22.9237 cv
686.443 23.1209 686.549 23.3203 686.652 23.5217 cv
687.851 25.8528 688.731 28.4614 689.174 31.1346 cv
690.092 36.6792 689.131 42.5019 685.233 46.7036 cv
679.979 52.3685 672.127 55.5989 665.474 59.3099 cv
657.283 63.8791 649.264 68.747 641.087 73.3394 cv
641.087 73.3394 li
641.01 73.3823 640.934 73.4251 640.858 73.4679 cv
634.426 77.0797 627.894 80.7304 620.594 82.2298 cv
620.594 82.2298 li
619.281 82.4995 617.961 82.7299 616.636 82.919 cv
613.722 83.3353 610.787 83.5523 607.851 83.5522 cv
.592157 .521569 .109804 rgb
f
579.371 64.8037 mo
579.366 64.8037 579.362 64.8037 579.357 64.8037 cv
579.362 64.8037 579.366 64.8037 579.371 64.8037 cv
579.371 64.8037 li
579.375 64.8037 mo
581.456 64.8034 583.571 64.4846 585.649 63.8116 cv
583.57 64.4848 581.456 64.8035 579.375 64.8037 cv
562.505 55.7258 mo
562.503 55.7235 562.502 55.7217 562.501 55.7194 cv
562.502 55.7217 562.503 55.7235 562.505 55.7258 cv
562.39 55.541 mo
562.365 55.5005 562.341 55.4594 562.316 55.4186 cv
562.341 55.4594 562.365 55.5005 562.39 55.541 cv
649.296 29.8844 mo
649.298 28.1566 649.116 26.3112 648.733 24.3391 cv
647.504 17.2156 643.09 12.7214 637.093 10.2066 cv
637.093 10.2066 li
643.09 12.7214 647.504 17.2156 648.733 24.3391 cv
649.116 26.3112 649.298 28.1566 649.296 29.8844 cv
f
622.698 36.9501 mo
617.601 36.9494 620.388 25.6149 625.438 21.9887 cv
626.904 20.9359 628.917 20.057 630.748 20.057 cv
632.373 20.057 633.854 20.7496 634.679 22.6279 cv
636.686 27.1937 630.938 32.5269 627.72 34.791 cv
625.554 36.3149 623.905 36.9503 622.698 36.9501 cv
.8 .764706 .152941 rgb
f
582.621 53.5827 mo
582.039 53.5826 581.481 53.5709 580.957 53.5504 cv
568.104 53.0451 576.399 46.6768 584.23 46.6768 cv
584.507 46.6768 584.783 46.6847 585.057 46.7011 cv
594.154 44.8061 li
598.329 45.0839 600.58 46.5939 596.982 49.8196 cv
593.628 52.8264 587.307 53.5828 582.621 53.5827 cv
f
88.5415 322.507 mo
84.2289 333.149 78.5526 341.74 70.7392 348.32 cv
80.5623 346.68 88.9292 341.915 96.7546 334.784 cv
88.9047 347.233 80.077 357.948 69.5816 366.084 cv
149.363 366.084 li
145.738 361.261 142.58 355.933 140.17 350.318 cv
145.801 356.278 151.883 361.365 158.124 366.084 cv
159.146 366.084 li
155.809 359.493 152.632 352.802 149.928 345.812 cv
157.839 350.319 165.906 352.67 174.172 352.008 cv
162.58 346.803 154.488 336.055 146.565 324.135 cv
151.256 326.129 156.031 327.417 160.824 328.492 cv
151.794 318.972 143.587 307.857 137.501 295.089 cv
141.851 298.625 146.461 301.406 151.128 304.015 cv
141.697 292.483 133.392 279.096 128.537 263.813 cv
134.678 265.455 140.75 267.864 146.646 270.976 cv
140.657 260.784 135.153 250.132 130.035 239.333 cv
122.004 222.389 113.345 203.15 111.541 183.971 cv
110.24 194.856 108.229 205.618 105.812 216.132 cv
101.821 233.489 96.5493 252.768 86.0751 265.284 cv
89.5538 263.749 93.2824 262.877 96.9684 262.23 cv
92.5447 273.814 87.5087 284.715 80.7295 294.259 cv
85.6132 292.195 90.2973 289.709 94.757 286.577 cv
90.0544 305.497 82.4711 322.278 70.3199 334.542 cv
76.9319 331.622 83.0267 327.848 88.5415 322.507 cv
.435294 .52549 .192157 rgb
f
70.3199 334.542 mo
71.2639 333.589 72.171 332.599 73.0607 331.593 cv
73.0607 331.593 li
73.0607 331.593 li
73.0698 331.59 73.079 331.586 73.0881 331.583 cv
72.1931 332.596 71.27 333.583 70.3199 334.542 cv
70.4075 334.503 mo
70.414 334.5 70.4204 334.498 70.4269 334.495 cv
70.4206 334.498 70.4138 334.501 70.4075 334.503 cv
70.4988 334.463 mo
70.5037 334.461 70.5086 334.458 70.5134 334.456 cv
70.5086 334.458 70.5037 334.461 70.4988 334.463 cv
.94902 .541176 .239216 rgb
f
70.3199 334.542 mo
70.3199 334.542 li
71.27 333.583 72.1931 332.596 73.0881 331.583 cv
75.945 330.47 78.7948 329.339 81.6426 328.202 cv
78.1207 330.681 74.4091 332.723 70.5134 334.456 cv
70.5086 334.458 70.5037 334.461 70.4988 334.463 cv
70.4747 334.474 70.4511 334.484 70.4269 334.495 cv
70.4204 334.498 70.414 334.5 70.4075 334.503 cv
70.3782 334.516 70.3492 334.529 70.3199 334.542 cv
.556863 .658823 .239216 rgb
f
101.63 232.516 mo
101.627 232.516 101.626 232.516 101.623 232.515 cv
101.623 232.515 li
101.63 232.516 li
101.629 232.517 101.63 232.515 101.63 232.516 cv
1 .796078 .219608 rgb
f
92.3875 255.894 mo
96.2698 248.849 99.2174 240.766 101.623 232.515 cv
101.626 232.516 101.627 232.516 101.63 232.516 cv
99.2294 240.762 96.2891 248.843 92.4133 255.883 cv
92.4048 255.887 92.3959 255.89 92.3875 255.894 cv
.913725 .568627 .203922 rgb
f
101.63 232.516 mo
101.623 232.515 li
103.126 227.361 104.418 222.141 105.594 217.069 cv
105.594 217.068 105.595 217.068 105.596 217.068 cv
104.421 222.138 103.13 227.36 101.63 232.516 cv
.956863 .682353 .211765 rgb
f
130.423 240.15 mo
130.293 239.878 130.164 239.606 130.035 239.333 cv
130.164 239.606 130.3 239.875 130.43 240.148 cv
130.428 240.149 130.425 240.149 130.423 240.15 cv
130.035 239.333 mo
129.114 237.39 128.185 235.418 127.259 233.418 cv
127.261 233.418 127.258 233.418 127.26 233.418 cv
128.185 235.417 129.114 237.39 130.035 239.333 cv
.913725 .568627 .203922 rgb
f
127.259 233.418 mo
123.921 226.211 120.622 218.656 117.891 210.923 cv
117.894 210.922 117.897 210.92 117.9 210.919 cv
120.631 218.653 123.924 226.209 127.26 233.418 cv
127.258 233.418 127.261 233.418 127.259 233.418 cv
.956863 .682353 .211765 rgb
f
127.259 233.418 mo
127.259 233.418 li
127.261 233.418 127.258 233.418 127.26 233.418 cv
127.26 233.418 li
127.258 233.418 127.261 233.418 127.259 233.418 cv
.87451 .482353 .196078 rgb
f
92.4133 255.883 mo
96.2891 248.843 99.2294 240.762 101.63 232.516 cv
101.63 232.515 101.629 232.517 101.63 232.516 cv
103.13 227.36 104.421 222.138 105.596 217.068 cv
109.672 214.97 113.77 212.919 117.891 210.923 cv
120.622 218.656 123.921 226.211 127.259 233.418 cv
127.259 233.418 li
128.185 235.418 129.114 237.39 130.035 239.333 cv
130.035 239.333 li
130.035 239.333 li
130.164 239.606 130.293 239.878 130.423 240.15 cv
117.596 245.084 104.986 250.464 92.4133 255.883 cv
.478431 .572549 .207843 rgb
f
81.2886 320.409 mo
81.2839 320.409 81.2786 320.409 81.274 320.409 cv
85.6153 313.304 89.0721 305.377 91.8206 296.879 cv
91.824 296.878 91.8268 296.877 91.8302 296.875 cv
89.0838 305.375 85.6288 313.302 81.2886 320.409 cv
1 .603922 .219608 rgb
f
73.0607 331.593 mo
76.1006 328.155 78.8276 324.412 81.274 320.409 cv
81.2786 320.409 81.2839 320.409 81.2886 320.409 cv
78.8458 324.408 76.1231 328.148 73.0881 331.583 cv
73.079 331.586 73.0698 331.59 73.0607 331.593 cv
87.0076 326.057 mo
87.5355 324.898 88.0501 323.72 88.5415 322.507 cv
88.0519 323.715 87.5446 324.897 87.0187 326.053 cv
87.0154 326.054 87.011 326.056 87.0076 326.057 cv
88.4871 322.56 mo
88.5053 322.542 88.5233 322.525 88.5415 322.507 cv
88.5415 322.507 li
88.5233 322.525 88.5053 322.542 88.4871 322.56 cv
.937255 .462745 .207843 rgb
f
141.355 302.477 mo
140.015 300.116 138.746 297.694 137.558 295.208 cv
138.748 297.695 140.025 300.111 141.367 302.471 cv
141.362 302.473 141.359 302.475 141.355 302.477 cv
1 .603922 .219608 rgb
f
140.321 288.99 mo
140.316 288.989 li
138.018 285.299 135.886 281.458 133.971 277.468 cv
133.973 277.467 133.976 277.466 133.977 277.465 cv
135.892 281.456 138.024 285.298 140.321 288.99 cv
1 .752941 .294118 rgb
f
141.668 291.113 mo
141.211 290.411 140.761 289.703 140.316 288.989 cv
140.321 288.99 li
140.764 289.702 141.213 290.408 141.668 291.109 cv
141.668 291.111 141.668 291.112 141.668 291.113 cv
1 .603922 .219608 rgb
f
147.616 299.561 mo
145.552 296.841 143.559 294.024 141.668 291.113 cv
141.668 291.112 141.668 291.111 141.668 291.109 cv
143.56 294.022 145.551 296.839 147.617 299.56 cv
147.616 299.561 147.616 299.561 147.616 299.561 cv
.752941 .698039 .290196 rgb
f
137.621 295.186 mo
137.621 295.186 137.62 295.185 137.619 295.184 cv
137.62 295.185 137.621 295.186 137.621 295.186 cv
137.566 295.141 mo
137.564 295.139 137.561 295.137 137.559 295.135 cv
137.561 295.137 137.563 295.139 137.566 295.141 cv
1 .603922 .219608 rgb
f
73.0881 331.583 mo
76.1231 328.148 78.8458 324.408 81.2886 320.409 cv
85.6288 313.302 89.0838 305.375 91.8302 296.875 cv
105.943 290.505 119.927 283.905 133.971 277.468 cv
135.886 281.458 138.018 285.299 140.316 288.989 cv
140.316 288.989 li
140.761 289.703 141.211 290.411 141.668 291.113 cv
143.559 294.024 145.552 296.841 147.616 299.561 cv
146.859 299.914 146.103 300.269 145.346 300.621 cv
142.712 298.982 140.123 297.209 137.621 295.186 cv
137.621 295.186 137.62 295.185 137.619 295.184 cv
137.601 295.17 137.584 295.156 137.566 295.141 cv
137.563 295.139 137.561 295.137 137.559 295.135 cv
137.54 295.12 137.52 295.104 137.501 295.089 cv
137.501 295.089 li
137.501 295.089 li
137.501 295.089 li
137.52 295.128 137.539 295.168 137.558 295.208 cv
138.746 297.694 140.015 300.116 141.355 302.477 cv
123.427 310.744 105.315 318.639 87.0187 326.053 cv
87.5446 324.897 88.0519 323.715 88.5415 322.507 cv
88.5415 322.507 li
88.5415 322.507 li
88.5415 322.507 li
88.5233 322.525 88.5053 322.542 88.4871 322.56 cv
86.2968 324.675 84.0114 326.535 81.6426 328.202 cv
81.6426 328.202 li
81.6426 328.202 li
78.7948 329.339 75.945 330.47 73.0881 331.583 cv
.478431 .572549 .207843 rgb
f
151.128 304.015 mo
150.047 302.694 148.982 301.349 147.935 299.979 cv
147.935 299.979 147.936 299.979 147.936 299.98 cv
148.983 301.349 150.048 302.695 151.128 304.015 cv
1 .686274 .254902 rgb
f
147.936 299.98 mo
147.936 299.979 147.935 299.979 147.935 299.979 cv
147.828 299.84 147.722 299.701 147.616 299.561 cv
147.616 299.561 147.616 299.561 147.617 299.56 cv
147.723 299.7 147.829 299.84 147.936 299.98 cv
.803922 .760784 .333333 rgb
f
151.128 304.015 mo
151.128 304.015 li
149.185 302.929 147.254 301.809 145.346 300.621 cv
146.103 300.269 146.859 299.914 147.616 299.561 cv
147.722 299.701 147.828 299.84 147.935 299.979 cv
148.982 301.349 150.047 302.694 151.128 304.015 cv
151.128 304.015 li
.556863 .658823 .239216 rgb
f
160.733 328.396 mo
160.708 328.37 160.684 328.344 160.659 328.318 cv
160.684 328.344 160.709 328.37 160.733 328.396 cv
160.652 328.31 mo
157.07 324.522 153.621 320.483 150.382 316.187 cv
150.387 316.184 150.392 316.181 150.396 316.178 cv
153.633 320.471 157.072 324.522 160.652 328.31 cv
.941176 .501961 .223529 rgb
f
156.912 361.599 mo
152.404 361.599 li
148.175 358.145 144.064 354.44 140.17 350.318 cv
140.17 350.318 li
140.17 350.318 li
141.855 354.243 143.905 358.028 146.225 361.599 cv
123.844 361.599 li
123.733 361.272 123.621 360.953 123.513 360.642 cv
122.281 357.167 121.007 354.667 121.007 354.667 cv
121.007 354.667 119.53 357.123 118.026 360.233 cv
117.809 360.677 117.599 361.132 117.389 361.599 cv
104.671 361.599 li
104.796 361.454 104.922 361.308 105.048 361.161 cv
105.586 360.58 106.108 359.977 106.588 359.366 cv
107.548 358.142 108.335 356.882 108.753 355.649 cv
109.246 354.437 109.473 352.961 109.547 351.403 cv
109.585 350.624 109.583 349.825 109.556 349.032 cv
109.557 348.25 109.546 347.479 109.512 346.738 cv
109.463 345.641 109.381 344.614 109.297 343.756 cv
123.138 334.768 136.826 325.57 150.382 316.187 cv
153.621 320.483 157.07 324.522 160.652 328.31 cv
160.655 328.313 160.657 328.315 160.659 328.318 cv
160.684 328.344 160.708 328.37 160.733 328.396 cv
160.764 328.428 160.794 328.46 160.824 328.492 cv
156.031 327.417 151.256 326.129 146.565 324.135 cv
146.565 324.135 li
146.565 324.135 li
154.488 336.055 162.58 346.803 174.172 352.008 cv
173.249 352.082 172.33 352.118 171.413 352.118 cv
164.109 352.118 156.956 349.816 149.928 345.812 cv
149.928 345.812 li
149.928 345.812 li
152.021 351.222 154.398 356.454 156.912 361.599 cv
98.3332 361.599 mo
97.4574 361.599 li
95.6761 359.651 92.85 358.072 90.3052 357.449 cv
89.8955 357.319 89.4915 357.214 89.101 357.128 cv
89.0342 357.011 88.9664 356.893 88.8982 356.776 cv
92.3468 354.613 95.7834 352.439 99.2121 350.25 cv
98.9163 350.762 98.6572 351.283 98.4457 351.807 cv
98.0005 353.107 97.8189 354.718 97.8029 356.372 cv
97.795 357.199 97.829 358.039 97.8919 358.859 cv
97.9721 359.687 98.1278 360.513 98.2706 361.281 cv
98.2913 361.388 98.3121 361.494 98.3332 361.599 cv
81.4996 361.599 mo
81.1536 361.599 li
81.209 361.564 81.263 361.531 81.3185 361.497 cv
81.3789 361.531 81.4389 361.565 81.4996 361.599 cv
.517647 .615686 .223529 rgb
f
479.56 325.65 mo
488.137 326.336 496.508 323.897 504.717 319.22 cv
501.736 326.926 498.209 334.287 494.509 341.54 cv
501.581 336.284 508.488 330.623 514.843 323.896 cv
508.537 338.583 497.353 351.438 485.703 358.547 cv
491.424 358.484 497.161 357.085 502.783 354.876 cv
499.515 358.856 496.163 362.602 492.683 366.084 cv
599.435 366.084 li
602.518 365.806 li
591.599 360.059 581.083 352.253 572.117 343.126 cv
581.598 346.985 591.345 348.779 601.526 348.8 cv
584.41 340.165 571.186 325.687 559.893 307.777 cv
568.013 315.176 576.696 320.121 586.888 321.823 cv
578.781 314.995 572.891 306.081 568.416 295.038 cv
574.138 300.58 580.462 304.496 587.324 307.526 cv
574.715 294.8 566.846 277.387 561.966 257.754 cv
566.594 261.004 571.454 263.584 576.522 265.725 cv
569.488 255.822 564.262 244.511 559.672 232.49 cv
563.496 233.162 567.365 234.067 570.975 235.659 cv
560.106 222.672 554.636 202.667 550.495 184.656 cv
547.986 173.746 545.9 162.579 544.549 151.284 cv
542.678 171.185 533.693 191.149 525.36 208.731 cv
520.048 219.936 514.338 230.99 508.122 241.566 cv
514.241 238.337 520.541 235.837 526.914 234.133 cv
521.876 249.992 513.258 263.883 503.472 275.85 cv
508.315 273.142 513.098 270.256 517.612 266.587 cv
511.296 279.835 502.781 291.37 493.41 301.248 cv
498.384 300.133 503.339 298.796 508.207 296.727 cv
499.985 309.097 491.588 320.248 479.56 325.65 cv
.360784 .498039 .203922 rgb
f
586.822 321.812 mo
586.815 321.811 586.807 321.809 586.8 321.808 cv
586.807 321.809 586.815 321.811 586.822 321.812 cv
586.843 321.784 mo
586.106 321.163 585.388 320.524 584.688 319.868 cv
584.697 319.864 584.706 319.861 584.716 319.857 cv
585.413 320.51 586.11 321.165 586.843 321.784 cv
.937255 .462745 .207843 rgb
f
586.888 321.823 mo
586.888 321.823 li
586.866 321.819 586.844 321.816 586.822 321.812 cv
586.815 321.811 586.807 321.809 586.8 321.808 cv
585.249 321.546 583.737 321.2 582.253 320.79 cv
583.065 320.485 583.876 320.175 584.688 319.868 cv
585.388 320.524 586.106 321.163 586.843 321.784 cv
586.858 321.797 586.873 321.81 586.888 321.823 cv
.396078 .545098 .219608 rgb
f
485.703 358.547 mo
485.73 358.531 485.757 358.515 485.784 358.498 cv
485.757 358.515 485.73 358.531 485.703 358.547 cv
485.805 358.485 mo
485.827 358.472 485.849 358.458 485.871 358.445 cv
485.849 358.458 485.827 358.472 485.805 358.485 cv
485.886 358.436 mo
486.763 357.896 487.636 357.323 488.506 356.719 cv
488.507 356.72 li
487.637 357.323 486.763 357.896 485.886 358.436 cv
.941176 .501961 .223529 rgb
f
488.507 356.72 mo
488.506 356.719 li
491.302 354.777 494.05 352.513 496.689 349.99 cv
496.693 349.989 496.7 349.987 496.704 349.986 cv
494.062 352.513 491.309 354.776 488.507 356.72 cv
.901961 .396078 .211765 rgb
f
597.83 346.811 mo
588.054 341.215 579.584 333.643 572.018 324.592 cv
572.023 324.59 572.026 324.589 572.031 324.587 cv
579.596 333.635 588.057 341.214 597.829 346.81 cv
597.83 346.811 597.83 346.811 597.83 346.811 cv
.941176 .501961 .223529 rgb
f
579.301 361.599 mo
496.967 361.599 li
498.94 359.441 500.876 357.199 502.783 354.876 cv
502.783 354.876 li
502.783 354.876 li
498.533 356.546 494.218 357.753 489.894 358.27 cv
489.894 358.27 li
488.497 358.437 487.1 358.532 485.703 358.547 cv
485.703 358.547 li
485.73 358.531 485.757 358.515 485.784 358.498 cv
485.791 358.494 485.798 358.49 485.805 358.485 cv
485.827 358.472 485.849 358.458 485.871 358.445 cv
485.876 358.442 485.881 358.439 485.886 358.436 cv
486.763 357.896 487.637 357.323 488.507 356.72 cv
488.507 356.72 li
491.309 354.776 494.062 352.513 496.704 349.986 cv
522.018 342.18 547.14 333.732 572.018 324.592 cv
579.584 333.643 588.054 341.215 597.83 346.811 cv
598.005 347.433 598.158 348.077 598.298 348.733 cv
589.278 348.375 580.592 346.575 572.117 343.126 cv
572.117 343.126 li
572.117 343.126 li
576.851 347.945 582.018 352.396 587.448 356.37 cv
587.092 356.236 586.728 356.107 586.356 355.984 cv
585.31 355.63 584.248 355.317 583.207 355.044 cv
582.129 354.794 581.065 354.596 580.073 354.429 cv
578.115 354.052 576.271 354.023 575.017 353.992 cv
574.677 353.986 574.375 353.984 574.115 353.984 cv
573.406 353.984 573.007 354 573.007 354 cv
573.007 354 573.46 354.565 574.223 355.518 cv
574.977 356.469 576.054 357.622 577.207 359.126 cv
577.793 359.852 578.422 360.602 579.083 361.343 cv
579.155 361.428 579.228 361.513 579.301 361.599 cv
.427451 .592157 .239216 rgb
f
576.522 265.725 mo
576.063 265.079 575.612 264.427 575.168 263.77 cv
575.176 263.766 575.184 263.762 575.192 263.758 cv
575.634 264.415 576.064 265.081 576.522 265.725 cv
576.438 265.69 mo
576.436 265.689 576.433 265.687 576.43 265.686 cv
576.432 265.687 576.436 265.689 576.438 265.69 cv
.0509804 .65098 .564706 rgb
f
576.522 265.725 mo
576.522 265.725 li
576.494 265.713 576.466 265.702 576.438 265.69 cv
576.436 265.689 576.432 265.687 576.43 265.686 cv
575.51 265.296 574.599 264.886 573.693 264.466 cv
574.185 264.235 574.676 264.001 575.168 263.77 cv
575.612 264.427 576.063 265.079 576.522 265.725 cv
576.522 265.725 li
.396078 .545098 .219608 rgb
f
499.221 331.936 mo
501.156 327.822 502.998 323.65 504.662 319.364 cv
503 323.645 501.172 327.82 499.239 331.929 cv
499.233 331.931 499.227 331.934 499.221 331.936 cv
514.016 325.685 mo
514.291 325.089 514.584 324.5 514.843 323.896 cv
514.588 324.491 514.325 325.081 514.054 325.669 cv
514.041 325.675 514.029 325.68 514.016 325.685 cv
513.978 324.801 mo
514.268 324.502 514.556 324.2 514.843 323.896 cv
514.843 323.896 li
514.556 324.2 514.268 324.502 513.978 324.801 cv
.890196 .364706 .196078 rgb
f
571.514 301.882 mo
570.445 299.768 569.445 297.561 568.507 295.262 cv
569.446 297.563 570.453 299.763 571.526 301.878 cv
571.522 301.879 571.518 301.88 571.514 301.882 cv
493.41 301.248 mo
494.471 300.13 495.517 298.983 496.554 297.823 cv
496.56 297.82 496.564 297.819 496.57 297.816 cv
495.529 298.982 494.475 300.125 493.41 301.248 cv
.937255 .462745 .207843 rgb
f
566.781 273.6 mo
566.163 271.916 565.574 270.207 565.014 268.475 cv
565.017 268.473 565.018 268.473 565.02 268.472 cv
565.581 270.204 566.171 271.914 566.79 273.599 cv
566.787 273.599 566.784 273.6 566.781 273.6 cv
.0509804 .65098 .564706 rgb
f
567.278 274.933 mo
567.111 274.491 566.945 274.046 566.781 273.6 cv
566.784 273.6 566.787 273.599 566.79 273.599 cv
566.954 274.045 567.12 274.489 567.288 274.931 cv
567.285 274.932 567.282 274.932 567.278 274.933 cv
.0470588 .509804 .533333 rgb
f
574.394 290.23 mo
571.679 285.439 569.322 280.317 567.278 274.933 cv
567.282 274.932 567.285 274.932 567.288 274.931 cv
569.331 280.308 571.686 285.422 574.399 290.208 cv
574.398 290.215 574.396 290.223 574.394 290.23 cv
.937255 .462745 .207843 rgb
f
579.905 298.794 mo
577.921 296.078 576.088 293.218 574.394 290.23 cv
574.396 290.223 574.398 290.215 574.399 290.208 cv
576.096 293.202 577.933 296.066 579.921 298.788 cv
579.916 298.79 579.91 298.792 579.905 298.794 cv
.494118 .494118 .247059 rgb
f
568.927 295.527 mo
568.92 295.52 568.912 295.513 568.905 295.507 cv
568.912 295.513 568.92 295.52 568.927 295.527 cv
568.874 295.477 mo
568.86 295.464 568.846 295.451 568.832 295.437 cv
568.846 295.451 568.86 295.463 568.874 295.477 cv
568.817 295.423 mo
568.796 295.403 568.776 295.384 568.755 295.364 cv
568.776 295.384 568.796 295.403 568.817 295.423 cv
568.745 295.354 mo
568.727 295.337 568.709 295.32 568.691 295.302 cv
568.709 295.32 568.727 295.337 568.745 295.354 cv
568.68 295.292 mo
568.637 295.251 568.595 295.211 568.552 295.169 cv
568.595 295.211 568.637 295.251 568.68 295.292 cv
568.504 295.254 mo
568.49 295.222 568.477 295.188 568.464 295.156 cv
568.477 295.189 568.49 295.221 568.504 295.254 cv
568.546 295.164 mo
568.527 295.146 568.508 295.127 568.489 295.109 cv
568.508 295.127 568.527 295.146 568.546 295.164 cv
568.479 295.099 mo
568.458 295.078 568.437 295.058 568.416 295.038 cv
568.416 295.038 li
568.437 295.058 568.458 295.078 568.479 295.099 cv
.937255 .462745 .207843 rgb
f
499.239 331.929 mo
501.172 327.82 503 323.645 504.662 319.364 cv
504.68 319.316 504.699 319.268 504.717 319.22 cv
504.717 319.22 li
504.717 319.22 li
497.423 323.376 490.003 325.765 482.423 325.764 cv
481.472 325.764 480.517 325.727 479.56 325.65 cv
491.588 320.248 499.985 309.097 508.207 296.727 cv
508.207 296.727 li
508.207 296.727 li
503.339 298.796 498.384 300.133 493.41 301.248 cv
493.41 301.248 li
494.475 300.125 495.529 298.982 496.57 297.816 cv
519.599 288.393 542.52 278.775 565.014 268.475 cv
565.574 270.207 566.163 271.916 566.781 273.6 cv
566.945 274.046 567.111 274.491 567.278 274.933 cv
567.278 274.933 li
569.322 280.317 571.679 285.439 574.394 290.23 cv
576.088 293.218 577.921 296.078 579.905 298.794 cv
578.276 299.379 576.652 299.971 575.032 300.571 cv
572.929 299.057 570.893 297.386 568.927 295.527 cv
568.92 295.52 568.912 295.513 568.905 295.507 cv
568.895 295.497 568.884 295.487 568.874 295.477 cv
568.86 295.463 568.846 295.451 568.832 295.437 cv
568.827 295.432 568.822 295.427 568.817 295.423 cv
568.796 295.403 568.776 295.384 568.755 295.364 cv
568.752 295.361 568.748 295.357 568.745 295.354 cv
568.727 295.337 568.709 295.32 568.691 295.302 cv
568.687 295.299 568.684 295.296 568.68 295.292 cv
568.637 295.251 568.595 295.211 568.552 295.169 cv
568.55 295.168 568.548 295.166 568.546 295.164 cv
568.527 295.146 568.508 295.127 568.489 295.109 cv
568.486 295.105 568.482 295.102 568.479 295.099 cv
568.458 295.078 568.437 295.058 568.416 295.038 cv
568.416 295.038 li
568.416 295.038 li
568.432 295.077 568.448 295.117 568.464 295.156 cv
568.477 295.188 568.49 295.222 568.504 295.254 cv
568.505 295.256 568.506 295.259 568.507 295.262 cv
569.445 297.561 570.445 299.768 571.514 301.882 cv
552.029 309.239 533.052 317.555 514.054 325.669 cv
514.325 325.081 514.588 324.491 514.843 323.896 cv
514.843 323.896 li
514.843 323.896 li
514.843 323.896 li
514.556 324.2 514.268 324.502 513.978 324.801 cv
513.472 325.325 512.963 325.843 512.45 326.354 cv
508.051 328.23 503.649 330.093 499.239 331.929 cv
.396078 .545098 .219608 rgb
f
503.472 275.85 mo
504.44 274.666 505.392 273.458 506.335 272.237 cv
506.335 272.237 li
506.335 272.237 li
506.339 272.235 506.343 272.234 506.347 272.232 cv
505.402 273.457 504.443 274.663 503.472 275.85 cv
.0509804 .65098 .564706 rgb
f
503.472 275.85 mo
503.472 275.85 li
504.443 274.663 505.402 273.457 506.347 272.232 cv
509.377 270.903 512.41 269.582 515.445 268.268 cv
511.579 271.16 507.548 273.571 503.472 275.85 cv
.396078 .545098 .219608 rgb
f
520.667 218.344 mo
521.375 216.927 522.079 215.508 522.777 214.085 cv
522.785 214.085 li
522.091 215.506 521.391 216.923 520.684 218.336 cv
520.678 218.339 520.672 218.342 520.667 218.344 cv
.678431 .984314 .556863 rgb
f
522.785 214.085 mo
522.777 214.085 li
523.622 212.362 524.457 210.634 525.279 208.9 cv
524.458 210.633 523.626 212.361 522.785 214.085 cv
525.36 208.731 mo
526.332 206.679 527.313 204.592 528.291 202.479 cv
528.292 202.479 528.293 202.479 528.293 202.478 cv
527.315 204.592 526.333 206.678 525.36 208.731 cv
.988235 .988235 .686274 rgb
f
551.794 190.146 mo
551.79 190.146 li
551.739 189.938 551.689 189.73 551.639 189.522 cv
551.64 189.521 551.641 189.521 551.642 189.52 cv
551.693 189.728 551.743 189.937 551.794 190.146 cv
.678431 .984314 .556863 rgb
f
555.401 203.567 mo
554.056 199.115 552.871 194.598 551.79 190.146 cv
551.794 190.146 li
552.88 194.597 554.069 199.11 555.417 203.561 cv
555.411 203.563 555.407 203.565 555.401 203.567 cv
.988235 .988235 .686274 rgb
f
520.684 218.336 mo
521.391 216.923 522.091 215.506 522.785 214.085 cv
523.626 212.361 524.458 210.633 525.279 208.9 cv
525.306 208.844 525.333 208.787 525.36 208.731 cv
525.36 208.731 li
526.333 206.678 527.315 204.592 528.293 202.478 cv
536.102 198.203 543.888 193.891 551.639 189.522 cv
551.689 189.73 551.739 189.938 551.79 190.146 cv
552.871 194.598 554.056 199.115 555.401 203.567 cv
543.751 208.263 532.179 213.195 520.684 218.336 cv
.396078 .545098 .219608 rgb
f
522.143 246.45 mo
522.142 246.446 522.141 246.442 522.139 246.438 cv
523.313 243.875 524.398 241.255 525.384 238.575 cv
525.387 238.573 525.39 238.572 525.394 238.57 cv
524.407 241.256 523.319 243.883 522.143 246.45 cv
.988235 .988235 .686274 rgb
f
506.335 272.237 mo
512.373 264.415 517.844 255.818 522.139 246.438 cv
522.141 246.442 522.142 246.446 522.143 246.45 cv
517.849 255.825 512.38 264.414 506.347 272.232 cv
506.343 272.234 506.339 272.235 506.335 272.237 cv
517.135 267.536 mo
517.291 267.217 517.459 266.908 517.612 266.587 cv
517.462 266.901 517.311 267.214 517.159 267.526 cv
517.151 267.53 517.143 267.533 517.135 267.536 cv
.0509804 .65098 .564706 rgb
f
560.406 234.394 mo
560.176 233.804 559.948 233.212 559.721 232.619 cv
559.948 233.212 560.176 233.803 560.407 234.393 cv
560.406 234.394 li
.988235 .988235 .686274 rgb
f
566.249 247.988 mo
564.149 243.598 562.224 239.053 560.406 234.394 cv
560.407 234.393 li
562.228 239.053 564.163 243.592 566.269 247.981 cv
566.262 247.984 566.256 247.986 566.249 247.988 cv
.0509804 .65098 .564706 rgb
f
570.92 235.594 mo
570.913 235.585 570.907 235.578 570.9 235.569 cv
570.906 235.577 570.914 235.586 570.92 235.594 cv
.988235 .988235 .686274 rgb
f
562.477 222.155 mo
562.461 222.155 li
562.135 221.484 561.817 220.808 561.506 220.124 cv
561.51 220.122 561.515 220.119 561.519 220.117 cv
561.832 220.803 562.151 221.482 562.477 222.155 cv
.678431 .984314 .556863 rgb
f
570.867 235.53 mo
569.671 234.091 568.541 232.568 567.471 230.97 cv
567.47 230.966 567.469 230.962 567.467 230.957 cv
568.537 232.559 569.669 234.088 570.867 235.53 cv
562.975 223.197 mo
562.802 222.852 562.63 222.504 562.461 222.155 cv
562.477 222.155 li
562.643 222.497 562.811 222.837 562.98 223.175 cv
562.979 223.183 562.977 223.19 562.975 223.197 cv
.988235 .988235 .686274 rgb
f
567.471 230.97 mo
565.839 228.535 564.347 225.929 562.975 223.197 cv
562.977 223.19 562.979 223.183 562.98 223.175 cv
564.35 225.91 565.838 228.519 567.467 230.957 cv
567.469 230.962 567.47 230.966 567.471 230.97 cv
.0509804 .65098 .564706 rgb
f
506.347 272.232 mo
512.38 264.414 517.849 255.825 522.143 246.45 cv
523.319 243.883 524.407 241.256 525.394 238.57 cv
537.543 232.6 549.607 226.494 561.506 220.124 cv
561.817 220.808 562.135 221.484 562.461 222.155 cv
562.63 222.504 562.802 222.852 562.975 223.197 cv
564.347 225.929 565.839 228.535 567.471 230.97 cv
568.541 232.568 569.671 234.091 570.867 235.53 cv
570.878 235.543 570.889 235.556 570.9 235.569 cv
570.907 235.578 570.913 235.585 570.92 235.594 cv
570.939 235.616 570.957 235.637 570.975 235.659 cv
570.168 235.303 569.349 234.982 568.52 234.69 cv
566 233.802 563.393 233.184 560.792 232.694 cv
560.418 232.623 560.045 232.556 559.672 232.49 cv
559.672 232.49 li
559.672 232.49 li
559.688 232.533 559.704 232.576 559.721 232.619 cv
559.948 233.212 560.176 233.804 560.406 234.394 cv
562.224 239.053 564.149 243.598 566.249 247.988 cv
549.605 253.866 533.327 260.551 517.159 267.526 cv
517.311 267.214 517.462 266.901 517.612 266.587 cv
517.612 266.587 li
517.612 266.587 li
517.612 266.587 li
517.612 266.587 li
516.897 267.168 516.173 267.723 515.445 268.268 cv
515.445 268.268 li
515.445 268.268 li
512.41 269.582 509.377 270.903 506.347 272.232 cv
.396078 .545098 .219608 rgb
f
587.23 307.484 mo
587.222 307.481 587.215 307.478 587.208 307.475 cv
587.215 307.478 587.222 307.481 587.23 307.484 cv
587.26 307.462 mo
585.995 306.182 584.777 304.853 583.605 303.481 cv
583.604 303.476 583.603 303.47 583.602 303.465 cv
584.774 304.844 585.992 306.178 587.26 307.462 cv
.937255 .462745 .207843 rgb
f
583.605 303.481 mo
582.317 301.971 581.084 300.408 579.905 298.794 cv
579.91 298.792 579.916 298.79 579.921 298.788 cv
581.097 300.396 582.322 301.958 583.602 303.465 cv
583.603 303.47 583.604 303.476 583.605 303.481 cv
.494118 .494118 .247059 rgb
f
587.131 307.441 mo
587.125 307.438 587.119 307.435 587.113 307.433 cv
587.119 307.436 587.125 307.438 587.131 307.441 cv
.937255 .462745 .207843 rgb
f
587.324 307.526 mo
587.324 307.526 li
587.292 307.512 587.261 307.498 587.23 307.484 cv
587.222 307.481 587.215 307.478 587.208 307.475 cv
587.182 307.464 587.157 307.452 587.131 307.441 cv
587.125 307.438 587.119 307.436 587.113 307.433 cv
582.875 305.547 578.843 303.317 575.032 300.571 cv
576.652 299.971 578.276 299.379 579.905 298.794 cv
581.084 300.408 582.317 301.971 583.605 303.481 cv
584.777 304.853 585.995 306.182 587.26 307.462 cv
587.281 307.483 587.302 307.505 587.324 307.526 cv
.396078 .545098 .219608 rgb
f
494.509 341.54 mo
496.127 338.368 497.7 335.169 499.221 331.936 cv
499.227 331.934 499.233 331.931 499.239 331.929 cv
497.716 335.166 496.129 338.364 494.509 341.54 cv
.890196 .364706 .196078 rgb
f
494.509 341.54 mo
494.509 341.54 li
496.129 338.364 497.716 335.166 499.239 331.929 cv
503.649 330.093 508.051 328.23 512.45 326.354 cv
506.77 332.022 500.702 336.936 494.509 341.54 cv
.396078 .545098 .219608 rgb
f
797.227 330.149 mo
796.818 331.013 796.506 331.813 796.317 332.491 cv
796.652 331.822 796.954 331.028 797.227 330.149 cv
cp
.709804 .717647 .231373 rgb
f
766.19 341.061 mo
766.586 343.826 767.143 346.206 767.835 348.007 cv
768.524 345.75 767.709 343.065 766.19 341.061 cv
cp
f
815.259 335.293 mo
816.425 330.856 817.169 320.427 811.646 318.667 cv
806.113 316.904 799.757 324.805 797.227 330.149 cv
796.954 331.028 796.652 331.822 796.317 332.491 cv
796.506 331.813 796.818 331.013 797.227 330.149 cv
800.879 318.382 798.664 289.583 784.479 290.343 cv
767.578 291.248 763.709 323.74 766.19 341.061 cv
767.709 343.065 768.524 345.75 767.835 348.007 cv
767.143 346.206 766.586 343.826 766.19 341.061 cv
763.877 338.009 759.929 336.542 757.155 340.611 cv
751.526 326.736 734.872 329.676 730.829 342.643 cv
729.036 332.942 712.885 319.352 706.104 331.548 cv
701.354 340.092 706.735 372.59 721.007 370 cv
826.341 372 li
832.91 365.711 837.004 353.021 837.672 344.201 cv
838.822 329.005 825.042 322.394 815.259 335.293 cv
f
442.473 355.265 mo
442.29 330.013 415.159 336.892 407.14 354.463 cv
407.203 342.378 389.97 346.609 385.155 352.598 cv
379.522 328.049 356.77 359.715 363.007 363.333 cv
461.007 367.333 li
468.154 358.765 452.07 345.447 442.473 355.265 cv
f
287.001 347.665 mo
285.206 345.144 282.416 342.646 279.117 340.776 cv
275.792 338.919 271.984 337.749 268.578 337.582 cv
265.171 337.363 262.333 338.023 260.494 338.706 cv
259.565 339.025 258.866 339.381 258.393 339.624 cv
257.928 339.867 257.674 340 257.674 340 cv
257.674 340 257.93 340.117 258.4 340.333 cv
258.861 340.544 259.523 340.83 260.292 341.278 cv
261.839 342.115 263.779 343.466 265.449 345.219 cv
267.149 346.942 268.571 349.064 269.843 351.167 cv
271.116 353.288 272.261 355.43 273.565 357.242 cv
274.856 359.064 276.613 361.016 278.492 363.109 cv
280.357 365.204 282.347 367.415 284.117 369.504 cv
285.886 371.589 287.447 373.538 288.558 374.978 cv
289.672 376.45 290.341 377.333 290.341 377.333 cv
290.341 377.333 290.42 377.078 290.565 376.607 cv
290.711 376.133 290.903 375.44 291.105 374.559 cv
291.51 372.797 291.948 370.271 292.071 367.294 cv
292.204 364.32 291.996 360.9 291.215 357.452 cv
290.45 354.01 289.038 350.548 287.001 347.665 cv
1 .803922 .329412 rgb
f
295.897 331.276 mo
293.227 333.416 290.355 336.071 287.74 339.128 cv
285.122 342.174 282.802 345.666 281.241 349.298 cv
279.871 352.478 278.938 356.481 278.679 360.689 cv
278.385 364.876 278.857 369.29 279.977 373.009 cv
281.063 376.753 282.9 379.689 284.394 381.449 cv
284.78 381.877 285.128 382.262 285.433 382.6 cv
285.76 382.916 286.055 383.17 286.286 383.378 cv
286.752 383.78 287.007 384 287.007 384 cv
287.007 384 286.978 383.672 286.926 383.072 cv
286.902 382.782 286.871 382.427 286.836 382.012 cv
286.836 381.6 286.835 381.13 286.834 380.608 cv
286.868 378.543 287.27 375.821 288.225 373.002 cv
290.093 367.311 294.027 361.263 296.41 355.789 cv
297.584 353.048 298.623 349.778 299.64 346.365 cv
300.66 342.959 301.64 339.417 302.528 336.202 cv
303.426 332.93 304.212 330.069 304.774 328.026 cv
305.336 325.926 305.674 324.667 305.674 324.667 cv
305.674 324.667 304.57 325.254 302.793 326.368 cv
301.016 327.482 298.565 329.13 295.897 331.276 cv
f
307.352 348.289 mo
302.335 349.995 296.225 353.113 292.37 357.583 cv
288.983 361.478 286.555 368.314 285.928 374.016 cv
285.807 375.474 285.684 376.787 285.71 378.014 cv
285.746 379.245 285.764 380.294 285.881 381.191 cv
286.122 382.985 286.34 384 286.34 384 cv
286.34 384 287.074 383.287 288.297 382.101 cv
289.515 380.962 291.242 379.496 293.172 377.978 cv
297.07 374.913 301.922 371.779 304.88 368.34 cv
307.826 364.907 310.436 359.379 312.628 354.638 cv
313.713 352.278 314.641 350.117 315.3 348.548 cv
315.965 346.985 316.341 346 316.341 346 cv
316.341 346 315.356 346.15 313.734 346.497 cv
312.116 346.851 309.867 347.418 307.352 348.289 cv
f
281.022 366.635 mo
280.555 365.821 280.036 364.961 279.467 364.099 cv
278.876 363.282 278.24 362.459 277.569 361.666 cv
277.234 361.27 276.89 360.88 276.539 360.504 cv
276.183 360.149 275.82 359.805 275.453 359.478 cv
274.718 358.824 273.966 358.235 273.212 357.749 cv
270.174 355.882 265.741 354.907 262.141 354.485 cv
258.531 354.038 255.674 354 255.674 354 cv
255.674 354 257.052 356.361 259.25 359.17 cv
261.474 361.972 264.358 365.222 267.397 367.087 cv
268.679 367.947 270.424 368.567 272.147 369.199 cv
273.021 369.505 273.931 369.783 274.845 370.036 cv
275.733 370.313 276.603 370.588 277.46 370.829 cv
279.199 371.282 280.688 371.789 281.823 372.127 cv
282.975 372.463 283.674 372.667 283.674 372.667 cv
283.674 372.667 283.46 372.001 283.032 370.903 cv
282.598 369.817 281.982 368.227 281.022 366.635 cv
f
607.4 348.166 mo
605.905 346.032 603.941 344.098 601.972 342.73 cv
599.987 341.35 597.994 340.605 596.591 340.296 cv
595.885 340.136 595.325 340.064 594.932 340.043 cv
594.55 340.015 594.341 340 594.341 340 cv
594.341 340 594.468 340.161 594.701 340.455 cv
594.936 340.735 595.254 341.16 595.6 341.702 cv
596.303 342.779 597.061 344.323 597.612 346.084 cv
598.747 349.633 599.043 354.041 599.978 357.551 cv
600.943 361.025 603.004 365.436 604.66 369.227 cv
606.378 373.089 607.674 376 607.674 376 cv
607.674 376 609.088 373.211 610.164 369.08 cv
611.25 364.98 611.897 359.432 610.594 354.669 cv
610.036 352.594 608.912 350.295 607.4 348.166 cv
f
609.888 332.216 mo
609.359 330.833 609.007 330 609.007 330 cv
609.007 330 608.671 330.781 608.168 332.114 cv
607.669 333.445 606.983 335.344 606.35 337.54 cv
605.065 341.961 603.821 347.543 603.84 352.376 cv
603.788 356.593 605.104 362.033 605.974 366.532 cv
606.506 368.796 606.853 370.806 607.16 372.281 cv
607.48 373.767 607.674 374.667 607.674 374.667 cv
607.674 374.667 608.134 373.909 608.85 372.602 cv
609.555 371.295 610.59 369.428 611.434 367.215 cv
611.878 366.11 612.34 364.922 612.765 363.685 cv
613.145 362.452 613.506 361.173 613.824 359.882 cv
614.492 357.291 614.784 354.713 614.84 352.379 cv
614.823 347.751 613.324 342.135 611.855 337.737 cv
611.113 335.523 610.418 333.601 609.888 332.216 cv
f
620.465 344.256 mo
619.993 342.825 619.674 342 619.674 342 cv
619.674 342 619.327 342.796 618.75 344.12 cv
618.174 345.423 617.336 347.193 616.352 349.142 cv
614.419 353.047 611.765 357.681 610.609 361.916 cv
609.457 366.134 609.254 371.97 609.85 376.665 cv
610.13 379.004 610.581 381.026 610.975 382.436 cv
611.389 383.851 611.674 384.667 611.674 384.667 cv
611.674 384.667 612.048 383.933 612.68 382.695 cv
612.966 382.083 613.376 381.359 613.798 380.551 cv
614.206 379.743 614.708 378.854 615.218 377.908 cv
617.236 374.125 619.94 369.478 621.219 364.82 cv
622.335 360.749 622.478 354.848 621.771 350.101 cv
621.429 347.73 620.913 345.683 620.465 344.256 cv
f
642.442 347.186 mo
641.495 347.214 640.47 347.361 639.352 347.554 cv
634.866 348.272 629.404 350.721 625.833 354.067 cv
622.678 357.008 620.062 361.917 618.378 365.977 cv
617.525 368.013 616.858 369.85 616.395 371.18 cv
615.931 372.508 615.674 373.333 615.674 373.333 cv
615.674 373.333 618.727 371.888 622.441 369.686 cv
626.162 367.471 630.521 364.738 633.343 362.104 cv
636.174 359.473 638.926 355.526 641.693 352.535 cv
643.051 351.024 644.367 349.72 645.364 348.805 cv
646.39 347.886 647.007 347.333 647.007 347.333 cv
647.007 347.333 646.235 347.234 644.872 347.157 cv
644.181 347.097 643.38 347.14 642.442 347.186 cv
f
600.424 366.943 mo
599.807 366.223 599.152 365.516 598.482 364.768 cv
597.815 363.987 597.122 363.216 596.412 362.485 cv
594.996 361.044 593.472 359.573 591.944 358.599 cv
590.352 357.566 588.482 356.691 586.356 355.984 cv
585.31 355.63 584.248 355.317 583.207 355.044 cv
582.129 354.794 581.065 354.596 580.073 354.429 cv
578.115 354.052 576.271 354.023 575.017 353.992 cv
573.752 353.97 573.007 354 573.007 354 cv
573.007 354 573.46 354.565 574.223 355.518 cv
574.977 356.469 576.054 357.622 577.207 359.126 cv
577.793 359.852 578.422 360.602 579.083 361.343 cv
579.741 362.115 580.432 362.922 581.155 363.676 cv
582.585 365.159 584.206 366.687 585.879 367.775 cv
587.418 368.759 589.293 369.633 591.417 370.31 cv
592.474 370.649 593.551 370.949 594.608 371.211 cv
595.677 371.465 596.787 371.622 597.794 371.774 cv
599.794 372.118 601.668 372.102 602.957 372.078 cv
604.249 372.057 605.007 372 605.007 372 cv
605.007 372 604.494 371.437 603.641 370.502 cv
602.797 369.584 601.638 368.428 600.424 366.943 cv
f
603.55 368.621 mo
603.537 367.882 603.506 367.131 603.459 366.361 cv
603.423 365.565 603.361 364.765 603.262 363.987 cv
603.068 362.455 602.69 360.843 602.082 359.603 cv
601.751 358.95 601.322 358.298 600.828 357.66 cv
600.581 357.341 600.318 357.026 600.042 356.716 cv
599.744 356.401 599.427 356.09 599.106 355.79 cv
598.461 355.187 597.785 354.619 597.109 354.096 cv
596.367 353.586 595.63 353.127 594.931 352.724 cv
593.584 351.885 592.144 351.427 591.205 351.108 cv
590.246 350.799 589.674 350.667 589.674 350.667 cv
589.674 350.667 589.754 351.244 589.887 352.212 cv
589.956 352.665 590.038 353.209 590.131 353.823 cv
590.173 354.124 590.238 354.416 590.27 354.751 cv
590.301 355.084 590.333 355.432 590.366 355.791 cv
590.436 356.497 590.52 357.22 590.628 357.934 cv
590.719 358.67 590.796 359.459 590.931 360.193 cv
591.21 361.624 591.553 363.21 592.207 364.448 cv
592.789 365.636 593.715 366.799 594.892 368.001 cv
595.477 368.597 596.099 369.172 596.729 369.714 cv
597.375 370.261 598.069 370.777 598.713 371.238 cv
599.973 372.178 601.288 372.865 602.198 373.316 cv
603.112 373.77 603.674 374 603.674 374 cv
603.674 374 603.662 373.392 603.643 372.387 cv
603.62 371.396 603.547 370.12 603.55 368.621 cv
f
803.703 377.177 mo
803.222 371.472 802.775 364.39 801.346 358.929 cv
799.987 353.436 797.041 346.917 794.492 341.695 cv
791.922 336.488 789.674 332.667 789.674 332.667 cv
789.674 332.667 789.181 336.826 789.041 342.519 cv
788.877 348.206 789.158 355.473 790.681 361.62 cv
792.086 367.008 795.258 373.629 798.413 378.692 cv
799.914 381.245 801.457 383.394 802.553 384.916 cv
803.652 386.439 804.341 387.333 804.341 387.333 cv
804.341 387.333 804.285 386.23 804.192 384.393 cv
804.069 382.589 803.898 380.063 803.703 377.177 cv
f
818.913 312.306 mo
818.488 312.684 818.003 313.115 817.463 313.595 cv
815.342 315.558 812.549 318.592 809.882 322.488 cv
807.225 326.378 804.652 331.083 802.66 336.044 cv
800.669 341.002 799.213 346.195 798.498 350.936 cv
797.784 355.678 797.655 361.072 798.106 366.399 cv
798.551 371.728 799.646 376.986 801.062 381.483 cv
802.48 385.99 804.293 389.701 805.768 392.188 cv
806.149 392.802 806.493 393.353 806.794 393.836 cv
807.104 394.31 807.402 394.699 807.628 395.02 cv
808.089 395.654 808.34 396 808.34 396 cv
808.34 396 808.25 395.607 808.084 394.882 cv
808.001 394.524 807.899 394.084 807.78 393.569 cv
807.686 393.051 807.579 392.457 807.46 391.796 cv
807.011 389.158 806.626 385.447 806.588 381.173 cv
806.539 376.897 806.863 372.058 807.378 367.149 cv
807.921 362.232 808.682 357.243 809.376 352.571 cv
809.992 348.47 810.627 343.753 811.473 338.984 cv
812.301 334.21 813.419 329.42 814.697 325.174 cv
815.963 320.924 817.498 317.283 818.767 314.716 cv
819.417 313.447 819.96 312.417 820.381 311.742 cv
820.786 311.047 821.007 310.667 821.007 310.667 cv
821.007 310.667 820.668 310.927 820.047 311.406 cv
819.74 311.65 819.346 311.94 818.913 312.306 cv
f
814.069 346.257 mo
814.238 344.851 814.341 344 814.341 344 cv
814.341 344 813.675 344.49 812.573 345.413 cv
811.5 346.347 810.064 347.787 808.682 349.681 cv
805.836 353.42 803.602 359.099 803.436 363.73 cv
803.247 368.38 805.033 373.888 807.015 377.898 cv
808.004 379.92 809.005 381.611 809.757 382.796 cv
810.519 383.979 811.007 384.667 811.007 384.667 cv
811.007 384.667 811.2 383.878 811.465 382.574 cv
811.722 381.291 812.083 379.486 812.502 377.393 cv
813.261 373.255 814.274 368.297 814.428 364.146 cv
814.568 360.501 813.824 355.749 813.835 351.6 cv
813.819 349.538 813.927 347.642 814.069 346.257 cv
f
818.848 346.351 mo
818.16 346.875 817.454 347.514 816.719 348.24 cv
813.725 351.093 810.765 355.728 809.862 360.183 cv
809.054 364.1 809.865 369.273 811.08 373.193 cv
811.674 375.168 812.328 376.867 812.828 378.075 cv
813.335 379.281 813.674 380 813.674 380 cv
813.674 380 814.023 379.299 814.546 378.142 cv
815.077 376.987 815.794 375.379 816.568 373.586 cv
818.088 369.965 819.949 365.762 820.638 362.391 cv
821.337 359.02 821.221 354.628 821.559 350.858 cv
821.694 348.977 821.889 347.268 822.057 346.023 cv
822.234 344.76 822.34 344 822.34 344 cv
822.34 344 821.705 344.351 820.651 345.033 cv
820.11 345.366 819.522 345.819 818.848 346.351 cv
f
826.411 368.271 mo
826.379 367.762 826.347 367.247 826.315 366.73 cv
826.233 365.691 826.11 364.63 825.963 363.575 cv
825.861 362.539 825.776 361.521 825.658 360.532 cv
825.373 358.54 825.306 356.789 825.195 355.473 cv
825.078 354.141 825.007 353.333 825.007 353.333 cv
825.007 353.333 824.461 353.882 823.587 354.863 cv
822.73 355.846 821.441 357.259 820.359 359.049 cv
819.788 359.936 819.195 360.901 818.621 361.919 cv
818.117 362.941 817.626 364.013 817.177 365.105 cv
816.953 365.652 816.739 366.203 816.539 366.755 cv
816.368 367.304 816.214 367.854 816.076 368.399 cv
815.799 369.491 815.59 370.566 815.474 371.59 cv
815.132 375.678 816.263 380.727 817.628 384.594 cv
818.282 386.545 818.971 388.22 819.485 389.42 cv
819.998 390.618 820.34 391.333 820.34 391.333 cv
820.34 391.333 820.686 390.66 821.204 389.521 cv
821.723 388.383 822.404 386.771 823.124 384.925 cv
824.504 381.196 826.099 376.614 826.428 372.6 cv
826.529 371.727 826.55 370.783 826.512 369.791 cv
826.493 369.295 826.458 368.787 826.411 368.271 cv
f
804.698 381.42 mo
804.508 378.694 803.916 375.609 802.944 372.546 cv
801.969 369.483 800.534 366.516 798.855 363.983 cv
795.858 359.538 790.501 355.176 785.952 352.216 cv
783.676 350.716 781.605 349.505 780.105 348.659 cv
778.602 347.816 777.674 347.333 777.674 347.333 cv
777.674 347.333 778.084 348.269 778.807 349.788 cv
779.526 351.309 780.555 353.415 781.745 355.765 cv
784.171 360.466 787.022 366.121 789.746 370.15 cv
792.469 374.182 796.522 378.698 799.398 382.919 cv
800.121 383.963 800.84 384.952 801.406 385.883 cv
801.992 386.808 802.567 387.635 802.961 388.355 cv
803.823 389.799 804.341 390.667 804.341 390.667 cv
804.341 390.667 804.489 389.729 804.663 388.095 cv
804.771 387.272 804.802 386.293 804.82 385.167 cv
804.826 384.605 804.841 384.003 804.826 383.375 cv
804.785 382.75 804.742 382.097 804.698 381.42 cv
f
764.425 353.716 mo
763.189 352.886 761.964 352.314 761.09 351.923 cv
760.217 351.534 759.674 351.333 759.674 351.333 cv
759.674 351.333 759.661 351.905 759.641 352.848 cv
759.63 353.775 759.657 355.016 759.622 356.397 cv
759.69 359.124 759.511 362.219 760.291 364.247 cv
760.454 364.769 760.709 365.291 761.036 365.817 cv
761.197 366.081 761.385 366.343 761.571 366.61 cv
761.739 366.879 761.921 367.149 762.115 367.42 cv
762.501 367.962 762.945 368.506 763.392 369.048 cv
763.79 369.596 764.214 370.141 764.635 370.668 cv
765.525 371.717 766.187 372.717 766.756 373.456 cv
767.328 374.21 767.674 374.667 767.674 374.667 cv
767.674 374.667 767.997 374.236 768.477 373.458 cv
768.928 372.685 769.663 371.537 770.116 370.155 cv
770.367 369.462 770.608 368.705 770.818 367.904 cv
771.016 367.106 771.103 366.285 771.182 365.438 cv
771.374 363.73 771.112 362.051 770.65 360.546 cv
769.679 357.954 766.999 355.277 764.425 353.716 cv
f
753.261 356.486 mo
752.194 355.518 751.111 354.875 750.314 354.508 cv
749.497 354.147 749.007 354 749.007 354 cv
749.007 354 748.93 354.502 748.802 355.327 cv
748.66 356.123 748.401 357.17 748.039 358.22 cv
747.344 360.348 746.165 362.399 746.173 364.125 cv
746.172 365.84 747.298 368.31 748.303 370.578 cv
749.32 372.822 750.34 374.667 750.34 374.667 cv
750.34 374.667 751.989 373.507 753.704 371.623 cv
755.423 369.767 757.16 366.964 757.173 364.143 cv
757.202 361.686 755.425 358.386 753.261 356.486 cv
f
363.077 371.69 mo
362.931 370.926 362.627 370.21 362.334 369.372 cv
361.156 365.99 358.807 362.361 356.296 360.362 cv
353.784 358.42 349.899 357.299 346.769 356.557 cv
345.154 356.201 343.733 355.888 342.716 355.663 cv
341.65 355.457 341.007 355.333 341.007 355.333 cv
341.007 355.333 341.176 355.93 341.53 356.91 cv
341.885 357.879 342.419 359.296 343.192 360.742 cv
344.728 363.731 347.003 367.085 349.562 369.06 cv
351.749 370.806 355.373 371.911 358.259 373.069 cv
358.984 373.357 359.762 373.587 360.367 373.87 cv
361.003 374.154 361.572 374.408 362.047 374.62 cv
363.059 375.064 363.674 375.333 363.674 375.333 cv
363.674 375.333 363.622 374.701 363.448 373.624 cv
363.361 373.085 363.241 372.432 363.077 371.69 cv
f
366.049 360.326 mo
363.994 356.996 359.777 353.634 355.971 351.774 cv
354.07 350.827 352.317 350.205 351.052 349.84 cv
349.769 349.492 349.007 349.333 349.007 349.333 cv
349.007 349.333 349.354 350.014 349.931 351.145 cv
350.491 352.263 351.218 353.813 351.958 355.54 cv
353.478 358.993 354.871 363.189 356.715 366.145 cv
358.557 369.098 361.821 372.378 364.584 375.164 cv
367.353 377.921 369.674 380 369.674 380 cv
369.674 380 369.976 377.066 369.691 373.109 cv
369.431 369.166 368.41 364.122 366.049 360.326 cv
f
379.853 354.678 mo
379.742 353.842 379.674 353.333 379.674 353.333 cv
379.674 353.333 379.197 353.451 378.427 353.716 cv
377.671 353.988 376.551 354.385 375.461 355.026 cv
373.177 356.247 370.747 358.366 369.817 360.71 cv
369.042 362.768 369.434 365.842 370.135 368.283 cv
370.808 370.74 371.674 372.667 371.674 372.667 cv
371.674 372.667 373.436 371.552 375.365 369.987 cv
377.279 368.394 379.394 366.5 380.079 364.67 cv
380.808 362.879 380.443 360.152 380.22 357.789 cv
380.055 356.579 379.96 355.502 379.853 354.678 cv
f
386.547 360.375 mo
386.418 359.312 386.341 358.667 386.341 358.667 cv
386.341 358.667 385.817 359.018 384.984 359.657 cv
384.156 360.297 382.978 361.225 381.844 362.41 cv
379.453 364.745 377.084 368.065 376.265 371.043 cv
375.503 374.02 375.977 377.98 376.721 381.116 cv
377.442 384.263 378.341 386.667 378.341 386.667 cv
378.341 386.667 380.108 384.952 382.053 382.477 cv
383.985 379.984 386.138 376.834 386.903 373.841 cv
387.621 371.244 387.23 367.532 386.967 364.414 cv
386.8 362.813 386.653 361.394 386.547 360.375 cv
f
90.8962 360.606 mo
89.1579 356.889 86.5203 352.406 83.3155 349.701 cv
80.157 346.988 74.9348 344.935 70.5711 344.347 cv
69.45 344.239 68.4481 344.127 67.5151 344.139 cv
66.5746 344.168 65.7809 344.177 65.1054 344.275 cv
63.752 344.487 63.0072 344.667 63.0072 344.667 cv
63.0072 344.667 63.5844 345.13 64.5582 345.911 cv
65.4893 346.699 66.6907 347.851 67.9463 349.196 cv
70.4799 351.911 73.1736 355.526 76.2132 358.1 cv
78.8777 360.341 83.188 362.587 86.8983 364.385 cv
88.749 365.28 90.4446 366.025 91.6755 366.539 cv
92.9097 367.051 93.674 367.333 93.674 367.333 cv
93.674 367.333 93.4097 366.579 92.9329 365.366 cv
92.4571 364.15 91.7712 362.47 90.8962 360.606 cv
f
98.292 362.655 mo
96.6775 360.235 93.2968 358.181 90.3052 357.449 cv
88.8639 356.991 87.492 356.845 86.5358 356.759 cv
85.5792 356.674 85.0071 356.667 85.0071 356.667 cv
85.0071 356.667 85.1829 357.211 85.4731 358.11 cv
85.7592 358.988 86.1821 360.126 86.5248 361.444 cv
86.7118 362.061 86.9101 362.714 87.1133 363.384 cv
87.2791 364.061 87.4589 364.72 87.6633 365.335 cv
87.8915 365.934 88.0539 366.551 88.2583 367.103 cv
88.4622 367.655 88.7294 368.135 89.0124 368.562 cv
89.258 369.008 89.5941 369.431 90.0044 369.844 cv
90.2074 370.052 90.4372 370.253 90.6679 370.459 cv
90.8689 370.676 91.0854 370.892 91.315 371.107 cv
91.7715 371.538 92.2926 371.965 92.8176 372.4 cv
93.2734 372.853 93.758 373.307 94.2424 373.753 cv
95.277 374.629 95.9991 375.541 96.643 376.214 cv
97.2852 376.911 97.6738 377.333 97.6738 377.333 cv
97.6738 377.333 97.955 376.883 98.3572 376.058 cv
98.5579 375.646 98.7884 375.137 99.0259 374.541 cv
99.1396 374.244 99.2766 373.921 99.3731 373.586 cv
99.4564 373.255 99.5371 372.904 99.6123 372.535 cv
99.7626 371.797 99.8913 370.989 99.978 370.133 cv
100.045 369.286 99.9681 368.437 99.8879 367.552 cv
99.7705 365.753 99.0912 364.105 98.292 362.655 cv
f
109.512 346.738 mo
109.38 343.779 109.007 341.333 109.007 341.333 cv
109.007 341.333 106.979 342.421 104.586 344.288 cv
103.988 344.755 103.368 345.269 102.753 345.824 cv
102.161 346.39 101.596 347.008 101.054 347.652 cv
99.9742 348.942 99.029 350.361 98.4457 351.807 cv
98.0005 353.107 97.8189 354.718 97.8029 356.372 cv
97.795 357.199 97.829 358.039 97.8919 358.859 cv
97.9721 359.687 98.1278 360.513 98.2706 361.281 cv
98.8663 364.368 99.6738 366.667 99.6738 366.667 cv
99.6738 366.667 101.539 365.02 103.54 362.865 cv
104.043 362.326 104.541 361.75 105.048 361.161 cv
105.586 360.58 106.108 359.977 106.588 359.366 cv
107.548 358.142 108.335 356.882 108.753 355.649 cv
109.246 354.437 109.473 352.961 109.547 351.403 cv
109.585 350.624 109.583 349.825 109.556 349.032 cv
109.557 348.25 109.546 347.479 109.512 346.738 cv
f
124.389 363.387 mo
124.146 362.443 123.813 361.507 123.513 360.642 cv
122.281 357.167 121.007 354.667 121.007 354.667 cv
121.007 354.667 119.53 357.123 118.026 360.233 cv
117.645 361.013 117.285 361.83 116.906 362.675 cv
116.495 363.525 116.104 364.398 115.756 365.273 cv
115.06 367.023 114.539 368.776 114.375 370.384 cv
113.941 373.656 114.786 377.83 115.706 381.301 cv
116.633 384.743 117.674 387.333 117.674 387.333 cv
117.674 387.333 119.343 385.226 121.128 382.248 cv
122.913 379.301 124.816 375.332 125.294 371.709 cv
125.463 370.082 125.309 368.174 124.986 366.253 cv
124.824 365.292 124.619 364.326 124.389 363.387 cv
f
54.112 358.838 mo
53.9124 358.287 53.6808 357.738 53.4166 357.22 cv
52.8889 356.184 52.2287 355.266 51.4594 354.698 cv
49.8891 353.685 47.2268 353.524 45.0114 353.84 cv
42.788 354.122 41.0072 354.667 41.0072 354.667 cv
41.0072 354.667 41.3682 356.478 42.0739 358.492 cv
42.4389 359.491 42.8621 360.566 43.3546 361.516 cv
43.8562 362.46 44.4653 363.255 45.2003 363.743 cv
45.8051 364.197 46.6969 364.432 47.724 364.552 cv
48.2373 364.612 48.7839 364.642 49.3416 364.654 cv
49.8796 364.679 50.4019 364.706 50.932 364.713 cv
53.0322 364.747 55.0072 364.667 55.0072 364.667 cv
55.0072 364.667 55.04 362.852 54.5637 360.584 cv
54.4449 360.02 54.2984 359.422 54.112 358.838 cv
cp
f
698.15 347.714 mo
697.828 347.087 697.47 346.497 697.09 345.932 cv
697.414 346.529 697.763 347.124 698.15 347.714 cv
cp
.117647 .827451 1 rgb
f
0 480 mo
900 480 li
900 361.599 li
0 361.599 li
0 480 li
1 .772549 .203922 rgb
f
0 480 mo
900 480 li
900 366.807 li
0 366.807 li
0 480 li
.854902 .266667 .12549 rgb
f
861.149 449.633 mo
861.144 449.633 861.14 449.633 861.135 449.633 cv
854.308 449.628 847.065 446.724 840.757 443.274 cv
840.753 443.272 840.75 443.27 840.747 443.268 cv
840.691 443.238 840.636 443.208 840.581 443.177 cv
840.57 443.172 840.559 443.165 840.549 443.16 cv
840.495 443.13 840.441 443.1 840.388 443.071 cv
840.364 443.058 840.341 443.045 840.316 443.031 cv
840.298 443.021 840.278 443.01 840.26 443 cv
803.643 418.589 770.649 392.884 738.513 366.807 cv
837.329 366.807 li
837.329 366.807 li
849.074 388.866 859.677 411.296 869.26 435 cv
869.867 437.43 870.843 440.966 870.844 443.817 cv
870.844 445.659 870.437 447.215 869.26 448 cv
869.26 448 li
866.689 449.142 863.956 449.632 861.152 449.633 cv
861.151 449.633 861.15 449.633 861.149 449.633 cv
.737255 .215686 .113725 rgb
f
900 480 mo
833.596 480 li
820.376 472.672 807.895 463.759 796.259 454 cv
757.341 423.572 721.921 392.152 682.217 366.807 cv
738.513 366.807 li
770.649 392.884 803.643 418.589 840.26 443 cv
840.278 443.01 840.298 443.021 840.316 443.031 cv
840.341 443.045 840.364 443.058 840.388 443.071 cv
840.441 443.1 840.495 443.13 840.549 443.16 cv
840.559 443.165 840.57 443.172 840.581 443.177 cv
840.636 443.208 840.691 443.238 840.747 443.268 cv
840.75 443.27 840.753 443.272 840.757 443.274 cv
847.066 446.724 854.307 449.629 861.135 449.633 cv
861.14 449.633 861.144 449.633 861.149 449.633 cv
861.149 449.633 li
861.149 449.633 li
861.15 449.633 861.151 449.633 861.152 449.633 cv
863.956 449.632 866.689 449.142 869.26 448 cv
869.26 448 li
870.437 447.215 870.844 445.659 870.844 443.817 cv
870.843 440.966 869.867 437.43 869.26 435 cv
859.677 411.296 849.074 388.866 837.329 366.807 cv
900 366.807 li
900 480 li
.796078 .243137 .121569 rgb
f
861.149 449.633 mo
861.144 449.633 861.14 449.633 861.135 449.633 cv
861.14 449.633 861.144 449.633 861.149 449.633 cv
861.149 449.633 li
861.152 449.633 mo
863.956 449.632 866.689 449.142 869.26 448 cv
866.689 449.142 863.956 449.632 861.152 449.633 cv
870.844 443.817 mo
870.843 440.966 869.867 437.43 869.26 435 cv
859.677 411.296 849.074 388.866 837.329 366.807 cv
837.329 366.807 li
849.074 388.866 859.677 411.296 869.26 435 cv
869.867 437.43 870.843 440.966 870.844 443.817 cv
840.757 443.274 mo
840.753 443.272 840.75 443.27 840.747 443.268 cv
840.75 443.27 840.753 443.272 840.757 443.274 cv
840.581 443.177 mo
840.57 443.172 840.559 443.165 840.549 443.16 cv
840.559 443.165 840.57 443.172 840.581 443.177 cv
840.388 443.071 mo
840.364 443.058 840.341 443.045 840.316 443.031 cv
840.341 443.045 840.364 443.058 840.388 443.071 cv
.686274 .196078 .109804 rgb
f
807.485 480 mo
739.779 480 li
712.073 454.144 685.91 427.394 664.259 397 cv
664.259 397 li
664.287 396.99 664.315 396.979 664.343 396.969 cv
664.354 396.965 664.366 396.96 664.377 396.956 cv
664.387 396.953 664.396 396.949 664.405 396.946 cv
666.355 396.235 668.305 395.938 670.24 395.938 cv
670.241 395.938 670.243 395.938 670.244 395.938 cv
670.248 395.938 670.252 395.938 670.255 395.938 cv
675.897 395.941 681.413 398.469 686.442 400.648 cv
686.462 400.656 686.482 400.665 686.501 400.673 cv
686.588 400.711 686.674 400.748 686.76 400.785 cv
686.782 400.795 686.805 400.804 686.827 400.814 cv
686.972 400.876 687.116 400.938 687.26 401 cv
687.26 401 li
729.949 422.695 771.162 448.804 807.485 480 cv
.737255 .215686 .113725 rgb
f
833.596 480 mo
807.485 480 li
771.162 448.804 729.949 422.695 687.26 401 cv
687.26 401 li
687.116 400.938 686.972 400.876 686.827 400.814 cv
686.805 400.804 686.782 400.795 686.76 400.785 cv
686.674 400.748 686.588 400.711 686.501 400.673 cv
686.482 400.665 686.462 400.656 686.442 400.648 cv
681.412 398.469 675.898 395.941 670.255 395.938 cv
670.252 395.938 670.248 395.938 670.244 395.938 cv
670.244 395.938 li
670.244 395.938 li
670.243 395.938 670.241 395.938 670.24 395.938 cv
668.305 395.938 666.356 396.235 664.405 396.946 cv
664.396 396.949 664.387 396.953 664.377 396.956 cv
664.366 396.96 664.354 396.965 664.343 396.969 cv
664.315 396.979 664.287 396.99 664.259 397 cv
664.259 397 li
664.259 397 li
664.259 397 li
685.91 427.394 712.073 454.144 739.779 480 cv
729.616 480 li
661.387 429.985 586.626 391.808 507.422 366.807 cv
682.217 366.807 li
721.921 392.152 757.341 423.572 796.259 454 cv
807.895 463.759 820.376 472.672 833.596 480 cv
.796078 .243137 .121569 rgb
f
807.485 480 mo
807.485 480 li
771.162 448.804 729.949 422.695 687.26 401 cv
687.26 401 li
687.26 401 li
729.949 422.695 771.162 448.804 807.485 480 cv
686.827 400.814 mo
686.805 400.804 686.782 400.795 686.76 400.785 cv
686.782 400.795 686.805 400.804 686.827 400.814 cv
686.501 400.673 mo
686.482 400.665 686.462 400.656 686.442 400.648 cv
686.462 400.656 686.482 400.665 686.501 400.673 cv
664.259 397 mo
664.259 397 li
664.259 397 li
664.259 397 li
664.343 396.969 mo
664.354 396.965 664.366 396.96 664.377 396.956 cv
664.366 396.96 664.354 396.965 664.343 396.969 cv
664.405 396.946 mo
666.356 396.235 668.305 395.938 670.24 395.938 cv
668.305 395.938 666.355 396.235 664.405 396.946 cv
670.255 395.938 mo
670.252 395.938 670.248 395.938 670.244 395.938 cv
670.244 395.938 li
670.248 395.938 670.252 395.938 670.255 395.938 cv
.686274 .196078 .109804 rgb
f
375.611 435.273 mo
374.61 435.273 371.941 433.965 370.285 433.139 cv
370.277 433.135 370.27 433.131 370.263 433.128 cv
370.202 433.097 370.142 433.067 370.084 433.038 cv
370.058 433.025 370.032 433.013 370.007 433 cv
349.791 413.458 332.76 391.187 320.126 366.807 cv
362.796 366.807 li
362.796 366.807 li
370.116 383.965 377.996 401.262 377.996 419.558 cv
377.997 424.623 377.393 429.764 376.007 435 cv
376.007 435 li
376.007 435.191 375.862 435.272 375.613 435.272 cv
375.612 435.272 375.612 435.273 375.611 435.273 cv
.737255 .215686 .113725 rgb
f
459.007 421 mo
435.42 406.848 413.574 387.826 394.079 366.807 cv
422.278 366.807 li
422.278 366.807 li
431.086 376.099 439.714 385.716 448.007 396 cv
452.685 402.549 459.113 409.973 459.104 419.091 cv
459.103 419.719 459.072 420.355 459.007 421 cv
f
636.95 480 mo
519.489 480 li
489.365 459.816 456.196 444.293 420.26 436 cv
419.552 436 418.845 439.499 418.845 442.61 cv
418.845 443.899 418.967 445.121 419.259 446 cv
425.187 457.732 431.638 469.035 438.498 480 cv
346.705 480 li
344.23 477.331 341.751 474.663 339.26 472 cv
310.26 441 283.26 409 271.26 368 cv
271.138 367.605 271.022 367.208 270.91 366.807 cv
320.126 366.807 li
332.76 391.187 349.791 413.458 370.007 433 cv
370.032 433.013 370.058 433.025 370.084 433.038 cv
370.142 433.067 370.202 433.097 370.263 433.128 cv
370.27 433.131 370.277 433.135 370.285 433.139 cv
371.941 433.965 374.61 435.272 375.611 435.273 cv
375.611 435.273 li
375.611 435.273 li
375.612 435.273 375.612 435.272 375.613 435.272 cv
375.862 435.272 376.007 435.191 376.007 435 cv
376.007 435 li
377.393 429.764 377.997 424.623 377.996 419.558 cv
377.996 401.262 370.116 383.965 362.796 366.807 cv
394.079 366.807 li
413.574 387.826 435.42 406.848 459.007 421 cv
459.072 420.355 459.103 419.719 459.104 419.091 cv
459.113 409.973 452.685 402.549 448.007 396 cv
439.714 385.716 431.086 376.099 422.278 366.807 cv
445.972 366.807 li
445.972 366.807 li
514.28 396.421 576.565 436.837 636.95 480 cv
.780392 .247059 .12549 rgb
f
375.611 435.273 mo
374.61 435.272 371.941 433.965 370.285 433.139 cv
371.941 433.965 374.61 435.273 375.611 435.273 cv
375.611 435.273 li
375.613 435.272 mo
375.862 435.272 376.007 435.191 376.007 435 cv
376.007 435.191 375.862 435.272 375.613 435.272 cv
370.263 433.128 mo
370.202 433.097 370.142 433.067 370.084 433.038 cv
370.142 433.067 370.202 433.097 370.263 433.128 cv
377.996 419.558 mo
377.996 401.262 370.116 383.965 362.796 366.807 cv
362.796 366.807 li
370.116 383.965 377.996 401.262 377.996 419.558 cv
.670588 .2 .113725 rgb
f
519.489 480 mo
438.498 480 li
431.638 469.035 425.187 457.732 419.259 446 cv
418.967 445.121 418.845 443.899 418.845 442.61 cv
418.845 439.499 419.552 436 420.26 436 cv
456.196 444.293 489.365 459.816 519.489 480 cv
.737255 .215686 .113725 rgb
f
729.616 480 mo
636.95 480 li
576.565 436.837 514.28 396.421 445.972 366.807 cv
507.422 366.807 li
586.626 391.808 661.387 429.985 729.616 480 cv
f
242.684 429.627 mo
242.682 429.627 242.679 429.627 242.677 429.627 cv
238.342 429.626 233.754 428.693 230.455 427.096 cv
230.389 427.064 230.325 427.033 230.26 427 cv
230.26 427 li
193.208 409.304 157.384 389.461 123.456 366.807 cv
241.476 366.807 li
241.476 366.807 li
249.459 383.512 255.377 400.735 255.387 418.478 cv
255.387 419.982 255.346 421.489 255.26 423 cv
255.26 423 li
254.674 427.684 248.945 429.626 242.691 429.627 cv
242.689 429.627 242.686 429.627 242.684 429.627 cv
.796078 .243137 .121569 rgb
f
346.705 480 mo
176.616 480 li
139.94 444.71 105.525 407.177 74.1774 366.807 cv
123.456 366.807 li
157.384 389.461 193.208 409.304 230.26 427 cv
230.26 427 li
230.325 427.033 230.389 427.064 230.455 427.096 cv
233.755 428.694 238.341 429.627 242.677 429.627 cv
242.679 429.627 242.682 429.627 242.684 429.627 cv
242.684 429.627 li
242.684 429.627 li
242.686 429.627 242.689 429.627 242.691 429.627 cv
248.945 429.626 254.674 427.685 255.26 423 cv
255.26 423 li
255.346 421.489 255.387 419.982 255.387 418.478 cv
255.377 400.735 249.459 383.512 241.476 366.807 cv
270.91 366.807 li
271.022 367.208 271.138 367.605 271.26 368 cv
283.26 409 310.26 441 339.26 472 cv
341.751 474.663 344.23 477.331 346.705 480 cv
.737255 .215686 .113725 rgb
f
242.684 429.627 mo
242.682 429.627 242.679 429.627 242.677 429.627 cv
242.679 429.627 242.682 429.627 242.684 429.627 cv
242.684 429.627 li
242.691 429.627 mo
248.945 429.626 254.674 427.684 255.26 423 cv
254.674 427.685 248.945 429.626 242.691 429.627 cv
230.455 427.096 mo
230.389 427.064 230.325 427.033 230.26 427 cv
230.325 427.033 230.389 427.064 230.455 427.096 cv
255.387 418.478 mo
255.377 400.735 249.459 383.512 241.476 366.807 cv
241.476 366.807 li
249.459 383.512 255.377 400.735 255.387 418.478 cv
.686274 .196078 .109804 rgb
f
107.092 480 mo
45.2479 480 li
35.6397 447.922 27.5639 415.517 21.2596 383 cv
23.2596 383 25.2597 383 27.2597 384 cv
59.339 412.305 82.7151 446.545 107.092 480 cv
.737255 .215686 .113725 rgb
f
176.616 480 mo
107.092 480 li
82.7151 446.545 59.339 412.305 27.2597 384 cv
25.2597 383 23.2596 383 21.2596 383 cv
21.2596 383 li
21.2596 383 li
27.5639 415.517 35.6397 447.922 45.2479 480 cv
0 480 li
0 366.807 li
74.1774 366.807 li
105.525 407.177 139.94 444.71 176.616 480 cv
.796078 .243137 .121569 rgb
f
263.397 451.535 mo
255.353 440.211 249.377 427.277 244.129 413.531 cv
248.502 414.3 252.926 415.334 257.054 417.155 cv
244.626 402.305 238.371 379.429 233.635 358.834 cv
230.767 346.358 228.381 333.589 226.837 320.673 cv
224.697 343.43 214.423 366.258 204.894 386.363 cv
198.82 399.176 192.29 411.815 185.183 423.909 cv
192.179 420.217 199.383 417.358 206.671 415.41 cv
200.91 433.544 191.055 449.428 179.865 463.112 cv
185.403 460.016 190.873 456.716 196.034 452.52 cv
191.262 462.532 185.386 471.681 178.861 480 cv
261.232 480 li
254.836 468.84 250.154 456.106 246.752 442.421 cv
252.044 446.137 257.602 449.087 263.397 451.535 cv
cp
.360784 .498039 .203922 rgb
f
605.765 330.338 mo
605.765 331.893 608.595 333.153 612.088 333.153 cv
615.58 333.153 618.411 331.893 618.411 330.338 cv
618.411 328.784 612.088 307.654 612.088 307.654 cv
612.088 307.654 605.765 328.784 605.765 330.338 cv
cp
.45098 .45098 .227451 rgb
f
184.732 315.69 mo
184.732 318.707 188.706 321.154 193.609 321.154 cv
198.512 321.154 202.486 318.707 202.486 315.69 cv
202.486 312.672 193.609 271.656 193.609 271.656 cv
193.609 271.656 184.732 312.672 184.732 315.69 cv
cp
.72549 .666667 .266667 rgb
f
488.765 480 mo
543.431 480 li
542.408 452.112 516.093 412.649 516.093 412.649 cv
516.093 412.649 489.709 449.844 488.765 480 cv
cp
.384314 .356863 .223529 rgb
f
586.069 480 mo
637.945 480 li
632.22 457.757 612.088 432.148 612.088 432.148 cv
612.088 432.148 591.57 456.672 586.069 480 cv
cp
f
297.78 480 mo
349.798 480 li
337.392 455.064 324.199 435.898 324.199 435.898 cv
324.199 435.898 310.417 454.714 297.78 480 cv
cp
.498039 .607843 .337255 rgb
f
74.7757 426.073 mo
54.2048 412.887 24.2455 398.701 1.5e-005 409.577 cv
1.5e-005 480 li
119.249 480 li
109.219 458.1 94.2588 438.562 74.7757 426.073 cv
cp
.709804 .717647 .231373 rgb
f
868.754 456.893 mo
836.446 430.353 788.958 442.233 782.426 480 cv
900 480 li
900 409.577 li
897.198 410.833 894.469 412.405 891.843 414.372 cv
879.025 423.974 869.362 442.002 868.754 456.893 cv
cp
f
724.267 480 mo
774.736 480 li
759.007 474.318 739.912 474.008 724.267 480 cv
cp
f
123.13 171.253 mo
123.13 173.874 127.104 176 132.008 176 cv
136.91 176 140.884 173.874 140.884 171.253 cv
140.884 168.631 132.008 133 132.008 133 cv
132.008 133 123.13 168.631 123.13 171.253 cv
cp
.72549 .666667 .266667 rgb
f
142.13 207.13 mo
142.13 208.715 146.104 210 151.008 210 cv
155.91 210 159.884 208.715 159.884 207.13 cv
159.884 205.545 151.008 184 151.008 184 cv
151.008 184 142.13 205.545 142.13 207.13 cv
cp
f
728.13 265.922 mo
728.13 268.726 732.104 271 737.008 271 cv
741.91 271 745.884 268.726 745.884 265.922 cv
745.884 263.117 737.008 225 737.008 225 cv
737.008 225 728.13 263.117 728.13 265.922 cv
cp
f
796.506 291.491 mo
796.506 293.685 800.48 295.465 805.384 295.465 cv
810.286 295.465 814.26 293.685 814.26 291.491 cv
814.26 289.296 805.384 259.465 805.384 259.465 cv
805.384 259.465 796.506 289.296 796.506 291.491 cv
cp
f
859.13 292.461 mo
859.13 293.863 863.104 295 868.008 295 cv
872.91 295 876.884 293.863 876.884 292.461 cv
876.884 291.059 868.008 272 868.008 272 cv
868.008 272 859.13 291.059 859.13 292.461 cv
cp
f
439.13 310.253 mo
439.13 312.874 443.104 315 448.008 315 cv
452.91 315 456.884 312.874 456.884 310.253 cv
456.884 307.631 448.008 272 448.008 272 cv
448.008 272 439.13 307.631 439.13 310.253 cv
cp
f
352.13 315.591 mo
352.13 318.578 356.104 321 361.008 321 cv
365.91 321 369.884 318.578 369.884 315.591 cv
369.884 312.603 361.008 272 361.008 272 cv
361.008 272 352.13 312.603 352.13 315.591 cv
cp
f
729.464 157.143 mo
729.464 159.825 733.438 162 738.341 162 cv
743.243 162 747.217 159.825 747.217 157.143 cv
747.217 154.46 738.341 118 738.341 118 cv
738.341 118 729.464 154.46 729.464 157.143 cv
cp
f
750.13 166.61 mo
750.13 168.114 754.104 169.333 759.008 169.333 cv
763.91 169.333 767.884 168.114 767.884 166.61 cv
767.884 165.106 759.008 144.667 759.008 144.667 cv
759.008 144.667 750.13 165.106 750.13 166.61 cv
cp
f
862.017 149.593 mo
862.017 152.763 864.848 155.333 868.341 155.333 cv
871.833 155.333 874.664 152.763 874.664 149.593 cv
874.664 146.422 868.341 103.333 868.341 103.333 cv
868.341 103.333 862.017 146.422 862.017 149.593 cv
cp
.45098 .45098 .227451 rgb
f
621.351 284.238 mo
621.351 285.579 624.181 286.667 627.674 286.667 cv
631.166 286.667 633.997 285.579 633.997 284.238 cv
633.997 282.897 627.674 264.667 627.674 264.667 cv
627.674 264.667 621.351 282.897 621.351 284.238 cv
cp
f
643.351 298.831 mo
643.351 300.213 646.181 301.333 649.674 301.333 cv
653.166 301.333 655.997 300.213 655.997 298.831 cv
655.997 297.449 649.674 278.667 649.674 278.667 cv
649.674 278.667 643.351 297.449 643.351 298.831 cv
cp
f
220.017 210.827 mo
220.017 211.843 222.848 212.667 226.341 212.667 cv
229.833 212.667 232.664 211.843 232.664 210.827 cv
232.664 209.811 226.341 196 226.341 196 cv
226.341 196 220.017 209.811 220.017 210.827 cv
cp
f
41.5438 219.671 mo
41.5438 223.166 46.0789 226 51.6745 226 cv
57.2689 226 61.804 223.166 61.804 219.671 cv
61.804 216.175 51.6745 168.667 51.6745 168.667 cv
51.6745 168.667 41.5438 216.175 41.5438 219.671 cv
cp
f
46.8772 301.805 mo
46.8772 304.121 51.4122 306 57.0078 306 cv
62.6022 306 67.1373 304.121 67.1373 301.805 cv
67.1373 299.488 57.0078 268 57.0078 268 cv
57.0078 268 46.8772 299.488 46.8772 301.805 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 17.0.0
%%For: (Krol) ()
%%Title: (bg07.eps)
%%CreationDate: 7/31/2016 10:49 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6D6G!NE[CKdJH!Ib@\>ljIAcX!ZZe,(Gq\FP_B'ZPp5Bf?JO!.U>;N!%:m/NK?b^SU]O]Q6.CH`U%D;"=fe#D(WiX@CbfG#h
%EUlp)jS?FV^A@bcYC?BHh>dGS]Ar=GFlp;YaC!AnTDZg'r222srT9TIVkj4M37@'(a*4`%Hi)s+Du]\4]@Uu8q<$YlQg`d\o;fKY
%IsL_;h-[nmXo-AC]Dq3AQX@K(kI]na^3]`BjdKh3hEH;^`KtLL^3fnRe[Kc$rh-KC`f'lj)nAQZ^u$R_TDeRi&cLk:\)5?'8D?-&
%:O`7Tcd0)=j5KdPJ,Ao.hgY+?\*m[Pqo-1Nrqi>Ie7X9f[HZS]q>-BUK/E;&]-PEMj<*h3hu(Bmn%S^#ms2CgP.uJCVfuh6hr"C_
%f8tBtX1I(7nMom^?YP81O'a73h`gGlhsgAf=73*FkHFp^&bj@m69jmQPCLl$6$dPR8:JC1`#JWD2fHJ1o$t3fpq^],mb?PNF%u4t
%o++&g^&_$Rli*i,^MIK<pO5'AEPM?Ulghs=g`Q@:5CN(aT7;"XTAI6Wr69TcQI"E;qjT8<+8KLc'm1Q;,5,rirpIrgn,N*^0><]1
%Vl_QL(4Z/Jo/C#K:Nma2^O4#(Hg3$Zf?X/\=7:Y9k$&^fn%S]0TAiproC.8,celG7Mc]rL"p6O3:&aGD2dcO.]DoaGrFO=RY1I]<
%8=01_9BD8//t^NTQjinWg?CtN]4_=AGiJn`kc\POrmgm!If%)c^M<=j><Qeirn70%52W,WjL_Dk_d;-Ee,M*$IsY;^qR>@rq9#<n
%jj,"Inhf3aqnN%<mel(FcQD#W`J=3m5G-+is%4WSQg]B=s13^LhkZ+t^:(1@nC`;?-Pq1#'cR)DPQ.`a2F%*)0>E^#r3Q.d^AIcQ
%^\W_0T76?hB:ls9q_ra!jj!+0hn>@Pqt]&TrVcbX++JV2$dQ`'^NokE[Bq*lj.-!J?[VgM^S=*ZkPI2^qQFokJ'*9@!WW*Qf?6Ps
%SZs,1l&2bEl-5R`^-4CoP#l"=IeR2V^&RrL2#c*6^A@-Fq`FdE[/CeJr0.'%.sY^<oe$&<c-"-'>$_gpi]/s,pjj)Rs7E((p$1:]
%'J94EX3\P;f(J4N_lN:I2#3VjH2I@)^AQu[\'a,:&qBqD:\X7GpL!mL=8J<Q^\d.8n,DJ*].`o:ckGc<p.'T3X^:V&jsG*=LMe77
%poh0sLK@i3q8I:0^\[dK^Nf^Np-8'8EMN!5p.(+:f6lm+]&WIUiatuipt'U0+%.bGs$Dt-pIslp4Qe['r9E%gs![0on)(m+s2CJb
%0c0A*s5Am>ABDO^c$*NBqdt>]GAk6NNHY&cIsgoH`&RAMl-.t$qb.c]o)eF)?[hiC\pOG,H%GaspTHd\6IqK1h>Q>O^\[6G>LEA`
%2::6EG!71:eLfZAs8:>ArnF?Cr#_P[17jP^nMjj6(\<_5brj1NZct\SS9)gB>`OU83+'mrlW@l_<TIhob:sh44C8V>]N?hZal<.J
%b>Fn>BDpM.2P2Q]T$-Znm#f>HB.omjI"(QUEocCPN[dQZdH-IFHHt8/Q_m"G7/g7+q"0dMa<tjq9.dX,>3g%6B6)C0HeFIOHKc.[
%K07dBC$)\8kV#FEH.:6](iq8%p4`1GZB*H5Hm\eZhm2oj8=uJFNul[ro]fSB4r*D6maj8glf$8Bl&e(_H<'dZ#QG<QqEYU7D*6j`
%GYB1TVt4SB<$$``k)jm.3;Q8fT7/!__sth.JHoOhk<jEATK[Xo@K"Z"<$$``k)m5W1\/:N5Q"5KIuEq\4Zh^V]TBVm+J7\^]UL>\
%hW7I3H!a]D`%bWAk]i?$pfu\;P&W;=VG5odOnYC.0j`!.HfR85c9;d4Za+e34aOq.4Qgc]5&K<nilR5SZFu@'r#jnn=^1IILNK7J
%H,Hc*=@iG00E'4TS)a$Z4PUq&0?:DI8;m93\fC<^N16SLNcoKb'>LV.pr)jn:Hj.)Sl>0h+*jt3^<6C6C77dIlh`G`*=73ep`$<]
%-L[kR,SkGZM$Yh0^tekS%r^G&2n6VMXAni)I,I+n/X%H@##i1W57`')%KEeRqg2Y*]01Z!9$W^S%pQd0pJ?:dV[k7AaQ3HV8c9\)
%,>W_ER9/^!G!$`t;j-Q*R;GUhdmJGDO'H^j3O85Ir0UiUUQj2;k"O0-&*66F[p<cd11On2LaIJM018C2MAe6T76sd6AJrk>eC0&L
%V]umTQV"GM/XSj_,pg]e$5k>H(%S]5O@(<]F]FimbnSg+C5/%#DX.%[l:_oGVk9>SK3CoIf7c`Vd<Kb3FG%_2NtmHMH*2q$$<;`i
%U#r$]cUZ2.;uOaN$2D;%'mb4k%j(CjNcmR]`N,g7W+15T+YA0#^Wf"0O;<?Dg$?Zu>Wb79n])E[mu7:V2+eLP;FISXcmk*N=,rMD
%%F+H+4f4R?>I%q/-7f"WM>30>jHlSn9<"ds7&.gGIl&`U7*fu=):^M8V3jSiU7"?+`mB>hPV8tR>iWUFRV!7jOW_h0FcRD1-+&`%
%8C+^SP!`8,C*GMD>n_?:%o".&Nd;aYihL99lDB418MuatW3)om)KAG4oT-@mWlAE76QD/1]SIe5B'Q`J1u%+G_pjb<JYR\?d@M?-
%Nm_D:hIHKIA*u]fSA46lIe]!?J&`GAn+!/Wr6^"i`K0r[ruWilJ4=f:)W_.qM-;B-#5Ei(.OhHaB=(`HMS51P:PMR$<FiLleP]_2
%507EG9[P3uU.l-_'6UFs=eCM&"`7.(TDXd?ELih-AXZYFr]@NFlP7euU/=n%4M,9m(HcSXbLS?3R\$pGl5@u+U/A@rnNVB1?M2P&
%j`p=VTXI]ZlCrF8:]'5A3Gp[8N/8XSOa`XGMF1SFJUdV#NZZhuJ'd`+(B7IDGgRo]n]q`SR-_mV$BIf?X&GLeL%L<b9s(39a_FQ+
%<_^1XR7-P`*_jO`d;Z=X-?\*2fM1$]Z`]`,G*?-*igGX4'C0@QdQE?aoJ5d2b,EDB&;RuHUqTJ1O#1T5.$<[$.Qp\QV'.FJSne`d
%%B:0HG[<cd%=5/(CVp1\o>!^MR-Cb_JM\?_5W"AtH*Dgf*2ZS<A,)SgDs@\R4L+Ci*nB#.0`dn^HWFe*l0JjbrKgaSp@Lj+@JkEK
%_"$F%a2@G"LNp<>q*uP"`uNOeO#la's4B\Br6a^,>AE[BG^Fi6>Sb6IZFqeBdu0PG*p(j(R1)fe@![4rpaAL?aWfR`lXPB+*aV#m
%5!50?5,FhH:`e'VQSM_cA8Ejoem3[u+sZf+p-M7?F"rKJ=Nc[i8I\68+R.iU%7YXlnf3Im0Vheb*f,2O#kj%kOLKe^F"#IgOe7*>
%WM9Jc%nS\,,t3HLEZC&2]b"K@.)QL&#u'1ZF,(?61^pKc`Nq'pSl%$o;0l'"7:%4GQfp+Cnq&i8@2>g$J:c/S1"6nU>1cNr58f7/
%HAMmWDLT^f"cl/8Htmqo`Dqne<&5#QG+X6#s7SG+l):MT>`RQ'BckbIrd-ajd`_)>?MraO.'(DKO$4V6bTSS;W:R_NSFqG#>5Ze2
%rnD/Wji]l'PWroI5AHEIC6Xe0iZC&#+#V1_29I!ub/\;F1l<[LO44+Ts1b3*O+mt>1G&Z:lP`102Aq41N6rRDP)_G5rkMl)L_0=u
%m3.)mP\_gn/_qMCgYru-@R%2sq]p[Z9"j\me][3ds5qoABqsd=Q]M$,f=5(,qepr."dopR++lQJ@6?jT*]u^mStMVC"G%cMnW.IE
%jPb;'!PWi,E]j8K8$o(SU$J<mb1o,$13lMG\u_,r'RkLNaD*0IVlZ8k7'^TQ6k,O036(?*MElJWUKJ:M1+9#^^ulIQHApn'mI@Bg
%-(hsi%Jif&nM(t+nTD!AmIJ6VS.B$]SiQL2c]P[ujkW.b)a28DGq"f<&c@kH[c>*mfq\j^Y"5anoW_g:a!,[H+8)/)&hAC1Xr4&:
%__9a,W!u"g=]8Ib*3H@gJ)Dt%;IU`E4U"!.G+a"GRM%t[gI+LP+K6UYC?5nF=V9IM-S@SGaR=V`h=W/ii8_P4T<9B]LZ,+aGggt:
%OI"De,e>A=I:,8uXQ[QIpfk&m$?PL!A6o8,igLYaO#g#b_L8h!07O%+ROf1-/Ih34.=f7]^P;[p_u4AhI:u5c1S\<E$2og[F#Tj3
%jt]Wl(]R.33NF=9)U5$lG[I.=)YdC<PU6O_\op.?o,C7("`X8=jD_<9LeKimKAX#_q5HnrRd,3B=]@k\\^.CDm**D:i]%?dqL\%T
%"*(6bg!!o_AC@"eL-g#&.ZpZKY2\=854*uHbC2D,n"h=S*t@ILG;SJWmNqVap[^Hn^FPkdpg/%ZZfjps!-B%=?&Pa3mh:`@P38ic
%s$Q5K+Er?W=JV2udP\Oe7GL-fJP/I:P>MR$mRnFMcXeX;EV>9W8hZ$WI3t_sF*%Nl2Hd&=n=i=$&^k6]$+"1lZU^n:%SN6Ngh=g1
%!N>ON!.fb6!Mn!j;eH(;/:rp(%">!Sm*b16l$K&b)Kh/E#p(*<@%[Kqq1#"@]]qb6-tO+-G_2@(EJ?m4)uP)u^^s<"[(uD0$^c%R
%.pi4*Y.`Ao&(%a(<dK@^IMc&<UVGgj?4*?`eK-[aA-Bhe5NDKPoio,D6"KgDc9RC!g"=Z1VZ>?_bY+Q\7`lU/k6Y^sPJ:c/BMVY?
%Ul+9W1.g8g*.D9n\1eMRo^<0bHn,lC8EqCQ>F;9n9YM^MMI^B_h2akFIrGQo[qc7:3faCM4_GmM147Of[)iU&0KesJE6L*B?NrkK
%Pp)C1ON7e6/Y<"4l$hX@>n#sMo-)Ss9?3cTf8l]P8[Q/n+M@HMB`"]WTqSsXI7^i=N5q"2VOFs,*hjJ4Ph&d%Y`@i4ad^iW"1=K7
%AZmP4i%JoMkPLNC3BuOoCX^MrT,\%!koNLh7uaTpS+[m6EMu\t!N![4ZuhPOcZ/TVI9tp0c4Bj7M2UjX>5K<m_?\66IRb]*d=8LF
%]9?<)P-[[;U:[i$=3p2Mbkp*k`)>q"+nOnMVg^9D\[01tch'GOpWrX'GP]4Xnc/#ao_8A7J,^T7rFbX*n,DnG^]!oemdj5"eZWtE
%hoQhOHOK)%qq_4i7I8@n([!,/.(hHgig.pi_mB*p5(<#?p%#<Cs3'6%1lCrJT"fXH-)_@@-%)RIMP!%]p%j0\q]mo3B>8&lp]#su
%rce99o_[NoVl`'rVuK?o7'>O^ii=.k'"u:?*LTJMYa5B+'go=6!+/^ARPJ.9rpH&[Fa]H"V>EUgd^pipi/e?>77f_M1j%@#I@%A/
%:5n:][+:!(5LhjcM!rM$J$l]],b";l2(tHd?;tpTCKY6\/t:t:k!&8!\eeZ&7F:L%On3A!(YtMX\oiL]P4+;+lX9=:\'+BWAat?C
%PX3''rO<YLT'Wa[n&pg!4-Z,fXY3^Nh3G&P"[Qk/hA,9E3N?@3;GfmY:-SOh]or9&Q\@Z[<TtJM=RJUADT`UP1;.a7VYnU0Y4d4X
%DXXmDS?ug;e9!?L_K4?IV2>3EX4"\+SLL-mpEo`K1^u"OM=:D7'jmr^QgNV4lh:dP=h"_9'b=<`e$tV8B!(WA>*3a>\LoC.>UQ)Z
%S,6d.:G(ObQ$IkddI4*J8m0Y3+A^F4QAL5:8@.XCeTZD.1orM+\/3a$oGB?r)Lp@ikJiiqroFJ6"?N&`RCkm;<D9>Q\LHBK/lfYj
%D>/Gos)'.=bDue_$i.F,9s1,/!c`m@5Zu0=8X1qZ.^$t>n;6g!)1<t.]@!mr9tnc?jEe@1Hohq]>V5?)G.J*k2"p.UQkRmb2!8.)
%Ue=>b^o[+Cf,`uR#I=h6=ip'Sab,H8PrBjrZ(a(YADBpt1Ze0SYH#[Zj6.Oe#G>BN?b.%V$a=N.NmT9<ce^@$NeUD[46LkE5Nj):
%e?;+*B0@RoiOjG_OifXNjGlT?9pmXiaO$'n(NIB3)bKUB90QUN,]frVg>GcA;%.TgA/MM1;lg-?EFMB"I309l+cE8OVg0qiTpore
%NgDTk7I/%,/><2VGeLd_Wt$g<).XT9$A!HW6Nf.`]*rHkfXI(7-78`V[&S?,%Cs:BB@j[NhrbDB&e1]7.\kpD582[lr`F0/5Bo#,
%e%a`3J+pGIhnT+QerW,r7[B":hn8gZc0&JUZ)-Ku-iW3X=hu3:IJkgk^&&$e5#rGK?#:@5D>rt<Ia>kU,Gk&8G*,JH\R:?:\/h;*
%Z/US.)S)D?S>!p%[c5dc[ZLurJU(43/8ltr4W+T9gW1Wkj\GGQT;%%'BO@?^*0XM!qSn[HS@isZl?+jV[@sJBLLAdQHC[^J;RQrh
%(A8r8e4h-U;&8ni6nb[hEL.>M5jO9Ie7T/G(t<V6ku,noS,gt&$%9>OT"LO?RR"la]G>J@A9kqaFP^?#@_"b#,uL%0g`9I1$#>]O
%+8]dNOQEJ9I1BRp&bQluKY[#`h`.HAj/.Z[Grpf,ijdZ]Raq:li[fTAB]l7.[o;9u&=+No(f$).]k,UjBnHOc#H\FjrZm^uj"KCV
%Ldou>Qt<Cbf..3;JhX0l3lTn"b]h4h.dH;t#crsD`Xp#hJ&no@9+dcj8?P\udGe7>\Z.oo-.2<a]S9Et+eGu)b#D_>QMMonKpWs*
%*>XPWmph1UOYu-YX.]5!G>!l@nM3NU\jD-!(7_e<Y?iCnD<RuUV%4G5OfWGFZ!mu*+QlOGTqY_N;Z/Y=egu$371t.nhQMj$JlR$G
%L$NX5b0so-PNIs2aM$=OGBeJ"U>o@iV8KEUY[JA[;2-L:p><(6AIhoYj!:l<6qs0iEIlrh/p"">D0ZS7dE]O#Y'o3P"a6G#dQYjH
%3SM%.g?mfkGL+#&#g+g:!Yo3ncnMaa\>;p6R!`TcWqU4JEL7TkcnqNj&d$Nj:$n-mR_2<*DXDUP@(3K.>WV9b%DUX,M;?uu..$i!
%^ok#AMR35cURdn2SR/&dD>Fl0_Al<+E8&C_<j7AP7De$!\*rmQ`)KC(o48g%'.387AI=>2)DXrs:+o9V)]^]t((@Do+(%LO(sr!p
%P>%iA5@h'qM>UT(+j_#,cN,qfT*=44kk@u&@5*6l5j)^oU`H7Lnf8A0;l]e2f82dN#F5ltc*7a(p`ZDga\P@Dp1Y=ErIQ_^[j9.I
%Y&S03`O#idN%<Dp2hKaPm.Ck50/6526n\]kh%Y:P:R&m>X]@'9FGN[)nNKugI]87)>!O&.%uaf06uMRpA9Nb@cRpJj.t:rpLP95A
%QIHBH8Nu]nWE>HsE#u<TaOc-_`j2#Pkr%Qi^/a<Pk2qL=Q7GGfM$&q^9H(G1=Jp;-_]TuhKFgH`1D.bmaZPa40IhH%=jDdr2<a7L
%,bIm'X7c^'48F7Zf4?h'=!eEm3qNGj#OBiM*PMeLCr3</>=Da)1K1m7U"tH<#V,QoqA_qt>7tGB:4/LY@[<A-e#BG\fKJWE&BjAf
%-/G-G&p(M)1cjIB,^*la?(;`PLrO=Z\mIp1Hqf:sr+OcbIXL>30XtC>DRS3fGd3$_L".dg1%T";:D73][FstCNQD;ppnrOAPLu_n
%5)ZF*T-t(fKj*;lL#dR3&BEg"A'p"b^7O26bT"8@EKeS1428I$jXnB`:%01m\gngl9Sk%_7_u<N6"h^o,ONtVe1VdNKu!-Ng'=6B
%Mi="2mWLtNH5601J^&LjX>nHHg`*ilhs[fAISt\(?Kcr:eN'9+m3`B4`3\B,Zm(.M"'V[]od2<H24t,r<Xc2I!A/FYA2JQs$YHQ#
%[sAKsTs[l4,-ZS5F=H\A&ZruBM<L$o7#U=E3mg;udf"ONLEiSu6'_be7'ojpYQ1Rk[%Mk@Q?V7!/S[b&q+F,6MA>Y3$YWsG3I5$E
%d..iFnLSA'>-UuZF,Q`M&5S1.<m!08k3CQC(8PH_MW"$+YT5itKkZ;Vi\d;2e]\gG!A0^B8A.DR$Sr7[aX*H''=-StGVi(C_X(M6
%(sJ/8V;dohYq.;\EpR2"Zr'H!*m52Pc4>()AVmBMA>P,R(;ckG?@iEfAGsSoW(S*\WVNe$=a5_B'Jn/>=`XOhA<a6JX<b:;7.WZE
%P0kegdL;13oJ$U@-'4DM)35MP/1e3LP`C#/.u=_\6%+T"@8We2lu=SeZRk&jUHFS0A?%duk%%k[Pj1,d'iL)Y@;nmK-4<\Ib]M5Y
%N.lC+pUSUA#b*$hkDd"0&mX-gMa9cn*i8Fs?"-t,7/JP(M77Q\[Au>)/#loc=^,Va.-So"7Y\s^`*a;j;9[0U-jr'P#_pfBLYd9b
%j+;>cBhL#Z[2ZCge\9p$PSHt/BDH%-4#akMs&:90-Nk#L!TXPCoVf^jH)eg$1=\IPQq25<JhLUA.R.W4(n.H^%q`^JWH)XMR<9W<
%+>5o1`XuCZBIO]V3C-VI,VL]-JWNbkjE@,&&<DOo<#//QnC0g5Gl\cZ)RRo@&F^d9f&sEALC;\M*?tDh;G<:Lj#L]8':#@7#7VQh
%LN@*!D4O?>7-!H\L6!#.'k15+EL-AmI2[bULIPOR@Ybb1+g<O6jXL0se`\b%)]AKpBRF'dKt\l,%ZqueD7WNe87S0YdbfMo#c'-H
%.1S(LmrgL+`qTl#IP.l5rP@L3h'[.-8M>Q_)^uC20UH@eY;]TK\38@2T(^'I,m-!^Gs<.UXn>6C=lN6.G-N31V.]dj>`giZB_);k
%O8''RGk0W3NPr\\B^u\WM_*.fBE-nELc#o'8CN'-Sn2cb49#QAa+oQU+P*\o9[,AD=Q<q;4QQR^_N5o`%Vn`p`#*%?a1&Dq+'^q5
%,f`X^MDCFNF%Z9h#h2iJ&n7_-2^0&/*t/@h.2dpY_i,RqAHQYU[[L"V5\/fQ]]dEA-5nH7Ot7\Gf,[U\j9&i$b.<j6$,MMNib$*R
%#g/=.rUQ1\_O;tsD'oK)d:atlM9H=$qjR9LZlkn=Pqh&W0o4G+e52$o)5OaKcqdFHMM!SY8'I@A%>o$<CWY0[:C_!6E+[hW6!i4e
%namq*]6bB?H4]Jg+\b@R&.qh:4-:\N'i5<$O!@)N0P<A5nk>/jbYXX_ffr+B+pc"nHHd'HoL'?MdY.*lX1\):Vpk;8'88E"e*QI]
%GfhcO^k*rs&1q=_,)I,!CV'"W,-uiuVX1eJnXM@f=qHU8m@5>I@n)gFINc76%8S@k_ae4G^&1.T:qj>"6#&?H6NhZo#U;j+PH;YH
%m8TYbY,T<eRcOZJ/VV,\Gtf@>9/d^?].Ne9.A(KlJnt(!T,%qZ/`$-khh]f/9$d'O"joj_i)hr&/E5R+lbns5=AB@o/6l_?]dXQ<
%84e'1g7f#/.:5H.IF7j*i>p;h)BP!0Bk&bM#HVV0EM&'B+Pd'3RtgUJR6jOUME*;+dk?tdMg(FZO+IoT6F8EbSojY)5?6X8+YqZ0
%e&$MG-XDt`('<NP"0[Al=HN<n'QT'+3E)L*IA/-e$/]a3[3`jb%;i@lKZ;ebXGX%!WLiPCP1T\1q/lKrmm+8QUo1uF*r796C1NYj
%,d'.B`09k8H]f:mKqfipm9/^"`Y/Cd2ed$HXEgcmTV5G/fS--.o,nE\og.`.lJ/D#:Wl^mjI3()-[GtXF&nO3Ul<bNgL>Q]G0Wfl
%br_ABY3Tm"rcE:;.1M[-gD_j_n(`-(3n@EZ,)>*F[,0tk5'j]G-$IaQigOX;6NkdRN,6N*r2)*Vk,qMC70fQhgReC\l"arh;&f,H
%o*hmNSe6m&cP+3L+e4JR$2#K+6OqEUrgDE/.m-VG2AgPJ\=O:#FOr<XJaQG\.R"CH]ss['-]aIDMV&m_UcY1Iqr2h20\fEVbn94J
%B9LriJje#*lU9rQ<'4HV(pD9!cDN>f"-KXe_3(eM\]*td1(M7tUH=\7$PWA<YENrQpc&)gjSCVM$d$?q4Gh<ggl8j;\aOk74nn"(
%';K3ffPP!158jHa6M%T&iW`8!jK%1pLnTruH*!Uem-9^@[N.&K65&g6``Z(b_@/[NEAnXG]5&f1'/,"f'ZQl,(!u=!I_)RQ,._^7
%eMo:p&<5N>ok2L.B2%6TeNH#KK@L>@B4Quh'a&<5>Sp_l9L">U\u>&;JDEOOapPM5N#$$M&EhA2FfUl[RBLoXE6XJuc,^F=m26fN
%a@8YE'MGrjI0eh'K9je.Y#c$;H/:qrob?0_!bWhXB$t1K-]"7VH0JFe9o/LOcl$b(hO'@FKFnRZ+ne5h/sf/?8I<i/[1OF@3qN&9
%ZNiZnr'OU[#.+%--c-O53GHoH!QegJMgYWJ"Rpo99R=Pa'%``2^a_2P[+-nAVF"ZPM@'oZaH:>`Luf^4+:q"r8"&JT7ph^f@pC(;
%]Y'p/`-!OU]PHU%;;?`#S,-8"P"jXbVBqjpLo7Cc7SEj1'"Os$lHnuOp*^*!d=Gtf]Us`nBmRV/Dh3n9U55SnGo>"gF&O]q>M=c`
%/VXMe/S/3lpDrj>Yrt6QS/4sCD;BC,B/ClT"1WnIK5iXl6O\>BiUeuVP%"4*`:p"!h&k<K0Gn0',M7q4%:*%'ViV]Wr'EB>Sb?VU
%R<,T7)7>/QM533;\RHrEg<_[pr,?l?A4+Y<"*^@sQ3/G"hLZtO0c]Lg6]N*?1o7ck1.'OT%>dcSD*r42-uPqdSkg99B+@ieJ\j,(
%`R5e3Y!J^XT==^hb$Xe<o<>C/,]q&9Lc&:kAH]hAkmq^0NNKNc#/.t<Kd36r?1qu_+jj),+Lc`3TW5q93SFuJ"d%"sBT""%Wh2[,
%1j!Q]pa!bVEMY.OOmX+D4L19J_#)W4-#IBq1*a6Rb>;@'Z;`F0c[Z'lKW<"I6gRMnjmoq35`g(`)$Z$cSo(\q*VN::%>H6LHfu*;
%G&M<;ZM[CN?,Vc&nEb^EP\8tG;;"U/f]8,15+l$PM6`GTF&VeESE#8TCoF7(GGf$aLdL<Chp3Qk@6@Y^(_7^Jh=gE('pS73r#8*h
%Qa4(Zih[et^i,UN6\(nB%*P4WSei"ACa;FqSPGEkS(jdEOP!k!;A0SKJ9PKomip,in*1Ote/rV$(gVs;DYna+&+Y!H_n%De,dE_T
%Y@9'@Lm)l1C01Z^'Tp9fM;ee,BRka1KmfODK8@/.[R/t4[7`jq;i.IUD[_.-=>>8#qe_e>+3i-cSaqN,FE>1u`-`rB4n((NnI4qZ
%>[]WC/l@Qd%56*a7oVBF27UTs&`P,Cf"7<r[G:Xslm/jJg8,t<0EpXqWA11p8itq\,d7/tmIB2Sk^k\c['-D%:lpjcMUiF?a&@=.
%7SF=N4>c-HF!IcFef@T6@f>sOH0s0UCV??9,b/A9)@MDZ22hhT>@:u#-<cZl>]E[U=OP&.c;33Nns5khoOeOI"KEE!8Wb>!$?jI9
%-I:C(g)\@9Db+D!g`97Q1*[t#J9SL19M#EI*SC!B)"BN*HPWB-BV>,=`4WuQKe4%,GJ#`V]K56skEZki,Qk_9gerLTW-?r`XSR"j
%4-XVc\$1)KO+==I]d"5XTt$].U(8eV"qSa]kg3V/n*l'h3^F*0kGf#:D;`f/niGVl<ef([#&QT4jV#=B3)h5rpAgKG[cCb?cjKE7
%\g6X_<m1<Oka"/MgX#>4rBCW!T'<d*Gh4NJe;6Q<0uRTRXc6!bM+'f@_1"Gm5jl7`&D/T%aq2b5hiDf%C26p2HJ`h7_q+?sEF(bV
%Zut-LPI<jJ\AC4eYq0dq"%Ya0G*cHk;G09>ciq?)PN=n;P]MVuVMQ^kg=,<)JnXsB[H.J)B;d@R&^gcKD7>2'<S.&4/hqFoT.Nfs
%kE!WSFS'4)I0A%<'8m.f94\*_3<h"I1]Xk['e2DJ%=kd,W\X8,!2^j3*MPRp2UWL(n+)!jQt`Ah!W+uLrki3SJ@nNU]!tK^VRD1Q
%*Amo*44UO>+os+FD4jCa!)id\ME(AQ++dPWQ?7d5imJBr*H^@&GEi.n9*?/$Ps@maEj@0GIA2Aoo.[tuQ?YeBN%PdAHX`ea80B\p
%<Ve<\!8+7=kOg#"Udd0pk=#HnGa)XiF#pmO8ks8_(C:'h5U8l7$.+#J#b$"+!1Me_9U#h`3l-o<<=.SFUm1!o'>RcReekltXA/cP
%I@mDu!N]m\Lo7$BBdDC5o_=j]ALDD7`8]3r@O'7pm.i]-$Fh4u$dnqM1b/Pc[1j7cV-OtujSlNq"]/;bQR@I)0(il3-cYaJA%*IA
%3=V"?#EGp`W$6A'Iu'j"!4.5:S<Kb>.qH(*&MeqGU+od:L]ZqTR`$g9E<#/j.f_Od(6[uh6QD.'NC=Y$qg*Q!Nhj]l)DskF>:do+
%=I0$LM[_49)tpanpHoQSM]i%JU=TG4`jWhRqV$^tM3GnnG%6;MDr9(jV?>iJil(&42tj&N^Vaaa-tNK^8=\9@"<oH*#6GMSPlk)Y
%>a,^$,VEg:!YQ:U].5-ZWWrS<(ZbaMM2V4].jckU#Qb\V'a+Ppo+HX*-8'$=!YZAM"G)Df%,_j6k@F\qM2O]PJAfDU(IVLR&>Kn9
%9b<,j;`VZ3&Jt*CJV`%a"ceCsMLl3[/h.20''Bu5JV]5IJdW\RC'kpkk=#OTL\%g'.iQ_!$3C_#Ka!$^o?r4@(sZn)!Xn21"Ta>K
%l@LN!0$4P'$5`@=!JQF5K*rAG$4HtC(DR-9rU)NI="'RT)$CR)WXJq8(M*eP,[Ah:";3<o%0?k1FEW*U@;C,c.h_7q2Y^H@qZGd=
%'`_;X>SIP3o=UAs\$[Mp@+n1g#e"Ct:i:a2.iL#]mW;cW^tX1`e*HiqE;gR]G7kjLc!gU3Ef4CW$Q(L2#52b3<H)\$,\LZA8SesH
%h3Obip+=Tu\9P5;.iphl]'\PPq5c[6M)_+U&!&At(t"57#$RMm8BW5@1\#'(Z027TJNV4*M@(l1TA'^0h/ilK<%O4a1S,5=R>Gmo
%le,t(:Zpp.%X;2RH?u#&5KRu]V;@rE=K7C3!CcMO7\$hF#r*O,NLG=+UT!'J\Ttk],1pCs=e(;UZ^5`C+gJYnp.1m6McKtQ)JcPZ
%gA.luYtO-Iil(%I1j7X*o3;/"4tG'Ha&)N,NTJaX(*f>==qT]]Z((o?:D]`G"up^]H#cZT&gstOZ1V%*>@Me6V=3D4'<9sW`^DQt
%Zeg.4Qe5UBnb.grL#(Bu?VfCU::![!5[j5r]b09V)p3'+B&kQN`YN>me(PH#$m7_iT2-__4ImE!M;:$)^C\^dd%WIRR,'m\;h*P5
%rb-c/WDD*hD(e-)gq4qSUI/2oS4;#XgD_jY?OYCq.'#YXMirW*=P`9gfb:HbbDG.MFARfP()"5p`0`kb(O*?Bd-NgN;[&j)m+M<D
%;m3R%gMWTikYL^MDO$d(KEMTa;<ZaR0n=C8CW[$kV"0L8[WT:3Lj+\9J@=gbH.-3;dFOW99d<kZidnm6]%_'Fba[A_SgJaMcEfZ=
%S/<9&[VgHgZOKf#@`09"(BP#FT)(3Neb'>"..MBT*Lr7krYIGsrO.03SN+PoO-<DF1<6@/(YHF<o2hnbn&j.n[kkBRIG\n3lf7#n
%9H"FYmG.F%SGURr>;)3@7ERE^o#cuqa]a!q$_t1E#+48P$V]q?Fc>?;?n%s6'&$.fm!a,K9/0,5X.gb2-lD>k58-Gj=<B%go*>#E
%DYs0L9h;G.L\WN-I\!PN'uMrr<a_/SUOp[1A@4U]M9rn.6GrK5-uYW3Qa"bP\\RVNqG!eR1%(s*VH*0T>L!o6am%L<`-D8pm'`Z2
%an3)kTt+kKS-D'LZ>ZpU7!+O1L:^O9;Xb2+oZRkA%Y<<5aRI`'3pk9nhPhffpatmU&8-1LDR[Su;44>/]#65oBA4e'\"^.^NrE9!
%13@7i;P+XoQS$I:bWp=h0^PTXJZ=#6,]SCGKEZ]QNUqF_G%mN%$AmRp]L`b]=TbVBD@?ZVBqB3W!kU3/0$a(OO/?g+q=>"k#'pdU
%9k$;F)*mO"/#+rYJVFlTon5J6Yf;tt%N:O5hmh?44eHt$Y\?$3'"_paC>u>;@Q,VHn]pIbXtGQLToZZYN%RM.[se3gM_HhX72(+R
%s8M^ASPBXA/SN6MWN#u1;!2bR)'d\b(?7e;cG0R*C+LWRdtmas=C*$DnTJCd@EI$5X%QdroBPB''<MMOXdb@=2u%`#aSh@?[uZp6
%S5/HpJT_.T7\H"k];=9&894mF!C5[KIDL&%e>g`Pl:(pI+9RIO\d(D/_ldWG[nI0,)Il.G_:f3cE?MhSBJBe_4p/A8l*BWpF!Ff1
%Up@nKOW>VAmXjRj!;pg6(/2>4>\;YkmKR2c*R6I*>OJC(%?BN;k+`'@]*%eX36<&Y4b-Q`CW![&_L>0iUUY#P6g7lAg^#2FC<Sru
%8V*1AK=Ha=6H&F%iW]rB+3)LD>U,1fg?+FSIe)Tm`&oDVi5EO(&_pT*6$3`VNd8KQURo1^_/Bj[-P1ZGl&\E*7X*"0[bqRjhGSu2
%mtM79^$g/7Dsta;e)J3GTdTg9*=8C2L/8IpF91$5JSp7qU"]r+3qD$fgW4[0pDLK#$obPUj0hCmbIZ@bCn#f;</kN)!-0u>A/r#5
%QJO0sfU)ngOVc*I9_lZU.$k^2".ioQ.-J1\C6u9jfDt=!#+9mU82eiC!*hN.42]mb`FHf4hcT5]:Z;@in6q_b\Sk?7@f'F:3rWCL
%#%:SKjT<7V":#+ThJZf*JVh2>]gAnW;Fb"3H&Wd4]/]9u,EC<m(Z=tRV@F#YN>KN(P/FFo;;Bk7l<9EJ94Te9cntmV4O#V4F-tke
%\PD3-J6V,slTI3JErC*i51'ke>ns!tK"0Z86V3J8l3+72*[\LlXYGEAou1XD-TLs?B+*#3k:JQIoPV`HeGF]-ZunKr$27q64&:13
%qi=!LC[D=>]ql3u[]"M&VbtqtDDB^OjKc('6`ajImcS1KE!9@Ue035r:nX]QG#rXj4d-9J6X)?BqR4"A=H@l^35<-t*=@cTQk8D%
%Zui9:Q?bbr,;tnNkq"B50YO2$(L6IS>A?-2Do[CVEO.Hk3ZcC=MOo&;[p@b%#5o=Z)D=qP/N*#R?>)C;V?-O-B>Ckm&BtP:j0Ygh
%S_[*Jc>_nt2;%M<aH4gHIV/fVIOm]8*o%^GmGI=mi_[_F?bk,CFL8Bu(ZjUt5W"(&jB'"pVa^,iBl':dVU3^c)!hf=+O"&);!2N5
%^sI)51LrNfb"qT"GU#.1qn<1T1AmPFiYP/I(-;p;Kt`CeR3O"h*M6im)akuMm&?$tSRCb12nZO4Jd]"AUlL"bL)_NXpUe3ipN*li
%5J&lI[$-!D:\41_I`R/Spf'0VHL]PKf$^H\AuD<6r.2P56qC[9-'p"q/PGKX\UY$O=-I8Hk%a.10&$OIB)22W2TTh$2qT7GbC+Nb
%T+K$Frl)F-%nj*#r%HkcLf%2M8d?e'/+uYhWB>=$/'+re<FlI0_SFU,n.u4\2(6Zl7;W1+a&*iWJLls%!c586!IIF)5^m+WcI!cb
%.Udj?f_kC:iW?oK;\+'JK.a&nCNN#&aGX&aQN@D0J>!#6.p4+8^1YH9H_?dp3tUjiMVqUF`rg*<7$,MD!l8DVTp/[PH.bJtD=Hl<
%H@cnX&5*25N2;,hGOLd!^1\9#lS\j2:_9YF\W@tR0$7Js-;26kKu=7TDZGSan2cZ4[HR'S1?"14-1BSk>^Om,93j#]r$i/obeuh&
%l?'VETk0AWog$<31XBi;@l;bGWO;WT"0_MkM*#u?XdDRB^d(0nT!fX<<F0ZI67?1`3AN"W]$ci&Zud"m78p:o;N6OD5"ac#Hab22
%<jO"!`E;0Ij\:YU3^?P6q1$Hr)^u0^7QTmgojf]^$QA@+.'^o;j<=5nQ0qVg?I76^Z(2$.=RDF1F`Eg<*F1Yt=L<EPH_&8k@^F>(
%b<lB:#@Bs[Se?U?_(Gjn+0IBi0i3H3-i3%-N.k@C4)cnKj.ck+_,9h4QT;GlEE7IX"2:`Y3t"]c^giR[\!_LmX+M<.@7QG:rQ2$!
%D=UNOj'_s^.u0\JGhPhi/HbNT'Oa&oe.:/'lmFJ!o3dfYp`2C&L^M1WGWM68Z&/:d&7)Hp4,H?3-qd*OYP`>CV6J%_<RSc.;M;:[
%>0S)lC5:+*KfBQnD22/=!rY3ek3t.GTS!"1l+3&")a%<TereZ0r(O0\`#._7]1-ZSWRFUM?laKa8;AdB\lGk-*W;@b:qjC9'9[55
%D[CW?$=cL9Qnp*M402HdWh?!A-`'>l``=''&<K*WiJ!06^QL<:5g[uZ(5X[Rd\4ID+jI;5K)JTrf1\SUE'ge)V,L<ZUDSTsd_oW)
%&b;mUOE.?gDk/C^0EOK+TT;;0/9o^oOC"3:ZZsT`JY3]GB&h5u#=60B6C;.TAP7ZE`:"c9jKLss8;gb#(@!qd2?DH$dI:rO#$aYp
%H%7Q*:Yaoe+dt9WVYCD]UW67QDV[s3^G0h`1:FD"[t;bQ5;34k,(<q]O!'(.'U,^&=@Yh?>L5dRFd,[TL*/H_G)XS`83A;Ej._Kr
%b-W?VBE>IZV2\l`6:>B):9Q&Z&EB81Y$,IECM'7)kQ1,i=Xc$d+>-5AI96Wg'h+Ai<'Tf.#j#*!OQo#TI,PL.ipN'dk$_rKK*(B@
%^:!nVPB>kq/k+/sZJdR?3P%i(YSFuX]B7+6:&1uYq&r-6;ZV6[e>/K=d[EKUb"AcS"lFUJkF#G7Qfa)N%"PUAVn[j!DW-kBimQEC
%@=op^q9.E%D4E&T.]\M+Yj^TMQUj,&>4gPbUQ&d6,<d?P)G(-g't"iX@pr-6Bk%3:N<1Y&BUu]^3gJMf">!i8gE"J3nr24pl2kAr
%18O2Fl]sip6Pjf94!u[^LIkBo"QEB3>=H]7C:$3"V6'*5PL_\["JVKC`qHs_%FZ+h/BB34.bY/17RciU;r1GeI-,=9^j0tncfAjE
%LV?fWbCndhKsaB5F!pi"V:6:q*2jcJAkt_..@*q?gNB7_-J"o*X!Ii@#6A).%obX+N)(2$FuM\<>sAdf"`Q(PA$Z49+L^&Wdf8B$
%)CH-JP,/[VW&;dDUggo8p%'gS*=B$!5BI$[Q-G8O"$6;N>=O#'<@O5?f["&@>;W!6Mb[-*!j&$J7nSC`00KY^R7P.$KXtJ@GjI$5
%%VBhRl1`[\(acB['b+A61mUTi+HJ#H/We)Si=i*K93!O04_E+5&LJ\Y[PPL].4@j`-CKY%<*XVMUHXRb%[f4#_ARY?4WP,2X7A<!
%V,DH<[-l%GaiY$WEo7<kYXI(t`2cKXWtrMSTAsJGl,87Se22W\86J//makkr:TgZ*cGt'TqS'U(=Vj@0RMFd?,VUB$[_4kHN.E%[
%):)*@0ogYd=I5'T%\'[s-!#>21S8Tt-"f1]+/@uWW8oGuo\B"gA^bfCFrcm897NZQKFnVfW:&YG4(Xjm8/ff19qV[oKOZIC;_GX5
%U)4/.9q8_l*pW=7AVA05H"mTg;ZL)s&Gac?Yi:U/]4Yk2ku?S-TeStS,"Ocsn]U8I?5$r3.\Yu)UgI-Rd*1"[Yc""mmRP!e@2DHJ
%khTcuEtsY_`/pp"`i,3#o*JetJ?piL4bmR0@*9,,)!D:-r4neBI<65Rd#.Mfk$''g.]i?C8HQr#L.]L^!g5mFPRL#f>dlDlWp_kK
%!U*5PG*3L$9b8^?0E^U4bYDr/4t\%1G[>-FV/1=N7=hUrT$irS->*RE'iS+f[P!Gl]@P>=7b!=p5M#A,27(gF6co]BD?W]N#c=q7
%b)j6<p(65I",]bJ/=r+UaCMP@40mjB0]R#%>la."!u\6j^2\o1.79U@cPE2=2ceju:3.Wdg@*g?!^dt3=),2.D]@&8?H#Luk'/^j
%$b3<3'Q9BRYmn;7j@PWV/)3KC8Nno1@AW>>JV^F+WeiNO/dJT`2(L6\7cqWeL6mLQ&ijWOgEJ6;^sQM?J6<'bnN!O$q"iu2YWAF3
%\./@qZ3>UiV#c2JU&30+PSeW`?jIu?H$"\-<YB;NGK#XUAg2LNM\!(/3Xn1j2Sq53qe"5cL,$Q\:eodUo+(D7Lui`>XA2JCR)dGC
%Vqu:p*r[:<?r@>r*X,h='R8&-e]8dr,7;Le'.>#.%JFDar-1t_EBp+0%6d*X./rQ\:B4a-4b2KL?..XC[bXN4g<PM'E.=_D3k?4I
%'NSgGjj9SIo!/N;7U]T`hc%+H(n9N$dF=U)Rmk(!!6GtZ(RHFK!b%"\[4e:d7cUNtCD^D^p2C<BI3R'!onKGZ2&!d8d60'Ll4B2o
%%;!Qt#\%4nhce!q+JWM(!p`h:rHn>(pl=jN.*$/%RS2b;)+KJf!=AUW.8^B?.>BlrELAG?`hGb"=H$T@AF``0H0cC56]E\0%e^kD
%0'\W$W'P!G/=p)=SX*nh+#6kuSWt=U1;5kqGURcYmMlXJruLM>pEYf`i)7X2,\r/^..oOaZ<C5h\Zff#!Nt)9K"dc&i5Y7MAPp;8
%"G779"36s0bG,KHZ1O$/jGhoc.dW()2Uj(t*"B'Sl6i@&T%b^0/;O*57UdZm8')lJdq7>njEZV)6JPdC-I%SF"\C5"-:A'"!K^:K
%Nr[96q`IniiS(kL8q)6&a/gUj8lef!Rd_B!3idu%IaAj/3a%e3!.Mtm:d8"dm:r&(fjgkV^J^Iddu%<ucG7+uO/7Y[[\Yp:L*=l+
%]><2...!Zk(cCPq%I(sFnhC>_Qf<'3CU%lS#>?jVJ/P)YUs<e7Aj>*.-`)Bjf#N%E1[FY,L_&UAV(&p:p8VC*@/)M3A10lCR0YrB
%8$alWatMNK0tD.Md:*cHjh4AK,r>;4!#n#V2[EXrOf.LZ@muBIDQ\QPTX$E)>]*)G%0N'T-L!s_HAM:)p^U<7:8q)nUV\QEHIA+2
%^NJ%YZ>#72fUF)p@ZCLJ<eap1qG1nr(kJPp`O=uPhh]4oRb/bI:,NEW)U6KG'SY_5V'5tYfr2ee@Mj,g%:R+u[o-TPB;o[tjgE.a
%<)"^YgH_E'.7OTJs",M<G[)'lN@X<W<6V9Z:WuNHQU<!&:*kaej`E)C)5tR)@eh#0Bbs')+O0@Y6d#'-o7@ER"DnuA.ed3o;%l9G
%bl>NqAD&WE.^L]GlOaF)KMedA$`hR9"j7K/jB@O+3pB?\XM-ph2k&"*XDi3JXi9CN1m@FsYj5@ABh6E,#H(EniJOe['BOa4!Uqj6
%ljcr[]8ANIF`\=W/F\:4)>!nb6?S7Oaua!ED$TPWZIXpa"eq#R^5Jerp3ThX5JCT9+(V&_&.Y^T[)+fooUS2H`gOK@n'Qb-"QH\e
%)%T/61=9Y?#BRJYXQ^YoPA9R%5^`XuEuZ*A_RQJl]X[Fj@YH0s6H!)^g-biCd4e*idYcG4FaTV77KK6hW50S$5sm(f*QY+oRq+mp
%?#/\)$V_L`V]_Pm'l0A]&:A-r3Eh^p"^,IlA?%6^'g-#ZGmj=jQ8W@:K!-JAV_.1Z]GJQ6Eq\2Y`uZ@kpo)1qAPc;doJ^f'XI.$4
%Lb'[/ICDIY$d/j9iDkCM9quGoRT6Js?`W[T;uA^u$ckfI#(-`UdCctr(de>*;Si21[L0P:p?frccIsT@L=u5>U8XpAP(h0?auN6!
%)]AO@5^ICI*uNaR.?9c[q69Yg>Y\AFCAV+cQN7/BDarD=K4RJTU0*Qj4+\Wk?o>qIbU`%IZWOa_VT?FE/L"mIlX^?Ye=tAZQ6BI)
%_>Ac8W<u1GJ!AloK2=*%P3F4Ba`]WQWZ#rk*MOIDMmD[<c^A9,&$gI(5B2dMT4U:.kHSmV.XH^"7oS:VBOj]U#1nsoBpu_''^jnT
%D\7#@'Y#:l)fd\VE&n1ZA^"*cUk%;TNN2HJn<oEZjZ:gPpj!jj'LC1%d`mn7nE`c7fE=>W>#^=WN2$7K1A`Ge_aHRg)U)-)0EAGZ
%5$`]Smn4=M4A<fuFb4,RT4;t;n(92lO5-Z^c,gW'>FP.pN)M#ke%N<35jR2o5gu`l"g]qC_Aqj*nZJZGJ7ROP@1YUDh)`dRl:(ph
%h-$_j70QS;12:Oc?dg`jY0uR^?*_m47sQ$9&-HD2!G6"]Ut<.k;C]i2M(uFK;U&4d+R@$S72[`TntcoW`g@^`<&>#S_Wp3=-4qJI
%;DM]4&<i4J4=92=i=:@Ar/j'fl3j-["R,LCrj"=TOJ<@[$4qPLr'Na;b\#uX[Z&4ph7FG0RVG=^N2SgkoMkE0SL*&pc`Z;s"[VBa
%?[':XJMc%PZ`o7ZH$*$rbEV[`VaH%:\/L2"[%c5F%Ol4j9>3+@!Kh^Xg]Q8I((9^h0$5.\A&2oqMVUN=9c'b]!;7(!iTb,bC;:5A
%#9>m:gDKnl&,[$E;+RrQZm-D;Wf.jNl+"-AegL]Nq`'1hMZsOa)(HV/K5u,N1OGdV8#mTC!9,n>57(XqqWUAR>>=.h5Sdb$Z_(h>
%'fBFt*7EXsFM(^WB#!:>`k-1m;Ci@Zj]n\%nXr#I!!*0_p=nG3;;YlU"fk1?;5Rs76@b'\g=e2dL"/'_#?61nA0OHnS33]`>s$@>
%+^R*<bnBak=W/RRPV%4H/&m<4a8%KpX<Q/`m4@O;XAhTtJt?E8AZ%fe`0L^cn15Sqj;3I[N?B\o5%CUf;CsVtOT]'h?ij;gVGMf`
%KO[,e:Vr!S'kj0N42=*b!+nr/d0p%cdOcD#G?@'Q(n:/9C&U%q)KRH(luB."qO"'@a(7bg!TXoTb&!/WQU'8f`a,_blCBh9@:3M]
%5PT3!(_ruPeCtu^HR`0\AJ!5J`*3N^#).n#B(C3bE`_<8(g8]9&/YQ9F;^EfK\)KAj\S>Fq7ZDJJjX5FPVh_\4Vjc2)Q5u[Huaia
%br>1Cnr(E3NU.bF4]ompQ"$Q2galPmFBn;tGhOW:r+mb770_5'@P(llh)(6ZNj#CYV$SN.p:ZT6[tPmQMfeh=J1Fb_0^H9C7b?)V
%B3E0k3E4ZP-CTtA#)?]1%^fZu^!9$"j`SILc/klS'pp2D`jP'/TtCR>*13k^<!FY[<.t[\DPb61G#A9k^L_Bb!?7msIj;S@'faY$
%X0@UP".k3Z0ieLM1WKH&'4WmJoG0d2+e$Z9*UK!dcA?n91JAejUisal>7hT&"#eSWU'V=VZRus'=IBN([H5d-G&I/1i$8g%An4Dd
%J.S*)je2^nn7n<oe#447&mW6i-5+#6MsA;2F/nRc9A?1<P8qq0F:k0r)o!Nn4\mW.b-Nle2?>E?mUKu'*Q0qZCBGq2J3VGn3LGQO
%gbq18oIPGPmP=qi*cGc3:)Kd%@9pMuNneabeo3N[MjPrpUYLVgbZ2S=b;&X[_k)BdipFn4,IE?ul_aLLUW!+-6mcg];'&o.T'$aP
%N^Mlag%,ajd>&UQjU5SPJ->sXc6$6e))\%\gafDRQ4bBdBt:=s2ZsDB>W8*KbX0#Q.5W/\A<ggI+8Oi/)M(BE&,X>W+M:-\^'bo.
%TTK)Q0Kbh"'dZ:N9NH0GI0aVhW2\2qWN=<J7K!n%qnfJR&f78_O2YEb[F&gU,c4&r(!g/16s2Bj=t^K1WY&WX%jPc*en\\S*7[;,
%L(p=hSq;n'c2_#qKIi8PY2(hp$d0Oc/M'#WAo,)+Au`_N.+s>ck+Lg&K$clK!5.I@Q"MP3(&ire`pM<2;'B?9HJb5?/u-s^/`Hj5
%h&?V2(o&2o4G/Ksf,fo"+@bG#OUO9.7A#`c!j4jFIN=i>.Bj29[gd.+CORTqU,WI$l3n:/J*o>^$JZNDk[N[:]Jd(4-_DM8:_e/;
%6W#W`6`V5]OLh,7'9Ut4!`*3GnBeQ8^5S^E6[,gAV,8pu.ZDjGd"o7rjWYZ^Dj4OX^GWRZ'M.[q*m"B:n"g-oBf$;0nNLC!XJV!]
%C);_c61g&\]JOQ%b8j3,q3IB0c[]TGONh(IP[q["r\9a<,S*f:5J0KqQiN_r8&M3C9G5XN2BW.o>]8L:l-iH69BIb(dM1>+!EY2R
%D`TL\!Xg*::hN$LZ.t[V!#t9C"5FIYD`pcI>R*%cp"m8@$sM/Zjs%r]=QC#lo4TMeTXE=\p^[a*@[_AW)eKmQrQd0l7b3n,SCjN!
%%eIc\PR[hTf2E4uYq]o\,&,7<pcK7U-E9i2c_+Jho&A$lVL@L%gR-5[%3FTj\.g(QhQ;*oH$#_G;X>>1.81@>m?gO7g(&sN!^!Gh
%LP_'*@.D3I"=QMrN<,P,n@_q%%K[L'7"0k.gP4^l>#B5Xd;CXYaF2<e]`qqtoA-u:'e]U^L;&=."&UgL//CKA!+GrHI_q@]-!TWU
%+P%)T'dtQ0(BmD'UpdF3=#=q,c?&E[7;QF;Qg:TYf^d%!G1?TPCiUSrQN/:&2?:l:)PUrC`ZEp'i;K*_.bBGF3r>Ud#X0r5F248L
%pr&7(,,+9#j#>pZ^c9f1Jgo#hjuMmia+WmIlMfg&h1G]T680+AII'\-%Wh=SgELQ02<l$s4*7AL`Y[@W5_kbrQH88*_:0Lq$Af[W
%Yp?t!j8`0l-Dn\LWYd-#B(3#6'^cJPKY[`k"5j_YN;3H9'EeG:&OI&UB0\QM#f\+GXmc5Z^q">*2Wb6,YCQ,-]@6sk+kr(GS&Xg%
%9L5%9[(>Eri&r7g`^L(6XK>F4*#>7Y+-3^k:UY2_1H8<aZXD$s$e$G<qQh,e"P1A>eY,dJ(bsq?b6A"[6KSCnjT:^*7O9d.Y\=@H
%!!i/,,9"s1f9.-0j9s?^m\$R?5DFlg(Bc?nfH%L$_/Z2M1fMP\_a:h$.2^ltd%RT<B\pSKKTsa!!0mLA$NrRH'6h+W6fhpppa#p[
%8\Y.qhYi5eI/Eo$YC:imMs&EY]mfq9gL%_mp(^?:XY]R>;IE7!Ml8CAnCGR9;b2\u>/P"\Oo_q(6g/,F`sH(j&6uUp]c!*.Ut\%g
%Uo!.VZ6(FGFq.Do%O-%Ag7,=/CRTDV!f1su>[f$M=$4\j%j@BXS0$s>=WXY[l.:PpV`lIXVk?TEGpV?RG&aRFUe!eK"%s,b/K#*,
%n*j/+9u.gin1\H0JG@BSLG#Y>'C8'mCOV#iJg;pFJV4plr&q1?R]7P#r3U4#&L@k,IKMG<%21'C=/!/=!KL,+d6>Xm2>`c";kS(W
%HtV7qHVnO"AelnP+PF4M<X77,g@f[5a-2sql?,Kr,<u6f,mAq9\Je]@MH8EVVXZ>1(*e\l4LP^\"hfi5Ch$-KX3(R(QPD30RG(aG
%\L.@[BE0>b&WWR$M2-jc#J!hF!7slurQmY8:5H<=:+p4-1HbQ]/7UU_&).YZBeuo7&)dV7PTV&[$g+Pc26F,)QC'g+-s2RCNU+0W
%N-D(8^c82uZks*NPHh(7l,Pf[cB&fBbes'!9LP,@iA?!Vk!)hCdARRoNKk5\qmaHD6.qM=!dm/>"*AIjQ/"!E%VUM4X7nq#Rg956
%N8,ce+Y.7D;+DI4f"7o;!%uVk<?WmUJ-+:Y+bj1uZqLi-NN;N3Yi6j"-e<t5P$taDUc.P\g<'9jT[:gQ,XBP'EmJ@`/i`-s/.*r1
%Mlm*\%qg.`gk8B,cVU#TI1Ml?C<=,4h?"2t&;>ppF+JuE(^=g,!#R,fS"ashPL4a4D^lM.CekIcOK2h'5-5qkE;lRTOLZGSG[eZg
%<%4nc\g2MoN)Os'L]DFM)2-:JeH)_[X2SsX(&eWXjAT(/2&%0i!BXb#J0;fILW;d#&l6DLE.13^%)<LGRi^Ge<X#`$V#A59#OY@9
%n<u/=hdSguY.(H*BTY[SKcq+G:naAm,g3]q;^i0k>V0`fN1O(=JgZ9rK=>5;`l>/;l"le1aNR4Ho0a*s)X+Cnl=7e.\A\&m$n<,k
%%"t.,nAALA3?+ItI7"$^AF9tQ\F9N]qWj!'Gmr@\IlGm*gQaN6o2@k=j#Kb[8q)f%1BKCMph!`O@B(PoNngd5Y*>"k3BRiQMZr]j
%0lI!KT3=n_%osF?T1@"LQ-L@!aJIS`GTG/FASPhKh#Qbe@6LGj_lTJnq1?ea`]V_4)LMN3;=PS3:aG>*bZR`<mF4:9n?.me7SP=$
%+*)tOQ&,O7(c>^db>d>Um98FP/!BG$$N#Al7iN1)66OUo4T_mR$c:i+,trL`F[9Dpc>R+91ae;=*PC5a(!4_6/@LCgaAaPHBIVT$
%&ptO.aV1GgW#%GChV.WiCiOXCG@q((:)tpNYb,KAI#X:&fMAioTIsH[f.rK^Zu`J,kf.p#l"V<e&ecH2:?Vs,0eE(=Zgp3;IH<gT
%D;,&5DPtFhPr)E,5ok9CW`!(n/5iLG6@=[dV%=AsFjD'5P?t5^,XD4!""?6aj+\mc'5`T&bbmU>_EFmYO<#6JV&chd;MfI1#MlGb
%X,Fj>kduSaZu"P$41M0WIQJ#9qN;[7fKh!TOMHoZo2O@VibkU)(kP=Xr&POaf]O@6'k#htbGQma)UrI(h814FR=Fc:&'QH^ShgNG
%<AiO\:\4uNJi60@D@mqS[VCARD9Sse5jY%md.Tg"#(oMKXjj)!_(6<pCeU`@&S5=ii7Pch]IIi+"j@WsRut0i'n^hK7"$iJ\26%^
%lH)JA91*aR45f83abf0KOnV*\FX#O3c7]9t'h^1Dbud$:n46%\-o)-/38:j^P,[_5T.3H*RO>t8H3;.r8"eU5g5a#u)RdGNkM%.4
%hRJ"_R0S,/rKL7N(<Q86e]Y2:'p=A/ecLB7hSb9V;;9!Zl]WMYmAd-/i+6I4J;dk_2jOka((Dr=Ql5LOb:I*/k)./6c)a1?"'.6r
%>A`P!nkSQ2]kWoFPU<?p#'`?m36R0l$k?t5KK"G_`%XlP):!D\9ZFoOLt-5p/eEE]?2'+^*+DOT4RS1T%P$2Q'8e2`?hFMQk1cdA
%l:LlW^`@2JXXqd+p&VT.'Y3Y,#0#_e2,l";j4Y1c6p]r6KGp2:lZE'6S]dlpOBb")1^7OGFj0<q)SbQV3fgB$U1D5H,V.oPOW(L4
%5\8K.T<iuaJl9sB5SuAQIcuI1q&IJF5`=&`Z:$jk&qqBZqM^(@d.=cs69r[A=4S9>$>A^;h+j4E0i+PfGmi_626@JRf9br<kH\:8
%B!j+cWuq9"B`nt8+DHNX0JCCsY0=AmM^eJ_0/LA(2$QrfX9etWbi&u4;)'q7ZM&SL*!,LY=o/n5nAV0:_[&$%H,=9s,`Mt[JrS=P
%;6*son[(WIktsq:[<L0FR,Sf:LrR;-0,b9GM$e>a[S/fD'=A0SIIYb`DFS+jQ]>]$T)l%VfNT+<>u8_MMX56B.M*/&JT>?*Rir',
%T.tG4]ERVCf&"dW.@+m_V**lGG\ds-Y`EF29WEZ>A2p*)c-$$:H,LP9<k2tO]IUu&gp.@Ke?4=e2AO`d*CXK]2_0N?bD899<6L=`
%\JpuLjS0D3AM\WA]4u#i8i%#8X-!\cE!DqL$l6h';s_tE/\%lcFi1PiCb^1Xc-e/qgVu7tO.6[m7sHFs\mccb#[#da!HL756s'oH
%Wb6$OF>4`INI<l<1D&C(*gOZ49C8eK\=F*)%J(=G+Ve!c`OIAh1>$DDRAYS0A7Z5s_NBSq-l.;ilaYSn"X+&&Q4:$P/I^%cpZZk0
%"a0@>,K%6o.-q^l"DXFdGq->R/=`GCIXh`$_?,Wm([p@k]q(Dt5WV>%L.33ck/c_kL`Qp)8%h4D.,akqC=:%C$o=P3Z!(99T*?Wj
%e_^K5'WV6k""3>XKNFo!BJYTF2EI_:j^k$7$hK@J1Ftq_>-CNjc"`tfptgYmr:BI]R#;#@/-,nTj%QnbJdR5J(nSo5238[*)U%gk
%:W>)3(t:!=3$`gJ)kJU/guS?cB1LRX=M:`S`6^I?Xm7Z2!AeF^nBrYS'/Nj$Xtk9sTg8JZbE@e4ZB!S7=qOd/\p:rp0!2HKL%so^
%V`ZfM4,qp/.BJ:+AqY:F`b!(GTIu-L1^')6](YB+:%k3q.tEd`GWZ)M`hb%M%>0ObH?RQ-ElAsAfte/NcSjm*YU/5SSfg/:8g]3-
%@9rW-q+_Q0@"BQAei47mE<\^DoGEN3U\3aN-M6$64[SK,&s;oPN(B1)$1c7eV<DOn&B+m*N+&lq/)M=.c0Z.;9tQ`h+UW!64pik2
%G=9SV:Kt_CMcS<pc"E2orZY]?ZeY-V3"(?WO[#Y[Jbh#l!FE4>YRHLPXV?t58*DZlN<3c3ZkMp9,k0a'%.c?e7j6a]YRE>@HLWZK
%_F?=./Y>!1f-<jU-m?U;$YI(WAl<ZQA&M/IirRNb`_s.B`T70-o;9gF3,KZCP='U-lbu51S02DeSPJ"!YU]q9oQiH8"i:,(q4&V"
%(+5Khgd(rlXD.Qi;ZN;*?L?BSgCP7`9"2@54AF#XEPIXE^oeW6P^sN.4r1iJ'&`3+?#bi45uW-q\-1b(=h'ucB,Lu;7+^5m/Lr?k
%==54$V3m5:<n(/C?+XMI$btpLOto76l`r8H8.B:T52nNC+dZ3ETq+nVAHiO*9\eM5A8_$e&9$U?\8;!s(_`i7N(h2/+>7C3E_HIA
%+EPdmGS3<6Bpgij@oD\QD;FAteO&rm('Lu]Vj3LeFaV`$@PY9Q%Zc6s=I5G`*n)S1,1+4G=:h<CEFi/I&M#P<-hr-Jk[EZ[l_%+^
%6*/AZEp!iD!&q85OS.*$"SUD:j*i6/P%(@EjN#G5[7/3C!6Nqd3#f'Vll87Rs0+--9,4k&Tuh'Hp7Au%G-^GT;?/6mLj?$-(K_K;
%`Da.jSb)Ab>)K?Bc?-KeQ^FKak(L[0aOq9^m\UW21_!^o+Oo0LB1i=iAG)TC5($LER5#K$@<`\GQ>Er'1rMQ@7MP#K[02Li]el(1
%eP#J'%1#:_>O(oBkZo]u@^`R_s..FM'/%JNKKkDC$-?KHLZiLX$^`?EH)"r,'>Y*OK0t56A,7<,Q*XsCIQHTtI7+T:K;2(bbDe*[
%C.ahg7+;O%Z,Z4^D<U^%PVQ?:PdJnqC3U(c*j?Z%4/7R2*uq-rJPtZ45i!qllY0ko3%gHt8V$q>"7Z<>n^GsshZ+NoR;Wo]s$D#W
%AHnQ+8e)00KZ!^KE]"P@66ShCY!g@i8>l3CWZ=F]!.7TWRB8)8k(bP6XU6lsU.W.&:hCTlkgjQrpumIc^\_?gkWblNIl.qi:Pk/4
%5fVh3S'H..Uq70\A+ftRmek,9CDEDh+![^X7`@1\EESagFRir.T?<IZq\V4C:b-2DA,,/lb[<VhCPuXg-U*7q#/B?<HOL08.1_F3
%(r,UJc?bH,.."OL*qLR5#oGQfbJPchLSC?k%HB19PlNI!iA"fPJ.a9fE<Eube+Z7S%.&2<-.n5T/UAg3KRf;%\?.:7nQAI&?YoZI
%9QX)Of4#H+(T-6X7*Nqu$t=FL,YiGd/JinJ3bG6b$"k+]Jh)Y4<2/Db/+&&S(iW<J'f)@jVVu=E4N@^0WCAkr*$Z)Jb26Sek)M^5
%DN\M("7j+`3!L4M<$k@[gls3D#`e_mhp<<@\CP7N7Pf=u9lA_pn93nO`YL\tnM"]f^buSLLdl4ia%eWBcHO:gBanP3DZ&D.CYZ=.
%m`K8Q?_OjOBoF(kO$83E(sDQ6D?u64R^]^#N*3<Lde9eu9oCNqnSnI=jYKAGgfSFB)+/q;OXlnU/7M>i)OW='QRSnO0&oedp2lu`
%L3\1q8%'?59e;L6K#edsIq7gt4N=<J*P.(-UIk$'Tmk<jN:Auh.u,j^@H"[n(o(Bd*Z0MaN%NO^>R6:$f8Q["(Lp@<k18dTna)Vd
%(\V;<aj=6>04p%pVN-iVF%$4-re8!ef1FeJ`[Ep150,7qM\YepCrSct5f?k^9&lUl7UQc%8;5t\OdGZ+#1aO3inVLtr?0a4mUGNk
%KT,Yn\es6U8eF]EW(q.hadJ'tLni,T_Ha1j=bC*!JccjQ*e\*[lF[LI0uqNc/uFI-R-Ek0SpJ-A(;l>$WOC7kKBRoc-%jR=-imG<
%$Yf,tq0+M.druF/dKti`1mlm_Y8BUM/Z1+*[L,$!0qJK,SB6Y>!WXs*E>;t%*83$/idg_7O*b=c?:CcL',>Qs@4!L#0c!]Ta;::S
%Yf+BpF-bgoPgS)cMOW"c>Y'aATbX,o(uu1:Z#^V3gAtEg$Uo'AW1#LVUZ<;:Ee\'$5*Sc`;\gQ5!nmY;-RO/Rbb-><<<52]bYCj#
%Xu(d$\8-QAWJM3q7p=q>:!=71St28dcmdIO4&3Im_8h7r\/nh&l+Fs-O;hB(5[4M-#5c'=&gLg]Q/S)K$G6XM5;SLjpcXl1H:N%H
%Yg=8ER99R);@/1q<?C--+)s$Kl#aiLHNUZcCrEQf)CF>F^4DPL;1%(ff+o[1,/,qrG1>"!bZMermT1TA<.4grUbp"tfP%?P$:qqK
%>0\\;jO7LbUB]eI,ZFh,^4'=Op"ssNEAMF31D&SAAGeAuiKfIAm*%]<Efd\3MHSG&@Q%d>7e.Pea-h;l`V=#Gi#Y?f]=oj4Aa1m[
%m7KJL%TSH@iu)aiHM6uh!5Ap+0M&(G8ic&gITrWp,74.i;UmS`0TuHD`c/e'c<=2\.$7p84OXb7=:je`ZOMiU7Fj+>)oh$$7>jo"
%f._750G9mj(duC"[_jSp5"H'#+W?*c"(Tf*L7r+E3&-k1r&[*^Kk7bC_1Qe;,@Lhph'n(_<C38b__?b6A>Z9o)i600(PYti=)q_O
%B]Ne`DIHoZ0gD13(rS8h-+P];,QC=]XMhu+<W^G.]Y`4mV7=kZ'5)=7?kin._.Z69SdID89NOttOB;S*k*3`)*:U>T-k$S^:@9p3
%0Mlhejrb?bj(E/D-]HqfmETgjGq$FfZO(7R0fkXTXsrb\,`I]r0t*'4(eJP2G0V=;%,cH*&Ou1@.lTNpEE>nd?jH+/SRXJ"1P]p.
%.O^K$`,igE2?r,m,GD1X#%8C_,TBS^iN=\Ncj'X`;!SR;n=_sl5oshWUqn(!BK#NU*Gg[X_&SD8<&\ab61oG1%Anj/H]SF6]ifGE
%7'4S3F;?Kn_'&`r\e0n;8;Pd0$%nT81gTp/%K#O7_'fAb_%iIL7sJ0]O]04hFfJi@<:XW.7\EuSHQie<WhY.n\1<2Bcij77$VR]3
%SKrGoCr#7a_7rTHksQ,Rc*6_:b]e#Xi:q`_#Blfi"/E^>m05YV%Clj,n7!HN"ue67#%5e;2=NnU>%d:n?3V%bWIYS+!]:3?n3N.?
%R9+-2bZEo32K%G[ijR!9CZN89$]%`lOoqI!Q7s-<#)4.!7Sj1C0\tHJ)&SU$!95"QY`'Od`o%#t5@/5@J[*PXOb+>C+MteR?j2;9
%?sr*5$HtZnV_t=_0X,UK,(P=e#6Q&,Uqk,PQ8U,[@>'&($&me:R9)jc`2F9SE^F/AHJm0f+#(&6(qqVE^fYR67QMJB=;Y-gjn1nF
%6^;]R!m\60QVddiig\F%M?:S3=KWGa?o1j:#TdA!]9S`)!2rVE7V<KE(iE_DEu&/rC;k70&04#-"EuI<^b0^9i50>c;c!JcXcU'R
%"GI(/$H'jiJ:U[MEch:fr&Y3XchtPs,&C$S>HGj#fmf.a-\CV_JOc_XA4)=Q(BaeMRPjA;:^Y\.4#?oR5(NoYia6@]e9<mMDaPcN
%(S?P6C$_0<AD[2Or9M*N`4mHPinoKeUTWPR]esl?*K56M&YGV.Is%NMOb3<d&O0g=o^onKQWV-\(I@tgJA!/RaGGCd*XVY4p_S:V
%EP9$us&,AGj'@5S.!m66WtYL[Q:JB26i7=R`\Nie]+QaM=I]&OP*tGAmk5U'NT@dmql@*+`gWb2)Bq=b^Z#,;'muE"G^j^E@3EmA
%In=35;RtcbV3p"e3U\X#1.U6/^\ga.rJ(#IfmZTI[(ktcS86UQnt2*De)gqZW6m2>e,D*/`^/Uk^\g@XUV"nP,#b=C_aaN]GBIk'
%?`3kQ+TO@>L%^iN]%f71055#a@c=E'gcf+#d<T@&`>rRN2M9$GMaog!q<+ioC_Ut5=4Z8nSQ=*?Iu2Ur[_K+[Y__%;q1eR/Qa3R,
%fe@[^%Y&-iKd9C5%gD8PflGc=Oo?OUWc;W`rFLA][i<b&-L,\Z)=&rn7nQ3eXM7F-b7/GDXM:F--nRE._*=@:fTa/'SW")*@JkhD
%WA5k!j_;DF^0`^=9D5u6K9"mdA^F).8;usQ*T<0&V>FQAk(L)>Y,!>#62$5,KU.mn\UG-K4:DtEPku`oAi'DFGL#T1k]ao,gap4h
%9Vrs.A_(Cn)ie:TYIC)]`@k_B)K*b?_ad=,j;Wt`p,X:0F8YV#EC.YlE^_4F(Q.+H246r'M`;RF%7]iFh]U3)oD:k/.N55Z711r)
%N89gOW/)joaaFiM!(RQ??Ob4`C.#He*9nnXfmTjL\o$K+RnAeJ@.n"&jkGAR^TdSjL6&!jZhmY9(p(8H'Ym)MYkr27ViG0ZeHCkq
%q,U/IJ:7..mYf-JD@k+]b:4_NOug3.\hY!j[)ma,4%7_P4A?QcYQNA"fR<R%=>4uspSAQ>L=,lRCQDl4e,)JIeA[-u(K+lLmTSp?
%P[2l)I48RtiCr]5jQ:,=k^C"R$Zpskqa-df^Uj"5.[C`A%S$B=do[5tr4XUaZK+@A$RpK6-hp]_Vk,eG94O0O$bn?JZo4H3QNDgG
%S_ob83:n#=?YFKA/iJ;gh1n9&I7Xj"]uQh!/d/qNZ?"S(IM97r9*p2W$D;`!%)49_.i<`g&?@IDi>2R$mp?o\\VC>.<bM3XZ4PNm
%/&O%7L<U&7g^Ls/R9HZ-n;D^N\>24(D^%]KZLVmf?NRpm83ud8Wf\nQ`@l^^I%Mj:.BPTIIMFN-234D@o@8]t0+>T&&5Sb_+HhE4
%3\;qB,f?fp^Q3YOpndr@ZDp(lX'u_GRQJgbM`LmE]3RFG+\ounIED!eM(N(imoNk?^2nAnVV$C8."9j8k<[Y?!nAt<GSc6EFB"5S
%Vtf@_9aefeIUN8^rpiDG95GAF&`;.B*fb,GCCIt&)1rke>SqnjdPpH#A,+"[CV@+"n=,lW=BC5a((&A&FG=/j]r$WqA,)njY$2+#
%(k.[HiIg*UP%"-1&i)U-qbJgFoIT.rL#H*Y,uP,*?RT5`pkL['l7eV(b4&%QL9WQ4U@hNNns9d"&9-U>0`3\W5F#\H)0?@`Rs0To
%(%cf`pr33Q\*FI;S0^Z3JmU&Ma64=g?Y9/gkeZ`21hfQJh?scM2#t6;I\H0\cUf8sL@@Bci3u)L*9G?3$fPM^]Mm-bL.BpF!BPst
%Gp`:IY(R]_Age2S05)Rl#="n60$M%X6pcHpNl/q`NO'E_$T#,/iq4ThmT_@Hd#n4bfp2R69^<WQU\11d4?Hn'3,IR1?<DVGdjT@/
%A5(Itl0H+1PeJ:s7ULH?!Ao]hqT_J&+$K/i:/`%Uk;s2SI88s`hfu+:2IB]WpY=DKVdWl$b]b*hOtU(S__sJp.c4YW?t]$6"TpL^
%(F!4l]%.KV^AP*dLQ#UahMnn[KuFipN-crB`GZ/'kO:o:S0Yj^$K#i*EmuLbLM]cG%)*..kB&$>7:m(VmejbcJg_ddrncTQ5Fgtb
%6-IfDBN%:8n<7Sto%orQ(k:]9V+b$PRE``/A:l`$?Ebk9h:jQTR,Au8]`i=-nuKif.r?q!a$@7Y@I5B'&bWe+g5CopDKDbH]u+*u
%$Y;!c^1@JN1A5n_PFSincN2Vo$XYP/#+T9pfA"PcFLGLRYQ4lL-L56N)[<3[os,nS80t%rh2RqlH=Q\I,O4qB`K-DB`mY<=%g4jW
%dlX)`h<9'6Y_VASORrU57RtKp>'.EITpL^I8@G&qHBmT23Bo0GG1Iuj5OUF>`J'm"_PM(]Uuqom+7X\jk69ZqeEVaX(NgArH_]B/
%n6WYFLK..ImkZb<aGcK&CcS%S2$&Q3_fDI4?,j;4XLrN<FE:VQ5`d:DT)P.C(K0'q5\"7+U9kf>]_#77r1@,;8NFbLHJK&k**m'U
%]KCi5rb#8</9VF:4"Ds8d]>Qk/?=F?NK8SJjFu=lX4TFXq+QR8V=i6?0;c#<mXbbt(erlf(GqQs\p9*!_,)+*b*A/l/W;fEP8=;#
%46P\$J=@RL3I,>9n_oIkQUDNATUh;@M4sJO2U'Lhaie'4MBX[C]Tb10BUl^R_TO/PGSulY3TulpQZ3hWAt5'O]GYNl3I+]VZ#QJu
%7G$f&4!efiQsRsn#THoC/sO#[0rA,8Uu\?PO'NuXfJTa50@</IrbtJ9NSc2DDq8bi44V9'Od?Y2N)+*IAW-Z(RksUj8:n81_T3[n
%V(qO]5T6ReR0@7;,B7m=j?6/Bm>\p^]JK,A,m2<U_T5B7I9"-cV=,NWEZ2d8X&L3e>o@pEHmEkYD<*VXNR#V':J&Uk_T7WR'mQWO
%abqo)Ea<JZ0DCsIdd[BAeTF((oS-'JmGMNfN)EY-S_RbgN2ZB:K8hh*[*HZa!I(n3f)SZ=/j4n:ZCPUg]+2!?C;-qB1*kLC5&'[g
%n1tYm1HJhHZVnC*nKQ])l:Ic2"\$udAWVL5=?E6kr(Y1h&urOBGR'Be,6\f8aS'8W'(J:h83N`XITDrg)*GRLk/E%/(FVB++,kmi
%5I%DCPOJXML5#K@_)lJf*iIp:8>,)\%(qDW+?"6`i#NSLFoL2,'D"c2^Y:?KGG3mtaV/A\N./6?d*UHiaU0o.gq2>e#,i?7hX-9e
%3:Cao9]LhM[i9gY(]@fq&qk_(FVg*FFG''W]$(&QOgHpi?.PsP)3hb`TO&GS>lk)Y#f9k`+c4R0oBh-#[,i7@?$N-3i_HrjT)]g.
%3SQ08_hc'hm/dHDn@iu2!hG&#OAkOu)R`stG#9B>kdJt,2Un&ta"FSUn@1+c]+?00k7"u<n/uW/7(L,.(f0!@]PggA+\o5qFO/@`
%2=f\sb,pS"HG\0k!2Ngid$]#R<C=k$R919$*Oq7'l8IB:fP,J*&HnHq_Q!teAs'Fb2Ht9n<#8>.N1;P!a8ijtWb7R-88o&KfS.QO
%:5,FskA12>oU!;"&aI5#_RO_P>u]@+K'Pb$]93=?/6o]$B-o"T"_=&!H=o!=#bcF49:%M)Ws4hA0\?[)SXFR+eo!'qFI.^.SOXL2
%rC4VubJ_2)J?>M2IpKpN7MiI-+M54hkb<O2QHc/9N(hVjFI0t/0-%RE9'@u!=E[TfH,nnoHWJEn%UD])DITfF-)<Fn.l_Vg8r%\=
%+joCPl%h2XM([A-LAdW1QNG,$c6U!5Z0hdDd"u3G4,Y_L((fiBYirsRn\Ln:1Ka'1:cOANjGPZB]!Tho\'io?J6\5,7e_aN[tA-3
%R7;C'Y3X6)MidC9`,&8.M"l;d#(<4W8>@\f/nt\&gC6mCig+NQAc0*KNlde!I4d$/Mq['!cWs:sl_M%Lbq[4e+j\]]Lmh*e@c&dH
%q-_P)M5E(W/o>jm$Cj;H*YXG3NBNU?_eu;nRff!s_`k/@^]K+oBLP0S#RL]aH6LnZ+OATtTUG8#4dQfLiHo"ZjV9<S1A4sr*6X>H
%kJlruHS34XaM9laY1>Ci($rJ)Wj/qjbauu`4LYe?%`(4@[-I"g1md`d0'p,*["(kmp08jD=GPu<j26D4(\V)t<@L5*b@2ED1n6[p
%FUQR%(\1g'3STNUQNCn@,L<3`6fGt;4I>abT&%M0+ip%I:7_go!VR?'>e6h%#pQ=lJAQh$l1DMc)cLfWRm*2,.c-`Fk@0[^B#3_Q
%2=m6fPs1O&*S?:nl#S]kT2P1A,"Y%BF5bFk>=qo2Np96`*[5L^r4/8$:i3Z:Es]EC[?pLJ;G`T2=1?4f9&FumcUEF]hmq.tOslCq
%MFO4r1\dCkoXVbME-$B(cXe/Z1$@Xd5>/m;(BRkrRPC!IVnq$$]'':.aMVu$>R5EpX^i:qJM-_aBL"P0/lG.I6!Y=LaT)S'eJWHP
%TUFsO\eG/'H=>/H-W8K62-39o8IGH%?H'4B1Oj:WB%o=q0$8e1PW4/qmK\5McXf!dWBEp#,G2NHiLp&q@:MjDpFkmDOQt)L4ZAK;
%W2sCQV#]JA$[XM%'d)5aF*S\]J?e:CjeVOqRlqS08a8?Lcc,W)Yg2KS6ZD#1h,5KE7IuIV3&>FrME7(SJM*+s[++*BC^uO?k\e5)
%5W>K6TUSK:"uF@,FCS]b.!1lJ?(4-H"kUhj4+f07CKX<F2K4aU\9?/kbN'T>)X#IYL(&Xq$\p?i4a^FRkd$Qp.4F6'jhJYG]o_H@
%?4<^<PNXc)W4T7E"-:e?B&SS7QW/r7;FJXRWM8.84,GR;QfYd(4,Hp?&OrLQT,m/b-ddWU=C>j0.RV?PJ[=Q<@/JT>_2En4)lfgX
%P;SV@/@s%+1MuM1\j5,W@dqO7M[utp5\JIj,JqfeABCQ=(`HH:$]?XB%<.>u7Mk3Z-?bqL(P@h(J6cl2+XXa@d-+AZ:D5RrPRs=.
%U![G0FW.A3#9)NMXQ+FA>t>eG44EEA2J%csBQQfi2OYLGjCSEb%UlCoNG]#S7[M<KZJBBj9B(YFo>(fo0#Tf`N(+TbL(Al*Q_u7u
%j@l=A0gCrPkUI+t0Oe=![m1Mhm`M7s6m/0)cCt^-$M?p9k`YiegXb_\7[N(B<d$Qa/e,C7ilC-`@*d.U](CB1/R/KX#SPr)>W?i7
%e7aiG9o8>7bAm<q2ZFZ-!7khGa5b+2X2Xl`#]sMAdp$nmgofAn8tXiqQ4`Jo?.%_!SibIT\8pbiE%"Yf;LhLoM%8\'l.]40M/t%i
%O\aR;<a@_$Y$kJ:XLZg.+i]t/buBqp`V,M<Q3oTmjoT%Qr2t&%,.rYDVj#M?"+4AkF!62Gk_-L&"WfJ`E`#V_eb[.K$Tu"tV3EMI
%^GR74A@_Jp3jT2q/m3t7e"0Fu!ca:['2N81P[BeuR?)nfX_^TpPI$Y5MVc,a\2_T*4Lr6<J[A%7D-<n:SKt[dDRb.-aG%<YjGsu8
%E_jEE"@"N["qg"3dc2+\9*@=/i9ps37SO-k#VfT+E?W;YjkRAb2D5>RgeniOFf!)0M`=iPj!%'QW4J$,Ur0_P`gIUO/d'ZA.kX2+
%Wrsk(JcPG*c^_M$Hdp;rMlI_%T+srH%5;ta_hF2&.AOf"70Gss)m71Yes-ZQ)-G(mE1:]<kZ#(:(SVQV0(:WThA[%Z+<1ZC3=d_n
%8kdM<%5,N#bdA;r/oV#1F5Wc^(-_>D!Z-.Y>_<"m5Jb:sr3s0?U[Z-M$^a\tD=1N5M>]L4E;!M/b-KI5DXq"R'#c9EI>aH-H"><!
%"=o](9=UNu7/3"hP0!d&e*@G!gMW5\(Y[V]>;eJ,Xk-T8l"r@7Ka[&qGI8hV-uYkGeei=`<HVXcDh1=#b(Zfk#]/;GWq5$jmL,k<
%Tt;U:7p<`PgMCXS-bF4"_7XaC6AV"_;r*&/"4insh;V2OQuBl%Y?"]^4L_Q*@+RB_/LnX&%EU3l&\qEaa";O40TV1P(2j66lb[TK
%+a6X8Jm0p>,&H`G[`&k4(OfR9XDrPjr'h[Ik\]i'6&#cZ/RAaB<@>7-h/Eurg/<mli'M:=)CX1SBj""^<3[+kU;dO=n\T(biWfVQ
%L[P>?+TQ/_7FJQ(/#R5B"2R!7nJf;=VmOE]A>(Z8[^iF0(PK6I#*AE/2Cb@=3a6,sXJF(mfFpQ\:1d-=_e`C,gP1^/NZ(o9=?Bq[
%3g2->:P_2>Qu!S^maEMgXVu3f*o!B85?qo=RtfOI`AZD<C*^5dn^83`>HJi86")i8RQ#ld,ZD\lJM"AZ8:GLT[8T^6N4jBaB'=u]
%<ae3Y>rrIrA'D@6lD(N+[9`StK"0B>Z,'X;&G%Jj/]/HKZe"Ea&tHAN\>F_m=c8[A3`4I;gi@`IA#q!5Vq_j7(:A1QY;Y/#m<#b;
%Kl6S+<XTm<+2Lqbhh1QS:0$&Vf&VRc<k^l%_,T/+92&)[X+!jh=/&k%;o%9HU07[LD$OuJ\f<71<WdG"eM>n:<,1Lmktor\@mbQO
%)Lm/#)`i,/WuFa?!%qXb3DlpM<]Nr-P%fT"SnVrufu(aKQ<I7H_jkk4g1L#6(QMZIW24`9j&09heer5mHg!\4n"X"mhYClJYsc[j
%l"S8gdd*0h[TS0Z#H'ja"c_`AZ_1='I+bBoSLIIC'Z0V,HdDgiDumeg^[TZ<30[g:lNDYac#k7?$PH7"<F&^@&OFJ&kbPSa$Y&nT
%:-p]HM6744m@<GZ3$g/e=Q]sm=YTMVh7+$E,)QVH`.`UheCFA.rV)#+eqMC=4)>p\Q<@TliK@NWBRq:;AAs3XBdD;uB]JiTLt7:*
%6VI:2\UoQZ1^.`$=D.`1X\);\+<_Ta&6a5e=u+Cf^1AZ2Z=u%_1XHV!k;_?ML3h7*G,,uiY(4q\r@Hrag_7oaB*$cQ]!pATT1'<p
%BP`hT%fXa:fOl).4PH'J(4eBf0^#$u[el5/cVE4hr'EQi+DG-,4Ne/7o$qb\A;3"E$h(0<-9:J[S@1/6Zd)=8O]Tt6n-ie039Mh@
%D39Nob$"Yf)PZ)IZP98LKX2%]OjV@hHUQBo/@Q#Cm+T(oZ1O#d^:cV]/F-V?]5l/JTIF[Afus6!OOT\1Vg3nrU=lM^>!XsVh!&gE
%=]VEQ?90$`9K$;p\/NC=Sr&_r:,.Z1S7^ihRpm-f81nYFmn9]<S7$NLETWUYT%l/KfkJPL-^43PIj(-^Uf5/@8hN2h^;6J$*S$P9
%0%@2b=!?n&99JdJRobnhl*5,>A\g4?Yb/8EP'Y'hO\+^iNa9%35j!(Q_HeJ$4#FerN3XYS9%FBDCpt7&&Ba^a.o!-R3<Wtefe$/u
%fku0s6"p\8PE,?j;3kT/Sn?7Nb&*YZn,HtfbhJUHZF9f4rERs%#A"MR@55GK5_sUc@1+EDKFf?^Z7V.a8!:4&VgnTXcT0P3?J@7]
%Q5%%(4u9]J]i9,+Vp=ip'LX.)&??IUiFsrbeI%P;HbSbSdBtsO=:2:\PR0.0+6q*qpWVQOMCsb86sjTK`p2L?:pR=1+b839Z?0<F
%h76.@KjbXm*s9XU@&:7B<(g>ig6eH*#6Lbhm/b3R7tEX/3K,ML/Y\H0;Ih!lg&7T1E>1rK\M@\?F\f(^A<A08hHUM?ApH.`lqqb7
%jeE2WF+Wbt#dV\*72m@M>t?^IY*]\)`"48)lP"2WPiQ:1$q._-NaQV`15ohB2L<6(jUmol9-h&/Ur.Z@3K%gMfHpU,do_d]&74J1
%N=Q9:5b[[h&$2-.WN6OcVd*mV'Y,um=HY*L*llOJQ-+Lkm<%Q*5G:'t0ksUL&#as)[?SLhHj#g+^-Qde%X8h<i8>>`-?:#soR*[<
%,m$lM@D[T@Qt]gB?t7aM+C0$Pk?05D7!%FQ>Eqj<(j2K"@:gdLKRW#\3h,saB7U+Y@tHKi>kVZ!JdEHBk)qLX'Yn7YFD&CG#S,e'
%A4WRJ.R#Tb1RP;s\I3qi`)A/P;^;u0g.QH.X26WS89*]8F9,^lC_).-dTVE25naF0+n[^LZ-:P4j""M0mdMNJSD`TLBLii2eTAt<
%mig;tkt]DEg[[CV`8JF&<%IA>%kj1:Ur5bY59ic5Mj'?p@\GoIJQ2R2bgtliE\SW8JlJpqQ9'qW@H)ND[=n"PJ8Q"i]g[d&'gq#Q
%)<)#A-RA@>4r&btpaJVLhaEp\1t1)<F<a#[g,W'U?&md,Ch>-%X?mNCq.e=r976KBO;=7LdnDGD&[`5m5dCG`JkWnKn!FNN^-&@S
%_s9)iH0L#&)^3ZsAq=cj8./SjEQM1@->BV;aXlM@.B[`(ma_MMQop>f'>5/dP),@r'YVSN1mNsJ2kpAqn:6'9Ab&Ghp*UPQV?i-B
%^_/%6",8.4,-o.@cQe)Jb't+`b9*.Z]HYe>HaJX_9[0\11a;Q5@a5)#Q,L>+,];\JOD?R'`4[\'FteglkQ2!1N#N6L3j%?\c<QE\
%CQNOs3hE<2R!,%7o;QE9=A^h7i#,W9=[EjdObEC*1CIimUSOF=b;Y#**dKNZ5mo(F//?mg:m+$ur<AeYE2?OXPgROtb=k2]&NOD9
%MkPanH#W=3!BSKNE79o`a\]gG^?Zsr(Wr(?BX1ql&]Su7U;X$+dQ;C#B41cVB,Eh>b6EQBL!-gKn9S2VZ<Z`(g.G]oM$#PB>$u=1
%^1ISF2NHZ5_Z\$RaOphrbY3e++K$NOE%cmj)k8MT@_>h^Lpr\^PYm\sVY(-W[e/]Qe_H1J9QEK'6FkK:"$s1H'bJjBiV:>B%DWK1
%R2Z_D/Fg]:WbY`[A-%WJ0d&5&1#q7`0/]j1@O-ttl7.U!)RB]]a.Mo4fOROJJbL/?bto%aSK"i*!4kfX#'M0nC#4\Z2f::ZCfoJ*
%gknhA]2)9C,)kV/A;VG`1K,k?`[qLgZ5OmhJts<TN]EL578DpmbFo&&_Air7huRr?:N^Vf8nJiV<NMCAqf-/Vmo73T<6iPgT9H;?
%(^8n]N"VMYQn4>m<2k1:3!i#o5k)\/@0%[u,Cr?M-bp@h-nkXR&j`1A#<p5K4LIYhqXT//*bu.NABq+HbZ]m3";sV-2\Wn.LQ"^V
%;OF8lBr3WF>>FGtG$-(G%86IFkpg<0ASV?_WHD4%AI9K78Fi1F3O,[#M-2r<9P9U.E*1HkU-hd#dOlO3X-/F7F&5O9"A0L[#;QSH
%23^p$%Y_B)QWj#3&)t=alOs+jEE";nSb^)I%uusSg_FT+(KV2@>B-uGa!d8g;t(6qP:pEg&k5ulVl<E:M&EY<"e*\p6'Yk,0%]s:
%Sds7HM:Zu8\u+(OHnGW9e8=efCSl,B.L)<X$r0MF@@/&#d&S'^7;;$L_%K2B,?Y)=M9pPYJQV`KQ'+h>I86)?:]`!YG9>0akqsPc
%U2^=u0]<bf-CJq!9.X3TZG=ptNDW3ill.EbN?K5(_+6OVmRfKWj36iPE[=Lk-kY);PLsO=D7D$1;_rR^@=AqPW+P&6_>LgKE!>NI
%RB"B<>e"<.B4BY.$.%REV?u2>g+:@i'X$RNQ"CR>n&[@2qNKT_1._U!H,<AjQfj+Q&d]kmF;__K[G2-l*%8fQC@k]7,DWLQ37oFs
%4X51oAD6!gaY^/HiaGN7?4,aE,J`9l*Qq&$3DWRRQ23?6"gVKt8u9^e!r.n=Qb3hG@qd;@4\=06bj7`Cl#p^mFY_Lc9*s3o:R!iO
%P[7hGTpP?tnkFGWpcLc=K"oVK3Lh1d5l3,>\>8GB)/9A^<;jUDH:P8odOYSu0hi+Y-#+!L`$ehj6ombSQDoj6c_\"Nb.,a)c&Zq(
%Xb]s=T][^(:3;(!1le'e0Rj7."TY_LZ4%L(R@'j.oh@GYa;]=PQ0:QY#mJL"3Ee/5,a1c2#N/.u$@8[CN:`k71h7@R##0\eMfe]'
%R(L4,UjM?a(5g[o\IdBpnX`JbK:%LJ.:n?V"bmYS%n1K>oL&-`L5\Es)psB(;%Y$l$)Wsf,4u!d+``,-&h9,lGNkr\Y*nof&2-=h
%8#CVshnkY3&lu/:\mc*pUn3oV&>Wp28H?Jt,"?=(%XaK3b)1L3URXcqA6C)d0m][]`_,GA]9&)hm,uLDNF&8d+Ecm,9uW;cOu>t-
%(G^ug%lk?3,QeV1CN2oZck&Hc?(r6D(%cNm3FNuUb82I%am,"e0&A54lrfLP)]srl!gN3@JhL<1JtT>F:oEK*-:&95:+fV6.o]uJ
%[ulF$Xk7$C+>p[Ka]-G?[8"`;#6RCSEBkm(2)^hsJZh<i+^a>GLhDQN8hY?o)S$!d38AI)O&?9?AI3VlL`N<f+"jD$MKG2*Wqd9T
%..f2C^,%p-6>iR!G*$IeDpWLZZ%W\;!ZF^*]_'`%*WZ`B?NtF3;Df2/!kJ^C&djKW:cASSU0n,,MB7PJ*])Z8s%kcILD:Z'$slYO
%b-=L'.PA,.J$bfZ9-nHW+s=3WLH:SH4&Tu6W]gt?pj0O.$hdru5tBr,:>Z?&LkLTS9GKl.-JX46M@"p.QRlFqFQUNmCL$U4iQSep
%7ReAT]g)R9<.4Q6!6%!P&u?T;K^#Y(!tHR%M&l,/Qo">%(22n;r>2M+TK(g,<'E<Z70na9n-GOOo_9TbLeuOu\/h)jn8O^0Qj_id
%JU2ZAM[PJ=OHp(<A7p2a[$kNHQ7s_Ehc^$#`&r&1Vj0_d*+QF?;!_.:*02*Lb0r_>.(h!ZRir!5VGi-?$ed^+9ErX^$a==N$Uj/%
%Wc/',j+!l/]c^:hPlUE7WWu#35hAmB)B*.<0Io#Y-l(8:,T64o8n\lL#sBsSl4qHqr/U2;HJ[8V,b0ljnF^]FP7H,]^g0Jk.%iXJ
%1_U_akh@6,K.>Tk,naB`mP!!`nB!@R".W:V[S#4I60NhVWJ"CE/L#957'X6/YnbWIKIRbC,R^E$A"=oW8iSe\;>Z,1o$3)>omd)^
%'V$Sf9$O6Qk1%8'1;c[#b@Z<_'L(T+nVd7ZTukeRl'31[LJQ5A0`ba7TU!G[a;#$nE[SAO>VP)V.1,$NQ`mS17#Ijlo-:!T".GR)
%BgJ_+ju=$_6S:8-INp6J!i!ch<)9%,;3FB1Ee%VjCKM!>3_C[R$e"IY_$U>coit+0^V#^W9GCFcaEtb:![X(?q,"R;8r<A*"\d2C
%O5J"pK0$F6;6E9H#kh6e3TtEskFFr%\h4+S6R*d95j2P]KW!6K,fpZ&W<rJN'Q#f2'$8,nc6T)rE\)H?Q@N+lOsGk+/*Xp);CW&W
%0ApB$Q%8>&HOEJOhM8nqSG*%E@]:cO@nmh30&u88`@mdND^+i.M:jWiLLj4rW_WZ$@akpOTZ)K3J\"<nbJ'bg66YASOC(#@'d2*[
%*=baLZhJ"iRH^kb>Y.1XSbcG'dSQ\#0(o$-8Q+[Z,NK"M&!dD<6qA^q^)^P]B6\@7UBJ"j92!Y5Z!>C)>^js`H\rFL1\H'fk^TQZ
%.2@sb.%\;p-&&RjS.bC04>i%j,VCH'MGm[`15RFA]gSuoEI4?-0$<7t^l9KaqnW!r@U4QKkGM?5X?.CH`'a?XTos!l$CRZ[MZY%2
%M6m8.YojqRPGEI*Z6je]*tf^meF"eY3+.V3nF&M#,-i>J1_[05oI^nlU!sa_$gs:V;NZ:mJ;FuH5YH^O/0d9;I22Of>'(r[(/89f
%`jB-,]NE%joo#iCNY"7s%2dLV(m*jjp+s3<TE^[NU94g-KLf"G)X*+qDKVgoTq&cG*jAD-Ns&]D8m7Y&D$4rr%\t<?c`dnc$6TLc
%WUkn?4AT(iV:^@::+eQ,1YI##a`2u::+3W$dp15JTM\'a#TRNK=kls3di_NIRAK:!<!KKRb.7BLlDIe=,Ig"56t4kHigbj&/<_k'
%-_>hul(QnU4d3`">j`66H,D)%#;%u:@]2a7gCk,IJGt;WM2O6W]ZAY<'[,s:j]7?Um*Cq.'Gr:@AKc0S!%aC(3Y]=VhFhHSaLC4d
%D:Qo^c\t6pLII/:!kb[p4&;9<&="Ls#@InQ.Jj0[oE%eI=JJ%#LZH]8Q*OlZ)W?)(ZpH1dQu".:cq>&a,")MGD0i-)k.Y(o$K[P3
%BYabrp;F3R;KD="$`M:mj_"/(ek=Op'ZHMM/.pj(.iFZsArt9]A8%9)Ll[*<T!Eo5h*M\\Wsd-!6"72O?YLAJbX@Z`Yuid\#/^)q
%7SGpGU'GM!<+?C>Z$t.GNA8\Id4lREF\.Rer^eXiT,K4J"%Gr:PTl;_/7hSlN+IjK]F]EiJ5l@S2@RE&6*A%<-=GCL9%^HJj!`l*
%hLYJMA%<5$(f[K+0+/V6mf?G'>]9a*+)I@H:I!dQdO#+Hr'G",4Y<Ae"!q45gng/V&(*uhE/DF]\J%B14LBR%W#RUt'h%J#?Ar\\
%Ah`5f';ZC!%AH8GdM!9*i<)@<7@HcGUb:lF38II)a?@FBrcbBqHVhRBO&aUb0<b!LFYdF4$24k5\g@Vro?;NJ</sY^<:`q?ZD6BR
%3Zb`>>gS*4qaI=>3@Y&DW]3l:e(,JeE(GIT#U89JD^?T`^_^*Hhc;IkXFkP][l!;?BW3A8IV523?RQ[k63O.4a"UAj+%cZ2!-]_:
%:S:fDpkd!qL`%h(b)3R&0a^&5jGW<"Z$Q8_a.@T0_L>M403YeX8Kh--17.PpbBc/a0C_>::qnL\+injm4BJO:?#4m&!>ptqZm^G<
%6!>%;kD!^[.-kU&$bi/7%_<:QjrJoE/<4g:N&@,4@:.YA755`o'goC]=p$4ueLs7>4IF)OGK`a-5L-<EVG&d%6Znr54`SFB=,EmD
%9H@!,`+eHlOE7CK;J61bn^P)l5glDHJ^Q6Gi9'8qe/>L$8EM,Fn$#4;QQ^)8/`;?mIj0Zs6>9!j-XU:M0VMCp%\Fq])h+g"B:g?'
%%arKfd8EbV^L3kar(4%p.'G.`:q0TfOB'@r9"bq_@MC_6ac/`#8(D`oF.F";CF3<R<S8//,<\Vs72#n8W2U7,p.uO7\`0S,#Xi`p
%k%IO>R'q:67!*Q"$*0D-@Y7MJ,7ub,QSeJ@qkCr>PTEGs#1c0u'Le^1e!S4G=u(.EB--G*n52;qCK&b+Jmtj\LHh*OG8i3TLj%p<
%EBk_^SuT*7L^1mZf+4*"p-$Mjl;-cL9J#Q3bUm),:_Kc/7L!f(?@J`#22<XPV?a)Z"u3_e%e2%WMA8ZTC#t3u_i?"mJLR2h9DC!m
%>Ek9;8p!X]1lmZtQlG=FFL+r[Gj,/o4BGdj@_uW+]:Z/oTr(]pQ*ZUB<QB93G@d`J?"#VO.\)[V9-#=q&\.eDNa'PcYp,'(r@Y'A
%Z+b/PS#QXCApeQd!%lLH99jd8E`G3MRK[d@*A88LCXIF[k$mj*LaBkkcaS`a.D!H#a1T?iQhAgb$Pf"!di>*4Bq9ZF#`Oq:Ql4D1
%.W/IR_E0I1$71N.TdlF%+l?NN!at*U_S@9OBdpf\mn(bdWFU*RA"!g+%_6c2)\]pioNT7*P.aT_1'KC>ZY6#X6H^"f@bSI4fhXK#
%0+n[d7!\&JE.Q/Y-UC+iUj#T_@uCML`dk(\:3"MI(TW0T'YB-HR[kr!//+\E!hfb9l0juj[c6AT^QQc6/Z39j'+qGB>qnJZP!kl!
%W;Q9#odU;Kc,g)+<oT.N`(n^*Q85nPYuC9,87O[>ad<*1-a<6u'EUW:R^bAD7rD`'9d(u+Lq'="%Q2Ui[S"q/7iGeI4"Y9E^*mu,
%$QH'LD/;cinI0`[,$^P=TV6YtTHs%W\l@AZ(sVH+W9f^"%1#3=a_=Sa#B=4sbI3j5D4-f'`!.usl$3mq"?.*;*D[\n39B98^n$B0
%'I)LI,C3coF2ZJp-;;TU71qGI'&AM7D'd[K3gTR+X?`o\Q>'SjVP/Wb7[.bpp`!_SP+k6**+Oi!E-:"]:c&g)jQT7(d(EW]fu9-5
%`QCEba!_\Jn/rDa=J/.rS?9?1O>>aN[OJ)O"<F0%ULIa(,Q]HZPGnWEI&CRG'eXHYV.UP9RhuVuFm=[4b6U\6@`K_(jJ*uC#>_o3
%b7b"J!IYu@QVi@b'g3-W#H:Z:HGV4#WT]?RLrL-[84ZKg,s&1!m5;eDm&#TG,fqYqQ;Em/5Ru16U`0M&pl^-)e8+oDI6]iZ%VOk*
%L0?pCRB_CO6jA=s\-iHL(ofcT%WN(d=c=Zk!+FN%if\'jW=JumRjRFD8]T4LbldTBV->(4SBS5F(G[jGjQfd!06&PO6ZJ8b<L&H`
%6an[lBTftrP4/su.$_1gOf^H?,pbL6^e&Sqk#NBhg.jb^@l0':kV3/p8kM0V.c:rn/*RQGB-4!!L_B@a5U7b+?6Tj/PD6qE0@2"1
%1j(cBd2af>@KQQq+W-!JfL[P@Arq7Pq>4R[UcVMT&R-ZGbc[Y4/_u]O&!C+B5b'>M]5+)5900B4$+'7Ya%8^Oj?qa(iO;A"MF`6(
%0TF:R79M_+e4d`mGrXj[-dc%+`\GQs'1g=S^09X^KOVl&U0'PJ;3G^OGY@"Lk`1JGL;4876uePENaqUZUZ6di;TZ,dgR#XcM#uTQ
%"dmKNe=S*b:S:\I7"*6SZ=51(Gq*&T):SrL@f!+#'"]fs'riJA-L^/--r*_6J;8nA1+(DrMB;8\GZ3k?ZDp8XU7lJsglm[CM0bOK
%5Mnk\?$LQ@Y4/51q@1W["eS!+%`G*4_5W`oNFM0ric8pO+][o=W>G"6&6!<1AbO/@4S,-9M*h'&k*hcr`Xfe:_8fBH<iS]bJ)$k/
%$UuksRC![tRA`ZO#IbM[P,Dcu?;&4,WenfeKuQoQk>0-EB't@'>2h[+!'n_<n1ncdi3Hb-,t[aGM2o@s.pW`0W+tm@B;Y/dDc6GM
%"$K.%QW3QhDOGW;-=`KIiabaL>Y7t;%E3Sq<Le7^9#^fj<K]&dPd(]%a]2&97\W0d:6/?1crALg!uoFR'ZE74EBKg?\TjL@i?Akj
%NPuV#Bsl8Ta$bEGJ>nBRFmUZr3?W*p>BHUcJ34a,97&3-PE*efV-`a<A#Cch0\87f,#AL2>B(uU9t<iAW>r6IP!g4B,2'm*MXMAS
%PEF")P"luCM(,oD%:Gl:2l"@O1*B-P1]6sRM=@L9=HqI+<3ak`CF(I_,a-$WXJa3e`k9FHcjYnjjM"j'$V<@B-pE5f,,+8j0Su?R
%$=Su-3h#EA<![j;J5feHq/WI,CIoX8,CSs??L"LmeQ8Y!QGfMTf?b^K,G0A*AaKu')C:cN[0/^(LZ>q-Aech)`2%\Ti_&10^aR6%
%O0:0;1tCab8Q,q`;LlIXUcbA-BT*uPSu+kc8ZX#%^]Ii2-%:+gH"8J'K++Ns)3Y.<]0%q"BJJrBg<`Z`L6N1ETgh2hbT_QpNpAN&
%(['@:k<30El'a2i-XDEM[4k1l9b[_%jiT"!LlYA%IBH^n;8NEgVb&gEi:]qfdCIjs](#O4XJ7g`?34o#BNp`&Zf99sU'L5<(*%"b
%.4AQQ";7ag4#l(&cZ#3X70#o``,6gFo0*g-cmMGNGZ4s7#)Q/4$F,t6/)g]1ek8/IdYZKL/QE:P4&AOc%e`[l%MWlGLL--(j[2a6
%J<I8Zo:`$q74636.aZ,1oW&b.<\?SI$q9lKn-Vr++`MHTn7BjD2.S?0.06c/P^fau.Q-b3WkjS25ik<H&W8h@,$uYn;ORs6.M!f1
%OK)15N&fQ'XMes<<\B0RS.MisL_^R]&Y$s/cLD0UaWjX!bdQ/?WU4hp$8in*!q*EDTl?&,Pk7bgV0'.6M3kcNB'L3A@g'@kcIJ[,
%Gmbd%_>YtTh.\(10'QX[<E!mUQgA-Kj:UMgWm_iGm6!?olq![2"Ap$,cq'n&iFOYqB48n1TiHp>M;&4Z;dP)SJ5=L;m#ai_%D4],
%J9*S]lBSUY@pjSWM%m+UfMMZ"JRQk'cBQn`f3,),^uF-;;&npH(rq6L2^\mG&u>be.WH;G'nOru*6j]e;COnN[Q?CZi`o(8!>AU6
%/"90o]8g-bn\Wp]_]s;Z!<\t>I/nH3#s-P^9%X9S_jpHND6DBoPOFH!J9cWlM&5jG13',0h_+ha1W)P/WP&cSodAZVU43_H\6)2M
%eIQ(930-uh[)qP/R;AFgaac2ndXYL><brV/P(_Cd?i3)F#hR[B7f%V;*Y>K,E%I.e3Re%&C>dU`6H&C^6."oCQBs0L'oaL#9R96Q
%@<bW0Z:aoOYG("52,nDkoHZq^R,*F8^OaZE8Lt%)Z9.C!$^)S@`Wl:E_-`JaN<gNc>sjMWaE*JHFS3g7.9ENb6>4Og1)Otl5i\,?
%,)\md//Dt-3Y]UiE&7GloNDO>eQ%!=r4EZ8`]I'k$$f=:9/C^HJ@oMITN!5CNlt'k;4&,IDLrQ+2-V%=chKgfC5P#5Q%a1r,]Y@-
%e_>j39qaW*a[ZeW&gCVS$W[PsC5d'JW6'rDoFhKe15qRJ[4I+`L^=jgPJMqaCHfH8f?h<F+V\]P*D``0P]TS67D!T2n9Ye(_D@BS
%9;!mfE9G2+g25\_2sr5g_M-X^@j6$@UiY#6/Q<NjQB[7o0<Z)=HRE4YKE?$>99@RKE]W$^374C?\,uKcI3HN!fSSPH+$LN4_W)km
%F"kreFHfpb@Yr&9EWm;5b`@AI+YB2Q3iASQlM0ek)FUU,iJEcjE()k*(oK)VM8Dl4h)OJ#:OmL=F>&LBV.Vt:1'1`A@K))h)6*^7
%?iskq`q!##-"P>`'"+]!KejfCMj1D%@sH'@O[Ln"&sa\ADa5s!@7r[jNR>fYYuneM0!Teb:bG,=9#j<@!Uc]T,)sTS$N^X0@<+0G
%Or0'b9u?QST=A2GS,"a7MZ>LE=?c7CF&.Hg$_iocF,7e&Bccc3*=^P4SL`ST;pQ<)DQh:Ci2Q>Wk8tVROQr5N1(.?H'(lG0rP+9s
%6duA6hS'V5;;t/LK-oqr@LhZa6,#rA!>o:<o.=JTYqh.SJq[M5's5:<Q*m?QRZe5=.1j@T!8W@4H$3;D,9@n@IO1F[]O<pdbj^9N
%$Q('.Bjs#iRS.u^pckH"nO?u&7PL02@!/+s@=4S;GF((S(l39/"er:.KI;@3,=/!Ddm^%CU"?bIY:1ss^sn%Y#&(P`ki'Jn^2TaM
%'CJbl`8`O]%Kp5H#\$09A-u%bf;e<;:m0HpF_X125RkJa]VE(eI9psUc!b4`+u[m&Ja&FLkolgn&9]b4.X4#S&Mm65-P=qpB+g:o
%?O=6HOAEfjN8i;1`.Y?1++n&!iK/&[EO4^;q1^K`]i)+!:uS4]a[i_aco<=kgm'-:)AF/q=HbB1/+ugdXp[$X^^u&V.7L7CVRlqq
%kYY/:gl%>]``^9>M_g*V^1\]+^C_ga#Xil7l;BG#-O;!!V'J/_"BqhT(m\,jP-<SX^mYAu2piIhb;g.`BHgF1KsW\bg`KcHkXgI*
%-:Dj(M;W11]^,h.Ar^WU,%gdNr'Y#I<['\DZ:[mPHR>pr?C;_aJQNCE5r&K&8d7Tn4sQCs;W`9s2/<nNGCH?j2?^!IC:iRBS5tcH
%4nY:Jk$CN%L'!BuM4,:<!e.9lV$THlbCq6>0,)99d5O-Ze@g[c>-un^2(d5B)X^3(.n-^rYU'?s8^s?R!_GV=MBYNn9GJEIYJ@q_
%34Xpb7_Xb=l%5ic*$FmC@T"tI<?nqS0i9_uUp8XDnOZnAH,-.H)]O[6EsU"m"KtJE/5C<`%AmUDE0j$t:I=nFbA2_=<q8cc99H-;
%Pe1A&(^[K;]KfDi7.NX_f*Ig&Y(;^E>3&TFZm68@<PKng_e%JGjAu'<+;:_dc!AKI(+s]/I&CF&d894,o&.?D\+7mFnKIDp`mCQF
%gXCC<:B_uh7Ql0Z<Mg,Ri5+babXCTmJ.RDMJt=YuL,O%L?XbK")@TF^BlXrZ*PU5DIDmjZbO`l2-C3$%(]#Y#7N;NiT4k%p/V/)@
%EMk9bq<GPGTW?T026lr3#i[D^i'fG/3pBM79oO,9-$YuN>e8$2)e#m?(EC03D%6A!1K'!?Y2dg0!SZ&u8r:KWqJeCX=Anqa4C^s=
%I*Eo^9L$jNf(;)ag*m(E;N&oW'Ui:DLcS%4Lh,2`/D`^l,d@@K7*gUo)OGF<=p[VSAonm7qW/dB.&p)D.q6/F],>l$#kjoB9C6`!
%,&A^P6$o,9\oW]sU%UI/W.%<INtP6?oomfic$>X0&C?V+FYUoA`iM7FPkYWH.s*St&<'Qj<bVZuBS.6E?c?u:0F'(acSH[/8GFLB
%STpuH[@d^hhk7@&UhHHhg19)/8I=2QfS)X*MN&5^MB+_*UdumG;eT,j_;Q9kl2e:0?4$m@])<i335(bgp*,\1R5:E"&rjnfEZ[)C
%+TnmeWG#08nhAgsmj'(?V8\n,eGpn]*mu0L.`$/Uh=4V,Cops\F3d12EZOb^Aq3=,coY'%as9M\lDoEH@-h=2jT9*1=i08,[s'GW
%lj!<@kh-ft-)DV'%Do!e/B).#_`/7U*EDAZRlJCj>X$(]?mSX\<N]"H<mPf?AL^3+8XR>!Z)Ri+7-2WdC_LAKRLip_kep?kDm/.I
%k_e&$DLM"T:\f%)b(*Wn*^t?N[C^(;bmVLH\6oXA"S+hM0.\9%+g9)<$K@mG4jf/(]?<'+$_NmaPnLbe<M0YUEO\J+An:c&5ae=?
%LSsZ/L2F*0.F^JDC.1h(0/"h*DiAA4@`7!49qJ@r`n+o/hHU[NiU9TOUuH-AJoYH:Db?(@>Vr>E;>LNl,St)unTN()k=d`h-5kp5
%fc<t%*;W.fb&s]h9K(ilLgVakLd@=:$f`LdRo*9Oa,$p*3k8E@or5Y4e%(>N]JNOHKceCL6sRto6JPiq^&p''0ZM.33'&QZ)Dp\7
%fS94+PDYbe@/:7Ae!4V)8:Ws%99HS*4PALp1C_Z(kHUBdc)I;kE]liH:,$9p%q!aN69XJ*"6AiWLh+Ms>l5b$&RiA7Y7]-^40Wg3
%mRi?<.&O=09??!YdOc8CC\PtVp\MGR_BVij7<p#+$jLcO<jX0lQ"Wg=.YnqMc?bkck['!J;Plb^!3XmRU.\+YlrmI&]+7Z>:_+2"
%/("c^`'0JAD%(cI,3dsK=).:9##2,($pC's,$>4'a<Y1PA'[O8`aGqfQ;ADC!%SPeN]WMWTVT7o$RPHIcr:6]'Mg3u_Fb)o(&F@\
%0ic41_tKJ')UA+t@)6]"<k9dn_*`Q/nQ(Ic'=_eUTfrTj;&S``'lPcI`i&ka,R,VX6/4q]<tN^j``NdPCuAiCl">$t&C,0dga6&.
%83.$qrRGc<gjj)8cI=(q"F6I$\_CbK_2#>+N%XW85"jP-3hjaCbp@I=8B?A#3L1.F4DH2Y>YUVNB's86>QVLn@0_h#X&I>aoUm8q
%r5oh34]uXt#]]=^4;[XNE,-PVLY;ma#@bs$`qWJYoc4X\<^+*V2b0<D$u'U1'6U$0Zu:m^0VCE?kCLO;1[h%d:hhu]0N[#4dEI11
%Qb+cl*!.nkR5L9j,#bgE"?E.!/_-45RH(eI-fl8f*._4D*EA,FTXh?K`Z,.eHtjL>?KXs,%MaH&IHlpUR:O:[m;E6r2b:@hbb8pK
%ime%k81g?cZB(7JEm$H'nE#cN5odU$;QmVl]t>mrG^6)&<?8[kpd[)^C?T[\TcfCVFEnR(1+Uo47-_fh8!h]aWUORR,u>gWPdZau
%A)!0IjDqd"$=$f#l1AA>`:uhc0>eeSnSrTFK%R/tL+PpN3:6N2/Z3MUO<&n<1E0\kQ-=8ZedFehQLh;Uc7<O1SsQs-g`so"P#`X)
%X'm#L*_-F4;-#^,>*<#c=lhV*VFl"[+hb6U7t+#Z:R(G=5imiUAC`KsaC>o6:EFk$Wj7asP[bO(";bC%@GL0Y`DSD7A?K@XL+#i?
%Ra_Z*WDRXD:l`'/1tO;n[MP[1F.o@noP=ZXM(Moqj@6\'E:Ph`G"dliNg)f#;X^Sn.?6b(:30rd4"Smtj>^b-S>TW_>VenhQ95t@
%<ZOe-B:i"Gj7ijsSqfpmL9WVf*7T*TH'[ZG@mG'B1_Q'jaWjU39<sR&cSLF*F#7o,g2Y:o)EG-T&?Ag+O\:k!8-CH:fR'L$2&\JI
%#aq[@aF+`7*K;$bbkkm(EYaH]CfY'-3@B<1OlI9R'o'QGEFNC);2n#)pr6-mc9eBs3$7H(MOaK9,Y5S*,*uaCeLN<n-)*+eQ0[U9
%fP?a@NoIE4,%mbh3WZjn&pg,#5ib20PG2Y/o%_o7`75_k.!.\R;96#+<"S-$*WmC54O;6dXpQ:AWC;&6[O0\C$pTd(iJhUEE?kbO
%l.b.V\HSOkT66_T"i#d5cODIBjRFe0;i$%G&\ZEKI#U2tVDAa0L)l=rPKOY%m\7m?eF?Z>8X2=HEX<h+cuG.?,VMZQ3?F[Dc]I1l
%icuPb*!O?_/9.>e"%b>S!lll5XRX<pSOn=E.W1a\&RWF_Tr:]8G\aC#./IYpWNjHOLZ7eXe2Z76]Hf$Q&>4c<Q"<dD`aQ;bUp#?h
%,?7&jc8`[,A+_Q.1#oKo7)$4[(TSOk+,LI/Xq)pO%<Co:9Y;>)>nf"g;fj54N,HfI!hp1#!Z8to:kjku`F7#UO=8)+6aS)2]LE\J
%Otod)&uOknkLee7,f`emX'Y%P%-SmB,E!cP-keBgIg&r/@1:-jLEOAY["];C7)g#h3FOGFTEZ;u`tZ!pJug]GEFL-=f9#!:*Y426
%$>2+a00TFOL\6A=a%@5@Q&?ZHYW#37>c3FrhBV/oKo&;D.lihRb^oCrWKG+"/*ATCCcL:O$5SDU*%;l?Ukm'K:NI(e'NfH1D9jUA
%69u>0%W@5,3Seeq5]aK$(dP_bW:IhX&Cf[VA(,W?4ZnbD!N?P>O"DlMZ,;,?:D<e(_DYrf7*,QaE16k[`.][#*%+?5)(@M7o]9=A
%6AZ/l>K&l7%0qN<nb^<7O!D'#eWA`<Q+<m4E"r(>\Y+fpCQn,C,qYVeQTuGJCeCMEIq+07i?V6V.OlG#@ThHN'HS,*fKeDXDtNiT
%-Tj/&*Q*QJ()L_)0NYj4[c/2N*0('\"WJ[K;HJ!r#S.@c?R(5Zk58\AE29Ft\4m-[1M<id6^2uf+P0SHL'J57=egV%j0DL!;b#&@
%]ZYK$A8ir]&k8-8(d'WfjXM&d0S.$&2inL,JkHRHSOa[f3YX\2d[Cqt4JrBM\'WS]7Z-?.W$&p%_M_&2G[^]4_?9P^C08N-CNOGc
%"1L7%#6X_M#[M(o.o!<;JU<W09+X(Y0`MC_S?c<B+.T4iLq.lOUL0`Z,I&QH(uQ93h@_=b#]NQn@jM.<=*%+W!,bR3`rG2kVhBQ[
%:O6BtG5FP<g)^'[eW_$u"pQ=d<H4d#r`407"+M[2;dXR[>sSqsm7NB7SZAd.=PhOrqIs(TYA"W8X/>Hp,CYs_(#ZPO1u<H7,$tfR
%D8WYKqp+F?&@Dr?NO'E!iJdHs;<t2Xn'ZV"pCLsl@=8O,+UUim\&T?H0K[/Jp5$Y_F,IiKDo(_:ltN;EKB+/EE/jQ#0dY5S)WJ&g
%=DgnZ<uO?:LAJoHSL+soIHQi7`D$\\Ll-njFbK@GE$N]%hECrQR`X:1_MG*+?:tb!%1,X#Lkba!#j4-ZMi_YQ;fMr=;8,CA8&^H`
%Q5T=]YJ-;8:a)G&Fi8KsZj'%q%Kd$^E.DjXB&`bgja4nEL#<`aH\[0@a,TKrS@U\,<oMnd,pG1SGG(q0*SMG9Q=dN]#i]`X=YR'=
%S-K\uFeF5(X;\A_ef1ojpjXcTL-bF![$NM/7.)C)Wt+fGV&'%4IgsD!)q1;TUf(D7'L=oVR$L//:h-^Lcl4ie`2E^M6dm\,cPp1'
%$m%?t2]A>A1hDUn@JuU$_S!ck(Ct#$4/]_@ar=Z/>el<ZNPH)p!u[gP9I;[,7e5^;,cm4W``b&mX=L63]ZX2!H,mJ\kmc^%9FrjG
%FY$3)ZW6+39>77P01"Ien7.W,,C.bOOT>tMOuF^@FUO5jNJ`>41m0d]4?)pOad],c0/+HV%/1lb,]B=&\8cJ@jGi\q/%/Y89U%4_
%+E.7M.4s8S_!omKks4*EjU@)X.(Wpb:B_Aq;1cI&`t0#CK"U=`.O5c5H'=9,^m,hZS&Ibs)9A:S.SWNq2k=bu"0QXVku_HS*]-7%
%V$>1a*,em:Pc\r<;9\+QNoNj3>;+,>`u?Wu!f3pt]]laU>F0BCI<(Y&]]=<IKM'0ZNT3`?D%5HC$(.^3E#<Ko9e!rlOseZ]//uSJ
%mSY)LS;-R2j"i,K22jJO7@@p.Dn=(gOfK=;nXX0s=r$)B.iD>s(iS:40+Hs$&h<A8(iM5^eJekW!NKGjfF?k8#:d`M="3"M^MM@k
%e-/[,$!^dkhGA:3O^H.R6S0+o-,_mc$-Q+;<%r>CnjTSbmp(]]No6J/2n]<<j$#uth0EU>=5ht7k#'6:r,/lo)cE6aN<gq2l4],<
%qZ^;'H8isdTgUXrGW3"4"T9:P)]h#-<l-bcKnbJfP.Qk7>r:7\"(s*!3GLLUijc*V]:fe3a+5tWWGuH"ZSB([)kOR7)RGom%Qq:$
%ls][6R0FLLCI7Z3ie"IqD3K_n$`DIDl.FP96DA"nE3;7+)l8Lf10up-,C4"=FlR0K8lVL,qfJ:r,Xb?_#oS6DE8@h?W0*sqFUMd,
%daBnW*JkJuge:Nqi(@t)YMm&i/.mqtlXgIfCPqFi6(j6Q-*E`V%*(,.2]iVl3&e9R)Un8]<QB5LYq>LGL?iI<L-Q%2gl*Y"ounn"
%h2E.YUlXKG&V2*$2dA:'8O?.P]PcW"!05[U%.2R;)m>aI)\T&Fj`NA4`hC+884YVV_0Fce+Z6OEl_[$$SL0<Ic2:C#"ra]bH^@-J
%epuT9@S9cY"a75H6lBX'L0j7<F^d9u+.d/)fIahI=tpB7Tf#a9Fp[M)WJDi-lt/PXc=cR5":`t>h:1qNqk+S6,p,c,5!2.qK&/!+
%PQW;;S#7`-6Y]FcU6e6lEPSf$P]3V)+hOR1Z[gS&.V^Z@+M1Jno_TQ4S&oN'%kqP'S/W1%/SF=pnt"9lh3.`!YSKZN;]d?Y:m'Qr
%jqqO=7!@&R>d-'-m&#9DbRnE0ZU?--Q.aFA81hTN(/+lIi/lcB-mKsPaDQ"npEc&)'p"bbI3#UtI/,qM_<R-<'Ha;$0PEEA/JdW,
%6G#Z<U&hM6#:Coi6:GuH#<L<#c_0*g.Z'F4ih5,Ab=A>ODPq/fb\enCB_\Y`]?sRik)@tf=cicA47H_NAH6Y.fo6)%`0[h&7lWM#
%3%U3J7,;i*eWAU]=jE3Dfo6S6`/d9/qf-FoS-lQk6":$qRfpW^OPG^&fhKk$15Jnlh7iJi0P!+8BGrd>p[M0Lj[=ZbRIe(Gm"Qh7
%3F%E3!i-A6O"t,TbXLYfY9CM\bQMR9m)C:6[H<S,.,i0I7s:YpE#sf$Ar0V;("k/b1qH\Lh0:=sSIX<^'.KK]N7\T'U?!r.!kW.Y
%-0a-6h7;7f*/baD+CcU1bjI;Eqll@fUF#l6`9nnV+JgQl)l9-@^:='5J@$!-FXL&NaBfno'".Hn=Ee4iP>t6iFB(hR-^lL?Oh/B0
%o2N=sh&+SEF!%E5\k0KYo!1)FNFo&XDHBZpFI/iHl-9?')5d1GYd#H^D\^`l`i=c;eW_lY+Pj2n`oo$J"jrlE;F3`m"2mLeCDG2j
%>'X3NF@45'&TPtV7Y,A#<BN4Cj1]GVm`aIFN6[u>3r3W2maMlJ)4MQR*(^sGBPmfW\4kGoggi-0U;CCnZG;ghE*Gn^`E-*FgaFH0
%d\tqLLbqeVU+:?.`pGCHgo4A$rm=E.C:5XJj@01K$u87K+R^-hBg?R7=ihjH+EqQ6\\dA2Z7]#./[\f>j\RiR2]/Y*H)SQh=fN$S
%H4/Xl_6>DH]-n68>)gIkf_IcugedrAmPa/u3"gKG_bK#fVYO-t2sg%.#>b\MWe]CkK:>HLo=RJ1-Pd),"E(j`6]Pm]DS?n;:#g/e
%X19>iIN&HTm]5ts!sC[[2T%#>Zt+)Vmo,si>o%&tDl73f1=!=4+DTj%<;k>eG<=>S&WW`JTF.jm2<o@NBG>utQLhKIOP=_EUp!:R
%\1MgM]EE,IJ:"?u[ki)KWU[Dob2p]hgPG0g"iG<6TScBY>a;aW-lO-,%(;.j2pH9`g3.tt:toQ\P.!Zs8MnsA,M4d#2UseA\`'Fp
%Z]1`ZB(WOu`q81"nfsN='['(hoQkTqMG7C!5d*STMcItZ8d3^ZQu/)7Z,L.[=bjJb@(*>lMH\dhgUXVd*+^)0,>%c=KkqQbPfOYn
%D"GWub6HWH"<fQHFr<FFTp'=Pa>PIQbY)?*D19i*;fn@fD15O*Ah.D]j+C"'6+0o?3moKgS&n"!'r#+11(>p7aS'W<BuNYEIjJWp
%)Fu@$C639JMtL'ngS1)EdLrNRNMD.L=!?<tM:&rW+PZ\8q@&'o",Fu!;e'X=%lB;N);F7-fbiI!f/4^@71gMA5&"MCZ\0odSVAs5
%c#'#Vm2Om$0t'q'c4.eGAr(:N<D(1f=t39jL=jL"'J,On[NQB#W-8u]?-9t.ZNB1;ge*6^iEMOF%C'1f<l?n[4O`k/Li&B4QWjp(
%9k">"",>J%aZoMGFB5]p_c`?7:CXRg+fq7[MV+eaTd1sc`&>?9JF70.D1q5;Sn<pu`2s@/?:3//4g.lKCVrY;9Mp]!L)A2^`TZ"m
%/gAD=l.T)\EB,tj2O-gr$!l-oQLN+%V/&^Q4d$M_c$RD6e!BL]5aRfU?CQ7<AgfCJ2SM7qNfL<6B?!6@!4EJ8ADt*Vk%)KQ0YB=(
%MgW?SQZR)?q2$S;D)d,FP@A?FAF7IVXAN^S;[XF!Z8TT:,<=0"JEP@d=1R$E*slsWPqI/`dGldk`;hHbJ5Cl5Vj_)=0ssph??8YS
%!84:WWXuS#&;]Y\!O_1liMeR9U1^4Cc8n`?=>]=,N2N5"VSZ0"2F2(eXtF/:b\0G#,\:]M4r'0&@YWST7lsS\Q4$*Yc_B-SW>%cW
%`-ta`BZ$$c3_"a8_e@,*AIRtI*;=1RD)16onO96k)ZU'pb6H=R;UMMo!S[&;P0dT:SAVh.n_])INm&T>7aHgM'#?+'c\@WhVXI+(
%%qOke#WNbHao].NDK[Sd+G4:d@)YCc)D`>/&d5'dpi*[9K$LUPE5rUf9,3g7CC#gXA]L6l\T/R-RrqiA9=SN6lpPum%[@M'(N/4i
%;DoH0`u-9e[e/k)a[V5WUq3R8Z=<u9(a_>Q4j>D.Gb\+*R&+X@>7HiB`lQ0nPU\MZ1/Y-(G]cD4KRQcGW6,CL`t<3>D"qShUUnUg
%7_H.-?rW2Ua-M0Ol.C9Uk3OQ<)hh6I)&t`ISE@i22J-PANLd+;La-EmC56b9C_YO^8h`.4/Y7:E;0?KJ&BDbEGFBt]8h>.O=um)2
%@crJ+2(Ece$MZ(b)l=Yo7#<](pmS+tS@*WeUA.fB@^DGZ%te?gA/"icb<`CIPG$-*ULL!#lq0ad-A'Fmi?1<'9Q$&.E'P:E=l*#\
%fI.@/Q=7%HhkKUU=DTuVj\^lRV@B%>O^YMK!hj<%8mVP>Mip1tZ.Llq9Cb'c"EmJg/<tu4R>VN:K*`$'=R9:E_&X4/X9$F2X%_kb
%IDY8?ls(?G8&RlJ^]G7,SL]#kcGO8dE0ukLm+duZ7_,DiP"*e:%@^0&P,hkWE&a99eSs.U94!m=c#\SL&5aK,:N^ALiioC^9f0#Z
%A6Mp@9)ieH@Irm'YbY]+4qI8SKIb#RBf'Xl#X:/RfTne?DQ5[4#-pe`RGtI(oTY/X`F6BA)@d]f.c`m8fU/U:!';/Y7'K3KG,dN<
%'Shi@2)QaR<M2Am2PkSGWYuA:664aEL;O5Z66cG_L<UY7F>Y$r?S2a[)Rf*KUnjbo1CAl;Eg;C(;HX9iL<YlL'4<LrdITf/=JoS+
%,RlR_+dAaX7P6\>2G,5MUP?\K@6.BUM6%@!%1L0f=^D2g$6@9(4DZ(B",h@>/Ou`iL[hUfjG]^G4Da:mI-"\U;$5u3/g1G;-BsPV
%;%8=U:lr1d.hJ1H3_Ak85\r1&7,l<k!jV"f_VZ)ac%8d^f84%ZM\XE@j^H&mWo(X7(;>Kr)@md0Ut]WHCdKa+GD4[=@!!,XI;U1/
%>dZXN+uTa>oHSJnA)h&;&K>@Y)+c\02V$N5"'-U(6rO[l%#GF1KIGPh88KG?AO20kVB;SW9&&3"6C6gQ&mK`NPH[Ga$Wa>3@e2pC
%33*+cWLGh/3haNtY@f-`@e1ut(7c(n/^C#7=Q6R\p,"lL%NDu6$2pg]YYhK_N:c`V>;2T,YZW1.MCK)T`JQ&U*&d+SD^Z*b2jY8[
%MSnT0Lti`_@H5Oh;l&ugbCUWD]2G^uCck%K2?pai)Tr!5/(g<;6pas0YVk9nfThUL&\BSP+uW5Ni`)R=Cc?P'9Pg0<o*Q,"huGet
%(_W<-bs9/Y9E.d'F0$2mRoW7D-@oXT0M/B7%>l`4q.X/%Yo+HHV3F9N=bgYQ)AQI=Y1'2B@[DA^N/C===I-orW7]%f9$Rd?@ac%1
%'FdONk%lm;K5/s]dDJ$q2@A)jNf$Q%))GRJW7]TZ0tj#aYur7iSRA^*+ANMK/2f_FA3.mCh\TMVCW0aMY98D!2(UY*@Zb85Pjfc^
%MA]$)=DTO?1@&[WD#0mQLW[-Z&2lEALN9Z!L`tKK`l1D%&+GU;bn>IVj'o>_dP"Y3fXrFLMN!HfFc6I!kLN[nD5qZ^.1=U@DHq"`
%q3Wtb\Ce/r84(QN(V;4V/iNGhV?/S,2EQrp(M[2k'PlhO2*dj'I(bJsbrYLUWc>:Hb\q)uCdB)=IL4#k7q?WCMbQE37\C\9)a6bs
%CE+.[[\5rB[?Op4lH%'s0J58YRe&#s)H''TBb7=Mls+NUY1+b!1/t8(W'R]3;WW?Ns,gkEkEnAT)Ya]c*UIu'DUjm%+a_m\3?g@F
%2CVf>Ln3aM<9I[;Wd\qIlpOk&NeX+(XAOa]B<$B%5\gi"02^Ai%DWkg4-SG,Q-0;;lnI([#1q?ZfU3V9'SF[#&dLnBL:<)n8#d,:
%@hLj/2LNl]eeqOM:hRK\!ZQgph,FG69Mf%rnulcOb/5J!lQ@olT$jf>ODC.e=WS6u4&C]>'.])AOKbpNl\$<omN$@1939NmLtA<8
%BB3i<;*"2iBSjTAi+oiP5p:*tCO/38@7e-:W[b1sYJ]#R:*j5%QH@g1f/.Jmfb*(`BFZYL]1*>7Q.Lc&%MaIkUKsXV,-&J^6h=P>
%fJUl^bj/PE>pC+5%nb8-bStRVd%Q,K)eR[#ENZ'Aam+VkVXcDO9?MBdSuFTg2,$M;?6ZQ21./XE&Zuf?"0;U-'0R$h^,<'g,2Vh?
%\2!Z+27dq#g?2GSI;IS=NGT^%*`bd8,Mf%r1T5GJcV9iHmhRC$j#P`$ei9UbYu7gWFpM'GFfMC.3n#![8(HKqN8dtq''fO/AR*5P
%=p%qqQ/_p0(fMERDkc3li@ZN_AsHtf(+5R.Pm1/JeAS)tV]q)&,.)f!=k4KVk=F0GC/>!Gc*3$K5jB?T`3R)o`nGD7N+/=pTWeX*
%AsSr`%Nmm$Q@[l'EJ=ZMW$/8$K??p9#hAu*e)4p?lWEsL21@C`2UMCO^,e/!R*hsEF2b8tX&7#iHt-61C.%rlTr[]?hm'88ErLm[
%aM?>fkt'VaDDa$2H)j]BL@Kqc5D*!h)8p6%bj&$\L$HbEcm<^3@Q!.C"E:BVlHi4(2.3gZ4rLOB"gTk_E=`<'Pgj[&U#cM5=uGMm
%>R_*Bm9o<=<]))f,S!a?P!X:[=&O1&kk)!.WWVi:1er1$*Ya@.L@C>$7j-?58g4aCN<1SLKi&jmhUEI<\r['UE9[_ZOc;!t<6&7[
%Nq0/ZY*0S_2$6,Wnc%Y?MCp3C3qYNi?&[,p0.OjkZ(-u%ChRQ3XiNo5TrE+eAc7o>;b*8`c%2imc!XQ7;TENcE*-j^pMH['Ws`bb
%8hH_b>)H$KS-e5A6W.QmarD^*"4>!()$Zn^oH7g,C=CELJPiKJQ=EdiQ@2(se:C'GePXhQ!dboD>(%qBLml>=@iT5uAh71#P?Tst
%#GK04n26B4KMWmONbAbEl<nSs&On)V=%#%YPm$AK`@D$e#::f8J!tre$Jot$BuL#t&rK;<$KiQB:WK&%1cOV1p9_E7)gXQBb/#aQ
%drH^lJg9>jnSq.<Ous12D9Nt*7\6K,Wb3X'=,T6Y<fq\FPXtdA6Ved?fg#J@!)%BJB6$@87r%.,jCn_83Uh,1R%J>_3t6msYW3F[
%%<dP<S6"osCgjS+kVNPhP[o_5%5`m.@21e^JlHNM#Gg"B*u$[D'/5uhN&M3`WF[S0]m*uo4]ZtoggI[e.Rb8tX3K#T=OW[V<c9E4
%c8Q)'dWFo87\UB]7O]-U"&5OU=M&>,!cs\?kV^S+Y#$*.R7;FiW!KdLI\>,e`gG%.SC93i#uo3u&fhG0#IgBF@6.C$L+>tT)V"kc
%>sXH'D5@^qSa'PMT[@^Vk#o8"Q\KRdW/.f;o/5!aTV]grX(5opF^XI`I"I;-SJlUXL6[M2F_%^jCfG+boONYJUVN$I<b,@V3FbVE
%eGQ9S$(&YH=KMV#!W8[p8U8a?[?=X>`CXP\-(;$B"A3=3$KB'hAjMNC3,.[$^%_k-)W2jc7YOEHO^Y^&-I#ffEI<Ec%7$eXcP7`8
%2cF3_6UdLoI&.=9G.9<f837N_@AG]M]lf2h_RFp;>\]CTN'q^qBbU]MYqH^;\S6;I+:X3oB>!GYpCX[8`fJEGWA?72$0t?LOrb'J
%%o"!#GVfD7JYnjC37Lpe<>6IEkomK1Nm<;rkIApMT$A<6RXp]C=JnWP(XBC5$B<%u1!nO>d<R,Ma`V3;Y##mhN6X"1aGA6o)jS5&
%bUg`QMpBgCk2=Up4Oe)mnDn.-9VY%/hF9!!0q_Ig;d!U!_bku\:b.6.4g0C1l!p@J7l\o#@o:"?QtZEBLaf/gVk+']=!>tqO'0E3
%E%4!SJf,aNVD\Wdf*Kc\Wn/773jGnN6U\P<)C)gE<Ch5+/1F(;`X/&:V]$`tfa]9gZ7]/`oJ/*I=2d]4([Hljn@E)r9H*#3E!hbk
%%uh6f,VH1XTlDW9*9Zh<35%nrPm3UElLn&06c\I\in2VN3_@b/775P#N2HLc%@sH,QQnlhR&@cMN!C_@<iu(l]+*j]h_2OeFu4AI
%BHEb/oEZ3N#Al3rXO!ZWTEkmYNmuObc@cD2bMJd'`iO1j$%5c0>5@C!f;0[b02-[Em_;g#n'],Ch-,;4n&0ep"n/#mqTk'9*>e0j
%l^!hiGBSnB<.=Yps#iO'Dn[S`DS1;"hX)&eqUbc'G5oR/hu<Vsj/7Os%f]gQdMY:*D-d$K^Xk,f]N)W&Ye,0?mYoesU1]5JUNO$=
%]"RK>8,=uSh1!uuQTsKE`d]%OpuAbK?GBD6(tD6n[<m[4CTl4Ch&DtaYM\3'C;h,o`L@OsSDUs5j1PZ!d<_/0QmPQ'ZU$DHSEqU#
%d@^eq>[A)0*kkkD*UL2kq<']5]A9,3W,u1%)/R%UClObdL]-W"*L@#/omNZ24']D3lZ^CE#*#\6^=fS:PI;fu%u6X0]hX'XF+3T!
%<TeO`]D:R4_?DSV^F>Z>;.k=0q=Ut*H';h$8H$_H*5:#"N>m%1LV5#rQrUf#k4Altj6h0X[-aj@U_2q+m.NJ7->'CRAMl)"^K(6M
%rF]?pp2>p/<NY%qYrV3jrNfi.r'dp_o"7Ddo%n#'rrgZBDZ@'s=PMb1l`u7I[sri_"p^]-HTW-'BM2M$Z5U))3#lgY*Xpd.HekeN
%T;^-R](Gg(1>"f.N4S%]e)`6/$OSEI^VK6ec;*]nr$XLTc'][8-E.=#Eg2LE8%F,h;/U%!0''q,dm8174,:?NMMV(2DLRoKM]:8U
%%@s-Q-?p<NcZ8W`h#&]^WFrbT[a&oQRPQ7&\QclYSE?7t@e.idbFRNO]oB`!p>G\+D4mB<o1fC]Cc(!TmJPO8B8Zu"B!qJHIHf#5
%iG!*)1`d&n%\PF`G,0WnmDI>Mg[6_eriIMODJh.R[[X@SgR#Dq2JGOBX_IYFpSPdPcDWN_@i.r#P]+!^:!6dk`_SFVZb-N?(uBXE
%KAL!\kP)[=cRlP1o?U_Vh4W?2XARQac!tiTghC\L2R_>a)H<bd=m[+JFLIb]Si5NhlbV\Rll$;BinGLIg;B1AIl)';Rs^adQX!_k
%]]KZ.qr;)2mp)fBjX!iOi4.lq`W)G,j)EeP'bc$;/e7Q6Rdm!Sc1oV]b8AP1h>[1h1C_s\^[<s;FK.N*\R?tASdQT!-f-U4Hh+tr
%ffC%$U1lXZ>g1>FBe)H$D;iBH_Hcb$T[FM_WJOuuHJS,_G5"sEE>k1Jp96X8g[C)jQo:jW.;NnDq9WZfICR5cen"cPVECrf+e%cd
%&2n5iG^4.n])_ct4[3Y-lU;N=e+,esFG@CJo]/tD43`!$g&)n@l!)BFI-+a!-T9#;,qkl[he(luRLRt)iC_@kL[S7JKAQ1'e+lcA
%6eskB@i"&^RV4,trBpGi%DnZkmHs=MPHS^90C<^C6]-cgDQhm7kW`'>MOF)cHSQEZlj\8nh$+hc"<Kq!KON)kYmL:Oo4@8DQa-AG
%2)1$@/-)kkc%8<!P:nXJX&c"B`9EZI;sXZLK7WQ^%HNb1?a%*hdajXPpG_n5;mVG-FDQF/2tHtp[XVaFd:q9YVArFZBVh;J(S8n#
%Hjure_eIPTWEGHMp)Li37Psl_USbjhQQ*@(U4MiKAZsqYGBt4!?>$=,NoKg[QdrgH"pVr&\*s)<Qb;(SG"2eNp/Yh@diUeg+&(d^
%ZemBQf>,lo*@IC\i7Bi#`:Rk.9gjP(hfuf"rMOf)T761"k;S_,CiVA:MO1uqXWSJUa]XP?A?Tp@%?>6<^EbWB-CmbT8V<'[4\K(E
%c0$=DUF0oem5/oSg?J<Wbrg/q'0YZ)L4fFOm9m?FC.Go1Hi).<[[d1f)n1S3Vjc,JX<tmqR^:h'[Ni14Wu8Tg^XI)Y)df+9\"4"s
%\2[Qi?J;l&E0qJ!3D']4;;u@F^,D,"XGN'*l<RFhqLa6L"hBUlF,+D<9iP=rXaF9r)KpAtDU>]VmI%L]>GHAPWgD89##\^6C%h%o
%CrH/:X4P,9P=<+@h/>.(DZ3XS0EY^kXdSZHa_&=%V9,'kSs.Cb(^0#n.$LI!h3ndKPSm47f]3E7brRc3Xsd!ECfBMTdR^%!P-&B>
%I8LobeW]H[Z8E$(-qtU7266;gT&Z0cL^%LX\M)+\(M3#mnrNH4fpW(OPU;BWSrIA0I8TpQ0?UZ'Dd.9iPS44nM=<rJno:O>WOi:?
%P\IAM9VYBXUK(er^?'ISo,@E;cG.:;L+qd,?MFtAMI3mcnD,Q3,k!q&p2M#FY9pj(BqaV3,["_KaibKrbfn\HMl^^9HsLO7"nQkR
%^95`4[Ad9[eqQW8>[3aMENOkS3a^G"X4fdb<LXA31F9-I=1.k(p5`P1WYV:P+5+nJ)Afje?1>UtA>dQM31iYVT18'm)E$`1q)"O9
%USH<%H2!@pms2,8kIXlQ`r+Stn6?Hu^h^mu*9?0d?Sq>9X43]gol&L9+.O5s5BZI]Q@Cj_>(0`S\(<,/mr%[aid^D45ICD.f>ou-
%j^U`fbm*!8F9'%uq+[8,]#tME;7c_nc;(iuH>_TnoJu-Ba/b1(?)?t#2/NhOR3Lk<GuDXHOSCSFU=!SZ'\8I#h#@g2g^3sB;rbPU
%P8Ob+*k$0!'?0%Q`XhbR#,=NaH$7g_+oKh`T2TC@Zl6t'mQORT&?ON_S'"a(J_'&&BmRS[LHq[bfjCUk*Le>b>C5!Cn*P>=9t$Oj
%>0n18U^p0hh1nWCFA3O&dgWRj2FNc-*DZ22XL04AN6+<A,lap*T<pcTK'W6>I+*A:hp'i_s3:]%Ec1oJgOEkPrlZr'$ZP%[D>:O%
%2W%/l6taI#4-LOFju2,-c1fYT27ND,D8)48Fe<c,IW"bJ$=3,Uju\E85Qfrrk]"%1lq\QpC!X3PQSmL*]/r*0:""nmr:8FK,u_,_
%I!f_uUtQUVgT:n\`Ta_djP(Zd@Y.f3j/D4R:of"IXnoBQlOA;-^M1CLmbYIPE,,hLh?L)DH9oGsC!sGBRF72=a1f/Ilu`)JMaaOb
%[l>@OG6`>AlOJ63n_IVdqsIkEm[n5GR&eLZ6Zk:_L-&J-buJCte_*/TFk0+YR-W'N?!'];R+sa9iie)OVb5c<gM4&!D/0*K]72e(
%/a6Y[Ufkr8<n"-nH('&<M05f3.B@L%H`T#N.Yk]%X#d$'6"d7Nd"\kA/2/=&QK#.BpDhp@aZH03SC6AA!H$9T9.oZAf=ZZMIiK0^
%l@g-Y?8>Tp>e]2deL[G>;(W4L06>+U>k'RN]Z_*DF2c=1Y';tXY.<P'Y'=[[SS#[E5?AuP'hB-gOUXJC9XP(=f#"b+;fOX8P_fcr
%VJ5QcS8QtIPPFK9LJ9UL24XT0XOeIWDg+uW]hRNB2RA@!-@CP.@q%4I0^4OQ)9ko3h4*FUOI.XKF%sm`3N"Q*_%&K'0MTOs3=?Ou
%k*#7!DKD=;Hi!utnS.fjF8F>0J'B*aBk+?[4nsGsHKW%/02:KLe:=e]%qiY)Tm7^)5)Del#)OP5:KqsVmRht6hT0H[L'H=3=m=@8
%qOO0SB8g7UlteVN,Z?MlB8]giN1]C-GR!q]#3iLBeVbFP-LK"#W&f6R6CYY%RNHiWc6&a,SS"H\Y2X$[D1:!13PTdI)nBm$]ut07
%/O+."QmT,g-&PUF)UUsO]gS9se76]7df0kA7P`S*9Z(:NY/cnt!B?PL4[tVnbk2fo4iU`f1"TpZobb%4;<E1`C!^AJKJm^,nc>5P
%cXu-`[PM`<NSD.EK5Qn*"hF'VNcDPCPU:7lJo\\3BRi_.Cl^XC_p5H@Sc2Y')>Zo&8cCtR,<ki,)rp@2lSLb<:!\B:0>"ne+Hp!r
%bA(8q+Ar/Xs&lU[r77fHe]O4:r%>h?DpjsMR0!gT=t=fOKDd,K@C=9naUHUMk4#%mg+rd!TS3SQF2ihZ'&VX<=u#1Ec+--(^^Y$&
%NW0*c6%>0ZkN1ZAo<;<goe\0&B8:pkF.A=]C4n$5eQsfJCT](&E\a4<LTa1lR1b:Y-;BnIGHW>fR!`PMEf5Bj>%$eUl"&r]Ka+))
%5#3`!2KOJZi6ADS*a`]cN1USkHim0Es$[`RRI]V?/9bp&S"JgAp18,jR[]r3k,5ccBl8Bg45PYeBs*"P4?q*8_J*llh8?mZ#&&_d
%EGg5qqhlEF?kgnIF7\GIr&FH./p$XEgctKl(XLZPY#08;j>_A,T7I)MZURXfOm_mMYe<,72q]>9kIF_TcSZ.)Sb-jV5^&_t,qf5q
%2PYi,;pU_r"[;),X?ce'>Kc/ZN&`"jZ2bc/UQ"UUii6PN]sHC-Dgf.MP+ocYH`K7-o1gO\mV)N2YDJQKlWr)?CRBKoig7-/mJ(U#
%K?KcSlPOkF3K*ku:<^X,3Ca2[Y0=tgRHY0'k4I%qfBOds&Z.Ws?3B)<dG]&B^"(fgC,_=ZC=OtQO>Tff46_Z-j-EB`MY?S$#a]%7
%BQ+ZNDmqLcO2gQco:XXZV+7_Vi7?"0C:Z%IC0t#BIc"oTptgW0X/L"'XM(Xf\>'isglj(%2deFR!=4rI5k/rB`Es&hhNb[=2BfsB
%HZf3Mh>P5\L.tb@P/X?L/f2+>c)f)Is2l/:b55:Rnm%WQ+DL71)3O*&d*1pWP:?mlpq2-MGPmUsCL;_-db]07O+Ta5F.if(QV=_^
%1ma']1=8<^-JHg,4OldGX>q]TVD'iJC@2IXVRa!Z66s)PVq%bq#ZSC:@F\Vf4o$U2Y<.3im[bn&:?++\*d5SNqjg2:!N'TlCEP`g
%BJSL0>iL!DdY?4u@VTb9-G'_biM1.)#VW@j1[=3ch4%o<JMl\]irs"sq$&k:+TGL$EkXh7`cmgB%C5fBs2XMde#5R(-QARTTkF'G
%g9frZS?rk_K++AT7^ATn:ROZiH)=.s1RTP+-8WM73LFKp?/2R`f3g)Zn-?q_UGI;+VK&$9aP&fI?;Q*oe,Ps103<1C9DQm\l^h+h
%oTNR!0RRol>at(k@TM_11E$`^P<80]1GWjm![Qf,K4E?J_^1o!E\-QnWmIU[1@a7\[OJGm6!K=<]ppZ@nBC^\?/S[=/W7Ge3t_6^
%P)E,43*ff&)FR+kc'iUVV/BIKdF8QRpak=kFGB,;i@LsU/oe_!ZnFOZD`6j7WR+BEXThCG2Y^9Nm8g@_-*JZ]L]+=k;n7k2dNDab
%>@)*rLY7=U0Y?[[k0O$9[X>("+["a,,l$K*h&l#@aeUVAA,a>?lr0VNOB0Vne2_SrO,KP=VWH/_h5V!s]Iif&J'GWo`Y6Wdf99nd
%Vpjd;q%p`\"d:'7=aK:Yn(.?i/f>;F@MHM&3p8d]mR#^P/M1>tlur9V?iK_J:Cm5)-GM_4*>\\RN1!@s(L#N6Cj'"*_o'l.lUe_G
%hX(_Uc\C2n4.c1V97C/\pNkY$g!I.lbJBiq]+qdb`XApA?@.(sMq3Ko6Lie&(\e@VF35H\S]c6RK&.kpnK3"CjS]&ST9'#\\brlm
%*,gB&4Y#UK2uUS]IK"plGAX>Rk@i@opL'a5)Gc9"+EOhjEIR5`9"2@\+831eXB=(Tp=e>O9<,)ZfKpg#CRpqB?a_\,DgaV.ZK:eY
%]2cIT3;Ci\qkAUjoUZN"o$&BeB@46*pdJh2:^j(8r[JYjN>:oSn,N=;s*:_:`P:7GA\Y^%YP"^ak,m7hr`AXM$iF-)ml'TpRF3SI
%hR1M>gb^K%Nd9-crOb95T@g<36%Ad94$Kc<B4$VKT$ra5[i[OW>Q:e7j`c-S"5Bs@`=guEp:jG%W2a(O)h0#*,5HfiMUTLJ#a6fS
%h29,*>KEQrHJ:JG03t5<rM(Cu?B3iE1i'Xh8$-RaNB1jiFo'Fm[kH+Q+2=_2(5H33,qX&O9<p8GnW,[&'ARgUM7l#%r\sH/,X\+R
%O*j0-IG_cW?9,WUQ@#2%pA`W4]Yf4RR4><hDfKAFMJLfBk\M:!A`Q?SgNR1>>;#W`f$b+g<r_BKm0-!ri2(.mk:HCBOQN6aT7nNs
%dKl[`*#,0T10Bm'%T^@>N.1:70u/]#)'/O7rl81Ws2I6Z]d+'9U.%?dA4_;Sm.jtZZYLcLLn_FWkd+;Edt;+iTADI)luYsb'[9,5
%_mih$1*%uUd3U6-ZoIU(@a-RG9oa^od3lcIXE7%&,odj3;%TO0XBjgu=V,$H`ElgI'4"M;qE]EsQ\5a_XRo)ML1,gJ,;/+QR[]hO
%&Et6<9WoS!cfg;N@s5e?\X6ad1^fL,`5E#C0F>8iH+H%(Wkp_FqR-sB;Qe8NYlY)Ao]BLAX?O4W:c.^G',.6h=N!dujnSJA(WM;K
%erf;``MgU&N&:i5:QV2'+He/m&4&E#&LWTp.*==34[Ce,F?%4I)(1+Da5nJ)Epp*k+e?'hn@&g\8NrI?01q)sC%3CF`Ke-qTK"0F
%h;-mCK(+F7)D<p25LN/J[XOD^Y]BQI;^sE,]*Cd>MIs2nhQ\+ciI[f\bO2mlq3V52lifT)b<3m5rkf*FM!V\8X&dD*@JR8R=\*0k
%jQ@MN(LKW&U5N?"g;OJ*lL1%&Z;U=p4fl0<HE-Dr:G4cB2TF[uJS=X*lJtj<^Y0\Ko\+f;T<&j`rE$U":\.5SG9/m$I/fpcd6"Ja
%NR%FD\#V"CU6X@&6WG)r!e[W4)3'Zc@C:/Q9\Ih"HLonqa*t2+q6A4*o":/Jc`XG.r6dL134kCqm;J7pj1s[u3R..TjZd5#a)(>l
%BF5m)W'9>,5L,^CEE6?A?d63toVa/o7`&o52r?^2(-_*X%S(#T+=qX6ka]<bea?6dHtRp01ZuL@Nt9mmaC`D?YIi,D>>X5lLIa!=
%m#8q#QiXOtlF/=Q)uhp6KS<!Z,u_1Z#P5?O@b17'qVl3M])Dk&Z&>*[Q8^OWS_^OfQeU=knS*EtPLm@1QNg"Vn)[h[^:aB1=UY7]
%Ocdoo`^^sbJ\99%N/RHa4SSigp@+.;Ku<7qqS<+r(!!(9aI#'cbT2+l3r648'4$%EiY//j>PrEC'dcefO@N/F/,->_+n32C+5lDD
%q+4=K\<dG0X3:+oN9eYP>0)lds.Of%hE?AW@eQZID]e\mDl_(77X+m*="\-s3RplTr(J2$*I)%OIJ^2.eCIegGKdJoG/Y?jI':iY
%m9Z]XUsb4bS'Bjfg7&ntoi+$f?2=1%p;$G&6-n)2pt,O/h`@a'Y.\GA8H$)5Dm_U^MPXZ5]_:>XYP"R`^Z@+3/UG-92V^1Y@XbD>
%MtaE7JXX4&8_X*bp/c<]4oSUFhZ'FeXmaAm)h79o%XPY8s/W_/+"9A?$/4+`_:IRo+V_&ea$mIDH$A!M0XgLa/MNhGW'h)bnFPm.
%pdJcWL&ZAQjs*%N1hZV7n'2>b\FT(Aec+dgDscNIm^\Gi7:lC9DWII;Ro0.1WUHk3DL]93pA$P`U2JAT)kHLtp.9o)W`Hkp&WQ/g
%qWA*u'_Qd)XUgtDPDJd(XQmhG'`WMMS/G+Cj^#32h*n8YURBNjlX'G.a.fe\3#W>$s2&>U,$K8sV=2]Jc!-%9(E2Ofkn(NaC-s>d
%*a1*Obt%'V0lJtqa2n58mk\0HH*m2?jDXLN0MP$Mmag_Uj&&99>2K`[V`&n*dj/Q^ho)Ni`!W)_hRRM#]t8]A(2^d<esqP^h23u&
%fsa&0m)lg4F$eT'rqAGi[jt7HOS8IHSiX8BRtG](7Qp2+N1UQk]B9EWo4<qh1bk-rQUlso?\Y_11.6t.LRX+of^FdRgP(UZ&RHga
%T3pa0D,lfW)KV1tor5OXlZBQi(11'Z*X>Q(RHqc.][\'`2[Aa/G&%InrDq;!*Hk[dcE03Na20*^_t`l(IVZ9;#QN;"7j]l=N'Zhk
%BFg7#Vg,c?G&,V+:ZL#*SpG48#sE@KfKSLOf\WYt`=;0N_SgcmTY8$Ep9H4lqsDddULg3Q_>%\H]@X.j?:tf598DOnlU?.WmL78C
%\`ufuID9?#[e6>$*5Ml8j.ZV[LBklck,j:06"a;Ac2M.TF>Z)OIbiDEW7EE/VaK!*duSa)mp-r(IM-7dX))OdQ$32:p1U4;]O-$=
%kJPTD1]4B(HJ/+(gfiJ#Nn^&Z??^3i@TWsLG_'L_j+F(YX@(YIXV[P&Tnep4nDi4k:HG8ao.ITIk"03tHamGYj_\R<nm.euZT*OV
%*meP6h!#UsKT-hX.LI@aEZK/t_T2'CmU:IOds=2;W.*pPKRNq^Xu<'Bk6J]:B"Rf3F)]bNQ*5[B\ij59c!(GcK&NVVQGuoC=o#Ud
%3^FOWI[!90]h\5^j%_o.H[_IfYue&-R>8cF&"c%6\s.*F%_mG*Z17eY(JiKrnaiUJpZF%G!>BlDmr!R;$r?5FQ\0p*03#uPf@k3d
%i4qh0i4%#$!.&CLKkWPpCKCp)*,b`+fbtY/\`hF!;oY@'Pc\9dTG[JaWW,ghP22jZ7n4=/$o]1Ck`KcogDJ,9a.;*K]lWUJ9`/5+
%heA'`]cE[?@I')p7]6!'HX$u`ipiSu_po?K5$@/iFWV.&g-(DG>4$'aQT/^>dIti`FJ1[s<5/$\V2+Al]q,]#=.LLhA+AjkCJn&E
%B"L:q[YeC*O%uWu;LaX`KqYS_h_KGc;(TJF-YBUMAkD->ch$.M%Qa5%GYm`Sn$#6`r@pKQ#@43#=.=3-hi"hIG-efZ>1t0]I(*Uo
%b&Y9[0#lk5Y,W"6:\s9&>jPe`Ft%+]hE!V50)Rn0mXK']Y#ZL$HOJS;OZGJS52$gnDHJttQ='[U*CUuO]A^"Bj*"<r.qOjXO9[-r
%)HFEH`=f^(ZF51E4>)qkdk7Sj&C7L.[iSRRG4qud3oS#k.du(A``]X:j2&PLh[/uJ4.Z82W\(uog=[pPc$!mocdqBc(pR)2da8;!
%ABZia5]'2coOV0b,2<dXY$1)g?upllo;3R&:;%Z_DKeS+h>S!0kOa*2G.P@^PD\bTAp:oF4udUOUNX=dN]4LM%-Bjjkh\&T^pBJ^
%Wr(lrF]oNhF`#P^XW<h$=FI]m0GqYAmCWoqc(/=ug)CJ#;b@ZM<[/rp.M/T8](NY@H2CTc]/-tqA5L?ZS[YL*W'VitFgu<P4`=Hm
%rHB(ORT)%2^$hLqNV%.5[rX)!G#!gP[LRUfJ"AARV:&CoFQTAI.ZFg5f#caG\$Gf"^%Obb^!<djGK+,'G5"3P'Sj_<s#tKY7^\BM
%F?+1bYaR,seJX)Qk`aRUe1MLgm+^&Jl&9s*;f.IqMXt.s':\W>Pn&[_[G0RVS6'WE3&in$cEQ;XEpilKL2=;RUGKn`Fl1.h5;)Gs
%gu`)94b$8,eK,6]SLI=;4D_C<lPipV`8oEPn$e&o7Ru=H61+6F)cWuSogt^fdiU5ZpWco`V:*2!B@&karC4KJiMN+2iCUpp<&D(K
%nP:,RUP4/0QU*H@D>U)^bq9.6ZgUk04_)&'S6]hN#G][,,Ihu@+'%'uJL<+D7E*Y\Hb2*#SCLiBeJU`5G<n3)l&#-r;Ct%GDu/L%
%iQ1O?53]UH[Gm9ojA]J9Iu[JK*ijTZ7GZuSLQI_6>$4]tDeIr@7j+CRb.Zc@S+aF+/Q>/u_85?*V[X-Ec<:c^A,Ga(_6'Xj3]u=k
%qAnF9DPE_t1HBK:Es/N%p2JMhhdX!a_uA4i,>0NN8^`U$PM_=Ag\q-0lrB.tC8[D6UDFH,>7]=d&jK0T>JYo@RU!4,XIiJnogFpO
%^FCJ"oGNN)=G4<bZN_VG-+]2?rBEN:d?0]_KCPPfNR$/Y%^tn^]lUn4A7lLZ:RYbUD+D"o?A"61<r^,2[!)>a;.k$U`<1Ta9hRo#
%>[`ucb#Ut,ESb^5oKr`aP2]TNHe+N:O!_Qs3RpS@\d-4=TRYO:7D3-7'b*[(!EldB=,##X*hP"eU7Q(J0@CcNk2`[o1t[1XaD07c
%p8bdmrh.d'[CUc9hN[*WAG(M6W3u9e9J(*e7g3`mPZ(5qQ=a3TG?f\;E(/<-05>7;@s+EC&o48>eFQG9p9NIcWesI#&I%mq=/)s)
%5,tlheU;U?%GF4`^%Qj6!kj<AkB3-HZXJ>TjmtR8?LO+"P=c:r9^d55c`.M89-+$'mN8"Vo?M<Q;i]V4]g9BJ",dn0pUAZQEM@DM
%^ZmPBZo"#JBG!8Z[\9mRiJ5Nd9qHN:42uQ(jg@#^ej-8K+442e;!EOGh2c+2WSc.uT<GE4.lI/Y/"Y>;6-%PA]8YJ.Pu7nfVVC"2
%[c,^DOjRufn9\NT!fqhqP:pcdW]7Dc!?Nfs2T12E)>%m[ptX\rY1lHAglq-="V@q&*:+K:lM&-a_i&T]BrCWgg.b6Z$;NVuSD76X
%TitaU*4S@:FN1.Q#5u@RK.p'r8nVCEL<HEqiF&uTIbaq/j3IZ@l_KkBTK]u]m%cF@g>p/g9%4qI(NHfCVbV\Y+>%0lL]+>ahA..(
%I*h2NW?,hcfK*UAT47m/ic?L&bMleXk2qSMMrjQkam,fdFhjShJA-O7]@!9'a$SgOjiA9"^.k,C/T_-ORX+nF/ireC:HXosAK-Do
%pa1Xmp]YuAd>,c;NdUS"*l/Heh5E[Yo]6\Xm&Ba2%H(g:9;P2b?kaEoouk%drQTf'gD`$&1l`!G9"1A^K'+"QcWJ#^e9b)`V-_`#
%k"b;&?)F=Z349B'Cn<dBFb=<[>8d_@B4\2+qh!ADB\X??;8`(/E^d*!(YU:`d>V:"]Gu+hdG_:0(<,L].?""N`i=OV[X.KYCp:6G
%j>?Yn'Kr_L4qR1QDWa]Yh$&0X:=dd_[FR3@/C3&CRVZEFIUcX(`l/P`/.I?IXRj@lqn<Z_S8'2c/69`aF)Z))c15p/T5B=%1X]#[
%%I-R'\nA#`ge(^sldq]P=5D0j-?$ZS/&kMg=>a=C]hV4;+K]*9^lTJBIc'J`>GLn1Qtbr:$`!+tdBDdP!?\Go*oTWJ6P[pe:2UHA
%@PPo_MuOj?FgW1g3B1gq'EbL<CpP-"`I&-*kq8nHh7d.GWXSZlXl@1b#5t:pXmlBMg?Q&V<(F<"]s_2?-X?A&Dc@,og!3*C>C1VR
%L](4VZ-/WYPP'4?3'&VIHE^>^:j:DMm!h8/q82Ad&mM`OL>@LRZtm'FfN]>]mAF'e)gq0bKuT!.CA\u-)=.4c0@.#U\OEQ$(*B,b
%qE)7m=4C,:Z(1/]gk!q7ZccW9at@P44FEO8X2T(%S!!VMU9C.oI<4H*lRtK;g]%37U[[QT>K_rB#Q&jlG5Imo>6![G[Ehpcm=ir#
%a`h*q-(j$sr9hE"-dc">*rkm.PJuM><k?!\4NXc$;=pjNNE4r?mb[S">J0k)_Y(lp2\/B9UMkb=`FB\P55o)+[2t<oGJF.Nn`%6\
%Za%sWo)@5*_SYKJa.DsKqhO0^l0A,146_e:`iJRc/k8._]",14GW]/U\1ujPEBj9kE.'V?m.KrHhWM)#a/n]RO#BeHgLk67PJ6ne
%btgtc<u,,5rmY\r4)Yr(I9;!2G\=CfIq/06Q,E91&%6\>a0<>0Ijp]GeXa1Qe)fFqn,#1.bBr97^%=h0eg%q7?/>&ns13IDX3Y.r
%NJa&DXo,j/o:Ym1eR)B"DEn&0q,[4gZ_`XcTD%@m^2Ip3(6?Sp?b<SN[M=:=D.PAHGPBtBQ14'ujek%e\Zr[8q02-TS\sdf?Tn7-
%n*\b-qZHiJ]s5$;GY]CJHahboYl!*,GIg"'g0X2Qq<IQU_](f\/j8($qC<KR`T#]DHXZH3jR0(XMbF#NchD@*q;gu2FT86l]4lS<
%ZkG&$[iYB)52>\a/[nb&NF!>_Q[[d_?\dM3SaOYfG4C^n-XU2lFgJF09:tZG)h*$ZAT?hj]h`"=h99@O(fh`m8Nsh[XpfcnEUVHO
%RleIKVf-k<qu&$6PO9gM5K.8\PIsZ)mA$`M07Wa@\YTE#eb3M!J,AJoe_BJ<=4][In`(1A8asXD]F1bSO7>..r@m4Q2t!m,dsp2#
%^%RH8?b*`@MqfoZ+a@+Ji:">up[><A$s(-srDIS+qTF50\)0FKR:"FVEH/a+bHX4-W3uQE]u&Op(&ViS^-Jeq`3T0%jjeSAmUEa(
%.S>.`hJY!Z>^_*3Fm&HW^TP!!T7=;>Cju+qrqsq5h^puq=an)rZdJ_on^k6oG)OBl7mFY6-QW%nZMih;49*=$jllT<BBuVe?b]h0
%^/&Y(h:]QK]=tRlh(SWor\&!^@XCp80\cAFs-oitO0=&>^A>hB2pse=f.mL`"NCZShqn.n<Voj3detG,0A_+;rqFja8)qMINB>S!
%Q(G4@nbqqj]@BA*K:]2qos"/Mp6FIlQ[<)AHL!dIL)^HmI^ur%>)\U02fC5Xnt1tlYBoA45H]DC)*VEpN=OW;BMGn8*^+tVo^7jf
%EHCTg_;/JLYO-_DYiOVeq.&p5B0Y:;2lZOBEqgjIXC&ScnAWOVo&@R@NQ2Fmj`iB>_%-W#2B-Gd(oWA3m+T3X2"&gG<d+5g7d8a2
%mp7QA56e<PIY[)npKlBfrpL)-[r-*G-[h<Y6g'r(i\=(ZT5<C5(7Y3slLNsW5+M8ZXBMUti.lEPQoo/8(HdMF*$7B)kNcJ;n(h8V
%NIM@Sgjef$BGb=0MKWk(XKSbGl#Lh1fdj3g$i\b]DXsd-[spEJ^ANGm]t`@g^D\Z:h#%)WiZ@"4E&TaY]/b*SXC&Z+^0,ceZhJ`b
%g"WRNac4>f\o`D+](>aL8b'NI4]rEL?@Dj]Xm!_;^3TT2>[Q:bnp@J4^T;<BH`rdM]<X;of=SWdioQY9p:bb:*`ogk?bg0o$A1k*
%^#]dV%_D!#*r+>:9Dso)Y.(If;X?!#V;(`&&(dt4q<R?ek;i)`#5#<C\m)gTBB**Jm$AZ8+-(N%om?#RGhG=J]ij(ajjAtbRP4WF
%Gjjs`Kqc^CYDW#2n^V4Na2<*o)i$)AnlJl3RT>[>0+PJZ>a8)cSZ'#I\G+O[Q%&R=BD7k0q=Af'iRL^f>JnfonK4hp?GsVHH]K6C
%?[A9f4(%eBYH<36b3kTt'TX]DZ5A'D@pN?uQ2EGkGT;*h?b_iKm0P9k>F)lQh7L(d`j\uU"Rge%=@8@#XGfAFMoW=D>Xkinjc/=U
%G[UIkMsg9,].<<T$=;mUhoRa#M/Q9SL+SZKj0d=u?U&gmZFdbRq&%uKBJ8%3++5X=FSFOoa10<<d9T^Z6bY$sPP+a'dZOLa]AL1p
%fO1&Wa4rcIq(Ms:?gEC6qd4`0,@A;/,8[&gb+#^\m&GAmI*$PsJ+@LFd18usM8bZ_F8u0a+tq2j\Qd3Tl[R(0^d`:sn2PQ,T^lUE
%Y&_1FfO+OW"8[7lI4<G&%'grMZ>;BJ5<GiOO%`^.LL4eo*GHt7j\Gaq?e&Lr`B@CZp5u8YE]O"NTZ^,3qm?+@_9;]=N272bb['t#
%ceU?#6^9mg._tpf]XuK22!f@.,k#OomA/9oNH915@Y7NAMjmANFRh"j,an\O1]C$2!?/i,a++%iQO0iK]mTKIIspkYcHG2eYS1"1
%O*mp6m%1hMf7/):_k$HrXtO0e6dmfS!,d3ca>9k=(12Rfh<mo0kBDi">9A=-.XPAg`e_[]:I"8HAW[q8H/-5MXa]9gX01mIqVj#f
%$(jH[ihphGX.@;D:D[AdIP"p[4+-SYl8RVu\m0+#o"32qMuN"J`JpLFRh0IaMu.u%0fO?a\F\59]t8LSQhA2B?Z5uAM`8U@p!pn4
%f$0PjQ]moTXif&>?f'RDm9F#q\eM\'5Wq0PbJ$j<m&02Qj`FRh/;j$L%`!@.IBXr*gT_]F*u1-u)Vff4ihn*8(^-d(QB-On?Oe^u
%:+d6Rrl;oLK9M4MK5R@=6K@-7>rs50r1Q6hAA*]UfD6N%]CJ8,VXGTY;o1,uWk?m+*B\T'[M.9E5HTC@S:"X*iJYtBD\q;9?iKcA
%gG)-.X;^=0>ua%fE:i$`^0+Qdpc`P]4bnXp3_quV;ZH(T<U]J$V.\\6;[iP4R`ZI!hrM.#LNMeZ,e<@*_1UiUZMTAhKAnWIn_j2C
%G+Pg"pi*'.bd26V62e&gr9NM?_83lFoDHVak\:"0O&%dRh"t=mRg2S*]u:r0jh&;(>;*^:(+aq/8Zp+eQe+;fIsm-u;%<^nIe\"r
%n#&tL'Q<p;SIL.Z$Uo[aYR2q2G]KQ=W'&sogdJ]*F2Q>I++c.1.=Z;HhRg,-ht-?:*n=$6an#;A[@\5i?./D<hd6>)IBA!Tko!aJ
%pG3[o2a=qQ-;1fh5?e'[q-pUUr363#?hNoD.neb`h0=Vu\c)$oIAksa\E]n4%QC#,Nt3"P%n=l+_]t5Nl$;@S+8aI)A),.1?Q9RM
%^5MDAH2SJME7b!PmOpO"Y'<&(b/;BHT,fJ4]c8%FHiD:Y7\A2E_jd9bo"3f7E^.3qIU2.ia_>VZk2PmfO1nr8rl*-\=LqfT#G@R@
%rF3BbZ+g5*Mbj&neo:09k0O"FfAGGpH=u]d7^q"ZoCj6mQ*pIUWoNDLX,i"eJ'jC%I,'+TG$h8\R9[@.ZY:C)938YM;J1(-9Fa]Y
%jk8+mng9aD`G'=rZdKk:'<3-l]m8R">5NI(a=S?E""O'Dp6/rA[qQft6HqGP<k77'TAW,Arl#Doa%P=fi,?fJr:6>TgT0*+q+Vf[
%fD]%qkJ-Rg=2+Z52Q'c3:[Tll_EbJFYJ6%bFFLdSdB<?Bq<d;#_@+,gksh;N8F[OBk0re)[qkG]^@J.GrS:6bIpN'LRbP^Qgup9>
%i8h3p7;(ZlYm9[!D;P8s>F009I_XhR?aoOF]+CX`f1ul7lMJ+k:%*dOS[G)^D8%MGQFg7GG.q)5]&EUp'OAns/XF9*RE,X0r:&1S
%HXD2FFnO^BpW[aVlMH:3Dm)C_?$c&3"qD[bXupru/q<B"LK+@E2OH.9Y<I@*pc9[^(T^N9eb:ssHN!3le^$/)hgKhDLXhribEdM.
%B/`m6?2NV"7@nN7TQm_gj[1aXnpfQQq.sR0KVq;Y[eaI?G2mnS;r-p3]aimNs1J-lZgl[2qJl%nG<\[=O4R`H5fYMoDUj45r"JPX
%Rg8][*cB/t?MDS=SXhjucbFm+aEfe3elR@rqYEdCX4<,H'T]g%G4=XlZYI1bSj(uAqs6k=]:GS/pcuOISYs)D]5'>15Pi>S)>d&G
%nbUuFqr@"7UY^@,fGki'T8nfBjiO*M2d[lg5?N3Bo'38#"%6uJ_b],',5&,mMD)[<CIN'h>BpTF&&/=DQM-LU^;E8l;85\c0@t^P
%qVGuUEEijlqB:@foTRgrNF)l?h1'ni(ZRT'[a`(lE,a5jijZbVHT'M;aIhhSp6VB,=o2h$md`YD/D#*XGAV>E.mLrZ]ss<@h0urH
%PQ,ZMmDmNIlB*^Dh[_r$=i^Y/s0+?4HZgF#<Za(lMW16mQ*4Q-elNA46fn<68U/Z3aZh>Y]j+2$(R-<)XmUQu_Bpk8L;*-.T<>@K
%^"lt$=knGqok.Y.&!ukA+-o[)Z?6'DiiACVg["T7a-G7*f&]^-]m/^_B6Q'l(quapo7Y-uB>3^0?H$#m^=T`o,6-3^Epl<_ao7:s
%l%?1Ehu*?2h&kG($B%o*D$1UR\&B20Is(;3cHF,Jc0m$@%TaHQCu8F/oCW!:MWA+Af?<74lhqPUh7.b-lOo8gbQ"3J2f#aq37;s<
%ofW']fk=j;,^abO8>=2*&sA-<OI3W`JqQH]'HdUNZZ"--5PBQgZ#XDF,_N,\dsI_$OXcn:&O)T:pmKe;PD<5"i+F,ro@FN0rl_n/
%+6;H&H1CW9h1"n]0>=spoQtfN4SQdTJ+BU:jI?0oiPFu4=gg`inma#lrr/2tW+X$.`q8gt9S[uVRG7ICq:t>Qjo0n-X8&/;rqr*i
%s5`U_rU0L-J+WH$\*nhCq:Q86%[3Y05!a/ONP"BJJ!DXid;%R30f7[pY'Sq&nJcuTBSkj>J%bgH?iK*gdlU$AcgA\eDgcVMn$@3[
%s3:GE@t=P+gu==J+$B9UL;[.h?.t*i0N!/enL&YYr7T[r=o.gKDZ)c3ON\XCe_d!Km['REkkJ&Yg6)@"rF_-KEr"_Z\*>VRc$+&j
%e).hIb6U2%dB>CW\*q=<G(nFUGOKs#kG!?5T0>Db@V<H)G,tT+V7Um\DuS_HVml(YI`#f7pOCe5HH5'C<%T3kr2$<SajsOBqJY9V
%b$Le@Gr@TeJ:la.q9lG;/"bU#iihdaCo$`jjj(i7T9n<Y^\HJHefR-T.>hGSCARUmc[W%cj/R,^oo%_Ap"Q5N1,8Fa(Hu`_s&bT,
%%#@q.'CEoF?laapq<@k@5!Q.AfN7UkMbblWI/NMIJ%91S+&UaS."C^2HcpIp44`l`/$&]*>9CWW!ATQU&aWY<rUJ?`?f$8.p]#Jf
%<M9?jeR@05jGc@pdlSA,eN]P"o5C8Y^!m#VicP^k+#!W`T$6G3mm$U3:X-KN>J4!uG-ljfN.9_Fdt.+YY>I-JIJqGi^]2tc[YJdn
%IbjIAq3'RShu21kIJ7RHe+T3If3a%,\W?2CENGg?J(pT5^4>##J"6Q9SadL&R&>E/`EVAc;8P@seLqtnq2%&8@/g+mO+-`mkGGDo
%rp&o5+$W\`@FgL3Df:#Jk>qWU(LIeG5J?shDbj_%&$J1lin4ikrmM+\l9@IPr97Sfj+5]QETgb8HuP?nIW_^+pXt<l&jksZXd@pn
%d?MFBQY5c:otfhC)=aV#hL=VNM*m5)P_5=_+(>)hPjpuo^&.__7dPX$lBV+YR>e0tA*jD"_Fm?cY=DMhSpT_QT:UMgcK<"l5Ip>&
%dHI-ZY9&&R<^/`o$rsQ=,;PHYT7$,prqlT]f@O@-o4u&<lMSWm^]):NO(!W'pAAtbVmgUEmWZu?G)/4eIgeL-m^k]soDGqEIap:'
%p@;-TI/4p$`q80b]8>MDTABA(a5utE/G\*\T)[f,2]fU0]AFs1rZAiCfcG?C5lcCZX1e)L=.eEZqpUVOIrYA';BL8Rl*(*XU\`/`
%4F+ukUaQ1^pURmPP:-sSlG08tp,%'K(XqOA_bZp$`UiK%gB&VP9`BFrrq-2fc_7@gp>`VX00Q$oJ,fJ*=+24JII[n%I!ci=q=P\F
%^%$rMc'L(gqZ$I@s8M_=?et\(T>14Q#`bP!GWPfakuY/#j7pD+2&5To\c9n<lZW-.5(;g]pHJN7^uql5o'Q3;;Xk%%ETOm;R9oda
%=13m&rkqpob?nQSf1B\[hg4D7p<)LjNP@^X[sPRY#HqKSF0a8EH/3#^B?M+#QKS8GZQhu?p?RF)4nm+d-U2q>ijkuEr7qaiqU<4<
%I6[[de`bR*oV@t"Im'I(qV<kHl\17$^]3,J`*GTTPF[M2k4J4S-7_:TO([?urR8Mii]_GHDa1dZB70R'S[[MOl`8$P:>ak&rEnij
%^]0A09kJJ8mXO*go".\Fq<Y#'0'X,3KpSBUihQ4hDdIlb#5`O%p<0<@]QEm\7b'_Pld"aarPKHBlfn%t"?q//kmq^GEr1bBlT]jm
%m]V(J(A-X!I6ACLIdlim-]-_Cqqf[!reoN\rohTK*Kf+875Fm;#!KK\*U2\W^HV\sl0[AUI/`t"2.27os6#I255r/13bS&>\"<Tk
%BFCtfd-H6QI"[J_m_&;:ST;h!YC-0uP_g46Q`#1QVS"eIIZYqIQM7TZB7><mh7rmTl!'eXlJMS[pFhU-3H?SJoCd,&mJ_,d_=cpY
%]`%28IfJCLld+I5ofZO(#C!*6BEU9i`buY5`9;\HfGFPYf[!oSrhD]-/(@H7mlYaUV5K((^8IR2]Ca5^G:n@?U:ojBT76Lon`l\F
%q!n.KFY%6rgPbk!cecD/b$Qg9A=!8A07S4;pl)"pT);ns`@ju(X8_83m(_lZ[Jog?Tg2Ch<tca<?Zh%qJ,Bosl9IN?MgXg)]:K^_
%r/)MN3*@0O'&>`upQIsYLMp%ZCP+bIk``c2r5G"8(S?/!<%uNpl@/?HhbWIDEh!>\P^)u$GQ7KT94*,Fj[Yqkr5#L03plY,7icu[
%2.lXjX^,&R&!,G^-u6s%!?F,)CZ?\YIM,;Y5741[hYZ7B*nRSk_@n<k51*-XK_C:<^\XGS1j7EQhm$Pc;O;UokH>q!S2&E8kieee
%7;r*25Q&?!CFc3ePZs'&fppTaCA34[I@*O6Iq<aL9J)R*SlYC9os?ah-P,kLp6r=lN-'*$k.#a?JUag%Ip\bT;J9')<6oS56!^mc
%;idmts.^A,=5IZ$(!gpdiT)ihIMQ,:>kG/9_#!R<doe*00lVAPDsZ](qjMC2j_X2Co%!@#_m2`k$b=c0F]\T*qXo8$QEt>(:ofmc
%7NXMQT-97A*jleG/&$=:oO44n[]SifnFc*sD`7FPFAuIAMMDA:J$4q*E&Pieo>.JW*W=Pr(.(!]d10Z7gL9"oK;G0IV&gt(mE_Q"
%gDaM-LJAn?ioH*NkN;[M,a"FBQ?0KYkB'aFek/SmB.9gJ?*8>Pl(eOW1rd_$J,\pBFc8+\?bRNH+eH)dr3eQ[)>)m+UKG(_jl=t;
%+a[RQrN)"nN^gM,HZNKhg2=,9Do$6VpYGS[8>-4L'A;C#fnNUg5)dc)/SAqmP=-Y1]GuoEg9g`Lq/XgtERn;WHCN0j/AkQpLY0mm
%$17M!l]Ae3Q@@D+4W<*Lm;'2hd4qh,``_TGNhb<.?aM+>O0`EM_49)"(4/S"V=q5-da<k&U+O?-Xr\&G`^.%XGaSg^T@n&I"1I?S
%ni1sK3q?(\Bh'77]H#_Nm!)%Gl4jMND22HR[\nJ:A<_C&1Tk6r#gH,fVCk2-jX^k3F<*8J@rNU3ZPZn.)R?3"@M]#>H5O#s\%mGK
%;MMop;".haJFhG;Snkci;>)8m1$<!cW6`:`m9cVe1)KL:Z3oDGs(EbFcim@V],cr^\$NI1kq;ZUS<\,3%suT74o(%qT7g$:S7A_F
%I;NPhl`T%'Tl`1^kWWa2Q':UYs,4$Y'8n[caNN7I0Hh<"a(3Z*1MGUQ.@:6P@H>TD=@16E2I-g4hTf$(&$IX5P@)9bj/_mSe4aQ.
%ICXaY3q?(\Bf*Ys>K<nmlVZN8CD,oQ1Ma=8`jpd@nljO!eBX?ATfnZ#[$q]p41rZ^RgVn%:/`dK=jK-G;]GiqNH,Yj5\^kVNlG@`
%Iq[>Tcpn1k2'c[a1%&p7kN]#>^N=_p@Sas3ZkZ9cPud5[MJ[DFY12)gRgHr1,Hb?Y4$nbt@;<f]D0>>L<[5Ilp;Er8^m^%Ue83FM
%-D`ZR?.H9Xg5I=LCn3:VKs71$c)5'T0qN+^Fl<VX!Eb15OEg\u`/[j#H/tH<"\d^?i3"]AMQKShhtAc"?p./b,(<-m>/@RtSF!*n
%-@-N>d-OtOl"Dan"&+8)fkhqXepkW58tnUf\]VHVQ!fTc62!th$Zq8N[<_$_2TNP^K_4RI#F@4<(nq\Bc,j[W%eHQ"g+@oXkg=ZE
%.Fo;'6Ou[inN]J3P-REa3dLm>g"2O!>CTiD[E0kU62Kf:RPnaJmt>OQ\THF2g+],D0q,=Xa,Ad8BG=nP4.9#>jED?._R@s)Eh<ct
%eB?35Y8QODd1pUVF9<'I$<Q8p##o9S*)^DGm<?s6.d*8=@jodNOM._)4W9F*g`@CTB-Up+AZ-(j0VTiH=_PN\T^/97Q]e!dU^Rkd
%g8Ye(@&dTS>_-S\>'_&VF;0on0,!iZcr$mp.,HDml"H-8Y+5$^U2PD9?6P?RKe_<6hQ+oOgYC,5SP-W/l>Q+^KK\1sa(':<d2pat
%\sFC2/_<MEgWBo,?g@$lhe*H=0!\nB]Bj4=qk?qmESY%02(lj$109npCpV<rnU9A2m0F,"o,=Xd1tu]sKM]OKF^pI,lRnN\7Y``a
%Cm8^R2sSBj]^rBK54qXg[Qif#Nj17HG%KG<>\ftLmI/!]VL=pkJ$iJM%k7KP%u$W3>?'DA#'r381'Y\8m#DLdmO&H]C!=uT]thm;
%%AVNsT.[9SQS,+-:WK^GEc(B'p:ITXQA,p=mW<J+NKVVRlK7?Vj;t^nEaQu3jpo\%PoDL1apY_X0r#k\?J(AR5slt?Ck?hUNS?qt
%^--VinfgPLp#QF&P;.#*lG6f?T^j"Bl15r;ZsR*'4>D\N)0a0UBZ+]gRJnO@.dH7#+)Q"352(dSFfVJ:g.'P7"/;s?goJPPA-8@n
%XH@Mgo@Y&LZl*&!BRKd"c?ITQ@/=JO)ZS3nfMNF.0Us=H?SLEeZ63$98MMtU+^5hAB*!k[k3g^4LJNB<6/K$V6^3"U#GOokrk7KP
%/\)TaUbVS%HJa;p<U\%@lOn&,IA'r(4=hh+&i/\+5I1Ja-6ldm%-MJT,'ESniINAY_8+#cL@.a"k_EM%\+T*Aam>U*lo:`XJP@RP
%1OscnB+]harZA`t?-et92/f21Qt"9EPZP/8"3Wtim-MQ7*4Ki5P+>P-3W#;%A4''Q1j9%a4Se8)[]@&OTBY\rJ?*KpAJTVTjXSkB
%(pukcH"S1Fr2&/'FXKO2.00Z>n5lSb+Z/u\P1q1/WZ%dtJmK]mAV;#%0FXA;34=<O[G>/J(lsU>0A1f4@jcGc'a"ru@dD(1eA`\J
%N)lK#N,#RUm88P!*IVk)Ft#J'[UbS4T.2q[kL1d-N6pq\8f-ZJc2M:+c8MO9'5p8DjGP'AdZ*7PU1[3/R6jqMn/E&u>%s4\/S6mf
%c'-XNRrh"^[;0cJLPAJG>H0,S9ZG#F$%8eOp-^S@BS,OYf'V?Kbuu=1'P\jWBTpP;1X;!FPGp-:o.r.(fIXYp0k<F_2eI0($o^3W
%TAa5n@D=U)1LN,'-Xt)6;=1ZCmR(R<p7AmsA9@2>o<T+>RjC+2<u9<O^>!X-hu8?_d(&Qk<+dJR_eN9?\El<Jjr75LK8\1JdhN.+
%Pf#L)4-l2D1E@\^]07p,im2439Ea.0*(HNt>_fEbT!MsAOnaYI3tkrQ9_H`!35Lj>;Y<Du2]&qU,*V,B[Fj=^?!NRM>knPKcBZ`9
%Ee4H(;d?6Z3&K3CdMpB"?SXu=YKL`:%$g96o!fTJch`/@<ei96bFDgs[tP6.:<Q>Abnl+L/4;.u=kh3l(YWeDB9GD$4q?U9X;HLo
%_Yg\kd6=+[HBt8R_hOV8P)uX%QF:3&\hW0(Z,[g\d2p<m5%5JMBquh[A]^ujS?HE7nA^8]+SXmt3S5#JMas3>S&8YJ\V#(Tr"-!#
%h1f*f:W>r)%c9]ES)f3]Q8+9sY_^-$BLIu;gl#f4VM>j'#<$=o:Nmu3\`ot6)I^ggDGk)b<]&<q>iS;K`?_3CgX/++AF/.IO+q\C
%E[!0N&0_Eu\aV[P$5D#'ZG/)'SB?%m;PUd)0Ohn4BinI'V<2D;A_)t5nDGQI9Pa7ATUi!+TOmAh3805=anKO]*O)%nREm:ija)$:
%dYOADZ-H/d@[RYp0+BA;^ee^-edU[aNYJuV`?.g41BH676lJE>&t8E046+.iM;]9l1r!HWomFW<*GY-_O(q<t-p%MhWm"#[q5gi6
%/WG*jjBWr(d,l>tkXu=%Go#QaG!VT^CE1)]G8R3i+I<p;@`k4fHL!'ICm%!68j=kCOOK;rbMg:9N1r)\9S?p__jKcu5!M+\+u9gh
%U\I0A3qpDm.W,f1>K3l5G@?67fG7uo5sm(*]raS-Et9&a)fqbfB?uYZ!]jZ#c]!PFNXkqM`pS42e34lsKJ>;-I\7ht;Eg=%@2gta
%-U"GPe@\h1H3604NJ(O1`S*^15s)"03^#Hm'VC)qQ[3%.[`o`=c'N0RAcO'qnZ2,iWDn:o<5*N]%4hrX(8L_OKdIV9?1q9c^Vd![
%.#LA&CqcQ]7n)l%[E1YGTPuZn\0Yps,8=+h)4B$G;o[V8Qr?;7SXq7K<\!ZR`&,eQ6tXJ2B^]&;.)'m5Of7]CVSdNS/tnCujcCm#
%aSs7EAH1&V[[@7+:'8HfU:nsqe/#JJqZsg7VWtN3V0(X5=`d:S:!G+NE(fjcf-Juqj'9+VE.=u@8[hNgKk`sGRo,>?SuNoh]Q:Mk
%W,3H1Y$cG48D0%CmuNue-4gs)JgZLV?."*Mg__SVXM9ZNk]b$6K"nL_aT'_=(i]EJL[A=`=`U(5Fg9\/6`(36WO3qn0R"%)F5Z9l
%Z=pHp]oD?C+?bIRK#kBIAg5<k=R/4@YJ/9$H0eZX@T=3Mf42680pLcWk%p#Yq"?EL=0tho14ie!1$XpFPaebJeFgBY[hsnh/kImq
%;*.GJUsY"N*^_9m23_WQq+u6,X'@0S6W2TrDAY.'SjU]"9g_Q'`M[16Y9-tcn:]kDFtR5k\b\(;-Ou-gSgPo6DDK!L[7-,.<ooVl
%ZCs+?Dpna>Q\lDUo5IScQ8H(Ni5D2_9^GKgCVdDHZaFc(1/oR<UX[U=8^J!*R%/0N@=29Dbf$QP!RJ4m1C_f2[C`e0Rd=:MGB`(H
%qI(qUnS2$,7A\N;;D1t]@!+/4GAd0`:%OJUB/J0o5;UrZC1cF<cK+Lo/42c^:Q<,sa]NB+XGZ*)27&EVaA:qRULQqN;A<2Co>8r<
%UUD+M%,^.jH%SCCfuSbo`7nZXFn-H`qg&t8lj>s,"Pf^'bgAo943e`^Wj;OFMX8d+(@h!q-)ABm.e(um$?`u2Ai^i'.T<D:[dj3o
%NJ>l=mn#5YdsdYj`Q"mn1^'E[3>_n8MO`+i`[-ekoF=3_(/\K6T`\N(d5kN5gCK3kQ:"rs1e[hGs"'s$^KMG^\0(gm<%a]A'_/iC
%P%(%>5p^STf\dQn"=nV_],:jWbNLt(05+oEGVfNE8CNg0mo96<NA(B.\gSG?^(doPmIFQ/G2oW`!r\R;fd'8?F5t`&fOFcfB"@$d
%OPN=f$_V)#>J$.--":&Ri%2[n2F^BJ_9K).FGpZ'QiP?0)(HO.,B:du8)$RJ&N1=iRgpX+Aq%&mKpOu.rQElmK-=`LP?puD=3,s?
%HI*<]IOKr0)/"G/JOslqMFNAdcepinBGo+c!<&9f@Bpr.EM[JN50X9kJ1j]<BKMo@)5[MV:raGfC5;1dS==>qPWPb2eMN/LCtlF@
%,d*R",7WPFN$jRH(n@WF[ot-/VMn`%(%fI9KV;@6"#a^(HqctK]t-i=09r,'BR8JnTd>+4@BIbI"-[1NQF[#b7RKBsP@A9``O&`a
%TT,8/k2SV?C2><=4Db0k3T3A.4V\u'V7FP/Xln!!8^6rt]DOjWgfn73"\24S*!F9XB46:mA.Aa"XWok`M;U_>Ve]gZS)U_mYQJo(
%0H-GKT8f.k^-^2doe7<dn\^01(lHq)3Ya$`ht:]q<lT1H?:Ag-IEK5/J?X(Ug`mEXk.;;?Samc=D2ePrJ[jXQoG]M%RM[uu)\BO8
%oiTsrT)_H!].Mc_."kFu[gbm49j,*$,I',2ei>bY&0%:!0'aRb`IP>8ZL[`is0Xf?(.Y:jOruPC@7`\jXbaK\?K6g_jb*oP@V[`0
%Z9A#FX/@ii>s406/Gb&YEfD^6E>rK6-6UF2IlHDQ"DMLLdG0="H18(J!KJl,JH-gk@aM\=JMGdDelC0"9WOUe5-8iH!E.+Jgl)Kl
%"AO>gl"4hCASm%#f/+@ilUH<AKWutoo2=:Sko)6j<'"[JNAK9!NH@ug`3.>pW>[N,Ilc6+I$a0#i7T1*5k`unc$ibL;X2dW.:rt-
%VWHdE_i--?5DoN*-m<7^W2@.VWB']_`4acQU*B:<6c,go`YGJoA5(VBXu[j#5pJ=CZ92%mYh;1k:kYIq&Dkg9$W?K=/E4VTMpdE?
%ToqS0IE>b%I[qrHM5pp*\9&\pijoG529AKl3Y$i],gQI](s,.(.:EU;Xs(,g1_fGAq.(CjOS*0Y.D&sr[ABs8\PB#qZ"gc;ItiY!
%_OUu]nAa6!!<VZ.)eFc_q[gSbRr2XN9--Zd8!U3=&L(@d!jO>+lPNp_,FNPAgVkhu#_(B"iZu_ngQSt+rFIQAX#'&Af2;*5>qi\Q
%[c*^IDUaqq'Op>_GPPZ<7f;tX8Ppr9)0=&u3Lad+<_`F._X1ke[#m%tE&JTmQ.#.0F#,V48,9no27=5k`[=Gg,5t$.<1*E+V,S!6
%5sba\,Yh/kERl'+)^Zup'XT;,&N\#F#N12"GLP!N[-^Ip>P1@1;''Nr;%%YLCu`otI<D(R,&Pjg,W9.h-%\CJBW]4f\2Qg%UF%CC
%f?ke$g27[U@j9i5CfM_&4'HUeQD(#=l3\-DW=>)J,,3Pm?&GRD$q7WPLa!G5/]`LEfs.YK%/qf\1#6:QQXDTlP%Ks9r#TIVKkuR)
%&a)_6\F+DgoTFFdSRetY`WZ4`H&Af</2O/99?qtbE+#"HA#I4enO,LW;-/\`&ZAJE-a[Rm6<%+pqUX)_%?]:S?-0I*(_)DEVSL4c
%cXI8TMa>$Op6Hn&6$-)AQPYM@Z:o?OK+#E]Z7#joLa!K[)*>tMO+O48LhC;YJ8V\-'SssD("V<jI-HF0E&&h;O"Y`q1TW"Ho&)]@
%rt8T*p)^cn,LB:dl8*;pICMSsG*KNTCD.+6Jl0b:k9@ZtPQZM.nB]=\Fp?FbaE`G%=(6&n@DX>CluuRKrXD+h74^-^/[rf>)u19d
%//L%JGrO>:Qa&*Q/pg;6e'0<9mQk\fT&f"A*A@LFNM8kS&,&J&YK7;R`k<CAjt83*!TKkV\gZ+]%j&mOUE*]I7MVnBmU.>=BQ#gE
%,gI-+X>mXXlDc*k;+iH45RcH`XZS4s8]Hoo%#E+E=W5(k_urBgTI\__N4dHIhg`j?g[p^E\)P;MCkM9S,eR3:F,8"IErdNE8kZH_
%g*!0nHt!+_lqepf>N1kt%P]+,>.(,;7,b,+-RK_WLcq78=Z-ec,79V9\4i'QekRpi22+0OLUL)[%h'fY<3RFVGVG_><5X'6S>b/D
%+=6FY2(T13e,igWK-0V%2'9aZ1ermqRY"43@h"8[$6K62*c7-I1i+ja\;X:S"NVPO0)>!IdY%Ul]7J)c^<&/HL_+*b1i-*W(IO=E
%!j3#Z^g\FDKu%Re"7eIno0hL?gb_;71FIl?,9TjZ<nbl*ZtY*uh'LuRaBBH$b[ed$VdPRG)=Rr0L99-&E0?&j/&[7"7ZX@1JLE!s
%$%q<'(71bGcmL)QaEeRD+Cd=BjsXl+g4BX`2++e!YuH!oM3WWl`ep'Lc8N_Mascp8OCXUKN@;i8D+k(M''9B:onl$kZ/C(0N"iVV
%:')'4aOS5*?';]r^ntshP,@2!-?u[:)ht^5nL&o4BM=k7KA/GK;NDuPm5b]H6Gi#GFrTsfi!.:n;OqgrKI^YHN-$&n%3<];;t,0'
%VndC&dj-=HVOt4P<A=-^PhY+^2R3@8e"TtrGZp*)aLt6^%"uAhGeP&dMAsPo9I"=s0aq(lE<$?p+<#_pe[;m.l`\B*Eoj7X6l>nZ
%FD[DAP7lGiclj2G@hCg\!Au$R>$qu.BLI%#A==,P7q*D7#!72,"DfH?T+KuSetT?=$:hskn&R78>:i^LB^d+c`.R1&0G/9`6*GiS
%6bXB:=c9)9"S@V_68<eb#98``6/efOSS/&OZZ$3-Q0<m[W7#"Ig"JHR`6JEK%T'Bfh[;%hS9cSn.A%.e,)Zm=B+HU?&]mp5n3].`
%95qKq%f;;#7j]_kd8r"7dh1rs=EZ'Jo\*<pX5+N&CC\aE\Od!4)nj6B*B;K0pr]K@`;Ia<H8%hmP@HGCiV8KV"c0(@IAlEtaVjI%
%-:Zfp,FA`gC..%b'L85lEFN,sJ^O-N0m\QIm.P1iE7DgYQ3k_GHDpYCr9[$D\Fbk#/$C.L6/lG]#[-P-GS&M?0Y.Bd_(]FrLuD0)
%EbHAY?61.HH.2<HGJ[1p5a6uSac5P(mH-6\UT-/#(>hfWf4.*.dEqa%!!tC.`j0Wi0R6*"f9XNl9qWd1:a4@:;SGX*EXaPra;utt
%;S!":^nkFRL43fn`glNH!c5j?+ph-uX$:A!FgOa=$/LrAmZAarU)9p>e^98H]\m`"=d(I*3ujmp7\[c($B%\N:RCg*k]@#t$E0Xt
%r+;\[-[B=jk1MU)U]aITfpuN-ZC&r>/BG8obER*X*GuuUPEla'$u=Lu3(#E[$#;0G:OnNhQiWNZ@@fBCBQS&S]P`7763e!L&4R^,
%,9A,m`!0NT4UN1(cGL\Og`#a*8,*EV+@\tn,6<%D!)Y^Mr%QK,QR4ssQ(8^*5\Si+P%2Q.eN2_E02k-nK0(k7[Y^jc;V0f5SaVLT
%Y1?ulhZn_"m_=q")q5'_U,W$PKcS2#K>.dfh^H=EQW\1I:M\q(qBlBjfa]sa,1f8n1RghP!THe:X.=Y;'ru@KRYsRs])k!<DF[0Y
%!qt`q@Z[2JWj"qn;e`UHq_OJ6;Iu_"iY3kFD5m<HFOZfg8&^5A-OnMM`-3lm67/cq,Ar/bPJ^7B-'(8G\B(\$>Ch(f"Be3:<[@_O
%,>A_@nip";q4nH\nsrm%LO]b':5j;T:BYPPLuR"(g(-t2Q0EL''7@7Hi[2$(aM#*\9N4NfL0kOmAL(8q7MA-SF8kDgo3<1tLc*Tg
%`[a(UPCa)sd]bs'HQ<UE?nh?7W<RP7MLH=gDlUju43CuKPHX$!eS\f5XV\MNm5)J&l2%j]g+E*%T+F3Vm+fZO@o5K.;,):$TYBBQ
%/r<+T0-f$[>XrWeObgj%'f]g4BN<5Y9^;ro]1s>:9@?XAiID$n>kLtQ-5gPe*&Yl]gGC0VKLSF5otm?F]r^J/_HCNFi$QteQ=(sH
%=!o=%8WOcu7d!Rd?"".!O1keq>4s$U.\7<2jc@#e5!*Zj=qYqNTt&=jJ;hrP6OqmUUlVFkZQW*&QI58NBX3!E^]&\s[YjC1UT_\:
%&Wem66ZL@f+TV;7s"Lf:V+&i.B<VC_q\q$d1J#tah9+m/"NEN"io6#n*Y46p/3!f8S-d/B1q8p\jXsq!HH';mVRdSR"q8K1KP798
%m(;al;DSTQe"YO84Gu-rcXIA>V2f>r[Ac!lV9NWZfe$,4<*b&+:-27aOMeq3$(>.)g_2=r;[dmX)YquGekQl+6mQ7YJ4)6u.8?5>
%IQ+O.Sf^@\6K!VEEeUKc72Eq*HsksL*=YB^2W._*C/5EQ'd$sZcFY#DUc86bbPYA[L!m5K]#5_0K3`M03'?!o70ssN`"MPN]Oqh/
%#TAS34gdW'9f'm:kK]WZ73;R$d\kMl`F\NYc^Ql)-P/"EX=Lk*PpI@_m*aPeGoT?VJ<F%LO6+RLZ0u[$MD-O'fO<MY]SN?7"CIKM
%T7*Nnk!+&pYDL-UT+/#AL).=:\ag+5&^ft">XD*OmpWR-([s[DiUi86MD<Yg/tkRACa_LY/Z$c,@l2=5,$]'<mnsru*t'=7E+*^R
%N$Vj:J[LiRC;)?rqK$7.mCQ<R$orGiS`=o;`m=lkcBI$np(2LN@,/)oE9firUs_9O:>%DXJ08u\RbnG&.pTDcL=;ELM8j_!=J@4B
%C'"BPRI27H_EZEmS7&(<>3>2<Fon6>b:p8jbdrWLa_m,HlmG;B0Ud$OHe7HL'TV^#i_85$ho-Msjs?fT6]R:.W=:\,2U>th4H1CV
%>'C[9E7\r[;&?0.3K2-\2ojuWWaOi?HCc=L:h5KJmG%<r;4MV-71_,BM3&^Lj/,D%/D<8:0R#7VE\oT)g+kfsKf-+)MmT/<UV`f]
%'WUR.rZC276OoJnW8_FOZ^AN<`IQmS=>')b45a9)qCKTQoNFY(Hrn@&YUo,.JTbELA`m7Q@8-#M8qHkrcijUl$$'LH0)JaU4CD'I
%ec#SX^drSsLSJt8TpY,pr_iHs=)qcUmu22j\5^I6p2f/8bQ>f%FR$6O-A!<%LJr9e!<6hpT^Q#>,_B6[m5;H5`cUXuCeJE>/o)5t
%W<3WL`Y]%m<Wjj*?A@g`:(q+;dNPk?f.gQo)=4i(2:c!K'QaX(;?Kq`DDBXjluc_5b9BT\TH<Fi[U,lB%`VPrkRNWiDH0b1mf`2+
%iTIgD#Ad\2&b;0?=@qGFZ0[uFiWTIRdr83rR1pI(`XLO;ek.ZC*CWJ-J/F"3)BNa9FCl?5%9T)t!'n4'MN89j+XIBBUP^Y^B5=Zu
%[WXXdKKa:$U^81m&314jJk-='0$:pk#l=C..^qco9,RKgqV<nK<Lt\.5RP`ZK[hhpHU_5'm30Qhi]jMn4@IMQqohT.E6M:=NX$i;
%-jOH"aPPi'r#/W/LThJ!U'@-'nb9$>MrXY,R^k'I@I8*k1drBqpETq*jEPTf+1kW&"pmR?L2,(X"bhgsaX30`m`>hO,;Lb=To4sF
%Ubl4\1mB#M[(;FG%lo6.^*O5iI]8aej<t\sSH8-%#W(JVKbt'(J&gquI[T_A07k9*I)-;L%&V!;b1)L<DNqPX88*e.V5q/$5tG>D
%^FQEgGt^L(6-6?gP6_CRcm<Z]-!r61)5T?/aMRJYT-*`Td8=H&lAYYok:/;%M>,"[Z5iIR^l\e5BAe7<!c#!aB/9O+^0Ac95E^?S
%]7P'!BCf"`%*l4X&J..NFIb[!22Jt&f>V9gP5H%=^_u%'oD,I.<:r297>n2sVARQeYm\VUL'n,<B@tF308W3%:c.&ZllZJdjP_4T
%YK;(J,V#A/5AQ/sEIFO&)a'1F5ChQUHY)Wm!@:>_)"Uns:hbgVpW.B]$>N:B6GT+"X,??ek'Q]mVYp3CBUIb1KS:]tM(gsH#fP@b
%FP1jt::^N3.'bN6pQ=Lr7]>[*G]FBc5&$h/l:I\qCB,a(7iPF5T`U;h2e\ka>%A9PE=gH+qRGLqHdJQB.b#TI4p8hVZ;AspFZ8H5
%M76/kC0jOai0]g'XTJR1?R^n,N`)'S-a$fr+uhfBVtTC7dt#>3)@2OG4c6::$)siGQre@+B#!k^TT!UZAA%3u^E(f>;[[D_Pc)#b
%7UPXZkZNr"[6>d5[R`];?!YAt5TDJ'/.)0oCZ1-^B0O`d_AWP+nfX68''?IC`],<CX_"dc>g-uF-_ZG-XKZ95A6/NHaB%ro<?e*-
%*'fgAk8KEr#+P_9]dOl:cYt3jQ)^(8]aJfFr8OZ]oL<S=*r+3[Dh4i5h++m?'V_=^'s`-<dRb@<%gTrE2`LAf22hT(+AjRZ5/DW@
%cW0/h^MBE=5tK/o.6)%[SPbj&JLVbLX>UMGU/$k$;g</7EdO(D96e\3L-O;?/0[b)nE6f"Z"-F=S>#N-A^BjG.1tUlaD5ul.lT+n
%[fiK;]($;?Lu/AE$`(u:-l+]9#ViMOVj??$B"hiR]LGcI'qL2SK>sE%RN/s+=9SV5m.7hh&67VL!cUp'BVH<9kV/C+J2j/]n(;Fc
%.?bMN]Te-mPeq[5WBYH9(&u-8N<CI#SuNJl?pn[5W[DElbanA3Arp+lY!;_k$9i[/BQ+egBH?kRb#'Yi(c/kE7+Q1Ji&VXgb=M"u
%<>I04:'fd3igJ,if<^gML7WK*n0P?^8kt1Yqj5Y@`C'1B9TT2>!^_"c9;-<l?LaMLKXbM(37eWY(!>6X2CX*/EmjH7&:c75bK3@6
%nHbp@`A1_/Kn]%JP1@a0i6\;c"<`JnU,XnrD5Q#8:JrR.0mX2;Icm13"Dp9[AWDXI:uBP1(mK+TG<[Gc+b9/V+\r%B<Xq_u'&On0
%$[dr<FL&d"X\=^Ccp#S,?6'me,Y5-\4KarS8\fYCJiPec9606B6oeM)OX1C#!3in*3uq6H]'")P?P/nPT1!;'0d:MZk2O+RII?.t
%`eCn0g1Q,UL'L8q$D+,C6S0u8!i@V(FTMb`B5DcHr)`R#HANXW*ta)nqI[f8;,l`5:eE7,7a(58Q0\9#hpPe;8)UXB3-2]5HW6Gi
%Xd.hO42ZrCjnpTPbV-nB'meBJ7<1^2^4[5CGQ)3E/P\dnb(a.@&2L1fYd1Nj:Z1"4FVs4`')@-8+?/66bGdpA3(SlI>3b*iS_uA.
%WulRAkBpc2@GRdF=hVD.-Md`T2ie8*@)JQ>m8a%bm$CSIGSZWrk=[3YCtDl/78^3o9F^XA-muE)57#;TB)k#[1b1%,!"0e?XnbiZ
%<0cKqi0!$XND)D]$.L!!!^SZiR%<6U10MP?LZc0uisUHZKr4L9E$G#8PULWGRd<Z!eS0!TU2B)PIU]rA\\]*/PoTc*ct=hf;6Ub*
%,a]uB!Sm<0i[WS7,bobW+t*LP!&aF#;"6ZuqRdN-%L-IIXZ,qi3OSu+5`DIip1oHP0(/'//4P)iSdgjpKpr3$+TUL]U4Q=c<>D+u
%\><!@Y+?3$&j6CM#s-fJKd1ZZ^'0BkkX(M>0Ft-Sd[9YPKgfQobhfleFr"KqB=5P]hS94E4ZF5:JQE&EPu`GXOSXh_FIX-iMS-N2
%&;FT(W7-GpB`sOE2S+qNk:fY?;^,./FkJ_gccAmiNBN1:/J=>r\/DhT`CZmXNlXje7mSp`6H9hP1[ffgq.n1[GdM2ffn%BD:OT?K
%6#m"'Q<2pR2ic'/;<\^'nMHs:"+bs[UKKQeQ#'S-kRp5@JmDDcODMkR8Pj/,**s>21Zf%D."G^/k_'Ld:]r/VNRB(URk24:FaKW)
%<"uj@;;q-5LSjFFW#m@,C1+U,.3CC/;E8AoF'DTO>6U,?l;q(;9gpn67)`=b-m%g^%TW$cNbG(.YoemCZ,;-f"\^MiE)epb&aY6h
%\n?43]Bj'f+?Y)^'!K2;1`BBBbM?pPLDI11oNCUd%=shdc>S<QkjWM4d#$c\d`9$:&_Cq_A`"#CZV4T:[$&9!^u\bhT`QDB<-2$_
%"bmXl+!IZ+OOI#SDB0t("c`Yu\4A2=#P)+FE*-4BW]lbN\9]8(Gk-14)'FtD'3i[`MCl"^Uu^mdG<OT6^@kX!*=5McD'C-FXl(Mj
%YWSbi,RdpE/6'>]i(HEDCibaE)9)[E'26q:O.rg.;9NcijWu2>7%@8P3^,-GTXcO@'&A2q:S&<T7@?WA3ES1bLkiH2;`'67SaiI"
%qP8(tDR+6$p+NjA5q'tZ%3*&1hp+[T%>'WX_'UU\Belnrh$X>[27\5ad/d:6(8Vc^2f:YaSieSFnMJb/7[.&)eXene,F5Z,6gM$(
%M`?ME<u+c5d[q0k(J6YRE]aV(li1O17E,+5ePK?B!p2<8qOm>Q)XGm+5p:,r#;nmtkpER@AT(d"\Bcb9>]khpmPDMOg+cU&e.FAI
%8.'Y,:>qO-FRIW&*dqm^E1^>.aEgMW]9`X1Nj8bAg2=QO+p7&QqH:aa4@pC]o%>Al0JdJgku2W4.bb2RKJbDQMpbmMWhl.(R\j%6
%D&ps^_t;qC"LU2re@6W"()IX%V5.Yk3d%M<k*)gp(4<?L%@grnM`,!SaAlc"CTc?%Y<L(7U8MQ<)bK,b8Z$cn#aqdrSSp1<pVl[r
%YP?D-p*RMg6@tKgW8RKaDCBibW8*$]c5YER*Zs(o2E1!Jp9[rFhPkCRI[<HGBPEOep.5ol0,5S2-u]J@YgVeSMSQfJh,(mM`L4ml
%!p^L8(KLBio&4&,CZgM.M4"LK(ShPNh97JOb2f?)1o^'l!3Xl>K_o/DW#o2Qgf_eTI=X+N<(+X$,OhmcAs1Vfej_$1%d5rns$iP=
%$RQ_RD%,J>D0JGu)quCgg#q/n\N_;ga;jn@<<QR"2W'^Ns,(&U<HHqIO$(jZcPX9(6dWJ,E8riT)DaC=Z#R1;RJ>G(>`n[l4Y`-/
%mc_\,]?1;#+'lZ^`Y$fp*/(W=.SR^3H:h87I^oh7[OJBDLBQ3@Ks%GuI`GfVU)cR'PO%9$fhf?"e)?/);HQ/`&<W;u"+3drm-Si>
%pKMPu@]i2E_gPa,O$t4t"cu<2I!?<s?K0UCiEe>H\+`ba?I^5Pm4)(?X>"sm(9Y$I;SjkP(hVsc?5"CSYN"mea"l#3QAMhTZmeFr
%?r1-a.b2[Z1*O*'`mu3AD?W]A@b4l+f5-=mj$R!RRA8]@n==[aFi=4![GKNgGEr%G'0rum]4NS[(_o,ua#+695)QOUSaqA6<N1tX
%,bq%q28UD5^S:_pBSilajs*lH=60jjQ0!^o..h(4TY-i#(:#Cq/o[Ji1a>F3S;AILA"?cUQ$V<\-&%&IY_c$+ctL&B`klG3;(u,`
%9>?(s(*alnh:)Gq&`YDi>N3:tbI`r#;04h1I<c.U>7.aEhnnSGCW5`j&E*sAatF(S%m55#]EYoo8-H/M):oMKD^fN7]SotcS2u5d
%[#:/G&P&"fmR0Lo4?KqdY7hb,Kj3H,]VC7bN05?(9UQGS;$"$HRKmtmpC6_'n]Ls0c&sd1W@;.N&tM8*/H9C*Z(GS/#+5Kl[?mPB
%ga7`=N4kHrr%)$R>gOZU]Ld-uQK[*ePf_(Q+uGY)qXNr060a1\pJBsh\`DfcCm_)Sl9LAn=gul2-t>i_"P#CS4,FCT>msnQ_Y5J_
%@JXUC#+\>c;J9$I,<J&$5q-FuWtF,XaT0H<InQ@W610]2lq"Ph^;q-f"sDR3(bQD'&'-#])3C/?2A-_p*E74'm\jHXI&5qUOl_tM
%d;]3a%bc&M_0)\ubhQWC9P&QNhra?#0RtKI*bZ1f4o5&Eh%\aFYV":>N9JiU!.pa`J!=2'='2Zf&'aCe;1/\6*BH=G.16I9STf?b
%8[>m+rIkGEUq'`$6mu/4W[[!8?ESVRo'iq,4#cNciUi=]Un@SNpG`%hG(8QHIt.(!]"_tJrl/l!J((m?^Q8$`C9@DQFrP*l:$*)]
%_n*'SQ.U[OJU0I!Y#>qJ*X0T!XNN00$u-kG?m5]pYQd=q?.+.0*c[pHTue)0FEK6)gnfEK@*t3mgmfXC-#1l0r+MDY:f52@RNc(2
%gk,":qQd,ks&jB=;PrB"L2jk.$#Z8QE]cTq-VfT<QrtF]\IWCh4,[/^a(5=@S,DBpB"ag+j;Q#RX4Kg3!pB]$!KH.8lD])n!W5A8
%cWV;\?@nude-`J+k`lQQg%)5aA@+eZH1N4G6.Jnp(`#j,@a>"%3,8BJ3U60@Gq*sH92s1)jR,oEUs)=#ZMbL[lA5ToQ`=?p%0Lr7
%O6a&rN,@n&1t5'0'@VIuXAX+*-0@7=IW#Z?>XI\cCo-&IdA'Z]#T.@>Cb09@/-%ba'Yt*)+f@ZJVD^_$UH<?2A5Q3l"&4j!ZeV\>
%]JTNF7=o_!nW;>lZ+G:.'bEQu)maUfDRb1C(NjeeGOIZ6S9Oq*g9J<);+3U"F3?s#EH%O"dO$SHQC2iu)N8"9Pq$WYd\qAcN<E(R
%b\'g7*>d8L$=kZY=Kat72-_OAmp<#IUZAq+%m6m>%i4V=Bb7(ADn^4QCTLs2I;HI<%P-7E=l7n5fYU<82aliCfsC(cIa&0="H(=Y
%U(`>cTkKraeF;-+'WO,C7Y>e\<h2j.Wif#,'G9dBT`#]T0Ym=<amOkVW;adF"AmI2YXZch$_]=S8i+CL]#31MM.#i`LO]p%eO09P
%B'^LZbl5$#j\D//>PGm+]Nr>gE/dZge_$Q@S/E9'gEF`Lkru-5^U#e5n$&is\?jNY#6MA60d<P@UZt89=kd0n+;2,dC@(11)nffi
%]b+ReNR1UM3[mQn1^/&QOOl*(V/JqHqA-@=0-H.WTVSCIb-'KqT5-'en(YNF[Y3h9X;-R5G]i?3l26ud+"D[W*UM@u:Kb=Z(R5&f
%AM&:$/ko9q$oGrS/7ks'YCqr$0reR%Fs:Kk"kVhD.CNGe3G3KVSKBm;:X>T#q,"]SCTDKT8IJf[WYA**bI6f4/foRFgfqdC,YQEp
%$+35V:GqJ^Ni^gH@$23@,PDbG#f,Qo,G90Xh^<hg;6=A<K^oe"iIb-pWDX(`+t45';]7'eh&+qE+pXqnUJ-C^BR&YeA_i!'l5Hpu
%ntQRAGL\1'X7n<)F@_+peP7Xui="od8E"T2"JI59,:God0$lA#Io%*-^!gM$i`b[ubp:C9YS-:?+,sSo%#DlA(Bc2Y_BA-!Wo:`(
%X5jSj)qYhY$%Ga5\?7<'an_s70<mB(+$oQ]<;-mt,q64HoHU1ILM,>@:q[j8d1;2#gnrL)m`lfpjpeSUe`W>_2d"&ij=["oPH<aj
%W-':qMFp",?q3Ke<O`E!5"Y%Gd7f^kla`a]U/CiD'l5Eg6RHs(2<VS?I?mq&n8-%i8`u5HXAK$b>hsLhnkI.ZO0)YI[b\jWTn4;*
%fcdADiWGJ\VH7*_h`b!]EW/d'[#Xq1;1l**fCkffmHC//X>Vl>WDGkPoF8BF:krM84s&[jg_.I+0*rbd>GG&<1(\BPr><[GV$V;U
%F77V&BOdBbSD)sW[I)B&*q=\$=0iVc\;m1(M68;78V8#57f`[%Jm<_GZ>(:)-$2Y_lM/CT79Cl]%mI(^P=dRh#%da-Kf-Qr@rYXB
%.\"?J]t^I\kbPN/L+"$1UFf91q[gl^eAu79O,d2:S.&Jq5M_+Sn;qFZh>jl)L0:D!9m0g;DGjO7+8S7lN%c.P[=_Zk%AMsu<Z)'7
%!;)4?Mn6hs0>m(W>I&(7lp"HWVl>D`T=&t18=mP^]Usp^B)0ED"&M_7rW=QAY!63?;H8-mC]Ykn'*^G-=).qOXUSsVpAgmE&hT0/
%KN`!J$$lA\#h4M5Ti-5XG^TYq^:;WhR>pJbj=\;5l^B[.i*h<GeEe)8fnQLM/4e"%`M7iZ;8O3dR7+X\rlOV+aHh^,WGRDApP=$[
%b#JYdYs.BlkZCr$lFJ5L7oi7LT!ko)QL$"QHWn^T3jbeAm;#db8mA/@<RSD@.0^l..\Ca6]TlTZQXY51FRSd>dcNtl,hITM=#P9r
%rZ;LN)c(Wph8T-,m'aBWqn7'QFtVY][rgdoDt!TfD]h'Rqcj>%Q)4\?BnhK@pTO=>Y3GVkb<jG090O'?Q:O"UF%!ecPA]$%1Pn@;
%p6^]^`2e^?EX+Gq)D/$J:<A1/WM8N*a`ADU?i''@'=uNuXs9<0G?%/Ham)U0IYU"$363_IfjdQWY-l1&*no].Z2,L]XM47J<hIua
%"K\P*Lk%ooFAk=aeH>meO_X=AYg_>?fcJoIq,V':f=;cYqm14T5,=rHr$6U*Ed%JcH?57/en4-0/EWtdY'oG2e7CQ-(g[KOM=V7M
%32o8nAcal2[qKS6]If5FQr=fnrK*(E,ueO:78lQBWF$#:ULDQG0REHt8l";M;#ua7B'ZUrc!4%E2,qp0LZ/rH$7drE_$L]?lSo4d
%`$WtHXUo*M%<X7SP&s_&=XE*k8eTA'q4)&RYb4*7V15n\$4p3Ge,3XM_%Gd\7ZB24W+[H8>TOtmP;(^lE<YpXq+rZC/LN,m6;8s*
%?aCR<%"fPloel_rcg/1h<A@N8p+j95<`ZrKo#CQk)ctA=)0RC5QWK,@-K.pp61JJ8H<=e:LTW\K.V2;:4kPtA\cK-Qqjd!]T;Z]/
%fg3f_V]KjP@AYSA+]s'(O>Xd/LPPN^+%MI.[h\<`E."Pe2?sN4`&*aXH/Qo[HB&t>Efg_N<Dkf_HX#^Yp$;Xu>ee"dIdnSa?i67o
%?b,.l?&<A/IW-S'U($LaQ$[CWDk<5M^+rl`$"S=)+IUB)b">J[N_Q9>QY5g2?831-LITQ2Gs$%Q%Wp6F;4nic25Q/[LYD'^iR15S
%V;R6(K&.``3;ACe87ACM+eN6;dYL6Z.7ocH@?[2*LuC5bQ7gj[BCUnnjd!N=Do(9O8LQh=H3@Yf.BRpHOXC%ZMZOH5VB^:`#,7/L
%5Mb39XII1/*S'^oW1[,Za>5!IlgjEar%<\ZNp7??g*O80KLoU]/bNGHnACA."_K1'=^=5l,cSqu6ms%n%_&8)`6PNV5IA/1IhXtO
%hjNNTF^3@`LS<kAH;a`kVS="3<&N@[jCB":\TqJA!g?>]X2RrC5qRDr=o+5tDg!&cJ>8V+7O:L%pQEqVA?YAMHPIXjhXMq%WtcB&
%R]V;%V%=%=b(_B1_h?bI8#tX9[f@Y]Rdd)64JRAH5_^JR$aBo:UIOKCi9j.5gddi^d0b.)4B`O+2\R9d8@H]IXejQs-/;jBSl$Ln
%H"#hFpI1&U.@F>9ri?Gj/fL!%/('_:-)1]X,oQ$5N8l#ta!qr'28Mh#2=GodXUf/i@5(;PTS!:#'lK*riCIEt3ZXHginXgt^WH?e
%kMUbnWBs7Q9AoeU&YrDsNLY=uX*JR)7_AEQc%a7I[t1'D%,,ls[Lp$)YJ51`VG*1&.RX@O?Nj4I\@&'nihldqZMGSrfc$$P@9-#\
%7'Fa6$0BOsYopiq-0NuVP"(0N$QFWm6#&M6+Ob!;EDn;?`j=qm1$5gbJ`=;ZS+D4EiM';Z2TX@DY%fS8Q9lk.540755);SY>C(g*
%;gV$'%]e&U<MT>r5+A#hQXqh.7aJj.m6&cCU,'(8RJ57=WtRT7M4YOOX$\Od2@9i8qthfIM>k^U9D%XGE,gP_*c4i#EfKrmO$^3?
%D`pXd?)BnSZB-H$iM"R\:)"]cId[V8"e(7VMMea-![$X?F`_.US<&!-Sp9*"*?M8/AWCX7DPY_!06H[;8\S)n4n_h\GKl4[75X$D
%hK?M30,[hk[nI86A7\H@/Keh..;fA[cmPtj^npUtclQj,2tG\b9R4L&QUX6sa00fQhPrn3D0@ZC5kD%VnB<e%D0WFXhg(J2OprmF
%>NsC/Q\g/5Ge3\8d`^]Sl8>JPV'/Q^/?`P`8b5-nQ-.c[F1&_3[UXL#W&/?3nf/9G#)GrO\":5W&NkoAa<@^W-<5P+@Urk*`BgD$
%oRSV1giU^)bc4E.ZSot,#_YfMKc-GS]3<?pW_`eR%Zg7*omV\GYT`RA<T7(BRS(ilo%E!<ajPPQBVa3BK1@ZajB]o[6Xg'sc]VUg
%I%B5UD+N[i?A.jF<mgae2iUjY9k=>M)04E4VP;@+P!<o7$J+ca=!\ad1]qD.mGQLDiA:m3iKsi3S-?P.H'-UAP4[;/19/D?m-"Qd
%e`LuT[EhI-S^&2mN(*+gqIG>C=sJ_^rQU*GAi/]+<<d`Gl"(K>b#"8(_PSe)<7L4d(S*32T9FWFe_"b6q%/4^W5PGLLrk-a1SmlO
%Q8(ph:t9PSP!DToITX;I.G[U[8iGm9$:e)R-'7_hoi+^EU&Xa/Pm[PrR1e@:GKJQak!ol.oni@]WDnp`k',dLMBGB7,p\=,^m_!k
%4u5-A7*57uJd0*5G->B1oVUc1Xs003RC_(J"l@rd4&uQi$G!NoQ*#J=W"m\/H-j+3oKK]-J`WA7bYZ;q=\7sZRp3KPU)'SAH2nk?
%9gc5j[9[tneY.;l:D$jTf0)dt(DQ6dS%=eneS,+T"B_b7KAcHpO?VqK`2F]PL3gTSl>oM%Q_E\A?+P+eDh^n63^dUM57h-]Wg*d6
%'Yr37EMJX,M-MMaTO.>bO[AfjM.68Ns4b?k`0r6=PX]I2S+)d\KZ%kglG\d&Dn_hXU/B7O2C2uG?8aH7fMhFD,((k4B\^bb^i9ic
%ZJ]hReb.Cd%&;eC1>*'>9`/i*C(:"/kCCUfO8aQPSIC%W2LEtB$0u&RH(.56$n)9@"Es<+%.[o3eTR]/.!7#?*]OVi1*,kIC?&(o
%?770obJPXPc"s`17T2V)aYUu3.WfpKjA(h4*JZEK*(gI^\,a3*%KkSSCAhpF%cHGu"##C'3sY%B;G0hHdhf2DZi2oBTT`KVmLMQH
%RL>pgnrc174?$?0Ird#`d7l@o\3:d1folOD<Du9^%$-c8n,EnWqYud!Ok\jVm3p_^SntdQ)dX%?mI9s9WU*L3%bY,8bq#$*Q)Zc2
%J+ZQA].]Z>[(UM7Hb"KO;)hPV'a7:M?'dAA3NHD)ptp`drep3,j(Mc=0/]QG!eu;3iJVH)'Uh[r%Tk3+Rlf1n;0AVG8WDO$;8E(m
%WYpU_<H1U1=BN4dJld@c&/IUIPRXRfc6-N?PN1%mM,)<n8Y,K%'sdnL<Ltr5:Ei@im!I>#d/?J+FYK()^gq,P%6-k'nuCD1%Pmga
%U[t7JIZ%e3</\nAX&.#&<c[(t5(`V3$)(i:U=o'aQ1!bZ<kA8V`cc1i-ai:`(/2!rTe30:EJeI!7,"3+j/I>EZLgc?#8]G#:B@Hh
%'scsgbI?qb2BZsiX=i2!I4D62V:_ErhD2Nt]t,BMhI]n28.So/*[%N)K.=KB?"$AY!bD?WT`jP%iKkL*9U%u/aGgWGXB9kDS:'r-
%Vj*iTO6VZiSD;Zq"3F(_So1]][SKt/.O[Y_<Zl6aWAH8?Ape`p\)RDTDGO\f;S27pghDTC1]d$+AUkS]6:!Lt`PE=$^up7+K"Eqp
%U.aJ>U]C?gSY@$O0e=]#!XE(2':$`sfs$nINPfM0fcUEG$H`LgUJ7>2ZMKD8@G]S<'Z2@Rathc>OO_l=\]'d]ZU>2qltJP]#s=3L
%X(QU\<sq?>Fhf7'%b61ML+b#u?IZnH/;2S&lCZ2^=]CGf).laE[2g>-Y)hYGe5]Vn9D^Hr]]9G,SqH=:J1U!^6YoO-Gs?1(\8i6[
%cOMDNr"*86.bcc\:=TLrS8>t*$P$o;Y%j*g2IJ3L496dRl"@):iWo5Q:nLLH-$Z!%+=b`N0RV!#]lApT6>Vn&itKT20LQ8imMo5h
%8)W^3?9*^XOL;-)UFm9\D-*T'?X9tV*BKur/Dcg4?dOlQ/*uRQPb3`Z+R.:KI(lG'?geA@!F(6N@8s@&"Gla-gD#Sh8QR;V0:B$U
%BUPTd$5i'oV_hMgASf_f;D(;+TX6NNm+t"mLM$8m.M*gu&T?0Fg$TLN,<-"a<(5T_KC`brJ<E[$4!eF`bg8l8b[+8#>\QfQDAC,8
%Ai\Kicdi=u'tojX"R^Q:Sj%IXnC^k=oXJTukJ#`Y/<bh(_VOh"38;MZ)>"sm;I5,r]>#&h%/uP]8V%J7:/pKOY\(Ad#C]hWjK*Y>
%%IBIT.EM'(1G[HRN7si&US4Et$m77XbiZpUL=/^#(o1UTbQh2.'i8b6K!LJr3d-sh=M1K7b,Pu;MdPt3dUY>:E&2Y9.6iMbE5@f_
%9&4!)9G_"Bf(c6W+q>I>*;:JJMs&dd<t7]R!C4YO'1r+`5q3hM0gHg8P#TXEoGV!/c1s/0LgEBbB;&/5?C$L1<2b=;e1:l0bhTJ%
%W/0@>e=@'V5;l5c=dHA%;I1&u=!!\L`1B:m,mZsT%qrHYgEZsF09N8UOU-G?d$2XtAFF*8$G.=$5XjOD$FJdudg6&)6cIY(cI\O_
%%KBLlP3hM#L!@7Aq,A#6qQ,pb(p[>#1+%r`StQtVU4REA50`fd:)*@%!"0iro'hU:T;h0`e'AdEZr545WWaqe^aO5<o&hoa#%b=G
%>+ig:7b$.B(cZ*B256,1W%BEho>+,<G6[<9TZ^'o9uo7+V-kPq;(CD$QG,O!'j2c9iVW]p,3fF(r@jtW0\A4$chZLn*`dAN:ml#e
%3)<!N,!\7k`=Hd\LKU#a"&hXCBcnMW]ZAd$M$sSl@'>3.*DG=f<eFL0$q:YtHd9;u"BKFsbTVl4^i-1q:fe#u>pS`P+FE)F_p]#3
%,kNEA6b>WRli_s%6jSY^f-Uge<S\RA54f1^`1oP4E]\fX*^7)rQM:+FLAtR8rfNG8h+EY3%kfePlfggZpGsT'XTQ8!\R6.Dl*;b@
%]r`!Lj;am])+_]+ZW5*H.9[,I:Y?%.M1gaQhIlCR7;c'H;N"-hC9r+U;n;\e+!HU&l,dG<[\0Z(\btQ5&-0C>B1?&4[c9d'US-RG
%dsbu*ergVf<gOH#kBp!^f-jp#PPRL?:JWr`3WhgI4UYl(irLep>LJVB,VP<imSkn%^eNFQ,lnt1+geMUat7?1Z0i=$W\>2f;8MZX
%6_Sg<4N6s[@"MR%[7QJ1,n+nX9c^W=gko66]=FAqBcSDB`^@s9$CC@uJGUSd?r=1>=BCVd/hGjUqYSY-E0:KC%DQi0mc\<B1kf1J
%IbF:NInD28[?<sYf-g)g<F(Aq#a?pc0]dJ1C:IdEmMs9kP.uH`H`+JO#!;I_6WO$E[mR&t@brL/mHrP4Tc:-Q0[M_;Ml^M_YU+Dt
%PeN$Kr-]CuCoO.rFBbM;%t[JL//_;HlWqB`-1II@Y^9Z!Y1;t%gYUBUhhMf')e=3Bl,E74*o&$4GD*pu-e@T]AOlH1L"(<)Gfi'A
%ABts0D%8#=V0eEU9o-bR(H^rP2pop^2o31?dujq@9r?^IaXGKs1al6V-\`#Q>:MZrMeQ1bPc<%rOb)o/c6&H<Z(9AH+"U"On(D\h
%cEt.K$St[LpVn?])'kB9:G6%6RuE&#<rMIOo]P@D?fblI2KScPW;-48k9e\I'n"DE@lnMDnB_?HY"moGM`bu9Br,q#(_1CCNG=#B
%=$jU3067N(Dr5/b2`$ra\!c#4j/o=dB+*6hh'QD4Kq_*>DO5K_SVS8<%BGr:"gs%sA@1XrOL&AkcOM,Q-0oE;NOccGRl*<3ZG*oc
%\N_S1X=eQRq<+cC<K7Z+i[4Q&Zi2Rf(!2Ae:RI7aQ36H`\e0#.fCs'eVjj+MWj`34K82;Y]m,-t#Y'$?/-3fuh,`<gk1K1kdS6ji
%-:mDd2uI=H&G<@^ca>k=WTdEVkVlBZVMeuQ_On:Li*g)_$t%]T+B/<\R<.H5\Nc(a.\BB+d-(Qb98E+uYq`&ARZa?7[@F(Nr[lBQ
%mP1HEdIZE3[[%[^TAr<8C<#6PSjmr(:o^S&L4\[EfmcfaH0^ofgJjHOM[r@\g.:a6`"7GJ7CmEiVnMK1[c9G"o>,^u$L&DqXjRG'
%EDZYTIJ*V9pXOEVYY'Kt11VV@2Ss-2?O[D*'Z7&4K3Z^%.7"8-ie2V>o)5qX+L/F]mV8HG<#@Kr1]-Y"jUX-Ae=\P,7#?$U(1C-H
%CL<fP"ja>jg6#f/M?q>(N'VCu\#>#`jZ1g6CX:i8aHV`P-!K'MY5%7g%2L<g)B))KD%5OBp]R@\Vjg$om0N[1f[iL'HEo&H>pFk/
%O_e^qHuEco^-BLh8ubhX5C,dFP>l!5"s2SZU]RSM*SOtfX\I2holMIG?lYE5/,M*0kNfahg#:1jchD$pmua4>SiOHk.lXp"FTZdJ
%/6DOS[2Q2bg%AY,XRLU]C:c*>!_!0I3HuQ_$B'tiiLdNYhtSDG26'+2opQHtYmig%,r_!5^q+\V@Xdd_5lb0Z/sBl-3MM7!fK'W[
%UhkuiUMY*E&k!#KOX:84Ya,2TaaL_YBU5I<d6[>!EkX`BhA@Fhh4Y1$LM53g\Z1r0Jn'/*l&44cTf[A<ITG82OW:rcY1n^o6c6`,
%A-5m,$dn^tPqG)VWPr,<Jp)&8O(K7Yo-#+q0BCVp8!aW1",J:hN!Qu685r=M3n&H!igC#fhRK\eJS6K=.7=V4er`:=.qRg_1OtY(
%\hC^S_*UH`;bES\JE9j<U&fZS]Z^!SVrG:UaFcLO.YeGD_G#*llCtPGmsDt#X1.=^'\]pGH@+dSOigC82g:SUe15ils+`h;a&IHW
%qhHD-C&c>8@%u.+Sh"V0b+qmZ'@Q6F7Qs>c2k1K'`q3h9.Nei(]7rT?B`#J#Ajiu.cKs6j?@>3:@orLOdrtW(Lc6J%'m2t?A[Q]<
%ILhW(#%]p9U>?kWG<f0Mju(A:CRAbJ[<!_EY0,`A?\Jo@3h7%^`"imCHKd*N=.*>^;*eca:sqaKDK0cU8ni8L9jGGfj.WYbe310S
%7'Cbd@SpA)/;#><Dn<*B;"%XN.EfP3P&#Tb/)T_8`q:C=lhAb7pW5KkT;lZ_?(!-eZp5Q1rq#JLZ:J2to$,n>QJ,+Lon^=qJU,[/
%MK1\SH$Ec.mEqP5hO7q\]t$N%!^/Ri4h5Q`=uECT@[512P$'5$e4IMhAdp*dL(bU+;3\Gap+UchDI<1u>89hnLn'b\L(Zn/`bO5L
%p5:Hm$Fh<[<!QB>nuEd]UZ_Hik,s=Z?(^h8;-+\tO9hR!_Vo*R=oG/U4^K9nY+D?Ph3#BR*pIre>"k/3bpm-m<JqUUOrZ;kZ_EZ@
%AtCqij!;&8fij"#`^mb#K[Q\W.QJ8YCJ?+$?lshmn<$"5A1P=C,cWjZ-diSKpm@AN)L%$UG$KZoJP<<T%9-E/bnP3rp[O^Y"jspk
%-I4rmVVHRBf3)Y'U=#,>/21`-9`*:"85`21KjmR-bhC$CBofD2(+SK(5G9Y"N/)(\BPL=\?ChOG7iA5Sn;Yo@ldbV&n2"&^H7CFG
%:R"1.9q-iKZZoV>F<eD>5?>p,`S`gW.28*>b`\`[,^m\^eoeJ-X=nI8X(X)FDhOZ!3[]3@8V]a&@nE5?'ZFZ=AKp\Zhaj\EDR0\5
%R#Z4+?UMA=$84#OqVT0F%=N`6QgCZVctM6\'^[$Agd$TNlcQ`"GcJP,[<@aqM7&6Vb>A972$4+Rd?YfF`dB0AQVFSsXL:ffcJf&(
%@VpKb$9J>ApGkN^V(NIS1(&UBW7VgeE%j#cq,XjOScP*L>d10B90Nq7\+t+qiNf84Fakmh=7h*_"K]s2>niEEP&-fg6it0ZS&dUF
%50(87LAS0h9AcRX)iMlr8>.m;>Lc/DPabtJU$p((SK0F5AX2D)ZR1m$'<f(8T\J'tAq5NVY10ErnlU+ZDBtXk'Z3.8mqe1VGW7/G
%a$B+M7$WC%E@n1\;sg.WE@3Uho`J!c2;pm\]_ruW>>NcfT]gVV'tbAsPbM_SJ)a<RlSEt#=NHQ>AW#R..Rlfe"%=#N)R'-:<<H9u
%Y',5,7!UKIVUOA&.R[/LW/^E&(Gu5-A8MU4:()0r8bCeFk:]OfFD5(HO*`D/E$LS$G5^u%8/8a9QNN$rD4_>IM'A1C\9q]*,$Sa<
%FVkC7VOOo4%:U"Q&I5EI2Qs%h%5lE4.CBKV'K-o9,O5OMZ:"5b1H!7#V7r)%%_42,Y:XLG(a\_0N%:+tebS$Z(+`F]^gEAD/61P7
%;j<(M7$#9B<5!`R617_EGeij&l51,NUpclB"Z]-7H:K'^)6=@KCe@WtIWNN0kU<8l5llT@/?0qg#,uH&n"uV"`Nths_"B+^RSkN;
%9]]F=,R6!2&LYo-eZ4[Q$pqC@)(KjNYIL*-oeZnI*R1/uO#M7W?r:f)D$/@8n,Xbb<RkZ@Pj/O)f&qbp!$A/@6T0#WOcE.2R3"#h
%e&.jp-$f*?l5,VFKj/9t4u-K;.I0C0OLaTU2*GKsjlN!g<QPD@%AhB3ou\&CY[875?F`F>GjCW_m]V47B_5_6iJ=-XW$`5V.'Qnl
%cON32Bo2K5,jn"5o\pfs4@uo\$f*qJ`O2eMqMj1SeW,o8>TP`k?W""^O_*ncl^"A4.Yjml9V.B0&&n5jJ1a@aUcm3GJ'J]QaRV("
%(&:l$&jWiaS>%7ho3-r646,W.qK0J4#rT"=XhFW!9":kB$WfRSJAU[dS%s-$$(1]Y=/Q^WS.qqLkp96=Y09"bTWWb83O*IU\1-F0
%os69kIfM5*:Lljg*tm,(BDlrfee.p)lHuu/SA[Pr-K%3t;u1;u:A^;cJp5eCH2pHePH5.0!E'L/OWCF1iE_[0*bUpR;Um/sf<j69
%;$(6hRjpD:Wo.%loZ>X:Y1c!A%+IIgRU,Olm[gIs413/)^doPq<aE1KU:X>*TA"3+-Rd/o#A]tF.1V@Mcm_$;3LFns&LSpD8bH+a
%KD$]`U7)a+Qt?6#`47,XJE,5G6DcmB2A<t6?>Ij".jY?"*`pMN$4)b+")sD(L[YkU*$UnUF9*\1mK_QbPn>NeY1e7VNf(i>W:E?X
%6LZ*IcK*ZLBW,PZq1]SW9!]+,:`!J#0P)3h<cYDBVK2F\"fjqbPol"EoSsZe$bg_$9L7]1rtJ<QdC0"KnEMbJSZ0:TpUtldN''.f
%FqfC%.2%mqZM2L"otN!n>Lh<t%^I4Gj"Qh=)i>!X_0/HaH@]+ulG]78W2@cf<R=m8*ea&S?W!HiH31pLW'\+2i8>jRS,gKP3r)')
%TPbM^S9hTdo+XuFAQ@1u%-S[V6(YJ')q?SgAco!'E4nYj3+=I5W$WKrK?]j7[I1:0;UuPX$;(lSlK"r<Uu#&&mL_&#;>hmh<]pME
%pHk/,Mdo+R?XEDeEVl0CJff57ePF]$fu"/-XZG"25Z6T3_p=$O(j>K:\V]Q7[q/,%S\)`d'Nto[R6:7V<)biW1e2&M9raZIa1;%9
%<hSLtR?=^#Hn8Pm&]piM(TN*$dq^s=?D>LL=4_,Em]ZDbRkD2J=*eV$:tn=P=q@UbM.;8QR)gF&;rBCAf+g]S>K?M?a`2C1<L^uf
%d&_%Y_'U;o"ca$GERneZo4_?Kd[++KM+\OkG$Vlb<Lq6HKUSAgY:B7>VsqE##qN05\BRiJ,V>/KK6B\^-2_0iZa52P:N(R)bf$k\
%p3p0n1?+\,H@s)g/,)V%VNSrM"V0]ootM\%B7rF.>1]Mrd,lotP\"!!Hm!!%YaPSNW6;<FF"tk#.c.J'<2X?nVG2RH=X[i]QAZ[^
%b#lDnS\&7n>BgV*oGZfV?A$d]EfdE[1ek/AI2ho!Ut'7bDeD4$)!=L<ksc,2Yc>OuTEb-0e_p(:eDRo8K<K"*n?bA:-ko0VL>j2Z
%J!KAnV+L%tTmi:`V9G74!*WJI\]ZN7V`>>X/]i(hV(I\f=TF>k]!tRFn=]redRi7H_1:dD;`+n<c^">1\u(i7"X@gXQB^M@puGTN
%(ME1`I',%MeYc5t"Y2@\PKt\00A&-NmRs=cWbt"&e]kHu2tK>k]V]OP.M.Y?hsB5ehopP3L%@i]d'`9M5IW_4!p]/jP<2:[V>_cl
%.0<76[JcKW*l]cdKP]YJ%E&%@.mBZSlI%;F7,(U94;:D$BqCB#ZD(!f=ei1&9M2.Rf%n5FLK3=&EU#Lq@Y=Uo-hRLDGLi_2qicF^
%W1s9YKsm6FEG=*ZmqUO7YH_od`j/1ncEaEVA(e4pbNAd^^9ZQ$-cp-C[^2sFHbVS7m31>*f%3K&6T'4dV=o=riBBc=TP$hn,Ns[6
%Enp^&?Xj+Ni0u<kPNrF7/;/Mh!93DGOoZ7mDDZmlV#f)K)*h<p2d&E1dK7k[Y#ms<p%.hl&Bun((%[L?or&cX.[F+(5=RJ0-;gG)
%nMpbh*,[R`P&nUSX^WRc>Z(gI'.EbC2&@pZ;[J>*:6-jgRX@9rrEnikR`Pn,cDp;##A=LZTg5TS5W-UoDicMS!H_U8m>8(g=a+-k
%mRkaiZ?7C?pLSG9Kpc2HEU7inmGDJq4-"[F_j+3'd`8q6H]Xs;f+DL>3(K<W3MORD<\!q"(ViGg)6@<t'C&,B>'7n(l3OtBWpMe_
%='rcR(q.jd_eVcgZ@=_nU.WItl7sl+Y(Kk=R3Bh@j7%-ARO`RFHGn7NH'$=OFk5PQpJs[u>N51*A#0Wg6_'9E%[O)TX4*"T_,.S)
%"s]crQ`6RAiJ5gr[AM(?,8D_./^H@K_0T&\oamG(cANGgCIRfH_O/:?5koJ?S5$_o;;P$m^XNc/2$(ea6!8Cgd3KZE=16tP-$@bL
%H8)J%nr:Z>M;)(6L1"9ZBoGQL5!m`e6mRR#RJLmC=CMra'U_s<PJ\)3b*;H8jDN0!4](kmXK?G\9I)R<!d]AJ7Zfug3nna1\/G%S
%GSkhmhqGu0ng!`[KQ$$^M#ZLD\E74uhpK>\?h2oheT;!XfJiueF9^fiDrD*9TDs)[JGcXs!-dL03Wn.LETmjmG':h@i0fogif8<h
%h"POW,3X%V.+1\4?uO?kf2pmqr5bNtc>7nEa]FS6WbejE)V)\F.pCFo05F?>4;isc)ZKtMZhcaaAb]6q1M;,S3Xhu'*Q^GYj!S/2
%*3=d0TS1^\Usq`#9bY'u.Wm0QK&_0:=4Fs&j,r`X,?qpB7lF`KaJS3ac/6>\4-R4hUI3VSk3F"m6%.'!AgN`]l5[m<olbWIL(S?+
%oc?>YZ]Zpj*='D$E[*]W<cS(9XWEcu$T6U6XI?mbUH55c5kgbQ6t+5;Z!lPMeP?YrY9qk_MCP@G<>Hjg1=S%(O5;g^@WQD[ma`UL
%%c`aW"JPu6Rfo\.8!#jL%$1j:J&+OO,7^Bfh0/UogTE'@5eXts1%$Z@KW=%R,LKe^nBk4Af*s7:Da4Lp6S[^g6)LB-UlrW)T_^`W
%.X3_6oPJ(+$j[rMC1X7o*E59-dRp((<l)$SfF82";jF>J$&p^#\(QN-'adp_MD])(Muh7e<aVW&VK`9?7q"l_U>o-V?VlOELFbrT
%n1Udj4ek.A@KP*geQkZV&,etmB-k]T?Q?puVFQ;jf%>DDE=7!b[/`#T=%ckO/r2'F1moc0lftd'[2V6VK87>hQ#FSceOP?aC(H"g
%C(CD:b1GTC@0_hBYJZLV[t,e&96d910B&&9MFT-0O-Ct48_rP'*T]nPs"D25jm./ep7:\DIH$CSFZ`RY_'A&WGbk&:^lcVq_i_ep
%_3&of8H$/pOfFRW1fg?!1<[tF)JF(C!4r"`qP&$O=G[Y#GmL#j]l3,9_E`W$!BD;324<kYj2j('[=^a`;ru80N^m<mqX"aKEMp=f
%f$%1\Q]3l:[Ff[4qlTh3ob$Q%'"/j:NE9T@H*R$^D#GK'hNHlT!:-"X7.Nq0_&%`Y/f`8r))<'I%mZlRlMas,;*VUK,=8u;eH(3&
%dD<(@'-U>P>/0_r>k:m14W4,,O,[LWlT<dBZ.r0Bo24TW"fa\X(ureQ1jUBj8f<?5c.RoZ'0iaCHf/5+hst.i#$]Ilc^kR_?=N@(
%+/E1=H-75"6C,+NSrdQeSDXn%YA2.61Q#-:D^T9EVF%CqluU/-]+iV-Wo([i*t2LpqFJ4EYUo?$UL)@CQa.A7/oP=;e+[PGYEE4o
%*lE6WQfb.']+,>^1.T(7TG`jDXT*h^(6s_g5"GrKP$ICi@K;2O^(>427pe=mE-`BLq!*3M5D>U<],Q5!VA%b`lum-u'AOZ$Q5FMl
%P4'nQk_9hHfZ9ft8;SCtl<lET@l/XS)BBr:TV4c+RL=ULK-R"_<W^`],`eXkd3.N4(#HIPgW-dqfZo/o3Iq<D1^@m*RW,91"_EF+
%R)^FB:qH2V?_+uEMYgW3.HcuZm2`e2V+p!;Oq<]<dM#=d`OZQk_a"Z5n;K'3N:]P8B)MGbj5R^q?&2N?MeDdY<iPi&M2Dt#;Ml/N
%\sP)9H:;o!hhBP#7/XcDbr98F*K,^oEUg7lOQLh2lCmF?%t(<M%<mnY`P@knH)5Nn&m_B7g3kP2[.L?hat^`JR[0Zfh<SG=%ClD;
%q>KWOgJ6tdX2qC/d0hlIXDW(14GBMmd?OAPI:"ug=Y1C%,qXjF@FS_2GESD:R;Q=c-0/MC.`F_m25N&?XRNl)HB>,3&Cl!G":SOd
%TSL2-'l%d[4JkFn&j=h>9$(gMnG(+EL!f&sLo!WQCT%?P`7g][VBg+<O_+6pOD5Q6b-.bm3.pJ'VFhk.8-tk(MH*`f@X7\E'+5IK
%8S2Tq;2(FWZRF:A%on/QFZ2AaolVI8JCD@gm)Imrll?"Z4>nI<T%g.`8q'oD5s)R6!]XPGRl*u2SI$pET1?2Y39Q/$S,*XMGYs*P
%fn4Q$#">UM\78>MP,AD6d"=B<7c2Wd\lr7K#%M)de7YjWD(9-7%E;#21aX7\'\0ig:#E/Lgq15i"h8ua;Ai'%i;41,B!LsM$,I^l
%G]kHEELmX]FBu^^kOC+82t$[)biAP`f3c5cq62D#FVJ-<A^/dD=I8pBIg!X:DQo"3WEXE9;E0KFFQmIs*3-.J]bIJa5`mOdKGX1N
%;:9p((%+=XiXlOf-P^=%.qoDY24%u1)JAT1m^>;hJUTHjpJQs6!Qr&[jYZLjdsMh(C#=NiTZ;EnUQN[m%?*cJAU/JQq+S<@BCZ<e
%nsT,-I&;99T@qT5F\:AN)eDo>R#K%VP!>pjFe+'Fo<0j:1`9$"b%Sk)C<g<h-E2MuPH2%$BjLT%5_Lp*EJMfo]VZP#*7[RkPXY9+
%A>93Or'FNc4I8P`XWsgf,Na\W&S?-p]h[eK<r[F*REIQe<Ql))5D!W@"2tm8'1c*Mlk`osgnmDJ)C:pbcT[[_o0QNfHR:gcnnd20
%VWDJu4>s3/UVp)FpR*"H6^]P-Z=*$\MCq0a!Vo%FE&p"/.NZ3U'dSB>G\(T=U;j-;\#7EOMO3(=Wg3:*+d>Mre/QF[d:0Cs<M'e<
%(r9=R`-%BK4#E`oP@#L_(u"J.23i`f]*[?_c1YFZ4:,)YjOTEKT`F,j6))rSC-T<Y$rct?APou1CKfeBqKIY$B<nN1*`l5M4nNi2
%'9Lm4n"eN7+^.%"!E2K/6_!aT8"9Q@We1JY,E2N$.kb/D6sL.j)bod2<<WKo%C:b-:T@Th]l'rU^s^Rj'ns\./juY%J58e!''c)!
%O,QPN&6#E2/g<Hd,8"Io*`o78Z;Ki7WZo(&,MVf]a)Fstf*h[a(ie^!YZOS<])qV[[rVrFqh_WeNGTZDIs._r$V%0Der;]4r1S$_
%\B%F1PsnM1)QD+q>2SGE$RS^"5L@,1GA4m"ZV%FR)JC_$MAQDQ9lqr=5"?TkoE:5,0T[=[Jc]"lUW.&5>t.S]\%8ri,a'j.RkT3Z
%-J(uVT"m,db"j63.^KA\C<<Ws2'Th%_-9;CR'!7"RT4A%k$C\ab*V'>19(B\s(hcqZ%=hXDkmDVO1oo_P.#E@^gBp8MmU[d?8rE`
%'uABf)B%(o8dJ)q*aPt=r.S<<ps-O$G"n;)6e%N<l\_K4a.h9'e!W=s/eBG;0t^XF587/DBSF$UKo_l[GQDO_g20BGdW>R>E'gI#
%Su#GZC_j4:TdPVK'fSBpSnWZ1KU;CU%r'&0K\FdQJ]\%"dMIs)W,F_@Jo5s-^do2k#d\/Q$PSU?\X)kJVjiW(_W>f7l@BV4s&]/b
%QZC_*]u;u3?r:DTa=\M[bEQsKUQeEuPm'5d4PJ2?!&<.s]1HU]Q6]W3%^\G#1]5C%;]8_c?SRu)b;J#b$YnN)0:Ud(_1LG!W6X8F
%Rc'a;<\UW=]qpBeN[iE*\M7F^RNqu?"^Ss>+l%e:S'_3G%\prt$MCf`.A`+s<eV9B\A/5[J,l%.h."E7'+U*d0n+fk1nPL@hA6d6
%TWk!PLRmNc%cRe/G\:UaEnAEXnC*9uOt&6@FXL9j]GhlY-f>o+<]X;2(-SjnNE*C:#s-KGW[iWge[H4i`"mnHPnk:7qR3u<<YZ)+
%AAHNaoQaM,dRUlHF>m[fHu4)n?)EG$Tf3hIAOI"+#uq.G=gI?%eFZ.7:T+]Mcb1sb[d>>7mtRSs_-g42kCIi#%A&j'N`.n9*i#*d
%@Yr.#@,R9eLo[J,rk,`;hR//B246=,b=O][_JWk*[I[="2k"9gVF*L0B=MJC;Fcf4)/kNj$=SF<1/)fOo4E"3oE\VQ;=6nK>fhU0
%B%,JO-n6CR273^0f':^!ki^gjf@NH5S.t6S37RZKQXFVE0.T$%=amN;:##F0V#R$%]AD*,kbWs8Z<*!C<)iS33uDeG\K>=e9m;Uj
%"!`-s<B`03,Us:1%BAZDLS@c1M*Z_i]u6[AICqWB)h$[.VY^(gT7$4tK+Hg'q=+!"huDnm:VJsU:X$B@meMoW'\>KhGWC'._]Sm9
%PSW-*a5OenAaP_93;ubD&%uCE-1_*TL3m8&^$0oe-6uq^n\W7hGl8"Wp\LY54+=a:beES`%tF)4GFlA<q3SQT](kik:Hs.!oD`t(
%F,_1NS36E3T76UV%k^'Er-d=pVtofYS+=cF5Buq_Qeq]3o8ilhIWY/Uq5rQPH>_stpHSWSJcE2,r#O+T4FZVp:Z)'-SQiiHn(8WZ
%o]?,Lpk*cC5J6uSs)EdGrPOK2Y<T:7DTb-i?YDUN]Y=R;\Ba:>gD^%1eAYoo8#+!LM>uJfTt#&YFM2b,?/*Q5F+q*4m<j+QpC:LH
%,o:#T27[-L^QNbp!nDg,(J9M31OW,g_Wn?WRa.72`fpl-W0U#\Le!)YQ?bItetG/5TXjru??@DP\s'ko<FpA36jYT:+\"s9&u.*$
%$/^3ef>Fdt6i[<[l.VZY2f.V5\4$)Ro-pK+dGq]"6K\2Q4Q@_=fP-_=Oj"CETd\ec^49A8PbaDDihl,`fFg4#JU<X_+l#Xa/$JBO
%Q,?l'6#O;?KhHr$&nYh44K@I,_BK'o^UO*sFlqb1$=MQ3=R9h,hS,0:j^.i*mU"?P3N]\sL0*>MrK%iO>lCKFB2M%+TXo?EfVl3%
%<q;L/$@?tE[IYpZ/tJd0XNjOETHS]E'M%C/Co:6QSo)BKc/hfpd.XO2O)Cl)Z\\S1mVL(lk$;?Gq;G;riDcT0s6iW5ks-iBWI2%l
%__/qsNeIi=BAmnF5S%dr5,OP>&q`epg@"`W\m4:cGi5UFN/qH3JAPm==Di0F\)Wa!ds6!p=MFr"5YJq4OBnpPC_V9OIcm?K\1SrG
%C/d$NMen*sN\uuH=%95'g?X<\qATRZg^IXIde`=o9;GTn*LYf.6QiCBE1b7o*K098O/A=65NGF!;/>jeoo+Ja^S%rrf;YhNp:8L>
%KuWb]0[#]5.eb2tbm9cFbo'iq$.pF:*L2kh7tiSeXL"H8Y(D20WEptZ8[>^gr,&,@*ED<THI#*p=gu^`^3kO[cA..$S2D#49^NE3
%=`s?WTt_pgDneIBP:PBL$W>2>\qFbf-s1Sab+0Jl<L!R18".`92dOB+F@/[g?XlZ)CJsqFe,cC4br8UWj^TLCIe+l!rs6h9(e*p^
%B3YJZ@o/Qdd;p"QpXWp0&:7(,TA0D#hRiF4Ot9[\Eru7M3T71LiG\IaqOdut-pS[V"DT2e*8O6okTg=p3.h.Ci`jTRkK]%-e+N(i
%T^UrBqMEk`:NLk6>B]VM=*A5&,!_mMkoD^J9#%hF1FrG)<IBROR"Yhc&So*s^&$5gCe$Y6r]$G4XN?\G4HOgnG`&-MrBa<&'_p%d
%J+pF0Z)?J\Gs6F+4/p*N"<7NnRr;%bm0#[bq+V#iC"O`?Ic2FGa&[]DA,,Jfc&\&XXdJo,AkW,7MOV[s6EB)u)Uaur%(IUU5EC&n
%U\aSM`IhKC/WN&uq3]ZeWd?t2n_8CohtQ*4UR)R@nMibWG)Z%1U0JN&1<X$BqtJQ_jSVV'aLU4lBhV./)Q#)0a[u;CWgsBu>fe\W
%gI"cQKCak3)QIgQdu#ELOpepPc)h.8;2>]'EWRa)XPm_-G's:NP_C2[9;^X)n4M]QdW`ZB3o-#CM+,@BVW<%o#MY.)P56HW5^pHE
%9GgKa@BrrIX)f/]00Ug.`sh6dRTtG8X[_%p=ZP_-5FaV:N)o]hOuI0<2:TOX4I3EF8os-$5W',3C>a"f/Yl@bO3caOVMF31_+o39
%X'QK-*l6HI.Z&&CZUJVO$)d7:+Q>qdKVZ\[5&b_\\oA%Q,oeRC/=;cZZp8oBX'8IPiEOpToc`,f)t#40[!&r8Gu5/8PDuV]Cpo6A
%oaGLsdKUo5d`">mH,L+$X?g^*SJ&)YrA[3q0P[0]rC0:T$Dn+E2SBTC0<f2o.@,(cIRL]a'Ef1c+TQsCSB<8%V:;?YiF)ER,sYc%
%mYu+64kO2%Vq3Q^W;PctSs`M_/,hlWH`sG=HH`BE-YPONmgnDq_qTD-h#rgMD\)r9%AV4fHg:soO+m6d?Z(V1kM\1`f4Z1fqtSt9
%g_;L4Vg,FRJ/&lb.W0Qo_Lafg24SUmTeI'qLp(4'0/5T'3Lqu:H$[UD\)KNERuLYuR_"+0Wf,P'rH&[UZ[K/,[u9u>b:/36GZO&B
%iLZ@`jM<,$d_l5VLS8(Rg(>SOpMa!Tg@IKC`,B#DU9#WFC1WR<43j_2oIci]Lig)GJQ`ICa)g'pms5+.,Ua+@:8RZ!FJMC^(0Zd1
%U+`Dfa6CG&n2+ZJ=\Ua_W&6E7Fh"O%boCPN0`j;rEgFVW*^ZfN(K*D=o;^2[:DY)Km.$(kEXLI>rE#<JOIbOf.mD<DC[A,7%dE)E
%#7S]CNJ]k=9r#FZOX8u',ljS\;u5-&#%<;V,Tog/T+GZTEQb_Fq*c`64a5BnbCh1\XS,hmj]LXud(-9`8j,Jt7GN9Op4*A5B'T*3
%]8S!,U604rH0;I%*3>pS*"YH"=r'K#N_iMu$MID0`4E.`@SS81H1&hLE)@<=)1IbllCL,spgc=j4XnN@s(qCHVYRM5[qk[r+5.5d
%_lI"4lRg8JQ$ddD6QM<j(lD5&+]592Tkl,4m%7L6d'[.u7bQ@gKb5bTR%%<0m)>KjqLt)r61pme\D@ckLLp=qU2m$VgupnF$IZ*Y
%o)*[/1rcRFK"umY&R(T3C(W#t=^Juu"'=N/;3FdS/O>L$3:DY@TcaQt!gE?b?^;.sHh/3DchqnZm4cqcW1G2<e;[)rrI$0I5#"rr
%OP5J9&:P3E=J;`Oos.^rlVKtc!@_88puN%YqqeNta"PHj5PFHtrTc.eon**]^;mcBZ3"?n1rB&D#WsmQGY,2H.b3mELc#$mh`M4e
%P^#2DrUHd:?T$abEg3D";-^q;aF]sbJKQ5&\j1FQFdY`DLdNptK"Ys*MA9/@e#2j5juq*k;NUm[M&5A2Nh9hIU2VX\GSH$8c,Th'
%F27Z4$+4\U%Pm+E@d$I4[qZg.Pgi$b+3bQ+(b8)m`VRY"WF-(',/+u:NSp8UM\,lE$^;hYH>]+r>L4N2PW.Y$l>IHY?]p)PIDN&.
%m7$-*=^Q&9qW/60aBp=T2,=%(=hC*U]8gIY(bJjU<=\GG&S!WBb@YS"Rk[,cA,1hJ1%!5QhXAI)W3ENs/1BK%_Z$<km`,cUfct]F
%.0L>Y%e)qG\84PP#of4?H?n2=KWg:Y0!C'"br8-15.)Z,&0*&H^os?l4SNM*\h+RVLJ"!O_.8n%RYCf;B0"pSXh$KZGH/Tcl)'&4
%Uqim=O7]t='rK'NMD!Acg>bJDj#%"ZFgM=DbG<D?o_?VKs!Q,`bG0upURngA"arQ!OgRcAT&a+V%@d:_s7;^akl%(.^ht$mF8"i4
%UXG9s>FY.sk?#cd!jZm=h/o[a%CD\UrS7OBPj!n$RGT&q?JG'I]sYd+p#;_Yce<XCH,.[ABYQb*/=sJ6i7fVjnW(MCo%Xb5/90(:
%mM4JL<Etf'V[;_f:LRi7LVs29VjpqFU>XMdqc:R+B<-.TOl:g(JnIY(ab&@;-337?lRPj.ks:GJY30/=C5U@&h7(rD(o]`J">j=1
%qY]s^rp9ro"1asX_l9(1nl4$IAsu*MV:P.'X(=:WjFHI1s,l]0AD1W3[7aGU8o9ScWA-iu8mPoj57Pr<.SGY=,e"$^6d+3-VBj;o
%N.V%\Q$O(Z-u8mjMGpX%\UMprl2$%[PO!FrI=)!H?h]JT`JZ`;/6Xc3E3e=1JY!RlN0R^Q>'CO/`hEMh\3raHa^ZgYVOGj'N><ft
%P2=er/m+*.>US)T3&1:Z4&_TpPT#Qo<ikS^KNZsrg^%Gn!Tg,R\6p9r"A&T%r/2*qXC\7[g;Kd6.l/&3/1(X.<LL^g1f_F8j;2k@
%86X9E7V#@B`b>cu6PUu:Z.n86V)$Y2c3>Gh"f'>?^r.u5J%Z=<Cm*ZU$g&^-7LR(=L[D'"M=KQ$P5ZjF<@!=)foRAO5/lpC"[@]g
%XTe<0(1>*OEPJHj^)r65ITA<H51bZ2HTc=R%'sB5(-'($c!PEJON@SNU&9f%a!>`3$j$0AU@tCjAtdA@f$aPni[kWh(/rMdZO-K'
%+EU'EY3!Z^G60=mWE8l]UgQ'Qc*#t<:R)M:"XT_.5LE'qR2!)1`X5Ea^c]#:$%mJ;1S?UKK+]UCQ!<9S.)_/-8Q!bD5?F#r/&\j,
%!OJf]Wu2DE?J]f*/knCjk=M4Z1_)A`Pge*n"7K7aOpuZRVM]U+)7nc+3sS0;H\\E_^hUV&W*<7n264kU*,IGLbdp3$[+oas[i?XX
%U4DbkXI.)sIe>[tG1_CLKe=a>Hi5+G#Kq5rBh_%kgTdDJ4.h^X0VH8?T;Pee[B1TD/Knkjk?Y$!'hEu!$KtI2J^M_eqe#6<`](!q
%5U:e9r`GRX!4P%&BSq)673Y,dMpt,Zn%ijEgO?JtV/]7GV,M3/1>rFf#HD]u_))CQ?l'NLd-`l.;$^0"f1&1W-+WM#Z(jkf;Otp\
%s.RA48VT\=6+9T\(-feA_oDgB;_:W8Al#<'GZ")be@[DC(ou0Mc"?@b!%7%28d$I`E,*GG]0F`D#fab$?)9'@`(8g3Xd%E)grV"5
%mmkRVQ(TE=S$%IkWgcr[7DkCWpf=bV1Th3ABu!GX\@=M'93t"Od"b/Hna^Wj900Zh0TFaG^NcK>/stbS]>\SiTA3FjGN?eko_,lX
%j3.BFp$kHUhIL)kTE<PZ3MmZ6p]q9gr)@.\dX\h8<BY`?%]E!`E3cAPPKEmF_580G+&!n^'%J%^@\SM&):TO$\o'*H/Ilcn&S^DW
%8ncB!##c$jSPG=4RfNYDJo?Q2]NZp1#?CZsn3U2R)7$G8'H1$inOoZ$M-I5U(A]b>\)<N/:4J0#^c=9.Cu$e^Np+f`$\q+N-BT't
%CbTTY5GSbtD%aD%/2F2h/FgsoUC1%CP+6IYW&f&1Q6AVVK0LRgM537:Qn1<<PKKWFOeE0Q@Z!A7Q%X&-G*`NrR!FgrUjN4N?A]"d
%kf]Zc,%C/$+LH&oT2t2"kVoiTM@$&PL`fI'R[k#Z?6@lJiU8/VPL_GsLMEoqHrau6&bN4/T;@E50nEs,C$fH3-U$#$;]t5-^!)10
%*AT[A'&2M7=%3F/ODT`ESOi\qMq"DT*3//grO1,d!2r5H=D^>M6AP_jpslZt+#m7,DmU--*,skQ_=W0sl^l2TXiGq4c6J$2Chs0X
%&aagc-d+4HW7Q%GW0<6\EC,0WCD0o\'ZHRmpSh/!0I;reY:N.IE-&l!H9]-5H+99DgIYD?ho,O/ld:\LjAhJJneF)J??&A&j8b;B
%4F@rGA_;f6KUg>WH27WP[Ku[s"@fmY26R#uh2"CTX<',8C*`OsAoq1X='/E5a8D>)M>MgD>e+'q+,YPe4nn%3])5N\jEd8Ap(*Q'
%KLt_!WX$\F+S[rt>iGHFILp9qh'04a4B\7)[YesAL*O_1mjSMd@R`dd"cNk7]LZO/&W5ner+W(ej-B33?bK@Wk;S8D+?rH)<>Wg:
%%,[#TV?T?^TNjbJs5MQM7Cmh'rPB9?VFVr#kjbqCG,fV%-9\2"!5BVoZA84-\bCn85<7iuWU[Htl?d^%Xf4T`A@U&UB7.>%/mIhV
%9CEWjNO"#/keJE9MqIPBHYcbpYWjRhD(C8'="8jif-l7^mG8"(+:H_R6AoZ&Z#1mm$E>-L/HMY2?c":sbtSKZ-3>20Dmnm#Un'#m
%fe'2afIoADbUB3E5^-0I,:%k^dGAS"J!B<qSM#k.l+oo_\hG=X'c\["6'3*h($K./?haQ]J6^CHm89X`+kAEWNs3i`5ri)^4oGW9
%qSn#/XUi2CYL34GBJD)rVA1@(j9`NRK2?BElVoH_)P"TicH.6armjCR0"[ju!:oIM`BgR[EeH_k9Rj:DQkE7)(U_)3b?J*LEh<Va
%:>Ya:pZW%2A=t^H`-\Plg#;NPo<-e>)_6VfVrHtsn)jQ']K6f0XXYqW1uoiu:,m"LO1Q@Uh4Qu-bO+)i\%;AqPd*>"po9lid+i[!
%G2_5"@GPD'BK2EYb-^XRb7!+0PSh"KY88@0,H#J!3UB,h69(lZ%mUg#$E%X<q;N'TG<UTJ.t%Jk\cb3>?Om[u/qMstS()+p#b3-k
%4nE;,d#2?N-<cV(:VGl#Cn`dsXU]f'fHP!+*_#AZ_aJRmnUM6_KT'8)]?rG]jNETr>bIo_3@tF+=<"8QfJggq@GrX_f&jY$HW>?p
%C@Rkgr!+.N+/U2nYV)7mB'$q+X[Y`Xl!f<':gN\8cMG12]db'TKm`D#l5DEmMF@Hob%IU,NQlZW);^fO[&Pa9lC\`V@7`piN0_X9
%bIM]'F>lj?h$:Fdjj11@4ur\\5lTsq\8`nOq]0'[d<U9<6YuX7Z3U1J0l*o9kotoOPH.ss-G;rrR-*llW`:<)*OMFqi[2O%"!lTi
%dpf;h-1iBuL3$jmdc#`;D9[tHq;H^E)0)2=C\SQ;[r,BB,`[9@.J[1qpO-sj?!Y'j1V!<b&-5?/\s!P%<)(1k6;apIG6Fr7#ZRb$
%@SYs`bW/h]dklf2h<8>K?"m3a19jb+"Y=9C2#b&$MQ]($>^rc/!E"V)^+*fMSmn&)Wl$?i+L0QTJ4!-(D$1/C+bT"<qgWk[QV;4o
%OUa#XLf@/92$iMsec.&6FH,.i5,(!r&\T(6kY9m\S+2<k4@1ah&\;,sd*;K+kb^L02sVBnRFfg1pgp.g[R3"6&\89%dDGB1%?'3k
%(hH^TIkqp,D8K(LrjkO92U_Pa!sIm<J1++1.Y5i9B[T*K3A1unoE^jgR3b]Pc&.>AF=?eNNM;N6JjV*@3.c;\o0Oi@XXiNAT1rH.
%2QA/o3$$e8]V(/ZXWZ<VH9CgBMkLS&!^9KYO?B2iMn0TZ"1T00&O%V.$=+^o:^FY2_FO@HFc[\=BK_;_Tk_K:As)sZ\8n6K.%"s5
%>hL)96>s:)U3Q']Z:Cns+sg4Y>-&lf'C--l<YCq:)`\qrMk&p:)EH'oaD(Z"EdCY4i+>koh>2-bDq=-9`Oo@HS%WgVM5VW&-%YV(
%h.3k+"1%AWB&=Xaqu.A;n*:Rm:Y2OnfhqY=#i!\oL$eo%W."R1;>^9*e6[iTU+_9/[Lr^9d?NVhrG:@t2u(WP\3DW*#OCgQh4<"Z
%7F1f=?duK="O>]q,1K4R2a=Qar)sI2%k2E$"7<%c(?<]/g?>93JUOr*md.(a>j;7"f=p(/B7F`WLC$VamqNDZa]]PJI"tUh6(MIq
%!e-Z^0bDASFdUb*D,TI;mrp,\frldWlj5IT1Fpq8gf#mGG2Yg1G\@TUi\k]N*qjjL4H:s$je<`Cd>L"HK>UlT?7[_P6Kai.\'8.f
%ZqS@Kc2if`J^_<l4X,%>5@P:c@VSH!ao+NuOgu74bFPJ\SJA.k;=,=a=u_ueDRYn,4P6PS1::l`L9nt\]dh%J!jGOH%btPTUs13/
%:u6M\pmG_M%)$8Q<-j8+*(R6uX76!dp$">8H""lnGq=aG(_r9UdX)-]r^fR[;[``R[9@_[8_@<i"CPJWd6=<t!+pe/;lp!5J"7L*
%LH8^A'WU23]S'77`iHVR3(p?h@#cY*R7(J>bOjo-l/Ie12TMj;CTMl;5`:A+HoVqh:j_[*`aoN`\(TSTN/kRN_<Au5]9f[+G;g7B
%S:-;3S$)mh;jd@X#8PFrl2RBso,ZZ2+6Ju/Nj\c;G!F1<B`2J94YQ'[]U0#mh8JBdM8&5rh<WZgI(&*G06u8E^/qsqV]u:h&TpKs
%dD'b@/ltn@k%4r;jfE(d[828@qUoZ1IXsVN>Fq[L4R64CNB;Eo0(Q)m-I5Yc4=!(sYVJOE[R(:micD1eo#9i6q9A,'C)V3VL_Y@g
%W>9:cMeA3UitD*s4!!UeI3_rQmc9b8#1HQCO.VTf*eQgoo(\/2$LZnh6D1As43f$9(^J#:OChIu'IbL<7PuZ^MS.,qLDkY`_PfSF
%pf>Bs]<(p2AUZQUr,95QgV-qaLWbt4HIlbQ_(,u7q=.E>DP%@"B$Ak@\XU7t*+.=VB!FP&kB4c42o^"?>kcku>>`4SU,^?not6)$
%esZ(mpe%.8]opFt9('I\8ff(XjS92PjLjsBFLdV4J!`=n^B:5m(A4p/V%Ct[[p,q!e_?j-\5#o^/qrCBXC8Hqd7Eg:Z&.e\'?[W2
%9ur'pc-7NPH4bWSBJ$hp=M?$K`DR^e:9!SsaAVZjEnn<4Hhm?/TE!$t4n')`X8mub9/_g%>:FZ<Su=Q_j9hTP<$&Q@9d@M.O/B+F
%RYBfb4h!>TrGa)HrS1=MHrodN[6bV7qU7t*5_=)(q)n?=n_@[uhapte>E(X':D:B&_mh#W3X<W<]<_G\0=:)!^\fFT4/q4.e.5&m
%D?H.;Z#*LXQ%Lb=G;ol=iQY_;;bpiN*IK)ZKV:J41`$.OWiT!pa#f>JEl-c_99tHk7/q5s,/Fd+1@GRhWhp\4NhWpo9-q@H#>'Vj
%B\cZuP+kVh_pVP7oJ!QXgV6,EVT`7QVTt/qM^@d^cKEZ'aBEln]+H1>Y,X@r<.egFVHVDIh+KNFNMu&O$VV_N+h4=33Ai#V+A>(#
%#f16@6C.i$m%3Y?7R[AM!Ft9(_tU6+:714*;j6W?;#.kp\7D@X1%Le7neq!OH6jq`)7CcJV-!2S-eE;`<36b4'S3<OMLqM1j>+-C
%10V[s=%2r#@/<t[2,rg+=ZV8U@X$4/[ke"2U_k[X\V+Y8iSW%@;X6dq/NN(#<7rJRm-su;Mj!V*r"p/h]9;$JgF@>(k^/GW5YG+r
%An_!]]GHn[1NB@rR=G4+HX/>Yr>Nn(Vd+qun=e6N5OkJJeS9qsF.R%(e6,(.A:qQ<S*2IRUK'.TMe?'"e5f^u9;,2L[91p":=?tL
%[$J<10.[q-;##?MI*,4rf^DWEW\b2VW,e2fk*Wk6/elrYa:G"VM?m&67G;TYeJ*a#:O0_;oN0[V7aHBoM,hm/3P<qe*!C$a^3.+Z
%`WIBKWItNVp^h]magdcSPr`O>+IYpR!IBMX#%_?\ZQ8dg@ZVZ62%BB/Qf<Atq%Bi\f*?af=TUPi\H<F,bLC`(/ZJ-b`T&.PN/DiS
%`d%4lYrTu/V1&T5:(_*O*mpcCR@7se;M<mEQo%k,(?;C4hOpkCMBc(d+s]lS7iccV4:Qc*+q@IB]JQ!SNp7Q9Ai`q/STgdh<3UUE
%,&MU[9p4b.g]9&oB0jHR6sOSk5h+a+.e:uK=`VI>![h_aUu8k@3n8W0c],i=M`%+u%/d-KEBIjD$GDQLP(Jt\QHrHR#dAnLm+TD:
%Z`[/@ON(<B8X`U:TdfWS77lCq<squ7p,fas\<&gTVe#<X++m7!iR&-kW\Oa&,:sE"C`]`)6MF)Ji<;uPD0C.OW8Johm^[4Jb7G&S
%>7NPB?X4;^EIBG`!U$B.YYr!+=nmQ_=ZHor2/uofH!lZT9S=gBJ.rq&915$hnjNm6$pp-&'4FB7MoEKM'Ld4CWQ4TDAOQK;FThYe
%W2.ib?SoL5GZE:n*?Dsu3-W95#[1Gp=5/QI$rp2EA48&%c0nE-S;5-l"l0@hKR$%A?\b,0VNID@VoY7n,[.h/&)!`-Vc$GBOanqt
%9Ua[URWEP8V0KJJoTDcQcLX;"W^l-.AH7$$91Uo:cP'R8H<4MhD+Eko:r@o&8oorr&CWdHfF9kFW"aZ0(;QmNHRa6aRlCY#JAaBj
%:&oZ(MUEIkJ^`%Fj!\g]/lfh\U>`'U[3rVr4OoX@%A63@qc+MKU)h%teT4l)_*lL475C<0&]01;,Z3GpXTigoQW"sPEX[Rg)+!M)
%;AjT)`<n@C?9OHM9oB,1oQ]'l!sA\._?#"GlW51M^S5pL^,Q55WRq3\0,j-$U'Sa6;c):`h[ju]^(uKgGtp9p!=P?^U%5e>"BHc1
%NFO4rgN51@e5GSjJciK/<Oup//5VfM9Z_kj$/dY.fe5O-8MdDo,;kI"M<]r_Ta9V>\FHkN0UIDg6VMa9XK-?K[&@$$csd9J;`R/:
%f^RBC_5qq!!p%ZcUcH6GOLR>NE*U,'.%.YkCMR$3;/MCa<CEnHV*a`+'m;s_<]>D&Vgff(i&Pt+,6D1i6pTQPTRBT=oHt6t+!R@o
%&MS]i#\X_\0Wu[.rE9f[+!RB6MLb=lA3ekh_UfJ5,+0"4T=L0mKdR4PePP3Rd2Pu$WL0WKI@+$..`5,Yo'"$)%A@(i7-AZniB%`e
%MKoaNCcbT<n.7*>e$X39VF)151otO,aak9@)-5NB6\%[TSsiAR'a9bi3We;B?:a0t+n]2e+n^7*XiGk>5.QaRp4jK]mk&mHEY$;M
%TIDY_BroI':_@6[31(8X.g>P'/HbjU$o#*IP76C9$?B9#",\dcO;][ZeC![YR)AI:Y0+c<+(qKSP66!=DAU"3d&"d4S.Oo2fZ7&]
%Q]bKFBM>RHFuGY-)<psa!k/ERjS`31R%"2$I,'<LSg;jXW*9t=M^YZ-5,f#nrP]t'6E'r_fp^CF.'GSIVEomXM$V`AX=5a#liN:U
%/Ts&(G#DMgFT,I!"^h81*fMkU_`ToW%:1bG_DP"s@/J=iXN3hn+PjmYd4eS;'A"dI2D#(dPoQ8>KcZ)UVQ,G3lH\7.=P/m\!iCR$
%FP!qqnc54C]=tHjG]i&S+!8(?2kK?60/IZ2J_X8Ps'[M*[Vmh'0!ZNI\YU'=F(;u/rn-[,oO_Q04P+r\)UWCc<G6=8R]afTOPSl#
%%N5kC;s_-A)ePN-O4]mN#)DSH%:lYtq0gRD:f1cGm<b:29d_L8ab&"c6g6Y.J"$$*TRa\dXfF8_1iGA8BkcT!K#Ea%P5?--9\ac2
%n(0gRZ".3G=LnT619+NtRsD2_r!l5g.M5,pLb2f->g2A"^=ZD"Bc7FW4pN4Ujn_i.-5QhFgY#RLJg(\-@R<(D%'8O4>b]B7X!7+<
%OkR(Em`oIBl]V_VNn5aC#^q%2k*#mU?6'=5i]n'?N#`2gQT>]?Fs,:m"$u!Q_J'P/c.""V\id*tbKF9gha.OSH*27<I;u620j:b4
%hr$"8D;$?#AcRK(+Oj^I`!MWfqSWQ>-EFQ$BPqVF1E32tD4$4fF)SmBa+.l*"/\0u0^3>fbjQE'rQ0Sh@DHj&rmr]gH=t($Y[Gfe
%J!C==5+41m(KiG'>;519(<dkR354'SYAQM4GgNkC;CkbP)-`RgSOIs%/S[)+_hDL*3uo,U.\KqO458]sF"um(OSR8F_)5IK[=o`I
%R@:"1D_en&:qnT*na3d!mf&\3EdsJU`l_S/DFs&mEdk(*heDppe;dp:([uDmnEb08YV)gPaV8!Xl=N@IR<_ts*efl4VN:n#\Md./
%@1ARaHFP6dP=oq&?'>$KOt7-1AGNVcaaWQ=Cfcs6qjpIO+h)s+9/8YXP3&&,,l?+>3H'>/Ac!b9_^@H.nOXAk8AY;$6e0<Xc@IMu
%PfVdlo%XpVPqjc!KKEll`E$"COi"K/DQKiD>If)WD:XFq6P-@%M1)J,<2(kh!2ApNq>aBh*a1rITn+]C*b?i@eJ1kGnFIk,:ppiL
%kg^*!JW62jLe-WpZYmV1Sbai.0,G"NpJN^E:me6*AtN)+#>D8fC?\(mZfZs6]6]f"/#B$)WZD$oKD0*thcS46B(c\dq`6=42C'p(
%GFdgle[SbjS&P>J([0?Prg@GWZK$8Tnp,rPmF89LVfr$Q;`d46g?UPm2E@mkB+r7mS!+8c<pf'FW0*^RjNWkFClJ63FL0N#)tJ14
%rlkK&S.pkg:X/2MfUF);q\JSDT1=7o;ma%&BQ)_ShXMP[^$'b1_nG:egm]tUhR:>8j]@1`ql^G&Q<t3kX\[p4qD$c0GI2S]BQ*`R
%[(!+IdGDTI]b0OPN_mZ?o.PpmIQ,cG0;78!.mq!]LO..9)!^KMe6@E<W42fSU#()3lE*.t]-G#NP=R>j#8PRQ3'=F_.6]B(3bOnH
%:TV1/%<sT@DiI=fFP3254GLXCVGi^Jn,M/#,hg`i--Xt*+f!u/0;0UQV(eldO50JE>=tA0;hlf%b7$TK)0K4RL0D4qKft'AMqSS5
%glqe05e"mI"[m=C>X%<_G#]M&ihFModf!p;Q-GJEgB&ZlX9CBEc5)`4[MO=d#[^[_P>kn`V<jN&DY,3?,=="4<>mnFC)J@a34jDn
%@%PR)F1ApgmpXXgh,@e@39A23E"\tKS$'>B1TDcn$&@MA!*Q+YAqLI=8<64H5T&#<Iljia#!.cRNFLJ.el3T"]J;u\g"PW^H-SGA
%m?U(%P#KS&VP;.Q=+%q)qb-#^:RR<TQ>(&2NZi-s:8<Q0-*nSGLD;sp*C*mNLuCgk4f'VVQglKlVZ<ulR4u+$[5B[b%'c=m]i*5o
%SG#qO_6MYN5dk/ONK@9;Y*I.dc`lF3+^\@I6o^o['2fiAhC^f^*+J9?%1]/<L)*T6fY[c+/Tsqo5UV*k\0C@1Wr+=Sj?``9?.m*+
%En\QsCoF?=!2IrH4[&U2!U<(\+^5&o-M@\.LL@H,=]7LhMXkO2cm'=?JE96$'\Bn:3c$B67ot+XjPo!];/&K1f8]j^'[)g&JsjWh
%]K]"qs3t;-lOi4A@a9kVMGcV<lrc%O>_^^.#`uCe_s\==F8B-6pX6kdJ[&AuAfuu?B-%pW/BJXo:s).i_1.mf)(C)5\QMN!GBQ2A
%s7mZY;Iuu2r+C,]=@kaO;#Y86<&<eL6I[P(KbTYS6&K'">)_Mo7bX%C.A)N\ZGfB3X^YgW1"*fe7`I(m,9s_%0UQQNc(K6IX+Q-e
%3S"Y!a@0n>W?I$-M?R`HTBi-n`9ejbJ=f,9FIX(Fg!bjB>VB@dYg2c]&P&T;Nk#/&.P+hI>g]j%M\(OY8G?=]Fm,-5<2HcTC>oF"
%=^MXqZ;6b^9:n6G?IY'XFdEs,jE?fs912EDpt.5R!["i;1m;foE63*XQNM*oZ9uD);4.je(FYIq[r]U],Rma+,#gf)*p=SfICe\>
%c1#TtiAsu*l+EMX];>>5H?W#0fa!k7Eke6Lg[;@)Dg*mZU\*H@HB$eF9.oP:-)1KjkPh9T\j4Hm2e`$C2lJB+@CUg9(#&)Yd(HR/
%r[Y2!['.hu\O,o%6h>6/6ef=Ba3u'?YL#N%#$p-$63#\O>&]OWQS[C]&+r%:-'O1IMQ7'_Okr%sni6nVK@2OJ*jb[mGMt#5.pM9q
%2&%qRRl1Eq-ZW]p>p0'/-+iZ6'$aU7:0tpP5c!GemJaA_T!GhX9t'tn=9'`E:g$+:B2U%T-82K?9X'JJ]92^3Q!Au=+fkXuL+oH7
%[5?1Q=8uIEcUm04*,\CQ@E]7M;-P!@"j5A6KO=m=MmlCZ5=?HCDbIh;V7Z0Rn6`d,jVMHhXH)=t*F:JPPLLm5<l&"n>Y(d+QgH_W
%oi/\)B`f%rS24X3iM<c.\2DhFAPuP"W'KuS%jE5d>bsj(kH"5*nfJ$mWK[X?*<;s/5EpZIKsTWVi5'(@;e/]l&G;o./r7E7SLgEE
%ohU*&j,YphVlM)F4JmsR$[hkcrJB)p^)8$/WBpG,4h+u0g`$giVb3tT?p0l&=MnMDXq:k,N5Fa)L6["@3f'CYkLH>2/LekAqqRZ>
%+t&)(ht;`B9kDrl<#dM7Q,P/io1j.h*6\/p8C!Er)=B1.9`O+F+D?&mna(Fse>WkhL5UW*0gc]8j6)FI7aa0Tm,\d_V4ohH7lt?*
%/r`ff5f2<fjus01demD+!ZFYM2p6Ca&MA&u&E<pk9R6=\Ue`]Gg"PnT,t7u:Aj5Yt6?2DOS=O1];22',R0)m60n!Is/iFG8(<Hj(
%<HPHg,Djf&gO(_MoEaT<,It+ELrl<*;@'*sBT;k00%$3B:k2T']sZ8j>!%r(e)EAd^ce;6=lno$*b3Z&E8T$)?HipIPqUT6n^si>
%kk>]/R\>jqX!/$Y&;c\T`1Q[G_(H9,8O[_)5?)X0F-VSOQ`B3YS\&ss\LVD%,-chHP-;a%l>WN!/Y-qkDT"a9K@6p#A0=?)S][?g
%7No6D;W0:l\?R&LOY'D*\<([BOsQnjR*)Qgs0%J4oj7h&68RU)"Q38CTYmaLXtToR*^<g`*,aqtPccg=eu0p,R&n$47Dp1s3Ur,C
%"1(t,2d[i#Y?]$]:ip!W6S7dUShbCj9,!@bF&Z.9NZ-hs;u($a$d1LMC=:1OCI,0=!#8'0RRBUR8LpZHpQhEqZ+L@cX]YV;X8!^`
%ojcSZkt5.of:uU?"c7V/fTme!!\"0pS)?!_LgeNCf+cbE+FF<cRufu;eOXc^E%5%&L>>l:8AL;3)%_]5#^l46W\9%FT"1?+^NhNZ
%[gVPT!md!^mNS+dnhHYQ.P11:5Rn[ACu,k*f`G8,mC"9d,7>=G4XTA*i@oUtR\EW?=:W[":7XRm1Pgr%0?38(WN9(GTPH-LO,+q>
%\k;+a@SBKKi%F90!pT&HesO49E()U+MV!5r_U40SF_<G`7;Soa$KQ6fr6WL[nLQ:5d=<oH^mO+(+R(Wo1mg/C+?M`=EioHGhlc'`
%aY2E.DY"EA%tW&n`Cl)[)g=^u&9iIB-6-MP<GR>2>T=$^2ODJu8/:Umkp&aq=n*][N%.MbL.g4@lE"ca;@&@,jpN0G&TS;2=<SE"
%e/E5#o=knedYB=X6+)/jjKhJa=P4;6c@hXM6n9l^/0#feKqK9I\jN_ca(P8o1mqV,08['^j\Ng57$e3"oOp9[^ppS08^k!44OQs[
%;mPBn.b=q\#WJ+q)?^\RNFlQl_9+19>gm+aATQ^B*NiW1m=7AnS*RR`lqXoce!KJb1bM,GXqZSTZdPcGn:J2$(.^_NW[&#'9]bGt
%U$MB#:2VEIAr:Mm,)2E@%IKnE]`)6nL:Wn<\sra_:^J^iH?ZF.2<FXk4n)oe%2gAHDG;4^/ie$2@9X%3r$i"S7"P>mNr.^%a47<J
%:YfOE8/t7.OpqTG#&j,o(2CT=TI?A$&(Mc4)GsKK_'5Mp,%T%T3r8pZIX8%0_Qst_lO^]FKHfP+\,hp5b,"eO#11<[l>6])a*DnZ
%i4hWAFm#$:MMQO9e^1'FYZ`b`LNf6@S;LPrVgWi,mOKo@N\@gAbmTq8:Fo^pYaL-8g+)\VGa4H*9cFYXc#[VL8t2@=7HB3#`'+\<
%aU$.nQ*%m'WMcu\+Q[F$c:olKGRZ1N(#2]M91;_V?8PGL$;ZGMj?+,VgaFJ`hiBasZ$"sma,ZT2DTdWmlVO#;L1jiGBR%XlUbg2F
%9*>r1okgWk?4Q7BBCfs1TMlK(+=^L[MV[R."nU\GBA0\R0@ZfgCO"KGi5RsG'_i-#*$O#`"Sh'YPY2SJBFN@5[+"A$2+cWtS]Z[e
%cKN!NUe+C>[###`j&BFiD]N-Po&_ImO"_K^B//QV=Mog]JXTh!Y:J_uMnOY?bRh2q-MTpQo,`.\$:huJp>s*m@9-uH*<ri$M3i$+
%WN5Rj-JXW+<DY[*0Gjq.h0sP].qU1d.1jQg3UmYjUTpt\?PM#B,U9OoN?TPn5r(/A+UG=.14)QT3d2ZEgkY,n0b*01F99FYmAMZ!
%+kLBd'eA^ro8'dT7TJIu_E-`u@S"<d'81j0=:ulh`[@dO7<Gne+Z?7^2JjRJU+g(^@gu%"76Q2_atqZu3`KAb$+B_?2tWl0%V>GK
%=X=ML5Zo[qZEJ)g*49*AS35"4e-Lq3.1#`gIQQ`-fTT?8:qT@l,]SBJ`(>1+,p#1V>1(tg=iJIf.WJ6[b&e;Y"L57?rtZR)9dDNs
%)tgRG%;d$eB+#\i;R7\tFq?sE`YLuhaTuH^<gK%Na#/L0pJd7L\`#S1kKgt!&n6e:KAos7r^tPCj>"+l=56,iK#9<SW'Knh7dO-=
%L*fhYd_A[l+=mcnA99FGS(K]=#tT)e(m*fr5\P.rFJ+<456's2Wq^(?aEN:kGb50*.5E`?C545"I1(%WiDRIl=UrtraCJ&I:Ljem
%<f4B5Qr&Q_ZWd6)-26\\JOBi(fu/I<`?1Yo[kCX@0HPuAOM$?h#_:c+L[UM>O&G]%!OrgE:%:JE8Zc%9p+lcc6O%ES%m"5?*?<+!
%_lt.\/8FrkCkgGk?Ij6:g%ARVMqtonG'8^UaEp46<S4kshj7roV#6:cne^/J2pR$[]$BgN<UX_HZpoT7jK=Z;a<`]7B@Lo(UJAhS
%rG=9f;WCsb"-DUc,Xs8._`*rcRaOg_d<0@!IDPSHl[j%Nf;4-Rmq-N`2dQ.0V"h?'0n$nhMM=[LpgejiZD08@FENtWQYV'Cs%%1q
%GH%sF2TnVk)::K,SClO$&)0@mTl4's`eUhA<_Egela$L^7#um>E[o4C6%$2)hpe/%09t)B;>6'_*AF6=!_R>Oq*G\tk8!fl2QY+\
%(Lh*p:rR:];G>8b<7&te!(s5s*R)cU'\OfYoW[X"4S6KV0_&:,NQsgTo&js%+?E!r%;5H"0M1mVTpiB;CApnV6gUq"MI\uC;-3M@
%%a.T$qlj"Q;`I\08#&07n5.DC'=oEDgR]rh*=[HB`NP93qht'd]^`r)\<]2f'R@1Lfk#@oS!FRjr"LMMIHr`7aUeR-^eLA#O=?AO
%03e;8o_;PEW"+W>6StXWWe6rrbs>D[UD[)IQ4etHaTi,%&'nZ^Qm'm;A-'(?'AW%'>GgeL02/2+kPcrNf,Z%=p1I1G\*>Bk@WHU1
%$%rb+[2m7RZu`(j+=h!^N$YMYKH0m6o7F,FMC&V%3R40k[(bOQBI1/>M/4JgM6J#4!YuB4\_cErK*/")QePo%GEJu&9Ut\n`-b9:
%E%kYIXIK/7MHHD._O;Ep<$`,.eHg!Fq#[?B@$.[s>>'No+p"\=UZ?6jZr8/kkZg!D+B;s6T2PLNRotX54)_.]XDAT1e?']eZmdG`
%L*/A[Z%a2O[+F;@KUTVX6H<q&C;*ec*_HISS6QmcFOmeK9na3Dh$M[bF0i,8fn!7Q>.+ppS_MB1K>UE?#<u.7#9.TkFWL![<f(GF
%c.k3OnK>kr'G"t`@\'es=(1Z>oB\42WerB1C0@q@'Hs!GCdVrt#AMWo47?-HAIUm40_:oGKRkp\+G%dpI>dKZWq:b'3ei_VQYd?3
%jXLLBD*>(4P7eX/H).UC3ZR[cSn/Yog;(k(e\-!jZQHS5c-<[]/Um.Wk`)[WOiVa@>M@'8&L9)%N6FS^iOb?13g>=hBLb&cT3RjE
%pZpoR^;$bsAB/]2f;Yc9aXX=5LZ2>aKGa0+=+Au'oCEV#^:/0q,!KT3i9uo&s,`LfMY3r]L(0jF'Fu%B#q4VtXt'm7W#F?q8QlX0
%+@I-'PaN:1PR1`RVBUa&VQ;CgqB=kK>iS+<!_l-pl/s0q]D8T73R38Aee-77#X?i_<GV&3aT0k<):T7s!NLYf<%V$bD<T7M+?K`[
%fnX`/.>P7n_%AI3)*rV[q5V%_;ZpC6A/Ur(Lf71g,.[HR2("JROV+"!AE'+_8Hd$J[im[$'ei/`]IWYF=WL0]V:Ks+;\NE^rVYGG
%jR%'HYKP/l?C(ET]+Zrd-qPh0MiXOO-nHs<h-U@M]s/d4;JM<iW%>*.a$eR(4t&mXXmZ`TlgO$:DOkY]o5<*^]AmK2h1&F&48VRK
%4OPq)0RW&CbBXZhBQ?.cY=K/4N@)&U=C_h<+Q1M4,2s`DfWeK!Kq(nIJ.9&TaK&MZgBn7oM!:&!2eNT?6#!%si8WWu5e7rAHr.4m
%HW8+8j11jFTV-t0b(^drPar67_&!oe.7ufl3;hip2bT#+7HHI-8Xtm<%J"8*At$:fT[Q"c-eHirOJgFkNJK-#0!BB,'G*eFfQ;#V
%;[@,,rT'?=671BqYAVTk+XAT&[h\=^VVP0=dr\2Ung(9sC/Zj6gOYT>;$f'k\Zc;H=[ZbT764YR5W%MDCdmL^q.daadf<BTmT_2%
%2>edl<C2!k'k04N'k`?:g)lO6Vd"YFPlRi8VZAP;QaEJI7:3Xco/BV;jY$F$ARa#'!O)0l!"=u-BMB2>R?#:;?XAg-,5,$]9=eb5
%d7rH]J5!9/8OO6>E&3:]ql7"^:T[[JO,SC8H"qHcd&?>AH+aO:nJpsp)22PY4qE[\W%k$G:%KLf!Jm,.''N(R%f^]L;R[,V*6MCr
%ZhSt59Y?7dW(Z[oSL,&0_q_6U1_guf1o]]HRX-l"Q%\cUek]HsnsH:<<,:]&S=egZ&NhHu6%r&5Qm@#YL"6S'ZG2j&<HV9k[k(Gq
%\/'U$`aH?n7Quek&"bBR\&,=kXtr-1Y^ik&CitJn$G=#.3R*pOG5@(*]Q!gqMB0&dd)B?gR89#PShST9:"m_SUa1k%&8Oa)k%:j.
%_b>$r<-CfodU"e4^IuS:`*2=Ck8Ij)od$`-b)We>7,inM.nYFO]d[Q2n`>Lcb^IMQ.u#(d=?f;I^g8MS.>l3?2HH4D3N&0d&C<Pc
%/,Qif'U1EQcgLqD:au&mU>DO!Q!1:sjHWZ'ii:`'0$Ye::.[BU@*ttW8DS".[#5PRcPcZC#>^aIgmT?8VJ/$r5<-TZf#?a;/22(X
%2'[)E5Hq&#J8,p(%uR!Qi3LB;kCu)Ch#ps-N8qK.%H6NNC(RR$#Fd/gECqg&lQp[V#kqF\`hlQ?P4@>YbfV(u8qP3FaN%:9I(b_)
%MI*Cs0JF-',XF],"c.nphRQ-5bKAX@TUBlH-\a"?^jFoge6I48kC@p[G/b4iT3^=\[(lj4le^MZ3.eJ7>I>4UA,!V?fm^!Gn1iO?
%hW?Y;q)4-$:X*e9TURcmNrN3*DV?bImAD/N=X\N3;Rk[-]/d.rX7sE&?3#C[LB]\/[9-/8\VQNL+AS&P?[.o*GdgC&Xuudu87V_Y
%IA!PTBnoUmZf*k5eS?$k+b/bg+CU;mM?b7(OF"6O0\hToEp>B:;NB?"qd+3#oj%HfrPWtr\t;gC:/.nk^<<m4M['d74L%_^^K?[K
%H<,*22eI',,m>/b$pH(.2>iJUg.`Uie^]_fS+POt$I:F0nPT=ZMj`"0$mL=Rd(u3=>)7a"I@s]Hh"D%6jEK1'bjcE46lppDaA=,@
%.L\hQ''f4b`IFQ8!SsYG1/.,"lJ4F=faEpH[o-)7ZPDPolph>,1>[`,&N5nA+Qj<ED_jsOOg:/JWb/Pk,)E96P<5\%C-7=:LfRs:
%=3HTf.]oQkfe->X+\cssAU2u6MdDY%k/YD\V5eaR1U2,8<a;<&,kD]MOB*?IQ*/R<goj6g>suT4#SB(MD&&46W0[<Q.p'KoJV$Ee
%X-'`"):q3H0+jXh(2n'0i_C5log2^HD:MP5dR)\nI)qVP\ratq@-Zca;&Y`'[q-(q$oN_;GokOp6+BF$]HbtI]>K=Q-f4.NGDE6b
%+g+lDgmgPGM@>faPuCF&:@bJM06&N0o8)&K%5OuT+55J3FpJQ&Gt38R'djVUI<Bf[-f<YCS#EFl&[lABDmprK,HZA(nM(dGcXh*T
%CRgV(2T_K0T$HUA7dV_n:8<qH*L^MXE@db('QRSMN1GCC&4^ab$`#C"))6c-n8&hJWGpWZH_CLkc7n&XgLQd5_JK!B<qrc0!!%k4
%X5;=<fW<@j:HB",?PJ,49t6G@eZbGi-V`eQfS;k+dX.cn<;^bq]Cl/4j@\p)OtadKI^Rn9GG=RCaK3;7/Y9MU$];Hm2'E7,Ci8Ps
%)EfX0o7"fmTX)WX0fpk/!<kiZ.*L9A^%]%lnGR(:#e,@]77&W1@^>H`VIglB]RWM3mrhdh;ept,.Z6pF$Tm=KVP1F<WaHkE3[V)-
%eR!pKLD7jA]%FIXNKbAa[=C9TZ4HRW^8r6I(P!EmDeKM1Fr9@-H8JW2VdHQY[j''#m07ruWsi3C\#n"Im904_:oroB+='BEM9c.t
%Au30.4(7@``2[Scc7#j25I)d#8GNCC'Jtb^i-h\?>q!,iWb/F9#)eoeJt.LQG_JIK<;br+e6Xuj+djFuM0)&K[r$\Y*qVZP^oVj>
%K._7dQ!C!He3&pQM.5HHMe)O`4!el)EmQW!S1Mq(2f*ZBHa`Ukriq'9ddNps=Snrs4e75"dPFXS2m*s#X+T5e&8X'qiM2\$s3t_s
%q$5q?1;ej\]*p")ooC?bk(MQ^`.!LV,m9"5b":.d"+8a""*kMq,Tq61k*Y.5OOk%g?XoiM7Z#nY"b\2T-qHc^S?cd/#qN2$8cT$l
%,oK_eYDII7]PLNpM/as52X7).3l13rFlVYFC,UHC:ZZI`CD'>De7D\0AZF0TqhSlQ=[gdnJ<akPLnB1hK<E9sbT,Hh&`*:%Q^F=W
%C.fUn;V;O!&.G[/3A[)%:*2[rT"Ld'k#093`"Z"rl]]RPC(GEB.,1-8_pN!i//6m.@UBfr])Cp<^f>F]Ylgh_-$*)uVm1h$,<NY!
%l[Xb7MVd`Dp/hbL-)2Om.t;5VP3FWa]:K&>hk@kA"l))]9(n6,:U._-OP&Pq8f1g!f\Cf"<@)Yq98K:uIEH44BeRL>>Y(*GpGB;=
%K#'BMp62UQ2Y7:<+?\5YDCfWo#/eAqd)_7:hg24,V^#Xai\-uSob%2^KU_V'&!-R)9+Ej5VK0p$cFQn2"GiTh_Edlc$8F7/hVspd
%An/MZNggEa<V6e::!Z<I;4-CZOI.2_S$JN_#(G'Pm2T6m3l2ZXUeEa5:03ZF00q=KL=8!6(4^X](fdj[5*R/We7E7Jn7XF,=I,Sf
%aIA?oR4>J,(2W8AH$VtO7>4:IGp-@Tf0j.O/bXi;Qb!O^?Tr[//KWM#^Y)\,Z"Ym*^)_#$'#fe"0!srMW&b1tlN?=Pe7[-T-'I3@
%ed8YHEV>n6VClVOJQ>"F?9R[.BFsHN(-P2dNVi!H4HbkrldLH&Fq'u)-.[4GjA-IsG1c>=e&nVXN<DcZqI?V$PLk7u,gnGDVL2q+
%R0;f\eaH:%#(Pr%f:9>^RFs)QJ&OgY-4-r<:C\HbMIRXI1seKN9h,lh@gR(8NrQIj_Cf"ENYL+eNF!/D1;Aa2'?%>FqI>,:<0?E9
%3kibW`0>K26SNbMEO!rShIoGpgUfVrBpu=@pSb6PhQC"%O)\$j(l-I0b0r]U5E6Z18aoLAO<\t!GI`kpf/0ci<i6eYB3o:r3Mp[X
%SI.nR<I(R"ae5$U+B0K5!Sgl9r*\`=h#3t,:HJC3)(@&]Ko3U?HN9.c)^("4[!3^G.mk9*a\b$I+A%@@,o`SVk]E&/,HgK(!jIuC
%oP.C<hk[ZC0TX,ql8(K(R>j9C+Ti'B@[6.lA6WXfN(F/1GK4qF/P"0S.e%)\-(Flfq3DCoaIe/#\8L'umB%"p3IWNq+tc27;VU9m
%W0/;u"F%8WBI\O.3hbW=>e!_5pD&6-o1E%`Buo;DX+rEn,YR\\&P*S-E^TS/=3[i8^82@M?:?6ko@B9\CX*EKXYI$LT]9a0bB.Q6
%\EO$21u[dtqUuOZBPe'E2No.>hc<%4Bu;"grMU5CY)[G/YE"FlN)d2i$'d#%*'9<]+D)e9o/nj4J8A+S>Er^ci&th3)^l`CYtrSm
%=JodBM;=%OIN(<'J\S@(lYYX]G2UuFF(pacEZgC]l*tl2JQ!@?aC:)Zd*Es)#?ZJA'a,ra\qjbRMQ^r)D"5X^CR^]Kg)3:"F#;jE
%rFRZRnXS$N:cG='3juot9jBe>S*q#mKY&f]Q0>8TXYWc)]*3tQ6gZsXf[q%#-j7\$[<mR@%gkW;a_<Cd=Afa,!WUDi)oE)Za]k+l
%h@!gi>41*Gh]^-$4Ms1\f62$C!H(u@)g&`)B\Rd5F!-D\B;Eci`ScV'.NHHX(Y,6W)VK4g69+MBPKWT1NOj3gPU+tAJhW+[UUk!<
%+>A(q0!'G&6&@05+BjHE\r#r#Yg,*rLBlm=gT/Z=Jr.S]"ThDc%H'C>8I58>#i2\=,`W^Wh;F\k+O`5iPARehWQk6!.Q%mWD"\+_
%\Aeg9Xhqk$+L135ka'CWI>/s8Tn0!Zerb20IE%?L\X53(LZfIX)bA=1S`5E"'ZL`086^"<qWi/W:.aCc=[MRR6`<.IVU=_$oJUKP
%&P95+\mqBMQXl/6kt"emO:l'u8cm^GNKuie"D\22QPn;rY$o?\WtEFi/GK.diEI-A6?r%URSCG\ZA%*[$J93\-^S5\.dNjb>calS
%m/F>4+m_>19;J99Hlr#i]T+:l'+5j:0s'0e_^\Fb>!TWjq^ftc@g#d`roQ7c/&W.MnH1p^M'M$:ZFbjO-dj6[C2cGBK\m36+)?NX
%DP.<d%hmn%H,VLXPpN&Y*+nVp2`k*lCU=lC9Lq_lbE&qXU'\PlAe)k-e#3DG950k<Q?C7q@`u+mB,jH#<KA\T3A2qNnp],s9WWfg
%:5/33iG<#IdWC.4j040uX7J3m-soAEL#NW#6PrGkbX>PCng;Dj.qA>>K/dMS[8[V&0O:2%B]A#.*S%n/(""@>j7!nB+OdYi3`k41
%36Tl][`i9dOQ%FaD1fRr'X#$c*n8K)G2C,.Yq3(aGR@#q=nX0>#^o*9#^$("fu5,$.KZVhKk+P],=`4`7j[L7Tjd^aNnb?>/ucq:
%WQQJE<64sh[gDKu*gsrV.9Y\>$imUCNL&--;@AR!!;%]jUq8F?]mTF(X$pOeEm%kQc]G%BhL;<WPTt;MYdi2mj`hEV?0)5Z\.'qe
%BJkcZgL)Tr?8X!ZgLKM\1RCGHm5=4*jn;e0@/08$%2T/mn*]@Bp2r6`JO!/[F)qZlO^(hhgWR*#R]**n@B$rB73lS"`GXRegq4OU
%Y2Z%lm"B+\p*HjnQM74(Ur."Q</O4AVm.&op&khJG0X45^+`tbX]$8iD-:!n.ri--DG(>P>2`g_\>U];Xek&b9f6k.UC>tk@e:34
%*qU@$RZr:OO-U/u,GWHMo*XW*8QC^p:3&7R4h9ko.R\hWKI9D"b$.qL$Q$^r>q[A4>nIjZm'Zdc=WuRHh4IXNl*koaMgKWN&201\
%I,$jkeqk=PH7N\WXr76VAoQ7e7h.!^;F4ag.Yk0siIrg*bpJ#n%N`^%Bdho/1KDs[-rkmQd2*!Q*Fb`F\)rFhoO[uHX@I*,i4>VV
%l.\c^Dgl>&<OC9>0W\QK%]*lKmPg4ahfqsPQ:SAD2khBfD/M<AQ"C55@if^[A=FkIS;%.5I2W,LjA6lU;=(fC5Y+o\]*8\D%dn'E
%<)BKkr_Ue,XkH5IgIVO:.b5lYK'6dOb/E)-4%XVi+Q%R<&(X8;nBD`A2,C?q'_-V%K5!@6W)O1"!j/`H5oVM[Ht58Cb#!lkEnq#q
%qh=<m!Gj@K:'OZ579Wk.`KRh0Bf\XG:@KoVZpE"F\#6+3m,%jq=K8a>6sOs,+J;5M.@glgp'sBZK5*iIdTg4,"A8aBa!kZ+>/7_4
%:rY&1f.R9*;Q\;A"n)*h4RhjFB%b4r\De,b(T^QNBNA(M*ki%M;KpM;i>FRJ"07+9"^XpDAr8!P`Of"09c@9fQ3(.7"):/Z1,b#i
%Yo$LsF**fLV@BTe*0-?BKMCHX8h<2QN%B%E_2h.hoI'[f&etRk!\oqs-2aV$k=2FgRAI#K^Zj*AQOFuH4o0gO@9i3b#Y_ll'Zf6P
%YtP/i;SiQBY4QW"?+bnN0Z>3jcs7L)Db7oJ>U@>nSdmBP[8@<QW_V)bM`:iR)8j?;(WVanlJ1_\;N,[#>l0ZJO:+fnZ6dH.ADTWk
%O!LF7V;ASkaFCFl$QN9PC9hc,g(PD=hMU>'_dS4t$=u7,d^5o:>/DSE61.s3f&`+t&o:<+;01/uhHnu9&^Y5?UI?qQ)b9N;Y@nEt
%:ZX:VU`r\;LE8G"_5gWR(+kYiWC*%?qg_q(VoZEuC_d'7c3[P54'gr.HmE]X@:FTr,$so63p'*31*j<tWStBbq(dQr,L@>"4PSE?
%&q8=[:+%kOGq%5D(+0LX.9&@=Hkrqb'e6&kb"m;+CVBhAe!ncEQ/:V=:\kmBGZ9/o3D&(<YZ!VcNgl65F"/>,l]$r=oZrNlqa=+Y
%"*b5KDo5J98e3^#eZ*jZdmc8e%:J2m#fgAMn@XG50Z$s6Om"Epf+B)))SoT!iE:a6A(5^,7ors^0q<_4,:ZNc/tF3j[R1<(R]8)3
%U]KX9p[+42f"T;Rq/;;NkYaONl1s>Fe)E-NCVGW.q]TAbolj:"C7HB)0j7'4)h#.W_2Rco'BAXg?tbsY#Jf_D\V]GD.HP)S[s+Un
%3%<rDGpB6V:M9Shbjo0]$nh_\@%)>*oFd6B8slqM+rkW&&S\CjF[A=/CsE;\eT`?Id*R;jo`b\`XB)OjSB\]d&b8>jaVb/[0=/[t
%m.:]CZ<WM7nAj4V"4@J^l?1j0HARR,c^Ui#0UC;NP\0tPU\Q/s'*T1.r"^QsN$PS5)H@5\0E,]r\M?;!g5Q]f@UN?N!qa`\rM2#j
%fE*DS1,u/OK.S&q).BAl%]qdo&g%k'oS^Lj8\C$R1#nCX]_j!Kdrl7>VGSGA)$'`Q?(a`:n/MU'hF]9j)V[+Ojj<kCAIT7$WK2G5
%#Ws*ockSa/rt$HKK/ba/$/MK)3$iF]"e/K9a9*1F8J9C=1!(<s!>8gPq]EsQ+T[.npAh^nf5?`S4H7$kVK4-6e5S^8'kXm6M%hp+
%M/sF2[HYLfND6&+@e),d:;+CHrbSbS.C>*DU2=kkjSV;u&NC(d>Hh9[`mB`rr#UNn^KEOo['LtaW+<p*MujSa(@(@2\)-RgeItLn
%;hCY62:>hQ\=M#EJ!:O$G)TH<%o$M;Onn6g*7/4&QVe"`5td)3*YXM)bKZD:M9.["Y!q[CgNbA^J0ni-84RJmOA<'ZffsX4;p"Q4
%'iW\H/I11`FP*HWq4,aA8ZRTT=VlCsHYbfNWpu)9p3d=FS0A2tB0.bS(7n>>c5rG[]B>Y"HfPoK;/o8F[g#_LrJe.d[&"LNM'F-M
%\kqRK3sF]`'VT[X4PD!P`nL-Bb7J$$5t";='M?a#0HT<s,UH?aif+Ps]+id93+f5Y2/<h]Ue#?HTQ6uR(5i4R^q7i>6#5^h+Y/?=
%Qq5Au&P,gYA=AP+6IqL2g=Ckq$8bgil7fC>(V<5OZ$0amAN?h:mh\EU.nLls?@C>]F3*=:Z"WbffD&KqI]'QR'F%sGeOJ-tTXJl>
%I@ruV<1F!:pY%/g@i'E-OAb42g;M-0)b"lQH9CEOSp$u_h+Z!RKt\JR:@]M_S)BeEqN2WqNh9%39`-*MD@9<2/o92PEB#($Bi7;<
%pdRHJcGp3o[P.hkHq'UC/$c+.+)H,2im@e[U8AX7s02tCd1<B"_DbtaWi=6._@dftOXZp4;,E;92VN*n]XkKk%Y67!NCJJ&O7b]&
%%Ferr/b.0P'I^&uj_@;%W@8L?MgsbsOrQ"=8n16X<uWeU7#F+e3&],[GW8r]90QYTmpH.t1+<3XSK>ZDon[l(MJ*N/oP:77W:8c5
%n:0j&UIY%$+:mL'&Ykq2q.%'K?G1V:L2-LKX[A0n:"+2YD^)#+Ogo=oU":L/W@1?eLthF;<cTKH-)T:.WlJd[P4BnsaAt%C$kV#&
%@jKcQ9K@`!%jK%sgO>b51Z*.-Ff.Z`5>26lZKu`ZFd9#4D+6j!.C(Wm#V)b'8W0$U);iP*LTJQWbM.=r>Q&M$E[(#afpb1'!Kl(d
%^/m:*c,kV/k%H(&]1!pYH&U=</Tcg=3_o)c2c]a`l]T/:`ZYVKd4h(!83.5\Rc\&"3J7am*f0'F.e)kgJYlI@C6`@GIa0kV,md,q
%LkiDpbe-(7lJ-oTiMT/\gl')&2s9Q$4J(;Xh!MWF7^?BbUu+"1m.mX/cD'AM@7h>4*&J[*FZ#Fpn:i./cQPO&EXE88p(h7b':ETX
%c60<c#H901n"A^</m#H\W/:?V_1S2XEY/K5;#704G:LdDA2QjSM(Mg,C.f)`!B7!h]Ma8eE](>cOB]JQ97B,T9@Gl/d[<sT1^V-0
%!;%tG6pptR#:\pmoN[e9Uf&A17oP>@2[k-2i`AX<nLe-h9mr'"5ik';i,#*@c,]+tg5L4ZH-KmHZt^!;2SsoF2%H#;;<K1I>NEX2
%8eS!>$;Hbp*YK&sR_"^+$/P:e3UQU1g((TTC9LV-3Plqh2D$cqoBD/)`[2LYl.Zc35D=hBnrVGaPStU\kSljioX00e8l;I.3JE:4
%DcRoiS(XXVIQVs9;urb2@:j3X;gI7\DcMuk'`6Nk=j$UNTsD/mZOS4,a%3?9jomdkcN-@L2Vq,RSXSo5'kDMPhCYKj>[Ag-4m;5Z
%fAc=EHhDh3:U.m5/JgoSUe6@.!?)j!:<k])f$+6qE[qEa6Fo6>('ps,r,@qr_+$t<-o!#2puYZd\;]goDlNj([Df\b[\B:j^,YD(
%O0'7A7_L"\Gm[B:$q:CSJktg(T6!+jn<]iHWm_A"+NB1,dns.VQ)eMTHGO<rEPE6oej`Zuq_1'+eMN^aNi5[pXuP^t[*LYu=FMm+
%Z2H_.HMMG=o%%6)]u`Y7:3MN\'M$#E^?sD#`a`n5&potGIAj;cI=j@96mKXn<l9ZLa#Ch["'`.R\5Lf15fe;L1XHQa),9#nUW#H!
%,>"`9hD\Zsp<M$nFKfFHGb;o36qq3,+Ks(/3(h[fKUesP33PJu:DlXPbKJ::TMQE<4;N(7VEc4C?(;#R.BI#<YZ.<9-eUkKLiG)X
%R"Ln1o9((q+)EjNWc;VADJ`6EVg*N4=8>^Sll.^cJH)Mfqj.Y_GH'!%EDH0`B4$ml&:;#R/ib4&fU;sj72ENkjAgJjmk1?Lhu)F)
%rP7'N2$WKm/gO_!kB[D3*226]E:V.amDsm5#i-O`WheF?ehf+`n*HL<XdDBT4'sm8r;9%%Y0I']=emJ!Jt4ukZs/TVfU4U%22-]l
%o/ZSh&[:6\8QRH,hOVQ.Q1uOJ3JV/gjg#+mOdaXL$sb[E#<0NYd7PmgHemBL,.*;%j([dm[9ngH+M>/"V:;%Fd8:._q8)&)%cp6O
%MMP46K;q1diGlB\oq.`aQ!k0k?-,jROb(5)jlb&-LW@]-8$5k36%W/<Bo+%'W'QMZ-hlVh_N?9)lB+)XJ\cgU/VOFV7OE_31p*L1
%AGDBUj[fRs:YSiPEqM(,R.BfmQ/.ir"pB"Dhq8oO51ME:3r;fk;(G.F5[.8o)g*7Q%3--5rEPA[%2&J<$E$R]'G<"Jf(VXLX`'a6
%[8q7@I"[c#3YO55mp2$dh/LfNS=p09)P]ZNrau`g%Em.65RtL'OgVZO!'K0:>V/J<,Jd#]b(b=]E)a!`J%n^2g>9A),VHdAERY\i
%J4ZtHL=FjYf8oT&db<@)*M1.m]\qXB"-o6+bHTb3XG+!LfkG<`,n#Ae3cMf(:oCXjF2i.bCH$m8d+)&>NNr-Dag>siJWu1^F?g$Z
%`4&>BH1#jqd_lHq8M"(+bqha<3gP28\0VD-8_^m'ebNbLm3l_kis;U\@9?],6$C?#Q-,RC[29;(LPoap6XW#]Q9KSU66@utKfMP_
%",0,LFb4#7SDK8+P/fT-DP3UXm6aeleK8(FCGnoIqR?du[gHj)&PGGpXPPI+'dS!l0rUN"h!"gd4m#>$.RsL,%cGX<\fEs=K@aS,
%E!<TiA'6!LM@pn!"RIqd"$#&4g$?6EB(P-j3^psk0U&*M]H;m.YoUFL)(rNAf09>f-t\QN$gIi8Ni>[Qh+q+&jP=7BrD^Y>?\Q]L
%@U$BYC$2(?3M,@58'D7S`rc(0r/Xm1DPH,6eJs[+^&oF7m`T8s,D]*l"LY0M*hb\K$>l-7IC)AO\T8bc!((HE5qFV&qabb1WPlE1
%.N`Y>?qdBX<)Ng7;n+o,2T"j9=U-L>&*U5tH,4bqBKHmr#/?Ib!#V_Hg;L:8EJ]WaLWe?cE_RutF6];=':j;47RC%AVe.\n'jZZR
%p1t$oAK8mLb%e//Esf&JF4!gCMZS(e(a4m7i3Au73hf'r.a<uis7V8%NfE+#5aZ;LO2QRHC`U>>,6K7NZ00^-<E5`i\!ONRVB"R2
%^/QYJ$R'1lV@pQBk4Z;hdkZMLq(sUl+8Ri$dIKhc5kW-"^>g!nYfKe,qq10c!3I\`MDp42iitq(hkA_in5WJQ7bn>9<I>P':#3O=
%F/S'O171l5Jl^_D/sd<eJqFGA4d;oEk(3a4EGS."C(B`Ba^Ghtr.X&#COt0%eT(TVHK52P--40<m`PFOMpcK]#66Cjl[X>-b`7R1
%_mHar./o(=Ui<"Zo_r#gr]*uEDeiX6W_?Fm4NB^;1P-Su,kYgT+;$dS.j"!fMp/[*d$n9kZ6mZ<Vi,r>=>L"+RP58el)>9"7?Acn
%-*ksH7!N,jd:)[IO_nQN?-$bY$>BIe?!D*`g^I(\-WuTY^^"GjCV'!nNIi@"irSfW=0g?(HO3K6b0p.*Br=%I(t_n)kpd8ZC/dNk
%1'I_`St$WmH:Zp7W_T9GgG84Z=%SL`:"'<GWW;6!$)JVH<JM6e+Rt8DY`]j1T+<<bU)?qNFFXSM4rg9k$Jde\2jH\uJ6'%,6rcS7
%e700c)9PAQ)?^fJgecTomO*CABjXaEMu9VjXUS:l[23Ot%eA?3=,!Fd7$=#KTEJC0qt,GoS_gk$L4$/V3MDAlJfGJ2KAm*JL0X'!
%%0gP#C-Oa$*VGD$C7GTG+t,Fj3%m:]U2@.Wf:,"lku<]c*F@en,Obe,][&6tG-g(K]b-+kWM[][4aH6d9N7o&foGp^W^H3ij[Ec5
%D]L>4A2#5-e[R3J!i#mj<1A<N=BgicaE[)$@o,Y5I)M0J%aa(;To?8h093a_@uq[)g=:MFP`R?faK3Fs<ZFh)apP)P!C[gD@m0DS
%.QM3Yfb<9o*5lQ=0J""P9'PN"[1h^9K'4]+DEVo;2/F]Fl;oEYYAPr+8[.V[+OaOQH[Tt1-dpFumj_3o%Oud>9&o3[e'"/8W6L=%
%)U*(sC.BDD+Ddooib08uKt$W2X!sp[@EB3fK2l"gk`dtq%#1Y;b/[NV2G5PUL-]V9fIrPko&;K<WR_hDjugkG%G:T'A4%>(qfntU
%c:"%IeT,IQP7\l>'#3mc7*q@"nob?]!">0H>bmY/[e@ND^'bY7WN@41lU2/0Sk><t*,AhB+l9JFB9@3^T2W9Ak$!8H-8].BhpMb4
%aeToI9joi/?@?nn8S,inmmVdaf!=_Zs(G9Ln#.Hf_phELX@ejl#F$H%)hrlmUhHbl?kNlhKM1RroCOIC%t73/i&]AEN?XB\(XE1R
%dr=[h4CLO1bGNM'r\`6]Y1fe)S8?/Q3:1_W'K--,rRnTD0sXSM+mA+U8g)T\q8_h@K[15gqtOh4`!nXrr-j\@bmJ:[k#gI))lMX_
%=l$Ni:a$Ba9\u%T)=`P7]mSj<8E$>C3M3j?V-]nupYu['p)q#:km_XchGhlJ"O@G:+d!Y2J2u_H"brK=c,EP,"EC_#;49huT1uYj
%:+8(mMmudu!#Mb[m8T:H=8RVH!pi![rBOq].1.AA(r/Z-d2jb]8X'Nd=7"u/66%fsdrQ,DQn\n=S@o^!WbI_dW";.YM+OMH3ie/!
%pZ$L?\6H]^YuiFnm.T&Dh-imJdi;3Q%"iOt_6Y#1d0s%+2_Tsjo2Ol!q1I2b8DAi#nEs.u;&#5.5n;Wn[+;rsqZe%/.Pr'JNFi8h
%KqDRj/(b_lri<NTbha=s'm;amdgR<caXT.GEVJ:,;A6g!aMJ]=Z^>u`No]#tZ>!mJBAeUh*s]\9P$XF2jQrJN&T"IG8SNtOhe&6(
%=iDba0Lb,(LLp#aK^IEOiH+9$aTOt)G=`\lAW4DEV3'F=R%3'OK0D6FM?M1MG8sSdota^dZ;8>'GeTK/p2Bf4)CQmTL^&pb:d1)l
%PtBqP252)mJC'56$J7QGA_;AB\*P=IX,2Q*e1-Lgj[BY8lt3CR?gQEjO;FugXqmfl8=1BiX4HX&=5s%3F4QIAJfF0/E[T$C[qe^m
%l-p\KA=fDU;'_GJj:Z;%rD7Wu-pfM6hL6.g?C&5C60kq6c-kJr>#[k/mEek!Y*U/5SG%g"<O?(cUE3N!q0WCI1\&U:rjXD\l4(#Z
%6*eM(Eb,Je628d5WVB9N'?QQYb1tUUnRuGk&Oj!.FbPlQ/Iq>&BrWdf)E`2MCt.Mqem%d21F"EO$d115QRT#!\b"qFUE7IL8cbcf
%R_V$Sl`h>(a2fO2g_BV/;+NsJeA@&DnqIVjqHV)2eF6BnBTn%&rTX-kqpsqs>mkNjUoYS'EM!IhBqBBI/VJECnppNsG:bua#Wf-f
%ri."L8)lf*n?2H4_q@G!YE%-7k#"lE/o0!9F_ukCW-XhGr8PquMs3T'2ji/hhJbl2RLh@#9;^*^l;0mm"lTKu![?B%K',G&gq61`
%=V$U^kI]:/[8Z@D)mIF+s4f#Gs86f@QLgm1[#;uZD]R.7(LrMZJO(:*PTA!.A&kMK;OT9[g^MT"0n$!GG!?de^NfA+9AeTMrV`rQ
%UOGEVmjIHWT@Z*<=dba*jS4mY@&!>WL!:PF6g>F\6NjmcnZC^oOi-,(Fs#I6D`VgiF(2.b[0;Rh[$#R12WqUk<5uX:n)?"8j@n>[
%`_VXqHWQJ/(QEL>/DHE98C'`PmMZ=cqup)nM/t6RK^ZK;T6mD>/1DUc>n_BLQXMae8pR+lK(.)D(PCC&rZTUJSbIORO)D(dr`FZU
%I,9)CIP]i^<)hJLq;];E2l((6R]0nD4[7o2pZH_<jkeeUY#8u[6b\roL4#PsbH,"SnR7CFa8^.*Xtt;Ybr=t).U@8J:Bh2Vgj7Q]
%HJ-5\)uXdqDV!gjm9ZTC7WO[Ke"Vs73h4q+XT0M$"d'N-XX*4oen]1EMFDXg=+t^i_%F]cf6I$kGAI[$n;p0bQ:*u1FJ*[4J2C!N
%_>hl6hSsQaBqMc$ZPdlBO+poZYqbYCnX:Z>8bRh=bd5njO8M86N/?Xmg\/'T)kFB$#(:5L[I*GbWBJd\&FF5s6'],uoUMG]Vqt@1
%4H0qC3cIjLo_QbF2T^\N/W8,89cqrU[c2;`ObFNU[Gf*^fB'VRj0qs-f8H-4?H2Sc\0%U-j%S:Qk&nsf(?^Ta7.6K@-Z?2LgZ*/b
%IGAKXp>Pm3qJco#D"F.6E8?%ObhB[hO1hF1`8U'n54,LRfnj*_!<h9MMb=c]?1[i#]DC<\6Yt3J8j,CG*nTe(!0L[M3WEtd-fH[W
%P5Epc[="!*po!/)BKE7D2!=jE1pK2oe=82PDIJG9im;0j.Piqpert^$:Sml/m6CPj_)aZLrmFR,:0fh$`o\m'LKbH-Am\:&@4<((
%ICK:8**Z;]T"D':Y'qCS"2)UQ^8['%Y+PkqO*G[tn!EG(K`(@DlhfAp"Q%AdA_+&Co7a2mQW[b=Y1%SNa-U@^^Ik-#@,4l>bm_<U
%dI67T^0-Da<JsNC_\Gt4iJT1)UG(CN(11r@psZ@RK%I.0bi*CaM9FFW2Bk`.+;;"!(%aQu,.t\VjZHXlB'^e<DW.2,o.7BIm]Z>/
%fSnei"-mD$`P4*6.!M8AW&?C198:o7Zk$6T9qUl3bkKQH2%&/E--eq3>m)#C^%MW7G4"nG\1U-u2`'o8mGk#!9`3`;>j$cg<?Kn3
%DdAZI4A.\e_j5=TWGE&<2U2;VR8h,&I5l=MiVAZLQPUflOi/&ErD&ZnQh-PZi,>\;9a7_5/_f=SHHt79+6i##>t@3&T3G6<iTS^a
%g-uh:3bS9"jR[jB/<PHM&`EE[W\Je,.X_dNTcXRNs%o!8Ir9sa4hWceXpajtlb!PU%^Q_5EF"<JR@AC6pMNSfN8cV:b=(.0(UJAB
%88Q/4*I$>+f4hhfWqB9q)K?JmNn.`Bb+@#Cb6[hj[En:=<"Esl!'J`.>b,qlg1JT7-YGr#G#BRi7jZ4qfi3i&B@V$ph>.cSG"IW!
%PY50t(D"J"PT(l6T7f&B0<RX724D\&d$k#UATTZ[VhTtg.$7bg`t@Q/A^T);bL+9."Z6.s-PZ^6)7sh0%:+dC:7Ab4,LLFk/B0X=
%`u@I(0:8D#(*>j!=g.lH-s8[-HkAJdNa8WuZkej12A"_:L]D/&jO/Yi9YuQu-F5,,/^.'=`N2tV\k=;_74tO9`.NS.7G0uN>>;8\
%SrYJ%.mkPd+b=#tVI+0af05[Y]KaBdA4dFk".Q$<<0cPIe4r_Ljloa.igi/&A\rF1U%5hP11)`k?WECMTaZ10`*QG06UP.J#jaek
%p?jJB#I;eTZ_0Y$72@TP;64eD.k1ls?UP3b<Rikj^aZYHI?fW8[.kIb6M)a4Vns$>JLXN%GP7B4ZE`fP_=F&GUJXj?3N]rDW&geL
%//qW.s.A\XQCh@Y5mf:[a9?23PneJCMYMAbUUSc_,Glfr?hcDkkL`L9:$p]*p%%f!aPujiCMtfpeZU=sF^la3\+Ji:5\gG$qr`1:
%HTZNn`jbgPMrco`OlJu5bmOC-UM*hk@rXSn->Cr9DdRQFSYZuuCWh6N_L'bWYNJs:1d%seE'oWlB$.<D+YBcWkAE5tq.m.)Z<OZ&
%TA&n_4ZC?(OVglr\6m\U7jq'ZM%fjc^4Z=!lUX4-1T3fYP8%'I*n<A1mBKP7?4Ua,M0YpCTM196$R'[?XYL]cB&@mtWI6C$e9`-j
%YaFWP3OM7d-j>&N#upa2*:@Io$KI4#:4O?Hq;sL5GT271`*-O:HdaD\XdnBp>!-r2`4RH*LO:%Z8kc?ZPm,U?IPs&mlZR7Wf-e4[
%k-d4(o(Z5X'6<]?q'@%)/@M@3T8s@V2ko``1:V7&"'#2/n&Joc^_lO\"!Lh[@2+IHd/iqB&6QA?"Nto+V'FW1X,@0Y?1#O"Y+tdp
%W`Y01OUYSPKrdo5'N.;q2ZQPF)5*C8:XDb-H_2!(LkCEiF5O$*`7sn&p_NcpF?A#\efm5GEeX!5.H0LE4mTQjU64TM#5;bpP:ki'
%j*f)FQ5@UKSP?sY5Y1<Z'%Q5"o$fmYL*d9KX"^pO)?D.O.NC8)TN%n993emJ>"jLu&We6M3.bi/1+2WgE($[=lIeJWpW](QnI2;0
%p\oWZ%HaO8<#(0OC;n1\JTbM$XDF>C3ahs%q8K6nmWZij-n*/,r?99c?Aa:gDlk;R<:$h$J<EiN4ma_Efr"d9;A[0L;uAGZAsIZ2
%pARuhI#-D2>04`,&aAPXMsdsMc9.]/pA.fRVjcYVN91QXkOj8(r/>`B_e"Y1VO!qa5nobYg!]*^cRV'TpARuhHq:HS[Iu:#*^?3#
%q!P[KqjD6'DaubWgs6#^"`s51^@gh5n<6`?*Z_\EW`s7\jsV(ErZ@o!C!q1&+7DEO`J=*>>:]"%qk$(@Un?OgAj:A(p&4)R]=kh2
%3nX2YGAY3o<&%"pWP1`]&$l\p+AmM-/RQbiQ3Eb)4GHYth(Lo0r40#I:tK"@4[T;Ko\3Xt/MtJV:;p_0Y29_NQu,M"q"nr0n)r7O
%ih>U_$q5T2jG>;qQ49[/`XKLRlJ?e`p?PL+nJT%5ek1Z*j=YAcCpNZqY3]f(ID-^@QU31=fVk=)`QE7;Yuj8c##=P"YRusNq5HV7
%D%BDAgifUQhLB94&$b]TMK4ZsGl-_Bh,@r-cWkgF4$'31C)4b88iYf&IHtnWE7)jRFP3Xs0tJ@hZ!4=)T@[R$qu*Fips<+*h7ZP#
%.JKHa3_&l!RJk@;f:Rj6l8,`f'8T(paObX<?(fI6YbRs'[1l((MbK@CmN(*B6s]`:JB.k_J%Yd3Z9Rs2M>Xt#<8R68T%D`Cn%7a1
%Y5Q$U=$%Jt#UE#4E$$&q[gT.C+Y^3?3b`I(-#W#DeF_:5)Z.h7&)tl[gh6JkVj@,C=&WDk<jmf^ocN(1-BeVs;th=D?H2N'EUru8
%i$fWqqFPG%p1=?ue4S;)Su:Wl4Ut[Q3@Wel;Gh3%UIe>gFY#bdc6:?$nbdH(:%;N&qe3*h%(uJY;>kQ#^['h4K9q_U:)VT@$L'3.
%:rtWU:k*oNg<Gr<ZRX*SRK<KG1U`:]oPVNb045(^F"<N!QMaTu5PNYAhpo>WXUnIHs2Yl)n%"(3#;7=4+0eY,HB&C>9[;8Q<XRo"
%l>0@6a!5cp@OfmDG%D/mh*eG$9b!D<4G`iE&)?4.*_h^alJ8pMATsuKO&3^b1#f*K59@IrjEAHZ^0BuYN,aq(JF_3Y?,@fK*4n80
%iWGT;Q'e.HE&;)h=.UKa3O\5-O$,A>=67t[CW1@6Wp>^A,h#(EGO4k@AH_ao0I/DBb*[Ru\q8hn.eG,&R&f9=0T\,2Lc586fT_9R
%q]ADL`u"SsorZ'F01T#!M3"n&[pPBj*`DC-(]1I1?ggKQiH=)o%\eVNS+WaXg%e@Pjs5a6,n7:T>+uKNQ.YgqWn<ig]DLE^QM:UO
%]JZF$SpTJeX3CRhmlD%V>l/gfdSKo-n,Metrhodmr?)(8TE!60rpp*foj<4DiGA:Es6VK>o[j-A?iT\Hs-LM"leh`u5Q0>D^A[`d
%0E:srs75W.q=hZ'5Nb8Er6rF[p##cI?iK`%0E:`qrQG46$SOYLpkO@oci<>2r:b^8rr[:]Asi~>
%AI9_PrivateDataEnd
