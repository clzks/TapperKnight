%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: bg10.eps
%%Creator: Adobe Illustrator(R) 17.0
%%For: Krol
%%CreationDate: 7/31/2016
%%BoundingBox: 0 0 900 481
%%HiResBoundingBox: 0 0 900 480
%%CropBox: 0 0 900 480
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 17.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 17.0.0 x256 R agm 4.7700 ct 5.3328%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.5-c014 79.151739, 2013/04/03-12:12:15        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Web</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2016-07-31T22:47:59+04:00</xmp:CreateDate>
         <xmp:ModifyDate>2016-07-31T22:47:59+04:00</xmp:ModifyDate>
         <xmp:MetadataDate>2016-07-31T22:47:59+04:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>140</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAjAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A63m0eOdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdire2Kuqvh&#xA;+OKW6r/L+OK7Oqn8v44rYdVP5fxxWw6q/wAv44rs1VfD8cVdtihrFXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqiPqf8AxfF/wX9mNpp31P8A4vi/4L+zG1p31P8A4vi/4L+z&#xA;G1p31P8A4vi/4L+zG1p31P8A4vi/4L+zG1p31P8A4vi/4L+zG1p31P8A4vi/4L+zG1p31P8A4vi/&#xA;4L+zG1p31P8A4vi/4L+zG1pv6p/xfD/wX9mK076qf9/Q/wDBD+mBLvqp/wB/Q/8ABf2Yq39WP+/o&#xA;f+C/sxV31Y/7+h/4L+zFXfVz/v6H/gv7MVb+rn/f0P8AwX9mKVrIisFa4gDHoC+QM4g0TuyEZEWu&#xA;9A/79g/4LJsbd6B/37B/wWK270D/AL9g/wCCxW3egf8AfsH/AAWK270D/v2D/gsVt3oH/fsH/BYr&#xA;bvQP+/of+CxW3fVz/v6H/gsVt31c/wC/oP8Agv7MUNfVj/v6H/gv7MVd9W/4ug/4L+zFXfVT/v6H&#xA;/gv7MVa+qn/f0P8AwX9mKu+qH/f8P/Bf2Yopr6p/xfD/AMF/ZhtaVPQsP9+v/wACf6YE0HehYf79&#xA;f/gT/TFaDvQsP9+v/wACf6YrQd6Fh/v1/wDgT/TFaDvQsP8Afr/8Cf6YrQd6Fh/v1/8AgT/TFaDv&#xA;QsP9+v8A8Cf6YrQd6Fh/v1/+BP8ATFaDvQsP9+v/AMCf6YrQd6Fh/v1/+BP9MVoO9Cw/36//AAJ/&#xA;pitB3oWH+/X/AOBP9MVoO9Cw/wB+v/wJ/pitB3oWH+/X/wCBP9MVoO9Cw/36/wDwJ/pitBTuILT0&#xA;6RyvzO3Snv3GY2ryGELDkaXEJzosZuvLV29yZl1FgnI7NUNt/q7Zq/GHVzZaSV7SZBp9tAsAWed2&#xA;YAUYjr27A+GbDQ5TIEdzjazCIEeaK9Cw/wB+v/wJ/pma4dB3oWH+/X/4E/0xWg70LD/fr/8AAn+m&#xA;K0HehYf79f8A4E/0xWg70LD/AH6//An+mK0HehYf79f/AIE/0xWg70LD/fr/APAn+mK0HehYf79f&#xA;/gT/AExWg70LD/fr/wDAn+mK0HehYf79f/gT/TFaDvQsP9+v/wACf6YrQd6Fh/v1/wDgT/TFaDvQ&#xA;sP8Afr/8Cf6YrQd6Fh/v1/8AgT/TFaCa0wM6SDWfN1tpsUkn1Se4WMkFowCppt1BO3zGa+XaEASA&#xA;LcsaOVWWIj84Jzcj/ccn1evTmS/8Blf52fcFGGPmzTRPNNtqojpay25kBoZBRaj9mtev0Zdh1sZy&#xA;4eRWellGPF0TsMP5R+P9czXGvydyH8g/H+uK35N8x/IPxwUni8ncx/IMaXi8kq1vzVpGjJ/pRDTk&#xA;VS3TeQ+9Ow9zmLqdZjwj1Hfu6tuOBlyDErzzv5gvgfqUUWnQn7LEepKR82HH/hc0GftrIfp9P2ub&#xA;HSx6sUvPNnme3JlXUZhJG9ftVUmtPskcSPoynFrs3F9RZjDDuD1HyV5nGvaHHdyRIt1GxhuVUUHN&#xA;QDUV7MCDnTaTN4sL6uDmiISqk+9Vf99jMmmrjHc71V/32MaXjHc71V/32MaXjHcl2rTBjFGFC9WN&#xA;PoH8Tmu18uQc7Rbkmknc1QfNj+rNY5yO0O4X1CKBgwIofEH/AG8ztCanXe4mr3hacmRf5Bm2p1nF&#xA;5O5j+QfjjS8Xk4t/xWPxxpb8mq/5A/H+uFF+TDNe83Xz3zWWk8YxCSJbigarDqBy5Cg+WaLWdpSE&#xA;uHGeXVsjC+iM8u+aJp5xYamqi5YfuZxssnsQNg2XaHtAzPDPn0RKFMl+jNu1OphWnUxWnUxWnUxW&#xA;nUxWnUxWnUxWkFrF79XiEMZpPNsv+Svdv6Zr9dqfDjQ+oufpNPxys8gxuWXhGOJ41+yR2Vc563dJ&#xA;TJcBb5WEcQO1X9KPlv8A5XHllpJpo2tVS8nt7/8AeSN6bU4sT9nfYj5HIxPUc2R50eTO9Nu1vLcP&#xA;0kX4ZVHZv6HtnR6bUDJG+vV02fAYSroi+B8MybaOF3A+GNrwsX87ecYNAgjt4qPqNz/dKeka9PUY&#xA;fPoO/wBGYOu1fhR2+ot+HBxe55u1zE5W9mc3F2zEzBySWJrv9GchOUpEknm7AAANz6xK6lY09Ov7&#xA;Van6MgIMuJJdRkAhC93P6syMQ3WL0H8mS5tdTQj4A8LL82Dg/wDERnQdky+oe79Lh6wbh6PxzcW4&#xA;VO442tN0xWkl1KXldsK/YAX7gT+s5pdXO8h8nbaaNQCXV2p4ZiN6zRbsxTg1pxYGvsdjl8JcMwXH&#xA;+qJDL+b/AMxzeusspddeZdKtJnhnuSssf21CSNTav7KnKJ6nHE0Tu3Rw5CLASS//ADT8rWZKvPLI&#xA;w7Rxmv8Aw3HK/wA3j6WU+DMczSUy/m5aX6y2um286zMjcZ3KqE7cqCvjtmNqddwwNDdEoEDmlmmR&#xA;hbfn+05JJ+RpnPLFUvYy0BdSRJH8aMNiCPDEGlLM/KvmX9KW3oTvTUIF/er05KNuY/j7502h1Qyx&#xA;o/UPxbUbT7k/8xzPRZcWc9zitl1W8T9+KN2jU9ThXdrjjaKdxxtadxxtaYdPczXMzSytWWc/8Cnh&#xA;nJ5MhnKzzL0cICIoIG/l/dyMOgHFfl0GQG5TI7JRK/OQsPo+jLXHV9UubaOwW6mcIFpTxJP7I8Tl&#xA;YNFtluLSGHzvr5Ypps31OJV4NKAGkZewPKo+778P5iWM3Hq0zNiinOna35rjRZv0vMS3xUeko39m&#xA;2+4ZR/KWYHaTX4YLKNI/MFg4ttYAjlKkw3MeySEfslT9lj93yzb6PtaM9pii488JHIvIdf1a91bV&#xA;ri/vGrLO1QOyoNlVfZRtmBkynJIyLlRFClKDUGRQsg5AdD3zGlivkkxVW1KKnwqxPvQf1yIwlHCh&#xA;GeS4lq39gGWgCIZcnp/kbTpLLR/UcFHum9QL0+ACiV/E/Tm97OxGOOzzk4GeVyZxos00rvEzF6KG&#xA;UE9ADQ9fnmxBaqJTX0JPD8Rh4gvhlbKjRxtIwoqipORnkEQSyjhJNMUklLu7HqxJ+85oCbNu0UnN&#xA;EY+AOBBS61k4TDwOx+nLZDZx4GiznTGe4so3AqQOLfNds2+ny8UA42XCRI08/vLkS3t/dA1DSNwP&#xA;tUhf4ZoM8+KZPm7nDHhgB5IS8I9OKNgG+GrBgGHSnQ1yu2ZASi7FqsypDBFFIE5SPHGiE8iQAeIH&#xA;TjleUkgOr11AgBXtNR9GL02XkB9kj3ylwhJe2qFnWqUjBqQDUmnTFPEh01G7tb0X9mfTuIm5oOoP&#xA;ireIYbHLsGY45CQRb1Xy3rdrr2mreWuzD4Z4SRyjfup/ge+dTizxnGwnwyjb2dbRFaVSeRooFO30&#xA;5ZxIMCEF+moq/wB01PGorjxIpfc6/pNpbpPd3SW6yV4o7DmaGn2RVsqy6nHD6jTOOOR5N6br+kam&#xA;5jsb2OaQf7rDcXp7K1Ccji1WKe0SCk45Jn6c3v8Afl9heCSG1C8FjAZpmI7KtdyfDKc+ojjjZbMe&#xA;GcjTBQ5ozftNsPlnMO4QWoNSCniQP45KPNhk5JbljSx7zWLkvAxqbZFIXwDk1P3jISClJba5aAmg&#xA;qp6jKpwtiQmdvrhiFEkZB/KRUfxyg4Ciip3mtNNSpLsPs7UArhjhWkbP5YvE0HTdWdkNvqJkQcyI&#xA;+DxlyAzMQvxpGWU19utK5x0kuATHIqDufJJ1sudSjbA0rUEZinJXNNoiLQ7qQclRmXxGwyJzhbTO&#xA;HSdKhsH+szOb+V44ordUZI40kcLLNJI3En04yzBV6mmZWmlhJuckCW+70y3uLa4iD28iyR9AyEEf&#xA;LbOjhOMhcTYdaQRzR2mXAt72OQ/Zrxb5Ntk0wNFk9reW91bx3EBLwyqHjYDqCK4AbFhvjMEWEu8w&#xA;XgS19Jdmfr8sw9ZOhTkYh1YyDUA+Oa1uQ6zc459+lafIjbJ1yahKwUrRqTsPH+Ay3o4oO7JbLWja&#xA;aPeGtHaImI+Eh+H+OMM3BGQcyMeOmIVpahe7v+AzXuc67as5HZaAYqx9peWq3C+wA/2IAyOQbB02&#xA;rNzKvlDiqbSkXCRbUZGavf4So/42w1taa2tUwIW+UfMM+ieYIriJj9WmkEd1F2aJmp08VrUZtNPl&#xA;MCG+Jp61r1yJbsRr9mEU/wBkdzm8Y5JWWO63qY06waYANMxCQoe7n+nXMXWajwoGXXojHDiNMeht&#xA;FIMlzSe5k3lkf4iT4CvYZxeXNKcrJdgIgBJ9TtRayrPbuY+Tn0+BKlStN1I3HxVy3FkPxCCHo3kj&#xA;z8moaJIuotXUrEiOU9PUU/Yk+ZoQff550uHXjw7l9SjDZ25IXUtSnv7gyyn4R9hOwGa3LmOSVly4&#xA;xERQQeVMkFqR+FB4kn7snBryJexIUkdQMsam4TE6j1UEkbikiMKgjvtgkFiUNqHkrT5VaS0doG6h&#xA;Ptp9Fd/xyoNsoDoxW60wWaSteTCD01Zg7qRE1BUUl+yK/wCVQ+2XDFfJiMd8k/8ALfljSryws9Tk&#xA;la5juI0mEQ+FfiAbi1Dy26HcZXIcJruZ+FRopr+ZtxPfWWmyxIIrOyQwvbx7RoTQIwUbAUHHLs2c&#xA;5APJrljrkweyuxF8D/YJqD4HMPJC9w1kMog1uBkHNSPdKEZhHGUWtvdRtJYGQKWY/ZJFAD44YxNq&#xA;Slmm6zc2mrWv1NyayKsqD7LqxpxI79c2WilKEwR1YSgCDb1jOodet/KTXPreh3VhM1ZNNmahP++p&#xA;SXX7m5fhmFpZ+k30Xs7JxQMe4q+uXhuLsgHavEfx/pmHlnxSt2p22QM78IWPelB9OVAbrM0EBE9F&#xA;kH8y5YQ48TzQTnjOT4EfqGWDk0E7q19I0dmsdf75uVP8lf6nMTNLenZ6aNRvvS4Nutei/wBcpchp&#xA;25MW8TX78VYzeSNDqkr+Dbj2IyRFinUagesouSWR7ZpLWjSUqik0BI34k9q9Mxqo0XGiBe6U22oQ&#xA;3WpWV7GzKswuLZ4GI+BkPL4l/ZciPcZfKBESPcXJnjMYGJ6Ufx5bq19rluJGtYyTIW9MlRy/YDEg&#xA;Cpp8QFcceE8y1RwmrTXybpBv9Xjlcf6LZFZ5q/tFTVE/2TdfauZmmxcc0+b0l3Z3Z2NWYksfEnN2&#xA;0sO873TLe2kSn+6Uy07VLUH/ABDND2xKzGPSnK042tKbjXp5E4xIIierVqfo2GaEYg5HElrSNIFL&#xA;MWAFFJNdvbLaQreVZ2TzC6L9mVXVh8vi/wCNcyocnIxs5yTcowTeqXI+wDRckRTGJtD6n1jHz/hk&#xA;oMMiXyf3bfI5NqKnbN1X6RhKIlN7Cfknpn7S9PllUg5ED0UL634PzUfA/X2OSiWE40xHRNSbytqj&#xA;aPeHhpV1Iz6TcHZBzPJrZj+yVJ+CvUZkTj4g4hz6/rbz6hxDn1/WmXnzzVodjo09vNeLHfSIJbSJ&#xA;Rzf1Y3DxckHRea717ZVgxyMuWzLEDI7DZj/lzT9Y803bajLZR6Jo0i/uAAzySPT7SKSg49+gHh45&#xA;LNCENruSMuGA2B3RmqeXZNOu7a0gv4bq+vHEdtYwl/rLE7ljHT4UUbli1MrjhMhfRp8AkW2PLGsT&#xA;aiNNEsUtzuZkWQuIlH7UpUNwr2B3PYbHLoaCR5U40pcIsimYeXfIltptwl3dS/WbmPeNQKRofHfd&#xA;j4ZsNPoRA2dy4uTOZbBlHNefCvxUrT26ZncQuurjvMfI/mKbS/MiKCFh1INbzf6zfFH/AMPTNJjy&#xA;EAjvcHszLw5fe9FQl5Sx7dMiXohuUPqMtAF8ByP8MnANeaSCiYsgJ671yZaYnZpIDPdcB0O7HwAG&#xA;+MpcItMMfHOkJqN0sk7OP7tfgjH+SOmYPN22wQ4qQK9cCtSOEQuegwhSaY3qas03rH9vr88sdZqI&#xA;72gjyoQGZa9SjFT96kHGnHCR6zDFa32m3NrBGLppzGG2TlzjYUZgD45fjNgg8nNwSMoyEiar9ITn&#xA;TdKk5vPKQ1xLT1ZqUFB0VB4DKpSvYcmneew2iGd+XngspIhFtE/wuT1JPc/TjhymE7cw4ImHCGWc&#xA;hVRXdjRfc5vJZoxAJOxdSMciardhH5ixSW2o2Ny/93LG0TAduLV/42zR9ozGQinOx4JRjuxie5WN&#xA;UoRWU8Y2P2eZ+yDTxzVCLZCHF8PuU7e5VNPgd6BjGvwV70FR9+SMbkyyx9Z96O8mRPLrXq9oo3dj&#xA;7t8P8cyGcBuz0mgqemFtQunCkBPix/hkp82GPkpan9qP5HDBjkS92Uxvv9kEH7skJAtRISaz1hHv&#xA;jGRxj/3W/jTr/ZkpSAG7q8HaEZZTHp0Tm1vVDK4IDVNB4gf2ZjY88ZDc97soZRzTC71G1VEDHkr1&#xA;5L32p+O+ROaMTzbZ5ovLPzJ85WZtZNDt40nmlANxIwqIqGqhf8vv7fq2WhiZgT5OVosZl60L5L8l&#xA;2kqJqOvRG6NwKx2zltlI2ZiCCWPYdv1Y2p7TEZ8MfpHMteo1/DPhjyDLZPKvlIXNstvHcRW6sPVj&#xA;+tXIUCtKD95UfRmLPtKXEKIr3BplrySK+Oye2PlryOlsUh060eP7T+tGsrkgVqzS82NB75aNWZb8&#xA;TcNTxb2n+kavp1rEtnb28MNqqLIqRqkSjmeNKKAtemHFqzxbHo1nLGex396dJc2UtOMnpsdgr7b/&#xA;ADzZY+0CPq3aJ6OJ5GknsLz6z5puoQw4JH6SGu1UYcvxJyjT66M9VIn6eGh8PwXC8E8XCHj127xr&#xA;HKh4ujhlYdiNwcGLm89hNF6vYeZbabTrG4BUSXbKsi1+x05fdXMbJqQCB1unqceYGIPe7U7qkby/&#xA;Nh9HQfqzMnPggZdwaskrQY1SMWrmP+99P1FHhU0/DMXJrY8Nx58NsQdktgj1icPPAJnG4Z1Lb+I2&#xA;65ojnldkm1jIjcKZvZCoDirL9H35lw1pEdxZckas1vzREWoRsPjHFtvlluPWRPPZuhqweeyHvr5C&#xA;pqaRLuT45bDUxJoMcuriASeQQEN1DdIePb7SnKtXlkJR25OANZHNy6Ols7YtVAQNtv15OetiBtu2&#xA;ZBH+Esb80KsV7oiKvxNfIR32Gx/4lmfpcsZxkb6Obo4Dhnv/AAsphPwAHrlJzxuh30xjMDZH2E1C&#xA;Yydjuv8AHJy73JhJPW1We5utMtI3KsjNJKR1qqkA1/1a5rtZnMa8nH1OSpAD3rfN+mxXemEMwRw/&#xA;JJGPR6bb+B6ZRpNSSamejXDLf1F5jcQsVMEwYLXdKkCoNQdj45sIkHcORjyEG4oDT4Lm6ECkOywl&#xA;o4lDFnch6Dp2+HLDQczUTESa5yrpy2/a9O8paWtnp5lYgz3Bq9OwWoC5XGQIsONjoi0ff3FB6Snc&#xA;/aPt4ZZEInLogxrEMOnKYyDcGo4eB8TmHk1Q4bHNoOoAhtzWztqt7PGUtHURDde3xAHcmg6dsxzr&#xA;PUD3NM85kQa5JBrZvrKExzK0TzEjcUqCPip4+GT0ZM53fn83Wa3MYwr+d+CkctwzurKOHAAKB2pm&#xA;1IsU6SHp5PT/ACtBZnSbe7iUGWZaySHryBIZR7Aimc1niYzMe56TDPigJd6H89Pb23lq+1F1Hq2c&#xA;TSQse7dFU+zE0yWlx8eSMe8uRix8chHvfN2iwHUtftY7g+p9YnDTltywryevzztNTLw8RI6DZ6HP&#xA;LgxkjoH0b5QtYz61yVBZaRxnw2qf4ZxGQvMxV/MWlxzS20saH1JJBHLwFSVO/Kg/lpghJSEquvLt&#xA;7bpHwBllckcEFaAV3J99skJopINatL+AtHPG0EaAGrD7ZJ2C+NM2uhhGuLq6nX5pCQh0RVrrt5eW&#xA;scUr/vLc/bGzNtQMT45DW8QI7nP02tlkgATvFpi9GIJ5EHfvvmCDu2lh1zZahGYUnUj1pBFDUg1d&#xA;gSB19s6OOqxb0XX49FklfDHkLPuZLpNvPb2SQz05qTShrsTXNJq8kZ5DKPJy8MSI0UwNxMYhCXJj&#xA;HRcq8afDw36W5YCQduvT78rBQz/TY0j0+2VBQCNT9JFTmOebYGLeZ7ZYdT5IKCZQ5A/mqQf1ZbA7&#xA;MZKlt5euvqhkmgLOSGVVcK/GhqKHbrTEzWmMSpc3OoizjgklaMkPCqknkP5h4D3zbaaEccOOXV1G&#xA;snLJLgj0avtH1nSit5cW3oxO1NmVgK/sniTTLfFx5gYgtUceTBUiEZG3qRiRAShANfCvjmpnExNF&#xA;3MJCQsMV11zdec9Fsl3+rB7iTwFdxX/kX+ObPSjg02SXft+Pm7LTjhwTl37fj5srzVW69MNF08X9&#xA;2YWcoioXYr1oCBQffl8tXMQ4W0ZTVMrstJtbZItg80RYrMRRzyqNz/qmmYUpmXNHPmt1y1nutOeG&#xA;FeUjFSBUDowr1wRNFBSSXyWzmMNMrgmkvw04j233y2OcjkoscikOjwW9n5d0+6sxwe7+sh5DQsVW&#xA;ZgPlse2ZebNMTIvu+5zu0JyjlIvu+4I/TtWltPgb4oaNRe4Y9MGHOYbHk4uHOYbdFi3siwHkCXJP&#xA;Bj0p/ZlsNXwwr+JRmqPmlth+Yn5c2hDtdyzSjoWt5KCoAban3YnsvUHoPmkaeSbD85fIQH+9cv8A&#xA;yIk/pkP5Iz9w+afBkkvmXz/5I1wW3DUpIPq/OtbaVq8+Py6ccy9Los2G/Td+biarQSy1vVIHSPNH&#xA;5dWlx/p1+bmMlWXlbTLxZT3oGqp7imXZsOokPSK+IasPZRifVUmSwfm7+XltEsEFy6RR7IqQSAAV&#xA;/wBUZgS7K1EjZG/vc+OnIFAJZ5t/MnyNr3l680lNRkt2u1VRMbeRgvF1b7IpX7Pjl2l7Pz4sgnwg&#xA;15t2GMoTEq5PPvL0Hk7Sdbs9SPmEzLayiRohZTKWA6gHkaHNvqJZsmMw4Ksfzg52XUmcTHh5+b0/&#xA;SvzS/L60VoYr2RYzQ1aCYkt0JNFOaGXZWfu+0Or8CQR//K3PIX/Vwb/kRN/zRkP5Lz932hfCktP5&#xA;weQAaHUHr/xgn/5ow/yTqO77QnwZIPUvzT/Li8hEU900yVOxgmqAQVNCVFDQ5bi7N1MTYFfENeTS&#xA;GY3CXn8wPIE5YveElPUW2C20qLGj8Qi8R14cSfmcnPs/PVV9vVhHRyBtB/4w8lf9XV/+kaXIfybn&#xA;7vtbPy8kwsfPX5axiE3Nw081vIZoZWgl+F+JSoAX+Vu/ffIns7UdB9rZCE4g11FH3IW586+RZZKx&#xA;ag0MY2VBbSn7yepwjs3P3fa1+BJbb+cvIqTxtLqbvGrAuhtpaEA9O+J7Nz932r4Ek+l/NT8tXZC9&#xA;3VoiGQ/V5qgjpQhMrHZWo7vtDLwZK3/K4fy//wCrg/8AyIn/AOaMf5J1H837QnwZNH82vy8l+1el&#xA;6U+1bzHpuOqY/wAlagdPtCPBkv8A+VueQ/8Aq4N/yIm/5owfyXn7vtC+FJTj/NT8vI5JJEvCskxB&#xA;lcW8wLECgqeHhhPZuoIojl5hAwEG65pP5k/MryZq0CWkWqNDCG5ufq0zFiBsOi0AzK0vZ+bGeIxs&#xA;+8NGp0U8goGgt07z1+X1rpaWMt7JLQuzyCCVasahTT/JByGfQZ5zMqr4ssGklCAjzY9BqvkpfMl9&#xA;rcusMzXAEdtAtpKBFEKALUnc0UVNPHxzJyafMcMcYjQHPcbudkJOMQAoBNf8YeSv+rq//SNLmJ/J&#xA;ufu+1xfy8kTpf5i+SbC8E41ORxQq6fVpRUH3+eMuys5HIfNkNPJPR+cPkUiou5af8YZP6ZV/JOfu&#xA;HzT4Mm/+VweRf+WuX/kTJ/TH+Ss/cPmvgyWT/m95KaGRYr2RJGUhHMEhAYjY9MI7KzXy+1McRvdi&#xA;9t5z8j22lWGnDVH42MPpcvqsg5MSWZqdqnMjJ2fnlIyob+bbqhLLkM+Vqtv558hxzo8mpSSIpBZP&#xA;q0or9OQPZefuHzcf8vJFan+Yn5fXfpejeyQemCtPq8pFKkigoPHIjsvOOg+aTp5PGTCO6U+jOn4n&#xA;LtpbdWNAMTKltEC2jAoK5DjLHiUp7YUDA9MlGaRJQ9A+OT4mVteg3iMeJNtei/th4ltdHDKXFBgM&#xA;gglEelJ/LkOIItSmgkIrxNRkoyCQVDg/8p+7JWldHyDDY0O2JUoji3gcrti1Q+GFXUPhirjsCadM&#xA;UoU1OWJdQ4qiIkIXpud8gSgr+LeByNodxbwP3Y2qHkjcORxP3ZYCyBVYuZ+Eg17ZEoKr6Un8uR4g&#xA;i3ejJ4YOII4ghjC9T0yziZ2vijYGhIocBKCUT9XP82V8TDib+rj+bHiXiWyWiMKivLCJpElD0UHU&#xA;ZPiZWuEI7JX6MHEi0dlLWq2/HkVIBr45GSJKxhjP7IyHEWNrHtYmUjcVwiZUSQJtgDSpFMu423ia&#xA;NsezYeNeJb9XfxGPEniVoLaWhansMjKYYykq+jL/AC5HiDG2vTk/lP3Y2FtCSxlXoAafLLQWwFOk&#xA;0/QYfTW7NwZSoaTiyBASNx9nllEpZDyprjlBTKG38qMo3J93kKn8QMxyc3cysd6Ng0ny7LGWjt/V&#xA;UbF0mY7/AEbZVLLkHP7k0Fw0Hy+Rvby/MS/1XB+Yn3rwqc3lry2y0Z7qL5PGR+K5KOpyeSaQM3lb&#xA;y5Sqau0P/GVEf/iLLl0dTk/mraBPlmzkfhaavbTN14sJE2+hXy4Z5dYliZgJYOmTQ3irqHwxVSnj&#xA;bZqHwO2SiWUSppFIzgBT18MkSEkoz0Zf5cq4g12uW2mY0C1PhgMwtrovLmtzsfSspmBP2hG1PvpT&#xA;E6nGOZDYEbF5F8xPu1uIx4u6L+BauVHX4h1TRRieSb2GPld3lpAvQF5afRsDlR10SfSCfggxKWz2&#xA;MUM8kXL1ODFeYrQ07ioB3y8TJFtPEtEMY/ZGPEVtZJAp3UAN+vCJKJIcgg0PXLGbsVbRuLA+GAqU&#xA;dGhdgo79/wCOUlqTSw1bSYmVGtF5VCrIyiWvapD1p9GUZMMzyLdEx6hNm8zWFtzCyRhkNGRIVB27&#xA;fZGY35WZ/tbOKKU3/mn65+5NtCtvLVZJGjQyDkKVBA2IzKxaXh3s21ynfJj0sbRyNG32lNDmYDaA&#xA;UVGvFAMrJayuwK7FVBE9S8ROxYA/IdcsHJkTUXXkvqXEj9q0HyGwy2I2aojZQf7JwhkEZBN6OjuQ&#xA;fikcqv0gV/DIkXJgRckFC8gJ4sQPAGmTkA2ErZalqk1qMQoVKbUwMVfRj/po91ODJyRk5LoSDGPb&#xA;bMeXNsKpgQ7FUPcPUhR265OIZRDrZasW8MZlZI21oJg5+zHVzXf7O+VS5MCjLfzTqECkUUr4LVP1&#xA;bfhlUtJEtwyEIyTzQVs4p5Iizykjjz2oDTuMrGj3q0jLvyQF35ou2UCCNYq/tH4j/AZbDSR67qci&#xA;V3dzPM4klkLsOhJ/VmTCIGwYXaMvCDOXHRwrD6QMqDWFHJJaJABJ7YqgiSSSe+XNjsVdiqN5mG0F&#xA;dpJB9yf83ZVVlh1U7en1qHl0DBm/2O+SPIqeSlyMjyOerkk/Th5JaArHTuMPVVeQetHDN+0KRy/N&#xA;eh+lcjysKNlTIMXYq7FVlntPNN/vtWYfM7DLFycqQch+H5nLwgOk+ziFC6aQ/VoIuwDMfmWI/hiB&#xA;uoG62MfD88SpbZa09jgBVdgQv0o0v4/fkP8AhThnyWfJdbHZh9OUTbJK+QYtEgAk9sVQRJJJPU5a&#xA;2IqFeMY8TvlcjuwKux4WjHvKeI+S7n+GAc2PVBE1jJ8f9rLOrNfdPVLeLskY+9jXGI5qFkg+H5HE&#xA;KHS/Z+WIUI125wW7+MYX/gSRlfUsFmKVK4aiU8clEJihssZvsn/kC/8A37n/AE45kfu/L7HK9Pk7&#xA;/kC//fuf9OOP7vy+xfT5Kcn/ACo7kfU/wzy78v0fX8cI4PJfR5ND/lRnLb/DHKh6fo+tKb4+jyX0&#xA;eS0f8qJ7f4X/AO5fh9Hkvo8nD/lRXb/C/wD3L8fR5L6PJUg/5UjU+h/hqvf0/qH8MB8PrS+jyV/+&#xA;QPf9+9/05ZH91/R+xHo8nf8AIHv+/e/6csf3X9H7F9Hk7/kD3/fvf9OWP7r+j9i+jyUn/wCVKcT6&#xA;n+G+P7XL6hT6a5IeH5JPB5KB/wCVD9/8Lf8AcuyXp8l9Hk4/8qH7/wCFv+5dj6fJfR5O/wCQD7f8&#xA;ot7f8c7H0+S+jybH/Kiabf4Xp/278fT5I9Hk7/kBP/fr/wDcvwenyX0eTv8AkBH/AH6//cvw+nyX&#xA;0eTcf/KiuY9P/C/Ptx/R9fwxPD5L6PJEL/ypr9n/AA770+o5A+H/AEfsT6PJd/yB7/v3v+nLB+6/&#xA;o/Yj0eTTf8qcp8X+Had6/Ucf3X9H7E+jyWf8gX/79z/pxw/u/L7F9Pkqf8gd/wC/e/6csH7r+j9i&#xA;+jyUZv8AlSdR6/8Ahqvbn9Q/jhHh9OH7F9Hkpf8AICKf9MvT/t35L0eS+jycf+VE13/wvXalf0f0&#xA;ptj6PJfR5Nn/AJUV3/wv/wBy/H0eS+jyaP8Ayorv/hf/ALl+Po8l9HkiIf8AlTHAej/hz0+3D6jT&#xA;8MifD68P2I9Hkv8A+QPf9+9/05YP3X9H7F9Hktb/AJU1+1/h32r9Rwjw/wCj9ifR5Lf+QL/9+5/0&#xA;44/u/L7F9Pk//9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:b808a5ec-7180-bd45-99fd-e88ae5fbbeb9</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:b808a5ec-7180-bd45-99fd-e88ae5fbbeb9</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:03249915-ccff-8243-81d8-1fe40563ef0a</stRef:instanceID>
            <stRef:documentID>xmp.did:03249915-ccff-8243-81d8-1fe40563ef0a</stRef:documentID>
            <stRef:originalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:6f17dac9-4cda-7648-af1b-3cbf38d7d93e</stEvt:instanceID>
                  <stEvt:when>2016-07-28T16:11:12+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:03249915-ccff-8243-81d8-1fe40563ef0a</stEvt:instanceID>
                  <stEvt:when>2016-07-28T17:10:45+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:b808a5ec-7180-bd45-99fd-e88ae5fbbeb9</stEvt:instanceID>
                  <stEvt:when>2016-07-31T22:47:59+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>900.000000</stDim:w>
            <stDim:h>480.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -480 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 480 li
900 480 li
900 0 li
cp
clp
0 480 mo
0 480 li
0 0 li
900 0 li
0 0 li
0 73.5625 li
900 73.5625 li
900 81.1183 li
470.741 81.1183 li
469.874 80.8229 469.02 80.6497 468.183 80.6412 cv
468.183 80.6412 li
468.183 80.6412 li
468.154 80.6409 468.124 80.6407 468.095 80.6407 cv
467.051 80.6407 465.991 80.8151 464.916 81.1183 cv
0 81.1183 li
0 95.3599 li
442.736 95.3599 li
442.249 98.8913 441.716 102.407 441.138 105.914 cv
0 105.914 li
0 110.84 li
440.296 110.84 li
439.934 112.877 439.558 114.907 439.167 116.936 cv
417.754 116.775 396.847 116.68 377.33 116.68 cv
352.531 116.68 325.51 116.833 298.024 117.081 cv
296.931 116.963 295.816 116.907 294.685 116.907 cv
293.276 116.907 291.841 116.993 290.379 117.152 cv
176.514 118.246 57.5174 120.862 57.5174 120.862 cv
57.5174 120.862 160.477 123.058 264.29 124.267 cv
263.666 124.48 263.039 124.694 262.412 124.906 cv
245.087 132.283 229.533 140.383 213.839 159.805 cv
211.58 162.577 209.32 165.574 207.071 168.836 cv
179.136 168.596 151.435 168.435 127.276 168.435 cv
126.74 168.435 126.202 168.435 125.664 168.435 cv
116.821 156.759 109.309 144.743 102.814 132.474 cv
102.82 132.465 102.827 132.455 102.834 132.445 cv
102.457 131.748 102.075 131.054 101.703 130.355 cv
101.703 130.355 li
100.966 130.438 100.223 130.476 99.4773 130.476 cv
94.5269 130.476 89.4067 128.792 84.5619 127.108 cv
79.7179 125.423 75.1496 123.739 71.3047 123.739 cv
71.2659 123.739 71.2274 123.739 71.1887 123.739 cv
71.1887 123.739 li
71.1887 123.739 li
61.9628 123.863 50.0043 130.525 38.1782 130.525 cv
37.1342 130.525 36.0921 130.474 35.0521 130.361 cv
35.0529 130.362 35.0535 130.363 35.0542 130.364 cv
35.0284 130.361 35.0023 130.358 34.9764 130.355 cv
28.1031 143.606 20.0652 156.566 10.4756 169.132 cv
6.95186 169.169 3.45941 169.207 0 169.245 cv
0 172.956 li
2.53961 172.99 5.00848 173.022 7.42333 173.052 cv
5.04223 176.049 2.56998 179.022 0 181.972 cv
0 190.519 li
0 214.505 li
0 222.591 li
0 308.605 li
0 395.751 li
0 395.751 li
0 480 li
737.183 222.591 mo
737.065 222.591 li
737.246 222.088 737.424 221.585 737.597 221.079 cv
737.394 221.583 737.187 222.087 736.977 222.591 cv
729.926 222.591 li
729.968 219.977 729.542 217.487 728.652 215.086 cv
728.582 214.892 728.509 214.699 728.432 214.505 cv
740.559 214.505 li
739.502 217.21 738.376 219.905 737.183 222.591 cv
404.983 222.591 mo
369.289 222.591 li
368.081 219.374 367.379 217.542 367.379 217.542 cv
367.287 222.591 li
364.073 222.591 li
362.989 219.904 361.956 217.209 360.975 214.505 cv
408.538 214.505 li
407.377 217.201 406.19 219.9 404.983 222.591 cv
220.459 222.591 mo
218.493 222.591 li
216.884 220.45 215.593 218.178 214.55 215.834 cv
218.654 217.592 223.34 219.09 228.425 220.209 cv
225.71 220.872 222.975 221.637 220.459 222.591 cv
215.827 222.591 mo
202.227 222.591 li
202.86 221.171 203.257 219.663 203.39 218.069 cv
203.413 217.792 203.428 217.514 203.435 217.232 cv
203.435 217.232 li
203.564 216.335 203.621 215.426 203.605 214.505 cv
211.657 214.505 li
211.979 214.664 212.303 214.82 212.634 214.975 cv
213.408 217.614 214.443 220.2 215.827 222.591 cv
857.276 221.294 mo
856.215 218.924 855.038 216.656 853.758 214.505 cv
866.034 214.505 li
863.196 216.787 860.275 219.052 857.276 221.294 cv
526.566 221.202 mo
525.573 218.973 524.594 216.738 523.633 214.505 cv
529.163 214.505 li
528.33 216.741 527.463 218.975 526.566 221.202 cv
300.438 217.931 mo
298.095 217.476 295.931 217.145 294.064 216.917 cv
290.599 216.606 286.959 216.339 283.218 216.135 cv
284.526 215.625 285.811 215.082 287.074 214.505 cv
302.356 214.505 li
301.776 215.69 301.136 216.834 300.438 217.931 cv
892.208 190.519 mo
794.239 190.519 li
794.078 189.817 793.923 189.114 793.772 188.41 cv
793.807 188.382 li
793.689 187.908 793.567 187.437 793.451 186.962 cv
790.419 186.798 779.082 184.305 772.343 184.305 cv
771.911 184.305 771.5 184.315 771.109 184.337 cv
764.621 184.698 756.617 186.515 748.817 186.958 cv
748.767 186.962 li
748.524 188.15 748.267 189.336 747.997 190.519 cv
710.475 190.519 li
708.139 187.82 705.678 184.964 703.14 181.958 cv
702.877 181.638 702.614 181.316 702.351 180.991 cv
701.572 180.084 700.788 179.156 700 178.209 cv
699.653 177.791 699.305 177.371 698.956 176.947 cv
696.026 173.382 693.04 169.578 690.033 165.668 cv
690.021 165.551 690.008 165.428 689.996 165.311 cv
690.001 165.309 690.01 165.306 690.016 165.304 cv
689.949 164.656 689.865 164.011 689.806 163.363 cv
689.806 163.363 li
689.29 163.363 688.773 163.359 688.256 163.351 cv
683.604 157.263 678.916 150.994 674.32 145.05 cv
749.19 144.368 820.05 142.824 820.05 142.824 cv
820.05 142.824 744.318 141.273 670.838 140.593 cv
668.826 138.049 666.839 135.594 664.886 133.271 cv
660.296 127.926 656.036 124.035 651.91 121.821 cv
679.907 121.265 697.148 120.862 697.148 120.862 cv
697.148 120.862 677.345 120.426 646.176 119.837 cv
645.513 119.74 644.85 119.691 644.189 119.691 cv
643.7 119.691 643.21 119.718 642.72 119.772 cv
604.055 119.046 549.231 118.11 493.104 117.459 cv
492.677 115.259 492.267 113.048 491.875 110.84 cv
900 110.84 li
900 169.245 li
832.69 169.989 778.607 170.979 778.607 170.979 cv
836.859 171.981 872.439 172.588 900 172.956 cv
900 181.972 li
897.496 184.845 894.901 187.694 892.208 190.519 cv
536.666 190.519 mo
513.967 190.519 li
508.266 175.312 503.335 159.968 499.259 144.425 cv
536.391 144.934 577.81 145.368 611.192 145.368 cv
613.362 145.368 615.55 145.366 617.745 145.363 cv
616.025 148.654 614.333 152.227 612.693 156.054 cv
588.963 157.501 565.231 163.333 541.501 163.36 cv
541.504 163.361 541.506 163.362 541.509 163.363 cv
541.451 163.363 541.393 163.363 541.335 163.363 cv
540.5 172.528 538.899 181.576 536.666 190.519 cv
418.203 190.519 mo
353.738 190.519 li
352.639 185.945 351.694 181.337 350.91 176.697 cv
350.939 176.668 li
350.843 176.179 350.743 175.691 350.648 175.198 cv
350.072 172.249 344.513 172.348 342.977 171.984 cv
342.384 171.843 341.791 171.689 341.199 171.53 cv
362.602 171.208 375.942 170.979 375.942 170.979 cv
375.942 170.979 360.735 170.725 336.897 170.378 cv
335.174 169.965 333.447 169.663 331.711 169.663 cv
330.627 169.663 329.539 169.781 328.446 170.062 cv
328.226 170.119 328.006 170.181 327.788 170.247 cv
325.869 170.22 323.913 170.192 321.911 170.164 cv
321.914 170.15 321.916 170.137 321.918 170.123 cv
321.921 170.105 321.924 170.085 321.927 170.066 cv
321.929 170.052 321.932 170.037 321.934 170.023 cv
321.937 170.002 321.941 169.981 321.944 169.959 cv
321.945 169.95 321.947 169.94 321.948 169.93 cv
321.953 169.903 321.957 169.878 321.961 169.85 cv
321.962 169.842 321.964 169.832 321.965 169.823 cv
321.97 169.795 321.974 169.766 321.978 169.738 cv
321.979 169.733 321.98 169.727 321.981 169.722 cv
321.986 169.692 321.99 169.661 321.995 169.631 cv
321.995 169.63 321.995 169.629 321.995 169.628 cv
322 169.595 322.005 169.562 322.01 169.53 cv
322.011 169.527 322.011 169.524 322.011 169.521 cv
322.016 169.489 322.021 169.458 322.026 169.425 cv
322.026 169.422 322.027 169.418 322.027 169.415 cv
324.501 152.816 320.413 135.676 315.957 128.487 cv
315.956 128.485 315.955 128.484 315.954 128.482 cv
315.95 128.476 315.946 128.469 315.942 128.463 cv
315.94 128.46 315.938 128.456 315.936 128.453 cv
315.933 128.449 315.93 128.443 315.927 128.439 cv
315.924 128.435 315.921 128.43 315.918 128.426 cv
315.913 128.417 315.907 128.408 315.902 128.399 cv
315.902 128.399 li
315.065 127.045 314.18 125.834 313.254 124.754 cv
335.73 124.935 357.465 125.043 377.33 125.043 cv
396.881 125.043 417.143 124.963 437.567 124.824 cv
436.326 130.659 434.961 136.462 433.478 142.239 cv
414.363 142.578 402.338 142.824 402.338 142.824 cv
402.338 142.824 414.283 143.061 433.181 143.391 cv
432.45 146.204 431.691 149.013 430.906 151.813 cv
431.264 150.209 431.614 148.603 431.957 146.99 cv
430.383 153.282 428.642 159.544 426.745 165.777 cv
424.13 174.071 421.279 182.314 418.203 190.519 cv
195.613 190.519 mo
189.661 190.519 li
177.826 179.664 164.137 174.498 151.379 173.936 cv
151.393 173.929 151.407 173.923 151.421 173.916 cv
150.705 173.887 149.989 173.872 149.273 173.872 cv
148.486 173.872 147.699 173.89 146.911 173.928 cv
146.911 173.928 li
141.981 174.203 137.176 175.177 132.351 176.886 cv
131.427 175.767 130.518 174.648 129.62 173.522 cv
152.86 173.514 178.506 173.373 204.195 173.162 cv
203.556 174.159 202.919 175.179 202.283 176.222 cv
202.283 176.222 li
202.273 176.236 202.262 176.252 202.251 176.266 cv
202.247 176.272 202.243 176.278 202.239 176.284 cv
202.233 176.293 202.224 176.304 202.218 176.313 cv
202.216 176.316 202.214 176.319 202.212 176.322 cv
202.203 176.335 202.194 176.347 202.185 176.36 cv
202.184 176.362 202.183 176.363 202.182 176.365 cv
198.579 181.451 196.392 186.164 195.613 190.519 cv
321.393 172.967 mo
321.473 172.585 321.55 172.199 321.622 171.815 cv
322.394 171.804 323.152 171.794 323.911 171.783 cv
323.071 172.171 322.233 172.576 321.393 172.967 cv
498.43 141.212 mo
497.005 135.606 495.69 129.967 494.493 124.305 cv
548.024 123.703 598.815 122.839 636.168 122.127 cv
634.584 123.09 632.982 124.346 631.351 125.908 cv
627.826 129.25 624.156 134.13 620.549 140.29 cv
617.385 140.284 614.26 140.28 611.192 140.28 cv
576.504 140.28 535.149 140.708 498.43 141.212 cv
900 105.914 mo
491.032 105.914 li
490.454 102.407 489.922 98.8912 489.435 95.3599 cv
900 95.3599 li
900 105.914 li
false sop
/0 
[/DeviceRGB] /CSA add_res
level3{
gsave
clp
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.94902 .976471 .984314 ]
/C1 [.65098 .952941 .972549 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~o'u8?nF5r9n*f`5mdBK0mHj3+m-F!'lK[[!l07Hrkih3mkND!ik2k^djQ,C_j5]1Zio8qUiSi_Qi8<GL
hqm5Hh;-oBgt^]>gY:H9g=b04g"=s0f@SX*f%/F&e^`1!eC;sre'c[mdF$@hd*U.ccd0n^cHa\Zc-4DU
bfe2Qb0%lKaiVZGaN2EBa2Z-=`l5p9`5KU3_o'C/_SX.*_83q&^q[Y!^:q=q]tM+l]Y(kg]=YYc]",A^
\[]/Z\$riT[^NWP[C*BK['R*FZa-mBZ*CR<Yct@8YHP+3Y-+n/XfSV*X/i;%WiE(uWMuhpW2QVlVl$>g
~>
<~q=sa[q"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXYp\4FVp\4FVp\4FVp\4FVp\4FV
p\4FVp\4FVp\4FVp\4FVp\4FVp\4CTp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4R
p@\+Op%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Mo^qeJo^qeJo^qeJo^qeJo^qeJ
o^qeJo^qeJo^qeJo^qeJo^qeJo^qbHoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSF
~>
<~qtg0cqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'b
qYL'bqYL'bqYL'bqYL'bqYL'bqYL$`q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^
q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j]q"XXZq"XXZq"XXZq"XXZq"XXZ
q"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZ
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
273.707 273.734 mo
270.872 272.52 268.062 271.296 265.285 270.064 cv
267.401 270.454 269.539 270.793 271.687 271.075 cv
271.729 271.082 271.771 271.088 271.813 271.095 cv
272.99 271.274 274.166 271.434 275.336 271.573 cv
275.039 272.043 274.741 272.513 274.441 272.983 cv
274.202 273.237 273.957 273.487 273.707 273.734 cv
384.684 263.629 mo
383.908 262.329 383.142 261.029 382.387 259.727 cv
382.473 259.618 382.558 259.509 382.643 259.4 cv
382.643 259.4 li
382.643 259.4 li
380.621 253.62 378.649 248.096 376.83 243.066 cv
376.83 243.066 li
376.83 243.066 li
376.83 243.066 li
373.677 234.343 370.984 227.104 369.289 222.591 cv
404.983 222.591 li
401.071 231.312 396.917 240.006 392.543 248.676 cv
389.996 253.666 387.374 258.649 384.684 263.629 cv
719.989 254.067 mo
719.177 252.527 718.376 250.988 717.585 249.444 cv
725.716 238.864 729.803 230.202 729.926 222.591 cv
736.977 222.591 li
735.635 225.816 734.173 229.029 732.606 232.229 cv
728.882 239.566 724.663 246.84 719.989 254.067 cv
212.051 242.954 mo
209.815 241.623 207.612 240.281 205.451 238.931 cv
201.424 236.481 197.522 233.996 193.742 231.482 cv
197.697 229.044 200.673 226.081 202.227 222.591 cv
215.827 222.591 li
216.143 223.137 216.477 223.673 216.831 224.198 cv
215.833 224.719 214.902 225.287 214.06 225.909 cv
209.891 228.946 207.852 233.293 210.519 239.946 cv
210.908 240.945 211.421 241.949 212.051 242.954 cv
367.154 229.901 mo
366.086 227.47 365.059 225.034 364.073 222.591 cv
367.287 222.591 li
367.154 229.901 li
736.584 223.924 mo
736.745 223.48 736.906 223.036 737.065 222.591 cv
737.183 222.591 li
736.985 223.035 736.785 223.48 736.584 223.924 cv
218.958 223.194 mo
218.8 222.994 218.645 222.793 218.493 222.591 cv
220.459 222.591 li
219.949 222.784 219.448 222.985 218.958 223.194 cv
level3{
gsave
clp
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
/1 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~pA=d\qu$-ar:Bg`o)&@Uqu$!\r:'R\n+utMqY]dXr9a@Ym/$YGqY]XTr9=(Ul1t8?q>BFOr9!hQjn\i8
q>B:Kr8RPMiq`N2q>B1Hr87>JhYI**q>B(Er7q,Gg\La#q>8k@qq:fBf_PErq"rY;qpkK=eG/pjq"rM7
qpP9:dJ3Ucq"rG5qp,!6c1h+[p\W2/qoea2b4keTp\N#+qT/F-`qT>Lp\Ml'qS`.)`:s,Fp\Mc$qSDq&
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~p%A"Np%7nKo^qeIoCDJCo'u8?naZ/>naQ&;nF,i7n*]W3md9E/mHs<.mHj3+m-F!'lg!d#lKRQtl0.?p
kih6okND!ik2tggk2tdejlPRajQ,@]j5].Yio8qUiSibSiSi_Qi8EMMhr!;IhVR)Eh;-lAgt^]?gt^Z=
gY:K:g=k96g"G'2f\"j/f\"j.f@SX*f%/F&e^`4"eC<!se'ldpe'c[ldF$@hdF$@gd*U.ccd0q`cd'h\
c-=MXbfn;Tbfn;TbKJ)Pb0%lLaiVZHaN2HDaN2HDa2c3>`Pog8`Pog8`5KU4_o'C0_o'@._83t(_83t(
~>
<~qYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYBs_q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^
q>'g\q"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZ
q"XXZq"XXZq"XXZq"XXZq"XXZq"XXYp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FV
p\4FVp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4R
~>
<~qtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9f
qtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9f
qtp9eqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'b
qYL'bqYL'bqYL'bqYL'bqYL'bqYL'bq>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
866.034 214.505 mo
853.758 214.505 li
845.252 200.215 832.129 191.055 817.405 191.055 cv
809.733 191.055 802.497 193.541 796.121 197.945 cv
795.434 195.479 794.807 193.005 794.239 190.519 cv
892.208 190.519 li
887.775 195.168 883.077 199.751 878.094 204.26 cv
874.247 207.716 870.228 211.133 866.034 214.505 cv
740.559 214.505 mo
728.432 214.505 li
725.828 207.89 719.978 201.326 712.742 193.133 cv
712.001 192.279 711.245 191.407 710.475 190.519 cv
747.997 190.519 li
746.145 198.617 743.647 206.605 740.559 214.505 cv
529.163 214.505 mo
523.633 214.505 li
520.204 206.543 516.978 198.549 513.967 190.519 cv
536.666 190.519 li
535.033 197.058 533.064 203.537 530.805 209.979 cv
530.808 209.964 530.812 209.948 530.815 209.933 cv
530.28 211.46 529.729 212.984 529.163 214.505 cv
408.538 214.505 mo
360.975 214.505 li
358.105 206.593 355.681 198.607 353.738 190.519 cv
418.203 190.519 li
415.192 198.549 411.966 206.543 408.538 214.505 cv
302.356 214.505 mo
287.074 214.505 li
294.381 211.167 300.912 206.715 306.266 201.38 cv
305.775 205.207 304.847 208.806 303.471 212.005 cv
303.127 212.856 302.756 213.69 302.356 214.505 cv
211.657 214.505 mo
203.605 214.505 li
203.574 212.59 203.234 210.624 202.596 208.623 cv
203.697 209.586 204.922 210.519 206.271 211.422 cv
206.273 211.423 206.273 211.423 206.274 211.424 cv
206.296 211.439 206.318 211.454 206.34 211.468 cv
206.341 211.469 li
206.385 211.498 206.43 211.528 206.474 211.557 cv
206.476 211.558 206.476 211.558 206.477 211.559 cv
206.498 211.573 206.519 211.587 206.539 211.6 cv
206.542 211.602 206.547 211.605 206.55 211.607 cv
206.569 211.62 206.59 211.633 206.609 211.646 cv
206.613 211.648 206.616 211.65 206.619 211.653 cv
206.64 211.666 206.661 211.68 206.681 211.693 cv
206.681 211.693 li
208.185 212.673 209.851 213.615 211.657 214.505 cv
307.906 202.532 mo
308.018 201.498 308.102 200.454 308.158 199.403 cv
308.491 199.039 308.819 198.669 309.141 198.298 cv
308.744 199.712 308.332 201.123 307.906 202.532 cv
195.457 196.479 mo
193.587 194.328 191.65 192.343 189.661 190.519 cv
195.613 190.519 li
195.244 192.586 195.192 194.572 195.457 196.479 cv
level3{
gsave
clp
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
/2 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.964706 .984314 .988235 ]
/C1 [.756863 .968627 .980392 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~p%A"Np%7nKo^qbHoCMSEo()ABnaZ/>naQ&;nF,i7n*f]4mdBN1mHs<.m-O**m-F!'lg*j$lK[Wul07Hr
kih6okND$kkN:phk2tdejlPUbjQ,C^j5]1[io8tWio/kTiSi_Qi8EPNhr!>KhVR,Gh;-oCh;$f@gt^Z=
gY:K:g=k97g"G'3g"=s0f[na,f@SU)f%/F&e^`4#eC<!teC2mqe'landaHOjdF$@gd*U.dcd0q`cd'h]
cHa\Zc-=MWbfn;SbKJ)Pb0%lLb/qcIaiVWFaN2HCa2c6@`l?$<`Pog8`Pf^5`5KR2_o'C/_SX1,_83t(
~>
<~qYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'b
q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^
q"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZ
p\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FV
~>
<~qtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9f
qtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9f
qYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'b
qYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'b
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
0 0 mo
0 73.5625 li
900 73.5625 li
900 0 li
0 0 li
.533333 .866667 .894118 rgb
f
0 81.1183 mo
0 95.3599 li
900 95.3599 li
900 81.1183 li
0 81.1183 li
f
0 105.914 mo
0 110.84 li
900 110.84 li
900 105.914 li
0 105.914 li
f
611.192 145.368 mo
577.81 145.368 536.391 144.934 499.259 144.425 cv
498.978 143.353 498.703 142.286 498.43 141.212 cv
535.149 140.708 576.504 140.28 611.192 140.28 cv
614.26 140.28 617.385 140.284 620.549 140.29 cv
619.609 141.895 618.673 143.589 617.745 145.363 cv
615.55 145.366 613.362 145.368 611.192 145.368 cv
674.32 145.05 mo
673.152 143.541 671.991 142.052 670.838 140.593 cv
744.318 141.273 820.05 142.824 820.05 142.824 cv
820.05 142.824 749.19 144.368 674.32 145.05 cv
433.181 143.391 mo
414.283 143.061 402.338 142.824 402.338 142.824 cv
402.338 142.824 414.363 142.578 433.478 142.239 cv
433.38 142.623 433.28 143.007 433.181 143.391 cv
level3{
gsave
clp
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
377.33 125.043 mo
357.465 125.043 335.73 124.935 313.254 124.754 cv
309.268 120.106 304.509 117.895 299.393 117.208 cv
299.399 117.227 299.404 117.247 299.409 117.266 cv
298.951 117.193 298.49 117.131 298.024 117.081 cv
325.51 116.833 352.531 116.68 377.33 116.68 cv
396.847 116.68 417.754 116.775 439.167 116.936 cv
438.659 119.569 438.125 122.204 437.567 124.824 cv
417.143 124.963 396.881 125.043 377.33 125.043 cv
494.493 124.305 mo
494.011 122.025 493.549 119.749 493.104 117.459 cv
549.231 118.11 604.055 119.046 642.72 119.772 cv
640.55 120.011 638.377 120.784 636.168 122.127 cv
598.815 122.839 548.024 123.703 494.493 124.305 cv
264.29 124.267 mo
160.477 123.058 57.5174 120.862 57.5174 120.862 cv
57.5174 120.862 176.514 118.246 290.379 117.152 cv
282.284 118.033 273.418 121.149 264.29 124.267 cv
651.91 121.821 mo
649.976 120.783 648.071 120.114 646.176 119.837 cv
677.345 120.426 697.148 120.862 697.148 120.862 cv
697.148 120.862 679.907 121.265 651.91 121.821 cv
level3{
gsave
clp
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
568.139 66.4113 mo
444.34 66.4113 248.326 62.2299 248.326 62.2299 cv
248.326 62.2299 438.578 58.0486 568.139 58.0486 cv
697.705 58.0486 887.957 62.2299 887.957 62.2299 cv
887.957 62.2299 709.187 66.4113 568.139 66.4113 cv
.588235 .882353 .905882 rgb
f
129.62 173.522 mo
128.273 171.835 126.953 170.137 125.664 168.435 cv
126.202 168.435 126.74 168.435 127.276 168.435 cv
151.435 168.435 179.136 168.596 207.071 168.836 cv
206.11 170.229 205.152 171.67 204.195 173.162 cv
178.506 173.373 152.86 173.514 129.62 173.522 cv
7.42333 173.052 mo
5.00848 173.022 2.53961 172.99 0 172.956 cv
0 169.245 li
3.45941 169.207 6.95186 169.169 10.4756 169.132 cv
9.47547 170.443 8.45764 171.75 7.42333 173.052 cv
321.622 171.815 mo
321.684 171.488 321.743 171.162 321.8 170.833 cv
321.8 170.829 321.801 170.826 321.802 170.822 cv
321.807 170.789 321.813 170.754 321.819 170.721 cv
321.82 170.714 321.821 170.709 321.822 170.703 cv
321.828 170.667 321.834 170.632 321.84 170.596 cv
321.84 170.594 321.841 170.59 321.841 170.588 cv
321.845 170.57 321.847 170.553 321.85 170.535 cv
321.852 170.524 321.854 170.513 321.856 170.502 cv
321.86 170.477 321.864 170.45 321.869 170.425 cv
321.87 170.414 321.873 170.4 321.875 170.389 cv
321.878 170.367 321.882 170.343 321.886 170.322 cv
321.888 170.307 321.89 170.293 321.893 170.278 cv
321.895 170.263 321.898 170.247 321.9 170.232 cv
321.904 170.209 321.907 170.188 321.911 170.166 cv
321.911 170.165 321.911 170.165 321.911 170.164 cv
323.913 170.192 325.869 170.22 327.788 170.247 cv
326.479 170.641 325.192 171.192 323.911 171.783 cv
323.152 171.794 322.394 171.804 321.622 171.815 cv
341.199 171.53 mo
339.765 171.143 338.332 170.722 336.897 170.378 cv
360.735 170.725 375.942 170.979 375.942 170.979 cv
375.942 170.979 362.602 171.208 341.199 171.53 cv
level3{
gsave
clp
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
900 172.956 mo
872.439 172.588 836.859 171.981 778.607 170.979 cv
778.607 170.979 832.69 169.989 900 169.245 cv
900 172.956 li
level3{
gsave
clp
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
168.08 41.869 mo
123.863 41.869 58.9343 39.3251 58.9343 39.3251 cv
58.9343 39.3251 119.944 36.7814 168.08 36.7814 cv
210.33 36.7814 277.224 39.3251 277.224 39.3251 cv
277.224 39.3251 212.296 41.869 168.08 41.869 cv
.588235 .882353 .905882 rgb
f
350.91 176.697 mo
350.939 176.668 li
350.843 176.179 350.743 175.691 350.648 175.198 cv
350.072 172.249 344.513 172.348 342.977 171.984 cv
338.145 170.839 333.352 168.798 328.446 170.062 cv
323.655 171.298 319.187 174.844 314.291 175.197 cv
314.25 175.202 li
312.159 188.18 308.793 200.877 304.327 213.38 cv
304.605 212.402 304.886 211.425 305.152 210.442 cv
303.922 214.299 302.562 218.136 301.086 221.958 cv
293.974 239.727 284.644 257.134 273.524 274.415 cv
260.592 294.278 245.277 313.977 228.735 333.869 cv
249.161 344.386 274.945 351.048 302.163 353.867 cv
302.722 353.926 303.281 353.983 303.841 354.039 cv
304.166 354.071 304.491 354.101 304.817 354.131 cv
312.883 354.904 321.062 355.344 329.257 355.433 cv
337.38 355.521 345.513 355.261 353.561 354.672 cv
353.736 354.661 li
354.139 354.631 354.541 354.598 354.943 354.567 cv
385.007 352.281 413.797 345.385 436.165 333.869 cv
421.056 315.518 406.715 297.334 394.392 279.033 cv
372.42 245.87 356.927 212.322 350.91 176.697 cv
.603922 .839216 .827451 rgb
f
793.807 188.382 mo
793.689 187.908 793.567 187.437 793.451 186.962 cv
790.225 186.788 777.597 183.977 771.109 184.337 cv
764.621 184.698 756.617 186.515 748.817 186.958 cv
748.767 186.962 li
746.199 199.527 742.067 211.819 736.584 223.924 cv
736.926 222.978 737.27 222.032 737.597 221.079 cv
736.088 224.814 734.418 228.529 732.606 232.229 cv
723.874 249.432 712.421 266.284 698.771 283.014 cv
682.894 302.245 664.093 321.316 643.785 340.575 cv
644.895 339.522 673.3 350.138 676.677 350.968 cv
689.225 354.051 701.991 356.338 714.81 357.963 cv
769.328 364.876 825.099 360.448 876.263 340.176 cv
879.757 338.792 884.192 336.037 887.957 335.583 cv
824.514 257.534 li
809.527 235.092 798.873 212.231 793.772 188.41 cv
793.807 188.382 li
f
468.183 80.6412 mo
460.473 80.5686 451.825 90.1047 443.332 90.8493 cv
432.075 179.862 391.628 260.659 336.419 343.624 cv
406.199 389.402 525.972 389.402 595.751 343.624 cv
540.543 260.659 500.096 179.862 488.838 90.8493 cv
481.848 90.2367 474.528 80.7065 468.183 80.6412 cv
.698039 .803922 .623529 rgb
f
433.457 317.806 mo
430.547 313.909 425.799 309.116 419.379 307.714 cv
423.682 298.138 427.915 288.106 431.719 278.165 cv
448.058 237.871 457.341 199.115 457.495 199.115 cv
457.495 199.115 457.495 199.115 457.495 199.115 cv
457.479 199.115 465.285 221.876 472.008 265.116 cv
475.616 188.862 481.758 127.186 481.212 127.186 cv
481.212 127.186 481.211 127.186 481.211 127.186 cv
481.212 127.186 481.213 127.186 481.213 127.186 cv
481.535 127.186 491.595 167.654 519.804 236.71 cv
516.102 244.63 512.063 252.501 507.786 260.338 cv
505.853 253.313 503.956 246.29 502.085 239.272 cv
502.085 239.272 li
498.951 228.598 496.43 216.447 492.969 206.564 cv
491.458 202.25 489.768 198.368 487.769 195.23 cv
487.359 194.551 486.997 194.265 486.684 194.265 cv
485.568 194.265 485.069 197.882 485.217 200.273 cv
485.217 200.273 li
485.211 200.735 485.207 201.198 485.202 201.661 cv
484.933 229.061 485.684 256.488 488.047 283.66 cv
486.65 283.889 485.31 284.274 484.053 284.835 cv
471.025 290.656 470.732 305.223 475.228 314.91 cv
474.949 315.358 474.668 315.811 474.389 316.26 cv
472.686 314.563 470.818 312.054 469.342 309.337 cv
467.76 306.481 466.477 303.476 465.515 301.229 cv
464.537 298.979 463.893 297.497 463.893 297.497 cv
463.893 297.497 463.199 298.967 462.146 301.199 cv
461.393 302.791 460.453 304.778 459.581 306.968 cv
458.308 291.471 456.513 276.236 454.11 261.398 cv
454.059 261.152 453.958 261.04 453.818 261.04 cv
452.797 261.04 449.686 267.017 448.566 270.614 cv
442.872 285.937 437.985 301.738 433.457 317.806 cv
457.495 199.115 mo
457.495 199.115 li
457.495 199.115 457.495 199.115 457.495 199.115 cv
457.495 199.115 li
.572549 .756863 .596078 rgb
f
488.047 283.66 mo
485.684 256.488 484.933 229.061 485.202 201.661 cv
485.207 201.198 485.211 200.735 485.217 200.273 cv
485.217 200.273 li
485.217 200.273 li
485.217 200.273 li
485.069 197.883 485.569 194.265 486.684 194.265 cv
486.997 194.265 487.359 194.551 487.769 195.23 cv
489.768 198.368 491.458 202.25 492.969 206.564 cv
496.43 216.448 498.95 228.599 502.085 239.272 cv
502.085 239.272 li
503.956 246.29 505.853 253.313 507.786 260.338 cv
503.542 268.116 499.064 275.861 494.45 283.592 cv
493.415 283.465 492.389 283.399 491.378 283.399 cv
490.242 283.399 489.129 283.483 488.047 283.66 cv
.505882 .733333 .580392 rgb
f
488.047 283.66 mo
485.684 256.488 484.933 229.061 485.202 201.661 cv
484.933 229.061 485.684 256.488 488.047 283.66 cv
488.047 283.66 li
502.085 239.272 mo
498.95 228.599 496.43 216.448 492.969 206.564 cv
496.43 216.447 498.951 228.598 502.085 239.272 cv
485.217 200.273 mo
485.217 200.273 li
485.217 200.273 li
485.217 200.273 li
.415686 .686274 .552941 rgb
f
433.523 317.896 mo
433.501 317.866 433.479 317.836 433.457 317.806 cv
437.985 301.738 442.872 285.936 448.566 270.614 cv
449.686 267.017 452.798 261.04 453.818 261.04 cv
453.958 261.04 454.059 261.152 454.11 261.398 cv
456.513 276.237 458.308 291.471 459.581 306.968 cv
459.229 307.851 458.888 308.768 458.576 309.705 cv
458.206 310.791 457.897 311.913 457.651 313.039 cv
457.544 312.613 457.435 312.18 457.325 311.741 cv
457.09 310.839 456.849 309.914 456.606 308.979 cv
456.303 308.045 455.966 307.105 455.643 306.179 cv
455.479 305.718 455.316 305.258 455.153 304.8 cv
454.993 304.345 454.758 303.891 454.566 303.445 cv
454.16 302.561 453.762 301.694 453.379 300.858 cv
453.203 300.443 452.97 300.039 452.739 299.646 cv
452.513 299.255 452.292 298.873 452.077 298.501 cv
451.647 297.769 451.241 297.078 450.868 296.442 cv
450.012 295.19 449.242 294.18 448.735 293.479 cv
448.22 292.782 447.928 292.386 447.928 292.386 cv
447.928 292.386 447.892 292.827 447.829 293.603 cv
447.757 294.376 447.693 295.47 447.538 296.769 cv
447.405 297.419 447.262 298.125 447.109 298.873 cv
447.033 299.242 446.954 299.621 446.874 300.009 cv
446.799 300.396 446.718 300.789 446.576 301.192 cv
446.325 301.989 446.066 302.815 445.801 303.657 cv
445.66 304.074 445.559 304.49 445.383 304.913 cv
445.21 305.333 445.036 305.755 444.862 306.179 cv
444.515 307.014 444.167 307.854 443.821 308.685 cv
443.414 309.507 443.01 310.32 442.617 311.113 cv
442.423 311.505 442.232 311.893 442.044 312.273 cv
441.854 312.653 441.624 313.027 441.423 313.391 cv
441.198 313.793 440.98 314.182 440.766 314.562 cv
438.287 315.568 436.35 316.912 433.523 317.896 cv
.505882 .733333 .580392 rgb
f
399.692 300.74 mo
398.708 299.207 397.733 297.69 396.823 296.273 cv
395.856 294.846 394.824 293.55 394.011 292.444 cv
393.814 292.184 393.625 291.936 393.445 291.699 cv
392.547 288.849 391.618 285.961 390.669 283.059 cv
403.469 258.001 415.571 233.907 426.123 210.833 cv
425.854 213.249 425.37 216.055 424.871 218.099 cv
418.137 246.904 409.627 274.169 399.692 300.74 cv
387.047 298.497 mo
387.047 298.497 388.069 297.867 389.622 296.91 cv
389.79 296.803 389.965 296.694 390.146 296.583 cv
390.125 296.7 390.103 296.818 390.079 296.936 cv
390.034 297.142 389.988 297.351 389.942 297.561 cv
389.936 297.563 389.93 297.565 389.924 297.567 cv
388.359 298.073 387.276 298.423 387.079 298.487 cv
387.058 298.494 387.047 298.497 387.047 298.497 cv
.635294 .780392 .607843 rgb
f
525.82 223.033 mo
524.993 220.921 524.178 218.805 523.373 216.687 cv
520.459 209.03 517.643 201.276 514.987 193.434 cv
518.466 202.813 522.312 212.143 526.472 221.435 cv
526.255 221.97 526.04 222.499 525.82 223.033 cv
.819608 .882353 .772549 rgb
f
489.15 93.2552 mo
489.044 92.4525 488.94 91.6534 488.838 90.8493 cv
488.956 91.6293 489.081 92.4059 489.201 93.1848 cv
489.184 93.2088 489.167 93.2313 489.15 93.2552 cv
.435294 .815686 .854902 rgb
f
464.917 81.1183 mo
464.916 81.1183 li
465.991 80.8151 467.051 80.6407 468.095 80.6407 cv
468.124 80.6407 468.154 80.6409 468.183 80.6412 cv
468.154 80.6409 468.125 80.6407 468.096 80.6407 cv
467.052 80.6407 465.992 80.8151 464.917 81.1183 cv
level3{
gsave
clp
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
/3 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~`p3'4lL;dXnAFP\_WpX,lL;URnA+;X^?P.#l0u@Mn@\#S]BSdpl0l.Hn$hQM\*3:gkjPnBn$D6HZfpk`
kjPb>n#tsDY3>>WkjPY;n#PX?WoriMkO5D5n#5F<VW[BDkO,20m\K%6UZ_'=k3eo)m\&_1TB>R5k3ec%
m[WG-S*'.-k3eZ"m[*)(Qf[Y$jmJDqmZZc#PND4qjmA2lm?$GsNofYgjmA&hm>U/oMrj>`jm@odm>0lk
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~`Pog8`Pf^5`5KU3_ns:-_SO()_8*k%^q[Y!^V@Ot^:h4n]tD"j]Xtef]=Y\e]=PSa\[]/Z\@8rV\$i`R
[^NWQ[C*BK['[0GZa6sCZEgdAZEga?Yct=7YHP+3Y-+n/Xf\_-Xf\\+X/i8#WiE%tWMuhpW2QYnW2QVl
VP^5eV5:#aUnjf^Unjf]USFTYU7n9RTV.sMT:_aJT:_aISt;OESXc4>S"#n:S"#n9R[T\5R@0J1R$X/*
QBmi&QBmi&Q'IW"Pa%AqP*1ukP*1ukOcbcgOH>QcO,o<]NK&pWNK&pWN/W^SMi3LOMMd:KM2@(GLkpkC
~>
<~l07Hsl07Hsl07Hsl07Hsl07Hsl07Hsl0.?pkih6okih6okih6okih6okih6okih6okih6okih6okih6o
kih3mkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND!ik2tggk2tggk2tggk2tgg
k2tggk2tggk2tggk2tggk2tggk2tgfjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUc
jlPUcjQ,C_jQ,C_jQ,C_jQ,C_jQ,C_jQ,C_jQ,C_jQ,C_jQ,C_jQ,C_jQ,C_jQ,C_jQ,C_jQ,C_jQ,C_
~>
<~n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*]W3mdBN2mdBN2mdBN2mdBN2
mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2
mdBN1mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.
mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /3 /Gradient get_res exec grestore
}if
np
443.385 90.8445 mo
443.384 90.8434 443.384 90.8425 443.383 90.8414 cv
450.681 90.1716 458.087 83.0444 464.916 81.1183 cv
464.917 81.1183 li
458.089 83.0448 450.68 90.1737 443.385 90.8445 cv
.435294 .815686 .854902 rgb
f
470.741 81.1183 mo
470.74 81.1183 li
469.873 80.8228 469.02 80.6498 468.183 80.6412 cv
469.02 80.6497 469.874 80.8229 470.741 81.1183 cv
level3{
gsave
clp
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
478.269 85.54 mo
475.694 83.7233 473.163 81.9436 470.74 81.1183 cv
470.741 81.1183 li
473.163 81.9435 475.694 83.7231 478.269 85.54 cv
.435294 .815686 .854902 rgb
f
467.57 105.128 mo
466.487 105.128 465.401 105.055 464.32 104.911 cv
464.32 104.91 464.32 104.908 464.32 104.907 cv
463.067 104.74 461.818 104.473 460.582 104.113 cv
460.582 104.115 460.582 104.117 460.582 104.119 cv
458.32 103.461 456.1 102.483 453.971 101.19 cv
453.971 101.189 453.971 101.185 453.971 101.184 cv
452.822 100.486 451.701 99.6869 450.612 98.8066 cv
450.611 98.814 450.611 98.8187 450.61 98.8261 cv
450.035 98.3617 449.468 97.8712 448.912 97.3565 cv
448.914 97.3481 448.915 97.341 448.916 97.3327 cv
447.859 96.3519 446.838 95.2867 445.862 94.125 cv
445.861 94.1302 445.86 94.1362 445.859 94.1414 cv
444.997 93.1129 444.17 92.0134 443.385 90.8445 cv
450.68 90.1737 458.089 83.0448 464.917 81.1183 cv
465.992 80.8151 467.052 80.6407 468.096 80.6407 cv
468.125 80.6407 468.154 80.6409 468.183 80.6412 cv
468.183 80.6412 li
468.183 80.6412 li
469.02 80.6498 469.873 80.8228 470.74 81.1183 cv
473.163 81.9436 475.694 83.7233 478.269 85.54 cv
481.766 88.0075 485.343 90.5434 488.838 90.8493 cv
488.838 90.8493 li
488.94 91.6534 489.044 92.4525 489.15 93.2552 cv
488.158 94.6192 487.107 95.8635 486.006 96.9888 cv
485.388 97.6181 484.753 98.2062 484.106 98.7636 cv
484.106 98.7674 484.107 98.7694 484.107 98.7732 cv
483.902 98.9499 483.696 99.1226 483.488 99.2919 cv
482.541 99.8295 481.348 100.398 480.003 101.032 cv
479.056 101.359 478.056 101.801 476.979 102.122 cv
476.437 102.262 475.884 102.407 475.321 102.556 cv
475.039 102.626 474.759 102.715 474.472 102.776 cv
474.183 102.819 473.892 102.862 473.6 102.907 cv
473.016 103 472.428 103.093 471.838 103.191 cv
471.243 103.222 470.648 103.254 470.054 103.289 cv
469.759 103.308 469.463 103.327 469.167 103.346 cv
468.872 103.333 468.577 103.32 468.284 103.308 cv
467.699 103.285 467.12 103.266 466.55 103.247 cv
464.558 103.004 462.267 102.727 460.036 101.976 cv
457.803 101.27 455.603 100.374 453.731 99.3607 cv
451.844 98.3955 450.263 97.4066 449.141 96.7129 cv
448.027 95.9971 447.367 95.5726 447.367 95.5722 cv
447.367 95.5722 447.971 96.0836 449.001 96.9458 cv
449.524 97.36 450.157 97.8592 450.878 98.4243 cv
451.616 98.9434 452.428 99.5779 453.343 100.154 cv
455.147 101.384 457.324 102.518 459.608 103.438 cv
461.893 104.368 464.316 104.835 466.493 105.078 cv
467.033 105.101 467.591 105.116 468.16 105.116 cv
468.218 105.116 468.275 105.116 468.332 105.116 cv
468.079 105.124 467.824 105.128 467.57 105.128 cv
451.343 92.9583 mo
451.315 92.9583 460.13 97.9815 466.584 98.0458 cv
473.038 98.0029 481.822 93.0144 481.794 93.0144 cv
481.794 93.0144 481.794 93.0144 481.793 93.0145 cv
481.721 92.9985 473.002 87.0431 466.599 87.0431 cv
466.584 87.0431 466.569 87.0431 466.555 87.0432 cv
466.523 87.0428 466.492 87.0426 466.46 87.0426 cv
460.841 87.0426 451.423 92.9302 451.344 92.9584 cv
451.344 92.9583 451.343 92.9583 451.343 92.9583 cv
.572549 .756863 .596078 rgb
f
460.999 152.131 mo
459.636 136.659 459.972 120.428 460.582 104.119 cv
461.818 104.479 463.066 104.743 464.32 104.911 cv
463.696 120.94 462.78 136.896 460.999 152.131 cv
.756863 .843137 .698039 rgb
f
464.32 104.911 mo
463.066 104.743 461.818 104.479 460.582 104.119 cv
460.582 104.117 460.582 104.115 460.582 104.113 cv
461.818 104.473 463.067 104.74 464.32 104.907 cv
464.32 104.908 464.32 104.91 464.32 104.911 cv
.658823 .803922 .678431 rgb
f
498.968 159.092 mo
492.912 140.16 488.001 119.911 484.193 99.2371 cv
484.277 99.1678 484.36 99.1008 484.44 99.0369 cv
485.481 98.188 486.091 97.6853 486.091 97.6848 cv
486.091 97.6853 485.481 98.062 484.428 98.7091 cv
484.334 98.7743 484.235 98.8399 484.132 98.9058 cv
484.124 98.8626 484.115 98.8164 484.107 98.7732 cv
484.755 98.2159 485.388 97.6208 486.006 96.9888 cv
486.207 96.7848 486.406 96.5764 486.603 96.3634 cv
490.101 117.54 494.163 138.601 498.968 159.092 cv
.756863 .843137 .698039 rgb
f
484.107 98.7732 mo
484.107 98.7694 484.106 98.7674 484.106 98.7636 cv
484.753 98.2062 485.388 97.6181 486.006 96.9888 cv
485.388 97.6208 484.755 98.2159 484.107 98.7732 cv
.658823 .803922 .678431 rgb
f
426.745 165.777 mo
428.642 159.544 430.383 153.282 431.957 146.99 cv
431.614 148.603 431.264 150.209 430.906 151.813 cv
429.594 156.487 428.208 161.136 426.745 165.777 cv
level3{
gsave
clp
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
/4 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~p\Xp`qu-6crUp'do_\UZqu--`rUTjanb`:Tqu-$]rU9X]n,*%Nqu#jYr9X=Ym/$YGqY]XTr9=(Ul2(>A
qY]OQr9!kRk5,#;qY]IOr8[YOj8/]5qY]@Lr8IMMi;3?.qYT1Hqqh2Hh>7$(q>8tCqqLrDgA1X"q>8k@
qq1`AfD5<qq>8b=qpkN>eG/pjq"rP8qpP9:dJ3Udq"rG5qp>-8cM7:^q"r>2qp"p5bkV(Yq"r5/qo\^2
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
clp
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~p@e4Rp@e4Rp@\+Op%7nKo^h\GoCMSFoCDJCo'u8?naQ&;nF5r:nF,i7n*]W3mdBN2md9E/mHj3+m-F!'
lg*m&lg*j$lK[Wul07Eqkih6okih3mkND!ik2tdejlPUcjlPRajQ,C_j5].Yio8tWio8qUiSibSiSi_Q
i8EPNhr!>JhVR,GhVR,Fh;-oBgt^]>gY:K;gY:K:g=k96g"G'3g"G'2f\"j.f@SX*f%/F'f%/F&e^`4"
eC<!te'ldpe'ldpdaHRldF$@hd*U.dd*U.dcd0q`cd0n^c-=MXc-=MXbfn;Tbfn;TbKJ)Pb0%lLaiVZH
~>
<~qYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'b
qYL$`q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^
q>'j^q>'j^q>'j^q>'j^q>'j^q>'j]q"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZ
q"XXZp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FV
~>
<~r;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;6Bgqtp9fqtp9fqtp9fqtp9f
qtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9f
qtp9eqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'b
qYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'b
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /4 /Gradient get_res exec grestore
}if
np
384.731 263.708 mo
384.715 263.681 384.7 263.656 384.684 263.629 cv
387.374 258.649 389.996 253.666 392.543 248.676 cv
390.011 253.696 387.409 258.699 384.731 263.708 cv
level3{
gsave
clp
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
/5 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~qYgBgrVcQjrV6?ip\k'brVcKgrV$0fp&+d]r;H<drUg$do_e[Zr;H3arUTmbo)&CUqu-'^rUB^_n,*(P
qu,s[rU0R]mectMqu,mYrTsF[lhgYHqu,jXrTa:Yl21GDqu,aUrTO.Wkkk>Aqu,[SrT="Ujno#<qu,UQ
rT*kSj88f8qu,RPrSm_QiVNN3qYf@KrS[PNhtm</qY]7Ir8.;Jh>7'*qY].Fr7q/Hh"ps&qY](Dr7_#F
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
clp
/5 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~q>'j^q=sa[q"XXZq"OOWp\+=Sp@e4Rp@e4Rp@\+Op%7nKo^qeJo^qeJo^h\GoCMSFoCDJCo'u8?naZ/>
naZ/>naZ,<nF5r:nF5o8n*f]4mdBN2mdBK0mHs<.mHs<.mHs9,m-O'(lg*m&lg*j$lK[["lK[["lK[Wu
l07Hrkih6okih6nkND$kkND$kkND$jk2tgfjlPUcjlPUbjQ,C_jQ,C^j5]1[j5]1Zio8tWio8tWio8tV
iSibSi8EPOi8EPOhr!>Khr!>KhVR,GhVR,GhVR,Gh;-oCgt^]?gt^]?gY:K;gY:K;gY:H9g"G'3g"G'3
~>
<~r;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;6Bgqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9f
qtp6dqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'b
qYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'b
qYL'bq>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^
~>
<~r;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kj
r;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kj
r;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kj
r;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9f
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /5 /Gradient get_res exec grestore
}if
np
360.616 305.75 mo
360.551 305.729 360.488 305.709 360.423 305.688 cv
362.282 302.639 364.119 299.593 365.937 296.545 cv
365.93 296.935 li
364.182 299.871 362.408 302.813 360.616 305.75 cv
384.373 264.375 mo
384.361 264.34 384.349 264.305 384.337 264.27 cv
384.453 264.056 384.568 263.843 384.684 263.629 cv
384.7 263.656 384.715 263.681 384.731 263.708 cv
384.612 263.93 384.492 264.153 384.373 264.375 cv
.760784 .901961 .898039 rgb
f
365.082 307.179 mo
363.589 306.704 362.102 306.228 360.616 305.75 cv
362.408 302.813 364.182 299.871 365.93 296.935 cv
365.763 306.111 li
365.537 306.465 365.309 306.824 365.082 307.179 cv
386.516 270.621 mo
385.802 268.522 385.087 266.437 384.373 264.375 cv
384.492 264.153 384.612 263.93 384.731 263.708 cv
387.409 258.699 390.011 253.696 392.543 248.676 cv
406.486 221.362 418.201 193.85 426.745 165.777 cv
428.208 161.136 429.594 156.487 430.906 151.813 cv
421.429 194.195 406.445 233.317 386.516 270.621 cv
.819608 .882353 .772549 rgb
f
432.815 179.336 mo
436.663 150.994 441.623 122.581 445.859 94.1414 cv
446.834 95.3036 447.854 96.3754 448.912 97.3565 cv
444.429 124.736 439.399 152.284 432.815 179.336 cv
.756863 .843137 .698039 rgb
f
448.912 97.3565 mo
447.854 96.3754 446.834 95.3036 445.859 94.1414 cv
445.86 94.1362 445.861 94.1302 445.862 94.125 cv
446.838 95.2867 447.859 96.3519 448.916 97.3327 cv
448.915 97.341 448.914 97.3481 448.912 97.3565 cv
.658823 .803922 .678431 rgb
f
440.426 189.224 mo
442.734 158.876 447.234 128.961 450.61 98.8261 cv
451.699 99.7047 452.822 100.493 453.971 101.19 cv
450.233 130.329 445.606 159.604 440.426 189.224 cv
.756863 .843137 .698039 rgb
f
453.971 101.19 mo
452.822 100.493 451.699 99.7047 450.61 98.8261 cv
450.611 98.8187 450.611 98.814 450.612 98.8066 cv
451.701 99.6869 452.822 100.486 453.971 101.184 cv
453.971 101.185 453.971 101.189 453.971 101.19 cv
.658823 .803922 .678431 rgb
f
466.584 98.0458 mo
460.13 97.9815 451.315 92.9583 451.343 92.9583 cv
451.343 92.9583 451.344 92.9583 451.344 92.9584 cv
451.423 92.9302 460.841 87.0426 466.46 87.0426 cv
466.492 87.0426 466.523 87.0428 466.555 87.0432 cv
466.569 87.0431 466.584 87.0431 466.599 87.0431 cv
473.002 87.0431 481.721 92.9985 481.793 93.0145 cv
481.794 93.0144 481.794 93.0144 481.794 93.0144 cv
481.822 93.0144 473.038 98.0029 466.584 98.0458 cv
.309804 .65098 .537255 rgb
f
468.332 105.116 mo
473.643 104.95 478.89 103.034 483.488 99.2919 cv
483.717 99.1615 483.932 99.033 484.132 98.9058 cv
484.152 99.0165 484.172 99.1264 484.193 99.2371 cv
483.723 99.6206 483.179 100.074 482.529 100.458 cv
481.767 100.921 480.941 101.548 479.988 102.023 cv
478.096 103.006 475.86 104.004 473.488 104.502 cv
471.777 104.963 470.008 105.107 468.332 105.116 cv
.85098 .901961 .811765 rgb
f
468.16 105.116 mo
467.591 105.116 467.033 105.101 466.493 105.078 cv
464.316 104.835 461.893 104.368 459.608 103.438 cv
457.324 102.518 455.147 101.384 453.343 100.154 cv
452.428 99.5779 451.616 98.9434 450.878 98.4243 cv
450.157 97.8592 449.524 97.36 449.001 96.9458 cv
447.971 96.0836 447.367 95.5722 447.367 95.5722 cv
447.367 95.5726 448.027 95.9971 449.141 96.7129 cv
450.263 97.4066 451.844 98.3955 453.731 99.3607 cv
455.603 100.374 457.803 101.27 460.036 101.976 cv
462.267 102.727 464.558 103.004 466.55 103.247 cv
467.12 103.266 467.699 103.285 468.284 103.308 cv
468.577 103.32 468.872 103.333 469.167 103.346 cv
469.463 103.327 469.759 103.308 470.054 103.289 cv
470.648 103.254 471.243 103.222 471.838 103.191 cv
472.428 103.093 473.016 103 473.6 102.907 cv
473.892 102.862 474.183 102.819 474.472 102.776 cv
474.759 102.715 475.039 102.626 475.321 102.556 cv
475.884 102.407 476.437 102.262 476.979 102.122 cv
478.056 101.801 479.056 101.359 480.003 101.032 cv
481.348 100.398 482.541 99.8295 483.488 99.2919 cv
478.89 103.034 473.643 104.95 468.332 105.116 cv
468.275 105.116 468.218 105.116 468.16 105.116 cv
.788235 .878431 .8 rgb
f
484.193 99.2371 mo
484.172 99.1264 484.152 99.0165 484.132 98.9058 cv
484.235 98.8399 484.334 98.7743 484.428 98.7091 cv
485.481 98.062 486.091 97.6853 486.091 97.6848 cv
486.091 97.6853 485.481 98.188 484.44 99.0369 cv
484.36 99.1008 484.277 99.1678 484.193 99.2371 cv
.878431 .921569 .85098 rgb
f
68.3399 398.334 mo
196.622 398.852 324.904 368.678 408.47 320.292 cv
328.74 297.341 256.555 270.842 205.451 238.931 cv
153.342 207.215 122.313 170.087 101.703 130.355 cv
96.0773 130.984 90.1362 129.046 84.561 127.108 cv
79.6683 125.406 75.0574 123.705 71.1887 123.739 cv
61.1324 123.875 47.8114 131.786 34.9764 130.355 cv
25.736 148.17 14.3905 165.457 0 181.972 cv
0 395.751 li
22.6117 397.538 45.475 398.426 68.3399 398.334 cv
.682353 .741176 .498039 rgb
f
51.839 326.621 mo
51.6263 325.782 51.3981 324.882 51.1606 323.946 cv
50.8109 322.628 50.4766 321.258 50.0661 319.879 cv
49.2275 317.116 48.4369 314.439 47.5724 312.447 cv
46.7834 310.478 46.2636 309.181 46.2636 309.181 cv
46.2636 309.181 45.7107 310.465 44.8712 312.414 cv
44.3496 313.747 43.5364 315.384 42.6522 317.117 cv
39.4546 262.26 44.6165 208.13 58.247 155.891 cv
57.0863 167.343 56.5535 178.689 58.2377 189.668 cv
62.0768 176.269 64.0139 162.205 65.3059 148.052 cv
67.7212 148.285 70.1542 148.398 72.5941 148.398 cv
74.4652 148.398 76.3408 148.331 78.2148 148.2 cv
81.7451 169.211 87.6784 189.822 95.4436 209.973 cv
95.5413 211.884 96.0473 213.783 96.9505 215.648 cv
97.5108 216.805 98.2246 217.951 99.0879 219.078 cv
111.664 249.375 128.249 278.619 146.865 306.624 cv
146.823 306.691 146.78 306.759 146.737 306.828 cv
145.729 308.394 144.552 310.405 143.328 312.508 cv
142.722 310.493 142.123 308.622 141.717 307.125 cv
141.437 306.112 141.248 305.271 141.151 304.679 cv
141.051 304.087 141.043 303.745 141.043 303.745 cv
141.043 303.745 140.984 303.822 140.873 303.967 cv
140.757 304.113 140.605 304.33 140.415 304.611 cv
140.041 305.172 139.555 305.991 139.023 306.985 cv
137.976 308.929 136.745 311.543 135.427 314.146 cv
135.371 313.986 135.317 313.825 135.26 313.667 cv
134.257 310.86 133.203 308.095 132.585 306.047 cv
131.914 303.975 131.473 302.61 131.473 302.61 cv
131.473 302.61 130.843 303.942 129.886 305.965 cv
129.596 306.556 129.296 307.21 128.99 307.901 cv
128.346 305.458 127.911 303.809 127.911 303.809 cv
127.911 303.809 126.148 307.379 123.987 311.756 cv
123.891 311.438 123.795 311.119 123.697 310.793 cv
123.149 309.04 122.628 307.193 121.991 305.393 cv
120.7 301.792 119.421 298.274 118.429 295.665 cv
117.443 293.049 116.794 291.326 116.794 291.326 cv
116.794 291.326 115.103 298.278 113.35 305.484 cv
113.026 306.788 112.642 308.084 112.277 309.347 cv
112.18 309.122 112.083 308.896 111.986 308.671 cv
111.34 305.348 110.885 303.005 110.885 303.005 cv
110.885 303.005 110.63 303.537 110.191 304.451 cv
100.083 280.449 91.393 255.867 83.783 231.2 cv
82.6909 250.205 82.0024 269.381 82.0039 288.594 cv
82.0045 295.887 82.1046 303.19 82.3196 310.486 cv
80.6947 313.347 79.0868 316.4 77.6052 319.569 cv
75.9999 314.011 74.308 308.454 74.308 308.454 cv
74.308 308.454 71.2031 314.08 68.2732 319.567 cv
66.7182 311.538 64.7569 302.196 64.7569 302.196 cv
64.7569 302.196 57.4281 318.469 54.2867 326.164 cv
53.4492 326.37 52.6307 326.53 51.839 326.621 cv
150.38 313.1 mo
150.284 312.536 150.188 311.982 150.096 311.442 cv
150.417 311.917 150.744 312.399 151.066 312.873 cv
150.837 312.947 150.608 313.023 150.38 313.1 cv
.556863 .67451 .454902 rgb
f
82.3196 310.486 mo
82.1046 303.19 82.0045 295.887 82.0039 288.594 cv
82.0024 269.381 82.6909 250.205 83.783 231.2 cv
91.393 255.867 100.083 280.449 110.191 304.451 cv
109.613 305.656 108.717 307.525 107.667 309.714 cv
101.518 298.928 95.4262 290.919 95.4262 290.919 cv
95.4262 290.919 88.7491 299.168 82.3196 310.486 cv
112.182 309.677 mo
112.115 309.333 112.05 308.998 111.986 308.671 cv
112.083 308.896 112.18 309.122 112.277 309.347 cv
112.245 309.457 112.213 309.567 112.182 309.677 cv
.494118 .643137 .435294 rgb
f
235.126 305.78 mo
234.648 304.792 234.198 303.869 233.802 303.059 cv
234.4 303.532 235.008 304.011 235.608 304.483 cv
235.447 304.917 235.286 305.35 235.126 305.78 cv
228.071 305.335 mo
226.258 302.474 224.765 300.178 224.765 300.178 cv
224.765 300.178 223.01 302.046 220.777 304.467 cv
218.8 298.768 216.956 293.66 216.956 293.66 cv
216.956 293.66 216.309 294.715 215.29 296.388 cv
215.042 293.866 214.79 291.344 214.545 288.907 cv
214.899 288.623 215.258 288.341 215.621 288.062 cv
220.739 292.463 225.967 296.798 231.295 301.063 cv
230.539 302.059 229.384 303.585 228.071 305.335 cv
178.486 303.413 mo
177.055 301.736 175.642 300.049 174.244 298.349 cv
174.076 297.822 173.922 297.316 173.783 296.835 cv
173.525 296.098 173.419 295.426 173.28 294.826 cv
173.149 294.225 173.035 293.702 172.942 293.272 cv
172.754 292.404 172.648 291.912 172.648 291.912 cv
172.648 291.912 172.485 292.395 172.2 293.246 cv
172.057 293.674 171.884 294.195 171.685 294.794 cv
171.655 294.889 171.623 294.985 171.59 295.083 cv
157.103 277.039 144.405 257.711 132.723 237.174 cv
135.432 237.903 138.32 238.489 141.315 238.933 cv
147.655 244.944 156.463 250.17 168.459 252.883 cv
169.524 253 172.113 261.393 172.874 262.76 cv
174.864 266.696 177.532 270.719 180.97 274.699 cv
184.08 278.299 187.766 281.903 192.073 285.411 cv
195.357 288.073 195.086 287.861 192.738 289.729 cv
191.55 290.672 190.394 291.629 189.277 292.601 cv
187.918 293.767 186.605 294.95 185.338 296.155 cv
185.371 295.571 185.389 295.246 185.389 295.246 cv
185.389 295.246 185.117 295.648 184.638 296.359 cv
184.392 296.738 184.068 297.204 183.703 297.746 cv
181.854 299.59 180.113 301.478 178.486 303.413 cv
200.113 284.37 mo
181.85 271.566 173.754 257.994 171.034 244.994 cv
182.261 257.234 194.179 268.986 206.777 280.293 cv
204.479 281.604 202.245 282.952 200.113 284.37 cv
168.516 250.574 mo
158.46 249.797 149.144 244.608 142.489 239.099 cv
146.802 239.679 151.33 239.97 155.881 239.97 cv
159.283 239.97 162.7 239.808 166.056 239.484 cv
166.521 240.006 166.983 240.523 167.45 241.044 cv
167.504 244.172 167.833 247.347 168.516 250.574 cv
108.171 191.11 mo
100.652 176.576 93.4967 161.96 87.5943 147.006 cv
91.5282 146.278 95.4185 145.275 99.2173 144.01 cv
102.217 149.388 105.465 154.699 108.972 159.915 cv
113.148 167.293 117.511 174.52 122.066 181.611 cv
117.57 184.134 112.976 187.291 108.171 191.11 cv
.556863 .67451 .454902 rgb
f
168.657 310.686 mo
168.379 310.668 168.101 310.661 167.823 310.649 cv
167.771 310.399 167.718 310.143 167.667 309.895 cv
167.503 309.054 167.402 308.233 167.271 307.433 cv
166.98 305.829 166.923 304.352 166.795 303.068 cv
166.72 302.425 166.733 301.845 166.73 301.326 cv
166.727 300.806 166.725 300.354 166.723 299.982 cv
166.721 299.331 166.719 298.925 166.719 298.829 cv
167.818 299.818 168.916 300.81 170.012 301.802 cv
169.653 303.763 169.325 305.876 169.051 307.988 cv
168.919 308.891 168.789 309.793 168.657 310.686 cv
163.037 304.725 mo
160.193 299.221 157.421 293.689 154.711 288.133 cv
158.735 291.672 162.731 295.237 166.71 298.82 cv
166.66 298.895 166.406 299.274 165.995 299.89 cv
165.764 300.238 165.482 300.661 165.159 301.148 cv
164.837 301.636 164.454 302.189 164.126 302.804 cv
163.798 303.396 163.421 304.04 163.037 304.725 cv
f
0 372.441 mo
0 277.675 li
4.04288 271.916 8.14615 266.187 12.3355 260.502 cv
10.7831 283.788 8.52256 307.073 5.69836 330.338 cv
5.34412 330.592 4.92085 330.896 4.44888 331.236 cv
2.94136 327.507 1.19885 323.376 0 320.561 cv
0 372.441 li
0 372.441 li
f
273.69 273.75 mo
270.823 272.524 267.992 271.29 265.186 270.046 cv
265.219 270.052 265.252 270.058 265.285 270.064 cv
268.062 271.296 270.872 272.52 273.707 273.734 cv
273.702 273.739 273.696 273.745 273.69 273.75 cv
level3{
gsave
clp
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
309.164 287.928 mo
303.28 285.724 297.493 283.491 291.805 281.225 cv
291.809 281.223 291.815 281.22 291.82 281.217 cv
297.499 283.484 303.289 285.723 309.164 287.928 cv
288.911 280.066 mo
284.928 278.462 281 276.844 277.122 275.208 cv
277.127 275.202 277.131 275.197 277.136 275.191 cv
281.013 276.829 284.951 278.453 288.932 280.059 cv
288.925 280.061 288.918 280.063 288.911 280.066 cv
.760784 .901961 .886274 rgb
f
362.046 312.34 mo
360.915 309.235 358.397 307.78 355.192 307.472 cv
355.08 306.289 354.967 305.098 354.853 303.906 cv
358.454 305.083 362.088 306.254 365.739 307.413 cv
365.712 308.895 li
364.067 309.853 362.786 311 362.046 312.34 cv
341.058 308.258 mo
319.074 301.041 298.742 292.972 279.928 284.245 cv
284.421 284.02 288.375 282.935 291.805 281.225 cv
297.493 283.491 303.28 285.724 309.164 287.928 cv
320.352 292.128 331.883 296.219 343.712 300.208 cv
342.825 302.886 341.928 305.603 341.058 308.258 cv
279.201 281.586 mo
277.328 281.586 275.364 281.435 273.306 281.116 cv
272.821 280.882 272.333 280.647 271.849 280.412 cv
273.899 278.852 275.646 277.105 277.122 275.208 cv
281 276.844 284.928 278.462 288.911 280.066 cv
285.996 281.039 282.764 281.586 279.201 281.586 cv
267.625 278.339 mo
259.799 274.453 252.258 270.457 244.977 266.358 cv
245.41 265.922 245.834 265.48 246.25 265.034 cv
252.212 267.112 258.601 268.827 265.186 270.046 cv
267.992 271.29 270.823 272.524 273.69 273.75 cv
271.94 275.473 269.919 277.017 267.625 278.339 cv
237.52 262.072 mo
236.292 261.351 235.071 260.628 233.858 259.901 cv
235.165 260.539 236.508 261.16 237.888 261.763 cv
237.765 261.867 237.644 261.969 237.52 262.072 cv
219.275 250.796 mo
212.445 246.354 205.882 241.825 199.58 237.231 cv
197.254 235.537 194.954 233.829 192.683 232.109 cv
193.012 231.922 193.334 231.732 193.651 231.538 cv
199.532 235.483 205.712 239.35 212.168 243.138 cv
213.823 245.719 216.239 248.299 219.275 250.796 cv
.807843 .843137 .662745 rgb
f
102.814 132.474 mo
102.44 131.768 102.071 131.064 101.703 130.355 cv
102.075 131.054 102.457 131.748 102.834 132.445 cv
102.827 132.455 102.82 132.465 102.814 132.474 cv
38.175 130.528 mo
37.1326 130.528 36.0924 130.477 35.0542 130.364 cv
35.0535 130.363 35.0529 130.362 35.0521 130.361 cv
36.0921 130.474 37.1342 130.525 38.1782 130.525 cv
50.0043 130.525 61.9628 123.863 71.1887 123.739 cv
61.9659 123.864 49.9964 130.528 38.175 130.528 cv
99.4772 130.476 mo
94.5264 130.476 89.406 128.792 84.561 127.108 cv
79.7167 125.423 75.1482 123.739 71.3032 123.739 cv
71.2648 123.739 71.2269 123.739 71.1887 123.739 cv
71.2274 123.739 71.2659 123.739 71.3047 123.739 cv
75.1496 123.739 79.7179 125.423 84.5619 127.108 cv
89.4067 128.792 94.5269 130.476 99.4773 130.476 cv
99.4772 130.476 li
level3{
gsave
clp
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
/6 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~`T-+"j6";?k/-0@_;j[oj6"/:k.fp<^#J1eio[o5k.BX7]&Mh]ioR]0jgX72[c->TiT7E)jg3q-ZJjoM
iT79%jfdY)Y2SKEiT70"jf78#Wo3!<i8poqjeq%uVVpO3i8g]ljJ1YoU>Y++hrLHfjIb>jT&8V"hrL<b
jI>&fRc!1ohrL3_jHncbQJ^bghrL$ZjHJK^P2G>_hrBgUj,i0YNo/lVhrB[Pj,;dSMr*KNhW'FKj+lLO
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
clp
/6 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~`5KU4`5KU4`5BL0_SO()_8*k%^qdb$^q[Y!^V7Fq]tD"j]Xtef]=Y\e]=PSb]",A]\@8rV\$riU\$i`R
[^NTO['[0GZa6sCZEgdAZEga?Z*CO;YHP+3Y-+q1Y-+n/Xf\\+XK8J'WiE%tWMukrWMuhpW2QVlVl-Dh
VP^5eV5:#aUnjf]USFTYU8"BUTqS0QTV.sMT:_aISt;OESXl=AS=H+=S"#n9R[T\5R@0J1R$a8.R$X/*
QBmi&Q'IW"Pa%DsPEV2oP*1ukOcbcgOH>QcO,o?_O,o<]NK&pWN/W^SMi3LOMMd:KMMd7ILkpkCLPLY?
~>
<~io8tWio8tWio8tWio8tWio8tWio8tWio/kTiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibS
iSi_Qi8EPOi8EPOi8EPOi8EPOi8EPOi8EPOi8EPOi8EPOi8EPOi8EPOi8EMMhr!>Khr!>Khr!>Khr!>K
hr!>Khr!>Khr!>Khr!>Khr!>Khr!>JhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,G
hVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,Gh;-oCh;-oCh;-oCh;-oCh;-oC
~>
<~jlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlGL`jQ,C_jQ,C_jQ,C_jQ,C_
jQ,C_jQ,C_jQ,C_jQ,C_jQ,C_jQ,C_jQ,C_jQ,C_jQ,C_jQ,C_jQ,C_jQ,C_jQ,C_jQ,C_jQ,C_jQ,C_
jQ,C^j5]1[j5]1[j5]1[j5]1[j5]1[j5]1[j5]1[j5]1[j5]1[j5]1[j5]1[j5]1[j5]1[j5]1[j5]1[
j5]1[j5]1[j5]1[j5]1[j5]1[j5]1[io8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tW
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /6 /Gradient get_res exec grestore
}if
np
57.7738 144.906 mo
54.7535 144.201 51.8439 143.238 49.1294 142.016 cv
49.1357 141.998 49.1421 141.981 49.1484 141.963 cv
47.4189 141.17 45.7731 140.266 44.2266 139.269 cv
44.2151 139.301 44.2037 139.333 44.1922 139.364 cv
43.3705 138.841 42.5768 138.288 41.8163 137.706 cv
41.8329 137.672 41.8484 137.639 41.8649 137.605 cv
40.4239 136.498 39.0921 135.303 37.8969 134.005 cv
37.884 134.031 37.8717 134.056 37.8589 134.082 cv
36.8102 132.924 35.869 131.683 35.0542 130.364 cv
36.0924 130.477 37.1326 130.528 38.175 130.528 cv
49.9964 130.528 61.9659 123.864 71.1887 123.739 cv
71.1887 123.739 li
71.1887 123.739 li
71.2269 123.739 71.2648 123.739 71.3032 123.739 cv
75.1482 123.739 79.7167 125.423 84.561 127.108 cv
89.406 128.792 94.5264 130.476 99.4772 130.476 cv
99.4773 130.476 li
99.4773 130.476 li
100.223 130.476 100.967 130.438 101.703 130.355 cv
101.703 130.355 li
102.071 131.064 102.44 131.768 102.814 132.474 cv
101.904 133.763 100.873 134.961 99.7383 136.068 cv
99.731 136.054 99.7235 136.039 99.7162 136.026 cv
98.6897 137.013 97.5722 137.924 96.3862 138.775 cv
96.3975 138.796 96.409 138.818 96.4204 138.84 cv
94.8997 139.64 92.7198 140.506 90.113 141.432 cv
89.3954 141.648 88.6472 141.87 87.8728 142.097 cv
87.098 142.319 86.3062 142.582 85.4625 142.729 cv
83.7862 143.056 82.0484 143.503 80.2201 143.676 cv
79.3125 143.793 78.3958 143.905 77.4749 144.016 cv
76.5469 144.07 75.6171 144.121 74.6902 144.167 cv
74.2269 144.193 73.7648 144.218 73.3038 144.243 cv
72.8413 144.239 72.3803 144.233 71.9221 144.227 cv
71.006 144.221 70.0998 144.209 69.2091 144.197 cv
66.0869 143.996 62.507 143.737 59.0231 142.972 cv
55.5315 142.277 52.1368 141.274 49.2795 140.144 cv
46.4028 139.059 44.0549 137.885 42.4149 137.055 cv
40.7876 136.198 39.8506 135.669 39.846 135.669 cv
39.846 135.669 39.846 135.669 39.846 135.669 cv
39.8491 135.669 40.6859 136.324 42.1808 137.407 cv
43.6906 138.455 45.8884 139.918 48.6802 141.325 cv
51.2807 142.689 54.426 143.944 57.7738 144.906 cv
46.2764 133.962 mo
45.8548 133.985 58.1503 142.536 68.939 142.536 cv
69.0073 142.536 69.0746 142.536 69.1427 142.535 cv
69.1784 142.535 69.215 142.535 69.2508 142.535 cv
80.0628 142.535 92.2734 133.876 91.8503 133.854 cv
91.8485 133.854 91.8463 133.854 91.8439 133.854 cv
91.328 133.854 77.3359 127.056 68.9865 126.976 cv
61.7576 127.118 46.8928 133.962 46.2861 133.963 cv
46.2823 133.963 46.2791 133.962 46.2764 133.962 cv
.556863 .67451 .454902 rgb
f
58.247 155.891 mo
58.6018 152.391 59.0152 148.88 59.4419 145.368 cv
61.4302 145.881 63.4664 146.223 65.4489 146.457 cv
65.4021 146.988 65.3544 147.521 65.3059 148.052 cv
63.7058 147.899 62.1138 147.693 60.5326 147.433 cv
59.7462 150.246 58.984 153.066 58.247 155.891 cv
.745098 .792157 .580392 rgb
f
58.2377 189.668 mo
56.5535 178.689 57.0863 167.343 58.247 155.891 cv
58.984 153.066 59.7462 150.246 60.5326 147.433 cv
62.1138 147.693 63.7058 147.899 65.3059 148.052 cv
64.0139 162.205 62.0768 176.269 58.2377 189.668 cv
.647059 .737255 .529412 rgb
f
124.491 180.306 mo
118.836 173.723 113.672 166.904 108.972 159.915 cv
105.952 154.579 103.03 149.163 100.211 143.673 cv
99.8802 143.787 99.5491 143.9 99.2173 144.01 cv
98.3352 142.429 97.4754 140.843 96.6361 139.25 cv
96.7057 139.202 96.7739 139.154 96.8409 139.107 cv
98.3646 138.023 99.2192 137.368 99.2223 137.367 cv
99.2223 137.367 li
99.2189 137.367 98.3415 137.845 96.7888 138.64 cv
96.6766 138.703 96.56 138.766 96.4393 138.83 cv
97.6163 137.982 98.7182 137.062 99.7383 136.068 cv
107.459 150.81 116.145 165.384 126.052 179.527 cv
125.533 179.778 125.012 180.038 124.491 180.306 cv
.745098 .792157 .580392 rgb
f
108.972 159.915 mo
105.465 154.699 102.217 149.388 99.2173 144.01 cv
99.5491 143.9 99.8802 143.787 100.211 143.673 cv
103.03 149.163 105.952 154.579 108.972 159.915 cv
.647059 .737255 .529412 rgb
f
96.4204 138.84 mo
96.409 138.818 96.3975 138.796 96.3862 138.775 cv
97.5722 137.924 98.6897 137.013 99.7162 136.026 cv
99.7235 136.039 99.731 136.054 99.7383 136.068 cv
98.7182 137.062 97.6163 137.982 96.4393 138.83 cv
96.433 138.833 96.4267 138.837 96.4204 138.84 cv
f
0 182.36 mo
0 182.04 li
.659695 181.279 1.31624 180.516 1.96106 179.752 cv
1.31488 180.624 .659244 181.493 0 182.36 cv
.807843 .843137 .662745 rgb
f
0 206.987 mo
0 205.3 li
12.3444 181.539 26.1766 157.931 37.8589 134.082 cv
39.0464 135.394 40.3727 136.602 41.8163 137.706 cv
30.552 161.111 17.2046 184.495 0 206.987 cv
.745098 .792157 .580392 rgb
f
41.8163 137.706 mo
40.3727 136.602 39.0464 135.394 37.8589 134.082 cv
37.8717 134.056 37.884 134.031 37.8969 134.005 cv
39.0921 135.303 40.4239 136.498 41.8649 137.605 cv
41.8484 137.639 41.8329 137.672 41.8163 137.706 cv
.647059 .737255 .529412 rgb
f
12.3355 221.414 mo
21.0899 193.664 34.2985 166.756 44.1922 139.364 cv
45.7419 140.352 47.3967 141.237 49.1294 142.016 cv
39.7115 168.513 27.1691 194.917 12.3355 221.414 cv
.745098 .792157 .580392 rgb
f
49.1294 142.016 mo
47.3967 141.237 45.7419 140.352 44.1922 139.364 cv
44.2037 139.333 44.2151 139.301 44.2266 139.269 cv
45.7731 140.266 47.4189 141.17 49.1484 141.963 cv
49.1421 141.981 49.1357 141.998 49.1294 142.016 cv
.647059 .737255 .529412 rgb
f
68.939 142.536 mo
58.1503 142.536 45.8548 133.985 46.2764 133.962 cv
46.2791 133.962 46.2823 133.963 46.2861 133.963 cv
46.8928 133.962 61.7576 127.118 68.9865 126.976 cv
77.3359 127.056 91.328 133.854 91.8439 133.854 cv
91.8463 133.854 91.8485 133.854 91.8503 133.854 cv
92.2734 133.876 80.0628 142.535 69.2508 142.535 cv
69.215 142.535 69.1784 142.535 69.1427 142.535 cv
69.0746 142.536 69.0073 142.536 68.939 142.536 cv
.294118 .517647 .356863 rgb
f
70.5396 146.802 mo
70.0905 146.802 69.6466 146.797 69.2105 146.79 cv
67.9975 146.713 66.7346 146.608 65.4489 146.457 cv
65.4577 146.356 65.4664 146.257 65.4752 146.157 cv
63.4427 145.979 61.4271 145.686 59.4523 145.283 cv
59.4488 145.311 59.4454 145.339 59.4419 145.368 cv
59.1021 145.28 58.7636 145.187 58.4271 145.089 cv
58.2086 145.03 57.9907 144.968 57.7738 144.906 cv
61.8227 145.851 66.069 146.328 70.2991 146.328 cv
79.9075 146.328 89.4378 143.868 96.4218 138.843 cv
96.4928 138.978 96.5648 139.115 96.6361 139.25 cv
96.3082 139.48 95.9514 139.727 95.567 139.989 cv
95.1019 140.31 94.5623 140.574 94.0024 140.895 cv
93.4374 141.207 92.8345 141.531 92.1962 141.871 cv
91.8765 142.04 91.5477 142.212 91.2111 142.387 cv
90.8653 142.537 90.5109 142.689 90.1493 142.841 cv
89.4227 143.142 88.6656 143.451 87.8825 143.763 cv
87.4898 143.916 87.0903 144.07 86.685 144.225 cv
86.2718 144.351 85.8522 144.477 85.4284 144.603 cv
84.579 144.853 83.7098 145.104 82.8273 145.354 cv
81.9448 145.609 81.0235 145.74 80.1099 145.93 cv
76.9189 146.602 73.5943 146.802 70.5396 146.802 cv
.843137 .870588 .709804 rgb
f
70.2991 146.328 mo
66.069 146.328 61.8227 145.851 57.7738 144.906 cv
54.426 143.944 51.2807 142.689 48.6802 141.325 cv
45.8884 139.918 43.6906 138.455 42.1808 137.407 cv
40.6859 136.324 39.8491 135.669 39.846 135.669 cv
39.846 135.669 39.846 135.669 39.846 135.669 cv
39.8506 135.669 40.7876 136.198 42.4149 137.055 cv
44.0549 137.885 46.4028 139.059 49.2795 140.144 cv
52.1368 141.274 55.5315 142.277 59.0231 142.972 cv
62.507 143.737 66.0869 143.996 69.2091 144.197 cv
70.0998 144.209 71.006 144.221 71.9221 144.227 cv
72.3803 144.233 72.8413 144.239 73.3038 144.243 cv
73.7648 144.218 74.2269 144.193 74.6902 144.167 cv
75.6171 144.121 76.5469 144.07 77.4749 144.016 cv
78.3958 143.905 79.3125 143.793 80.2201 143.676 cv
82.0484 143.503 83.7862 143.056 85.4625 142.729 cv
86.3062 142.582 87.098 142.319 87.8728 142.097 cv
88.6472 141.87 89.3954 141.648 90.113 141.432 cv
92.7198 140.506 94.8997 139.64 96.4204 138.84 cv
96.421 138.841 96.4212 138.841 96.4218 138.843 cv
89.4378 143.868 79.9075 146.328 70.2991 146.328 cv
.780392 .839216 .647059 rgb
f
65.4489 146.457 mo
63.4664 146.223 61.4302 145.881 59.4419 145.368 cv
59.4454 145.339 59.4488 145.311 59.4523 145.283 cv
61.4271 145.686 63.4427 145.979 65.4752 146.157 cv
65.4664 146.257 65.4577 146.356 65.4489 146.457 cv
.87451 .898039 .760784 rgb
f
96.6361 139.25 mo
96.5648 139.115 96.4928 138.978 96.4218 138.843 cv
96.4278 138.838 96.4333 138.834 96.4393 138.83 cv
96.56 138.766 96.6766 138.703 96.7888 138.64 cv
98.3415 137.845 99.2189 137.367 99.2223 137.367 cv
99.2223 137.367 li
99.2192 137.368 98.3646 138.023 96.8409 139.107 cv
96.7739 139.154 96.7057 139.202 96.6361 139.25 cv
f
96.4218 138.843 mo
96.4212 138.841 96.421 138.841 96.4204 138.84 cv
96.4267 138.837 96.433 138.833 96.4393 138.83 cv
96.4333 138.834 96.4278 138.838 96.4218 138.843 cv
.823529 .870588 .729412 rgb
f
831.229 238.932 mo
780.124 270.842 707.94 297.341 628.209 320.292 cv
696.881 360.054 795.75 387.512 900 395.751 cv
900 181.972 li
882.294 202.29 859.974 221.435 831.229 238.932 cv
.682353 .741176 .498039 rgb
f
888.161 330.32 mo
886.763 329.898 885.561 329.462 884.427 329.043 cv
883.767 327.501 883.086 325.912 882.409 324.331 cv
881.584 322.392 880.647 320.449 879.812 318.663 cv
878.948 316.871 878.037 315.219 877.314 313.823 cv
877.046 313.354 876.787 312.913 876.544 312.505 cv
884.147 300.781 891.938 289.16 900 277.675 cv
900 320.561 li
899.135 318.531 898.552 317.18 898.552 317.18 cv
898.552 317.18 895.445 321.667 892.154 326.555 cv
891.655 325.645 891.336 325.095 891.336 325.095 cv
891.336 325.095 890.662 326.255 889.588 327.992 cv
889.164 328.683 888.676 329.469 888.161 330.32 cv
867.175 327.144 mo
869.217 323.913 871.268 320.693 873.336 317.476 cv
873.237 317.981 873.131 318.5 873.013 319.03 cv
872.584 320.85 872.169 322.771 871.646 324.74 cv
871.478 325.403 871.309 326.07 871.139 326.736 cv
869.662 326.797 868.357 326.938 867.175 327.144 cv
.556863 .67451 .454902 rgb
f
762.291 312.655 mo
761.16 309.55 758.642 308.094 755.437 307.786 cv
755.112 304.338 754.772 300.816 754.44 297.431 cv
756.429 296.403 758.415 295.364 760.403 294.311 cv
760.697 294.148 760.987 293.988 761.28 293.826 cv
766.849 291.046 772.343 288.247 777.764 285.43 cv
780.762 291.985 784.646 297.74 789.192 302.395 cv
789.049 303.052 788.915 303.706 788.749 304.355 cv
788.604 304.84 788.461 305.32 788.318 305.797 cv
786.723 305.59 784.988 305.486 783.194 305.486 cv
774.738 305.486 764.971 307.802 762.291 312.655 cv
.619608 .709804 .47451 rgb
f
857.301 221.352 mo
857.292 221.332 857.285 221.314 857.276 221.294 cv
860.275 219.052 863.196 216.787 866.034 214.505 cv
866.109 214.505 li
863.258 216.809 860.324 219.091 857.301 221.352 cv
level3{
gsave
clp
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
/7 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~p\Xp`qu-6crUp'do_\UZqu--`rUTjanb`:Tqu-$]rU9X]n,*%Nqu#jYr9X=Ym/$YGqY]XTr9=(Ul2(>A
qY]OQr9!kRk5,#;qY]IOr8[YOj8/]5qY]@Lr8IMMi;3?.qYT1Hqqh2Hh>7$(q>8tCqqLrDgA1X"q>8k@
qq1`AfD5<qq>8b=qpkN>eG/pjq"rP8qpP9:dJ3Udq"iA4qU#$6cM77]q"i81qT\g3bkV%Xq"i/.qTAU0
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
clp
/7 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~p@e4Rp@e4Rp@\+Op%7nKo^h\GoCMSFoCDJCo'u8?naQ&;nF5r:nF,i7n*]W3mdBN2md9E/mHj3+m-F!'
lg*m&lg*j$lK[Wul07Eqkih6okih3mkND!ik2tdejlPUcjlPRajQ,C_j5].Yio8tWio8qUiSibSiSi_Q
i8EPNhr!>JhVR,GhVR,Fh;-oBgt^]>gY:K;gY:K:g=k96g"G'3g"G'2f\"j.f@SX*f%/F'f%/F&e^`4"
eC<!te'ldpe'ldpdaHRldF$@hd*U.dd*U.dcd0q`cd0n^c-=MXc-=MXbfn;Tbfn;TbKJ)Pb0%lLaiVZH
~>
<~qYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'b
qYL$`q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^
q>'j^q>'j^q>'j^q>'j^q>'j^q>'j]q"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZ
q"XXZp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FV
~>
<~r;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;6Bgqtp9fqtp9fqtp9fqtp9f
qtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9f
qtp9eqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'b
qYL'bqYL'bqYL'bqYL'bqYL'bqYL'bq>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /7 /Gradient get_res exec grestore
}if
np
866.109 214.505 mo
866.034 214.505 li
870.228 211.133 874.247 207.716 878.094 204.26 cv
874.271 207.719 870.279 211.135 866.109 214.505 cv
level3{
gsave
clp
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
741.472 291.523 mo
740.007 289.113 738.55 286.7 737.108 284.288 cv
741.898 282.44 746.617 280.571 751.264 278.679 cv
750.458 281.068 749.219 284.748 747.769 289.079 cv
745.689 289.9 743.587 290.716 741.472 291.523 cv
753.386 286.829 mo
753.018 283.173 752.707 280.137 752.505 278.172 cv
759.385 275.357 766.094 272.494 772.629 269.575 cv
773.195 272.334 773.901 275.014 774.734 277.605 cv
767.848 280.768 760.729 283.842 753.386 286.829 cv
858.971 225.43 mo
858.452 224.04 857.894 222.68 857.301 221.352 cv
860.324 219.091 863.258 216.809 866.109 214.505 cv
870.279 211.135 874.271 207.719 878.094 204.26 cv
886.145 197.026 893.438 189.613 900 182.04 cv
900 182.36 li
888.459 197.541 874.914 211.934 858.971 225.43 cv
.807843 .843137 .662745 rgb
f
897.394 210.363 mo
898.254 208.675 899.124 206.987 900 205.3 cv
900 206.987 li
899.138 208.114 898.275 209.241 897.394 210.363 cv
.745098 .792157 .580392 rgb
f
622.777 155.732 mo
595.63 155.732 568.483 163.363 541.335 163.363 cv
534.587 237.406 477.952 303.465 440.504 373.516 cv
553.982 412.368 677.16 412.369 790.638 373.516 cv
753.19 303.465 696.555 237.406 689.806 163.363 cv
667.463 163.363 645.12 155.732 622.777 155.732 cv
.615686 .654902 .443137 rgb
f
722.266 322.084 mo
718.281 320.02 713.407 318.871 708.268 318.447 cv
706.374 312.708 704.643 307.666 704.643 307.666 cv
704.643 307.666 702.854 310.68 700.53 314.656 cv
700.273 313.973 700.016 313.291 699.759 312.607 cv
698.214 308.503 696.842 304.408 695.806 301.353 cv
694.785 298.293 694.113 296.278 694.113 296.278 cv
694.113 296.278 693.447 298.296 692.437 301.36 cv
691.451 304.428 690.127 308.55 688.982 312.805 cv
688.923 313.027 688.864 313.249 688.805 313.471 cv
688.527 312.843 688.248 312.212 687.97 311.583 cv
687.202 309.832 686.467 308.067 685.799 306.461 cv
683.791 300.015 681.726 293.577 679.582 287.145 cv
679.121 285.994 678.682 284.822 678.254 283.637 cv
687.112 278.654 695.089 272.538 701.939 266.252 cv
709.836 280.353 718.301 296.337 726.935 314.015 cv
725.492 316.483 723.833 319.34 722.266 322.084 cv
568.04 310.831 mo
567.997 310.623 567.954 310.414 567.912 310.21 cv
567.782 309.542 567.691 308.887 567.594 308.245 cv
568.368 306.891 569.133 305.549 569.894 304.214 cv
569.676 305.549 569.475 306.926 569.296 308.303 cv
569.183 309.073 569.072 309.84 568.96 310.604 cv
568.653 310.67 568.346 310.747 568.04 310.831 cv
578.134 308.531 mo
578.061 308.345 577.989 308.158 577.917 307.972 cv
576.294 303.97 574.882 300.101 574.028 297.149 cv
574.013 297.108 573.999 297.067 573.986 297.026 cv
587.611 273.05 598.191 254.08 598.191 254.08 cv
598.191 254.08 598.248 254.142 598.359 254.266 cv
600.168 262.758 603.094 270.228 607.198 276.214 cv
607.208 276.223 607.217 276.231 607.227 276.24 cv
607.227 276.24 li
607.217 276.231 607.208 276.223 607.198 276.214 cv
607.838 277.199 608.507 278.145 609.203 279.051 cv
607.24 284.855 604.706 292.385 602.312 299.611 cv
602.297 299.344 li
602.23 298.13 602.193 297.124 602.186 296.421 cv
602.177 295.718 602.21 295.317 602.21 295.317 cv
602.21 295.317 601.914 295.677 601.458 296.329 cv
600.998 296.98 600.369 297.92 599.633 299.057 cv
599.278 299.606 598.898 300.202 598.5 300.833 cv
596.435 298.704 595.137 297.474 595.137 297.474 cv
595.137 297.474 594.509 298.033 593.432 299.055 cv
593.225 296.735 593.09 295.229 593.09 295.229 cv
593.09 295.229 592.177 296.779 590.79 299.133 cv
590.098 300.32 589.288 301.71 588.415 303.208 cv
588.025 303.896 587.591 304.606 587.198 305.335 cv
586.724 305.839 586.236 306.365 585.74 306.907 cv
585.532 304.314 585.437 301.9 585.428 299.951 cv
585.43 298.629 585.539 297.539 585.566 296.768 cv
585.609 295.997 585.634 295.56 585.634 295.56 cv
585.634 295.56 585.362 295.963 584.883 296.673 cv
584.42 297.387 583.682 298.407 582.917 299.665 cv
581.498 302.022 579.737 305.22 578.134 308.531 cv
635.371 306.094 mo
633.756 302.758 632.467 300.161 632.467 300.161 cv
632.467 300.161 630.638 302.554 628.316 305.65 cv
627.449 304.281 626.654 303.041 626.062 302.121 cv
626.463 298.788 626.912 295.496 627.403 292.246 cv
628.448 292.607 629.512 292.927 630.594 293.205 cv
633.508 293.961 636.553 294.415 639.697 294.566 cv
638.291 298.283 636.791 302.273 635.371 306.094 cv
621.022 304.781 mo
619.045 299.083 617.201 293.974 617.201 293.974 cv
617.201 293.974 616.554 295.03 615.535 296.703 cv
615.125 292.532 614.705 288.366 614.318 284.574 cv
615.507 285.637 616.75 286.616 618.04 287.51 cv
619.917 291.982 621.735 296.887 623.393 302.223 cv
622.734 302.931 621.917 303.812 621.022 304.781 cv
649.491 304.493 mo
649.02 301.053 648.528 297.548 648.063 294.273 cv
648.63 294.208 649.202 294.134 649.773 294.051 cv
649.619 297.536 649.526 301.015 649.491 304.493 cv
.501961 .596078 .403922 rgb
f
676.26 313.511 mo
673.743 309.769 671.158 306.086 671.158 306.086 cv
671.158 306.086 670.93 306.314 670.534 306.712 cv
670.794 300.44 670.696 294.054 670.357 287.65 cv
673.058 286.423 675.694 285.077 678.254 283.637 cv
678.682 284.822 679.121 285.994 679.582 287.145 cv
681.726 293.577 683.791 300.015 685.799 306.461 cv
685.349 305.38 684.931 304.372 684.554 303.489 cv
683.58 301.298 682.938 299.855 682.938 299.855 cv
682.938 299.855 682.242 301.28 681.186 303.444 cv
680.101 305.604 678.603 308.473 677.189 311.49 cv
676.879 312.164 676.568 312.839 676.26 313.511 cv
649.932 307.742 mo
649.788 306.672 649.641 305.586 649.491 304.493 cv
649.526 301.015 649.619 297.536 649.773 294.051 cv
653.993 293.439 658.323 292.333 662.709 290.728 cv
662.709 290.728 li
662.709 290.728 li
663.156 290.571 663.602 290.411 664.046 290.247 cv
663.826 295.006 663.476 299.769 662.973 304.477 cv
662.269 303.516 661.823 302.913 661.823 302.913 cv
661.823 302.913 659.806 304.843 657.357 307.239 cv
655.838 303.635 654.64 300.865 654.64 300.865 cv
654.64 300.865 652.523 303.924 649.932 307.742 cv
.443137 .568627 .388235 rgb
f
518.935 302.974 mo
519.766 300.254 518.268 297.023 515.391 293.978 cv
522.486 283.497 529.947 273.268 537.676 263.291 cv
537.784 265.307 537.572 267.642 537.147 269.341 cv
535.2 277.739 533.026 285.978 530.674 294.095 cv
526.208 294.804 522.039 297.481 518.935 302.974 cv
.556863 .627451 .423529 rgb
f
719.987 254.07 mo
719.176 252.532 718.373 250.989 717.582 249.447 cv
717.583 249.447 717.584 249.445 717.585 249.444 cv
718.376 250.988 719.177 252.527 719.989 254.067 cv
719.989 254.068 719.988 254.069 719.987 254.07 cv
level3{
gsave
clp
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
737.099 284.278 mo
731.099 274.246 725.324 264.19 719.987 254.07 cv
719.988 254.069 719.989 254.068 719.989 254.067 cv
725.327 264.188 731.101 274.243 737.101 284.277 cv
737.099 284.278 li
.760784 .901961 .886274 rgb
f
745.018 297.327 mo
743.83 295.393 742.647 293.459 741.47 291.524 cv
741.472 291.523 li
742.648 293.457 743.831 295.392 745.019 297.324 cv
745.018 297.325 745.018 297.326 745.018 297.327 cv
737.105 284.289 mo
737.102 284.285 737.101 284.283 737.099 284.278 cv
737.101 284.277 li
737.103 284.28 737.106 284.286 737.108 284.288 cv
737.105 284.289 li
.807843 .843137 .662745 rgb
f
741.47 291.524 mo
740.005 289.115 738.547 286.701 737.105 284.289 cv
737.108 284.288 li
738.55 286.7 740.007 289.113 741.472 291.523 cv
741.47 291.524 li
.886274 .905882 .772549 rgb
f
742.704 304.312 mo
736.588 292.249 730.83 279.995 725.364 267.645 cv
722.71 261.672 720.057 255.635 717.517 249.532 cv
717.538 249.505 717.561 249.475 717.582 249.447 cv
718.373 250.989 719.176 252.532 719.987 254.07 cv
725.324 264.19 731.099 274.246 737.099 284.278 cv
737.101 284.283 737.102 284.285 737.105 284.289 cv
738.547 286.701 740.005 289.115 741.47 291.524 cv
742.647 293.459 743.83 295.393 745.018 297.327 cv
744.256 299.617 743.477 301.969 742.704 304.312 cv
.768627 .792157 .588235 rgb
f
689.996 165.311 mo
689.929 164.661 689.866 164.014 689.806 163.363 cv
689.865 164.011 689.949 164.656 690.016 165.304 cv
690.01 165.306 690.001 165.309 689.996 165.311 cv
541.509 163.363 mo
541.506 163.362 541.504 163.361 541.501 163.36 cv
565.231 163.333 588.963 157.501 612.693 156.054 cv
612.693 156.054 li
588.966 157.502 565.237 163.334 541.509 163.363 cv
level3{
gsave
clp
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
596.214 174.948 mo
590.243 174.378 584.298 173.592 578.396 172.594 cv
578.397 172.592 578.396 172.593 578.397 172.591 cv
574.723 171.97 571.067 171.26 567.433 170.475 cv
567.433 170.478 567.432 170.481 567.432 170.484 cv
565.512 170.069 563.598 169.632 561.691 169.171 cv
561.693 169.167 561.693 169.165 561.694 169.161 cv
558.066 168.285 554.461 167.335 550.888 166.296 cv
550.888 166.297 550.888 166.298 550.888 166.3 cv
547.738 165.384 544.608 164.404 541.509 163.363 cv
565.237 163.334 588.966 157.502 612.693 156.054 cv
612.307 156.956 611.923 157.872 611.542 158.802 cv
592.842 159.88 568.234 165.623 568.234 165.623 cv
568.234 165.623 588.444 170.484 606.642 172.101 cv
606.468 172.628 606.295 173.157 606.123 173.69 cv
596.694 173.165 586.483 172.216 577.793 170.96 cv
571.652 170.139 566.265 169.252 562.405 168.634 cv
558.55 167.99 556.223 167.602 556.223 167.602 cv
556.223 167.602 558.456 168.112 562.183 168.962 cv
565.918 169.782 571.153 170.935 577.198 172.046 cv
583.003 173.153 589.567 174.168 596.214 174.948 cv
689.805 165.372 mo
689.289 164.701 688.773 164.027 688.256 163.351 cv
688.773 163.359 689.29 163.363 689.806 163.363 cv
689.806 163.363 li
689.866 164.014 689.929 164.661 689.996 165.311 cv
689.932 165.331 689.869 165.351 689.805 165.372 cv
.501961 .596078 .403922 rgb
f
599.67 197.989 mo
598.793 190.5 598.691 182.892 598.959 175.265 cv
601.126 175.502 603.294 175.694 605.437 175.852 cv
605.084 176.983 604.738 178.125 604.396 179.281 cv
604.398 179.215 604.4 179.15 604.403 179.085 cv
603.038 183.691 601.779 188.487 600.672 193.426 cv
600.671 193.432 600.669 193.44 600.667 193.446 cv
600.314 194.964 599.982 196.475 599.67 197.989 cv
.694118 .721569 .513725 rgb
f
474.39 316.261 mo
474.389 316.26 474.389 316.26 474.389 316.26 cv
474.668 315.811 474.949 315.358 475.228 314.91 cv
475.229 314.911 475.229 314.911 475.229 314.911 cv
474.95 315.361 474.669 315.812 474.39 316.261 cv
.745098 .854902 .729412 rgb
f
477.138 318.309 mo
476.471 317.673 475.743 317.184 474.965 316.807 cv
474.867 316.716 474.772 316.632 474.671 316.535 cv
474.578 316.446 474.484 316.355 474.39 316.261 cv
474.669 315.812 474.95 315.361 475.229 314.911 cv
475.795 316.13 476.436 317.272 477.138 318.309 cv
.768627 .792157 .588235 rgb
f
526.569 221.208 mo
526.567 221.203 526.568 221.207 526.566 221.202 cv
527.463 218.975 528.33 216.741 529.163 214.505 cv
529.169 214.505 li
528.335 216.744 527.467 218.979 526.569 221.208 cv
level3{
gsave
clp
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
529.169 214.505 mo
529.163 214.505 li
529.729 212.984 530.28 211.46 530.815 209.933 cv
530.812 209.948 530.808 209.964 530.805 209.979 cv
530.275 211.491 529.73 212.998 529.169 214.505 cv
level3{
gsave
clp
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
519.807 236.716 mo
519.804 236.71 li
521.926 232.17 523.939 227.609 525.82 223.033 cv
525.821 223.036 525.822 223.038 525.823 223.04 cv
523.943 227.613 521.927 232.179 519.807 236.716 cv
526.475 221.442 mo
526.473 221.439 526.473 221.438 526.472 221.435 cv
526.503 221.357 526.535 221.279 526.566 221.202 cv
526.568 221.207 526.567 221.203 526.569 221.208 cv
526.538 221.286 526.506 221.364 526.475 221.442 cv
.819608 .882353 .74902 rgb
f
507.787 260.344 mo
507.787 260.341 507.787 260.341 507.786 260.338 cv
512.063 252.501 516.102 244.63 519.804 236.71 cv
519.807 236.716 li
516.104 244.636 512.065 252.506 507.787 260.344 cv
.745098 .854902 .729412 rgb
f
494.453 283.592 mo
494.452 283.592 494.451 283.592 494.45 283.592 cv
499.064 275.861 503.542 268.116 507.786 260.338 cv
507.787 260.341 507.787 260.341 507.787 260.344 cv
503.542 268.123 499.068 275.861 494.453 283.592 cv
.701961 .839216 .717647 rgb
f
525.823 223.04 mo
525.822 223.038 525.821 223.036 525.82 223.033 cv
526.04 222.499 526.255 221.97 526.472 221.435 cv
526.473 221.438 526.473 221.439 526.475 221.442 cv
526.259 221.976 526.043 222.506 525.823 223.04 cv
.890196 .929412 .847059 rgb
f
501.715 285.373 mo
499.333 284.51 496.873 283.888 494.453 283.592 cv
499.068 275.861 503.542 268.123 507.787 260.344 cv
507.787 260.344 li
512.065 252.506 516.104 244.636 519.807 236.716 cv
521.927 232.179 523.943 227.613 525.823 223.04 cv
526.043 222.506 526.259 221.976 526.475 221.442 cv
526.506 221.364 526.538 221.286 526.569 221.208 cv
527.467 218.979 528.335 216.744 529.169 214.505 cv
529.73 212.998 530.275 211.491 530.805 209.979 cv
524.808 236.525 514.459 261.443 501.715 285.373 cv
.768627 .792157 .588235 rgb
f
543.082 237.123 mo
543.687 213.516 547.318 189.907 550.888 166.3 cv
554.461 167.339 558.063 168.296 561.691 169.171 cv
555.607 191.851 550.165 214.693 543.082 237.123 cv
.694118 .721569 .513725 rgb
f
561.691 169.171 mo
558.063 168.296 554.461 167.339 550.888 166.3 cv
550.888 166.298 550.888 166.297 550.888 166.296 cv
554.461 167.335 558.066 168.285 561.694 169.161 cv
561.693 169.165 561.693 169.167 561.691 169.171 cv
.6 .67451 .470588 rgb
f
561.734 245.602 mo
560.531 220.338 564.448 195.5 567.432 170.484 cv
571.065 171.269 574.724 171.973 578.396 172.594 cv
572.598 196.745 566.856 221.018 561.734 245.602 cv
.694118 .721569 .513725 rgb
f
578.396 172.594 mo
574.724 171.973 571.065 171.269 567.432 170.484 cv
567.432 170.481 567.433 170.478 567.433 170.475 cv
571.067 171.26 574.723 171.97 578.397 172.591 cv
578.396 172.593 578.397 172.592 578.396 172.594 cv
.6 .67451 .470588 rgb
f
606.642 172.101 mo
588.444 170.484 568.234 165.623 568.234 165.623 cv
568.234 165.623 592.842 159.88 611.542 158.802 cv
609.835 162.972 608.193 167.416 606.642 172.101 cv
.262745 .458824 .317647 rgb
f
598.959 175.265 mo
598.308 175.194 597.658 175.119 597.008 175.04 cv
596.743 175.01 596.479 174.979 596.214 174.948 cv
597.126 175.035 598.048 175.118 598.961 175.195 cv
598.96 175.219 598.96 175.241 598.959 175.265 cv
.807843 .827451 .631373 rgb
f
605.499 175.654 mo
603.318 175.528 601.138 175.372 598.961 175.189 cv
598.961 175.191 598.961 175.193 598.961 175.195 cv
598.048 175.118 597.126 175.035 596.214 174.948 cv
589.567 174.168 583.003 173.153 577.198 172.046 cv
571.153 170.935 565.918 169.782 562.183 168.962 cv
558.456 168.112 556.223 167.602 556.223 167.602 cv
556.223 167.602 558.55 167.99 562.405 168.634 cv
566.265 169.252 571.652 170.139 577.793 170.96 cv
586.483 172.216 596.694 173.165 606.123 173.69 cv
605.913 174.34 605.705 174.996 605.499 175.654 cv
.752941 .8 .572549 rgb
f
605.437 175.852 mo
603.294 175.694 601.126 175.502 598.959 175.265 cv
598.96 175.241 598.96 175.219 598.961 175.195 cv
601.139 175.378 603.315 175.533 605.497 175.659 cv
605.477 175.723 605.457 175.788 605.437 175.852 cv
.847059 .862745 .721569 rgb
f
605.497 175.659 mo
603.315 175.533 601.139 175.378 598.961 175.195 cv
598.961 175.193 598.961 175.191 598.961 175.189 cv
601.138 175.372 603.318 175.528 605.499 175.654 cv
605.498 175.656 605.498 175.657 605.497 175.659 cv
.8 .839216 .670588 rgb
f
898.552 317.18 mo
898.552 317.18 895.445 321.667 892.154 326.555 cv
891.655 325.645 891.336 325.095 891.336 325.095 cv
891.336 325.095 890.662 326.255 889.588 327.992 cv
889.164 328.683 888.676 329.469 888.161 330.32 cv
886.763 329.898 885.561 329.462 884.427 329.043 cv
883.767 327.501 883.086 325.912 882.409 324.331 cv
881.584 322.392 880.647 320.449 879.812 318.663 cv
878.948 316.871 878.037 315.219 877.314 313.823 cv
876.517 312.427 875.802 311.286 875.328 310.492 cv
874.847 309.701 874.573 309.252 874.573 309.252 cv
874.573 309.252 874.515 309.735 874.413 310.586 cv
874.303 311.435 874.182 312.641 873.969 314.085 cv
873.685 315.539 873.415 317.218 873.013 319.03 cv
872.584 320.85 872.169 322.771 871.646 324.74 cv
871.478 325.403 871.309 326.07 871.139 326.736 cv
868.897 326.829 867.053 327.105 865.433 327.513 cv
862.633 322.308 858.784 315.645 858.784 315.645 cv
858.784 315.645 857.042 317.68 854.81 320.336 cv
852.457 313.642 849.794 306.353 848.722 303.431 cv
848.533 299.957 848.341 296.483 848.148 293.01 cv
848.131 293.217 848.106 293.523 848.075 293.918 cv
848.002 294.691 847.938 295.785 847.783 297.084 cv
847.65 297.734 847.507 298.44 847.354 299.188 cv
847.278 299.556 847.2 299.936 847.12 300.324 cv
847.044 300.71 846.963 301.103 846.821 301.507 cv
846.57 302.304 846.311 303.129 846.046 303.971 cv
845.905 304.389 845.804 304.805 845.628 305.227 cv
845.455 305.647 845.281 306.07 845.107 306.493 cv
844.76 307.329 844.412 308.168 844.067 308.999 cv
843.659 309.821 843.256 310.635 842.862 311.428 cv
842.669 311.82 842.477 312.207 842.289 312.587 cv
842.099 312.967 841.869 313.341 841.668 313.706 cv
841.443 314.107 841.225 314.497 841.011 314.877 cv
838.532 315.883 836.596 317.227 833.768 318.21 cv
830.685 314.056 825.497 308.838 818.406 307.807 cv
817.343 299.512 816.243 291.678 816.243 291.678 cv
816.243 291.678 812.086 299.414 807.776 307.433 cv
807.245 308.434 806.711 309.439 806.182 310.434 cv
805.98 310.794 805.779 311.151 805.579 311.508 cv
805.414 311.104 805.234 310.679 804.994 310.234 cv
804.33 308.915 803.56 307.431 802.739 305.881 cv
802.326 305.109 801.903 304.318 801.475 303.519 cv
801.01 302.725 800.487 301.931 799.993 301.142 cv
798.99 299.579 797.995 298.031 797.068 296.587 cv
796.101 295.161 795.069 293.865 794.256 292.758 cv
792.593 290.566 791.498 289.122 791.498 289.122 cv
791.498 289.122 791.277 290.72 790.941 293.145 cv
790.755 294.351 790.617 295.746 790.324 297.25 cv
789.996 298.744 789.644 300.347 789.289 301.963 cv
789.106 302.765 788.952 303.564 788.749 304.355 cv
788.604 304.84 788.461 305.32 788.318 305.797 cv
779.2 304.618 765.539 306.773 762.291 312.655 cv
761.16 309.55 758.642 308.094 755.437 307.786 cv
753.995 292.48 752.255 275.747 752.255 275.747 cv
752.255 275.747 745.518 295.632 740.297 311.651 cv
737.972 312.814 735.743 314.154 733.768 315.559 cv
732.215 310.895 730.946 307.199 730.946 307.199 cv
730.946 307.199 726.305 315.012 722.266 322.084 cv
718.281 320.02 713.407 318.871 708.268 318.447 cv
706.374 312.708 704.643 307.666 704.643 307.666 cv
704.643 307.666 702.854 310.68 700.53 314.656 cv
700.273 313.973 700.016 313.291 699.759 312.607 cv
698.214 308.503 696.842 304.408 695.806 301.353 cv
694.785 298.293 694.113 296.278 694.113 296.278 cv
694.113 296.278 693.447 298.296 692.437 301.36 cv
691.451 304.428 690.127 308.55 688.982 312.805 cv
688.923 313.027 688.864 313.249 688.805 313.471 cv
688.527 312.843 688.248 312.212 687.97 311.583 cv
686.686 308.654 685.49 305.683 684.554 303.489 cv
683.58 301.298 682.938 299.855 682.938 299.855 cv
682.938 299.855 682.242 301.28 681.186 303.444 cv
680.101 305.604 678.603 308.473 677.189 311.49 cv
676.879 312.164 676.568 312.839 676.26 313.511 cv
673.743 309.769 671.158 306.086 671.158 306.086 cv
671.158 306.086 669.362 307.883 667.096 310.194 cv
664.519 306.556 661.823 302.913 661.823 302.913 cv
661.823 302.913 659.806 304.843 657.357 307.239 cv
655.838 303.635 654.64 300.865 654.64 300.865 cv
654.64 300.865 652.523 303.924 649.932 307.742 cv
648.137 294.403 645.792 278.582 645.792 278.582 cv
645.792 278.582 640.132 293.279 635.371 306.094 cv
633.756 302.758 632.467 300.161 632.467 300.161 cv
632.467 300.161 630.638 302.554 628.316 305.65 cv
626.503 302.788 625.01 300.493 625.01 300.493 cv
625.01 300.493 623.255 302.36 621.022 304.781 cv
619.045 299.083 617.201 293.974 617.201 293.974 cv
617.201 293.974 616.554 295.03 615.535 296.703 cv
614.161 282.73 612.677 268.821 612.677 268.821 cv
612.677 268.821 607.203 284.849 602.312 299.611 cv
602.297 299.344 li
602.23 298.13 602.193 297.124 602.186 296.421 cv
602.177 295.718 602.21 295.317 602.21 295.317 cv
602.21 295.317 601.914 295.677 601.458 296.329 cv
600.998 296.98 600.369 297.92 599.633 299.057 cv
598.162 301.331 596.267 304.397 594.399 307.531 cv
594.334 307.64 li
594.246 307.115 594.158 306.587 594.072 306.071 cv
593.962 305.246 593.918 304.44 593.841 303.657 cv
593.701 302.088 593.572 300.632 593.461 299.388 cv
593.237 296.88 593.09 295.229 593.09 295.229 cv
593.09 295.229 592.177 296.779 590.79 299.133 cv
590.098 300.32 589.288 301.71 588.415 303.208 cv
587.987 303.961 587.508 304.741 587.087 305.543 cv
586.695 306.348 586.296 307.169 585.895 307.993 cv
585.843 308.103 li
585.563 305.06 585.438 302.197 585.428 299.951 cv
585.43 298.629 585.539 297.539 585.566 296.768 cv
585.609 295.997 585.634 295.56 585.634 295.56 cv
585.634 295.56 585.362 295.963 584.883 296.673 cv
584.42 297.387 583.682 298.407 582.917 299.665 cv
581.498 302.022 579.737 305.22 578.134 308.531 cv
578.061 308.345 577.989 308.158 577.917 307.972 cv
576.294 303.97 574.882 300.101 574.028 297.149 cv
573.77 296.412 573.665 295.74 573.525 295.141 cv
573.394 294.54 573.28 294.016 573.187 293.586 cv
572.999 292.719 572.893 292.226 572.893 292.226 cv
572.893 292.226 572.731 292.71 572.445 293.56 cv
572.302 293.989 572.129 294.51 571.929 295.109 cv
571.74 295.71 571.473 296.394 571.326 297.141 cv
570.557 300.127 569.827 304.217 569.296 308.303 cv
569.183 309.073 569.072 309.84 568.96 310.604 cv
568.653 310.67 568.346 310.747 568.04 310.831 cv
567.997 310.623 567.954 310.414 567.912 310.21 cv
567.748 309.369 567.647 308.547 567.516 307.747 cv
567.225 306.143 567.168 304.666 567.04 303.383 cv
566.966 302.74 566.978 302.159 566.975 301.641 cv
566.972 301.121 566.97 300.669 566.968 300.296 cv
566.966 299.547 566.964 299.121 566.964 299.121 cv
566.964 299.121 566.701 299.514 566.24 300.204 cv
566.009 300.553 565.727 300.976 565.404 301.462 cv
565.082 301.951 564.699 302.504 564.371 303.119 cv
563.692 304.346 562.8 305.794 562.075 307.379 cv
561.854 307.842 561.619 308.319 561.386 308.802 cv
560.553 306.138 559.682 303.661 559.093 301.706 cv
558.722 300.497 558.438 299.49 558.27 298.784 cv
558.098 298.076 558 297.673 558 297.673 cv
558 297.673 557.829 298.066 557.529 298.757 cv
557.224 299.45 556.832 300.45 556.392 301.662 cv
555.884 303.04 555.34 304.702 554.749 306.469 cv
546.956 295.273 528.198 286.58 518.935 302.974 cv
521.751 293.758 497.841 278.676 484.053 284.835 cv
469.385 291.389 470.86 309.029 477.138 318.309 cv
476.471 317.673 475.743 317.184 474.965 316.807 cv
474.867 316.716 474.772 316.632 474.671 316.535 cv
472.895 314.842 470.9 312.205 469.342 309.337 cv
467.76 306.481 466.477 303.476 465.515 301.229 cv
464.537 298.979 463.893 297.497 463.893 297.497 cv
463.893 297.497 463.199 298.967 462.146 301.199 cv
461.089 303.434 459.664 306.446 458.576 309.705 cv
458.206 310.791 457.897 311.913 457.651 313.039 cv
457.544 312.613 457.435 312.18 457.325 311.741 cv
457.09 310.839 456.849 309.914 456.606 308.979 cv
456.303 308.045 455.966 307.105 455.643 306.179 cv
455.479 305.718 455.316 305.258 455.153 304.8 cv
454.993 304.345 454.758 303.891 454.566 303.445 cv
454.16 302.561 453.762 301.694 453.379 300.858 cv
453.203 300.443 452.97 300.039 452.739 299.646 cv
452.513 299.255 452.292 298.873 452.077 298.501 cv
451.647 297.769 451.241 297.078 450.868 296.442 cv
450.012 295.19 449.242 294.18 448.735 293.479 cv
448.22 292.782 447.928 292.386 447.928 292.386 cv
447.928 292.386 447.892 292.827 447.829 293.603 cv
447.757 294.376 447.693 295.47 447.538 296.769 cv
447.405 297.419 447.262 298.125 447.109 298.873 cv
447.033 299.242 446.954 299.621 446.874 300.009 cv
446.799 300.396 446.718 300.789 446.576 301.192 cv
446.325 301.989 446.066 302.815 445.801 303.657 cv
445.66 304.074 445.559 304.49 445.383 304.913 cv
445.21 305.333 445.036 305.755 444.862 306.179 cv
444.515 307.014 444.167 307.854 443.821 308.685 cv
443.414 309.507 443.01 310.32 442.617 311.113 cv
442.423 311.505 442.232 311.893 442.044 312.273 cv
441.854 312.653 441.624 313.027 441.423 313.391 cv
441.198 313.793 440.98 314.182 440.766 314.562 cv
438.287 315.568 436.35 316.912 433.523 317.896 cv
430.44 313.741 425.251 308.524 418.161 307.493 cv
417.098 299.197 415.998 291.364 415.998 291.364 cv
415.998 291.364 411.841 299.099 407.531 307.119 cv
407 308.119 406.465 309.124 405.937 310.12 cv
405.734 310.48 405.534 310.837 405.334 311.194 cv
405.169 310.79 404.989 310.365 404.749 309.92 cv
404.085 308.601 403.315 307.116 402.494 305.566 cv
402.081 304.795 401.657 304.004 401.23 303.204 cv
400.765 302.411 400.242 301.616 399.748 300.827 cv
398.745 299.265 397.75 297.717 396.823 296.273 cv
395.856 294.846 394.824 293.55 394.011 292.444 cv
392.348 290.252 391.253 288.808 391.253 288.808 cv
391.253 288.808 391.032 290.405 390.696 292.831 cv
390.51 294.037 390.372 295.432 390.079 296.936 cv
389.751 298.43 389.399 300.032 389.044 301.649 cv
388.861 302.45 388.706 303.249 388.504 304.04 cv
388.359 304.526 388.216 305.006 388.073 305.482 cv
378.955 304.303 365.294 306.459 362.046 312.34 cv
360.915 309.235 358.397 307.78 355.192 307.472 cv
353.75 292.165 352.01 275.432 352.01 275.432 cv
352.01 275.432 345.273 295.318 340.051 311.336 cv
337.727 312.5 335.498 313.84 333.523 315.244 cv
331.969 310.58 330.701 306.884 330.701 306.884 cv
330.701 306.884 326.06 314.698 322.02 321.77 cv
318.036 319.705 313.162 318.556 308.023 318.132 cv
306.129 312.394 304.398 307.351 304.398 307.351 cv
304.398 307.351 302.609 310.365 300.285 314.342 cv
300.028 313.659 299.771 312.976 299.514 312.292 cv
297.969 308.188 296.597 304.094 295.561 301.039 cv
294.54 297.979 293.868 295.963 293.868 295.963 cv
293.868 295.963 293.202 297.981 292.192 301.045 cv
291.206 304.114 289.882 308.235 288.737 312.491 cv
288.678 312.713 288.619 312.934 288.56 313.157 cv
288.282 312.529 288.003 311.898 287.724 311.268 cv
286.441 308.339 285.245 305.368 284.309 303.175 cv
283.334 300.984 282.693 299.541 282.693 299.541 cv
282.693 299.541 281.997 300.966 280.94 303.13 cv
279.856 305.29 278.358 308.158 276.944 311.175 cv
276.634 311.849 276.323 312.525 276.015 313.196 cv
273.498 309.455 270.913 305.772 270.913 305.772 cv
270.913 305.772 269.117 307.568 266.851 309.879 cv
264.274 306.242 261.578 302.598 261.578 302.598 cv
261.578 302.598 259.561 304.528 257.112 306.925 cv
255.593 303.32 254.395 300.551 254.395 300.551 cv
254.395 300.551 252.278 303.61 249.687 307.427 cv
247.892 294.089 245.547 278.268 245.547 278.268 cv
245.547 278.268 239.887 292.965 235.126 305.78 cv
233.511 302.444 232.222 299.847 232.222 299.847 cv
232.222 299.847 230.393 302.24 228.071 305.335 cv
226.258 302.474 224.765 300.178 224.765 300.178 cv
224.765 300.178 223.01 302.046 220.777 304.467 cv
218.8 298.768 216.956 293.66 216.956 293.66 cv
216.956 293.66 216.309 294.715 215.29 296.388 cv
213.916 282.416 212.432 268.506 212.432 268.506 cv
212.432 268.506 206.958 284.534 202.067 299.296 cv
202.052 299.03 li
201.985 297.816 201.947 296.809 201.941 296.106 cv
201.932 295.403 201.965 295.003 201.965 295.003 cv
201.965 295.003 201.669 295.362 201.213 296.015 cv
200.753 296.666 200.124 297.605 199.388 298.742 cv
197.917 301.017 196.022 304.082 194.154 307.217 cv
194.089 307.326 li
194.001 306.801 193.913 306.272 193.827 305.757 cv
193.717 304.931 193.673 304.125 193.595 303.343 cv
193.456 301.773 193.327 300.317 193.216 299.074 cv
192.992 296.566 192.845 294.914 192.845 294.914 cv
192.845 294.914 191.932 296.465 190.545 298.819 cv
189.853 300.006 189.043 301.396 188.17 302.894 cv
187.742 303.647 187.263 304.427 186.842 305.228 cv
186.45 306.033 186.051 306.854 185.65 307.679 cv
185.597 307.789 li
185.318 304.746 185.193 301.882 185.183 299.637 cv
185.185 298.314 185.294 297.224 185.321 296.453 cv
185.364 295.683 185.389 295.246 185.389 295.246 cv
185.389 295.246 185.117 295.648 184.638 296.359 cv
184.174 297.072 183.437 298.092 182.672 299.35 cv
181.253 301.707 179.492 304.905 177.889 308.217 cv
177.816 308.03 177.744 307.843 177.671 307.658 cv
176.049 303.656 174.637 299.786 173.783 296.835 cv
173.525 296.098 173.419 295.426 173.28 294.826 cv
173.149 294.225 173.035 293.702 172.942 293.272 cv
172.754 292.404 172.648 291.912 172.648 291.912 cv
172.648 291.912 172.485 292.395 172.2 293.246 cv
172.057 293.674 171.884 294.195 171.685 294.794 cv
171.495 295.395 171.228 296.079 171.081 296.826 cv
170.312 299.812 169.582 303.902 169.051 307.988 cv
168.919 308.891 168.789 309.793 168.657 310.686 cv
168.379 310.668 168.101 310.661 167.823 310.649 cv
167.771 310.399 167.718 310.143 167.667 309.895 cv
167.503 309.054 167.402 308.233 167.271 307.433 cv
166.98 305.829 166.923 304.352 166.795 303.068 cv
166.72 302.425 166.733 301.845 166.73 301.326 cv
166.727 300.806 166.725 300.354 166.723 299.982 cv
166.72 299.232 166.719 298.807 166.719 298.807 cv
166.719 298.807 166.456 299.199 165.995 299.89 cv
165.764 300.238 165.482 300.661 165.159 301.148 cv
164.837 301.636 164.454 302.189 164.126 302.804 cv
163.447 304.032 162.555 305.479 161.83 307.064 cv
161.609 307.527 161.374 308.004 161.141 308.488 cv
160.308 305.824 159.437 303.346 158.848 301.391 cv
158.477 300.182 158.193 299.176 158.025 298.47 cv
157.853 297.761 157.755 297.359 157.755 297.359 cv
157.755 297.359 157.584 297.751 157.284 298.443 cv
156.979 299.136 156.587 300.136 156.147 301.347 cv
155.255 303.767 154.255 307.048 153.083 310.272 cv
152.815 311.031 152.527 311.782 152.226 312.518 cv
151.604 312.7 150.988 312.894 150.38 313.1 cv
149.995 310.851 149.625 308.757 149.41 307.08 cv
149.245 305.986 149.219 305.085 149.15 304.444 cv
149.097 303.804 149.067 303.44 149.067 303.44 cv
149.067 303.44 148.832 303.773 148.42 304.359 cv
148.023 304.947 147.379 305.792 146.737 306.828 cv
145.729 308.394 144.552 310.405 143.328 312.508 cv
142.722 310.493 142.123 308.622 141.717 307.125 cv
141.437 306.112 141.248 305.271 141.151 304.679 cv
141.051 304.087 141.043 303.745 141.043 303.745 cv
141.043 303.745 140.984 303.822 140.873 303.967 cv
140.757 304.113 140.605 304.33 140.415 304.611 cv
140.041 305.172 139.555 305.991 139.023 306.985 cv
137.976 308.929 136.745 311.543 135.427 314.146 cv
135.371 313.986 135.317 313.825 135.26 313.667 cv
134.257 310.86 133.203 308.095 132.585 306.047 cv
131.914 303.975 131.473 302.61 131.473 302.61 cv
131.473 302.61 130.843 303.942 129.886 305.965 cv
129.596 306.556 129.296 307.21 128.99 307.901 cv
128.346 305.458 127.911 303.809 127.911 303.809 cv
127.911 303.809 126.148 307.379 123.987 311.756 cv
123.891 311.438 123.795 311.119 123.697 310.793 cv
123.149 309.04 122.628 307.193 121.991 305.393 cv
120.7 301.792 119.421 298.274 118.429 295.665 cv
117.443 293.049 116.794 291.326 116.794 291.326 cv
116.794 291.326 115.103 298.278 113.35 305.484 cv
112.998 306.902 112.574 308.31 112.182 309.677 cv
111.434 305.83 110.885 303.005 110.885 303.005 cv
110.885 303.005 107.91 309.207 104.825 315.637 cv
104.399 316.539 103.971 317.446 103.551 318.344 cv
103.442 316.97 103.333 315.676 103.227 314.628 cv
103.078 313.163 102.979 312.199 102.979 312.199 cv
102.979 312.199 100.341 314.407 97.2047 317.034 cv
97.1153 315.702 97.0749 314.454 97.0472 313.388 cv
97.0013 311.264 96.9709 309.865 96.9709 309.865 cv
96.9709 309.865 95.9534 311.12 94.4085 313.026 cv
92.9253 314.88 90.9721 317.368 89.2564 320.078 cv
88.9328 319.223 88.6041 318.352 88.2783 317.48 cv
86.5068 311.921 84.7976 306.558 84.7976 306.558 cv
84.7976 306.558 82.2282 311.766 79.637 317.292 cv
79.0992 318.602 78.5704 319.931 78.0754 321.207 cv
76.3498 315.16 74.308 308.454 74.308 308.454 cv
74.308 308.454 71.2031 314.08 68.2732 319.567 cv
66.7182 311.538 64.7569 302.196 64.7569 302.196 cv
64.7569 302.196 57.4281 318.469 54.2867 326.164 cv
53.4492 326.37 52.6307 326.53 51.839 326.621 cv
51.6263 325.782 51.3981 324.882 51.1606 323.946 cv
50.8109 322.628 50.4766 321.258 50.0661 319.879 cv
49.2275 317.116 48.4369 314.439 47.5724 312.447 cv
46.7834 310.478 46.2636 309.181 46.2636 309.181 cv
46.2636 309.181 45.7107 310.465 44.8712 312.414 cv
44.1157 314.345 42.7486 316.911 41.44 319.49 cv
40.8195 320.698 40.1312 321.926 39.5064 323.097 cv
36.0944 322.893 32.2559 323.495 29.1532 324.178 cv
27.6355 320.578 26.4396 317.812 26.4396 317.812 cv
26.4396 317.812 22.3231 323.759 18.5474 329.417 cv
16.5719 331.227 14.9125 333.182 12.3062 334.918 cv
9.62506 332.224 6.83127 329.528 6.83127 329.528 cv
6.83127 329.528 5.85637 330.222 4.44888 331.236 cv
2.94136 327.507 1.19885 323.376 0 320.561 cv
0 381.357 li
32.401 381.356 63.3956 381.359 79.2747 381.369 cv
127.226 381.4 175.178 381.394 223.13 381.377 cv
264.118 381.363 305.106 381.381 346.094 381.385 cv
353.804 381.386 361.514 381.383 369.225 381.38 cv
380.182 381.376 391.139 381.372 402.096 381.378 cv
402.151 381.378 li
402.227 381.378 402.36 381.378 402.525 381.378 cv
557.381 381.378 li
557.398 381.481 557.415 381.585 557.433 381.688 cv
565.568 381.688 573.704 381.688 581.84 381.69 cv
592.501 381.691 603.162 381.692 613.823 381.691 cv
613.893 381.691 li
615.21 381.691 616.527 381.691 617.844 381.691 cv
619.688 381.692 621.531 381.692 623.375 381.692 cv
664.363 381.677 705.351 381.696 746.339 381.7 cv
754.083 381.701 761.827 381.698 769.571 381.695 cv
780.494 381.691 791.418 381.686 802.341 381.693 cv
851.799 381.693 li
851.797 381.582 851.794 381.471 851.792 381.36 cv
867.057 381.359 883.705 381.357 900 381.357 cv
900 320.561 li
899.135 318.531 898.552 317.18 898.552 317.18 cv
.392157 .678431 .168627 rgb
f
282.292 351.934 mo
282.292 353.987 282.615 356.182 283.18 358.455 cv
327.413 358.455 li
327.944 356.205 328.246 354.014 328.246 351.934 cv
328.246 333.732 305.269 307.005 305.269 307.005 cv
305.269 307.005 282.292 332.119 282.292 351.934 cv
.113725 .619608 .27451 rgb
f
294.357 346.454 mo
294.357 346.454 294.241 345.973 294.079 345.145 cv
293.92 344.318 293.671 343.127 293.663 341.764 cv
293.449 339.002 294.038 335.52 295.171 332.993 cv
296.36 330.491 298.622 327.886 300.686 326.151 cv
301.672 325.24 302.659 324.569 303.33 324.07 cv
304.015 323.593 304.43 323.304 304.43 323.304 cv
304.43 323.304 304.267 323.799 303.999 324.61 cv
303.735 325.421 303.307 326.505 302.916 327.763 cv
302.015 330.228 301.16 333.229 300.159 335.31 cv
299.861 335.904 299.602 336.527 299.26 337.132 cv
298.925 337.739 298.552 338.343 298.248 338.962 cv
297.921 339.575 297.572 340.179 297.217 340.765 cv
296.904 341.366 296.602 341.948 296.319 342.493 cv
295.679 343.585 295.284 344.586 294.925 345.301 cv
294.569 346.023 294.357 346.454 294.357 346.454 cv
.168627 .796078 .4 rgb
f
381.33 308.788 mo
382.519 315.539 383.401 322.245 383.815 329.092 cv
383.913 331.265 383.913 333.426 383.866 335.583 cv
383.75 340.894 383.341 353.173 383.344 358.5 cv
385.66 358.536 387.976 358.571 390.293 358.607 cv
390.293 353.024 389.691 340.418 388.675 334.862 cv
387.043 325.941 384.341 317.148 381.33 308.788 cv
.47451 .141176 .0431373 rgb
f
383.866 335.583 mo
383.885 334.707 383.896 333.83 383.897 332.952 cv
383.897 332.295 383.891 331.637 383.877 330.978 cv
385.237 330.876 386.553 330.747 387.814 330.599 cv
388.126 332.016 388.414 333.437 388.675 334.862 cv
387.072 335.12 385.469 335.372 383.866 335.583 cv
.435294 .113725 .0392157 rgb
f
380.115 262.556 mo
380.765 261.758 381.459 260.887 382.164 260.011 cv
382.324 259.808 382.484 259.604 382.643 259.4 cv
380.621 253.62 378.649 248.096 376.83 243.066 cv
378.005 249.529 379.13 256.032 380.115 262.556 cv
.309804 .772549 .615686 rgb
f
394.803 296.053 mo
392.986 296.599 391.265 297.116 389.924 297.567 cv
388.189 298.128 387.047 298.497 387.047 298.497 cv
387.047 298.497 388.069 297.867 389.622 296.91 cv
390.874 296.119 392.501 295.169 394.22 294.17 cv
390.93 283.601 387.159 272.376 383.504 261.87 cv
382.392 262.652 381.31 263.415 380.341 264.068 cv
379.9 264.365 379.481 264.641 379.097 264.882 cv
377.823 265.708 376.984 266.252 376.984 266.252 cv
376.984 266.252 377.633 265.492 378.618 264.338 cv
379.071 263.827 379.578 263.216 380.115 262.556 cv
379.13 256.032 378.005 249.529 376.83 243.066 cv
371.429 228.125 367.379 217.542 367.379 217.542 cv
366.333 274.885 li
367.496 275.205 368.6 275.467 369.505 275.665 cv
370.168 275.811 370.724 275.897 371.113 275.973 cv
371.503 276.045 371.725 276.086 371.725 276.086 cv
371.725 276.086 371.502 276.117 371.11 276.172 cv
370.718 276.222 370.154 276.317 369.47 276.388 cv
368.581 276.481 367.482 276.576 366.301 276.634 cv
365.645 312.568 li
365.321 330.285 li
370.842 331.205 376.305 331.369 381.29 331.136 cv
393.648 330.559 403.055 327.541 403.055 327.541 cv
402.448 324.101 401.537 320.074 400.4 315.637 cv
398.881 309.709 396.958 303.047 394.803 296.053 cv
.113725 .619608 .27451 rgb
f
380.115 262.556 mo
379.13 256.032 378.005 249.529 376.83 243.066 cv
378.649 248.096 380.621 253.62 382.643 259.4 cv
382.484 259.604 382.324 259.808 382.164 260.011 cv
381.459 260.887 380.765 261.758 380.115 262.556 cv
.262745 .631373 .603922 rgb
f
403.055 327.541 mo
403.051 327.517 403.046 327.492 403.042 327.468 cv
403.046 327.492 403.051 327.516 403.055 327.541 cv
.360784 .615686 .168627 rgb
f
377.277 331.231 mo
373.436 331.231 369.394 330.964 365.321 330.285 cv
365.394 326.303 li
365.592 326.385 365.792 326.465 365.991 326.544 cv
366.002 326.556 366.013 326.567 366.025 326.579 cv
367.508 328.107 371.616 328.325 373.633 328.66 cv
374.675 328.833 375.724 328.963 376.777 329.052 cv
377.944 329.154 379.118 329.205 380.291 329.205 cv
381.728 329.205 383.165 329.129 384.594 328.976 cv
387.742 328.655 390.86 327.92 393.835 326.842 cv
393.923 326.81 394.081 326.75 394.292 326.667 cv
394.787 326.479 395.275 326.28 395.761 326.071 cv
398.266 325.025 402.207 323.243 402.056 322.553 cv
402.056 322.553 li
402.056 322.553 li
402.438 324.294 402.771 325.941 403.042 327.468 cv
403.046 327.492 403.051 327.517 403.055 327.541 cv
403.055 327.541 li
403.055 327.541 396.811 329.544 387.814 330.599 cv
386.553 330.747 385.237 330.876 383.877 330.978 cv
383.031 331.042 382.168 331.095 381.29 331.136 cv
379.982 331.197 378.643 331.231 377.277 331.231 cv
.105882 .560784 .270588 rgb
f
365.413 325.265 mo
365.345 324.784 365.381 324.267 365.441 323.747 cv
365.413 325.265 li
.333333 .552941 .164706 rgb
f
387.047 298.497 mo
387.047 298.497 388.069 297.867 389.622 296.91 cv
389.79 296.803 389.965 296.694 390.146 296.583 cv
390.146 296.583 li
389.965 296.694 389.79 296.803 389.622 296.91 cv
388.069 297.867 387.047 298.497 387.047 298.497 cv
387.047 298.497 li
.541176 .635294 .596078 rgb
f
387.079 298.487 mo
387.276 298.423 388.359 298.073 389.924 297.567 cv
389.93 297.565 389.936 297.563 389.942 297.561 cv
389.942 297.561 389.942 297.561 389.942 297.561 cv
389.936 297.563 389.93 297.565 389.924 297.567 cv
388.359 298.073 387.276 298.423 387.079 298.487 cv
f
389.942 297.561 mo
389.942 297.561 389.942 297.561 389.942 297.561 cv
391.28 297.111 392.994 296.596 394.803 296.053 cv
392.994 296.596 391.28 297.111 389.942 297.561 cv
.333333 .552941 .164706 rgb
f
390.669 283.059 mo
389.314 278.914 387.918 274.742 386.516 270.621 cv
386.516 270.621 li
387.918 274.742 389.314 278.914 390.669 283.059 cv
390.669 283.059 li
.592157 .654902 .611765 rgb
f
393.445 291.699 mo
393.445 291.698 li
392.547 288.849 391.618 285.961 390.669 283.059 cv
390.669 283.059 li
391.618 285.961 392.547 288.849 393.445 291.699 cv
.541176 .635294 .596078 rgb
f
384.373 264.375 mo
384.361 264.34 384.349 264.305 384.337 264.27 cv
384.337 264.27 li
384.349 264.305 384.361 264.34 384.373 264.375 cv
384.373 264.375 li
.647059 .737255 .878431 rgb
f
386.516 270.621 mo
385.802 268.522 385.087 266.437 384.373 264.375 cv
384.373 264.375 li
385.087 266.437 385.802 268.522 386.516 270.621 cv
386.516 270.621 li
.698039 .721569 .756863 rgb
f
394.22 294.17 mo
393.964 293.35 393.706 292.526 393.445 291.698 cv
393.445 291.699 li
393.706 292.526 393.964 293.35 394.22 294.17 cv
.333333 .552941 .164706 rgb
f
380.341 264.068 mo
381.31 263.415 382.392 262.651 383.504 261.87 cv
382.392 262.652 381.31 263.415 380.341 264.068 cv
.513725 .686274 .811765 rgb
f
380.243 329.197 mo
379.086 329.197 377.929 329.15 376.777 329.052 cv
373.073 328.729 369.424 327.893 365.991 326.544 cv
365.647 326.173 365.48 325.736 365.413 325.265 cv
365.441 323.747 li
365.498 323.249 365.576 322.749 365.603 322.274 cv
365.791 319.064 365.575 315.862 365.649 312.654 cv
369.417 313.783 373.626 315.277 377.612 315.277 cv
377.667 315.277 377.722 315.276 377.777 315.276 cv
387.358 315.176 383.506 295.592 383.182 290.281 cv
382.646 281.505 381.623 272.764 380.341 264.068 cv
380.341 264.068 li
381.31 263.415 382.392 262.652 383.504 261.87 cv
383.504 261.87 li
383.504 261.87 li
383.781 262.666 384.059 263.466 384.337 264.27 cv
384.349 264.305 384.361 264.34 384.373 264.375 cv
385.087 266.437 385.802 268.522 386.516 270.621 cv
387.918 274.742 389.314 278.914 390.669 283.059 cv
391.618 285.961 392.547 288.849 393.445 291.698 cv
393.706 292.526 393.964 293.35 394.22 294.17 cv
394.22 294.17 li
392.732 295.034 391.313 295.863 390.146 296.583 cv
389.965 296.694 389.79 296.803 389.622 296.91 cv
388.069 297.867 387.047 298.497 387.047 298.497 cv
387.047 298.497 li
387.047 298.497 li
387.047 298.497 387.058 298.494 387.079 298.487 cv
387.276 298.423 388.359 298.073 389.924 297.567 cv
389.93 297.565 389.936 297.563 389.942 297.561 cv
391.28 297.111 392.994 296.596 394.803 296.053 cv
394.803 296.053 li
396.958 303.047 398.881 309.709 400.4 315.637 cv
401.026 318.078 401.58 320.39 402.056 322.553 cv
400.087 323.944 397.972 325.116 395.761 326.071 cv
395.165 326.319 394.651 326.526 394.292 326.667 cv
391.189 327.85 387.915 328.62 384.594 328.976 cv
384.565 328.979 384.535 328.982 384.506 328.984 cv
383.09 329.125 381.667 329.197 380.243 329.197 cv
.0980392 .505882 .270588 rgb
f
376.777 329.052 mo
375.724 328.963 374.675 328.833 373.633 328.66 cv
371.616 328.325 367.508 328.107 366.025 326.579 cv
366.013 326.567 366.002 326.556 365.991 326.544 cv
369.424 327.893 373.073 328.729 376.777 329.052 cv
384.594 328.976 mo
387.915 328.62 391.189 327.85 394.292 326.667 cv
394.081 326.75 393.923 326.81 393.835 326.842 cv
390.86 327.92 387.742 328.655 384.594 328.976 cv
395.761 326.071 mo
397.972 325.116 400.087 323.944 402.056 322.553 cv
402.056 322.553 li
402.207 323.243 398.266 325.025 395.761 326.071 cv
.0901961 .458824 .266667 rgb
f
558.665 319.629 mo
559.651 319.471 557.685 319.779 558.665 319.629 cv
cp
.627451 .890196 .329412 rgb
f
558.665 319.629 mo
556.94 319.894 555.689 320.52 555.762 322.421 cv
555.851 324.685 555.805 325.465 558.089 325.033 cv
561.33 324.424 562.394 319.034 558.665 319.629 cv
cp
f
548.789 316.889 mo
548.914 316.496 548.663 317.28 548.789 316.889 cv
cp
f
548.993 316.25 mo
548.925 316.463 548.857 316.676 548.789 316.889 cv
547.465 320.993 547.544 323.435 551.243 326.25 cv
553.431 322.264 553.846 318.359 548.993 316.25 cv
cp
f
767.827 296.373 mo
767.878 295.886 767.749 296.841 767.827 296.373 cv
cp
f
767.827 296.373 mo
767.572 297.91 767.357 299.446 767.243 301 cv
773.358 297.257 775.523 292.237 774.243 285.25 cv
771.02 288.393 768.31 291.769 767.827 296.373 cv
cp
f
761.611 285.826 mo
763.043 287.201 760.969 285.113 761.611 285.826 cv
cp
f
758.993 283.75 mo
759.316 290.351 759.862 295.031 763.493 300.75 cv
765.432 295.548 765.959 290.003 761.611 285.826 cv
760.874 285.009 759.933 284.32 758.993 283.75 cv
cp
f
822.243 313.75 mo
820.773 316.275 819.523 318.614 821.097 321.333 cv
822.387 323.56 822.699 323.612 822.493 326 cv
827.361 325.621 829.599 323.715 829.993 318.75 cv
828.509 318.813 826.961 319.03 825.586 319.616 cv
826.171 317.244 823.976 315.029 822.243 313.75 cv
f
879.895 337.725 mo
880.646 336.687 878.211 339.704 879.895 337.725 cv
cp
f
880.891 349.409 mo
882.229 344.607 882.475 339.447 882.993 334.5 cv
881.899 335.495 880.765 336.522 879.895 337.725 cv
874.793 343.72 875.531 351.072 878.743 357.75 cv
879.111 356.327 879.393 354.88 879.803 353.468 cv
879.766 354.647 879.842 355.831 879.993 357 cv
884.889 354.357 886.499 351.258 886.243 345.75 cv
884.241 346.538 882.214 347.661 880.891 349.409 cv
cp
f
868.101 346.996 mo
868.795 347.218 866.954 346.627 868.101 346.996 cv
cp
f
870.743 340 mo
870.525 342.607 869.999 345.334 870.207 347.95 cv
869.545 347.543 868.843 347.225 868.101 346.996 cv
867.413 346.774 866.707 346.608 865.993 346.5 cv
865.826 349.373 865.927 352.259 868.881 353.558 cv
871.563 354.739 871.933 353.766 872.993 356.5 cv
876.871 350.786 876.38 344.337 870.743 340 cv
cp
f
643.609 354.268 mo
643.744 354.001 643.879 353.741 644.015 353.478 cv
643.979 353.54 643.865 353.76 643.609 354.268 cv
cp
f
644.015 353.478 mo
643.879 353.741 643.744 354.001 643.609 354.268 cv
643.183 355.229 644.144 353.256 644.015 353.478 cv
cp
f
644.015 353.478 mo
644.07 353.383 643.925 353.69 643.776 353.997 cv
643.575 354.407 643.366 354.818 643.609 354.268 cv
642.97 355.711 642.19 357.086 641.493 358.5 cv
650.398 353.982 654.413 346.816 657.743 337.75 cv
651.154 341.791 647.437 346.841 644.015 353.478 cv
f
639.178 348.107 mo
638.274 346.783 637.039 345.679 635.743 344.75 cv
634.22 350.109 635.03 353.37 638.743 357.5 cv
639.302 356.353 639.791 355.144 640.094 353.902 cv
640.45 354.663 640.936 355.371 641.493 356 cv
643.635 351.212 646.363 347.072 641.743 342.5 cv
640.948 344.382 639.76 346.145 639.178 348.107 cv
cp
f
612.97 343.262 mo
613.048 343.269 li
613.161 343.274 613.22 343.276 612.97 343.262 cv
cp
f
612.867 343.261 mo
612.97 343.262 li
612.733 343.253 612.768 343.256 612.867 343.261 cv
cp
f
626.764 348.065 mo
626.453 343.441 623.329 338.767 619.493 336.25 cv
620.328 339.569 620.472 342.984 620.964 346.358 cv
618.838 344.437 615.878 343.438 613.048 343.269 cv
612.867 343.261 li
612.576 343.25 612.284 343.244 611.993 343.25 cv
614.126 345.933 615.755 349.182 618.355 351.449 cv
620.896 353.664 623.533 355.101 623.243 358.75 cv
624.895 357.104 625.634 355.27 627.468 353.757 cv
627.942 355.874 630.713 357.295 632.743 357.25 cv
632.513 355.628 633.343 353.632 632.698 352.123 cv
632.059 350.459 630.529 350.971 631.896 349.298 cv
632.65 348.376 633.283 347.444 633.819 346.378 cv
635.645 342.748 636.65 338.754 637.243 334.75 cv
633.077 338.555 629.003 342.816 626.764 348.065 cv
f
612.97 343.262 mo
612.867 343.261 li
613.048 343.269 li
612.97 343.262 li
cp
f
652.201 352.765 mo
652.452 351.358 652.033 353.445 652.201 352.765 cv
cp
f
652.201 352.765 mo
652.004 353.562 651.959 354.432 651.993 355.25 cv
653.733 354.695 656.175 354.462 657.617 353.331 cv
659.145 352.309 660.106 350.185 661.243 348.75 cv
657.425 346.95 652.997 348.298 652.201 352.765 cv
cp
f
304.826 353.286 mo
304.859 353.168 304.891 353.05 304.924 352.931 cv
304.874 353.113 304.843 353.225 304.826 353.286 cv
cp
f
317.457 337.721 mo
315.061 338.721 312.876 340.277 310.978 342.034 cv
307.806 344.97 306.178 348.632 304.989 352.718 cv
304.905 353.018 304.764 353.517 304.826 353.286 cv
304.393 354.861 303.971 356.439 303.493 358 cv
305.483 356.337 307.203 354.404 308.891 352.443 cv
309.144 355.112 311.97 356.302 314.243 357 cv
314.795 353.783 314.892 350.964 311.707 349.268 cv
314.087 346.659 318.93 337.139 322.993 337.75 cv
323.28 336.147 317.779 337.584 317.457 337.721 cv
cp
f
304.924 352.931 mo
304.989 352.718 li
305.059 352.467 305.089 352.355 304.924 352.931 cv
cp
f
304.989 352.718 mo
304.924 352.931 li
304.891 353.05 304.859 353.168 304.826 353.286 cv
304.764 353.517 304.905 353.018 304.989 352.718 cv
cp
f
301.606 341.869 mo
301.724 341.655 li
301.837 341.435 301.878 341.351 301.606 341.869 cv
cp
f
301.515 342.061 mo
301.606 341.869 li
301.329 342.415 301.39 342.301 301.515 342.061 cv
cp
f
301.724 341.655 mo
301.663 341.776 301.581 341.935 301.515 342.061 cv
299.585 346.005 300.374 348.825 301.243 353 cv
306.188 349.384 306.342 344.306 302.993 339.5 cv
302.539 340.199 302.118 340.92 301.724 341.655 cv
cp
f
301.606 341.869 mo
301.515 342.061 li
301.581 341.935 301.663 341.776 301.724 341.655 cv
301.606 341.869 li
cp
f
294.743 341.5 mo
294.253 343.651 293.803 346.447 294.551 348.591 cv
295.182 350.665 297.092 352.423 298.243 354.25 cv
301.767 349.168 299.401 344.577 294.743 341.5 cv
cp
f
328.069 347.086 mo
328.164 346.97 li
328.176 346.942 328.154 346.966 328.069 347.086 cv
cp
f
327.92 347.372 mo
327.972 347.277 328.013 347.178 328.069 347.086 cv
327.699 347.699 327.78 347.589 327.92 347.372 cv
cp
f
328.069 347.086 mo
328.013 347.178 327.972 347.277 327.92 347.372 cv
328.018 347.22 328.143 347.017 328.164 346.97 cv
328.069 347.086 li
cp
f
328.164 346.97 mo
328.143 347.017 328.018 347.22 327.92 347.372 cv
326.714 349.578 326.597 352.302 326.743 354.75 cv
331.786 351.868 333.993 348.79 334.743 343 cv
332.338 343.729 329.712 344.887 328.164 346.97 cv
cp
f
319.743 340.5 mo
319.775 340.821 319.807 341.142 319.838 341.462 cv
319.858 341.703 319.851 341.643 319.841 341.532 cv
320.082 344.784 318.95 347.914 319.628 351.157 cv
320.103 353.433 320.867 355.711 321.993 357.75 cv
324.584 351.895 326.947 344.329 319.743 340.5 cv
cp
f
319.841 341.532 mo
319.838 341.462 li
319.803 341.111 319.826 341.374 319.841 341.532 cv
cp
f
169.884 345.436 mo
169.878 345.513 li
169.896 345.317 169.923 345.011 169.884 345.436 cv
cp
f
169.878 345.513 mo
169.884 345.436 li
169.856 345.745 169.865 345.658 169.878 345.513 cv
cp
f
194.34 345.419 mo
194.654 343.945 194.864 342.451 195.182 340.978 cv
195.382 339.641 195.723 338.325 195.993 337 cv
192.856 339.272 190.043 342.158 188.577 345.809 cv
187.952 344.067 186.862 342.49 185.493 341.25 cv
185.155 342.315 184.802 343.375 184.458 344.439 cv
183.61 342.299 182.083 340.386 180.493 338.75 cv
179.825 340.863 179.202 343.156 179.258 345.391 cv
179.303 347.153 178.754 348.8 178.856 350.573 cv
177.979 347.733 175.744 345.353 173.493 343.5 cv
173.214 345.377 173.064 347.287 173.129 349.186 cv
172.313 347.407 171.214 345.773 169.993 344.25 cv
169.956 344.645 169.92 345.041 169.884 345.436 cv
169.923 345.011 169.896 345.317 169.878 345.513 cv
169.255 352.636 169.334 358.728 170.993 365.75 cv
173.164 362.369 175.112 358.13 174.563 354.011 cv
175.782 355.897 177.438 357.432 179.243 358.75 cv
179.348 356.795 179.357 354.812 179.233 352.857 cv
179.895 355.372 181.233 357.604 182.993 359.5 cv
183.363 356.822 184.017 354.158 184.286 351.471 cv
184.803 352.875 185.457 354.227 186.243 355.5 cv
186.715 354.734 187.158 353.949 187.57 353.148 cv
187.618 354.688 187.747 356.228 187.993 357.75 cv
188.972 356.387 189.897 354.985 190.768 353.549 cv
190.96 354.864 191.152 356.174 191.243 357.5 cv
194.808 355.875 196.962 352.432 195.748 348.571 cv
195.403 347.476 194.906 346.416 194.34 345.419 cv
f
196.454 353.899 mo
197.053 351.718 196.15 354.992 196.454 353.899 cv
cp
f
196.454 353.899 mo
196.105 355.153 195.932 356.449 195.993 357.75 cv
198.328 355.4 201.343 354.016 203.784 351.823 cv
206.272 349.564 208.263 346.499 209.743 343.5 cv
203.775 345.005 198.223 347.459 196.454 353.899 cv
cp
f
25.9928 355 mo
27.1645 350.802 29.4097 347.184 31.1505 343.23 cv
32.9041 339.252 34.1514 335.047 35.7428 331 cv
34.3374 331.827 33.0085 332.773 31.7672 333.832 cv
25.5355 339.079 22.9803 347.261 25.9928 355 cv
cp
f
31.7672 333.832 mo
32.8376 332.919 29.6232 335.637 31.7672 333.832 cv
cp
f
21.1738 341.669 mo
21.0711 341.839 20.9769 342.006 20.879 342.174 cv
21.0269 341.947 21.5147 341.156 21.1738 341.669 cv
cp
f
20.879 342.174 mo
20.9769 342.006 21.0711 341.839 21.1738 341.669 cv
20.8197 342.253 20.7948 342.304 20.879 342.174 cv
cp
f
21.1738 341.669 mo
21.5147 341.156 21.0269 341.947 20.879 342.174 cv
18.1165 346.922 17.3077 351.272 18.9928 356.75 cv
22.8609 350.875 25.6657 345.89 22.9928 338.75 cv
22.3742 339.716 21.8085 340.714 21.1738 341.669 cv
cp
f
12.224 347.558 mo
12.31 347.198 12.1255 347.926 12.224 347.558 cv
cp
f
13.2428 344 mo
12.8333 345.168 12.5111 346.355 12.224 347.558 cv
11.2548 351.18 13.0191 353.982 15.2428 356.75 cv
18.0623 351.862 17.8534 347.636 13.2428 344 cv
cp
f
4.42279 350.873 mo
4.43317 350.806 li
4.31079 351.399 4.36132 351.165 4.42279 350.873 cv
cp
f
4.43317 350.806 mo
4.4596 350.698 li
4.51593 350.428 4.55316 350.246 4.43317 350.806 cv
cp
f
9.56445 352.771 mo
8.81215 350.889 6.7452 349.383 4.99277 348.5 cv
4.7954 349.228 4.61922 349.961 4.4597 350.698 cv
4.42275 350.873 li
3.72453 354.431 5.76737 358.73 9.99275 358.5 cv
9.38285 356.644 10.2913 354.597 9.56445 352.771 cv
f
4.43317 350.806 mo
4.42279 350.873 li
4.4596 350.698 li
4.43317 350.806 li
cp
f
28.2428 357.75 mo
29.8563 356.348 32.1754 355.132 33.2782 353.277 cv
34.4914 351.388 34.6743 348.68 34.7428 346.5 cv
33.8947 346.772 33.0656 347.105 32.2652 347.496 cv
28.117 349.448 26.7693 353.466 28.2428 357.75 cv
cp
f
32.2652 347.496 mo
33.6043 346.842 30.919 348.13 32.2652 347.496 cv
cp
f
119.86 341.497 mo
120.347 342.094 120.869 342.688 121.449 343.278 cv
120.966 342.652 120.43 342.062 119.86 341.497 cv
cp
f
119.86 341.497 mo
120.43 342.062 120.966 342.652 121.449 343.278 cv
120.869 342.688 120.347 342.094 119.86 341.497 cv
110.007 331.732 87.9082 331.284 77.3393 341.461 cv
66.1689 333.956 57.0704 328.557 41.077 334.716 cv
31.4229 338.435 22.4736 352.992 37.2442 356.564 cv
155.732 356.564 li
169.941 350.078 165.513 329.723 161.206 321.084 cv
147.385 293.36 101.809 319.358 119.86 341.497 cv
cp
f
135.324 231.875 mo
134.951 231.425 135.134 231.65 135.319 231.875 cv
135.504 232.101 135.691 232.326 135.324 231.875 cv
.258824 .129412 .172549 rgb
f
271.368 280.771 mo
280.205 274.32 283.626 264.48 283.985 254.164 cv
281.861 254.094 281.75 259.456 281.168 261.233 cv
280.393 263.672 279.375 266.019 278.055 268.212 cv
275.342 272.732 271.295 276.57 265.901 279.264 cv
255.132 284.688 239.927 284.838 224.592 281.871 cv
239.726 272.195 254.439 261.334 256.694 244.361 cv
258.922 228.446 254.002 211.469 249.067 195.974 cv
247.509 196.903 247.272 196.355 247.82 198.536 cv
248.203 200.061 248.579 201.59 248.939 203.127 cv
249.832 206.934 250.633 210.782 251.236 214.649 cv
252.454 222.344 253.046 230.185 251.975 237.622 cv
250.063 251.409 240.85 261.138 227.914 268.75 cv
217.482 259.385 221.343 245.968 224.199 237.136 cv
220.376 245.18 216.85 254.816 220.523 264.189 cv
221.044 265.494 221.756 266.808 222.676 268.078 cv
224.101 270.045 225.567 270.124 223.267 271.406 cv
220.667 272.842 218.013 274.238 215.363 275.634 cv
210.056 278.429 204.833 281.231 200.113 284.37 cv
171.466 264.285 167.833 242.311 170.729 223.617 cv
168.787 223.458 168.882 226.843 168.639 228.164 cv
168.185 230.521 167.845 232.898 167.645 235.301 cv
167.234 240.272 167.411 245.355 168.516 250.574 cv
153.958 249.449 140.949 239.076 135.324 231.875 cv
135.691 232.326 135.504 232.101 135.319 231.875 cv
135.134 231.65 134.951 231.425 135.324 231.875 cv
134.933 231.405 134.549 230.936 134.171 230.469 cv
140.348 239.711 151.046 248.946 168.459 252.883 cv
169.524 253 172.113 261.393 172.874 262.76 cv
174.864 266.696 177.532 270.719 180.97 274.699 cv
184.08 278.299 187.766 281.903 192.073 285.411 cv
195.357 288.073 195.086 287.861 192.738 289.729 cv
191.55 290.672 190.394 291.629 189.277 292.601 cv
167.12 311.595 156.935 335.864 166.266 365.768 cv
176.627 368.799 186.95 371.592 197.19 374.12 cv
203.717 375.715 199.189 371.702 198.059 369.284 cv
196.059 364.364 194.18 359.509 193.048 354.855 cv
188.187 335.302 190.882 317.759 201.357 302.907 cv
204.175 298.855 207.579 294.981 211.608 291.388 cv
213.559 289.648 215.656 287.973 217.896 286.373 cv
218.968 285.64 225.755 287.412 227.801 287.665 cv
243.189 289.726 257.718 288.629 267.913 282.963 cv
290.387 288.518 303.244 275.68 307.545 261.71 cv
302.432 273.796 290.931 284.698 271.368 280.771 cv
f
303.471 212.005 mo
300.687 218.905 296.045 224.698 289.713 228.158 cv
287.1 229.595 284.211 230.552 281.127 231.076 cv
280.107 231.248 281.448 233.977 281.738 234.938 cv
310.243 231.725 316.643 186.282 296.599 161.065 cv
306.893 176.153 309.526 197.932 303.471 212.005 cv
f
227.776 233.006 mo
226.353 232.463 227.064 232.735 227.777 233.008 cv
228.491 233.281 229.208 233.554 227.776 233.006 cv
f
233.428 231.119 mo
227.822 231.086 222.998 227.972 219.744 224.153 cv
213.254 216.552 211.269 207.012 210.365 198.359 cv
210.653 209.43 212.658 227.104 227.776 233.006 cv
231.613 234.474 235.265 234.437 239.045 233.937 cv
238.608 232.881 238.179 231.828 237.757 230.776 cv
237.698 230.626 236.423 230.771 235.263 230.916 cv
234.425 231.02 233.647 231.125 233.428 231.119 cv
f
262.412 124.906 mo
240.854 134.085 222.038 144.385 202.283 176.222 cv
191.657 191.136 193.157 202.864 206.681 211.693 cv
219.682 220.167 244.707 225.742 269.032 220.127 cv
292.748 215.841 312.603 200.949 319.135 180.842 cv
326.417 161.317 321.422 137.199 315.902 128.399 cv
303.47 109.766 283.536 117.741 262.412 124.906 cv
.423529 .6 .235294 rgb
f
202.182 176.365 mo
202.183 176.363 202.184 176.362 202.185 176.36 cv
202.184 176.361 202.182 176.364 202.182 176.365 cv
202.212 176.322 mo
202.214 176.319 202.216 176.316 202.218 176.313 cv
202.215 176.317 202.214 176.319 202.212 176.322 cv
202.239 176.284 mo
202.243 176.278 202.247 176.272 202.251 176.266 cv
202.247 176.273 202.244 176.277 202.239 176.284 cv
202.283 176.222 mo
202.919 175.179 203.556 174.159 204.195 173.162 cv
204.202 173.162 204.214 173.162 204.221 173.162 cv
203.576 174.16 202.93 175.178 202.283 176.222 cv
207.11 168.836 mo
207.096 168.836 207.085 168.836 207.071 168.836 cv
209.32 165.574 211.58 162.577 213.839 159.805 cv
211.601 162.575 209.36 165.575 207.11 168.836 cv
level3{
gsave
clp
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
/8 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~cHGq+bP'0'p<(SPaijD"bP'$"p;b>L`QInmb4`crp;>&G_TMPeb4WNlotJTA^<6,]b4WBhot&<=\]XTT
b4W6dosW$9[EA0Lb4W*`os2^4Z,u[Can;jZorcF0Xi^4:an2XUoW$%*WQFe1aRlCOoVT_%V9&;)aRl4J
oV0G!Tucl!aRl+GoUX(qSB(8la7PkAoU3blR)eica7GV;o9RGgPfNBZa7GJ6o9%&aOiI!R`q,51o8Uc]
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
clp
/8 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~c-=MXc-4DUbfe2Pb/qcIaiMQEaN2HDaN)?Aa2Z-<`Pf^5`5BL1_o'C0_ns:-_SO((^q[Y!^V7Fr^:h4n
]tM+m]Y(kg]=YYc]"5G_\[f5[\@B#W\$rfS[^NTO[C*BK['[0GZa6sCZEga?Z*CO;Yct=7YHP+3Y-+n/
Xf\_,XK8M(X/i;$WiE(uWMukqW2HPjVP^5fVP^5eV5:#aUnjf]US=KVTqS0RTqS0QTV.sMT:_aISt2FB
S=H+>S"#n:S"#n:R[TY4R$a8.Q^=&*QBmi&Q'IW"Q'ISuPEV2oP*1ukOcbcgOH>QcOH>NaNfK-[NK&pW
~>
<~b0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb/qcIaiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZH
aiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVWFaN2HDaN2HDaN2HDaN2HD
aN2HDaN2HDaN2HDaN2HDaN2HDaN2HCa2c6@a2c6@a2c6@a2c6@a2c6@a2c6@a2c6@a2c6@a2c6@a2c6@
a2c6@`l?$<`l?$<`l?$<`l?$<`l?$<`l?$<`l?$<`l?$<`l?$<`l?$<`Pog8`Pog8`Pog8`Pog8`Pog8
~>
<~p%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%7nKo^qeJo^qeJo^qeJo^qeJ
o^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJ
o^qeIoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSF
oCMSFoCMSFoCMSFoCMSFoCMSFoCMSFo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()AB
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /8 /Gradient get_res exec grestore
}if
np
204.195 173.162 mo
205.152 171.67 206.11 170.229 207.071 168.836 cv
207.085 168.836 207.096 168.836 207.11 168.836 cv
206.149 170.229 205.185 171.672 204.221 173.162 cv
204.214 173.162 204.202 173.162 204.195 173.162 cv
level3{
gsave
clp
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
/9 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~dEVF4c1fT0pWq+YcHZ+/c1fK,pWUkUbKT_'bkK9(pW:YRaisM#bkK0%pVtGO`ln+pbP/rupVb8L_oqek
bP/irpV=uH^ruJebP/`opV+iF^!$/_bP/ZmpUeWC]$'fXbP&Hhp:/<>\BFTTb4`9dp9i':[*&*Lb4`0a
p9Vp8ZHDmGb4`*_p92X4Y0-I@b4_s[p8uL2XNL7;b4VgXor?1-W64e3b4V[Tor#t*Von\/b4VURoq]b'
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
clp
/9 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~d*U.dd*L%acd0q`cd'h]cHXVYc-=MXc-4DUbfe2QbK@uMb/qcIaiVZHaiMQEaN2HDaN)?Aa2Z-=`l5p9
`Pog8`5KR2_o'C0_o'C0_o'@._SX.*_83q&^qd_"^V@Ou^V@Ls^:q:o]tM+m]tM(k]Y(kg]=Y\e]=YYc
]"5J`\[f8\\@B&X\$riU\$riU\$riT[^NWP[C*EL['[3HZa7!EZa7!DZEgdAZEgd@Z*CR<Yct@9Yck75
Y-+q1Xf\_-Xf\_-XK8M)XK8M)X/i;%WiE)!WiE)!WMuhpVl-GjVl-GjVP^5fVP^5fVP^2dUnjf^Unjf^
~>
<~bfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfe2QbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)P
bKJ&Nb0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lL
b0%lLb0%lLb0%lLb0%lLb0%lLb0%lKaiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZH
aiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZH
~>
<~p@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4R
p@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4R
p@e4Qp%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"N
p%A"Np%A"Np%A"Np%A"Np%A"Np%A"No^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJ
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /9 /Gradient get_res exec grestore
}if
np
315.957 128.487 mo
315.956 128.485 315.955 128.484 315.954 128.482 cv
315.955 128.484 315.956 128.485 315.957 128.487 cv
315.942 128.463 mo
315.94 128.46 315.938 128.457 315.936 128.453 cv
315.938 128.456 315.94 128.46 315.942 128.463 cv
315.927 128.439 mo
315.924 128.434 315.921 128.43 315.918 128.426 cv
315.921 128.43 315.924 128.435 315.927 128.439 cv
315.902 128.399 mo
315 127.047 314.058 125.835 313.08 124.753 cv
313.14 124.753 313.194 124.754 313.254 124.754 cv
314.18 125.834 315.065 127.045 315.902 128.399 cv
level3{
gsave
clp
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
313.254 124.754 mo
313.194 124.754 313.14 124.753 313.08 124.753 cv
309.086 120.337 304.474 118.078 299.409 117.266 cv
299.404 117.247 299.399 117.227 299.393 117.208 cv
304.509 117.895 309.268 120.106 313.254 124.754 cv
level3{
gsave
clp
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
253.258 209.152 mo
253.257 209.152 253.256 209.152 253.254 209.152 cv
245.62 209.151 237.941 207.957 230.605 205.646 cv
230.557 205.63 230.508 205.615 230.459 205.599 cv
230.457 205.599 230.456 205.599 230.454 205.598 cv
230.451 205.597 230.448 205.596 230.445 205.595 cv
230.39 205.578 230.335 205.56 230.28 205.542 cv
216.81 201.197 206.364 192.695 198.689 182.01 cv
199.651 180.181 200.81 178.301 202.182 176.365 cv
202.182 176.364 202.184 176.361 202.185 176.36 cv
202.194 176.348 202.203 176.335 202.212 176.322 cv
202.214 176.319 202.215 176.317 202.218 176.313 cv
202.225 176.303 202.232 176.293 202.239 176.284 cv
202.244 176.277 202.247 176.273 202.251 176.266 cv
202.262 176.252 202.272 176.237 202.283 176.222 cv
202.283 176.222 li
202.93 175.178 203.576 174.16 204.221 173.162 cv
205.185 171.672 206.149 170.229 207.11 168.836 cv
209.36 165.575 211.601 162.575 213.839 159.805 cv
215.236 158.09 216.633 156.462 218.027 154.911 cv
219.63 162.67 223.326 169.632 228.866 174.203 cv
237.243 182.63 249.082 187.035 260.62 187.035 cv
267.917 187.035 275.094 185.273 281.198 181.651 cv
297.306 172.522 306.264 151.006 300.243 120.715 cv
300.013 119.611 299.733 118.453 299.409 117.266 cv
304.474 118.078 309.086 120.337 313.08 124.753 cv
314.058 125.835 315 127.047 315.902 128.399 cv
315.902 128.399 li
315.907 128.408 315.913 128.417 315.918 128.426 cv
315.921 128.43 315.924 128.434 315.927 128.439 cv
315.93 128.444 315.933 128.448 315.936 128.453 cv
315.938 128.457 315.94 128.46 315.942 128.463 cv
315.946 128.47 315.95 128.476 315.954 128.482 cv
315.955 128.484 315.956 128.485 315.957 128.487 cv
316.691 129.672 317.414 131.135 318.1 132.814 cv
318.1 132.814 li
318.1 132.814 li
318.318 135.202 318.426 137.595 318.425 139.983 cv
318.416 157.007 312.877 173.829 302.28 187.543 cv
302.28 187.543 li
302.238 187.591 302.197 187.64 302.155 187.688 cv
302.107 187.744 302.058 187.8 302.01 187.856 cv
289.38 202.389 271.437 209.149 253.268 209.152 cv
253.265 209.152 253.262 209.152 253.258 209.152 cv
.360784 .490196 .231373 rgb
f
228.425 220.209 mo
223.34 219.09 218.654 217.592 214.55 215.834 cv
214.55 215.834 li
218.654 217.591 223.34 219.09 228.425 220.209 cv
228.425 220.209 li
level3{
gsave
clp
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
/10 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~i8XOhiqVBiptXm(gZ&"^iqV3cpt4R#f&?DSiV:p]ps\3re)C&KiV1^XpWqgmcJ\H@i:kFQpWDFgal)p7
i:k:MpVu.c`SgL/i:k.IpVGb]^u+n$htOkBpV#JY]\iFphtFY=p:9)S\DR"ghY+A6p9`]MZekD]hY+21
p9<EIYMSuUhY+).p8d'DWnmBJh=df'p86[>V;:j@h=[Q!oqU@9U##C7h=[Dqoq't3S_Wn-h"@,kopOV.
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
clp
/10 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~hr!>Khqm5HhVI#CgtUT<gY1B8g=b04g"=s0f[na+f%&=$e^W*ueC2mqe'c[mdaHRkdEp7ed*L%acd'h]
cHa\Zbfn8RbKJ&Nb0%iJaiVWFaN2EBa2c3>`l?!:`Pod6`5KR2_o'@._83q&^qd_"^V@Ls^:q:o]tM(k
]Y(nh]=Y\d]"5J`\[f8\\@B&X\$i`Q[C*EL['[3HZa7!DZEgd@Z*:I9YHP.5YHP.4Y-+q0Xf\_,XK/D%
WiE)!WMukrW2QYnVl-DhV5:#bUnjf^USFTZU8"BVU8"?TTV.sNT:_aJSt;OFSXl=BS=H(<R[T\6R@0J2
~>
<~iSibSiSibSiSibSiSibSiSibSiSibSiS`YPi8EPOi8EPOi8EPOi8EPOi8EPOi8EPOi8EPOi8EPOi8EPO
i8EMMhr!>Khr!>Khr!>Khr!>Khr!>Khr!>Khr!>Khr!>Khr!>Khr!>Khr!;IhVR,GhVR,GhVR,GhVR,G
hVR,GhVR,GhVR,GhVR,GhVR,GhVR,Fh;-oCh;-oCh;-oCh;-oCh;-oCh;-oCh;-oCh;-oCh;-oCh;-oC
h;-oCgt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gY:K;gY:K;gY:K;gY:K;gY:K;
~>
<~p\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\+=Sp@e4Rp@e4Rp@e4Rp@e4R
p@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4R
p@e4Qp%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"N
p%A"Np%A"Np%A"Np%A"Np%A"Np%A"No^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJ
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /10 /Gradient get_res exec grestore
}if
np
212.634 214.975 mo
212.303 214.82 211.979 214.664 211.657 214.505 cv
211.657 214.505 li
211.979 214.664 212.303 214.819 212.634 214.975 cv
212.634 214.975 li
level3{
gsave
clp
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
211.657 214.505 mo
211.657 214.505 li
209.851 213.615 208.185 212.673 206.681 211.693 cv
206.681 211.693 li
206.681 211.693 li
208.185 212.673 209.851 213.615 211.657 214.505 cv
206.619 211.653 mo
206.616 211.65 206.613 211.648 206.609 211.646 cv
206.613 211.648 206.616 211.65 206.619 211.653 cv
206.55 211.607 mo
206.547 211.605 206.542 211.602 206.539 211.6 cv
206.543 211.603 206.545 211.604 206.55 211.607 cv
206.477 211.559 mo
206.476 211.558 206.476 211.558 206.474 211.557 cv
206.475 211.558 206.477 211.559 206.477 211.559 cv
206.341 211.469 mo
206.34 211.468 li
206.341 211.469 206.34 211.468 206.341 211.469 cv
206.274 211.424 mo
206.273 211.423 206.273 211.423 206.271 211.422 cv
206.272 211.423 206.273 211.424 206.274 211.424 cv
level3{
gsave
clp
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
/11 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~j5g$qjS@frq;C?0i8j^ljS@]nq;10-h;e=dj8%Kjq:js*g>i"^j8%?fq:F[&fAcVViq_-aq:+F"e)L2P
iq_$^q9e3tdGjuKiq^p[q9J!qc/SQCiq^gXq9.dnb2W3<iqUUSprMIia5Zm7iV:FOpr24e`8UL0iV::K
pql"b_;Y1)iV:4IpqG_^^#8\!i:stCpq5P[]AWIqi:jh@pUT5V\)@"ii:j\<pU/rR[G^eci:jS9pTi`O
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
clp
/11 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~io8tWio/kTiSibRi8<GLhr!>Khr!>Khqm5HhVI#Dh;$f@gtUT<gY:K;gY1B8g=b04g"=s0f[na,f@JO(
f%/F'e^`1!eC<!teC;sre'landaHRldaHOjdF$=fd*U.dd*U+bcd0n^cHa\Zc-=JVbfn8RbKJ)PbKJ&N
b0%lKaiVZGaN2HCa2c6@a2c6?`l?$<`l?$;`Pog7`5KU3_o'C0_ns:,_83t(_83t'^qdb#^V@Ou^V7Fq
]tM+m]Y(ni]Y(ni]=Y\e]=Y\e]"5Ja\[f8]\[f8]\@B#W[^NWQ[^NWQ[C*EM['[3I['[0GZEgdAZEgdA
~>
<~j5]1[j5]1[j5]1[j5]1[j5]1[j5]1[j5T(Xio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tW
io8qUiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibS
iSibSiSibSiSibSiSibSiSibSiSibRi8EPOi8EPOi8EPOi8EPOi8EPOi8EPOi8EPOi8EPOi8EPOi8EPO
i8EPOhr!>Khr!>Khr!>Khr!>Khr!>Khr!>Khr!>Khr!>Khr!>Khr!>Khr!>Khr!>Khr!>Khr!>Khr!>K
~>
<~q"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZ
q"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZ
q"XXYp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FV
p\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4R
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /11 /Gradient get_res exec grestore
}if
np
309.141 198.298 mo
309.141 198.298 li
313.621 193.125 317.054 187.248 319.135 180.842 cv
319.135 180.842 li
319.135 180.842 li
317.054 187.248 313.621 193.125 309.141 198.298 cv
319.168 180.754 mo
319.17 180.749 319.172 180.742 319.174 180.738 cv
319.172 180.743 319.17 180.749 319.168 180.754 cv
319.205 180.654 mo
319.207 180.648 319.21 180.641 319.212 180.635 cv
319.21 180.641 319.207 180.647 319.205 180.654 cv
319.243 180.551 mo
319.245 180.546 319.247 180.54 319.249 180.535 cv
319.247 180.54 319.245 180.545 319.243 180.551 cv
319.277 180.457 mo
319.279 180.452 319.28 180.448 319.282 180.443 cv
319.281 180.447 319.278 180.453 319.277 180.457 cv
319.313 180.358 mo
319.315 180.352 319.317 180.345 319.32 180.339 cv
319.317 180.346 319.315 180.351 319.313 180.358 cv
319.349 180.257 mo
319.352 180.25 319.354 180.243 319.357 180.236 cv
319.354 180.243 319.352 180.25 319.349 180.257 cv
319.387 180.152 mo
319.388 180.149 319.39 180.142 319.391 180.139 cv
319.39 180.143 319.388 180.148 319.387 180.152 cv
319.418 180.063 mo
319.421 180.056 319.423 180.051 319.425 180.044 cv
319.423 180.05 319.42 180.057 319.418 180.063 cv
319.454 179.962 mo
319.457 179.953 319.459 179.948 319.462 179.94 cv
319.459 179.947 319.457 179.954 319.454 179.962 cv
319.49 179.859 mo
319.493 179.852 319.496 179.843 319.498 179.836 cv
319.495 179.845 319.493 179.851 319.49 179.859 cv
319.524 179.761 mo
319.527 179.754 319.529 179.748 319.531 179.741 cv
319.529 179.747 319.526 179.755 319.524 179.761 cv
319.556 179.668 mo
319.56 179.659 319.563 179.65 319.566 179.641 cv
319.563 179.649 319.559 179.66 319.556 179.668 cv
319.592 179.565 mo
319.595 179.557 319.599 179.545 319.601 179.537 cv
319.598 179.546 319.595 179.556 319.592 179.565 cv
319.628 179.459 mo
319.631 179.451 319.634 179.443 319.636 179.434 cv
319.634 179.443 319.631 179.451 319.628 179.459 cv
319.658 179.37 mo
319.662 179.359 319.664 179.352 319.668 179.341 cv
319.665 179.351 319.662 179.36 319.658 179.37 cv
319.691 179.272 mo
319.695 179.261 319.699 179.248 319.703 179.237 cv
319.699 179.249 319.695 179.261 319.691 179.272 cv
319.727 179.166 mo
319.73 179.155 319.734 179.144 319.738 179.133 cv
319.734 179.144 319.73 179.155 319.727 179.166 cv
319.758 179.07 mo
319.763 179.057 319.767 179.043 319.772 179.03 cv
319.767 179.044 319.763 179.057 319.758 179.07 cv
319.791 178.973 mo
319.794 178.962 319.798 178.951 319.801 178.94 cv
319.798 178.952 319.794 178.962 319.791 178.973 cv
319.824 178.872 mo
319.828 178.859 319.832 178.846 319.837 178.832 cv
319.833 178.845 319.828 178.859 319.824 178.872 cv
319.859 178.765 mo
319.863 178.753 319.867 178.738 319.871 178.726 cv
319.867 178.738 319.863 178.752 319.859 178.765 cv
319.886 178.681 mo
319.892 178.66 319.899 178.64 319.906 178.619 cv
319.899 178.64 319.893 178.66 319.886 178.681 cv
319.919 178.578 mo
319.924 178.563 319.928 178.55 319.933 178.535 cv
319.928 178.55 319.924 178.563 319.919 178.578 cv
319.953 178.472 mo
319.958 178.456 319.963 178.44 319.968 178.424 cv
319.963 178.44 319.958 178.457 319.953 178.472 cv
319.978 178.393 mo
319.986 178.367 319.994 178.341 320.002 178.316 cv
319.994 178.342 319.986 178.366 319.978 178.393 cv
320.012 178.285 mo
320.02 178.26 320.029 178.231 320.037 178.206 cv
320.028 178.233 320.02 178.258 320.012 178.285 cv
320.045 178.178 mo
320.062 178.124 320.079 178.071 320.095 178.017 cv
320.079 178.071 320.062 178.124 320.045 178.178 cv
320.103 177.992 mo
320.112 177.963 320.121 177.934 320.13 177.905 cv
320.121 177.934 320.112 177.963 320.103 177.992 cv
320.136 177.885 mo
320.146 177.85 320.156 177.817 320.167 177.783 cv
320.157 177.816 320.146 177.851 320.136 177.885 cv
320.169 177.775 mo
320.186 177.718 320.203 177.663 320.22 177.606 cv
320.203 177.663 320.186 177.718 320.169 177.775 cv
320.224 177.593 mo
320.234 177.558 320.244 177.524 320.255 177.489 cv
320.245 177.524 320.234 177.558 320.224 177.593 cv
320.257 177.481 mo
320.285 177.386 320.314 177.289 320.342 177.193 cv
320.314 177.29 320.286 177.385 320.257 177.481 cv
.556863 .760784 .819608 rgb
f
321.393 172.967 mo
321.473 172.584 321.55 172.2 321.622 171.815 cv
321.622 171.815 li
321.55 172.199 321.473 172.585 321.393 172.967 cv
321.393 172.967 li
level3{
gsave
clp
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
321.622 171.815 mo
321.684 171.488 321.743 171.161 321.8 170.833 cv
321.743 171.162 321.684 171.488 321.622 171.815 cv
321.622 171.815 li
level3{
gsave
clp
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
320.343 177.188 mo
320.748 175.796 321.097 174.386 321.393 172.967 cv
321.393 172.967 li
321.096 174.387 320.748 175.795 320.343 177.188 cv
.556863 .760784 .819608 rgb
f
321.802 170.822 mo
321.807 170.788 321.813 170.755 321.819 170.721 cv
321.813 170.754 321.807 170.789 321.802 170.822 cv
321.822 170.703 mo
321.828 170.668 321.834 170.631 321.84 170.596 cv
321.834 170.632 321.828 170.667 321.822 170.703 cv
321.841 170.588 mo
321.844 170.57 321.847 170.552 321.85 170.535 cv
321.847 170.553 321.845 170.57 321.841 170.588 cv
321.856 170.502 mo
321.86 170.476 321.864 170.452 321.869 170.425 cv
321.864 170.45 321.86 170.477 321.856 170.502 cv
321.875 170.389 mo
321.878 170.367 321.882 170.344 321.886 170.322 cv
321.882 170.343 321.878 170.367 321.875 170.389 cv
321.893 170.278 mo
321.895 170.263 321.898 170.247 321.9 170.232 cv
321.898 170.247 321.895 170.263 321.893 170.278 cv
level3{
gsave
clp
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
321.911 170.164 mo
321.911 170.164 li
321.913 170.15 321.916 170.137 321.918 170.123 cv
321.916 170.137 321.914 170.15 321.911 170.164 cv
level3{
gsave
clp
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
321.911 170.166 mo
321.911 170.164 li
321.911 170.164 li
321.911 170.165 321.911 170.165 321.911 170.166 cv
level3{
gsave
clp
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
321.927 170.066 mo
321.929 170.051 321.931 170.038 321.934 170.023 cv
321.932 170.037 321.929 170.052 321.927 170.066 cv
321.944 169.959 mo
321.945 169.951 321.947 169.939 321.948 169.93 cv
321.947 169.94 321.945 169.95 321.944 169.959 cv
321.961 169.85 mo
321.962 169.841 321.964 169.832 321.965 169.823 cv
321.964 169.832 321.962 169.842 321.961 169.85 cv
321.978 169.738 mo
321.979 169.732 321.98 169.728 321.981 169.722 cv
321.98 169.727 321.979 169.733 321.978 169.738 cv
321.995 169.631 mo
321.995 169.629 321.995 169.629 321.995 169.628 cv
321.995 169.629 321.995 169.63 321.995 169.631 cv
322.01 169.53 mo
322.011 169.527 322.011 169.524 322.011 169.521 cv
322.011 169.524 322.011 169.527 322.01 169.53 cv
322.026 169.425 mo
322.026 169.423 322.027 169.418 322.027 169.415 cv
322.027 169.418 322.026 169.422 322.026 169.425 cv
level3{
gsave
clp
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
214.55 215.834 mo
213.897 215.554 213.257 215.267 212.634 214.975 cv
212.634 214.975 li
213.257 215.267 213.897 215.554 214.55 215.834 cv
214.55 215.834 li
.239216 .117647 .172549 rgb
f
228.425 220.209 mo
223.34 219.09 218.654 217.591 214.55 215.834 cv
213.897 215.554 213.257 215.267 212.634 214.975 cv
212.303 214.819 211.979 214.664 211.657 214.505 cv
209.851 213.615 208.185 212.673 206.681 211.693 cv
206.681 211.693 li
206.661 211.68 206.64 211.666 206.619 211.653 cv
206.616 211.65 206.613 211.648 206.609 211.646 cv
206.589 211.633 206.569 211.62 206.55 211.607 cv
206.545 211.604 206.543 211.603 206.539 211.6 cv
206.519 211.587 206.498 211.573 206.477 211.559 cv
206.477 211.559 206.475 211.558 206.474 211.557 cv
206.429 211.528 206.385 211.498 206.341 211.469 cv
206.34 211.468 206.341 211.469 206.34 211.468 cv
206.318 211.454 206.296 211.439 206.274 211.424 cv
206.273 211.424 206.272 211.423 206.271 211.422 cv
204.922 210.519 203.697 209.586 202.596 208.622 cv
201.387 204.826 199.108 200.898 195.84 196.921 cv
195.714 196.775 195.589 196.629 195.463 196.484 cv
194.85 192.089 195.924 187.269 198.689 182.01 cv
206.364 192.695 216.81 201.197 230.28 205.542 cv
230.335 205.56 230.39 205.578 230.445 205.595 cv
230.448 205.596 230.451 205.597 230.454 205.598 cv
230.456 205.599 230.457 205.599 230.459 205.599 cv
230.508 205.615 230.557 205.63 230.605 205.646 cv
237.943 207.957 245.618 209.151 253.254 209.152 cv
253.256 209.152 253.257 209.152 253.258 209.152 cv
253.258 209.152 li
253.258 209.152 li
253.262 209.152 253.265 209.152 253.268 209.152 cv
271.438 209.15 289.379 202.39 302.01 187.856 cv
302.058 187.8 302.107 187.744 302.155 187.688 cv
302.197 187.64 302.238 187.591 302.28 187.543 cv
302.28 187.543 li
312.877 173.829 318.416 157.007 318.425 139.983 cv
318.426 137.595 318.318 135.202 318.1 132.814 cv
321.58 141.319 324.092 155.555 322.027 169.415 cv
322.027 169.418 322.026 169.423 322.026 169.425 cv
322.021 169.458 322.016 169.489 322.011 169.521 cv
322.011 169.524 322.011 169.527 322.01 169.53 cv
322.005 169.562 322 169.595 321.995 169.628 cv
321.995 169.629 321.995 169.629 321.995 169.631 cv
321.99 169.661 321.986 169.691 321.981 169.722 cv
321.98 169.728 321.979 169.732 321.978 169.738 cv
321.974 169.766 321.97 169.795 321.965 169.823 cv
321.964 169.832 321.962 169.841 321.961 169.85 cv
321.957 169.877 321.953 169.903 321.948 169.93 cv
321.947 169.939 321.945 169.951 321.944 169.959 cv
321.94 169.981 321.937 170.002 321.934 170.023 cv
321.931 170.038 321.929 170.051 321.927 170.066 cv
321.924 170.084 321.921 170.105 321.918 170.123 cv
321.916 170.137 321.913 170.15 321.911 170.164 cv
321.911 170.166 li
321.907 170.187 321.904 170.21 321.9 170.232 cv
321.898 170.247 321.895 170.263 321.893 170.278 cv
321.89 170.293 321.888 170.307 321.886 170.322 cv
321.882 170.344 321.878 170.367 321.875 170.389 cv
321.872 170.402 321.871 170.412 321.869 170.425 cv
321.864 170.452 321.86 170.476 321.856 170.502 cv
321.854 170.513 321.852 170.524 321.85 170.535 cv
321.847 170.552 321.844 170.57 321.841 170.588 cv
321.841 170.59 321.84 170.594 321.84 170.596 cv
321.834 170.631 321.828 170.668 321.822 170.703 cv
321.821 170.709 321.82 170.714 321.819 170.721 cv
321.813 170.755 321.807 170.788 321.802 170.822 cv
321.801 170.826 321.8 170.83 321.8 170.833 cv
321.743 171.161 321.684 171.488 321.622 171.815 cv
321.55 172.2 321.473 172.584 321.393 172.967 cv
321.097 174.386 320.748 175.796 320.343 177.188 cv
320.343 177.189 320.342 177.192 320.342 177.193 cv
320.314 177.289 320.285 177.386 320.257 177.481 cv
320.257 177.484 320.256 177.487 320.255 177.489 cv
320.244 177.524 320.234 177.558 320.224 177.593 cv
320.223 177.597 320.221 177.602 320.22 177.606 cv
320.203 177.663 320.186 177.718 320.169 177.775 cv
320.168 177.777 320.167 177.781 320.167 177.783 cv
320.156 177.817 320.146 177.85 320.136 177.885 cv
320.134 177.892 320.132 177.897 320.13 177.905 cv
320.121 177.934 320.112 177.963 320.103 177.992 cv
320.1 178 320.097 178.01 320.095 178.017 cv
320.079 178.071 320.062 178.124 320.045 178.178 cv
320.042 178.187 320.04 178.196 320.037 178.206 cv
320.029 178.231 320.02 178.26 320.012 178.285 cv
320.009 178.295 320.005 178.306 320.002 178.316 cv
319.994 178.341 319.986 178.367 319.978 178.393 cv
319.975 178.403 319.971 178.414 319.968 178.424 cv
319.963 178.44 319.958 178.456 319.953 178.472 cv
319.946 178.493 319.939 178.514 319.933 178.535 cv
319.928 178.55 319.924 178.563 319.919 178.578 cv
319.915 178.591 319.91 178.606 319.906 178.619 cv
319.899 178.64 319.892 178.66 319.886 178.681 cv
319.881 178.696 319.876 178.711 319.871 178.726 cv
319.867 178.738 319.863 178.753 319.859 178.765 cv
319.851 178.788 319.844 178.809 319.837 178.832 cv
319.832 178.846 319.828 178.859 319.824 178.872 cv
319.816 178.895 319.809 178.917 319.801 178.94 cv
319.798 178.951 319.794 178.962 319.791 178.973 cv
319.784 178.992 319.778 179.011 319.772 179.03 cv
319.767 179.043 319.763 179.057 319.758 179.07 cv
319.752 179.091 319.745 179.112 319.738 179.133 cv
319.734 179.144 319.73 179.155 319.727 179.166 cv
319.719 179.19 319.711 179.213 319.703 179.237 cv
319.699 179.248 319.695 179.261 319.691 179.272 cv
319.684 179.295 319.676 179.318 319.668 179.341 cv
319.664 179.352 319.662 179.359 319.658 179.37 cv
319.651 179.391 319.643 179.414 319.636 179.434 cv
319.634 179.443 319.631 179.451 319.628 179.459 cv
319.619 179.485 319.61 179.511 319.601 179.537 cv
319.599 179.545 319.595 179.557 319.592 179.565 cv
319.583 179.591 319.575 179.615 319.566 179.641 cv
319.563 179.65 319.56 179.659 319.556 179.668 cv
319.548 179.693 319.54 179.716 319.531 179.741 cv
319.529 179.748 319.527 179.754 319.524 179.761 cv
319.516 179.786 319.507 179.811 319.498 179.836 cv
319.496 179.843 319.493 179.852 319.49 179.859 cv
319.481 179.886 319.471 179.913 319.462 179.94 cv
319.459 179.948 319.457 179.953 319.454 179.962 cv
319.445 179.989 319.435 180.017 319.425 180.044 cv
319.423 180.051 319.421 180.056 319.418 180.063 cv
319.409 180.089 319.401 180.113 319.391 180.139 cv
319.39 180.142 319.388 180.149 319.387 180.152 cv
319.377 180.18 319.367 180.208 319.357 180.236 cv
319.354 180.243 319.352 180.25 319.349 180.257 cv
319.339 180.284 319.329 180.312 319.32 180.339 cv
319.317 180.345 319.315 180.352 319.313 180.358 cv
319.303 180.386 319.292 180.415 319.282 180.443 cv
319.28 180.448 319.279 180.452 319.277 180.457 cv
319.267 180.484 319.258 180.508 319.249 180.535 cv
319.247 180.54 319.245 180.546 319.243 180.551 cv
319.233 180.578 319.222 180.607 319.212 180.635 cv
319.21 180.641 319.207 180.648 319.205 180.654 cv
319.195 180.681 319.184 180.71 319.174 180.738 cv
319.172 180.742 319.17 180.749 319.168 180.754 cv
319.157 180.784 319.146 180.813 319.135 180.842 cv
319.135 180.842 li
317.054 187.248 313.621 193.125 309.141 198.298 cv
308.819 198.669 308.491 199.039 308.158 199.403 cv
307.544 200.075 306.915 200.733 306.266 201.38 cv
300.912 206.715 294.381 211.167 287.074 214.505 cv
285.811 215.082 284.526 215.625 283.218 216.135 cv
278.229 215.863 273.06 215.703 267.887 215.703 cv
257.584 215.703 247.266 216.336 238.308 217.971 cv
237.169 218.244 235.949 218.514 234.679 218.792 cv
234.689 218.76 234.698 218.728 234.708 218.696 cv
232.806 219.156 230.769 219.624 228.708 220.14 cv
228.614 220.163 228.52 220.186 228.425 220.209 cv
.392157 .545098 .231373 rgb
f
253.258 209.152 mo
253.257 209.152 253.256 209.152 253.254 209.152 cv
253.256 209.152 253.257 209.152 253.258 209.152 cv
253.258 209.152 li
253.268 209.152 mo
271.437 209.149 289.38 202.389 302.01 187.856 cv
289.379 202.39 271.438 209.15 253.268 209.152 cv
230.605 205.646 mo
230.557 205.63 230.508 205.615 230.459 205.599 cv
230.508 205.615 230.557 205.63 230.605 205.646 cv
230.454 205.598 mo
230.451 205.597 230.448 205.596 230.445 205.595 cv
230.448 205.596 230.451 205.597 230.454 205.598 cv
302.155 187.688 mo
302.197 187.64 302.238 187.591 302.28 187.543 cv
302.238 187.591 302.197 187.64 302.155 187.688 cv
318.425 139.983 mo
318.426 137.595 318.318 135.202 318.1 132.814 cv
318.1 132.814 li
318.318 135.202 318.426 137.595 318.425 139.983 cv
.333333 .443137 .227451 rgb
f
146.911 173.928 mo
133.225 174.692 120.491 180.845 105.65 193.158 cv
85.7662 207.988 95.583 226.031 129.038 236.057 cv
155.12 244.935 202.909 238.723 203.435 217.232 cv
204.343 210.934 201.66 204.003 195.84 196.921 cv
181.465 180.142 163.128 173.268 146.911 173.928 cv
.423529 .6 .235294 rgb
f
129.038 236.057 mo
129.038 236.057 li
118.688 232.955 110.598 229.085 104.952 224.781 cv
110.598 229.085 118.688 232.955 129.038 236.057 cv
129.038 236.057 li
104.731 224.611 mo
104.73 224.61 li
104.731 224.611 li
.580392 .603922 .486274 rgb
f
95.4437 209.973 mo
95.4436 209.973 li
95.1537 204.302 98.4602 198.52 105.65 193.158 cv
98.4603 198.52 95.1538 204.302 95.4437 209.973 cv
f
96.9505 215.648 mo
96.0473 213.783 95.5413 211.884 95.4436 209.973 cv
95.4437 209.973 li
95.5414 211.884 96.0473 213.783 96.9505 215.648 cv
.47451 .54902 .447059 rgb
f
151.379 173.936 mo
150.595 173.902 149.813 173.884 149.037 173.884 cv
148.324 173.884 147.616 173.899 146.911 173.928 cv
147.699 173.89 148.486 173.872 149.273 173.872 cv
149.989 173.872 150.705 173.887 151.421 173.916 cv
151.407 173.923 151.393 173.929 151.379 173.936 cv
level3{
gsave
clp
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
155.881 239.969 mo
146.227 239.969 136.695 238.663 129.038 236.057 cv
129.038 236.057 li
118.688 232.955 110.598 229.085 104.952 224.781 cv
104.878 224.724 104.805 224.668 104.731 224.611 cv
104.73 224.61 li
101.066 221.776 98.4566 218.759 96.9505 215.648 cv
96.0473 213.783 95.5414 211.884 95.4437 209.973 cv
95.1538 204.302 98.4603 198.52 105.65 193.158 cv
105.65 193.158 li
120.491 180.845 133.225 174.692 146.911 173.928 cv
146.911 173.928 li
147.616 173.899 148.324 173.884 149.037 173.884 cv
149.813 173.884 150.595 173.902 151.379 173.936 cv
145.576 176.774 139.339 180.396 133.39 184.457 cv
126.889 188.804 123.822 194.067 124.348 198.24 cv
125.632 210.689 146.567 216.43 165.444 217.565 cv
166.365 217.622 167.295 217.651 168.234 217.651 cv
181.737 217.651 196.728 211.723 198.309 200.214 cv
202.404 206.135 204.193 211.92 203.435 217.232 cv
203.435 217.232 li
203.428 217.514 203.413 217.792 203.39 218.069 cv
202.174 232.691 178.678 239.969 155.881 239.969 cv
.360784 .490196 .231373 rgb
f
327.675 229.154 mo
318.01 221.281 302.795 217.984 294.064 216.917 cv
276.772 215.366 255.135 214.899 238.308 217.971 cv
225.935 220.935 204.046 223.587 210.519 239.946 cv
215.667 253.163 242.585 267.246 271.687 271.075 cv
300.769 275.551 328.33 267.463 333.785 252.322 cv
338.018 242.114 333.838 234.298 327.675 229.154 cv
.423529 .6 .235294 rgb
f
212.051 242.954 mo
212.051 242.954 li
211.421 241.949 210.908 240.945 210.519 239.946 cv
207.852 233.293 209.891 228.946 214.06 225.909 cv
209.917 228.968 207.905 233.339 210.519 239.946 cv
210.908 240.945 211.422 241.949 212.051 242.954 cv
level3{
gsave
clp
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
333.785 252.322 mo
333.785 252.322 li
338.018 242.114 333.838 234.298 327.675 229.154 cv
333.838 234.297 338.018 242.114 333.785 252.322 cv
333.785 252.322 li
327.675 229.154 mo
327.363 228.9 327.046 228.651 326.722 228.406 cv
327.046 228.65 327.367 228.897 327.675 229.154 cv
326.307 228.097 mo
326.28 228.077 326.253 228.057 326.226 228.037 cv
326.226 228.037 326.226 228.037 326.226 228.036 cv
326.253 228.056 326.28 228.076 326.307 228.097 cv
.513725 .686274 .811765 rgb
f
233.858 259.901 mo
229.008 257.532 224.684 254.934 221.08 252.217 cv
221.08 252.216 li
224.684 254.934 229.007 257.532 233.858 259.901 cv
233.858 259.901 li
219.412 250.909 mo
219.366 250.871 219.321 250.834 219.275 250.796 cv
219.276 250.797 li
219.321 250.834 219.366 250.871 219.412 250.909 cv
219.412 250.909 li
212.168 243.138 mo
212.168 243.138 li
212.129 243.077 212.09 243.015 212.051 242.954 cv
212.051 242.954 li
212.09 243.016 212.129 243.077 212.168 243.138 cv
.580392 .603922 .486274 rgb
f
265.186 270.046 mo
258.601 268.827 252.212 267.112 246.25 265.034 cv
246.25 265.034 li
252.212 267.112 258.601 268.827 265.186 270.046 cv
265.186 270.046 li
237.888 261.763 mo
236.508 261.16 235.165 260.539 233.858 259.901 cv
233.858 259.901 li
235.165 260.539 236.508 261.16 237.888 261.763 cv
237.888 261.763 li
219.276 250.797 mo
219.275 250.796 li
216.239 248.299 213.823 245.719 212.168 243.138 cv
212.168 243.138 li
213.823 245.719 216.24 248.299 219.276 250.797 cv
.686274 .690196 .65098 rgb
f
246.25 265.034 mo
243.352 264.024 240.555 262.928 237.888 261.763 cv
237.888 261.763 li
240.555 262.928 243.352 264.024 246.25 265.034 cv
246.25 265.034 li
221.08 252.217 mo
220.506 251.784 219.949 251.347 219.412 250.909 cv
219.412 250.909 li
219.949 251.347 220.506 251.784 221.08 252.216 cv
221.08 252.217 li
.219608 .105882 .168627 rgb
f
228.708 220.14 mo
230.769 219.624 232.806 219.156 234.708 218.696 cv
234.698 218.728 234.689 218.76 234.679 218.792 cv
232.771 219.211 230.747 219.648 228.708 220.14 cv
.333333 .443137 .227451 rgb
f
287.597 272.304 mo
282.474 272.304 277.169 271.912 271.813 271.095 cv
271.771 271.088 271.729 271.082 271.687 271.075 cv
269.505 270.788 267.335 270.443 265.186 270.046 cv
258.601 268.827 252.212 267.112 246.25 265.034 cv
243.352 264.024 240.555 262.928 237.888 261.763 cv
236.508 261.16 235.165 260.539 233.858 259.901 cv
229.007 257.532 224.684 254.934 221.08 252.216 cv
220.506 251.784 219.949 251.347 219.412 250.909 cv
219.366 250.871 219.321 250.834 219.276 250.797 cv
216.24 248.299 213.823 245.719 212.168 243.138 cv
212.129 243.077 212.09 243.016 212.051 242.954 cv
211.422 241.949 210.908 240.945 210.519 239.946 cv
207.905 233.339 209.917 228.968 214.06 225.909 cv
217.835 223.159 223.356 221.482 228.708 220.14 cv
230.747 219.648 232.771 219.211 234.679 218.792 cv
234.627 218.963 234.573 219.135 234.527 219.309 cv
230.748 230.155 239.951 240.82 252.602 248.556 cv
262.792 254.56 274.108 257.366 284.868 257.365 cv
300.526 257.364 315 251.418 323.063 240.731 cv
325.328 237.525 326.872 232.668 326.226 228.037 cv
326.253 228.057 326.28 228.077 326.307 228.097 cv
326.446 228.199 326.584 228.303 326.722 228.406 cv
327.046 228.651 327.363 228.9 327.675 229.154 cv
327.675 229.154 li
327.675 229.154 li
333.838 234.298 338.018 242.114 333.785 252.322 cv
333.785 252.322 li
329.343 264.651 310.242 272.304 287.597 272.304 cv
.360784 .490196 .231373 rgb
f
254.717 154.791 mo
247.766 154.791 243.069 152.346 245.454 148.925 cv
251.199 142.746 267.242 128.507 276.764 128.507 cv
279.64 128.507 281.922 129.807 283.145 133.019 cv
286.217 140.24 276.263 150.443 264.667 153.283 cv
261.189 154.329 257.74 154.791 254.717 154.791 cv
.560784 .717647 .305882 rgb
f
239.909 164.931 mo
238.494 164.931 236.863 164.115 235.602 163.145 cv
234.894 162.608 234.291 162.026 233.864 161.515 cv
230.368 157.234 230.802 149.338 235.675 149.25 cv
235.692 149.25 235.709 149.249 235.727 149.249 cv
238.7 149.249 244.527 156.777 242.679 162.779 cv
242.146 164.347 241.105 164.931 239.909 164.931 cv
f
286.223 243.762 mo
284.155 243.762 282.143 243.651 280.321 243.482 cv
272.939 242.903 262.418 241.072 256.434 236.476 cv
246.008 228.33 259.82 223.414 266.1 221.345 cv
268.851 220.575 271.64 220.221 274.466 220.221 cv
280.03 220.221 285.735 221.595 291.565 223.88 cv
298.116 226.486 309.972 233.332 301.962 239.977 cv
298.26 242.888 292.023 243.762 286.223 243.762 cv
f
170.569 204.217 mo
167.227 204.217 163.91 203.73 161.746 203.197 cv
154.912 201.89 140.633 197.322 144.802 190.05 cv
148.046 184.153 157.124 182.636 163.062 182.636 cv
164.194 182.636 165.214 182.691 166.055 182.782 cv
171.719 183.605 180.858 188.786 182.174 195.876 cv
183.39 202.452 176.932 204.217 170.569 204.217 cv
f
753.721 322.405 mo
753.942 323.12 754.188 323.766 754.461 324.31 cv
754.307 323.759 754.053 323.108 753.721 322.405 cv
cp
.627451 .890196 .329412 rgb
f
777.631 336.933 mo
778.193 335.472 778.641 333.533 778.963 331.292 cv
777.732 332.921 777.072 335.1 777.631 336.933 cv
cp
f
807.737 332.569 mo
804.448 322.02 790.9 319.629 786.32 330.916 cv
784.06 327.602 780.844 328.802 778.963 331.292 cv
778.641 333.533 778.193 335.472 777.631 336.933 cv
777.072 335.1 777.732 332.921 778.963 331.292 cv
780.986 317.205 777.847 290.758 764.091 290.022 cv
752.551 289.404 750.75 312.832 753.721 322.405 cv
754.053 323.108 754.307 323.759 754.461 324.31 cv
754.188 323.766 753.942 323.12 753.721 322.405 cv
751.663 318.057 746.491 311.63 741.99 313.064 cv
737.497 314.496 738.103 322.98 739.051 326.59 cv
731.092 316.096 719.882 321.475 720.818 333.837 cv
721.361 341.012 724.691 351.335 730.036 356.452 cv
815.727 356.452 li
827.337 358.559 831.715 330.494 827.851 323.543 cv
822.335 313.621 809.196 324.677 807.737 332.569 cv
cp
f
702.351 180.991 mo
690.232 166.88 676.9 147.561 664.886 133.271 cv
652.596 118.96 642.673 115.066 631.351 125.908 cv
620.444 136.249 608.137 161.327 600.672 193.426 cv
593.233 225.38 594.703 256.87 606.493 275.073 cv
617.859 293.782 639.545 299.203 662.709 290.728 cv
686.126 282.514 705.266 264.688 716.715 250.563 cv
728.314 235.792 732.224 224.723 728.652 215.086 cv
725.089 205.307 714.326 195.753 702.351 180.991 cv
.392157 .694118 .333333 rgb
f
598.372 254.28 mo
598.367 254.275 598.363 254.27 598.359 254.266 cv
597.614 250.771 597.058 247.103 596.687 243.293 cv
597.063 247.11 597.623 250.783 598.372 254.28 cv
.521569 .533333 .435294 rgb
f
607.227 276.24 mo
607.217 276.231 607.208 276.223 607.198 276.214 cv
603.094 270.228 600.168 262.758 598.359 254.266 cv
598.363 254.27 598.367 254.275 598.372 254.28 cv
600.081 262.265 602.774 269.33 606.493 275.073 cv
606.733 275.468 606.978 275.857 607.227 276.24 cv
.427451 .486274 .396078 rgb
f
600.667 193.446 mo
600.669 193.44 600.671 193.432 600.672 193.426 cv
601.779 188.487 603.038 183.691 604.403 179.085 cv
604.4 179.15 604.398 179.215 604.396 179.281 cv
603.058 183.814 601.808 188.54 600.672 193.426 cv
600.671 193.432 600.669 193.44 600.667 193.446 cv
.588235 .588235 .501961 rgb
f
710.475 190.519 mo
710.438 190.519 li
708.103 187.858 705.65 185.02 703.14 181.958 cv
705.678 184.964 708.139 187.82 710.475 190.519 cv
level3{
gsave
clp
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
712.742 193.133 mo
711.988 192.279 711.22 191.41 710.438 190.519 cv
710.475 190.519 li
711.245 191.407 712.001 192.279 712.742 193.133 cv
level3{
gsave
clp
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
700 178.209 mo
699.654 177.793 699.305 177.371 698.956 176.947 cv
699.305 177.371 699.653 177.791 700 178.209 cv
level3{
gsave
clp
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.09526e-008 -243.951 243.951 1.09526e-008 450 369.739 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
640.362 288.413 mo
627.302 288.413 615.951 284.127 607.227 276.24 cv
606.978 275.857 606.733 275.468 606.493 275.073 cv
602.774 269.33 600.081 262.265 598.372 254.28 cv
597.623 250.783 597.063 247.11 596.687 243.293 cv
595.22 228.234 596.636 210.964 600.667 193.446 cv
600.669 193.44 600.671 193.432 600.672 193.426 cv
601.808 188.54 603.058 183.814 604.396 179.281 cv
603.961 193.205 605.457 206.925 607.538 218.694 cv
610.37 235.316 619.345 248.522 631.856 254.173 cv
635.84 256.068 640.186 257.185 644.729 257.588 cv
643.652 257.976 642.627 258.289 641.736 258.523 cv
640.79 258.774 639.992 258.95 639.435 259.05 cv
638.875 259.154 638.556 259.212 638.557 259.212 cv
638.557 259.212 638.875 259.188 639.436 259.143 cv
639.997 259.101 640.802 259.008 641.773 258.851 cv
643.13 258.634 644.82 258.267 646.587 257.712 cv
647.278 257.744 647.972 257.76 648.67 257.76 cv
651.992 257.759 655.389 257.403 658.8 256.715 cv
659.948 257.159 661.116 257.495 662.263 257.727 cv
662.852 257.843 663.436 257.93 664.006 257.993 cv
664.158 262.24 664.273 266.596 664.324 271.017 cv
664.337 272.122 664.346 273.231 664.349 274.344 cv
664.355 275.718 664.355 277.096 664.344 278.479 cv
664.334 280.446 664.305 282.422 664.255 284.403 cv
659.688 285.875 654.975 286.999 650.174 287.676 cv
649.15 287.82 648.125 287.943 647.093 288.046 cv
646.996 288.056 646.9 288.066 646.804 288.076 cv
645.178 288.244 643.571 288.348 641.991 288.391 cv
641.445 288.406 640.902 288.413 640.362 288.413 cv
670.022 282.334 mo
669.889 280.497 669.739 278.661 669.574 276.828 cv
669.444 275.342 669.299 273.863 669.152 272.383 cv
671.825 271.068 674.579 269.376 677.085 267.469 cv
678.549 266.382 679.905 265.214 681.216 264.044 cv
682.502 262.861 683.716 261.665 684.828 260.472 cv
685.54 259.708 686.202 258.949 686.836 258.199 cv
687.317 257.629 687.777 257.066 688.215 256.51 cv
689.908 254.357 691.278 252.324 692.338 250.527 cv
693.528 250.488 694.98 250.245 696.347 249.765 cv
698.015 249.205 699.439 248.317 700.236 247.623 cv
700.454 247.456 700.602 247.284 700.752 247.143 cv
700.906 247.001 701.01 246.874 701.094 246.769 cv
701.266 246.562 701.365 246.444 701.364 246.444 cv
701.364 246.444 701.364 246.444 701.364 246.444 cv
701.364 246.444 701.236 246.554 701.014 246.75 cv
700.803 246.946 700.448 247.213 699.997 247.509 cv
699.097 248.101 697.688 248.752 696.249 249.049 cv
695.454 249.226 694.679 249.299 693.987 249.299 cv
693.657 249.299 693.346 249.282 693.06 249.252 cv
693.316 248.781 693.553 248.328 693.765 247.899 cv
694.572 246.274 695.063 244.96 695.355 244.052 cv
695.512 243.598 695.598 243.245 695.666 243.005 cv
695.728 242.774 695.762 242.648 695.765 242.639 cv
695.765 242.639 695.765 242.638 695.765 242.638 cv
695.765 242.638 695.765 242.639 695.765 242.639 cv
695.761 242.648 695.709 242.775 695.614 243.007 cv
695.515 243.248 695.379 243.601 695.159 244.055 cv
694.744 244.962 694.081 246.268 693.075 247.866 cv
692.823 248.267 692.547 248.687 692.255 249.123 cv
691.955 249.569 691.628 250.033 691.284 250.512 cv
690.622 251.427 689.879 252.397 689.053 253.406 cv
688.511 254.066 687.919 254.745 687.306 255.431 cv
686.357 254.187 685.473 252.622 684.852 250.943 cv
684.163 249.178 683.714 247.326 683.408 245.765 cv
691.463 240.2 697.361 234.162 700.98 228.32 cv
712.078 208.124 704.91 195.729 690.646 168.476 cv
689.721 166.655 688.77 164.762 687.797 162.798 cv
691.536 167.785 695.298 172.509 698.956 176.947 cv
699.305 177.371 699.654 177.793 700 178.209 cv
701.057 179.483 702.105 180.734 703.14 181.958 cv
705.65 185.02 708.103 187.858 710.438 190.519 cv
711.22 191.41 711.988 192.279 712.742 193.133 cv
715.675 196.515 718.372 199.623 720.73 202.442 cv
720.73 202.442 li
720.73 202.442 li
723.599 206.773 725.76 210.656 726.942 214.609 cv
729.182 222.097 727.911 229.835 721.299 241.335 cv
715.331 251.796 699.504 267.83 679.127 278.218 cv
679.127 278.218 li
678.935 278.316 678.742 278.414 678.549 278.51 cv
678.477 278.546 678.404 278.583 678.332 278.619 cv
678.33 278.62 678.33 278.62 678.328 278.621 cv
678.212 278.679 678.094 278.738 677.977 278.796 cv
677.975 278.797 677.974 278.797 677.972 278.798 cv
675.389 280.077 672.736 281.263 670.022 282.334 cv
668.851 269.443 mo
668.448 265.62 668.009 261.83 667.554 258.106 cv
667.412 256.946 667.27 255.796 667.126 254.65 cv
667.115 254.565 667.105 254.481 667.094 254.396 cv
669.62 253.493 672.124 252.418 674.584 251.178 cv
677.577 249.546 680.359 247.845 682.927 246.096 cv
683.035 247.665 683.241 249.513 683.672 251.326 cv
684.13 253.414 684.962 255.413 685.92 256.936 cv
685 257.903 684.025 258.881 682.982 259.852 cv
681.809 260.942 680.557 262.015 679.264 263.053 cv
677.949 264.074 676.614 265.077 675.224 265.972 cv
673.099 267.376 670.911 268.546 668.851 269.443 cv
.333333 .568627 .32549 rgb
f
627.403 292.246 mo
624.071 291.093 620.933 289.514 618.04 287.51 cv
618.036 287.5 618.032 287.49 618.028 287.48 cv
620.923 289.488 624.065 291.075 627.405 292.238 cv
627.404 292.242 627.404 292.242 627.403 292.246 cv
.568627 .592157 .439216 rgb
f
630.594 293.205 mo
629.512 292.927 628.448 292.607 627.403 292.246 cv
627.404 292.242 627.404 292.242 627.405 292.238 cv
628.449 292.602 629.513 292.924 630.594 293.205 cv
618.04 287.51 mo
616.75 286.616 615.507 285.637 614.318 284.574 cv
614.317 284.567 614.316 284.56 614.315 284.552 cv
615.502 285.611 616.739 286.587 618.028 287.48 cv
618.032 287.49 618.036 287.5 618.04 287.51 cv
609.203 279.051 mo
608.507 278.145 607.838 277.199 607.198 276.214 cv
607.208 276.223 607.217 276.231 607.227 276.24 cv
607.859 277.212 608.519 278.144 609.207 279.04 cv
609.206 279.043 609.204 279.047 609.203 279.051 cv
.462745 .541176 .4 rgb
f
614.318 284.574 mo
612.482 282.934 610.774 281.095 609.203 279.051 cv
609.204 279.047 609.206 279.043 609.207 279.04 cv
610.772 281.075 612.48 282.913 614.315 284.552 cv
614.316 284.56 614.317 284.567 614.318 284.574 cv
.360784 .615686 .168627 rgb
f
641.951 294.593 mo
638.002 294.593 634.198 294.131 630.594 293.205 cv
629.513 292.924 628.449 292.602 627.405 292.238 cv
624.065 291.075 620.923 289.488 618.028 287.48 cv
616.739 286.587 615.502 285.611 614.315 284.552 cv
612.48 282.913 610.772 281.075 609.207 279.04 cv
608.519 278.144 607.859 277.212 607.227 276.24 cv
615.952 284.128 627.301 288.413 640.361 288.413 cv
640.902 288.413 641.445 288.406 641.991 288.391 cv
643.572 288.348 645.177 288.244 646.804 288.076 cv
646.9 288.066 646.996 288.056 647.093 288.046 cv
648.125 287.943 649.15 287.82 650.174 287.676 cv
654.975 286.999 659.688 285.875 664.255 284.403 cv
664.206 286.347 664.137 288.298 664.046 290.247 cv
663.602 290.411 663.156 290.571 662.709 290.728 cv
662.709 290.728 li
662.709 290.728 li
655.545 293.304 648.545 294.594 641.951 294.593 cv
.360784 .627451 .329412 rgb
f
641.991 288.391 mo
643.571 288.348 645.178 288.244 646.804 288.076 cv
645.177 288.244 643.572 288.348 641.991 288.391 cv
650.174 287.676 mo
654.975 286.999 659.688 285.875 664.255 284.403 cv
664.255 284.403 li
659.688 285.875 654.975 286.999 650.174 287.676 cv
.305882 .513725 .321569 rgb
f
670.357 287.65 mo
670.263 285.879 670.151 284.106 670.022 282.334 cv
672.736 281.263 675.389 280.077 677.972 278.798 cv
677.974 278.797 677.975 278.797 677.977 278.796 cv
678.094 278.738 678.212 278.679 678.328 278.621 cv
678.33 278.62 678.33 278.62 678.332 278.619 cv
678.404 278.583 678.477 278.546 678.549 278.51 cv
678.742 278.414 678.935 278.316 679.127 278.218 cv
679.127 278.218 li
699.504 267.83 715.332 251.795 721.299 241.335 cv
727.912 229.835 729.182 222.097 726.942 214.609 cv
725.76 210.656 723.6 206.773 720.73 202.442 cv
724.33 206.881 727.112 210.868 728.652 215.086 cv
732.222 224.723 728.315 235.792 716.715 250.563 cv
706.539 263.117 690.286 278.596 670.357 287.65 cv
.360784 .627451 .329412 rgb
f
670.022 282.334 mo
670.022 282.334 li
672.736 281.263 675.389 280.077 677.972 278.798 cv
675.389 280.077 672.736 281.263 670.022 282.334 cv
677.977 278.796 mo
678.094 278.738 678.212 278.679 678.328 278.621 cv
678.212 278.679 678.094 278.738 677.977 278.796 cv
678.332 278.619 mo
678.404 278.583 678.477 278.546 678.549 278.51 cv
678.477 278.546 678.404 278.583 678.332 278.619 cv
679.127 278.218 mo
679.127 278.218 li
679.127 278.218 li
726.942 214.609 mo
725.76 210.656 723.599 206.773 720.73 202.442 cv
720.73 202.442 li
723.6 206.773 725.76 210.656 726.942 214.609 cv
.305882 .513725 .321569 rgb
f
699.997 247.509 mo
699.097 248.101 697.688 248.752 696.249 249.049 cv
695.075 249.31 693.943 249.345 693.06 249.252 cv
693.316 248.781 693.553 248.328 693.765 247.899 cv
694.572 246.274 695.063 244.96 695.355 244.052 cv
695.512 243.598 695.598 243.245 695.666 243.005 cv
695.731 242.765 695.764 242.639 695.765 242.638 cv
695.765 242.638 695.713 242.766 695.614 243.007 cv
695.515 243.248 695.379 243.601 695.159 244.055 cv
694.744 244.962 694.081 246.268 693.075 247.866 cv
692.823 248.267 692.547 248.687 692.255 249.123 cv
691.955 249.569 691.628 250.033 691.284 250.512 cv
690.622 251.427 689.879 252.397 689.053 253.406 cv
688.511 254.066 687.919 254.745 687.306 255.431 cv
686.357 254.187 685.473 252.622 684.852 250.943 cv
684.005 248.774 683.521 246.474 683.22 244.744 cv
682.923 243.011 682.789 241.847 682.789 241.848 cv
682.789 241.848 682.778 243.028 682.854 244.814 cv
682.935 246.595 683.116 248.99 683.672 251.326 cv
684.13 253.414 684.962 255.413 685.92 256.936 cv
685 257.903 684.025 258.881 682.982 259.852 cv
681.809 260.942 680.557 262.015 679.264 263.053 cv
677.949 264.074 676.614 265.077 675.224 265.972 cv
673.099 267.376 670.911 268.546 668.851 269.443 cv
668.448 265.62 668.009 261.83 667.554 258.106 cv
667.412 256.946 667.27 255.796 667.126 254.65 cv
666.055 246.12 664.97 237.996 664.081 230.988 cv
663.228 224.542 662.593 219.044 662.167 215.169 cv
661.735 211.292 661.505 209.047 661.505 209.049 cv
661.512 209.035 661.88 217.979 662.686 231.059 cv
662.741 232.05 662.8 233.075 662.857 234.112 cv
662.643 234.053 li
662.443 233.995 662.238 233.902 662.003 233.818 cv
661.103 233.429 660.034 232.671 659.22 231.678 cv
658.377 230.705 657.755 229.571 657.342 228.703 cv
656.932 227.832 656.714 227.228 656.714 227.228 cv
656.714 227.228 656.794 227.85 657.011 228.786 cv
657.232 229.718 657.594 230.973 658.258 232.174 cv
658.886 233.384 659.902 234.501 660.953 235.183 cv
661.226 235.34 661.472 235.5 661.721 235.617 cv
661.975 235.728 662.202 235.827 662.4 235.912 cv
662.632 235.988 662.821 236.046 662.968 236.089 cv
663.281 241.752 663.61 247.996 663.875 254.544 cv
663.827 254.54 li
661.873 254.295 659.71 253.736 657.631 252.756 cv
657.276 252.592 656.924 252.405 656.576 252.219 cv
656.015 251.922 655.462 251.602 654.919 251.254 cv
653.808 250.544 652.736 249.741 651.734 248.859 cv
651.646 248.778 li
652.341 247.567 652.842 246.156 653.06 244.792 cv
653.391 242.992 653.38 241.26 653.364 239.974 cv
653.336 238.688 653.294 237.843 653.294 237.843 cv
653.294 237.843 653.18 238.686 653.003 239.968 cv
652.804 241.245 652.513 242.964 651.913 244.637 cv
651.555 245.719 651.019 246.753 650.414 247.627 cv
647.447 244.693 645.171 241.214 643.643 238.369 cv
642.763 236.742 642.122 235.322 641.691 234.315 cv
641.261 233.309 641.037 232.72 641.037 232.722 cv
641.037 232.721 641.193 233.329 641.506 234.378 cv
641.819 235.427 642.296 236.917 642.98 238.652 cv
644.219 241.802 646.163 245.767 648.982 249.254 cv
649.266 249.606 649.552 249.955 649.851 250.295 cv
649.966 250.427 650.094 250.552 650.212 250.682 cv
651.031 251.574 651.908 252.414 652.847 253.186 cv
651.622 254.162 650.106 255.168 648.442 255.986 cv
646.13 257.176 643.628 258.025 641.736 258.523 cv
640.79 258.774 639.992 258.95 639.435 259.05 cv
638.875 259.154 638.556 259.212 638.557 259.212 cv
638.557 259.212 638.875 259.188 639.436 259.143 cv
639.997 259.101 640.802 259.008 641.773 258.851 cv
643.711 258.541 646.331 257.925 648.882 256.892 cv
650.78 256.161 652.604 255.173 654.109 254.163 cv
654.574 254.494 655.048 254.812 655.534 255.106 cv
657.645 256.401 659.996 257.269 662.263 257.727 cv
662.852 257.843 663.436 257.93 664.006 257.993 cv
664.158 262.24 664.273 266.596 664.324 271.017 cv
664.337 272.122 664.346 273.231 664.349 274.344 cv
664.355 275.718 664.355 277.096 664.344 278.479 cv
664.251 295.8 662.705 313.791 658.453 329.633 cv
656.39 337.51 653.718 344.785 651.111 350.55 cv
650.792 351.268 650.484 351.961 650.188 352.625 cv
649.852 353.298 649.533 353.943 649.226 354.559 cv
648.602 355.79 648.096 356.892 647.552 357.879 cv
646.46 359.855 645.672 361.292 645.245 362.093 cv
649.2 361.002 653.152 359.782 657.097 358.434 cv
657.561 357.544 658.363 355.961 659.435 353.808 cv
659.967 352.733 660.438 351.578 661.024 350.268 cv
661.307 349.618 661.606 348.937 661.914 348.226 cv
662.179 347.538 662.453 346.822 662.737 346.079 cv
665.057 340.108 667.169 332.884 668.53 325.282 cv
671.366 309.994 671.052 293.283 669.574 276.828 cv
669.444 275.342 669.299 273.863 669.152 272.383 cv
671.825 271.068 674.579 269.376 677.085 267.469 cv
678.549 266.382 679.905 265.214 681.216 264.044 cv
682.502 262.861 683.716 261.665 684.828 260.472 cv
685.54 259.708 686.202 258.949 686.836 258.199 cv
687.317 257.629 687.777 257.066 688.215 256.51 cv
689.908 254.357 691.278 252.324 692.338 250.527 cv
693.528 250.488 694.98 250.245 696.347 249.765 cv
698.015 249.205 699.439 248.317 700.236 247.623 cv
700.454 247.456 700.602 247.284 700.752 247.143 cv
700.906 247.001 701.01 246.874 701.094 246.769 cv
701.267 246.562 701.365 246.444 701.364 246.444 cv
701.364 246.444 701.236 246.554 701.014 246.75 cv
700.803 246.946 700.448 247.213 699.997 247.509 cv
.258824 .129412 .172549 rgb
f
641.85 183.891 mo
641.123 183.891 640.392 183.872 639.665 183.834 cv
623.131 183.063 623.33 162.832 630.262 149.047 cv
634.911 139.745 640.622 131.121 647.327 131.121 cv
649.137 131.121 651.02 131.75 652.974 133.164 cv
653.661 133.628 654.361 134.174 655.081 134.805 cv
662.318 141.815 671.509 157.219 670.105 166.159 cv
668.278 177.523 655.176 183.892 641.85 183.891 cv
.517647 .784314 .431373 rgb
f
679.029 180.495 mo
679.105 180.273 li
679.105 180.273 li
679.105 180.273 li
679.127 180.226 679.142 180.196 679.145 180.196 cv
679.149 180.196 679.119 180.277 679.029 180.495 cv
f
678.854 180.85 mo
678.851 180.85 678.872 180.799 678.903 180.727 cv
678.903 180.727 li
678.903 180.727 li
679.029 180.495 li
678.906 180.756 678.859 180.85 678.854 180.85 cv
f
678.903 180.727 mo
678.959 180.592 679.052 180.385 679.105 180.273 cv
679.029 180.495 li
678.903 180.727 li
f
671.041 184.6 mo
669.799 184.6 668.486 184.435 667.147 184.098 cv
669.068 180.206 669.49 175.33 671.38 171.943 cv
672.927 169.512 674.555 167.516 675.559 164.868 cv
678.541 170.719 680.47 176.545 679.105 180.273 cv
679.105 180.273 li
679.105 180.273 li
679.052 180.385 678.959 180.592 678.903 180.727 cv
678.903 180.727 li
678.903 180.727 li
677.579 183.245 674.604 184.6 671.041 184.6 cv
f
817.405 191.055 mo
791.763 191.055 770.976 218.837 770.976 253.109 cv
770.976 287.38 791.763 315.162 817.405 315.162 cv
843.047 315.162 863.834 287.38 863.834 253.109 cv
863.834 218.837 843.047 191.055 817.405 191.055 cv
.423529 .6 .235294 rgb
f
771.012 255.558 mo
771.012 255.556 771.012 255.557 771.012 255.555 cv
771.012 255.558 li
771.009 255.458 mo
771.009 255.456 771.009 255.454 771.009 255.452 cv
771.009 255.454 771.009 255.456 771.009 255.458 cv
771.006 255.359 mo
771.006 255.356 771.006 255.352 771.006 255.349 cv
771.006 255.353 771.006 255.355 771.006 255.359 cv
771.004 255.26 mo
771.004 255.255 771.004 255.251 771.003 255.245 cv
771.003 255.25 771.004 255.256 771.004 255.26 cv
771.001 255.16 mo
771.001 255.154 771.001 255.148 771.001 255.143 cv
771.001 255.149 771.001 255.154 771.001 255.16 cv
770.999 255.061 mo
770.999 255.054 770.999 255.047 770.998 255.04 cv
770.999 255.046 770.999 255.055 770.999 255.061 cv
770.997 254.961 mo
770.996 254.953 770.996 254.946 770.996 254.938 cv
770.996 254.944 770.997 254.955 770.997 254.961 cv
770.995 254.863 mo
770.994 254.853 770.994 254.844 770.994 254.835 cv
770.994 254.843 770.994 254.854 770.995 254.863 cv
770.993 254.761 mo
770.992 254.752 770.992 254.744 770.992 254.734 cv
770.992 254.742 770.992 254.753 770.993 254.761 cv
770.991 254.662 mo
770.99 254.652 770.99 254.641 770.99 254.632 cv
770.99 254.642 770.99 254.651 770.991 254.662 cv
770.989 254.563 mo
770.989 254.552 770.989 254.541 770.988 254.529 cv
770.988 254.539 770.989 254.553 770.989 254.563 cv
770.987 254.463 mo
770.987 254.451 770.987 254.44 770.987 254.428 cv
770.987 254.438 770.987 254.453 770.987 254.463 cv
770.986 254.362 mo
770.985 254.35 770.985 254.338 770.985 254.326 cv
770.985 254.339 770.985 254.349 770.986 254.362 cv
770.984 254.26 mo
770.984 254.249 770.984 254.237 770.984 254.226 cv
770.984 254.238 770.984 254.247 770.984 254.26 cv
770.983 254.157 mo
770.983 254.146 770.983 254.135 770.982 254.124 cv
770.983 254.135 770.983 254.146 770.983 254.157 cv
770.982 254.058 mo
770.982 254.046 770.981 254.034 770.981 254.022 cv
770.981 254.035 770.982 254.045 770.982 254.058 cv
770.981 253.958 mo
770.981 253.945 770.98 253.933 770.98 253.92 cv
770.98 253.933 770.981 253.946 770.981 253.958 cv
770.98 253.859 mo
770.98 253.845 770.979 253.833 770.979 253.819 cv
770.979 253.834 770.98 253.845 770.98 253.859 cv
770.979 253.755 mo
770.979 253.743 770.979 253.73 770.979 253.718 cv
770.979 253.731 770.979 253.742 770.979 253.755 cv
770.978 253.653 mo
770.978 253.641 770.978 253.628 770.978 253.616 cv
770.978 253.629 770.978 253.64 770.978 253.653 cv
770.978 253.553 mo
770.977 253.541 770.977 253.527 770.977 253.514 cv
770.977 253.527 770.977 253.541 770.978 253.553 cv
770.977 253.456 mo
770.977 253.441 770.977 253.428 770.977 253.413 cv
770.977 253.427 770.977 253.442 770.977 253.456 cv
770.977 253.354 mo
770.977 253.339 770.977 253.326 770.977 253.311 cv
770.977 253.326 770.977 253.339 770.977 253.354 cv
770.977 253.256 mo
770.977 253.241 770.976 253.225 770.976 253.21 cv
770.976 253.226 770.977 253.24 770.977 253.256 cv
770.976 252.995 mo
770.976 252.983 770.977 252.972 770.977 252.961 cv
770.977 252.973 770.976 252.982 770.976 252.995 cv
770.977 252.876 mo
770.977 252.865 770.977 252.855 770.977 252.844 cv
770.977 252.855 770.977 252.866 770.977 252.876 cv
770.977 252.75 mo
770.977 252.744 770.977 252.736 770.977 252.73 cv
770.977 252.736 770.977 252.744 770.977 252.75 cv
.537255 .686274 .803922 rgb
f
818.188 310.55 mo
818.187 310.55 818.186 310.55 818.185 310.55 cv
815.095 310.549 811.934 310.199 808.752 309.469 cv
808.709 309.459 808.668 309.449 808.625 309.44 cv
808.625 309.44 li
799.709 307.656 791.812 303.399 785.097 297.669 cv
776.799 286.919 771.492 272.067 771.012 255.558 cv
771.012 255.555 li
771.011 255.523 771.01 255.49 771.009 255.458 cv
771.009 255.456 771.009 255.454 771.009 255.452 cv
771.008 255.421 771.007 255.389 771.006 255.359 cv
771.006 255.355 771.006 255.353 771.006 255.349 cv
771.005 255.319 771.005 255.29 771.004 255.26 cv
771.004 255.256 771.003 255.25 771.003 255.245 cv
771.003 255.217 771.002 255.188 771.001 255.16 cv
771.001 255.154 771.001 255.149 771.001 255.143 cv
771 255.115 771 255.089 770.999 255.061 cv
770.999 255.055 770.999 255.046 770.998 255.04 cv
770.998 255.015 770.997 254.986 770.997 254.961 cv
770.997 254.955 770.996 254.944 770.996 254.938 cv
770.996 254.914 770.995 254.887 770.995 254.863 cv
770.994 254.854 770.994 254.843 770.994 254.835 cv
770.993 254.811 770.993 254.786 770.993 254.761 cv
770.992 254.753 770.992 254.742 770.992 254.734 cv
770.992 254.71 770.991 254.686 770.991 254.662 cv
770.99 254.651 770.99 254.642 770.99 254.632 cv
770.99 254.609 770.989 254.586 770.989 254.563 cv
770.989 254.553 770.988 254.539 770.988 254.529 cv
770.988 254.507 770.988 254.485 770.987 254.463 cv
770.987 254.453 770.987 254.438 770.987 254.428 cv
770.986 254.406 770.986 254.384 770.986 254.362 cv
770.985 254.349 770.985 254.339 770.985 254.326 cv
770.985 254.304 770.984 254.282 770.984 254.26 cv
770.984 254.247 770.984 254.238 770.984 254.226 cv
770.983 254.203 770.983 254.18 770.983 254.157 cv
770.983 254.146 770.983 254.135 770.982 254.124 cv
770.982 254.102 770.982 254.08 770.982 254.058 cv
770.982 254.045 770.981 254.035 770.981 254.022 cv
770.981 254.001 770.981 253.979 770.981 253.958 cv
770.981 253.946 770.98 253.933 770.98 253.92 cv
770.98 253.9 770.98 253.879 770.98 253.859 cv
770.98 253.845 770.979 253.834 770.979 253.819 cv
770.979 253.798 770.979 253.776 770.979 253.755 cv
770.979 253.742 770.979 253.731 770.979 253.718 cv
770.978 253.696 770.978 253.675 770.978 253.653 cv
770.978 253.64 770.978 253.629 770.978 253.616 cv
770.978 253.595 770.978 253.575 770.978 253.553 cv
770.977 253.541 770.977 253.527 770.977 253.514 cv
770.977 253.495 770.977 253.476 770.977 253.456 cv
770.977 253.442 770.977 253.427 770.977 253.413 cv
770.977 253.394 770.977 253.373 770.977 253.354 cv
770.977 253.339 770.977 253.326 770.977 253.311 cv
770.977 253.293 770.977 253.274 770.977 253.256 cv
770.977 253.24 770.976 253.226 770.976 253.21 cv
770.976 253.175 770.976 253.143 770.976 253.109 cv
770.976 253.109 li
770.976 253.071 770.976 253.033 770.976 252.995 cv
770.976 252.982 770.977 252.973 770.977 252.961 cv
770.977 252.933 770.977 252.904 770.977 252.876 cv
770.977 252.866 770.977 252.855 770.977 252.844 cv
770.977 252.813 770.977 252.782 770.977 252.75 cv
770.977 252.744 770.977 252.736 770.977 252.73 cv
770.989 250.208 771.113 247.722 771.343 245.281 cv
773.295 252.06 776.319 258.706 779.161 264.797 cv
784.468 276 794.641 284.672 806.211 286.955 cv
805.562 287.171 804.945 287.336 804.409 287.455 cv
803.839 287.582 803.359 287.666 803.022 287.709 cv
802.685 287.755 802.493 287.781 802.493 287.781 cv
802.493 287.781 802.687 287.779 803.028 287.774 cv
803.369 287.772 803.858 287.746 804.447 287.687 cv
805.267 287.606 806.287 287.446 807.353 287.159 cv
808.953 287.415 810.578 287.548 812.217 287.548 cv
813.097 287.547 813.983 287.509 814.87 287.431 cv
815.586 287.897 816.309 288.298 817.016 288.626 cv
817.38 288.793 817.738 288.938 818.088 289.065 cv
818.192 292.503 818.268 296.042 818.301 299.63 cv
818.309 300.528 818.315 301.427 818.318 302.33 cv
818.321 303.445 818.322 304.562 818.316 305.681 cv
818.31 307.303 818.292 308.927 818.263 310.55 cv
818.241 310.55 818.219 310.55 818.198 310.55 cv
818.194 310.55 818.191 310.55 818.188 310.55 cv
821.534 310.412 mo
821.477 308.811 821.409 307.212 821.33 305.616 cv
821.268 304.341 821.199 303.07 821.125 301.802 cv
822.696 301.334 824.332 300.581 825.853 299.559 cv
826.741 298.986 827.574 298.307 828.39 297.604 cv
829.189 296.882 829.957 296.12 830.669 295.319 cv
831.127 294.806 831.556 294.279 831.972 293.747 cv
832.287 293.343 832.591 292.937 832.883 292.528 cv
834.011 290.945 834.962 289.341 835.722 287.85 cv
836.309 288.065 837.005 288.209 837.706 288.209 cv
837.879 288.209 838.053 288.201 838.225 288.182 cv
839.282 288.093 840.22 287.607 840.766 287.12 cv
840.913 287.011 841.017 286.875 841.121 286.772 cv
841.227 286.67 841.302 286.566 841.363 286.481 cv
841.486 286.314 841.556 286.219 841.556 286.219 cv
841.556 286.219 841.469 286.298 841.315 286.437 cv
841.169 286.58 840.928 286.754 840.629 286.928 cv
840.121 287.225 839.389 287.451 838.629 287.451 cv
838.492 287.451 838.354 287.444 838.217 287.428 cv
837.48 287.363 836.783 287.095 836.247 286.778 cv
836.435 286.378 836.61 285.988 836.769 285.614 cv
837.376 284.197 837.777 282.984 838.026 282.132 cv
838.157 281.707 838.238 281.368 838.297 281.139 cv
838.356 280.909 838.387 280.788 838.387 280.788 cv
838.387 280.788 838.345 280.906 838.265 281.129 cv
838.185 281.352 838.073 281.68 837.903 282.09 cv
837.578 282.911 837.07 284.073 836.345 285.409 cv
836.163 285.745 835.967 286.093 835.759 286.449 cv
835.545 286.813 835.317 287.186 835.077 287.565 cv
834.616 288.291 834.107 289.04 833.55 289.795 cv
833.185 290.287 832.792 290.78 832.386 291.27 cv
831.872 289.854 831.401 288.189 831.09 286.5 cv
830.741 284.719 830.536 282.931 830.407 281.443 cv
835.732 277.616 839.992 272.6 843 266.582 cv
852.375 246.047 851.483 222.386 841.215 202.296 cv
840.55 200.936 839.844 199.582 839.102 198.239 cv
849.343 205.488 857.308 217.709 861.204 232.494 cv
861.204 232.494 li
861.204 232.494 li
862.25 238.318 862.799 244.216 862.8 250.097 cv
862.802 263.152 860.105 276.123 854.161 288.011 cv
854.161 288.011 li
847.962 300.754 835.651 309.246 821.534 310.412 cv
820.973 299.287 mo
820.765 296.021 820.525 292.8 820.264 289.665 cv
820.183 288.688 820.1 287.722 820.015 286.764 cv
820.008 286.687 820.002 286.61 819.995 286.533 cv
821.563 286.119 823.134 285.572 824.697 284.886 cv
826.596 283.937 828.395 282.863 830.089 281.67 cv
830.095 283.128 830.151 284.858 830.344 286.612 cv
830.543 288.626 830.969 290.66 831.478 292.325 cv
830.879 292.992 830.252 293.646 829.59 294.267 cv
828.847 294.964 828.061 295.614 827.261 296.216 cv
826.447 296.798 825.63 297.352 824.788 297.795 cv
823.5 298.504 822.193 298.99 820.973 299.287 cv
.376471 .490196 .227451 rgb
f
817.405 315.162 mo
817.38 315.162 817.355 315.162 817.33 315.162 cv
817.355 315.162 817.38 315.162 817.405 315.162 cv
817.652 315.162 817.9 315.16 818.146 315.155 cv
818.146 315.155 li
817.9 315.16 817.652 315.162 817.405 315.162 cv
817.32 315.162 mo
817.299 315.162 817.278 315.162 817.257 315.162 cv
817.279 315.162 817.298 315.162 817.32 315.162 cv
817.224 315.162 mo
817.21 315.162 817.196 315.162 817.182 315.162 cv
817.196 315.162 817.21 315.162 817.224 315.162 cv
817.147 315.161 mo
817.134 315.161 817.122 315.161 817.109 315.161 cv
817.121 315.161 817.134 315.161 817.147 315.161 cv
817.068 315.161 mo
817.057 315.161 817.045 315.161 817.034 315.16 cv
817.045 315.161 817.057 315.161 817.068 315.161 cv
816.993 315.16 mo
816.982 315.16 816.972 315.16 816.961 315.16 cv
816.971 315.16 816.982 315.16 816.993 315.16 cv
816.919 315.159 mo
816.908 315.159 816.897 315.159 816.886 315.159 cv
816.897 315.159 816.908 315.159 816.919 315.159 cv
816.845 315.158 mo
816.834 315.158 816.823 315.158 816.812 315.157 cv
816.823 315.158 816.834 315.158 816.845 315.158 cv
816.769 315.157 mo
816.759 315.157 816.749 315.156 816.739 315.156 cv
816.748 315.156 816.759 315.157 816.769 315.157 cv
816.694 315.155 mo
816.684 315.155 816.675 315.155 816.665 315.155 cv
816.674 315.155 816.685 315.155 816.694 315.155 cv
816.62 315.154 mo
816.61 315.153 816.601 315.153 816.591 315.153 cv
816.6 315.153 816.61 315.154 816.62 315.154 cv
816.546 315.152 mo
816.536 315.152 816.527 315.152 816.517 315.151 cv
816.528 315.152 816.535 315.152 816.546 315.152 cv
816.471 315.15 mo
816.461 315.15 816.453 315.15 816.444 315.149 cv
816.452 315.15 816.463 315.15 816.471 315.15 cv
816.396 315.148 mo
816.387 315.148 816.379 315.148 816.371 315.147 cv
816.38 315.148 816.387 315.148 816.396 315.148 cv
816.32 315.146 mo
816.312 315.146 816.306 315.145 816.298 315.145 cv
816.304 315.145 816.314 315.146 816.32 315.146 cv
816.245 315.143 mo
816.238 315.143 816.232 315.143 816.225 315.143 cv
816.231 315.143 816.239 315.143 816.245 315.143 cv
816.17 315.141 mo
816.164 315.141 816.158 315.14 816.152 315.14 cv
816.158 315.14 816.164 315.141 816.17 315.141 cv
816.097 315.138 mo
816.091 315.138 816.084 315.138 816.078 315.138 cv
816.085 315.138 816.091 315.138 816.097 315.138 cv
816.021 315.135 mo
816.017 315.135 816.011 315.135 816.006 315.135 cv
816.011 315.135 816.017 315.135 816.021 315.135 cv
815.947 315.132 mo
815.943 315.132 815.938 315.132 815.933 315.132 cv
815.938 315.132 815.942 315.132 815.947 315.132 cv
815.872 315.129 mo
815.868 315.129 815.865 315.129 815.861 315.129 cv
815.865 315.129 815.869 315.129 815.872 315.129 cv
815.798 315.126 mo
815.795 315.126 815.792 315.126 815.789 315.125 cv
815.792 315.126 815.795 315.126 815.798 315.126 cv
815.723 315.122 mo
815.722 315.122 815.718 315.122 815.717 315.122 cv
815.718 315.122 815.722 315.122 815.723 315.122 cv
815.649 315.119 mo
815.648 315.119 815.646 315.119 815.645 315.119 cv
815.646 315.119 815.648 315.119 815.649 315.119 cv
.368627 .615686 .164706 rgb
f
817.405 315.162 mo
817.38 315.162 817.355 315.162 817.33 315.162 cv
817.327 315.162 817.323 315.162 817.32 315.162 cv
817.298 315.162 817.279 315.162 817.257 315.162 cv
817.246 315.162 817.235 315.162 817.224 315.162 cv
817.21 315.162 817.196 315.162 817.182 315.162 cv
817.171 315.162 817.158 315.162 817.147 315.161 cv
817.134 315.161 817.121 315.161 817.109 315.161 cv
817.095 315.161 817.082 315.161 817.068 315.161 cv
817.057 315.161 817.045 315.161 817.034 315.16 cv
817.021 315.16 817.007 315.16 816.993 315.16 cv
816.982 315.16 816.971 315.16 816.961 315.16 cv
816.947 315.159 816.932 315.159 816.919 315.159 cv
816.908 315.159 816.897 315.159 816.886 315.159 cv
816.872 315.158 816.859 315.158 816.845 315.158 cv
816.834 315.158 816.823 315.158 816.812 315.157 cv
816.798 315.157 816.783 315.157 816.769 315.157 cv
816.759 315.157 816.748 315.156 816.739 315.156 cv
816.723 315.156 816.71 315.156 816.694 315.155 cv
816.685 315.155 816.674 315.155 816.665 315.155 cv
816.65 315.154 816.634 315.154 816.62 315.154 cv
816.61 315.154 816.6 315.153 816.591 315.153 cv
816.576 315.153 816.56 315.152 816.546 315.152 cv
816.535 315.152 816.528 315.152 816.517 315.151 cv
816.502 315.151 816.486 315.15 816.471 315.15 cv
816.463 315.15 816.452 315.15 816.444 315.149 cv
816.428 315.149 816.412 315.148 816.396 315.148 cv
816.387 315.148 816.38 315.148 816.371 315.147 cv
816.354 315.147 816.337 315.146 816.32 315.146 cv
816.314 315.146 816.304 315.145 816.298 315.145 cv
816.28 315.145 816.263 315.144 816.245 315.143 cv
816.239 315.143 816.231 315.143 816.225 315.143 cv
816.206 315.142 816.188 315.142 816.17 315.141 cv
816.164 315.141 816.158 315.14 816.152 315.14 cv
816.133 315.14 816.115 315.139 816.097 315.138 cv
816.091 315.138 816.085 315.138 816.078 315.138 cv
816.059 315.137 816.04 315.136 816.021 315.135 cv
816.017 315.135 816.011 315.135 816.006 315.135 cv
815.986 315.134 815.967 315.133 815.947 315.132 cv
815.942 315.132 815.938 315.132 815.933 315.132 cv
815.913 315.131 815.892 315.13 815.872 315.129 cv
815.869 315.129 815.865 315.129 815.861 315.129 cv
815.84 315.128 815.819 315.127 815.798 315.126 cv
815.795 315.126 815.792 315.126 815.789 315.125 cv
815.767 315.124 815.745 315.124 815.723 315.122 cv
815.722 315.122 815.718 315.122 815.717 315.122 cv
815.694 315.121 815.672 315.12 815.649 315.119 cv
815.648 315.119 815.646 315.119 815.645 315.119 cv
803.784 314.527 793.062 307.987 785.097 297.669 cv
791.812 303.399 799.709 307.656 808.625 309.44 cv
808.625 309.44 li
808.668 309.449 808.709 309.459 808.752 309.469 cv
811.935 310.199 815.094 310.549 818.185 310.55 cv
818.186 310.55 818.187 310.55 818.188 310.55 cv
818.188 310.55 li
818.188 310.55 li
818.191 310.55 818.194 310.55 818.198 310.55 cv
818.219 310.55 818.241 310.55 818.263 310.55 cv
818.235 312.088 818.196 313.625 818.146 315.155 cv
817.9 315.16 817.652 315.162 817.405 315.162 cv
.4 .545098 .231373 rgb
f
863.834 253.109 mo
863.834 253.077 863.834 253.047 863.834 253.016 cv
863.834 253.047 863.834 253.078 863.834 253.109 cv
863.834 252.984 mo
863.834 252.963 863.834 252.944 863.834 252.923 cv
863.834 252.943 863.834 252.964 863.834 252.984 cv
863.833 252.882 mo
863.833 252.865 863.833 252.85 863.833 252.833 cv
863.833 252.849 863.833 252.865 863.833 252.882 cv
863.833 252.786 mo
863.833 252.772 863.833 252.758 863.833 252.743 cv
863.833 252.757 863.833 252.772 863.833 252.786 cv
863.833 252.691 mo
863.833 252.682 863.833 252.672 863.833 252.664 cv
863.833 252.673 863.833 252.682 863.833 252.691 cv
.647059 .67451 .490196 rgb
f
821.662 314.905 mo
821.63 313.41 821.587 311.911 821.534 310.412 cv
835.653 309.247 847.961 300.755 854.161 288.011 cv
854.161 288.011 li
860.105 276.123 862.802 263.152 862.8 250.097 cv
862.799 244.216 862.25 238.318 861.204 232.494 cv
862.869 238.812 863.795 245.596 863.833 252.664 cv
863.833 252.672 863.833 252.682 863.833 252.691 cv
863.833 252.708 863.833 252.726 863.833 252.743 cv
863.833 252.758 863.833 252.772 863.833 252.786 cv
863.833 252.802 863.833 252.817 863.833 252.833 cv
863.833 252.85 863.833 252.865 863.833 252.882 cv
863.834 252.896 863.834 252.909 863.834 252.923 cv
863.834 252.944 863.834 252.963 863.834 252.984 cv
863.834 252.995 863.834 253.005 863.834 253.016 cv
863.834 253.047 863.834 253.077 863.834 253.109 cv
863.834 253.109 li
863.834 271.401 857.912 287.845 848.491 299.202 cv
847.999 299.794 847.498 300.373 846.988 300.937 cv
839.981 308.688 831.242 313.741 821.662 314.905 cv
.4 .545098 .231373 rgb
f
821.534 310.412 mo
821.534 310.412 li
835.651 309.246 847.962 300.754 854.161 288.011 cv
847.961 300.755 835.653 309.247 821.534 310.412 cv
862.8 250.097 mo
862.799 244.216 862.25 238.318 861.204 232.494 cv
861.204 232.494 li
862.25 238.318 862.799 244.216 862.8 250.097 cv
.356863 .443137 .223529 rgb
f
840.629 286.928 mo
840.03 287.279 839.118 287.53 838.217 287.428 cv
837.48 287.363 836.783 287.095 836.247 286.778 cv
836.435 286.378 836.61 285.988 836.769 285.614 cv
837.376 284.197 837.777 282.984 838.026 282.132 cv
838.157 281.707 838.238 281.368 838.297 281.139 cv
838.356 280.909 838.387 280.788 838.387 280.788 cv
838.387 280.788 838.345 280.906 838.265 281.129 cv
838.185 281.352 838.073 281.68 837.903 282.09 cv
837.578 282.911 837.07 284.073 836.345 285.409 cv
836.163 285.745 835.967 286.093 835.759 286.449 cv
835.545 286.813 835.317 287.186 835.077 287.565 cv
834.616 288.291 834.107 289.04 833.55 289.795 cv
833.185 290.287 832.792 290.78 832.386 291.27 cv
831.872 289.854 831.401 288.189 831.09 286.5 cv
830.661 284.31 830.45 282.109 830.329 280.467 cv
830.212 278.824 830.172 277.737 830.172 277.737 cv
830.172 277.737 830.118 278.822 830.094 280.474 cv
830.073 282.125 830.095 284.349 830.344 286.612 cv
830.543 288.626 830.969 290.66 831.478 292.325 cv
830.879 292.992 830.252 293.646 829.59 294.267 cv
828.847 294.964 828.061 295.614 827.261 296.216 cv
826.447 296.798 825.63 297.352 824.788 297.795 cv
823.5 298.504 822.193 298.99 820.973 299.287 cv
820.765 296.021 820.525 292.8 820.264 289.665 cv
820.183 288.688 820.1 287.722 820.015 286.764 cv
819.384 279.62 818.668 273.002 818.03 267.431 cv
817.42 262.306 816.914 258.055 816.561 255.085 cv
816.201 252.117 815.997 250.43 815.997 250.43 cv
815.997 250.43 816.431 257.213 817.091 267.513 cv
817.137 268.295 817.184 269.103 817.231 269.924 cv
817.088 269.878 li
816.954 269.832 816.816 269.76 816.659 269.695 cv
816.056 269.393 815.333 268.817 814.768 268.074 cv
814.187 267.347 813.743 266.509 813.444 265.872 cv
813.147 265.231 812.985 264.79 812.985 264.79 cv
812.985 264.79 813.055 265.253 813.222 265.949 cv
813.393 266.644 813.665 267.578 814.132 268.479 cv
814.577 269.387 815.27 270.235 815.976 270.768 cv
816.158 270.89 816.325 271.016 816.49 271.108 cv
816.659 271.197 816.811 271.276 816.942 271.345 cv
817.097 271.406 817.223 271.454 817.32 271.49 cv
817.569 275.981 817.812 280.985 817.998 286.276 cv
817.968 286.267 li
816.754 285.844 815.404 285.18 814.087 284.258 cv
813.862 284.102 813.64 283.932 813.417 283.764 cv
813.06 283.495 812.706 283.213 812.357 282.916 cv
811.643 282.308 810.947 281.652 810.286 280.958 cv
810.228 280.895 li
810.634 280.027 810.914 278.994 811.017 277.985 cv
811.181 276.652 811.129 275.362 811.081 274.407 cv
811.028 273.452 810.976 272.826 810.976 272.826 cv
810.976 272.826 810.924 273.452 810.846 274.402 cv
810.753 275.347 810.613 276.62 810.277 277.842 cv
810.078 278.633 809.768 279.381 809.411 280.003 cv
807.432 277.757 805.814 275.321 804.679 273.39 cv
804.027 272.285 803.53 271.34 803.193 270.676 cv
802.854 270.011 802.673 269.627 802.673 269.627 cv
802.673 269.627 802.81 270.028 803.074 270.728 cv
803.337 271.428 803.729 272.426 804.261 273.607 cv
805.224 275.75 806.656 278.511 808.557 281.145 cv
808.748 281.41 808.939 281.675 809.14 281.937 cv
809.217 282.038 809.301 282.136 809.38 282.236 cv
809.923 282.927 810.498 283.598 811.104 284.236 cv
810.364 284.886 809.449 285.53 808.446 286.021 cv
807.053 286.745 805.548 287.202 804.409 287.455 cv
803.839 287.582 803.359 287.666 803.022 287.709 cv
802.685 287.755 802.493 287.781 802.493 287.781 cv
802.493 287.781 802.687 287.779 803.028 287.774 cv
803.369 287.772 803.858 287.746 804.447 287.687 cv
805.622 287.571 807.206 287.294 808.748 286.712 cv
809.897 286.308 811.001 285.707 811.916 285.057 cv
812.213 285.342 812.514 285.62 812.822 285.885 cv
814.16 287.048 815.62 287.978 817.016 288.626 cv
817.38 288.793 817.738 288.938 818.088 289.065 cv
818.192 292.503 818.268 296.042 818.301 299.63 cv
818.309 300.528 818.315 301.427 818.318 302.33 cv
818.321 303.445 818.322 304.562 818.316 305.681 cv
818.264 319.716 817.346 333.986 815.304 344.905 cv
814.312 350.366 813.078 354.974 811.908 358.357 cv
811.764 358.781 811.626 359.189 811.495 359.579 cv
811.345 359.96 811.202 360.324 811.066 360.67 cv
810.788 361.358 810.566 361.993 810.326 362.523 cv
809.844 363.581 809.502 364.346 809.317 364.778 cv
814.779 367.333 li
814.99 366.846 815.356 365.971 815.853 364.759 cv
816.099 364.153 816.319 363.45 816.594 362.674 cv
816.728 362.286 816.868 361.878 817.015 361.451 cv
817.141 361.02 817.271 360.571 817.407 360.103 cv
818.518 356.366 819.584 351.414 820.331 345.69 cv
821.879 334.238 822.031 319.743 821.33 305.616 cv
821.268 304.341 821.199 303.07 821.125 301.802 cv
822.696 301.334 824.332 300.581 825.853 299.559 cv
826.741 298.986 827.574 298.307 828.39 297.604 cv
829.189 296.882 829.957 296.12 830.669 295.319 cv
831.127 294.806 831.556 294.279 831.972 293.747 cv
832.287 293.343 832.591 292.937 832.883 292.528 cv
834.011 290.945 834.962 289.341 835.722 287.85 cv
836.454 288.119 837.356 288.276 838.225 288.182 cv
839.282 288.093 840.22 287.607 840.766 287.12 cv
840.913 287.011 841.017 286.875 841.121 286.772 cv
841.227 286.67 841.302 286.566 841.363 286.481 cv
841.486 286.314 841.556 286.219 841.556 286.219 cv
841.556 286.219 841.469 286.298 841.315 286.437 cv
841.169 286.58 840.928 286.754 840.629 286.928 cv
.443137 .133333 .101961 rgb
f
793.44 238.845 mo
785.192 238.844 783.744 230.028 786.981 221.509 cv
790.239 212.934 796.088 202.534 805.63 200.101 cv
806.326 199.923 807.042 199.788 807.778 199.699 cv
808.304 199.635 808.834 199.604 809.367 199.604 cv
816.582 199.604 824.017 205.323 822.615 213.428 cv
820.618 224.98 809.091 234.662 798.338 238.009 cv
796.494 238.582 794.866 238.846 793.44 238.845 cv
.588235 .752941 .301961 rgb
f
829.978 221.533 mo
830.052 221.293 li
830.052 221.293 li
830.052 221.293 li
830.073 221.239 830.087 221.204 830.089 221.204 cv
830.092 221.204 830.062 221.293 829.978 221.533 cv
f
829.816 221.94 mo
829.813 221.94 829.852 221.831 829.901 221.696 cv
829.901 221.696 li
829.901 221.696 li
829.978 221.533 li
829.863 221.832 829.819 221.94 829.816 221.94 cv
f
829.901 221.696 mo
829.952 221.557 830.013 221.393 830.052 221.293 cv
829.978 221.533 li
829.901 221.696 li
f
820.084 229.38 mo
821.638 225.544 822.011 221.361 823.676 217.595 cv
825.043 214.78 826.53 212.134 827.524 209.142 cv
830.058 212.492 831.375 217.193 830.052 221.293 cv
830.052 221.293 li
830.052 221.293 li
830.013 221.393 829.952 221.557 829.901 221.696 cv
829.901 221.696 li
829.901 221.696 li
828.264 225.733 824.313 228.612 820.084 229.38 cv
f
70.5916 345.809 mo
70.5916 348.97 71.1443 352.406 72.0798 355.963 cv
118.855 355.963 li
119.741 352.448 120.26 349.02 120.26 345.809 cv
120.26 323.572 95.4262 290.919 95.4262 290.919 cv
95.4262 290.919 70.5916 321.601 70.5916 345.809 cv
.113725 .619608 .27451 rgb
f
87.5676 323.317 mo
83.2695 323.317 86.8983 309.316 91.4989 308.178 cv
91.9868 308.057 92.4265 308.001 92.8229 308.001 cv
98.9985 308.001 94.3501 321.832 88.1001 323.254 cv
87.9105 323.297 87.7332 323.318 87.5676 323.317 cv
.14902 .733333 .356863 rgb
f
595.137 297.474 mo
595.137 297.474 564.158 325.064 564.158 346.832 cv
564.158 349.674 564.848 352.764 566.015 355.963 cv
624.361 355.963 li
625.466 352.802 626.115 349.72 626.115 346.832 cv
626.115 326.836 595.137 297.474 595.137 297.474 cv
.113725 .619608 .27451 rgb
f
585.334 326.607 mo
579.973 326.607 584.499 314.017 590.238 312.994 cv
590.846 312.885 591.395 312.834 591.889 312.834 cv
599.593 312.834 593.795 325.271 585.998 326.55 cv
585.762 326.589 585.54 326.607 585.334 326.607 cv
.14902 .733333 .356863 rgb
f
900 480 mo
900 352.667 li
0 352.667 li
0 480 li
900 480 li
.627451 .890196 .329412 rgb
f
900 480 mo
900 358.318 li
0 358.318 li
0 480 li
900 480 li
.207843 .368627 .168627 rgb
f
58.4697 480 mo
0 480 li
0 388.648 li
14.034 390.819 28.0592 392.884 42.1157 394.85 cv
41.4202 395.573 40.7177 396.29 40.0073 397 cv
40.0073 397 li
40.0073 397 li
48.7761 421.219 56.5122 445.958 64.7211 470.567 cv
62.6804 473.722 60.5964 476.867 58.4697 480 cv
.184314 .301961 .164706 rgb
f
42.1157 394.85 mo
28.0592 392.884 14.034 390.819 0 388.648 cv
0 368.463 li
19.6635 370.584 39.3474 372.566 59.0319 374.407 cv
53.84 381.594 48.2639 388.46 42.1157 394.85 cv
.164706 .247059 .160784 rgb
f
59.0319 374.407 mo
39.3474 372.566 19.6635 370.584 0 368.463 cv
0 358.318 li
69.7972 358.318 li
66.3636 363.81 62.7987 369.193 59.0319 374.407 cv
.145098 .203922 .156863 rgb
f
64.7211 470.567 mo
56.5122 445.958 48.7761 421.219 40.0073 397 cv
40.7177 396.29 41.4202 395.573 42.1157 394.85 cv
64.6315 398 87.197 400.89 109.763 403.516 cv
112.491 410.548 115.329 417.547 118.272 424.513 cv
108.604 425.602 99.079 427.486 88.2892 429.926 cv
88.2892 429.926 li
88.2671 429.969 li
88.2671 429.969 li
81.1969 443.707 73.3432 457.236 64.7211 470.567 cv
.203922 .360784 .168627 rgb
f
109.763 403.516 mo
87.197 400.89 64.6315 398 42.1157 394.85 cv
48.2639 388.46 53.84 381.594 59.0319 374.407 cv
72.8312 375.698 86.624 376.92 100.432 378.074 cv
103.378 386.601 106.492 395.084 109.763 403.516 cv
.180392 .298039 .164706 rgb
f
100.432 378.074 mo
86.624 376.92 72.8312 375.698 59.0319 374.407 cv
62.7987 369.193 66.3636 363.81 69.7972 358.318 cv
93.9405 358.318 li
93.9405 358.318 li
96.0023 364.932 98.1674 371.516 100.432 378.074 cv
.164706 .243137 .160784 rgb
f
189.506 480 mo
187.666 480 li
187.666 480 li
180.356 463.536 173.046 447.072 165.736 430.608 cv
165.267 429.551 164.798 428.495 164.329 427.438 cv
164.006 426.712 163.684 425.986 163.362 425.26 cv
163.362 425.26 li
153.51 424.026 144.9 423.463 136.896 423.463 cv
130.406 423.463 124.311 423.833 118.272 424.513 cv
115.329 417.547 112.491 410.548 109.763 403.516 cv
142.178 407.287 174.648 410.518 207.143 413.208 cv
199.723 435.049 193.646 457.371 189.506 480 cv
.184314 .301961 .164706 rgb
f
207.143 413.208 mo
174.648 410.518 142.178 407.287 109.763 403.516 cv
106.492 395.084 103.378 386.601 100.432 378.074 cv
139.279 381.321 178.164 384.025 217.066 386.188 cv
213.554 395.103 210.232 404.113 207.143 413.208 cv
.164706 .247059 .160784 rgb
f
217.066 386.188 mo
178.164 384.025 139.279 381.321 100.432 378.074 cv
98.1674 371.516 96.0023 364.932 93.9405 358.318 cv
93.9405 358.318 li
212.5 358.318 li
212.5 358.318 li
215.209 363.763 218.317 369.018 222.007 374 cv
220.323 378.041 218.675 382.105 217.066 386.188 cv
.145098 .203922 .156863 rgb
f
283.766 480 mo
189.506 480 li
193.646 457.371 199.723 435.049 207.143 413.208 cv
234.894 415.505 262.669 417.407 290.461 418.915 cv
287.129 439.103 284.898 459.531 283.766 480 cv
.203922 .360784 .168627 rgb
f
290.461 418.915 mo
262.669 417.407 234.894 415.505 207.143 413.208 cv
210.232 404.113 213.554 395.103 217.066 386.188 cv
237.03 387.298 256.996 388.264 276.971 389.088 cv
281.593 396.306 286.553 403.307 292.007 410 cv
291.468 412.967 290.952 415.938 290.461 418.915 cv
.180392 .298039 .164706 rgb
f
276.971 389.088 mo
256.996 388.264 237.03 387.298 217.066 386.188 cv
218.675 382.105 220.323 378.041 222.007 374 cv
222.007 374 li
222.007 374 li
218.317 369.018 215.209 363.763 212.5 358.318 cv
259.426 358.318 li
259.426 358.318 li
264.898 368.823 270.613 379.161 276.971 389.088 cv
.164706 .243137 .160784 rgb
f
296.597 480 mo
283.766 480 li
284.898 459.531 287.129 439.103 290.461 418.915 cv
297.01 419.271 303.558 419.604 310.109 419.916 cv
296.597 480 li
.184314 .301961 .164706 rgb
f
310.109 419.916 mo
303.558 419.604 297.01 419.271 290.461 418.915 cv
290.952 415.938 291.468 412.967 292.007 410 cv
292.007 410 li
286.553 403.307 281.593 396.306 276.971 389.088 cv
296.249 389.884 315.508 390.546 334.793 391.075 cv
336.491 395.298 338.187 399.523 339.882 403.745 cv
330.975 404.304 322.093 405.054 313.236 406.008 cv
313.236 406.008 li
312.944 407.306 li
312.944 407.306 li
312.944 407.306 li
312.944 407.306 312.944 407.306 312.944 407.306 cv
310.109 419.916 li
.164706 .247059 .160784 rgb
f
334.793 391.075 mo
315.508 390.546 296.249 389.884 276.971 389.088 cv
270.613 379.161 264.898 368.823 259.426 358.318 cv
259.426 358.318 li
321.55 358.318 li
321.55 358.318 li
326.005 369.237 330.405 380.156 334.793 391.075 cv
.145098 .203922 .156863 rgb
f
439.8 404.825 mo
420.266 403.3 400.67 402.475 381.11 402.475 cv
367.34 402.475 353.586 402.884 339.882 403.745 cv
338.187 399.523 336.491 395.298 334.793 391.075 cv
371.347 392.079 407.939 392.605 444.503 392.653 cv
442.95 396.712 441.378 400.77 439.8 404.825 cv
.180392 .298039 .164706 rgb
f
444.503 392.653 mo
407.939 392.605 371.347 392.079 334.793 391.075 cv
330.405 380.156 326.005 369.237 321.55 358.318 cv
456.976 358.318 li
453.077 369.861 448.857 381.274 444.503 392.653 cv
.164706 .243137 .160784 rgb
f
619.738 480 mo
584.619 480 li
592.39 460.356 600.709 440.968 610.007 422 cv
610.007 422 li
610.007 422 li
609.668 420.983 609.325 419.963 608.981 418.946 cv
619.511 418.376 630.06 417.749 640.585 417.066 cv
634.024 438.158 626.797 459.06 619.738 480 cv
.184314 .301961 .164706 rgb
f
608.981 418.946 mo
605.732 409.338 602.292 399.72 599.247 390.002 cv
611.765 389.557 624.233 389.057 636.748 388.5 cv
639.837 392.009 642.932 395.505 646.007 399 cv
644.266 405.042 642.453 411.061 640.585 417.066 cv
630.06 417.749 619.511 418.376 608.981 418.946 cv
.164706 .247059 .160784 rgb
f
599.247 390.002 mo
595.984 379.591 593.175 369.068 591.537 358.318 cv
611.395 358.318 li
611.395 358.318 li
619.447 368.686 628.076 378.647 636.748 388.5 cv
624.233 389.057 611.765 389.557 599.247 390.002 cv
.145098 .203922 .156863 rgb
f
584.619 480 mo
522.04 480 li
518.39 460.657 513.915 441.505 508.452 422.661 cv
541.981 421.995 575.484 420.757 608.981 418.946 cv
609.325 419.963 609.668 420.983 610.007 422 cv
600.709 440.968 592.39 460.356 584.619 480 cv
.203922 .360784 .168627 rgb
f
508.452 422.661 mo
507.724 420.147 506.977 417.64 506.213 415.138 cv
506.213 414.875 li
506.213 414.875 li
506.213 414.875 li
506.213 412.581 li
506.213 412.581 li
506.213 412.581 li
505.938 412.538 505.662 412.496 505.386 412.454 cv
504.611 409.963 503.818 407.478 503.007 405 cv
505.01 400.812 506.945 396.559 508.79 392.245 cv
538.933 391.822 569.115 391.074 599.247 390.002 cv
602.292 399.72 605.732 409.338 608.981 418.946 cv
575.484 420.757 541.981 421.995 508.452 422.661 cv
.180392 .298039 .164706 rgb
f
508.79 392.245 mo
513.473 381.292 517.571 369.948 520.697 358.318 cv
520.697 358.318 li
520.697 358.318 li
591.537 358.318 li
593.175 369.068 595.984 379.591 599.247 390.002 cv
569.115 391.074 538.933 391.822 508.79 392.245 cv
.164706 .243137 .160784 rgb
f
705.519 420.667 mo
705.682 420.444 705.844 420.223 706.007 420 cv
706.085 417.358 706.144 414.716 706.185 412.074 cv
727.939 410.174 749.675 408.032 771.394 405.647 cv
773.448 407.811 775.536 409.946 777.66 412.051 cv
753.291 414.178 729.403 417.34 705.519 420.667 cv
.184314 .301961 .164706 rgb
f
706.185 412.074 mo
706.225 409.397 706.246 406.719 706.247 404.044 cv
706.248 397.637 706.131 391.237 705.883 384.849 cv
720.916 383.931 735.961 382.931 750.987 381.85 cv
757.388 390.091 764.178 398.045 771.394 405.647 cv
749.675 408.032 727.939 410.174 706.185 412.074 cv
.164706 .247059 .160784 rgb
f
705.883 384.849 mo
705.538 375.976 704.94 367.126 704.055 358.318 cv
734.209 358.318 li
734.209 358.318 li
739.486 366.371 745.07 374.233 750.987 381.85 cv
735.961 382.931 720.916 383.931 705.883 384.849 cv
.145098 .203922 .156863 rgb
f
856.772 480 mo
799.989 480 li
797.045 457.899 794.101 435.799 791.157 413.698 cv
791.157 413.698 li
791.157 413.698 li
791.157 413.698 li
791.157 413.698 li
791.157 413.698 li
791.038 412.803 790.919 411.908 790.799 411.013 cv
790.799 411.013 li
786.401 411.323 782.024 411.67 777.66 412.051 cv
775.536 409.946 773.448 407.811 771.394 405.647 cv
798.195 402.703 824.942 399.394 851.675 395.712 cv
860.049 404.093 868.778 412.213 878.007 420 cv
870.83 439.936 863.505 459.874 856.772 480 cv
.203922 .360784 .168627 rgb
f
771.394 405.647 mo
764.178 398.045 757.388 390.091 750.987 381.85 cv
778.091 379.902 805.185 377.689 832.257 375.213 cv
838.553 382.187 845.002 389.033 851.675 395.712 cv
824.942 399.394 798.195 402.703 771.394 405.647 cv
.180392 .298039 .164706 rgb
f
750.987 381.85 mo
745.07 374.233 739.486 366.371 734.209 358.318 cv
817.464 358.318 li
817.464 358.318 li
822.323 364.02 827.241 369.657 832.257 375.213 cv
805.185 377.689 778.091 379.902 750.987 381.85 cv
.164706 .243137 .160784 rgb
f
900 480 mo
856.772 480 li
856.772 480 li
900 480 li
900 388.648 li
900 388.648 li
900 368.463 li
900 368.463 li
900 358.318 li
900 480 li
.892549 .819608 .976471 rgb
f
900 480 mo
856.772 480 li
863.505 459.874 870.83 439.936 878.007 420 cv
878.007 420 li
868.778 412.213 860.049 404.093 851.675 395.712 cv
867.795 393.492 883.909 391.137 900 388.648 cv
900 480 li
.184314 .301961 .164706 rgb
f
851.675 395.712 mo
845.002 389.033 838.553 382.187 832.257 375.213 cv
854.851 373.147 877.433 370.897 900 368.463 cv
900 388.648 li
883.909 391.137 867.795 393.492 851.675 395.712 cv
.164706 .247059 .160784 rgb
f
832.257 375.213 mo
827.241 369.657 822.323 364.02 817.464 358.318 cv
817.464 358.318 li
900 358.318 li
900 368.463 li
877.433 370.897 854.851 373.147 832.257 375.213 cv
.145098 .203922 .156863 rgb
f
655.073 480 mo
619.738 480 li
626.797 459.06 634.024 438.158 640.585 417.066 cv
662.459 415.647 684.338 413.982 706.185 412.074 cv
706.144 414.716 706.085 417.358 706.007 420 cv
705.844 420.223 705.682 420.444 705.519 420.667 cv
694.463 422.207 683.406 423.782 672.302 425.307 cv
672.302 425.307 li
672.302 425.307 li
672.29 425.349 li
672.29 425.349 li
672.188 425.705 672.087 426.061 671.984 426.416 cv
671.984 426.416 li
671.984 426.416 li
666.774 444.57 661.122 462.406 655.073 480 cv
.203922 .360784 .168627 rgb
f
640.585 417.066 mo
642.453 411.061 644.266 405.042 646.007 399 cv
646.007 399 li
646.007 399 li
642.932 395.505 639.837 392.009 636.748 388.5 cv
659.799 387.473 682.847 386.256 705.883 384.849 cv
706.131 391.237 706.248 397.637 706.247 404.044 cv
706.246 406.719 706.225 409.397 706.185 412.074 cv
684.338 413.982 662.459 415.647 640.585 417.066 cv
.180392 .298039 .164706 rgb
f
636.748 388.5 mo
628.076 378.647 619.447 368.686 611.395 358.318 cv
704.055 358.318 li
704.94 367.126 705.538 375.976 705.883 384.849 cv
682.847 386.256 659.799 387.473 636.748 388.5 cv
.164706 .243137 .160784 rgb
f
522.04 480 mo
506.213 480 li
506.213 422.704 li
506.966 422.69 507.699 422.676 508.452 422.661 cv
513.915 441.505 518.39 460.657 522.04 480 cv
.184314 .301961 .164706 rgb
f
506.213 422.704 mo
506.213 415.138 li
506.977 417.64 507.724 420.147 508.452 422.661 cv
507.699 422.676 506.966 422.69 506.213 422.704 cv
505.386 412.454 mo
483.69 409.143 461.782 406.54 439.8 404.825 cv
441.378 400.77 442.95 396.712 444.503 392.653 cv
446.337 392.655 448.166 392.656 450 392.656 cv
469.602 392.656 489.189 392.519 508.79 392.245 cv
506.945 396.559 505.01 400.812 503.007 405 cv
503.007 405 li
503.818 407.478 504.611 409.963 505.386 412.454 cv
.164706 .247059 .160784 rgb
f
450 392.656 mo
448.166 392.656 446.337 392.655 444.503 392.653 cv
448.857 381.274 453.077 369.861 456.976 358.318 cv
520.697 358.318 li
517.571 369.948 513.473 381.292 508.79 392.245 cv
489.189 392.519 469.602 392.656 450 392.656 cv
.145098 .203922 .156863 rgb
f
569.799 345.73 mo
572.246 338.971 560.12 331.131 554.493 329.197 cv
537.743 323.441 531.299 342.558 531.299 342.558 cv
531.299 342.558 528.085 339.038 525.638 339.238 cv
521.524 339.573 519.545 337.32 517.326 342.207 cv
518.579 329.248 513.328 303.964 495.855 304.543 cv
481.302 305.026 478.137 327.505 483.271 338.184 cv
476.253 333.751 473.495 339.963 474.219 346.481 cv
466.959 341.775 456.111 333.712 448.542 342.915 cv
445.482 346.635 445.804 354.886 447.374 356.564 cv
595.374 356.564 li
601.945 353.622 614.06 340.237 607.53 333.452 cv
598.532 324.103 575.486 338.011 569.799 345.73 cv
cp
.627451 .890196 .329412 rgb
f
239.03 341.497 mo
238.65 342.062 238.293 342.651 237.97 343.278 cv
238.358 342.688 238.706 342.094 239.03 341.497 cv
cp
f
291.557 334.716 mo
280.894 328.557 274.828 333.956 267.38 341.461 cv
260.334 331.284 245.6 331.732 239.03 341.497 cv
238.706 342.094 238.358 342.688 237.97 343.278 cv
238.293 342.651 238.65 342.062 239.03 341.497 cv
251.065 319.358 220.678 293.36 211.463 321.084 cv
208.591 329.723 205.639 350.078 215.113 356.564 cv
294.113 356.564 li
303.961 352.992 297.994 338.435 291.557 334.716 cv
cp
f
403.417 343.556 mo
403.495 343.565 li
403.602 343.574 403.656 343.578 403.417 343.556 cv
cp
f
403.363 343.554 mo
403.417 343.556 li
403.164 343.535 403.243 343.543 403.363 343.554 cv
cp
f
403.363 343.554 mo
399.95 343.295 396.117 344.207 393.901 347.004 cv
394.006 345.672 394.037 344.336 394.007 343 cv
393.198 343.521 392.423 344.091 391.681 344.704 cv
392.209 342.069 392.505 339.348 392.674 336.667 cv
389.393 339.213 386.163 342.667 385.467 346.907 cv
383.629 343.371 379.722 341.567 376.007 340.667 cv
377.099 343.164 378.158 345.888 379.712 348.136 cv
377.419 347.185 374.677 347.231 372.341 348 cv
376.215 352.16 379.165 355.129 385.341 354 cv
384.788 353.278 384.236 352.556 383.684 351.835 cv
385.552 353.21 385.643 353.888 386.341 356 cv
386.785 355.038 387.211 354.334 387.671 353.495 cv
387.754 354.9 388.004 356.302 388.341 357.667 cv
391.022 355.146 393.057 353.443 396.297 351.582 cv
399.636 349.664 401.69 346.368 404.341 343.667 cv
404.06 343.623 403.778 343.591 403.495 343.565 cv
403.363 343.554 li
cp
f
403.417 343.556 mo
403.363 343.554 li
403.495 343.565 li
403.417 343.556 li
cp
f
267.401 333.634 mo
266.785 335.888 267.718 332.538 267.401 333.634 cv
cp
f
268.34 322 mo
266.148 324.341 264.267 326.91 262.967 329.851 cv
262.573 327.229 262.168 324.605 261.674 322 cv
259.693 325.808 258.231 329.952 258 334.27 cv
256.256 329.348 253.475 324.721 250.674 320.333 cv
250.505 325.394 250.874 330.737 252.608 335.531 cv
253.664 338.248 255.251 340.807 257.059 343.085 cv
257.898 344.143 258.782 345.173 259.735 346.13 cv
260.118 346.513 261.889 348.83 261.527 347.434 cv
261.687 347.734 261.847 348.034 262.007 348.333 cv
262.322 346.141 262.157 343.444 263.404 341.601 cv
265.061 339.151 266.615 336.508 267.401 333.634 cv
268.447 330.017 268.386 325.741 268.34 322 cv
cp
f
267.932 337.12 mo
268.135 336.914 li
268.251 336.769 268.243 336.767 267.932 337.12 cv
cp
f
267.712 337.424 mo
267.787 337.324 267.853 337.216 267.932 337.12 cv
266.879 338.396 267.282 337.934 267.712 337.424 cv
cp
f
267.932 337.12 mo
267.853 337.216 267.787 337.324 267.712 337.424 cv
267.877 337.227 268.044 337.027 268.135 336.914 cv
267.932 337.12 li
cp
f
268.135 336.914 mo
268.044 337.027 267.877 337.227 267.712 337.424 cv
266.133 339.53 265.474 342.475 265.007 345 cv
270.98 342.689 273.769 339.236 275.34 333 cv
272.721 333.724 270.025 334.898 268.135 336.914 cv
cp
f
123.425 347.959 mo
123.312 347.497 122.349 344.581 121.819 344.708 cv
122.961 341.327 124.003 337.98 125.34 334.667 cv
120.298 337.312 116.434 341.678 115.169 347.304 cv
114.73 345.341 113.94 343.444 113.007 341.667 cv
112.559 342.381 112.139 343.112 111.747 343.859 cv
111.245 342.862 110.657 341.906 110.007 341 cv
108.661 342.819 106.999 345.433 107.341 347.796 cv
104.746 345.58 102.216 343.613 99.0072 342.333 cv
99.9257 349.446 105.075 354.65 111.007 358.333 cv
111.002 357.034 110.06 354.16 110.658 353.143 cv
111.105 354.474 111.674 355.766 112.341 357 cv
113.079 355.885 113.738 354.716 114.293 353.499 cv
114.187 354.665 114.074 355.831 114.007 357 cv
115.888 354.904 117.571 352.658 119.067 350.272 cv
120.511 352.248 120.824 351.35 122.483 349.953 cv
121.632 352.003 121.093 354.16 120.674 356.333 cv
127.114 351.198 131.879 345.654 136.674 339 cv
135.292 339.289 133.866 339.618 132.57 340.187 cv
128.657 341.613 125.382 344.279 123.425 347.959 cv
cp
f
132.57 340.187 mo
133.702 339.69 130.215 341.045 132.57 340.187 cv
cp
f
313.236 406.008 mo
296.597 480 li
506.213 480 li
506.213 412.581 li
442.583 402.814 377.13 399.13 313.236 406.008 cv
.176471 .352941 .192157 rgb
f
313.236 406.008 mo
312.944 407.306 li
343.872 417.428 378.647 418.826 411.756 423.235 cv
443.398 421.332 474.654 417.244 506.213 414.875 cv
506.213 412.581 li
442.583 402.814 377.13 399.13 313.236 406.008 cv
.384314 .498039 .211765 rgb
f
493.112 415.953 mo
493.104 415.952 493.097 415.951 493.09 415.95 cv
497.313 415.579 501.538 415.228 505.769 414.909 cv
501.775 415.211 497.786 415.544 493.8 415.893 cv
493.57 415.913 493.341 415.933 493.111 415.953 cv
505.816 414.905 mo
505.848 414.903 505.88 414.9 505.913 414.898 cv
505.905 414.898 505.898 414.899 505.89 414.9 cv
505.865 414.901 505.841 414.903 505.816 414.905 cv
.231373 .454902 .254902 rgb
f
493.09 415.95 mo
445.187 409.677 396.422 405.315 347.473 405.315 cv
336.066 405.315 324.642 405.552 313.225 406.057 cv
313.236 406.008 li
335.718 403.588 358.389 402.475 381.11 402.475 cv
422.962 402.475 464.973 406.25 506.213 412.581 cv
506.213 414.875 li
506.213 414.875 li
506.113 414.883 506.013 414.89 505.913 414.898 cv
505.88 414.9 505.848 414.903 505.816 414.905 cv
505.8 414.906 505.785 414.908 505.769 414.909 cv
501.538 415.228 497.313 415.579 493.09 415.95 cv
.509804 .643137 .278431 rgb
f
444.12 471.178 mo
437.113 455.021 432.832 438.477 431.606 421.787 cv
438.328 421.222 445.039 420.595 451.746 419.944 cv
448.777 437.022 446.021 454.1 444.12 471.178 cv
.14902 .286274 .188235 rgb
f
431.606 421.787 mo
431.605 421.778 431.605 421.769 431.604 421.759 cv
438.327 421.196 445.04 420.581 451.748 419.931 cv
451.747 419.935 451.746 419.94 451.746 419.944 cv
445.039 420.595 438.328 421.222 431.606 421.787 cv
.321569 .403922 .207843 rgb
f
500.104 480 mo
480.908 480 li
479.812 459.203 478.589 438.365 476.308 417.518 cv
478.089 417.345 479.87 417.172 481.652 417.002 cv
485.469 416.64 489.289 416.288 493.111 415.953 cv
493.112 415.953 493.112 415.953 493.112 415.953 cv
493.341 415.933 493.57 415.913 493.8 415.893 cv
494.752 415.81 495.705 415.728 496.657 415.647 cv
496.657 415.647 li
496.657 415.647 li
497.345 437.156 498.836 458.585 500.104 480 cv
.14902 .286274 .188235 rgb
f
476.308 417.518 mo
476.308 417.517 476.308 417.517 476.308 417.516 cv
478.089 417.343 479.87 417.172 481.652 417.002 cv
479.87 417.172 478.089 417.345 476.308 417.518 cv
.321569 .403922 .207843 rgb
f
493.112 415.953 mo
493.112 415.953 li
493.341 415.933 493.57 415.913 493.8 415.893 cv
493.57 415.913 493.341 415.933 493.112 415.953 cv
.196078 .368627 .25098 rgb
f
506.213 480 mo
500.104 480 li
498.836 458.585 497.345 437.156 496.657 415.647 cv
499.733 415.385 502.81 415.132 505.89 414.9 cv
505.998 414.891 506.106 414.883 506.213 414.875 cv
506.213 414.875 li
506.213 415.138 li
506.213 422.704 li
506.213 480 li
.231373 .454902 .254902 rgb
f
505.89 414.9 mo
505.898 414.899 505.905 414.898 505.913 414.898 cv
506.013 414.89 506.113 414.883 506.213 414.875 cv
506.213 414.875 li
506.106 414.883 505.998 414.891 505.89 414.9 cv
.305882 .588235 .337255 rgb
f
505.913 414.898 mo
506.013 414.89 506.113 414.883 506.213 414.875 cv
506.113 414.883 506.013 414.89 505.913 414.898 cv
.670588 .74902 .368627 rgb
f
480.908 480 mo
397.67 480 li
400.388 469.485 403.151 458.886 406.064 448.178 cv
408.479 439.612 411.064 431.287 413.755 423.112 cv
419.717 422.736 425.665 422.286 431.606 421.787 cv
432.832 438.477 437.113 455.021 444.12 471.178 cv
446.021 454.1 448.777 437.022 451.746 419.944 cv
459.935 419.148 468.119 418.317 476.308 417.518 cv
478.589 438.365 479.812 459.203 480.908 480 cv
.160784 .317647 .192157 rgb
f
413.755 423.112 mo
413.756 423.108 413.758 423.103 413.759 423.099 cv
413.759 423.099 li
413.759 423.099 li
419.72 422.723 425.665 422.258 431.604 421.759 cv
431.605 421.769 431.605 421.778 431.606 421.787 cv
425.665 422.286 419.717 422.736 413.755 423.112 cv
451.746 419.944 mo
451.746 419.94 451.747 419.935 451.748 419.931 cv
459.936 419.137 468.119 418.312 476.308 417.516 cv
476.308 417.517 476.308 417.517 476.308 417.518 cv
468.119 418.317 459.935 419.148 451.746 419.944 cv
.352941 .45098 .211765 rgb
f
296.597 480 mo
310.109 419.916 li
310.109 419.916 li
296.597 480 li
.243137 .388235 .215686 rgb
f
310.109 419.916 mo
310.109 419.916 li
312.944 407.306 li
312.944 407.306 li
310.109 419.916 li
.219608 .317647 .211765 rgb
f
303.11 480 mo
296.597 480 li
310.109 419.916 li
312.944 407.306 li
312.988 407.32 313.031 407.334 313.074 407.348 cv
315.731 408.215 318.415 409.018 321.125 409.764 cv
313.587 433.078 307.752 456.489 303.11 480 cv
.231373 .454902 .254902 rgb
f
321.125 409.764 mo
318.415 409.018 315.731 408.215 313.074 407.348 cv
315.73 408.214 318.424 408.996 321.132 409.741 cv
321.13 409.748 321.127 409.757 321.125 409.764 cv
.509804 .643137 .278431 rgb
f
336.209 480 mo
325.968 480 li
328.605 466.726 331.27 453.452 334.18 440.178 cv
335.688 452.581 336.216 465.03 336.216 477.505 cv
336.216 478.336 336.213 479.168 336.209 480 cv
.14902 .286274 .188235 rgb
f
355.24 480 mo
336.209 480 li
336.213 479.168 336.216 478.336 336.216 477.505 cv
336.216 465.03 335.688 452.581 334.18 440.178 cv
331.27 453.452 328.605 466.726 325.968 480 cv
303.11 480 li
307.752 456.489 313.587 433.078 321.125 409.764 cv
334.839 413.54 349.187 415.862 363.72 417.693 cv
361.214 438.375 357.975 459.174 355.24 480 cv
.160784 .317647 .192157 rgb
f
363.72 417.693 mo
349.187 415.862 334.839 413.54 321.125 409.764 cv
321.127 409.757 321.13 409.748 321.132 409.741 cv
334.847 413.516 349.188 415.855 363.721 417.686 cv
363.721 417.688 363.72 417.69 363.72 417.693 cv
.352941 .45098 .211765 rgb
f
373.484 480 mo
372.086 480 li
373.653 459.726 375.152 439.452 376.336 419.178 cv
381.742 419.781 387.156 420.354 392.553 420.947 cv
384.734 440.496 377.626 460.004 373.484 480 cv
.231373 .454902 .254902 rgb
f
392.553 420.947 mo
387.156 420.354 381.742 419.781 376.336 419.178 cv
376.336 419.176 376.336 419.174 376.336 419.171 cv
376.336 419.171 li
376.336 419.171 li
381.743 419.775 387.155 420.352 392.553 420.946 cv
392.553 420.946 li
.509804 .643137 .278431 rgb
f
372.086 480 mo
355.24 480 li
357.975 459.174 361.214 438.375 363.72 417.693 cv
367.913 418.221 372.124 418.709 376.336 419.178 cv
375.152 439.452 373.653 459.726 372.086 480 cv
.14902 .286274 .188235 rgb
f
376.336 419.178 mo
372.124 418.709 367.913 418.221 363.72 417.693 cv
363.72 417.69 363.721 417.688 363.721 417.686 cv
367.915 418.214 372.124 418.701 376.336 419.171 cv
376.336 419.174 376.336 419.176 376.336 419.178 cv
.321569 .403922 .207843 rgb
f
397.67 480 mo
373.484 480 li
377.626 460.004 384.734 440.496 392.553 420.946 cv
398.527 421.603 404.483 422.284 410.388 423.055 cv
410.397 423.056 410.405 423.057 410.414 423.058 cv
410.519 423.072 410.626 423.086 410.731 423.1 cv
410.753 423.103 410.774 423.105 410.796 423.108 cv
410.845 423.115 410.896 423.121 410.945 423.128 cv
410.985 423.133 411.025 423.138 411.065 423.144 cv
411.116 423.15 411.169 423.157 411.219 423.164 cv
411.283 423.172 411.346 423.181 411.41 423.189 cv
411.442 423.194 411.473 423.198 411.505 423.202 cv
411.589 423.213 411.673 423.224 411.756 423.235 cv
411.756 423.235 li
412.423 423.195 413.089 423.154 413.755 423.112 cv
411.064 431.287 408.479 439.612 406.064 448.178 cv
403.151 458.886 400.388 469.485 397.67 480 cv
.14902 .286274 .188235 rgb
f
411.756 423.235 mo
412.425 423.195 413.091 423.141 413.759 423.099 cv
413.758 423.103 413.756 423.108 413.755 423.112 cv
413.089 423.154 412.423 423.195 411.756 423.235 cv
411.505 423.202 mo
411.473 423.198 411.442 423.194 411.41 423.189 cv
411.442 423.193 411.474 423.198 411.505 423.202 cv
411.219 423.164 mo
411.169 423.157 411.116 423.15 411.065 423.144 cv
411.117 423.15 411.168 423.157 411.219 423.164 cv
410.945 423.128 mo
410.896 423.121 410.845 423.115 410.796 423.108 cv
410.846 423.115 410.895 423.121 410.945 423.128 cv
410.731 423.1 mo
410.626 423.086 410.519 423.072 410.414 423.058 cv
410.52 423.072 410.626 423.086 410.731 423.1 cv
410.388 423.055 mo
404.483 422.284 398.527 421.603 392.553 420.947 cv
392.553 420.946 392.553 420.946 392.553 420.946 cv
398.527 421.603 404.483 422.284 410.388 423.055 cv
.321569 .403922 .207843 rgb
f
672.302 425.307 mo
667.004 443.838 661.271 462.052 655.101 480 cv
799.988 480 li
796.925 457.004 793.862 434.009 790.799 411.013 cv
750.475 413.851 711.688 419.899 672.302 425.307 cv
.207843 .368627 .168627 rgb
f
672.302 425.307 mo
672.197 425.677 672.091 426.047 671.984 426.416 cv
689.789 435.333 711.859 435.422 732.882 436.709 cv
752.958 432.137 772.245 423.297 791.157 413.698 cv
791.038 412.803 790.919 411.908 790.799 411.013 cv
750.475 413.851 711.688 419.899 672.302 425.307 cv
.419608 .513726 .188235 rgb
f
672.29 425.349 mo
672.302 425.307 li
672.298 425.321 672.294 425.335 672.29 425.349 cv
672.29 425.349 672.29 425.349 672.29 425.349 cv
.270588 .466667 .219608 rgb
f
672.29 425.349 mo
672.294 425.335 672.298 425.321 672.302 425.307 cv
672.302 425.307 li
711.688 419.899 750.475 413.851 790.799 411.013 cv
790.919 411.908 791.038 412.803 791.157 413.698 cv
791.157 413.698 li
788.64 414.966 786.122 416.231 783.596 417.471 cv
783.486 417.525 783.377 417.579 783.268 417.632 cv
745.74 420.471 709.126 423.368 672.29 425.349 cv
.552941 .654902 .243137 rgb
f
756.765 480 mo
755.72 480 li
755.72 480 li
750.315 464.49 746.949 449.059 745.4 433.306 cv
749.617 431.981 753.805 430.495 757.962 428.883 cv
757.491 446.22 756.948 463.216 756.765 480 cv
.176471 .301961 .164706 rgb
f
745.4 433.306 mo
745.399 433.294 745.398 433.283 745.397 433.271 cv
745.397 433.271 li
749.615 431.95 753.805 430.481 757.963 428.873 cv
757.963 428.876 757.963 428.88 757.962 428.883 cv
753.805 430.495 749.617 431.981 745.4 433.306 cv
.356863 .419608 .184314 rgb
f
795.325 480 mo
781.851 480 li
779.125 460.841 776.35 441.803 773.143 422.918 cv
773.118 422.771 773.093 422.623 773.068 422.476 cv
777.203 420.587 781.317 418.61 785.409 416.583 cv
788.344 437.608 791.825 458.756 795.325 480 cv
.176471 .301961 .164706 rgb
f
773.068 422.476 mo
773.068 422.475 773.067 422.473 773.067 422.472 cv
776.482 420.911 779.881 419.291 783.268 417.632 cv
783.268 417.632 783.268 417.632 783.268 417.632 cv
783.377 417.579 783.487 417.525 783.596 417.471 cv
784.2 417.175 784.804 416.877 785.408 416.578 cv
785.408 416.578 li
785.408 416.578 li
785.408 416.579 785.409 416.581 785.409 416.583 cv
781.317 418.61 777.203 420.587 773.068 422.476 cv
.356863 .419608 .184314 rgb
f
783.268 417.632 mo
783.377 417.579 783.486 417.525 783.596 417.471 cv
783.487 417.525 783.377 417.579 783.268 417.632 cv
783.268 417.632 li
.470588 .533333 .239216 rgb
f
799.989 480 mo
799.988 480 li
797.045 457.9 794.101 435.798 791.157 413.698 cv
791.157 413.698 791.157 413.698 791.157 413.698 cv
791.157 413.698 li
794.101 435.799 797.045 457.899 799.989 480 cv
.270588 .466667 .219608 rgb
f
799.988 480 mo
795.325 480 li
791.825 458.756 788.344 437.608 785.409 416.583 cv
787.33 415.631 789.245 414.669 791.157 413.698 cv
794.101 435.798 797.045 457.9 799.988 480 cv
799.988 480 li
.27451 .47451 .219608 rgb
f
785.409 416.583 mo
785.409 416.581 785.408 416.579 785.408 416.578 cv
787.327 415.629 789.243 414.663 791.157 413.698 cv
791.157 413.698 li
789.245 414.669 787.33 415.631 785.409 416.583 cv
.552941 .654902 .243137 rgb
f
795.325 480 mo
795.325 480 li
791.825 458.756 788.344 437.608 785.409 416.583 cv
785.409 416.583 li
788.344 437.608 791.825 458.756 795.325 480 cv
.231373 .388235 .211765 rgb
f
755.72 480 mo
726.483 480 li
726.483 480 li
727.556 473.956 728.61 467.838 729.661 461.63 cv
729.678 461.532 729.695 461.433 729.711 461.334 cv
731.173 452.942 732.669 444.671 734.147 436.415 cv
737.926 435.52 741.674 434.476 745.4 433.306 cv
746.949 449.059 750.315 464.49 755.72 480 cv
755.72 480 li
.192157 .333333 .168627 rgb
f
734.147 436.415 mo
734.148 436.41 734.149 436.404 734.15 436.399 cv
734.15 436.399 li
734.15 436.399 li
737.922 435.497 741.67 434.439 745.397 433.271 cv
745.397 433.271 li
745.398 433.283 745.399 433.294 745.4 433.306 cv
741.674 434.476 737.926 435.52 734.147 436.415 cv
.388235 .466667 .184314 rgb
f
755.72 480 mo
750.315 464.49 746.949 449.059 745.4 433.306 cv
745.4 433.306 li
746.949 449.059 750.315 464.49 755.72 480 cv
.164706 .27451 .164706 rgb
f
781.851 480 mo
756.765 480 li
756.948 463.217 757.492 446.22 757.962 428.883 cv
763.038 426.915 768.069 424.76 773.068 422.476 cv
773.093 422.623 773.118 422.771 773.143 422.918 cv
776.35 441.803 779.125 460.841 781.851 480 cv
.192157 .333333 .168627 rgb
f
757.962 428.883 mo
757.963 428.88 757.963 428.876 757.963 428.873 cv
763.039 426.909 768.072 424.757 773.067 422.472 cv
773.067 422.473 773.068 422.475 773.068 422.476 cv
768.069 424.76 763.038 426.915 757.962 428.883 cv
.388235 .466667 .184314 rgb
f
781.851 480 mo
781.851 480 li
779.125 460.841 776.35 441.803 773.143 422.918 cv
776.35 441.803 779.125 460.841 781.851 480 cv
.164706 .27451 .164706 rgb
f
655.101 480 mo
655.073 480 li
661.122 462.406 666.774 444.57 671.984 426.416 cv
671.984 426.416 li
671.984 426.416 li
666.775 444.565 661.148 462.411 655.101 480 cv
.270588 .466667 .219608 rgb
f
659.647 480 mo
655.101 480 li
655.101 480 li
661.148 462.411 666.775 444.565 671.985 426.416 cv
673.532 427.191 675.111 427.899 676.72 428.548 cv
670.739 445.93 665.061 463.023 659.647 480 cv
.27451 .47451 .219608 rgb
f
676.72 428.548 mo
675.111 427.899 673.532 427.191 671.984 426.416 cv
671.984 426.416 li
673.529 427.185 675.118 427.871 676.73 428.518 cv
676.73 428.518 li
676.727 428.528 676.723 428.538 676.72 428.548 cv
.552941 .654902 .243137 rgb
f
681.43 480 mo
675.841 480 li
678.02 471.73 680.157 463.406 682.318 455.032 cv
682.318 455.032 li
682.32 455.487 682.321 455.942 682.321 456.396 cv
682.321 457.111 682.319 457.826 682.313 458.54 cv
682.259 465.688 681.937 472.843 681.43 480 cv
.176471 .301961 .164706 rgb
f
695.877 480 mo
681.43 480 li
681.937 472.843 682.259 465.688 682.313 458.54 cv
682.319 457.826 682.321 457.111 682.321 456.396 cv
682.321 455.942 682.32 455.487 682.318 455.032 cv
682.318 455.032 li
680.157 463.406 678.02 471.73 675.841 480 cv
659.647 480 li
665.062 463.023 670.739 445.93 676.72 428.548 cv
683.452 431.26 690.688 432.921 698.171 434.011 cv
699.638 434.226 701.113 434.419 702.595 434.592 cv
700.748 449.875 698.323 464.985 695.877 480 cv
.192157 .333333 .168627 rgb
f
698.171 434.011 mo
690.688 432.921 683.452 431.26 676.72 428.548 cv
676.723 428.538 676.727 428.528 676.73 428.518 cv
676.73 428.518 li
683.447 431.216 690.694 432.912 698.171 434.011 cv
.388235 .466667 .184314 rgb
f
659.647 480 mo
659.647 480 li
665.061 463.023 670.739 445.93 676.72 428.548 cv
676.72 428.548 li
670.739 445.93 665.062 463.023 659.647 480 cv
.254902 .431373 .215686 rgb
f
681.43 480 mo
681.43 480 li
681.937 472.843 682.259 465.688 682.313 458.54 cv
682.259 465.688 681.937 472.843 681.43 480 cv
682.321 456.396 mo
682.321 455.942 682.32 455.487 682.318 455.032 cv
682.318 455.032 li
682.318 455.032 li
682.32 455.487 682.321 455.942 682.321 456.396 cv
.164706 .27451 .164706 rgb
f
709.487 480 mo
707.1 480 li
708.296 466.066 709.391 452.07 710.305 438.013 cv
710.363 437.127 710.42 436.24 710.476 435.354 cv
713.864 435.626 717.273 435.837 720.682 436.029 cv
716.855 450.865 712.856 465.117 709.639 479.323 cv
709.588 479.549 709.537 479.774 709.487 480 cv
.27451 .47451 .219608 rgb
f
720.682 436.029 mo
717.273 435.837 713.864 435.626 710.476 435.354 cv
710.476 435.352 710.476 435.352 710.476 435.35 cv
710.476 435.35 li
710.476 435.35 li
713.866 435.617 717.275 435.822 720.687 436.01 cv
720.687 436.01 li
720.685 436.016 720.684 436.022 720.682 436.029 cv
.552941 .654902 .243137 rgb
f
726.483 480 mo
709.487 480 li
709.537 479.774 709.588 479.549 709.639 479.323 cv
712.856 465.117 716.855 450.865 720.682 436.029 cv
724.762 436.259 728.841 436.462 732.882 436.709 cv
732.882 436.709 li
732.882 436.709 li
733.303 436.613 733.726 436.515 734.147 436.415 cv
732.669 444.671 731.173 452.942 729.711 461.334 cv
729.695 461.433 729.678 461.532 729.661 461.63 cv
728.61 467.838 727.555 473.956 726.483 480 cv
726.483 480 li
.176471 .301961 .164706 rgb
f
732.882 436.709 mo
733.305 436.612 733.727 436.5 734.15 436.399 cv
734.149 436.404 734.148 436.41 734.147 436.415 cv
733.726 436.515 733.303 436.613 732.882 436.709 cv
732.882 436.709 mo
728.841 436.462 724.762 436.259 720.682 436.029 cv
720.684 436.022 720.685 436.016 720.687 436.01 cv
720.687 436.01 li
724.755 436.235 728.827 436.437 732.882 436.709 cv
.356863 .419608 .184314 rgb
f
726.483 480 mo
726.483 480 li
726.483 480 li
726.483 480 li
729.661 461.63 mo
729.678 461.532 729.695 461.433 729.711 461.334 cv
731.173 452.942 732.669 444.671 734.147 436.415 cv
734.147 436.415 li
732.669 444.671 731.173 452.942 729.711 461.334 cv
729.695 461.433 729.678 461.532 729.661 461.63 cv
.164706 .270588 .164706 rgb
f
709.639 479.323 mo
712.856 465.117 716.855 450.865 720.682 436.029 cv
720.682 436.029 li
716.855 450.865 712.856 465.117 709.639 479.323 cv
.235294 .388235 .215686 rgb
f
707.099 480 mo
695.877 480 li
698.324 464.985 700.749 449.875 702.595 434.592 cv
703.943 434.749 705.296 434.891 706.653 435.019 cv
707.924 435.141 709.198 435.252 710.476 435.354 cv
710.42 436.24 710.363 437.127 710.305 438.013 cv
709.391 452.07 708.296 466.066 707.099 480 cv
.176471 .301961 .164706 rgb
f
710.476 435.354 mo
709.198 435.252 707.924 435.141 706.653 435.019 cv
707.924 435.14 709.199 435.249 710.476 435.35 cv
710.476 435.352 710.476 435.352 710.476 435.354 cv
.356863 .419608 .184314 rgb
f
710.305 438.013 mo
710.363 437.127 710.42 436.24 710.476 435.354 cv
710.476 435.354 li
710.42 436.24 710.363 437.127 710.305 438.013 cv
.235294 .388235 .215686 rgb
f
88.2892 429.926 mo
79.5401 446.931 69.591 463.614 58.4697 480 cv
187.666 480 li
179.564 461.753 171.463 443.506 163.362 425.26 cv
132.733 421.423 114.131 424.083 88.2892 429.926 cv
.207843 .368627 .168627 rgb
f
88.2892 429.926 mo
88.0961 430.301 87.9021 430.677 87.7081 431.052 cv
95.9923 440.005 111.495 441.001 126.454 444.024 cv
140.697 440.964 153.051 434.329 164.554 427.945 cv
164.156 427.05 163.759 426.155 163.362 425.26 cv
132.733 421.423 114.131 424.083 88.2892 429.926 cv
.419608 .513726 .188235 rgb
f
88.2671 429.969 mo
88.2892 429.926 li
88.2817 429.94 88.2746 429.954 88.2671 429.969 cv
88.2671 429.969 88.2671 429.969 88.2671 429.969 cv
.270588 .466667 .219608 rgb
f
88.2671 429.969 mo
88.2746 429.954 88.2817 429.94 88.2892 429.926 cv
88.2892 429.926 li
88.2818 429.94 88.2745 429.954 88.2671 429.969 cv
88.2671 429.969 88.2671 429.969 88.2671 429.969 cv
.27451 .47451 .219608 rgb
f
159.702 430.601 mo
144.546 429.093 131.736 428.364 119.563 428.364 cv
109.024 428.364 98.961 428.91 88.2671 429.969 cv
88.2745 429.954 88.2818 429.94 88.2892 429.926 cv
88.2892 429.926 li
105.819 425.962 120.015 423.463 136.896 423.463 cv
144.9 423.463 153.51 424.026 163.362 425.26 cv
163.759 426.155 164.156 427.05 164.554 427.945 cv
164.554 427.945 li
164.554 427.945 li
164.391 428.033 164.228 428.122 164.065 428.211 cv
162.682 428.968 161.297 429.734 159.899 430.494 cv
159.834 430.529 159.768 430.565 159.702 430.601 cv
.552941 .654902 .243137 rgb
f
150.336 480 mo
146.485 480 li
146.445 479.9 146.404 479.8 146.364 479.7 cv
141.259 467.014 137.75 454.395 135.155 441.669 cv
138.041 440.731 140.852 439.665 143.595 438.51 cv
146.12 452.501 148.259 466.309 150.336 480 cv
.176471 .301961 .164706 rgb
f
135.155 441.669 mo
135.153 441.656 135.15 441.643 135.148 441.63 cv
135.148 441.63 li
138.033 440.697 140.852 439.65 143.594 438.501 cv
143.594 438.501 li
143.594 438.501 li
143.594 438.504 143.595 438.508 143.595 438.51 cv
140.852 439.665 138.041 440.731 135.155 441.669 cv
.356863 .419608 .184314 rgb
f
183.073 480 mo
171.292 480 li
165.33 464.6 159.409 449.253 153.337 433.964 cv
155.951 432.638 158.511 431.268 161.026 429.891 cv
167.975 446.523 175.431 463.235 183.073 480 cv
.176471 .301961 .164706 rgb
f
153.337 433.964 mo
153.336 433.962 153.336 433.961 153.335 433.96 cv
155.491 432.862 157.609 431.736 159.702 430.601 cv
159.702 430.601 159.702 430.601 159.702 430.601 cv
159.768 430.565 159.834 430.529 159.899 430.494 cv
160.275 430.29 160.649 430.086 161.023 429.882 cv
161.023 429.882 li
161.023 429.882 li
161.024 429.885 161.025 429.888 161.026 429.891 cv
158.511 431.268 155.951 432.638 153.337 433.964 cv
.356863 .419608 .184314 rgb
f
159.702 430.601 mo
159.702 430.601 li
159.768 430.565 159.834 430.529 159.899 430.494 cv
159.834 430.529 159.768 430.565 159.702 430.601 cv
.470588 .533333 .239216 rgb
f
187.666 480 mo
180.356 463.536 173.046 447.071 165.736 430.608 cv
173.046 447.072 180.356 463.536 187.666 480 cv
.243137 .388235 .211765 rgb
f
187.666 480 mo
183.073 480 li
175.431 463.235 167.975 446.523 161.026 429.891 cv
162.212 429.242 163.387 428.592 164.554 427.945 cv
164.554 427.945 li
164.948 428.832 165.342 429.72 165.736 430.608 cv
173.046 447.071 180.356 463.536 187.666 480 cv
187.666 480 li
.27451 .47451 .219608 rgb
f
161.026 429.891 mo
161.025 429.888 161.024 429.885 161.023 429.882 cv
162.041 429.326 163.054 428.765 164.065 428.211 cv
164.228 428.122 164.391 428.033 164.554 427.945 cv
164.554 427.945 li
163.387 428.592 162.212 429.242 161.026 429.891 cv
.552941 .654902 .243137 rgb
f
164.065 428.211 mo
164.228 428.122 164.391 428.033 164.554 427.945 cv
164.391 428.033 164.228 428.122 164.065 428.211 cv
.698039 .756863 .313725 rgb
f
146.485 480 mo
124.188 480 li
124.625 476.344 125.035 472.669 125.401 468.958 cv
125.824 464.714 126.203 460.505 126.529 456.318 cv
126.856 452.137 127.13 447.978 127.344 443.828 cv
130.012 443.223 132.613 442.495 135.155 441.669 cv
137.75 454.396 141.259 467.014 146.364 479.7 cv
146.404 479.8 146.445 479.9 146.485 480 cv
.192157 .333333 .168627 rgb
f
127.344 443.828 mo
127.344 443.821 127.345 443.816 127.345 443.81 cv
129.996 443.199 132.598 442.455 135.148 441.63 cv
135.148 441.63 li
135.15 441.643 135.153 441.656 135.155 441.669 cv
132.613 442.495 130.012 443.223 127.344 443.828 cv
.388235 .466667 .184314 rgb
f
146.364 479.7 mo
141.259 467.014 137.75 454.396 135.155 441.669 cv
135.155 441.669 li
137.75 454.395 141.259 467.014 146.364 479.7 cv
.164706 .27451 .164706 rgb
f
171.292 480 mo
150.336 480 li
148.259 466.309 146.12 452.501 143.595 438.51 cv
146.935 437.105 150.175 435.567 153.337 433.964 cv
159.409 449.253 165.33 464.6 171.292 480 cv
.192157 .333333 .168627 rgb
f
143.595 438.51 mo
143.595 438.508 143.594 438.504 143.594 438.501 cv
146.942 437.099 150.182 435.565 153.335 433.96 cv
153.336 433.961 153.336 433.962 153.337 433.964 cv
150.175 435.567 146.935 437.105 143.595 438.51 cv
.388235 .466667 .184314 rgb
f
150.336 480 mo
150.336 480 li
148.259 466.309 146.12 452.501 143.595 438.51 cv
143.595 438.51 li
146.12 452.501 148.259 466.309 150.336 480 cv
.164706 .27451 .164706 rgb
f
62.7764 480 mo
58.476 480 li
69.3515 463.977 79.1012 447.667 87.7081 431.052 cv
88.2564 431.663 88.8549 432.226 89.4872 432.764 cv
89.6533 432.906 89.821 433.046 89.9914 433.184 cv
89.798 433.555 89.6034 433.927 89.409 434.297 cv
81.287 449.768 72.2943 464.961 62.7764 480 cv
.27451 .47451 .219608 rgb
f
89.9914 433.184 mo
89.821 433.046 89.6533 432.906 89.4872 432.764 cv
89.6533 432.905 89.8217 433.044 89.9922 433.182 cv
89.9917 433.183 89.9919 433.183 89.9914 433.184 cv
.552941 .654902 .243137 rgb
f
82.23 480 mo
77.9298 480 li
81.0341 473.466 84.0198 466.896 86.9213 460.292 cv
85.5375 466.861 83.9606 473.431 82.23 480 cv
.176471 .301961 .164706 rgb
f
96.1368 480 mo
82.23 480 li
83.9606 473.431 85.5375 466.861 86.9213 460.292 cv
86.9213 460.292 li
86.9213 460.292 li
84.0198 466.896 81.0339 473.466 77.9298 480 cv
62.7767 480 li
72.2945 464.961 81.287 449.768 89.409 434.297 cv
89.6034 433.927 89.798 433.555 89.9914 433.184 cv
94.1258 436.531 99.5106 438.524 105.499 439.993 cv
103.065 453.458 99.7761 466.772 96.1368 480 cv
.192157 .333333 .168627 rgb
f
105.499 439.993 mo
99.5106 438.524 94.1258 436.531 89.9914 433.184 cv
89.9919 433.183 89.9917 433.183 89.9922 433.182 cv
94.0854 436.491 99.5637 438.532 105.5 439.989 cv
105.499 439.991 105.499 439.991 105.499 439.993 cv
.388235 .466667 .184314 rgb
f
62.7767 480 mo
62.7764 480 li
72.2943 464.961 81.287 449.768 89.409 434.297 cv
81.287 449.768 72.2945 464.961 62.7767 480 cv
.254902 .431373 .215686 rgb
f
77.9298 480 mo
77.9298 480 li
81.0339 473.466 84.0198 466.896 86.9213 460.292 cv
86.9213 460.292 li
84.0198 466.896 81.0341 473.466 77.9298 480 cv
.164706 .27451 .164706 rgb
f
109.058 480 mo
105.973 480 li
107.796 467.103 109.399 454.149 110.763 441.143 cv
113.058 441.596 115.408 442.01 117.783 442.427 cv
115.536 455.237 112.329 467.644 109.058 480 cv
.27451 .47451 .219608 rgb
f
117.783 442.427 mo
115.408 442.01 113.058 441.596 110.763 441.143 cv
110.763 441.142 110.763 441.139 110.764 441.138 cv
110.764 441.138 li
110.764 441.138 li
113.059 441.589 115.404 442.001 117.785 442.417 cv
117.784 442.42 117.783 442.424 117.783 442.427 cv
.552941 .654902 .243137 rgb
f
105.973 480 mo
96.137 480 li
99.7761 466.772 103.065 453.458 105.499 439.993 cv
107.209 440.413 108.969 440.79 110.763 441.143 cv
109.399 454.149 107.796 467.103 105.973 480 cv
.176471 .301961 .164706 rgb
f
110.763 441.143 mo
108.969 440.79 107.209 440.413 105.499 439.993 cv
105.499 439.991 105.499 439.991 105.5 439.989 cv
107.216 440.411 108.975 440.786 110.764 441.138 cv
110.763 441.139 110.763 441.142 110.763 441.143 cv
.356863 .419608 .184314 rgb
f
105.973 480 mo
105.973 480 li
107.796 467.103 109.399 454.149 110.763 441.143 cv
110.763 441.143 li
109.399 454.149 107.796 467.103 105.973 480 cv
.235294 .388235 .215686 rgb
f
124.188 480 mo
109.058 480 li
112.329 467.644 115.536 455.237 117.783 442.427 cv
120.656 442.932 123.565 443.44 126.454 444.024 cv
126.454 444.024 li
126.454 444.024 li
126.751 443.96 127.048 443.894 127.344 443.828 cv
127.13 447.978 126.856 452.137 126.529 456.318 cv
126.203 460.505 125.824 464.714 125.401 468.958 cv
125.035 472.669 124.625 476.344 124.188 480 cv
.176471 .301961 .164706 rgb
f
126.454 444.024 mo
126.752 443.958 127.048 443.878 127.345 443.81 cv
127.345 443.816 127.344 443.821 127.344 443.828 cv
127.048 443.894 126.751 443.96 126.454 444.024 cv
126.454 444.024 mo
123.565 443.44 120.656 442.932 117.783 442.427 cv
117.783 442.424 117.784 442.42 117.785 442.417 cv
120.624 442.914 123.513 443.419 126.454 444.024 cv
.356863 .419608 .184314 rgb
f
124.188 480 mo
124.188 480 li
124.625 476.344 125.035 472.669 125.401 468.958 cv
125.824 464.714 126.203 460.505 126.529 456.318 cv
126.203 460.505 125.824 464.714 125.401 468.958 cv
125.035 472.669 124.625 476.344 124.188 480 cv
.164706 .270588 .164706 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 /5 /6 /7 /8 /9 
/10 /11 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 17.0.0
%%For: (Krol) ()
%%Title: (bg10.eps)
%%CreationDate: 7/31/2016 10:48 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6CU7<eE@(CN&c<1&M]u^+k^(jm8i&16\.?)4@9ErZme2=/K)pUdN,A])J=o&o?U))%Ale:[(Eak5m.$$kD2UB1g9k9f=nu11
%l=W>nIIljl042Hm_sNrnl^*sunr);`AK:9-nG-]]qq6IJq:c_ClqM@-q%F*=#5gWSRbtl*rp?a&YM]<@m@38l^A6pZbu\i?Ie1b+
%h&i9&^AR9L+66e#?2i.d?[_V0h_)BF4a[/mjI@TI;ndMQnuER&hn4C1m+nMp*#,8'Gk+(H,A0RQpcIU)MnaN`U>NY/pJ1-IqF:(K
%rV!F5c^2S&i;!+4rV"2P?@MM6mB_!ihn8r,It=ImrhaG^^O,MD1]7RCm$F%]a3Wih0D@,Ks6SLDhWZmNX-NVUh-XF6`IGJsqJ/X9
%iE9/5'R1U@kc`@2^lMh*r828_pi#qS]VJ3Olhom(pUE]B#5,Le,6&YMK^e1,OSkV-M)Y5(04')*e['HQpt]sNDWIS3N;oDtG[pOR
%C`(4;OY=HtWSQ'Ml0Ytuoht:s>-<qaia6',ppXU:rpu%\?bUc#ht"nDGJAM#J'0dgW6"oknSc2@lG_M-Gl@3(]JT"hk\'\@RkJ,r
%,nIO]J,7\OIb<+*npdd\h`lJbLDTDi=MFUr>C;-3?M`X\p35E.qV,Y4I"=!glls4DqShd8J+I#lUVE`Vb-Mm%`3n0>$0dPf/mlu>
%PmmU6,C=i+mh_Of$h(aeoDD(tiNM.Qr56_0^F\qm90R0Frq5$4?`jF`ihbu@n0r8Ol2QP=^YPtRqR^r)?MiQ6pr2'm:.+uiq:4qQ
%jbMGphS"2gDt"3bhT?sj/`Zl32h/&]>sJ+&d`&\&gS7U7`S\@k'4/CBa.IkTGPZ7VMr/pTXo.3d^O>_@f73DgpMW7qm,q0YI.PZ;
%0)t%Po65-0b#eQ4o':f)n+,Kl/jJMU]_q`_B@!Cbq*!Kf4F?ns?[PY)nsjW*>kDCb>lKufrZ;+<R.FmLMRln1W:]'A^V9L.c.AkR
%VrZOs0/*@ug"W\pVXr\mp$D@X[ho%]m/(^.ri>t?1O3Q4pEf^8DIqmV/MDr.Z-CfF^8&O/T0DO<ceeVY.+f?>^\h^;Y!9+-?A0KM
%jmW3DlCZs]p%"SRZbs+[rr")1mbNf1YCHLSDtEA*hu([Zn)(eRC:smi@/mSto%SA7cG,j,bf9+`JGeHBhp1\^IJ).65J2F<otS.e
%rkABhoC)9;+#s"i7aZ:kp%Ma3s/1.Ia(P<s\rI;qLG*"lo)$50rm!F:qmU5,T)X_IQ[aJ]m-Vt4h_Q)=H%5kb[B-g'hgPCmh2Cs>
%hRr\'<ncYZs75MlLsbeXWTEESHm&m9Gld]Z00]Ce>]*o@(PohTqs;LmZG-8-o(.?UrVG1tdJSJJd:FTfke1G.hr<bkbKiEMVp@U)
%h`h),GTt2qEHg1[&'*.<KFhT`+bp]1*%ge:_NSpXm_XBs#Z&@eGf1/'9QK2r@Z;u538tT3mc+3.T>cT\1`\#9K9UC+WQNUd:IC-i
%kr.A>EM"<#dsU5<V3@Eic:*b^>OHdXnKd"@rn7=SGPI$pI(CB^*C`-=UE^lBd8B:EG'*_u*Wt:eHFuB]GBVcfj$=1RhZs$n#J]'i
%:W1(24F!&cUO9]6iT\7t_u7L/_sP@*L[i_5g-^9:&,@A3`.oJK5.uHU^V@Oq^V,,;5OSDs]<Ctj52W:8GTZ@7];Ki`GP?<jGB/mk
%j0%:I]6[QHZ@(,G([d=<Vmd2GpU>@U\$o.Na)/S.\+R2bk1atsDo:u4jQVk`-hgF)T%lMTnmjlI:YM#tYOUl0NrFU)IIO34+[,\Z
%b6O++JKp_HH&&jN4J)JmLHOUlBE#X*6gpiB%eJdp?eiBWbW]q(8>Ts&ZSK6eD#A'#a.Q:6ilD.MBsH_B.RD;=+PqY@!;#lA5J)R&
%DfG@o[@X-SU:GLIV<(t8LJ71^nl2%Hm%\2j3SMOL(4Je-\<#DAV+k6"I^b0)rWF5l:]"HE$b>%X3GVdqM:;`hF8SdFD%Jj77)KLL
%f*>.qd&9rdl#"(o&#)6#[:cD_I%[p$SnqOV?bXeZq*EMe]_t`#/#1mcHVl;e`gU\BXcE7RhUVN":nNW6#q`U@8uo)%d@R`"G1Z0:
%K.*;;7=fsf=\i=fD_JfshM3(HqJF"5p\b+;C`FZ.\M[7DGn_<B1c-.]a@mX1gP9Hq+^/B3Af4B/rsU+fbKCQ%5d3@58N\bh_P?[8
%4LuPC*rb>'O3^%Ss1Pc!hN!BYR'Z+%;k]q3hL!<TM3!\hhBRO../P/NmZRED8,Md!4auVPqO_t&O!!8*I*<`sIT3q?5CVnf6S2&6
%;4u0rBhPC*\Yh:rBtpWZ\J;^c2B+2*;<"t4mV&ALBqP&D)FXl+]kJA:A$EqDW0YP$9.84boLpiBVZ%5HfQZGk4AaqF`i5\R3jm88
%kaf?35?$A_g'>2::$pD5VZrSN8.Je9WJR:+daU\5*OV$o,LK@L.%upo>r,>:*RmlbTi=N6/Hn<!8%1kc8<9W_r:Spkj5,fOH-B9U
%3pi<'D*(-U`RBt+F6!iOjj?B]-p?,l*po_`^(0D4s,"ekmR)<uSech@n^0LKoH3>f'E@n.7uuQ$;;cd`:nO\_dUdsdRB7+![IT"E
%$@KQYIA4HIXOaUZ`63doVfk]LI<$^hjIe]Ye0jXb:WcUNP;MsSGA.cC.B6CZBpIHAeLI_'7'h\=;=3pbdju"lY'%q90@2Cedk[q9
%7+6r]=dmA1XPpbVRJZArG]Zd:W#`9[SI]G,pjqHt"3Hr*30!QYqIq#!j*1FeT5f7ff))e6T6gF-e`6Z[OW+[[Clt)YO3;#bitUh-
%R#.oq1YQsdl*;^=VTmVij6if#'[8G7Wp(AF1<W6O1Q>pf:7=8LT:SgT.>tom"be*0I<SJ8(XNaW[RMPELYuJKBXuKc8'uD)EfH[F
%&FFX2mIn>W&bK8#f7jBBkDk=20[j=-X&M`s"48On8$rnNNG0*Y(d@-]S%8YW:Mb>apZcV;R"3Mj4KGgOFS:H4s5htG4oGsc(k:u2
%F$.,8\3%Fr&.eLfIe8aek)^WKWngtZfL'u_kdLMRHCP#GVbccRhTB<[SsH;=Bm=n!E%di4aCH\S"iL;fqg02)#[GsXHlj617(<l'
%b/uDL@#,Erb!Fpr1,t-;,Qa/89-PceAF([H;%HfTmq%MAOkJ/omM&goPLonkfEMjAbAP:>(h,cfR=SLQ,2t#E+(BLXa=P">HXt4)
%CbiDVfIBI/QI$,H?lij-hf5MXOW!%fk#]q1U,GCQ7*u8FUQZ4_+iN[)e9N7e(DFK=#/Qp*N=n[dKQ8bYq&m92?A9E9&t$<6k)NPL
%%Gao4Ab#+bQ?s=(9U$UJ,NG9al9pEd5\qL*(1r+I%Od^a")<]0:$a4k+!q'-edFU=G2lLB%m9:In>YMX(0<A2;Y>=^[/9bWrjU1J
%S;qtXdWSmq$1!Zon_`BsJZQk<O,*0dmUc($s6/M2@h.bnUY:,=SFrI@HMm!8s)E@4qXc.pnrlQ=8Yc3Z;*J!@5A?@S1s/T4jX6&Y
%l$>1Gi^s+/oRF^Wmt^ofYlZN>*X34cH*kLH^PkKM=t>;V#tO5C^?70<JI['rrfFr$*&jZd#rdY'[X!][Z+$gn#1/]0au;2B]J[J'
%2a=33+!oK24Dn%:D*-qWhu&uRVD&/qK/iXD4@/lFSfe)1OA:%PM*"l1O$,sQpO.h#<i8KK+*W4g0mh?id/N4?1,k9"9]"5)P,*UR
%Kd>LEd@Lo:1q8#2dB8O/"O](E`M.mR5r"?%hS'e/[2o9bHh%K%d@fB=O,qs"R9sV,C>0PsD;L&]GiI?`D'Nu.bI`6J(V5g6nl0KS
%,5<ToCrLgR::l];&^s.>9ah1Vi`O,oR(6#?AliH@G1AH%'bh%3p,R/mJFVfaLfuisJVL?-nieAn8bu@F<%A4=6_l4eUpNp.j8iFF
%6HrP$+f?X6S\=(EduF:i-ehXNn.U3'p[Q.$AErX6O<U"9o1;5O;Tk9fScJM9XfBMjJe'e5p?aQ3\g?qpctT*C0]>mL.7Lblp@IC,
%T4>u=9a'6S&g/q(IqrKm`,P`io/\_)URBL?AjS_Ul!2JHL:I^kq;Hhg3G14&=/1%?%IYgS8H\u"QI:G:>1[ZT*(5KE2#rsr5S!Nl
%Mb'bpe+c'6SY,gj+u?]/h&m5NCRZp/$&`-=V$C9RUd+;35i(tbU78t58Z+Y(U[i3;Xhr[!ptC.qeodPShQ')[)R&nbP.Q%bGsuf2
%jB?TkFZmKKn>k!:S)9,6@h]pi"+]g6]PDL%jaG!C*-,ChY(+Ocmc4^o%[6PU+HH_N0Sp_S-ZI.?.l-D.0GMRr?9[,*nQ9=$#''1O
%_3;q)11Dt!JmUT5;##]smsoAQbjO?j#O`<3IYNCuFd>fGn0\>H./X@$JV[J#+8X]h\OKlc5_==f$Q(;-;uRleJ@c::Lf-^I_'cDd
%P@mGI)=Vm*/P_tse;@smDiG(-\6H2>&*hkaD0lM)]3qH_8Ep";V0+t?gV?GqkX$uEJqC?90jFDI+g$3qf,'6:^Vq)3YojtnRdh3p
%H\-P-h9D(&L?!PGRH`cCX<6QO$A)6^Hs%eQ$^8JP9F<-oJs$%\@*1Da_2G*A;RhQtg;2i#P,_'-cF[QdBSCpQr0`*X%K!ef"W>p-
%#X^ZI":<m>OOG)].1FouKP;9p\S!na$%jmj+dU=`8mk3NJO,4KTC2+PhVDd7=.'S]p0BW^mCVZQH^Q[h^j?m*'iKD)?YJY_IZm+$
%-faaGor4g*c%kLOBi8[O*S.L.4aFC)QP>nBb6\mjnNDA1Il6)A(t/4$5?XUjIfJ=S8.@L[RQkLs`V[%:G_e_@>&,N$5#2JT)Z1RF
%mJ>$o][ZqP^H?NK5"0DIj!).60(+'YVN_"KQ2$o_$BpuC$5[!f\/@/a9C"OIeoZa/h]+D4/htip)9J-SI!MIdq8\!&J%sMU?Le&V
%J(3BUL]%+cMtGoF+2%O:nk];Q\:"*4ch]43pm&MPb:?+*?17?nS(R2qDpM_%=1EI)ig)7slH.e)pFi/60`Th\5@/f<;67ODIIlSO
%cn!aApd0l^^US^cr-ufb,l,4l^L^jLs+3'+=8^Blm_A[#Hb%a`rjC8fAT;#YlZRmD2%8(f1PqCp1175'VcQpqM^fQLL<J[#T4q[0
%RnP!\*+G"9MJ.T/:=L(+cP`RS9,TZgf!^JRb;\Xe1jOP7"*J>7`Et4Y-A\P34QgFlgk[FTQP*HL,gFb3NjW6b\.N"H78RnhP4gol
%M!g4NhRGRLMO,Ugg=Ui6j^PtR;1.<SA^CsXhekiK#<T'LS(+6VKbBTM<Omu<m?\O[VBB9W<KbBn8%-l7.]On'jKj'X/$ZN%=nol\
%bJRb?`L>lJQ3]cMh&ifBPTMVeEkMM?p(HKKKHVQbLDtLagkW:.7J*dU'lLtU%.hbS/Y[/edD,gRpf_TVki3;5I+_^%]QuA#$5ZqL
%s,*;gib;Yn^RhdES!)i:E3@C,1XD8?_OLEk\-XJ>NMV)FPZBG??DT2f,*4mc29Nj'&>[s(o'._h9PF,Rq7%$g"r&%4]F'/OLASuW
%+9(@7-3PALa>/$,03LuIMd-s71o@A3/XMs\PCL%UDWHS3\LR&L'Q96-q]Ypf/0@\(10IN:bDM1XE\VrN4\nOSM"T1GQFG.@)2"G4
%Vho=>!h$*g*7@WJi>1,c>nM-E3eQS-UdH2;a8kF,55;Wq%WF,Fi09M^^7<uGW*X`_1)=G$OGAe)S6Vr7ks\oYP(C[$h4bBE4\re6
%9sPOBh.d\";;1bJ0R8\1;1:[kGi%n3No00Sml*BO*N*l5]\9/:c4IPHcl$-OM[V@'8E>[gk&221Ed'l7gh\6W.A-Ip:VY6rlB'+A
%*YhDN#8qMj7E9Nk(T\d<]33DV.:u(OO0p#kKmk7M8)@ei'd1E[eLo*-^r0cF@@T+Vic-mhaD@q5XBf5k:<&cjpnq_,YIlo:JR-UI
%F(r:D&Xm6R'Q148K%'Bd@-@?&c";FbZ_OSa>EAcMs+(.JLHf2Vq3u;5anY_OZZe(:"Ds)L*UdqAX(S_ihnAj^O'fQq4Vo3@^Y`+^
%!V2b1r3%2EG\!V7HGD.r8_ODc&K/&PF=0^N`L;bI]]+aF,`@bf34Xra,f?Ti*b?;69+#0)L4\&91'pmjLn:YQZu?TDb8//RM06"?
%/;V0"6O0]a-du$V.bah8$u;R"\Pt+k4#(2Q:Eg+q,U!'u_fJEAe-mA,23\-D%?I[d2C2g/pN<?+70@N2bbsmULZ@shh)s*g1A9e:
%J4(d-q\>t!C6sh>!gONh@:jM'>bqV*8b.;rV`fed:UR>`Ga1kMfBd#Tlrr_7;^s\CkdZrQF6G0H(HYBuHJQtbjnCn7\U(XK.<.3N
%;\EpU-V'-P1hcoR(@"pch*VcSMnb)J+<"O@@$J&WUTh=?'Km72VjQ5$q9B7lUj-DQejXRgLgbj!A6G(l#^:Y!=/UgeE@coN<M7in
%kkQc9_oT+pG?H&"WfJ8qrK-\=bRZcGMa`g'0gpT6)KF^c-pGR\Lp843V?fRkaRI-"1Ih#e9;J[H?$3_@6\J;^WuGBH(kN;iq^sO$
%<6LE0T-r&,jm'-B,4NM9<H1p@lLm>ZhUPhU]F85s*-)@rFueUjYBD?9*6YfRE60)9(e.Ae+j.%fp[e3dS#hLRO]Vg^-;L,A^oh7H
%\J4`-7GaL-e*rNA>uu)uSYrs(>5:>-I]aaZHLQX3PHR3%ndDZe`E7%8N9h!+Bot%q?Wr3L:$>h%3efIJ9e/(qJa'D5p;q%r0=/M>
%Rf0b3/na@X[+uiCIT[\Jh-FP>XQu:icEk-OXo,V?5?CX)HAUdnktCpWF#_7V.4nG%_&h/D$&8W?^<0Li;_<gNQXuP.(rWJA.4eZ$
%aXi];4YU#TFNC*o0YiQnHl;`h5i4t'178dJONA+rno$B\J\D\?%^;A6PtWLhpQU&60S)2Kk@MH)@fB>SLB.49C-UHu@Sl`Pj[3#=
%>R(?.OI!iGV]oUM[#;8>5o@U7&nO>kH0Q*%Bao_5=/^[g"LX0?lNQ)T0i"'':Bg2m(Oa%:b&+SM1D`SC6mi9h/OJu+>tie3A3e!6
%j!.qU(\q#c42cs<,6WBE^L<OcM.9_Te-Z:L54VFj=I*K:*jV<Wf7h)]Z5MB\28qqs<FeI<o0a&2)6L2Q_do*rf5T_(:?sHd5rdd/
%+bV1S,*[G9GpK#UAb]H7S2ZjNd*_dt5+gn;XoefQo(ch!bA%6QN,]_jhSAelICuZ!(ZC/Z\5[OMBSg/0as0o"\#('qautPE7oAK5
%bd!<m50[gZjX&Dql>$anRWdg-bNh\J>Y]^(3Ep&5SM"Xi4*BE9CcEMEG'<h[lXbacf9A81NtT_&a*6qTKA4B)Ar@[j(OO5*(hJne
%RFgKs1fK@Df$!1)R7r]mIp,o2M4L)QU8[p06WoL,eEZ=89(o;\n[uQgfmJJ=B0Ep5R5]L`i[1QU=+7PMjXnB`%IbD-\he4o9Sjn[
%7`)BO_:2@#'6lF9?,,mqBF=*Pc[G;^1s'tkj0C_'p/LX0-EpYA[l'ZNNI+1IchBSgh@Bs4_$`C;W]CBlT`)g&R.2^e(F?IM"'Qk+
%od2<H*mfLM.gFXn!A/FYA2JQs$YHQ#\%DsQd+cVI&Qh:+\s1h<LfRoZ7!-Kcd@r[U:@sX64T5fZ__\(l6'N>B,$H.%=Ff3P>#;s_
%auf*K(,[>Nr"d\S@R^4;!a8]*N`sI3BR,5/4:<&bB<7>@hdYdn`"Q`F.n#d6IFLEO"_m;.,'Z4cg(#1M_R)Z;EK=`u2=nf3J<nD1
%Ug@Xq$Sr7[aVN0b$!Hat4IRR2Ti\B"$tdW-P]>%4=;DT>3`[q-qFIStO(F/ck6Ka.=^nBi=_VIn$XqI90>R`nZ@53se/$(3C4<6L
%(>e#t`JjFSQ<aFo)5TKX($*f5BHG5%14$o?lI2LAIEY!i"gS1lj#1Kh$VTm7jhX'>'uU=>T\e[1=O_"%HQ5\]/5*Ls.$%k$RVInM
%3>n29KY5@1VUT*P(`XQKa[/rM10q8@Z*:CMg/jboYUO%0hMDWKi6mcl$u5Lr;(B?5(<`.jZs*9hGX'f@[]=JSU@KAK>#G_o6#S))
%1-A#P#-3!)@TIB?/Eg=](f&<c^$t=-"m=7\P$/!'F_!5,FhMiECYmTXjgRDM\U(je:IVR<5S-3q5Ql(qQj1LkH)eg$1=[n@R$lrq
%"^f7b<.<2E0JlcY*mB@sP3'h_1ZL`P5[JgTN$FQtd8DN7dQgdb9O:h=![4C\aQ5P#cju\EZ=(h7LH5U)(P&co5oXZqJ:A6?hRd>^
%>VHAb0Z+DJ`ABS)mSfE8;+^%md#^P@3*(d``lYSR1qkn^pt9W#6HmU)c4YW+O+S#2d"j2Q%'cNX"Lc7C4N3r6)I6ra,=9.'NK9"*
%:m],W+`\j49io5g1rcLFrU![VJb5X"`?D,GAT\)fN1Y&qcR!b/hq2bTT#j'@oTVS7NAM:[0UH@ecW=76\38@2T(YO`'EK-A]H7R;
%;X-s6=lN6.G-N31VJ#m[S.RRoB_);kO8''RGk0W3NPrbNB^u\WM_*.^AcL\CLc%&&OJ`'94NlG"=8i`AO#K!2J69EY0f@8W@Z?T5
%nWX+i$\KFY.g_"KK8f^'/M5!J(JcU([aK]#%-@&MP26CoRd=@tS>l*7AhK0/(^tpn1(Z0p5'&]L%A_f`E]g0#Ob(^HU1ZYDcsZC1
%AGJL%mVloQ4qO$\XBY4Z&BoANDDnSTTIbBb>b2Q:Q(3tN,m>16-t+G9R2*[#CYm+\JoL]Z`,PIh+C=)jVc*02+MFV&kOd8s3;B4t
%`/L+p6.)fD/c!!>ahc%4:(Jj:a>42LSfU:-G7>cm&#-hqUl1W_7"gg(cHHjB$7H+Ma,stk0Le$iE_eJ](niPaZ[\8d6kFsfFO(RD
%oL'@8V?u4dApNX-a4'[uM*a&X1ja?km]qcRYi*V`6qd;K1Pn%:Hb/^rOP.EJ=8(COGYT,C/VlhW<mD8j0r)q`H;h+^%8RGrc-O\<
%TCP.%6i#;R#GGC6%M@d\+IkI'(h=Y)@AWO"Ybqt41Wp)rHC>JYjISKPQS'tr='tH669JQ%"FKi]24HNhHb+[Krub@/-p>c.,t&u+
%J7IE2Z\X)IY7jRs@6$?XZZ)$Ep8157,:1fkeK/;CG53&^m#008#k)0-%u(>M@bR5CbQ1A*Hs@,C)l,OqD,[Zf(K5"@5V^S`9D;@r
%e`'Tje0?,)KFf_oL.@=$fUke*ck)Tqa(aKrM1[EQkR2r]`.:Fo1e]/7mRq#<:04?;2&+$ZiB+3VQK1$)Td?!0TeX#;bG$IqaJZ)M
%jLKb>hVDr0%l!m,oVCAS%t0TT26ojp&poWWnRVURStnh^iQ-gjH^6^KnUuG2<LT@2CS'etB]p0OG#ORHH&ta?p-Ii/l<(?Q:Wl^5
%ae#J<%6Xe63@iN\P1jW7/MTG)3Tm9EjrME)fD_4&S?@l+V#g18FX>&e*U?="cSa:[aA];jX]IU18$BXm`%JVKY.5<(6ng]TOj/-B
%?do7+meYFN5/?ONqFQ1DoJJIoW/Z8fGttVkShh/HSgT7!6TCRu$2#K+6_'_qr%kT<a7MJ+gL/BFF$4.Id9Y'9$Zr!R;=TA`kiR3.
%T0,jY.UmHqOR@Ain'1<CiH.-n2Fj]]3g7c_-7"I,Y7mV9Q>q,TiI$(AFZt8Jmtk:L%?Bd]k7YD-a>aakO7#^$021Tu?74c,n8D@F
%i;.J;2C4h/GS6LX\2n\tEa<hZ4kK)'L@`N!B@kK+iFM]o$I.aCL`8auOfs4V-&+lujtV3\Z`6NIflk0tR?AG[B:SYE&7tq5Lo[j2
%Z)^X=@cDqmKu-s!ZNMWS>YeFDac,XlEcj:1O"`Z-Ib#Sq2]a])CK1&t^^O6s5b*ta%TNqE3FZH:4YlsYf'/j=D[gjti@&31<FiHj
%CPFfu%'!ON>`!jYrIA[</8R_'=>%qHi.Po7j@lh3CY4CbNmMJ(FQ.Vcd$=J;oMn]'/Kf"%cu17,XRQF5P9Ne>"0i0[4q'L4%Ef^^
%EK2_>_DT8<#fu*_.G$"7)Een2"%$SU*bk>)%i,+@ern&>I6p;GJgCUqRO]L`Ck&]C+R&n*09f$;QpK`co.dIAo`KVB9WkN0fSZC)
%"=<'O2FbXU%i>i`UV`dbEoX83:"M*PO%<Rsd!=V3V)5l$jRuI+J\17E=V6f+qHuui4rt;s?,qbg!hpu];Jt0]hb3<5$4N[3d1U^h
%%5lT+JnnWn)`(%t8#LMBd>W-J0!J"&M(VMW#@9P^?!Gnqj(Yb]h:ZU'msatQrKogD+W1['%0RTVP9Ds*^]tEGT7\=*\kc"I0+,kH
%&Np;Mn^T.A]a3KAF[^BZH,7BoKMu&g?\Xb)#E+jE>8WPp\mpgPFonfU9gd,8G;i8TA.L_?=2Qp9-opo4*2/8K(n1ufY/J\Ol@R+`
%<MOb1A0NTEEf""@44WnLda8MFQnes^L=nLY],A*_JO[?1lLufYd>R_9*n;Q8B=(C7_+H7'#Zf+>n7(,)3'1]u9>"Uk!rAk54q01k
%qIpH#Q4FF(V0Q($p4GX3V"5/O,)@T3-d`50*LelLa`-N-;jBu`2[jUG;9MhpIHnV25.)o/&^0?KW%<!maqjAW5QM=fC,+]ZHW*Mi
%DDrL?P3sd:J9-fB)m#*UrF9\si<e9\*f3b+='&j6IQGA!@`N#(p:rW0]l<egHqKaXjH(27TNG8_=j+su/,Pm_EC(HWe5M(EW>bu7
%&@u)t1PqY^Deq>%2a9C9I`bSi:rY0[D]&:Tb$JA1LPAV+^L?77!K%LE/8J40hNSjb,:G&+e5.K1/6cac@TT+uR^f=#]K/E+(P1.[
%<L;@;IXA-SI"^2+os:7HK7'7fYV(hq8M'#)?&Sq,EDk(c%Em[^,')<s;&iLg28DNU_J1IA+QDgiY:9""g8S!Z;i.IUmgO^X=>>8!
%qe_e>Dp;LgL[pHH4m%%oM"u45Hf/2\j;Hs@35]c;>bW'R)IB.LNi6ciC2f$o,K*:fXEQCmCU)I@fh#XS[8Wt__A)@';eJWoUiO2L
%8Y5egg[37?o+A(1a3T'X%ga]LW+[dQIlt+t`JEcpL51LGC+P%'dCKDe>-,KM,gY:m.AbU:6c(k[WO"&DX%m0A`"j1mSV^BY%G/7k
%#qTfL2s8H:@sLk2*qVr1(/.[d(6^":rXO+lH7&Ai(>9eP<%UXO3SYWPO47f/^]EnC'pt/QLj*7U94Pop+R`0d#,6\2f-'2r"tFGg
%M0[-'e'+kFhU+6HR6WOS42WY\k(S,Z9uO%rLV6(>VK!&la7Bn)20&'j`C22Xa04\ibE]o]nJ=6.47jQM:f8Z3J`^4f!O&&=oI5&L
%h`k.r;aZ2GTDESb?Z\>.-LNemQ*%d]>-ZH^oS^:kg5dPXF1_6MhUV:?Ib=>n,WL%GkMjFl0!V-G*-.&_-=^a@AGVNm7)TZ'VhPCr
%?X6BW?..#g@TiKlOY3QGRY@Ng7GBh=4`>5HS$tWZ\phqg[R9OD_`3a_/8hTm8>]MUY(HW6AS%"\n-Fh)#0V95.-I07RjOkKEXeq$
%$.8<mlH9?[c)Ius77[qs[ac&2<Z^Es]#;fY^UMm8hZ)s/d=_FSZ&]4!`l'(<I&d[K0um[uQNgjkPXNK'[/k64:0"/t*5M1k[)8sT
%J;lBhN2o'K9$B-?qLI,AOoMZ</KjMF&N87_`726"WFq1jm8!=iX@N=`FrBMM8cYi>F[[;JNt4N,F@dt!(\?-*(-C`9]rrmdJ<gHt
%QrO2d@[<3X$*8jkrf>;('2.<sNG3L&38>&im6q)=8Z5TiOT<0dFks5;#p;+"JN5@r5fP$+bF[21Ki<#4A%Y>42ut3hAs!),Q\;#g
%QO0>^ji5M"!C/"Ld]k8&I"r8"?Y':@CVUkKQBfu,^q6fK<%!4HN&U9OoKJ:'4+JAZ1SF*qeWj6A3`'Wd1d7OZS4Wri0ZORKrMu>$
%!1\A('"as13Q8i5C$uG&Y]qcrQkDL2mqjqPpHLaOIaF;-i95IEfQ*?ZU^lgbi`Q83ft\TQ8Q*hK1/!Q3)8QK_1Ka""!j&Gk`(i1/
%s/D\,!1Z*>P5VCZ4E#.]2BUoS=\nM&On9J_/^G")&rUc4en'I(`<MX-%K"nrqbo7m(.%r#U"9=HcBcDOqV6k!M1`c^<bI1NhR]^Y
%9F&erRgnO*G\<)/om;Y[:Js*T6fPar?m=TBiP:,bc,tSX&iWGg-7!K[%STFK9\A`o\61sK+`Xi9?t/,-rP4GMRfrp.'K7NJ-7I/4
%#^/nsX<Esu\626S0l\uO\7=O29OL3HAg,!D`6BVJ,&S_=k<mI.Jr,:FPnTZ"EO26E,2uWhJKs/d7DX_7RhZ)?''Bu5'+m/r$8t0)
%X=8*NS/2o631Q<MltAA^/!t980.`K(3%ll9_/N^b0X5S'>VMjj?<sc[iF[AOKYl"1JdI.#"U5n[DAF'_.,:mX=Qt%51"`1=?=YaP
%E3m\p,2m.%_2a2<FTrKc2[^'A'(5;VHr%W1nG#'XmNa^cg4]/qJ=BU?lp/'`.'VEN/]$^f8^>,YPLpF_Za5L/o8E$M\9W.nG4PaI
%Y=DC"Y7Cd!mqB4pfJ%+Oo66GR/-abBE3j.a27'<7;b'c,7])`p#%:_a)9Qf%ndL8B2`=mb>FupA5N@NHes5YkS55B)a-WY?d>Fe*
%>3U?+_]q<-n7!`LkQ7'$fZjppKr%bpI8,Q(F9O!j/<_V?Sh`A`'B+&`ZdH#FcJ,H+n@fr,l"PbI+OC"THAeA(auTSB'Z$h#ER<\j
%`-fK].f/+aUje5(#AHbAYfAl4faqq3:$9g!`3/sl,D@I>=qQ/IXM>;okGt&i:7\jQ)pUs@SR"JGq5sVrT,$V5UT+,gg2LhNM%NK-
%XU+Fj=O)K0V[H?3"!"nj4?9<:R13;m=R)ll-*aM>dWb5S#urXZ1Qf&\XLDQe-$E;'^"(IO@<HblX=%kM]@eN5TJ1Xt?&A*;%:qIj
%0liT\@uIar@4[6u$m7_sSf8;-*mU<NM-Y6VIT,#P6&XS;@Wq]l:&Sq,q5nq;dkb,cf2)4Ak2nOh)]d@Ci&%1*?<rD=pgTUK6<Q0T
%?BbjD_<N'hadQTpC^n4Ikb&RUCeF&o1WD8jFE(Ah#gJD$2,u?\J_ceS4$AjPFT%Ti(]$M3J88_o/g3MI<YYDq8do*5d[KaF/?+$W
%(2[@'1u_eM%\PENZX%blnEap^m%Q:?D;p;c7C]G5&E\u6HqfeeGN[XsDDn!q0`/G1dN<=f+qc-gOLPj0;"`>)$+$dI83r*);_N)Z
%])#d``:hrW9C0SDpA/TYMO!$n]stk\2*HGSb4NtQh0V@\bL>(ng:9CrhNLOo9j9j6:Nk%^7eNkg8q:NrF%YPZ*EA<2oXG)pDpf%J
%]jhkGg)]GqcXssjFEJk9UFEG5fm,3h0S-Bq*FV:NBV3m4_+YX1D9Z[Aj5/2VoDMc)Ot6*3IS5r5-gO.=YRRWJ(e*Mai:7jbXcK5%
%2"-U,iG)hdG;dB4)!AV<@+UqF9r1Q=m\cYf<Um7cp(Q'"l/$$iH2k4WlNdAVVT8?;NCAKX1tWD*IC4tFd6SZimTpAj_*9d',==G1
%$HuO>L+ellZU7Z:Vk./QQaAQH3:_&AX"Qr#;EnI9-$H<GgM/\iCNan"TKe`r%%UR]e0dqcbE>=^Ag"\o(j=9;5ZPK+P.8;4_M#Uf
%g:86$>o;b=VSoVt]h&k^=TbVBl3mg(Tq<rP!]tJ[ghc0J5J+LQbTCJJ1=1*hD\DZ8oa/R.@V(ed44''5\=Tq&$eErea?a;KHT#d8
%P0XRJ$T>-4VSoVu:Gm,kA[+90M0S4ZFB+[ODkXYL)U:j?SR"JG-X27T=\>.P9DJ6_]<jXW7(&[6MkmW_PX1kT,\E!GB3Ul8`Adr5
%e>]c'Z&?nPO,E&LOWSLa-5)V<XfK%o\_jUIhJ-_"YkkqWd.IVC`!X$s;Y]qlo:+R8h)8q*+Dq<c3O2j1qe2ZV?oJ(!>cTegG=Sc-
%?`7j1+:g5h(oY(*j"ThG`cTD2&>dbiU`6D+^_op9G6KQ&+l6isG9L78??g>jCRJ.F3&e,f7,MipD?R`ca)Af$bJ[thL#jpPk0r9O
%6b2<)>1)8!mV4r."EIT%*Y9\Zj1$&TC2#49G8o1q.4l5m/SuoL%E+6&ZD#8H`#TP*)&A$t(a)3tG7Z]`5k-O72WbodbgA=m%/6MM
%s![$_&HaC%mYp(1;@BLWE3o3N/fXKUkn/BV+[(D7P=qD#@Q1ksG-hBb..r`AjEbrZW9eZ?1O=E(Q8b9lDB1ld^@+Vnr@in^326Sk
%L(1^W`=C]F@*t+oNnd+LK>5aJD.L/MN?#DZ$=;<.Z=)GJ"/9NmUB$C^Td/Trm5"<C'8qiqJ/>a^[UmSlQ:ADAJK4.^_aZZ<2-)f0
%7E5IC+'6PM@mRDOQ3Q9i&_Rcac8?X^hYY0!8%TE>=G%.-XNG[B>SPr]6I>8CPSXTe>;$ougCP>='RRS.HOWXOhX:rf`^jrl/EAZ@
%_!g9uCQ(5R'5t\PekI/%mM[a7OX,]fPG5RO/(CsTT+]4UCnPPHY1_#Rf=dS[K3SZP&&>;faRpIA%_7$N>T[YbkcTlj[3;]>e54R=
%P<+8qRto*DZo(<,XhNHso`Rcjr@Gc&qRiU.O^9%GML&RsN4,=%A\rTEf$C+h>L/?q?Rb(DBYC2ONOGe^"AbekTj;00`Q2V%c%9'@
%qHVA&9Yh4CG,[j']q^FQ[`e'rC:bi0Y+)k;*^/8(m)45:'?'^s-?U^nVI2ZVe'ZSm)d2<XW^^eWoM[7kHn`6G5;(UXbtDe2B^`ul
%ddpp\3;'p1D`"*)41TgIp!fYl,$Eq1V-[%%5N@HP1Mdu&T5k-0WrZ)!&9BbQRakO]9u.^m]VGaY?6'n=H<ouuTO,+hc/t"48(Z(r
%*Z]5KjQSVmZjRoA/Fu;U3#rQii#)8i2rM%k4tVbbc,:;WapE\`"WN,?8IarI4#/M^]\FA[4`AI^q3-%N=&8O`"<TDsO^-lbUiM;4
%#)P\(5eG7&P-U,Bf(0WN&h3NNgQH`aFd!d$HCBEpgGl$iJXd`@9QFHXK2\rMEq-_bn*9F1rn0K[O2q)?2tHIKD@H1,qFg/=o8hQR
%kRudZ=-*^P/$S(I`M.(F*SL`pJb!Pb&'8'.rQhoXOC=ITe89j9P(%rc!nsfX]DbLo]YV?Gp[N^shSoNENIr'Z'r?#6@P_N?1mlEk
%GIiA7qcRKb?oJ:UU4p?)+O$%d*)b9UJ9i3c!>*<r)'QdrCD?80.@?2==KoIR8@;&,i#-^q4h`lU0]CN6SURK[C![c(d5UW*Q/s=.
%JSSY,5l=7*#dNid1#O*dB')"i]9jd%L@+NHRLTotnr#c[R93!oY519JTJRJ[Fm(tR$PJ8lJtC[m6&P!mPcd2a()lKs"-uapWl2H0
%+`K'V?(XiWL/AS?&I.+m&<Ymn+B`L.hj%`h&`lXaChIaj5u11"W2/p`'G*&6$cT'nl-t<V7EX3a!Q3/u=00EAWQ10CoreU,o+hCO
%ng[ftNTU9D"YFuQEqi^]`R>Gdq#\[#5nR+^VA.:lOlR-DZ-Gs!-K]VI'5q6Y'f!%`'q$\o)Oi?t>-(X'M@.N+6[m[UZI$VtLOHBF
%lm6(+@iZX;<Z-QQ`&]d)SI4!W3a4_TOrtRAh6<pi0!hLORnc*^m@)O2BC_JCCif2Wdm399QP$a*`'hdV(P8SEQPoU4-p`V%I8h`:
%6EGnPE%q(IUBf/^QLkQ_hR+9,B7-6P^8W;<'2,RF@hU2-1\4^L#Lt$8NZoqKP>egBjIrBpRftJt*S.I!=V"di"7]t;@G55C%p.37
%:S8rp_'hnG.o[2o-&rH)F<X"[*V47n\t#fc,SDDr/0W-Ko"uc<_BL@o8IpSI&]Pl*2<uei4*6c!`,Q'!41*]TkhdF=LDMZL(!IIi
%kG:`+i)ZTGNmnQtB3L!:`^&)3H00:43irMhk(`VeFP)\e)qjN+nJo4Rb#a=I6IH>$/`CG@@B9_9F(Qe4LXiCi("DjPV"@45fSW$!
%!qI]]]TBDo="jga#\l?L,4VKqg(YCQUg*O[Y[8gTRYf+WS.I5cWRTG^8;<e`2"=[8KKL_CV!RBngVY<h(kJ<&cq!QY$=7j6UfSo)
%/7,Vp+=K[@=Z^`N6'1Si&1/6"g!ZN?n[m(jE`aJJUrc@F$[%t7lMtaSg$s.`#$aYpH%7Q*:L)k:+e$r=VYD+qUYATcDN>V+HEHE;
%ASbcXD?UaUIp`N`7JssD+-R*G;G=e3?l^-DCdA^8f2:B:3eH:;g<hZ;,OqF3NJfP1V/A_LciWETQ8X>s$5&PH35)%[5`BV^]5!m^
%cB3[XUJ?&0Mb8P'!HAF7l,+\NXsg:iT_`Y.6n"BWK2hTeisTK2'j&_?0fMI@*Y_uun>5MVl_GbDI40sgP7=Euc-]NXL91a$=>`%G
%C<D%6bRYk#QjVLC,mV[gOOb+l;-%G^./;(n5#94V4>]RX@0!ZC4T-"rE!*:s'UQ7/2]Fl1a^<%?F5]ei<LIE_JpeI(5L#E+Ue/=<
%1>4]g4lS8lWf^h2=A`j32)`^9d;;QBWDS0l$,&,rR_,k0Lk)<Po5_mUW&u;JW4G7HJ./E'gU^r-ps@!MdYF#&X2?225QYpTQE;?B
%Pr78;\l)S\\k).F4p7UOLW9%u`\l3]O"A@BTdnb%=@PaL@8l#]BmeuZS%s;iooJ0L"Ga]lREL9A(54cpHKIin.nZco-ob$\'[3/#
%J5\"t^:*W$l#j'rh,[/Oljj0-:`lWZJ/Ot/Gj]I"Y.NO!Rg!a`(1XZOruec*:%J4uQS_G]X<g5PL/;ZQ7nCTuX6SkT+s(ELmH^Gj
%&?K\[S/fo'Vr'8h/'eQDl%T)kReB/PWj:h&Kdab5WI:R!W:JAL+YFEW=Fj<#MZo/;Mm\0TSTt"eoa=NY<r@i,/KkHoUC3/RRJRc@
%AC^/Ue+"k;QHO/%BmYMi#`YsFmR7K2d(N$I+YOSn*Ks>B7;@TO)\V*d4cc1p#cLaK*kkOp\lRPFa_f/B%$bkk$UHI7f.k4E8ggVS
%_$'5oAE`9rKW.p-IPXMth_"7t@4?E'W=7(uo6C"Ppu=bJ"<f0oKO9hVK]#u+HIFSQHJi6p5=rjSp).7D4si7*_U=]Ol-@P$^?lQ'
%iJ;l?RYRZ$bJ_kNb6O>-gNhFo=C*WYM.@/e0K>c;Md,SEDOM_^4O5j8)AEakU$PN/l*cCW+=K*ei1bOrb;2p=9Er[=5q&*%k[K.b
%LRs89V]GVYVWNJ*"YLK-;ktRgZm--sb`:[?@7H86eJs,3,O66dRJLT?Q^u\*aHmV-!bh_LR`o]QK!Uj^&fJk0eP^TT!Gi'][O&KI
%O:2b<)8[6n4b8k?GZ1c+c6<EqZ$P8SX$om>ffh8bi&K1^knmAb;J;;X_8r,/%8<kiqoqA+3YT5uTYu*r"Nh;J$2"g@Vj0Vf(Qgu<
%0/^dH2ET?]5Z^<Kl,sd)Z\$5TWN&=4(Ic5ICZmJtC.8.ElhJnsdHZN2jTGar![\<Yh,uCBaR-#kK_XVYifZK`XWdq2//IG><ZDJC
%I%+L[J@`W`L22Zb>i@rj&?!LR"K;0f/+AdHF!D"FYM=:&6QH>3C:<AF)pi2'bspjXGVie7\?3q*hD-Nh)g(,^P:E,9\;+1LHt6j,
%9%g*E&R2,3'5-<02IHi3<*BKbb`8M.0*NG/k+LsUM_qsH7t1[DAf3;@H_\=5l^R'geH)5WD;]>s/`<BP%1rFJh1+R_`5'h%6Q#(0
%UDhW=PAja>.u'!:'?OIHI#(5?C#I[K&Jg5Y2iA_5N"H8KEouI;mm'[(=AJP1C=i*0H-As3lK-%(_]K!nF@q,4US,bc!`/[6)VO.`
%6iktT!X3,8_;;8^+88>[%`gH._+0:g`Llha$/hkb#LM8'$Q;.E[Q?cPgC_gDm]Vj[7qX'!_TJs[*82&p?5DM:.*R>AHV2mEa/1h#
%1poBbB%!ja5]Xm1`G'mg5hKOZXOCjNdJ->V)TJ*Z4^<S)+%UKK]jWBoblf_<<)3ma3Wu9t:"aM)Jll.5QWA)TaClHc^cE3QruQVM
%^*DDbat_)=k#2"gRZX=15_?^^8e_>SMPe\P4AD/4A'lDL/B0=[1ANE)4B;m`VT+pm#C?p](\PlMe=a*4(=0,Z9$9#j%lm]mSWt=U
%1;5kqGURcYmMlXJs#o0_mR]S]_537D8Ce8F;!MuKAX-D`kJEs%#In66$i4g3K.Fk:PXPc%'+@4/$ljI\/WVZg_U:@UOr&"_Wj".B
%fhe.lF4@_6Wh565H>]V\ZQ/Bt(l=OQ*@6=p9oElG&Gmo*#]VF^R5?GN(F1:IRLj0u#!e?^56<+NgugC:$Wk>s.f&o5)EjR#-s9!1
%dtH<ifi]nCpOb5gdYYQr!V"j4L&/>@kbG#XQ9A8pqC@s_1p*]fj:'heq&#"1B4#s^BGg<qo.a?O!JR*:$!IhM>=1BEY'c0og8Xie
%_0RZfkQ+W+(1;lq.EOa,U018.NBq8dWV+Z!@:m2['_.l%1_g0QdU'=[!=U&^Rl$rI8faTqk\(`D62<t(5:2]80:H]DZ+ROoVe"jp
%(gpjoqZ_Ue,4]iG@]ZMje'0bS*+YA4R`c-HX^OK$9..Dd:_1rk(Z-Adf-rR,CK-[Ta-2a]i,9Y/TPSB1"SUtKK:&EaSY`3]MZ2'C
%4@Ytm)09#(\o1!r787T[F=3Q3PDs2:30M."a\jhqDUGE#6XUaO=:J]SGdgRY)J>aYf&aH_gf-uP`S3YN8L[+7Z2ZC$_0B3%$(Y_k
%I]/W22)^C^':2E<>YZT%S7Qmr)B#Kne7/4nlY-Si7NfsZ>!pI*#kNWg=9P`D5q;V7,Z,4AJ'@r0(1c)O[OSU8)tPct":1c7P9s>$
%"UgV@=NIlgHZ[]*5$35_ibpZCI9>Ih0O'IYI4HZ'eR@'j\YLB#iuFRY22*id-;Tj.&d?(g(pPSb"as@_!N;b<Bk2c:Pfo^)Qk??.
%9NU'O6Ye3&f9*H^>U^5,K^p-/]sZ`\F8PJ^-h]hARKd2qW^\Y#1O%aP"(7YEe*7i7a?^pi4,WQ)"=4^%VJn5ebD;Ui+[;qi*>k^c
%@""&&_bM'#FIEI/I2o?XA4VN$X/YfSImGn"dL`cpZsk$tk-n3<W%;]QRrcqQMGOP`C%*J&O_r^=C=Y^M#2Ud7Vg66b-SbfHqLBP;
%_ifVQ1MAOD#Cm.&ZGF0WHTXq?UN436'Y2[.ofV)h@V@e!D#.WPO@XauiLVg'.;eo#\MI:1@fo+7&C5d65]$nP$(^$TJ0.L\C.Oe)
%XgB/pZ,J0k*Ou>a+^>,`"Oq*)gb4V[!*6(,r;^%*>^H9jjE,&%&q.[]H4Eg%<,B[nAo[(*-\789rCe=s\C1tIm624Sbb)ONr-M,8
%Z[0'.XMN'[!Q-iJXc($$+t_2IOqBd-+i%JC`Z`PVm$KS2\KdtB^[Wm"Bc?;O#`7W<dQj*A>=ua/JCph.8:Q,ba^#.F=9p2$8$%pQ
%E#N7Ek'/mS2*;[dkM`$Xa*_]6o0Roc+=f\$I#uZagTZgIJ_<P!h[jI38]V+fOPd%,]gNQPj.n=aj8pcL6P($oA3f'p1hOmtW?Ok6
%:Hp\9^<XT.7NRo^8FbX$ETg:'8M*:g8*7Un1LX`+oPeJ@+eGSXjmSPhhoQibg;23FT#-*\(fg7n!X*sZRR#qB66<'<*39&YUMG1p
%C&rS?7R_$72CrEQcBg7\PpB)u`]OK0jXpV'<b3hLSS8f#:oB7R-+*b!l`(5CnFl(s@CBf-.Z!;K9'n2[OQr$,9/HU*Nd3`:SK?T5
%.l;=3]5\<8+9ip\:Q:A+3]Bb?8NAdc`l:<E\Z?ZZh=rKL_dsk&'LH%AF+]j;L7qOJSSVsP0nMJ5D2nd/&q[Q%@ZD)hn-@,Y\[0>j
%^r]B&:=&>]46$H($F-B,Ym833"Q[iZB&6t>BWTmpC@S."Ae`RI\jK"a21NtU_QELt4K_fuUmfk[#HSV1K<6s4M\s$,2taCK=Zq$k
%,T)'4JZ)@9R[rN$_H+8/$UYsH\X15tT\X4b0JDI\b[E7BX9PcY%HPoYJXR$U5Htp*2?Qk[?:[6CfHK"hn/lo5Nu8mj'WXS]-::4f
%;8Y(.[oSM-V8.!k7hB^g5Tr?ZKe7%9c<;s/#7>bK]&3r=DNjaWi'jK74uBlO1p.3s!>[`nC$&5i'?8dgmY7Fq_7DE!%Bj`b$^V%9
%!Wc-CAQg&ag+r^?0VDpjm0tE84]X(87Ih.lCNaJ#YYe[Dlc#nYgIC+Ol?A7^UaV=gk;:Fnj]NbFl\;KCik?U0K>a=d7<a1!fWaR!
%T*CT]KR0E$U9;L.7>*2T)2=`+$=n?sR=GRhd'6&h628e4U(ZJ7\iM=o&gJ;d!+lQb5k\ju"h78d`a/<abZJ#!k%SlA(e>=UX?eA*
%+^e!T7"aY\HVOk#,5iILs,E>aCdSk_>cWJ5-7R8\g+g>BnqfkK2Ft;M+Dj^/0%UO)G+5QeYV<QTHoP_s$IgWljUR85V5VHj#\\5;
%X\9E5Kn2R&np)-o=6($.=u+/1(^/l@)OGT"f9M!M:db<Z^%<\(6g46.1orAo#,6&TW'ZBSF+Y^^2t>GhMo3l3fg!9!Ya.!o`CQ3'
%=g3G?\DVgT[on[b?;@kc%&P8gR]9u3Bd/*J?VsNb'2BD3CErFc$U(F)l1RCC=#+i)k&X%HY,,FMZA='Q.._GGBKE"K3#n]7W;Tn;
%F=&IgY8RnO%nBp)^_B'mY"`hhnesK,@(%Oj)3j>_,q?.3PRca+8c9%rQGik-CmaMcNU-^Ji0b?&M01'^n4[Z;=;cA/)#o4_N7B&u
%>F6<=d;2#!_.Q['3H-WmL8h'NWL\4d<^_YZJ;s2nBS$?YX:'_7<i/3#D)jGd*K,@i3/J*W):=Qi+9Z:c\S2%`H8WouC"*SV$*IYE
%'8bT(7<S!^3E>dBTmb=e#nH08\d2-JNF*7rmO+<"jk8l>RfF60pTZRO%Utsh[=Ju)^n:FE]eKts\SZAOBe+WnmP=qi*cGc:SM3U*
%_Ratt*4bANXPmj<(,8`i8%B0/1fk:@9LmQU%XS8/NjgMpO3fArYD_PhO#4%q+u4FZM"8p0oK8IBG8qffbauF\&\Xga>J;eg%9O1G
%jntg[T<mZYP^>lBg/(*=0.iO`qMG7ROm>=iMHS#%;[Ns>)HeB?`^`5F9I%o?rF*HC(JJb0S*pF!#q.&`.h'au;aj7i#*Y<W7.7"\
%Q./d4R8d5LXePfOepZOY@Y"p7MT90ZS6T_c<>&4TonrXl1IRWgG+,lGA_%,@\;(['@IH4]*0+bV-:<YecqcsI#%mqL'1*I*G#p;T
%q8+mWIL?MoW#<d)4>TuG=/9Ls131`^+i3@b8cW2he<OYqQ50CRWQ+>URSb59ms<l]B:_Sn.pBjr!kL<%+>?8N37rh>Zf`Bh80CC_
%[ZLtZ'h+aXFTS^40Rb%1P$qf9&8u@:>h8gHJ4.cjFQs8I:&`phe.oJLRaK7$H$F1:Kb$@5@%]"9-;I"SL^^D/'LM)>VG'BI;[R?V
%khr.KlZF+3EJEml&PAai9r]mB_a>[6G*di#A@tc'!rT1GrMDi+cgj@#k@Q:l:e7^-E/=5p)eKe,/5WrLA.526]]Yu6)dVl.'$RgI
%1k,]\.u%lA$Do'f-M!3PSK`?@6N?"-'#OkA,X*,)Kk$:MB=.a`ki[9h_FU;R3`n/08X60g<XQ??,^n/51a]HrE=$al1_\&\$3m`N
%r\hP$+obT@l%S_:-D94"=,08')V&(\))[<l@VQtG";nM[.Mr+s@7a.6Y'A4X6E'oJNMmWcAH4*$W/nhYE\aHn!TWheb`#Y>Zm(Vh
%Adl<oMFnO^VtaoO/JEDLk^:ilj/1Rubs`'_jQ!`a+RNL;HCT8&T^9PN2\o;Y,_4T'Q\`!h'$CE$Aj$Y<*t;WJc-lqpJ@$6t3,@Gf
%ZD8HC0Y3,=S7ZSOMSgo8_/2TP_8meo2&GsK&JL]'p39m5&o_dQ9/na>-1f&a!JCRu#!hN&>Zk%3Po:'?%DbklU2k!HOAl[(le6VU
%,M1j9k<<+g-C1p-8%$=-(N-RZ"qYF2o16Ot+A&:.:g2<Z9eeMKkKX46=+!rWg,.5\%p_QlJa&[,hHZpR$u$q!RdNCh'@$]=1Q<iN
%o'E9HoA6uOkg$3r5CV'ER".s<RNf)![40X7cMh6VjL)-[*J8TlmPMoX65^^*0N6F5):]pu\g(N*;$/P=KGT7\+=k=IFBDBT"6IB.
%*k$X:oq@!lGT^Ao*.f&<4oc)s5sSJ(&-VVCcqckQit8Iqf7&#'>W335o)kRc5krK-C'(W$mDn7V`iQO@6't0L]&ulI4X(*M70Wjq
%N)R;-(8;9\O0XsF[P#WW3)bC7@*NYYVG5S4B/T;eXFUJS6g\bG@_V)nSHqUhR1k+8$WKe<Q,LJSVBHWR*)QNiB["2jQK76V?\gU[
%#?B%E0e=kO6/[o[h1=m1*%,Ji1Srke/9G*\K[CeG*EoJ(jrM*.8D--75l#?'5enU#EQ.8#=)Ra'?N=IRjP0^Rjfa.-md83LJ%5FS
%p@cW"kMO#Mm@/=Gd.k2tb]c[13KYnfb)jFi(Fr6(*,]OLUF?HQd&%8GS+RaKGS*;^fs^Nb<.^9Jf-$6BP/GFkQsa,Y8DQ:^eELCY
%_FC\Bg,TE]df"6DR2f5s0WQ3\1sn9GeF0\*=Okj'4$QMh:/jtSOjN\,^:Wai<[0nmJkQEH3'F]X5Ua:_6ObpWEu`HBR)&d^=(`Sc
%YX2$f%je=QBjM/[ZpY'1C96[gBa%R>%>"DS<J-5Y@6jN*W-N'DBbGJ%l9c0A87`G$K8a'?O3'?b$?rB9X?1&*8r_-?@c\.(qmOH.
%i4PT'3fj)];Y+H_O6C<]#_91UT^asB@sbe_<VF+>r/85,LnZ_eD*rS7mp\"U(mDk;1'-EH"jCDP2ASUH#ljue5`+)$a3`b_bsSL`
%go:U0l_WutBH@?ek1W>'(ULgmT"Sj(Yo8a[D2?<@):uI3klY"O+<P2'`i/YiXg)c0Qp!tgR#kpNk>bY&0;NL$32U%>(^X9-0r`U#
%a#Ts@O;:m@_t56K7$OL@)8@Kh+0*e'e5("BPndEu\A854fpNTWHp.0*FDnRPgeNJ3."iG<pHfjh#TCL;ga<CO/*RmJ7i5_/FBoIZ
%>bHkP6<;A4"fuE)%(5o[1+`J_Nk--;`C6(fX9m,t_eKKKD<@%i'D_GiTbHZ^J<g5tT#K8dE7AN''NeNt*tA!p35aS8->Y_fL<:e+
%Hg#QL9?+C2(3jeK-q#n^$R>kj0OUpc^d*0O(S(YsN*>E;\mg6+p;EU/\LKZ!dgG(:k:\jtRJYro-YE9EQ,;7P97kp:3/';A#S;3I
%60Pso*O'k#SEt9!iQi'WhGmT^6NN>eYTjnf#Z?%iGW\AFYo2DMo-9uB!1)QueG0P]<<-f1g/#A(i9iE2Y;mj)/bUFVH99<'(-0=>
%0P#bE.Wj.+?lA]X.]!05X$j(Sd:T@+GbQ'2GR9+6D!X9Jp7hA6aIIp*:\4XaJIY>K5/u@aQahL+5m7@JJWLNWI[H$EB7mOaDeR!/
%RJR(-DYelSrRJ^+4GN3i^M@TKX\'Ikq5tg4Yg!`OP+NuaMuZQk^=gq>R-FsJ,Id!&.g0BR%M&]X@_qs]N18`#Vq)L[K2om8c6Gb@
%94n_LjNq`?Hl^SJWG?+;Nrdi)`-P%`L06_eo*)&:)Y6KiWpp:\7)a'i5`r"C11rb8p64+8_7N12))\6-IE2^-=!e-%@aoq-:L/5r
%Q>;%iX[pGV/*mLQ*,S[A#_>)WpB\]</dR*IQ8%+ue-1C\3kp5+e!rD?FRXTT=!Ta!Z</Fd,#ab_US2(*9(68V,nGqMUL)kTHY_.B
%Z,^0.h]3GjfQFPt_WOTuj(jmL^j__8#'JVG]p=M^Vk&J%7Q8mK6!*pi/MSF>iIm4&'#Sa.gag,ahH)g]e$]EVkB9H;>X:/'']c.Y
%<0cH:@Z`u@(#i09086>aXF'@p)"^K2,luF!*D":$*7m%+)JDbPANm4n'CJ.,LZm(j/+&_i/<r3(G0mo0X1B_7N4s'%9?Ym\Y_$Wt
%n$co]f9aG.^^a8a9F:WQd8,Ie-E^C\M]ioo`NMZ!Oa[5n>liLcY^FU!Um!j!TNg'd/FsCdiIMkXgiJ38^T;%:qMAO07aM>Gfe('n
%dT.sHZ&Lbd!LS4H+LF:n]tp@>5V'6U@PCFY*?3HV77:>B0fZVe1U"s5<rqn\b@]hs=N-q>0N"Id2\$:VZ$LH;hU7LU4rnV6guLlp
%pW.\(NnP(^-0LVGdul#DoO9?l*4VhT&h#LBPW7F*aHEOf7%\4[PS?oH"n`(Y)id1mVR.A#;)E*?f?]dN>eG%S:biRV2X<!-i[ocL
%IB'2RNCtN/B<27:H+f"K&#-Lf44a^+K%a@56bpU^,QJ^u9J.k6N%>lT4>8PQ0i,-3-($1ib;>sqi=8u;\88UE5KQ!lMYFDb5#@]@
%XrH<tjPW^AQ=+Ys1FKg@$m::5_TZu+.mu-&<^j*%MfF=+1U"AS"QL%lqSdGa/9+M65+YS=am5rK0PS7L\tGY%2@J<F<n#4^]O2gh
%Ru&?@IFOqB4L0\k7:KM[6A$]-gn.F'ZL^1!s(1;tkmmpK:CN4KfiB-b/$d0ug76G5C:GZoYnkI(\7qa.Cb8JOFl^TAT:;Jf4?XgG
%)Gr_@6H=<\jE7+akp9K,*ajgmO$S1`_?oFOCpah91<L?>L5H&$qGF_#AOjtnBLpuHH!*jW`;0)f]@f3G(:.,FMWsCfs*,Hu_`J--
%+UZFdZCi`>mI4R_4Sd1Emph?.PSe2Q!"s?49l!^%NMi^N]`O4EpSFh71ooPu7t$j=A75"^doZnp$O-bRX64,tEmi^k$;mZj)6qek
%b@\a>Vk?=4(4LSXBIHGOTYn$Gic1Ke<VYjCQf_@*)O%^RCk6s<Yb#]K=Vu6H9uAHdX-K_N5a2GpR1X7i@+tO;Tu5nb=JqoX*DMW+
%q*nE-@uc)[(1@7@Ga?@F)@/ri_jOT-llVTbN58tgX#A/%@N<08b:l\o$<S`_6/C<n6j@\:1>$jjOlqg@q,&G^6d^i4Iq#r>7^$65
%2(_lY#(gGE&qM.Mi00/:+rPZ`ICc?\QW^A,fF#e;K=BVec%<X*S\tBHkoau!S"ccQ#"!ijV-OWT[faGTX$N2^Q.AAOZb]:=Q_Q;<
%d9Wi[OuR0TIJ+\jUERB\^-Xc3Uado52hdh-S'<GS'MoLFbTY5MUnKQ,`Ll:<>\q**O9.blRTIBRL?S.(F?/*-3dKA?@:)tJ<f9!?
%[E\6s'jPJh:=:g\^]Z&oJ]4RGGOjJEb/so2SRt9E7NMWnaQKjb*X`!=]g:F%i:mdsd`h;"AjBp:[^$J$%8?W"^Bk6<<Wd">:=/M:
%Y=,M?@MkqTFA,QTb<,kcbr9[gYRmdL]dD8gX,4.@HOn!bccZi,/daSC";Cut1YKJL.VN!nGV8U;5iSlr(q.J00SZjMTMEnO+nOr?
%_ipe')gn:Iki`p#X(TtM)#@jZ<?:3M?m\SS?<X7J@V..7<@1Ku'PQB3=E:ZNee-Y9/#);u2ii16V/`rB&3oQ.Q\WS)].nXAL%S9X
%N3H'pGoCZ3W6:nA%7)>=Y'mlsPPn#@$D=10*m[*WETtSA_k?"\SlN+q>d7IPG-JmBZUMDEC^E)n8IuqR,nn.RYc_cmHmab(YeZB1
%X.>'^3.i>2H47fUd<fj6'7/d$*hde(M9(#c7O6-P"Sq/3;Y2aGLuO&DN+&lq.c23fRbK,TRoV2;658!KHk]]Bn!GP:D)Rir(9OH>
%S'M3HrQT^5c#V,LTG7Yg,(E.?"8/:N!^&&E@2Koj>:CoJNmM:mMumZ2oJ>G@8Dq=,C$'2OO$^MDAf53dp#9?4`^\E</YC]'k9EPe
%-m?U;$[UZ)1F]ld1#fgInGm6AA#Weaic9V'H!TUhCc2cWae?A'p#8nhS02EBg7>ek@93lQme(JU$A/*$j#KK^/PaZP\Usrc=P`Ze
%VZ8V^hsK',gCP7`9"2@UCo6=`\6]P9@-9C9b!6:R+,eu`$#k+QWjkNQTW((s>_;I%/6pKB1CSq-U202r(6oW0N=ukY;G9Q-.r),Y
%Y$JAbL#;M68XVeUl``,F8.B:TB>e_O6Op/I6U-L+ap]%2RCL!JaP?"T+Pt+\ES0np0P7$d0esJZJ@qNia>!^KJ]otRiCO/t\n0IZ
%MF"XW[rn>+AII&KYoo^YfWCrsT#XnA.4-i$l#8`JLio+_lS4qsD[(Mi!t1h[/[!<45@OdClNH+K#!ECn?k6obD%Nah1u(*D"MbHu
%$=s*W4b:<>f!sU.[A4XS%/KFf;/K/c/3ksk'$eKI2`o%jqEM()ohn6GVJ3?i^:gF_JXrl'Z4m;^#\%%R_?KXh_;ZnIkg'!K'J2aR
%F/M*(V+XKZ1ikuq6f`'HD0M0M?g<BK!YD@bK!V/%*jU+='5tUdZHO-nAhuOY)+t`K]GoiOF<c\7mTK\4Wa;,ec0?V.Ac[K[j;+bD
%%XQ`!UDU,7gjb*#`IuF/1>t1P8O@HacU7=^K*=r5k.&bn`/.k+dD7!BO>20FS''D=&3k%1KKc+8UqtHP]]I/!R5Lg6;BkB/``VEl
%eYVO)Rj_jPSg\<N&_4)l<?A@bAN?N@<?E3X)M(fL=$YRl=6ja6l8Z4EJY57/Vu_-mlM,'LmPdC#<TY7S_S;0R8XVlUQBFU%/)`1s
%Na*%8Qr&T9ZSN2635XqYUM>Pq2ZOp67:rS.PPNZCk>hbT#Z2mT/1<:_BQS)Lh0j=]ln:TE)ZAjkp@!`fqD%O1T?2?UB[aMlKle77
%11i3/kK\PsX&dV.r@roHA5k[t+/be=:+&9Gri,8;\;t(I!k!'G5)*G$;kM:SE,AHGketO2_;P'(]Z5OFPOd(6O7=05l`A/%NP_iX
%op@,+8\hPJH>ZJtg_B-<Xr*3#XTWn%$',\A"dD:JNXGi!R(arZ@pm&=:6Y&^eY7gC6jQ?*L>1G(NmCVOpgWPb@%o%!EDB!.].k==
%-Xq7r@h?9$,]TR=Cq9>3l'Rl&-(JNh#d,:f;MgElXgB%p1#S]s.qCc_9Z-%tG`E@?;N5Xm3CY7sQ+rOEQobBB]L\'>%Z((@itu/(
%;OKM`ED`IW8T;o2onqUn_D)h<0tN4T/99c[J@D*((gHKka2=j8!S^:A,9!sE*'<8P3&;L8VKELj=6'=P]Z*rEk&sd8p^3uO:1NVr
%J(-Y2NNl/!iJQ!LX*GS@c^<g/+Y;N^fsKB<NLTNp.%`5Oj4Yo>c56VIN9kB#Y_Y.?CLkH;>pb9<\;XYCf[E<$%.j<lNbgTHMc_<?
%9HmtWrfO2;G`5Ksg2mu/7[)p-5lI:\(uogR4,5Q9@H"[n(o(Hf*Z0MaN%NO^C]qbkC.?_KM_V2.F6iJ;\9H/YNP-/o1-D\&(UHLH
%;od"<\KZVQIj6VtF].t+1!1!%&)ru;`<plH2WIBc5f?k\9&ldq7UQc%R0pcK+trg_#$)J]inVLtr?0a4mUGNkKT,Yn\epL!PTlDi
%:n?7eaI.ssLni+)@kLerc]_`RJccjQ3XNt>eTi*V0uqN_/uFI-R-Ek2)J\&QMr@7#<82,F6$,EBP!NbYPQ7f/7TqoNr]M-WkrX_R
%l%I$N)pIWl<t$87QI?QZ>D8TL)#&SVc=FmZ!Iu$&\;E!M%dfTSEBsDWa#u-lO/,^nM2F<J0U%d"(lKh:jGg#R/@"]`S>E_(Ab:,2
%iaVO-)bG$([%``uKA6JDG)g$N3rj'*;%sh)W]<F$8tL#KB.1dg6eOjDAK`fRTFGjh@\W$aTCg(+.U_G3fni;L(&B1'Y*tu)C19T`
%Ok/0`M-4:mUGEPc3edEGa/N]%pt0hJo:b94c:\QQ\YcbA`+>$BYkFWQ(^Yhr%*-joi'jU@R@2"3n"tKa/"5LOL!E65bR3j)8k>JY
%ndo_e`6%YKdh*hk%FgEC&]<TXR!]j#""UFHp:-*b/P8c,Hu7$.W2IJ"Z&&-VG9UKqIK4hm1rNeS.',_'OFDnkS6:ZiVnr4!%EL=s
%W!%9krAZ7k^TVD3@b=^o+NB\fpi"Bn,oY[nR=CUc+ChYjZ`';1Cs"r#j>l"V1\i_^nP^BjHPfcMqR0LjWOnO_STktkWYf*_1L.H_
%m-,;eIN.N*8>`Xa3Ti)F>GWVj$2DbCeMH5>P5eq0E5H&/>#`0`Ol6._VAi"0+P&&U)]$bXXC"^\N6NH.(7d(\@H?3P,WO=.LlABO
%LQtheO;;4K)MZcEA(,^XTjsHL0q)PK4$L[(10g(%_)[74Y_1p&'Z24I+j\.^$m@!dkpcO"@a"S$TiLYY/dr,Ir2dmi$nNRaLJnS5
%Qj12K)m_6hT2`["/.?2<TUa:XS8DVjNE2E+M^)"u@:1.87[30eEHB%%EsdQ<&jS@Q'W0o@]/<&dE.DtLT*^4&RS,Y96=DWuQ888h
%nXHT8R8,^OV>"sfiM[nhk7YcpWU*<qfJjIQgPCNF`.i!h4Mo2?XrE?SEd(Bkff=khEXGK`i%!;<2T%Xu#ZmdQ1>+rU2iM3U&3`&d
%d^W`tQI/@2&LA!k\e7g8@,M'+^1%U:P_X1?#?qArj:4@1S%;N')l)5"%`U$AM`:F(qV,,)Bd)"f8V;TN9Y)CAf&UC'$QEY2Lju[I
%9ZCHc6ulRd_*`L:G.qA%IQLghMLb9Y$BBicg_O5W<:NhV.[Z2n>YMs>FR+'F7);T?eDpq=ari]YK)PG`''qq4#p(!(0`#/GYL6H4
%;$9BFCqPW#%SdQtJ"QOf?0LprW,P)<P9&;1gdVc9R)dL9)]2NV0PHsppn0^NZZdQG-PFS$JId&.3DO>IK-7YQGA:O0=66_GDW"m[
%ZH?KhjM2!.LdTn<JPcnMR#?"f_[]=V;?J^/?-:G$$qa*AnVnAf`XR(Nj9;DFSuuaXZ-V8=-7eROKR&TA'c:,,JX)30R!ZhslV&I0
%@-:QY!!t^s#!T1\JX*2c/5G-@#lC,)(r;]kG=GuYW"H@V6==2Ii6`A`0XME/^,A#[/3%SnSIHDe$nRY6qB1Hb;VJ[3U[@#O<5>U1
%-FJE!!:UqnlUD#9N`'ST#8kR#j^g1IC=/^%R0=F^)]6nk"W4FHn_>$N#>c&LSW*a(Kh_Z=\BSu['Yo)H,VD)Ci;nhQY]0_P+;LOh
%Sc9N+:;YF8s)51KS(%BaX)W@W?f_6DTK6*2OfBAR&EE`nJH2*MNVXHU_R0'_beLAXTRiX.(E*hW*R<nR&4s[ZBB!8:qe6A)pHB2h
%qX9F=G7'?)[p\IAA+KV*S%6]P7QfC\cd&o4]$X(WPP7!I5@hG!oY5pC(sOfPPP@':HUXTi'E=dI$2L+d(ON-$^"nNp.1XAfY!?H\
%4d,]mM15WN,>5ZnrWPi&(sB+R#oB_'`VW;"&,hC[(ELL^nm:AT<SCJ`:"'4SOWLc6nc"[Y54pXUIrT(0+O>=_8S-XC]&N[bR+m*N
%mk=[g>@"VNr(G<-MY:-)IT'FW^O3iRa.iOo56^q^`=Wk_URUhKrFHV#K>_JRq16UW\'b1!;l*a:7f/*fF`:8dVu>-h!&V_cqo]CR
%XGcb<1p\=0E7SB6+#')G4L>%H$GCDJ6"Bl4/KLYbF4O]A$G):hof#::'m/#6U9pZ^YH/TmijM=h@f>Df/?3YI9O<@hhcYFP$/P,=
%PP(8Y\a7[6Ih<IH34#sj1;6l6($R@bFZQ^bop=V^V4om!h]`$]L,^.<05)h5R@M%MT8]Hqb$XL1`Z*_NIj&C'bR&dPXHpj"MiOs^
%IYVde0tD`No[4orU\i#_E66etI`JZQiG?7R.#Hq/qaF7Hb=^&b^PG<"L'hG5]b>UrR""Qe`c=N?gYm3+QJZR,dj4a#ete9UNaL;>
%QPpXY04T&ADN#XS7nTGn.uI[tFZdP#puU]!KUeOQ-&m:i'Yd"N16(3.EA6MoN8PMe6(E#YpOs#U1f!Lt*bY`q].[;`&Q(`UqZ`bq
%N]P:12)&sJ%GfI:WLp],qbjCngW!)LPp-`(YERe/D[Qo#A+sOC+$h2cpSEBp=ECAgJ;:eBqeH*X\&n'=#oY2_c'H3Iqs;>jMqdB3
%&C0^e.O,Xj3kI$dV(7R>Oo'0CMPp](ROUd8#H"&sqsqG)@.6kY9.;D#U\A?N*l2`lpP"-sMiHR0;J-09>3k%0?.S7g.:Dl.9^bX8
%Ah/#Pqf6lskQ9rAKf4L3[Ia8FQ4lq%7f:D@/."1_h[hABZ4["$8tX!-IMMFQc'iB]CsoWZqa*hh_te^05`!e_I49\6^CgB1P:Lj^
%&cCoX$qf_V@MnGp%NVngr'JQK@41gZjDI\+')YW-h7GE>WjIi/nB6hoI;',)&<M<iA,,.,(3!BHiE+2h:t)QU^YBbd.Pu*!r9@m/
%,u98&lpJ];h&1YD3AQkbG;9".kWN+:'Ybe1l*=1ani+V`RGsR]*%/Y-il.\T&X7)q47W?jn>cQZT]lq18[tnOd)&=/r$qF;kW?[8
%mCs96odNuXRjcY=EK4DU$'<t[kP0`j,\-Hma"J^HHl]q.I9u`p`UOo0rY%ckbJ$(LW_O>.L7,j3.":]ZC5b0l0,JD-&5Ma'$]+JB
%)oXJ8=^4CC>8)6@\q-t<r8M9EDVVHNquW[4eA]GsM_S7I.Z<7E'Q^O&L0k]&d1g\W?gbV)M.0uiV=C]m#+QNZK;[ZU__3=\nF7c7
%H>N;I>QX+lbiauE=*Z)YR1-i,]X%#cBDC"cd-K!H9.>V#1]4!AOd,F'%)3?miS#,tRDA8`Z(_XfLXF@._ljD^hALc^4n@u$__5ZE
%OX@mt(6>6@NSg(j^=)<-pLTdMKLt#.%Fm<9]-r-%mOZ[U+W,t'5)eF/6MVU8kP']"0I#AVD4'9ZG$fc[@:YtOICUl%L63@r6i%2E
%aP,Q"[)L&O>MDh"OOLHP3NmGr@V9+]2GUp!,g#GkAH4c3?T^F!J"LG'Vp&h&].M@Sf*`'m\@3EXD^ua&SrJ\Cg,XT[pR0HRb)F_L
%m_8eI@Z8&"d/?I1I(nE9L@b676WKc-q;O>>lGhtEPN\SWRr:6eMj*u16V$^ejkFU(,H(*L"p/rp?ViF!1U%JeP1;FfalCS%8pJD_
%(?4.@4)?I^&7XEVM(a<fco?e6K&S'O4]D-a_igcaiS/0a)JAPN=?M>/^_`D%gq31P@LAi_h"c;dDu=ROmfb:E<ME1s$,]Q]FcuLM
%W5/0aG;!OMEm/>Xc64.&1&$8oWT`2^'8d+QYuJp-m6uI=)0)M?"m6_9QT!E$@NJCmCS\Yb)!a)8b1YOn[G30W\b@[+E0[];R\/Yo
%]snTWhJ[eT]GY[W)-q/<YL2$L8\kTBe=!D)eSZ4o`mr8$3$=KFWcrT+@d9MrQPr`)mjNY/fkijb@.up:"#R^9M;F5@(C5A$hMn<I
%?o0o*hIt:+Ee[mUMBUYr-KnHq_r:O+pfUahXSf`eO;/]t08)^GGY-3hF?edZcHZg/@Aq_9S/6;]#G4JrH/ZGWisr,]p>9LphC16i
%?EiNj'%KZH4<9`IQ?O1tNjJ;nXjbO/%08b\#^Z>[<aJ=>HNB+_&Vs?]AEBYs_WCgAb"Kl+DUduqaPl>$A*%80ZMU7sH*Q!V<:$^!
%YXkP[33oUu?8OkF`lSUt$WaNRo(&@^D5HpQYV3SmkcTLDfGI'7!#IJ\(V4mJ6buS=d*g4]Wtn1kPEQdaW]TD)V1>$US2kk/VX`f.
%PF"ZO0VFu#pQ;.i2f4p(PEV?L3YY#!S@k(AMeJWn)T%DL;XcFqa)]N_-SOL4JB^&$06oA+]lN\(XCGb8jMdnCqfbZhl!\li.jAe?
%6.mZ3F^n+QF@aMH!H(!Fn6skOB&98;`r4k\]GeO`_V_<HITEJ*NKKP>/<!A;jCO8N^7-qL1.[#)A7O\kVPQ$<E^1PA6(%mi'-hL?
%B&l*JU[=&W!5(,YOsL4QCLcEOb!%?7X3u3R'fiYCaK&8_EU8Xs6p;6q&/Oi+JOX;5`M]NlZn_-G7KqYJ;t?[,MHnb:s3(A<FuiqP
%X/aH8Rbk8_TcKY^QVjcaV3?grQP#M:j(.2@?s74'V1:X2SSNa(,aY)h'\Q8:nm)LP;DiB/]F5)^P##9['`:W-gPh/Z_5n2k5$gX(
%=?UA?]V*=aU^U/J#\upeNPEPZ;*pNa'lQH;VM.U\$aT`&Fs:86&ufLXf?\3<ga<VNZ[&h'n,d0Vr.D9Di[=FWE"ZKMe?Dbf*5'P)
%m;WKiL'26BPCXO4*5k<)!o@P*<p/AB0JSVBq0/mYp,;bQO?AZ&`9;EG"V%#NQ`O##kMG;I0gNE#okn>?a*Dm0AK!M]h.ljR?M'-b
%8eCi=em7'WdLF&0kq;_67afRAG?L[^qP;ok#5-[eG6nNlD%c8G$V?#CS8T33U*X.9mD9g]'R.,op]T62b1Ut.)b0`p[L3cX_Y_Wd
%$Zm/)6Vb#sC=p2jm%Q`Zd;>f7/Z:=n*4s#G^uO9"Fs09?c5CeViBc8=M/n1;0qQ$XG[Ic=6_%JlkanQIF6(@<cE3"&HG\0k!2Ndh
%d$]#R<C=k$R919$*Oq4&l5&+ofP,J*&HnGFA(?8EZcH9lM_-tbWf&r17a<qka8ijtWb7R-88pIsfS.QO:5,Luk:?ZS4>2+u,LhF&
%KQ6=*\u;V4"kQ5A4+[VY/6k/NB-o"T"_=&!H=o!=#bcF49:%M),>Tdp@'C704#?+6XBisodN')iG91&fp'XS9>p]ac")Kh(qWec3
%1qKW.!nl,DU5SleS/.%N0JZ'Ed2`umhDfV>Q-`t!Z0\-Ro8^dip8f*T%UD]=DITfF-)<F.@rgcgPRd;.,LPURl%h2XM([A-LAdW1
%QNG,$c6U!%Zg%^Bd"u3G4,Y_L((fib=EJ!:pu'MX)(]tS.%E_Mk)2/6?!:ps>H+_[5d!XQU\i-<>=#Mi9VX[#f<qsK,34(f0cSUd
%,/.Br6(_g-dV*:?74l>a]:iqEh!co0N'A-A0q#AqkH]+aWVoQbgu/sW:5[6I*+S=SH*11;jEPEqICh2o-[Y8R1nElPBu:Tci:OSP
%QrjK)m(&&l<\(:V*4UqHen0U<((fh(.fs=9OC7"e-ZWL_jLJG6eDk,Gk>K/[HoLb(T#%]TA'a7hA%=>fh"c;,cXf'R)0ff?eU$@9
%-@7A/C+QJHZfa(Fc`I;=6gtQhXZCe]c"29rNBNV_(9iY@Sr4iol`_@:Hl0).A'a7BV)6;8=_r_PL6Lf+D?3pa,L<3NZe`]D.A4+(
%nm#oj'M`K*\[2lemnTG^6,Y<snluG+Yi")Sl(04JLnHL*$3U:'e)sVGFNmZ7qHUV4G]uoTMc%cg"fK\sb\%nWI4g@;YSWYTk@to!
%KZTjE,QZH?`h,o4PcTBUeWldj7,5fXF#CM$g2-<B&p/\>0B^ZX+=U[#DNA(f^@t<nMZfZdF/.&-;'65\NBS.1pmO,;>i7EJ\\6JT
%1(VHno5LFrU#D)m5SoAkbbWQs0K--f3e8pS0H;V_JM*ad/>FK;"of2E#\VLQb(q4>NBrm>E:@/(5o0TkH-W'U!>)CQK.]0HZA,Ej
%3\!_LjNlpj/GhI!kD!HSSb)$=/=91hoB5Cfn/H^,ZY;_m@3QS7cWL\^h*22b6NY!:Z0+HR(Gkd?5Z473-@7?K#fgcJ\WCENE+dL.
%1VNm"cXkEgl(Jo?/s;FJFj?S:mn7&Ze)sKB`h0l=7\G\-);fCFgcuQr9KReXP.J$MB!Z.\O;$h1_3mQ48tA4+O=1QMOqHp'J[nYA
%1-7Q5K.[P7O[jU"?)H5JQ@:FD+Jj&ES3rXb2>B&SU!!i^!mM[>/r)T;>&ri4Ql@J&j3Zo&_@t`rF@e+i;qafbR4QkD=5AEtBF(s6
%7&!>S`Zln+V!1k+mED+hQ]oV`guk4r19Cg,dDaFhoV.Q56I79fZq?T,AZ!7GF=FGBCrtU(_4_n2e)Z@Sau'r?k(&l.Fr"@+moV<S
%ZfpD$.kK%MFNK?cF<aqokRrW)<I&*%-+3j"Z.%pRr6rTee*(6PEZ;6R7MfNs4&6c#9(6OAN@lNqk%urdlnN^Z<TQIJr/Z!5:881'
%@q''h?.u/Ld2Ius8]4deK88555fk0cFf*QW_F^NGj_EH9[e_<?_RTF"7\^?r%POU)Kn/-78YaHU$9L8skYfW#jYXQk_q'cK=4o/:
%7(V_9\jQZ6.c;kh5d!q59H%3"5=F7pIF7764NtrcVpV>,2bs:\S,ds-1Q="MT481_JJ9GfmM'IW\k?eF7bFTVGLGS4Ht8`H#[RLH
%[)h9I@aNZbr%JG!@I2HIF8jspg1I8/XW#BMm($-DjHD^8X'MrNkDHJm;m'#KFtJQBbdlQ=X#q'YG4HiLc=sAkEn4L5ZL4g)h9mId
%RZ#EiPjQH`PDYY53-43`@ugJiETSIXL1mKKd7+4cD2c":_?P,!>f6])53[)b:OpuAA'5#s?.2\DQAaXhO]&Jir'm71`g'3J@I1@6
%<4P9LA,+9[ZVAS$VHi7n?r8GD'%#\jVRN9YYQYM3Z4g"dn3\>#;Iu>P.Xrhf9pH[#T,DZXD]nl9"M*<OmmrWa(M&.(F78b2am]q,
%*>e3hKQ1X!#QtDfm,Y[<@`<A*ggllj9Q&XM'U?()j/,,4/;\A/Ud\8=7h!i)g]le4MjoJ&CQ'!pTsg(1.5$2PoT@Ii\;5Lm`JBGP
%)dT'N8Q-'P[di<C8ALJ;iSl,7ToBL_@jtn8_^u)DE\?-V)\Y7IDXiGE`.SN2%&<PdKF8%j!b0H-$]>X]F/-Q?fTj!*A&/>o?n;dm
%eB#L>hC*?*ViQ*9i8Q,O31U!ak?o!Ar3q4@7,-ja7@Vr5ZSlI2"fa+'4mXB-`C$@:`OTpW&ibq')N%p6d!Z4eZ\o*];HYbX^iXnj
%PP;L(jhXE5>A_OfB>*ulC+$]s7]*D0hJu\UPUGS[/<Da/gLO=?)riN3Lf(]:'afMORn@k<>Jtr`F>pd8&p/d]fku^b/`gNP`?:Ne
%f.DZ3=ZFq`pc;fb3R]R_'TDj2)X#er$Cp8p2Ab]uVn#5b=M>ui,sDC_$KJW"%gqH];;C._@!lf"[h*T3'I1*k6RK\Dc>T1'nZq]>
%3an#sgYt0O5Xo[MT*R2gm'_-b0NOb"2H@Xd(hlVuRY-UR(,\piLXWPlA>irb[RH/jVW,U2bMia0m$mGGUEKVM[7/NN[[kl*RXsCe
%[ePj?VGl4.2mUdLUM\6?r(TN4C]d6(C^V!)'qHp3/65Y\D!Z]q>UQj(NhMf1bI1e'Z6R\q2lrRS,+ZgkOXEO=2C@1pZMUk^CpSlO
%-BE#m]cVD9gS3["a^Q3*9f3R<Y'B2j_cH(-_PFF'*6jDX[Z`0#MSL"_'-t=Orn=M$$cZN-'f0sN?)t3%8R:'ZXCKJ^dH[KMk1Zh_
%,EoXg@'Pp)Q6>=*g004enm\`OQ">!e,3'U,'k]+-hW%",MfHr-+cN[lGb9(H=I[g_EPC.?X1-R.Z51%4SZNYeOP2$_/US)W'09-1
%eQS.eW`o3&3DZO+_H:8dU0@5:EnlLd'heXXc\Q<JW3dSX($TbC1ft46`Dk#sIo32-pP2+=s,@KPO_OaXX`*FQB!1Q4WWd>B6cb+!
%S[ZaeC6;17"S>Ad$dTk@QF#)8@N=O3PLLAK8)-(=TqI/"7?'rk_-1KM`UB](]Y';7.<t$R7E,r`J#B1j:J8qo4)M5(:Cg3QTF)Ub
%8S:>i@em;u:#!QZbu+i)S*rWN4M_1(pO;/!Ks3#B/Ct4+%[u]Q`"jVi.')'(Bb<YOlKG%NW!d)0bShXmLIB``8_^k'##7`_0%Sl+
%f.<;8Y\n91[#!_X*-#ES$?^JT>5u:`dCR]XBUc-Ac8#b9.U:D]M\ZRr7TN48K19mPM0Ak^'@FD<H"]dAgW-+`D+-`0)[e6*ZrsAB
%#p]Yk*(%io5tf3Xh7)`]6P_7cEsC?1kT&cT`DB?VdY]l6_A,m.Vk6BtOaDZtq^c-%<VJCUr3H[g-&kVS`51?9:A.i1/<@*#cQ^_j
%)<T_\h0*.Gmb)KiM/UnM%$Kc3bd5O/.UOc/7:p5NfQ_&"1Wa?DHaeucS9;9pN8.!;_)%#^i1.-HZpbbY.;/04C5@0jc;GM-,b,lo
%MMtjWhBT%D@(C,rZX`APa3lo0q:=hAZ`JK[A`oKc5uZ:_Z^:?!+fR9BG4Po^U=l\c>*EQA\C9IhZ`Hj,]lY#*R;B_kE&EYYg_21c
%SRNAB35rsQ(W@q7OBg9Zhj7AX35OtHj30124h5;!ZJC[,:+#:*INt0_Uf5/@8hSkN^;3AYgTiQOD:GlL=!?n&99Jc_McZ3Xkr,\X
%A\g4?Yb/8EP'Y'hO\+`_N`ELas0-^=m;3h7]0;kEle;@=Y:Wn>RN.R9XC*?4Z=I1*A<6pc80C/"TYpd*1XB!"4Yr&7?.gK2S3?>D
%f]WXte"O@i?-\Qmoub'UJ_k[HiHI]CU-Ko*CI$Q@Fj(=DRs5]_WWC;GTSesc$\^%!-kF?A9l]O\6+]UNV6^W3l!XYP2?qj0+;/CA
%=IgiJ:O@r!<hM#"o2T^bY/M9u;Lk%09UM7G:iF@cB*Lk*F@i8TqDq8-<X/kbP(el)!Q7HjV:uXMc;g#Y%%B6T(eBqt/$4Mu>/Dc>
%`pC?&&24i6%kon%$H*P"@:X@o&Y30l+rfL^mK[<aUHmh]Pp%*GHX[F-M_'_Uk%XlQbEENK%uN/9T3Yin&S03WOCbjQg&SDC6AjH=
%`H4?fL+j3DT6QQp,T!4a+PKh<"B-h;@5KdJd1`*&O3#gV,0A@Y*VL/m=aUn%2?C%Q`fcR@n1*=4HoOq,$AGC)@)[4YASn)#j[/R3
%aH[(NP"`FU3,Vd"<:7A3VaEuO$,n'K;3R/j5kU&<V$r+>,JZ/,%?fam^r,(4#HpBKOjj*$k>P),&U:;b'+T-(9]H`i)ll.-l&n\(
%cUr1"RNnH[Wa&07VuoHp1F&S=oIH9Vg!nV5$P[7m':a@,Z6)^P9^'8JQ]qNK!%(@83s/5GDue316S_qEnVQ4s_/.*9>l\[eSl0!h
%,*@E'?BY1f'pa\EMBa4:$h.V;HPgR\eiMk!ROG*DWNSmPAUYsI?NF)GLG-d0"@q'/6_XjgVHYZt&%V[6G?P4(QIcEg"p[nt>&bp7
%GbKd<,sILf),ZQ!S=JXS$g!KZUuFmW[Ot@>Mt'UYUjAlDe6+%*'?;o0-%(1GFH_OL/P<s^(`N.m&7<L<+fUOmW@0=6:E^q]-IRjM
%RE!gO)u7>#cB2l0EqHMF1J<jA'oHDE=-M3;ik)[R[)f>=AqE=*W0QiPOqge+AFei0a(3!XjZsn/?Cuei9/#AY#alG`$Y9-&>0)S^
%9;["l8TTk_Ag,JoELen,[jD[(jC'%#kdB?37&72fkXCf5WDo\-)$Nik#7N.4P?3(95G=H"7::cOQ9`h70JjX\OX2W-*[*XBrhES#
%rlCns'p/^WUJ8sEC2QJ7&Y\q1Euo"t,j+J>E?gNu>`3SFmTjP7K3?D`(H@dlgi*8@Bas6Ek'@/8K8b0,nP%3D[-R@T:IX<_MNZ?f
%cbS8U&uq%P,cm?$=ZA2X-05PB^(GJWaHIbW>!OfMWR.MsP5LI,2rJ5%/#?^PN';\sAdZD3a=3T\$l,#QK9NJFctRZXRtgi8L'mqP
%>o.ds:qh<DPP$tn0Xg9Y,u/TGhKd"&$Nmmu_sj@*2A!MO>b6@uf>EK0j^MTD<r2Y`*1.&]!eV`l2)?A_EW"B)-9/G(c:3V!Ai`Tf
%3A%LhHQddni,$4Gj3?";]X?OkN2gDCXZ,aSV)LoEk&uu"OrGSVb)K^G#`=V@J=)W4a!YJ5!.L<Wgk\4'M(_n/?-<9m$XgW(!KgfI
%)&GM`WF>H9,B95Q=$[PLQpi\jrfhWB-:8[\]]\KrL6BpNgkbV+cs;M`YS/0No1hE[EI5f=_r<l?<bqioI>Z_i@4WcL;tT">R;/]T
%DFs>^eHg.0,h:gpbfN7$E[%,^%OLTVk#_ll&"l"5We2g#1:(r#@\$KRO!DPjV])_8E^h\VS5`M/-kPQMPe^PCA:Y/c9%@._8LT`(
%Jfc$D$RfF)#s88M!L=9cJH6UP#QbGtn3JtpWAViKQNpL\=BiQdF$@!EekuVqa<4BoRIDL^A2M`#_Bdr31Q<:0E)NU<b9E'_=Mdj*
%=#!?$>8(+3XfHb!;t*%?P0Y](M.QW[bi4Ig3hmsT_h'cX*Jso\G2]*$Q"1#gK47.i:r5a`O?k:uTnMuV.(h^Te=p;q&GIJXQf*(F
%UH/GAbRZ%GE3r$pY#l@I\;F,:MOT;\7_,=^Jo=2NHl8uK0Z)7#9m%XOba9\/ctm;&WXM77\^hSjFJ+@\]Z09b28*&MF"uULDOW"X
%1R1%"0ut&@E,%]G_rOpT?Iai]8lOmZQ7.n:aV*f2K[t2M`6)GhP[m,JF0[WT&icSpqg`i]YPH6PN?^-4$*QTPadftI@``AH"eH3>
%N&kE[hbYJ3%+.<N7`%H3=3>M%B3mfh.sW%#M82TJ`'0B'_bF:'R]0L%o;g5(2%sm<k/Wa@.o;SU<)(*g_Bne6'B:uDGRdM*9`P^U
%Ak?U3E&Dj=1kUU/:S&`WT?IM(8Kq9Y'8D[[4?'(%81:a>bM]M%j^,a^5VXlgUXtYL3J@@K_%oW1)8QCudgju&VK(-"%q@*];BTTi
%!=m`L=B6onH((b5e>L\IOSt&9.U>LX^lNlUjF+f\906;@8ZHrAAgb_o[l_d9PGom89";T^U;Z#eoFccd]pq$DDpj9XkP:5Qr-cT+
%iVXMrg2BQu-!_>2:c"K8l3Arj4-CnSAheOfBkh$-;1hsr7bP'kdOB4C9Pln</u<Db`c\G$I[jVY7AM[D4\#ftU(`3QESN+#q('61
%!-es8A[%9<`&+<iDose%hRH4X6l0<--s/[Td>B(nR7&el!(V'1cq@)BU_f#g+gYi:BG,DkUq7_dg_ER.h+M+^:p^_VKtnI[pN1-e
%`(V.E.8,mU0U/5X.#MN2+,[6UA.1f\Lb;@3MAUn;0WbHhW>A)3OTW7_:ncCN9.s"]c(sf[GR96h1>VQt(9SpIY]@G*'l,3@ot8e+
%+>j6q!q6@.0iCYdi1$6<<n%d$jXa:Vb7\fNd4;=U<^JauKmX#85>TRBoE#I(WC+F7.\8J[Zrn$TOD,thaJ#OY)1]M/MbBLhL&eOF
%'%QKOTU4-N$1i[R^*nh1<f]XknTMHTc]VPhpeWd]TS-qoI*lsL"GMhe3^*3n$'NYWEk/J\Tb?CuNAU!>aTdA#WPLGeVHTjrD*f:,
%(b!7X"$1G$Z,%ChHj*scq'oH54A5<EHEm(ia<^i+iJ),nPY.;l9?;0>lmR;YE%0=;Uq;jic'R?UTncM8S`r-KEZ8;lK2e%`K9"uP
%/TdX$crac:V6<)Q#\]n213i,IWi:dfcrDc]:e3-m\hSFB"X@tdoJdi`R.647LXM;LXM?N$n7o7-N^^6QEN,f2U\3DJ.WH+5!LX*P
%e<*/POa=oAomnO-f@0D!YlBjs3YJ?7qF5En,XdT(WXtmYi>*\?9GdoGAEh761FKV;j1:iiB?'<n1?)-s"TiqDlGKM).+TQ+.-5t,
%9R!<QE#<jqm"hj_S=(b15XS'*^K=23`UWAoo#YSr6:eJ:8)PA]`t.,uKTbcDmGJD+LV'q/>QFL-eD$Hr>[VZ*Zn-/D43Q*NeKgWj
%KL&K5ecIfXk)#9dXY`r9(pfK\@],CJGj&g;SfWJOiCs@.$o'FnSJnS:d,sS$1/P,XJ5&C5+?C<9Kc@NAs!*6b"ekdp"INh$4YS&a
%\s?gPcla!T=fFDMWMh]tae7fn6CTArk^eReY>?k4GB?p7o=fAoiH0I!YC@dbFJsWjmR#&^!So2uRD8emhZeWQ<7)1.OjLscJ!"o+
%:PLSBi1(Fc<Q]1d63jS`-,bsb&XhB$MT&SOXal-O<3_N2=Wf"1lRXJ`_SH83g-=ATG>@5"#8GOXi'[lPC,Rq-V\VI\),A%N2@EK[
%n0.7Y?do;j9r9g@YLKL8I!R,r#nRIIXX*m3Y#'Y142Ef8JcV328Jl*PI!s6^;D\QI*t`W:d(J^<$VCRYa-j.PEj9oZ)aR=4&4OmA
%HK%naOt8AT!u1?3_d[<-;'P72OELj=<[cn)k>IK?jcqr:U6lihh@&`d.%q?uLVg`$9$E&A?ud$-r'nC;e>]j:EZK0gYc!*!6&/B#
%mhCZ/FWi.O)A1?t6N9Y#4I'4r8X:bq:#JO8BYtFD82^Zk-4)i!A&732"O&?[,XGC98Ja"D;H_(e!@Mri"FO#$>?KnU4p7J>]FW'q
%91:!EF1On_)..S<Id,@0';=;Yba(OS/9=unI0u&NUOJ:-/InQde2=71p*IB`$5j)#r5o&B!4d"3E*u;*]dFK>9QqfC8cjn8eAnSN
%L(Z@fWQuYYOtpYe+YWV8YVa]L6:*EtmJ%#J_g=0\-*RPV>)EfGj[t9dnoG#h;j<Z:WRhMHs%>LHWJKV#nJ!T..>5\$P`ThDWEBWU
%EB1R,SC0H[8OP<%-#3+3gB1/i;'o?KD@A8Q#KDN8lO$$E5IGN?h;K1o*m.OmPr(9na;jSP*;FJDU]nht"j):e,g@!a27ZrkO9!\+
%G#qPX!E17qJ+(JkOTe=PR?2ilGHj+8V4O>cE3CgXMUZDH9Ve$Z=qXeH)<#T%X2*'3U(^,(BGsMuV?J4*`=b)3?W72OK[=^V^kbJ#
%J1T<[T>AJI25o:EF\RZ<7$<GX5\IHCX#"l+jl?U;J9B"^,iG+gd`OCa,G87^+;L;oL38k`!%C0+SNe+UH,@]U`=<l2Elh1Lai<@6
%N[)bg6G`>ak'EU'N>_jci'?VPih#G,#)Nu=/8[nN12oZZcJ8_%5L%Ut_$(Gt'%;RJk=ghDR@K[)nH<r)&*7-cR2![!EgO;\)c#W[
%B[Ndl6T*<ESq'?4oJb8p>cb3k7CK(d=FTuq[q`!PJ$+Ht^dq$L$_[q5@&Y^*U%ge@?8?"W^*TCcX*.fpAgAQ[/7MQli,rVdH--PL
%W$Ick!)rA]fbZoK(N:#-)XTgS,]B!JPSG.h#j3/)'gco[A37>T?D;r]+W?GUdmFj)pZ5j^.'I/L$Pmuq-]ZH5P)H5F5\47S2kr%7
%?E1`6.+T)BM$TGQag_a6K5>-H6aM/,HjjQUPRS&d(5bpj?!oi&&u/b.9#Ha'-CT=C`KKaM&@O5N@cFp24^b%\)KQIGopZ_2N+q.-
%NnH+b95516:LZoke6!k40NuVr'U_X(.<>Q&/5(*HL"NF-Usa1c@0j:KEXbc"!OEhE_NsR27gXtB%a7-TbE_S7TM"m)=hn]t&#f?d
%JeQN,@)HN'q>ghe2BeaU(G[N,BaGLr.,cB5/sQQbLfWMc9,(FKSKLPdU%P0Kjd:V$+EAk$@V!Y:K+VI^.&E;F&1->%SsY$6*rr;o
%dR6DJF[>c@l&Mc6mMWb0^JiD6K+dTtXHKH+H)2=URfT9Y\7^WJ2).psB@atrEb*%`RYNAW*=X+@nZ^!oJf\a\0-UkO;$fcl`JGe2
%[bdC+6i)F%&.pjM.hP&M^;+4S[Yed0*L+a[V*RmD90GT546%Ud6F"$5+t/F7L5Ah,:a0i[\19Rb!l]c-:Gh3#b]$ui<hq=,;;d9Y
%?W8\<e^G$mp=+-qp8a("dB[=U$F'Yt\WlPcf#t=CM%9rGqHX+-6,!H\\Pe.G@cO3h^lWr<70/nad]u,"2cO9P=\n'anEhK?d$7Eb
%n*g]rEMWJ?XPs'aqne@BMV0ti(okR+)G"SFILuYB_(>;j@qOHlEF)X$AX]#)Wp<(=M(9@O8jmf7lA-o9:.q41S4ht-66g0#Vp5GH
%OriEbP_KJJ2c!5Dc@F/.1)H@-LF)f2$q[44!B4ii'02Qu8jiG>q$J?u$'hN6p_7/kn5JF3q[>c4OB*]cQ?m$;"XA``:NFuPH!Q8[
%_S%.KX?pf&lD7l(UTd$WDCd8!Wie.Il_I?\1Z<)Pb-jPVkt+2nRQ+tG9m$H?LU+_?'i3@F+I[X67sdkE[*8t)U8pXQ=M7ZI)ha@r
%M4eRoUqt[:(DSj'oMAFCYU5g4-jitD`^J\5P*mOTo4SA\O5f,&S#QZ)'Pg-#r3:phgNYGBZnkdB!tt.s<0\b!4=JLcI\;A!mn$h`
%Iq!V5@VH?\DW.=DP#)TA13fkongj[>3D>i"4\0-@LtRc.LgO:]X?]r].p"8>FsO$s9_%IV_H6!YU5WniU.\+SH$!<1ge]r*S#,Dh
%6iRt^\`.WE'-7P:rF@bm23h(<S;l=*3k"Xl.mq;E$EG=OiKW,(l6m7)_!Qo"gcC1K'iCLdG=belomP$@<%SA4j+Ge`BQ:1]Wm!Pg
%X4ium/>-52Gel(?MpB3u(Q0A$/.%&V^.iuHd3[(!js<d9XIiNuW456ajq%\ilg.hB@$K`jbb.^1ESHWjhLPu7-pdbA<P_WAq;s.=
%!$c+m"pV%u9DP-+:MT#`-)8X%dq#CtaL.5gR.)u+h]bgYltrbh.>[eg70@rR>*aCKe)norI]=96O^M98b#;Yu$WPtE#o_eK]mE'`
%>:a/=##t8;MIVCU=</*MfKIa5lr9*[R/kJG#ULloItqR>,q#VhQ!@p93CU9FLj6W!MWqs=,jGM&jenHD=&Go2:+"&d&pMhOG)FSO
%Pd,XrSYD01)Tr^g`XK@<JYhP,&/_Fo`6GPLEW^Z,$;obI`&2[YW.@^N<JoWndKkKXBji7Z7>^>6fLXh5@nS;.B@%#%iQ?6G%F&Af
%-&G^NV97B0BPq0FAY3dQ5QKe7:4qOhL_F9)[aeo'bKML^2NUd1c]`l&\?VFeGj97c.6!RnmT_<:&.(!/d0k;i,E@43@9QteP+^cu
%k[r%T/"su0Z,B^V"_t.u9]Ha@%3;N+U25b,h\ah-'Fj?d(eY9kX7I*XU6.,V:J],dk2kUK/sZo!<rOg;7]C?]#GKec!^2G!CsBAA
%PQ=Re9eedWkQ#09'cW>a&Q"mc9GJ]54#JgoE.K5b4fbO=`,Oq>;_Jhi7S".,4!)Ki+!mmJGg[%'Sff]okj'(uN"W4pk_VPb8>W'-
%'4r+S7<aDM1o:OH6?5+;d:nkaY8N@22asMg8Tpf4KX-76Eema?h(\W?Qi&qA?IP8-"4FGr3$WW)e.PBuN#e]?1*FNT>psC%;"Zhj
%Ll:K>@Ot(U#fEMQQX$"NI/oYi1f7UT3fZ[E*h_C?h#cQrA<'["OK"?d?`,B$M.<e2MN`FfW`2Y5\okPNPM@aQKQdtsWN8OFCo+*\
%.CkiL:7=O)\'c\QG2a)RUJYPgNu=$V;VEQu!LM/>8Uh:2q_1H)Pc-58,!kJb&o";91_`-"JM$ttWPeOgmV&j<'DN(F_)Uf#:/XA4
%K>^^3hZk)Jh3h0#fKtF*Fq"Ull)k_MOOV\\i`mY[>m%KAdZN'TR&,j(:+?l%+6p9A^I:aq7/E[4Bk35Rb1b7?AeOOV_\pcbM8gGi
%N^5Rq5[md`eLF':'I1m9`Su`8P$CYu>7*#OG=7*B"E"JlMS!D=*/dl=*Udd18q(@.^@]rM'EHH-^g%qXr]GaX!i6e_l<A_#,s).L
%;rO1eTLS\ldoRi\fR6W!:_c8TGt/Z<ELNm44?VD]0o:okoRIIkRnE.7<?2DZ%<\H/Sn'BDeAK6#q'Ha@_RhmLKdR>WDckjJq"0Dd
%+;X>Q::1LI'N;ISQZH(5WG35B]m,$WQqD-IZTj3(RI?qI'[iU1fA'%VIdeWl5)']X;FM5sj"=nF0T(/$UnrUf6q&"W\@otK4;GL$
%=s?..9gn+p1k)/]Ilc.:F"^eG''C\K!*U_%QWa1eQN\$T8YR"rF9Epnl&#I,<KhVg1PI3&PL:g"kW(]7UmaMh_lPpT):QeB-Y$WK
%;PKn$.*a'9ik.o].fRbnP(]g3N--O>Y%k6t&e3!&HCXP\VP7Z@fN@:3./&4Lj7,7R`PY@Y(Pt\!/>dYfX*l<U-Ml0o9MOlSCKDD!
%!Ei@VU(_qZjO$M'g1/6lFAQj,opVKj4&+sn\\<V0JMLojMDGQRb"^;Wjd=;U,gn(TaW@$TI(uVPN)X\YFQ+]?9Xu0Z!"8b:)(cVj
%!C9>MiO>^ZKMV9ZU;Y?QMNp)(.oF,0OVHqh4]U&hk"X-UAnXj`pYD!<8BR>gnIagp#u-218aI^%#^_NWd:AlG6J,cQUuJE#QV79^
%9*,\Dl"be<;GYQ;^,fQ),SjCmL)0S'q;b1$CNgoO.)Alb-28?>*7'U$X&oZQ-I(!U<si"47QI&dI!)uoWA`@(RS(Yc!pn_jjUn%L
%A+\^K1`[c5@f=@N(@]a'n]OSI,@`GKA/J%dQlN?_je8A;MfE[eL5*Q%Ui\!o2<nU^('1LV>c4j<34Bqin+fjRf5.]SkpdCHKh4%;
%U*)uV=%8$9I"X9?F3Tl+&fr/X9tH/_[t!t)cFkRQL!LQI*S'uV&m/@+gSt[L-$Nr;4c$#Ei'9(m62@6%OB?qa_=:!>L:^D5!_@nh
%FrPFmpR0ri5#J>uUI)1A8;*F/LrEV'&LTiO?L!rB:8H0RWH.L`JPoruY^^,&TR`LooTIEI+)4CLPbdE.%lI'33_<(GJL3"G?aX"D
%Eq.Og.'dK==*U_NJWkG305IGb+`iK9$(*<?r*)lsWJLj\%9=_Y.Mnh8=S*aLq't'adSrJ4Gp&6'</omLbfPlQ-#VbJE]JO0KQ%Ah
%["u5KfN\W$N^m2E*e=r9[`)iOD6LQNW;-E)E2Q,2KmTVgUjj"0V6_I?]Z`Mr;o`8_,LAl!XrbR'>6sa+p0W[F:(o@)8ak*+RYlI(
%A.Kn/O"dJ.S^)1jkJ7I68*]^iLr,7/7M>A&07.t)$VNqqX[87Jgbp";nf!_oI!X@RO$mGpi6CKfS?"qSYDb=U"3VWXUi;U;NXAkp
%%!2,dVR1fcc:TYk(?[$%ia<S=3#4or3C3G*-nRDXM8PFU#dcMQBVsRH8dU*Uh6GWJk=QX'R)kFofj*OiFl^u0(WO`=*iV40)#/4@
%"0b-fd$]Vh_Bu3%k.Fc0F/>1nHtOu3bkpEn]Vm3EM'FnWG2ZMm)&E'Am<+Mh568M2rI[q``@@mjIL&$OH(8?;9h+$dAEsq(#,EE)
%#1V)*AA^Zs,da`NiqKE<\@t]odf4C]J8cN^A!*k6Ta"n&"/em0,*"#XJl[B0]PK$rBI#$>dR1;J_h0/"<PfQ%%3>2GTjmVk-TO6+
%lm@\g%<SI<@OYuTh-#M>OSicG2UIKori5U.7,TK^)Hp**Sr:geX'`#$\Pc]H6<c()_17.@)QtD"=Y)%6Yu"BGTfA?hS*?iFf0Umg
%Y2Z5:kEQ$)hN:u6aEuoOR]/XWj?7PbV(.UM>[D`6_R/NJ';R%Tg#CA'`Y['#;p<po/;-YCO\;s_hEH$q$J"rI5&+bp&Es7%YX1TV
%@sl0Z9jTBET0T'3@D%i-AO09]9X'nV$nd38oC4-:L'BODTifM&GZkQQUgpDQg6LuWhig;>Ssc*P!d.Xs4"h)lDY%JPEG+eU0#TXh
%';9b"SXZ3gTt8m^Uf8=[H)6nb3s#4*'Q?EBJs80Ue*31;M$BNg(!%3[$Q57c:'@3hnA.@&*ZkuaK7PYKUWc=E9.Z*b/&39<IMA:_
%C"\0k3W14"a*21I+Aub[:Rn59/(tTT3/o(R'NX5Z`ZaMk!h=>*HV'_\4nBPR&a7@Do1qcq:^r3^)\>q)QBtc)+a\s.W(kMcSG>ub
%UjT!V_a?&5,_@J1YRId_"*t7[>M9C!N(/PX`<$NjM<0);EZ'1'3Z^m'E#5VmBf%_P&4dWIPFG.0`)$kX'!>mC`:_R2b_LaQ"H\JU
%nqe`_HQo7h&?SWs6S'9No750RBW+Dd>ktOjHH'?9HY!Zl:Sh\`s3T,H<6rLE=l=%ZW&G"Gs(+S8U->OMp6?bY&l6@_1gr$NF&:Hp
%nl8j"^_$C5D]p'UPtBI:/G'jZBE`"OX;/FuS9.S$JIlDrkUq8-Zbn74naKBH/('=8%HEjeL*m+-^_#a$'>)ZA>hY+Prs:iF2\K%F
%K"8f$Wrn=fj5X+M]9M!e5brHN&=#[,4;#dT#m*Pe/fN7L]tRp$9i9";VC"\h5g*_+%kj7<K`d=*E0gnX*etVS+:pn*&0(Hl;eRYn
%<dj.dP/R'n;Zk_VCA:6Y*Sj0Ko9(VB%Pp`mZ'!<A9WqDe%iP%nY_.d4_:/4@R"8-qM6L#FPCOqT9#-.7Hm0nK'V?-a-A8f%(_kF0
%LQ#GsRjEj22f(5;Q&>6c$7F@u7ZrI[`[Qc)Xs@`/T]"J>RWPN9ZB$JT?'nIjL'Y^h.8ogoh&WF^O+PO5?BhfRc73F2S2&Oc72)s$
%NA-bj+M*b7Q^TWn5p0Sf-/lZ`cr-^[YbX%;I+<ZJef:X'M8n1PcA>(X';=,4Uns49rnntd:EnjY+c6@q"CED:AN)k.F&\nM1$an[
%-PFV2''X+o<H9#81O6+nb1+3:`,acBOpNO<1(]',)7dtS1=o1!=eidEo-8Cc+\3nWgF]Ve[#,RbWSc2\pG0TA'QB:1eAUhln8m\>
%9b8dV/hDj*R34DG^=cAXmR<)cU:jm8Bo-HRE*#Y6.>fF)/J6?&U@q7r8G\0B'JXoFWlQ$%"U5a[a]0TEnl93o(IW-!!289aPEN2P
%)R78=M4.![NRd0M:XZ8b!u=njfMG846YIM`G[5W-EMCp#0GV3R]/7r^'%.k*?5mFZP".90MEJ#:g^QWi8<>^g"e$&MOq0%V7aS5V
%%?)"M,*tWo-'=k"qE=Wm0#PsZ\&('/R7K2NmS`2UE1s>l3u(DFL2)L,#7k^bQ%u5o%tUoCL+\bHT#O-D.N!FhlKN)c10(7W%qa^.
%-8J@#KIF2=oRt%9[#$mC&lYdV@"@6-PH3p6nC>8:.t3=ZSl[g,Z%QGtcsM&SiYW7,6mKB`$+(q:4&q]k=4];4?);GBM8eXI&8-Ou
%0:M^b8WNpi@[((L_<^1CdS5JL#]iGGi:'`aCY5PQOZG=?*HuB1d&+fa8gNiSO/l-uP/<:C),!<WCF135qK_50VWSQC:(cuW>(l%8
%d,Yg/e2d(d,g1(;nJ4G;M$<ArH8_;D\:hcO8gpDgUVgcr0DAjD;2#'R&`YIuc,`gKYQn`BC6):.@7t#=g>blUSP(L@[E"Ctoh,pE
%P^!hBT9Kh#cF\a\J=ZnDM`EsTB&0/U`*[IgTpr$9@&+^F8fKHS)r0ZP.Y\mq3D`:pT(uJY_Cs=(`%,,o"Z6;V#,Q_p717)a-Mo,^
%9'?Jp/ejaNCm:;`m)Y;977)iu6DM[0%aP\f&#dJ:;D?bOm2$)Ll.#pC(R]BdSEX:FBJ`JKqj?UT)/qH.7?^'"LY5.F-OE'l/_5<O
%"t6bKO9Tu/$'qX[NlMcFCZQb3HPTeLl^6!U""[&thLUhf-:,dP?iA^_@h61'(I5%B&hZti]lS1%2paKOcc0WN.IHV<&2nB;.42A>
%`efN>W)A]0`%`Usnfa;".tQ-NEb/^bHBp'4;`R0<_@5Ra<=N=^.VE@&Rj]f8KFj&--]Y3VHPJJ*=3Lkil[uZmb*NK9#0]F,.*@1B
%h*&)\?78:]"\\&,O9_M0@0nq&H!R"B&23_@M,k>I?*7mFpsdfsPj"sC!_lLM__iVn,L]Enap]"J4H1.4Ci^%\U#qbB.q5N,H!+!i
%@mkAQ,M(^gnl.1s^.pKRk)uYLItn@U'iu=gPV\eR;gJT-U+p5?dQ\9h\N&W,[o9.fB<%@SaXGKZmZ8pYco4!eY#@JkZ3f\["Btms
%%'jtW(agcfN5G-G7XXmWaji/G:\@_Tc;gt(V3)ZLr'9ZribGV.ipKG/*Ip_60g;2Gd9/3PTLkcl2U$rI<6VuUdpF5eY!`@^!X+*Y
%MPM!Gal_`SBm=5NO2[&k:A+7FlRA!:Jh^2NplZ+"l7j(q+E%KP,W#/TiX\>6#j[1lNIY?kJYhCI=&K_t0qH!\6N/<pDRfaO]3".+
%f?_\W*dL@.ao_ZT0US?8U+Igs6sJqT6,^!Mf#+RXpG1Ne1)1E%E4*+e>uFR3f=HjlI;j4\HB<AVM.T:(p9BQjA(X-_8b]*p;Nl;Y
%BMtC4kh3lca\#r,-4.!rHQK1G#'8>!KYeQ,=E19^go1\b-1+uA.&e#5VE--#GZ$73<^Lc,d+@'0WA;I1[`=W_E5mq@$Z:m/dTq\8
%*nnMg[mDpC^f<`2ocY`Ab$[H;G_>N?7KkIh0f[hmi\hF^Jq/k8`e(-u""/^o5EgGIE-;?F2R,k>dQo;LYAVPG#"73iVB/;SaO=,7
%h*)J\5*X#tFG[3j=i*qa&P\!t/tr//64P9dZ#htb;)>K8C<HH/F#V;%'%$:]4)h9,SU-<k#PEo9=2$rda_K!hLjPcV\Y+G*>PiY-
%e0`7#&8PT1`h1\[msk\Po\"r2):JG!8950/W"[FLI:Kp@!R7;t%ii<RGo&o#;T"oX\_;LlAe'4'gg+@N&<P#[XKft]R@8gRa8oji
%WQ#q"*613'.G$iI#fIABW,g)ac'@ZMjs]0I;o>!o3aX(NW:7^l;hlpM,V*2=Ilh&Q6*cJX%WrF"Y6H[NC>g_.IAGqj>K.hA09=Tg
%ipc&lHHk")j^kF.b9P91lIb465E`!E6^Il]"aS=cbG3FI=fMBI;Eoms\ssO3Kh$25JJphK[$=l;gQl(jQc"MYi7b2)V[#R7`]ra6
%)=A&mO-:e'`+B01CcULpC!S_Q3INE0li=D_g%aR.A<nIH?4\$[S:;i-?9-4"]Yp)q*^LR.[.7=)%I:7h3&3IQZHAllP0Ag+.`^L&
%<O+sul(qZHnk2l+U6L-4.Sh<8Z]6J)*huPWo%8:fQ&QcY*4r^.\F<B)j'EfXQ@`ftEt&d@7!Yf]UeW=6NJ_4rEl;7\\Se+F]b(.4
%$QZ(>B-W4-Csbj&2p/O\PGaPK@qoh#U]g7QH;=uCE?&G,RNn$N@A+/Xa"]sB4QVahRR,B+jLJ*ol;2L^qh3*2a$4P74B+'mN30YQ
%TWSsMZU>TL"-Nb]Of3(h*dOblP'%aiSk4m4UQI@\Na&s>aI*Kj=KNL$>`sb.,$5/jhD:G!dE#0Oa@r-om[N/%B]LRMhB.B4ZTqc(
%ZPk@?3Vb1a*63#u0FUF2',0DaC+ODD2hm33(,@JYq,ks>jNM6\6/klY\J-iu?@h&`&WKqn>X-QO?E5Vt'W2ZY3A\@q$.rOKd-J=K
%+pU`2'K+p4kK[ZaY0I;>U&.]H6B7V4JfrD4(uP\\H"R%u<<,$O/],E229?&7pi3qVDcEKm,;D/RhZb1K/a1.NXRfC?pbh\gDJ3H'
%O(Y_g652PBk[bguCYWn`SU&jDm!,%i>c-.n(L:@BNlUE\Wml$M9DEaaNe:R\Gr_nKn^u??L)c6hcg-\Q-nnt=M$&GP8>:qU3,[tg
%NAjW$9`"'TET8m3p_s,=7;\d=>@WX[d8(ENNAV2-'ShaC`o4)_-".[B!&\l"/;"Ql%^QlpI18"SW=m?n`Xr\!X,gtO)2CX+o$*H6
%=QKP^89>D^I6^)5OF*m7inYI?U53fXU(`r,FB`>g&9T*1^c2gY1/sJk%Vqqp6n)F^U)a9r27e$oP]9Ta0L`H3`tglb3L1Rfoh(!M
%5Ss57=WB^mR@%^a/&3nK@kb&F"9C-K268b\1;50Y$!X),2:1hQVRSJsA;r$u',,r2L(q]"G[N@)30Q@KnH#:BX=kPW<m'p5>jRi2
%]ii523_^Uf*\f;u9KWqjae?X]%\t1>N?f!93JX;:_spc-YW-1S8E&JQ76FUuRY-Ek^nQ0iHU`Pt$E=AOGZ2Q'l)#[0R`hhO!9.QU
%PojmpTFN%bS%dA8iGgCY89K0%Cg"l=*=b2WU&]-F[NR^[8g\M.gC.a=/l][G3)PRT8@d]T0B_m<8o-KD.Lo'a3#EWoh`#.l*3%2a
%L($SObY9C<UVKsR"]_X+Rq)aWC#K3)"Nh9g;^+[0)_2m6-\4lh;;j2FbM'+pnAq!4"q$E=UX*"%iK8EO(a^62\57g1\^H2?("XSe
%E"!jBfGNS0\uIh[G\HUA)Bh4"k8,@r,=S`QD(6Zu3G[.eU?$q3\Y^i54Er!j)BBe;Q\BIL13*lb?++f#K0u>s0WIg_i1W.]=1R7>
%#m?R,JSY<&>\^M37+->3U#:cif!Nfa3AhAZKq>G%;D_HD"UWHf?<e,Z'+81^*k8+K_`A94UN9'H\A^0a(q?J5kW0)VBp'bLgnX4?
%K"rO`q$/V3PgpEBi&!#UbhXcjr=\c@M(Q9X!7.V7Q<5S%J9ukc.gb.ERWI`oE-(k7r\om&-2\^3defcIgB[#omb$EuVW8RK0Hcd^
%MAm<$\#KNNpcFV*qNCaC$>S43=)-7R>ZDfantn%f:Wifb9p;ed23k'[n[g?N!5Dg5n\,)Aq.dEX)jWA8G>>&dW+E2OS@.PkB<6$4
%>#0iuQgV2iLH(1ulW[I$;,FR44iSV"f`B[57jKFP;\\qR'37>/:FkfO,R<"UCUA#9.>aqP&=9fCEdJ_8dK&8ae2L.h1m&X>4/\#f
%DGlih<%N^)".X:_)gMY\p'Hi-9\+q67QeBR>&'FC85Nb^1sEF!357IXKM5=8MBbBGnf8?'.W0X>bb2^uosL$7$Lspq,JF8V2)rHs
%(eA=p"+4T5'CVhKh]#<B"Lf6)3t0V$DKKgTeA^+I$MP#]&YZJC"&0Ntd,$1T1omH=&9gLcJq:Vo4HPr6"9"-feWA=chN0&&s&4J*
%%%>M<]o7LfE];*DFf;c"[I>:5CG<KVR,70WQ.jBR#kDE@Zm9sQ)M@.%hPe787LeQ%RXWY/hXH\9n@7Gid/\<_.:YIHld,JAjrNTq
%GSnWY3TX7<hXI9"!bN]r"GSTKa:R0819nAIOuL]7@APe8eq/H^>sXJ2?'Zt^43gi%D]nL9Jp8`E@q!fQXX_@qnh$\e$1asK+-Xnf
%ad_^X%!\_5]J4]2>Atj+<"s/GOhC5C\Z+1OhCN5cJap6]\-J-@H2EQ?NIq<YDiD/1Z/'_7U4d4]H1UJuC!g5jL9D@e#P*U"B4)]H
%d2g\c.Zg<^'')bNL9O2_jA!*[+gEH:Rrfn[Y1,_n/1)"N5i2E:Bi8ual"!.#E/imP`u5?[TG\Y#2/&$1Gd@aTClRJ7@OAj5*,dmo
%H;X)ihJa>F5\,l79qQje\s27BPI$eA--$rL<$I'3*,k[gCC#\g^e?V?_fuQ&8eL3N4HV7(feD9%QgtF@1lO@6T1SjX@D#Ggb$;i/
%doDEc>fCrGmi8+QWYfY\af$,qGl%tqBc(cQ:jH-_Gb\]HhG>U2;!h0$DA[:Q:bb_X9(?NmAXc_p/q@,!i:;cqL70?Ir&Vh:C:Q#N
%+l54S=FOGJJrs9"03Uehk=RRP"RfU/koIPYpGke5c85@/$LaiIO%O$EGG?26OQua]6pR/<T4!?-2rKkI]1G0r-'HBd]:j?nkhk=S
%nAr_Y'"7$U1fSR^gl2I*U<t;*3)`u';7gf_a)):>%>>of%ZK(8N?_r$NS2S3nAH?tR,)S#i5qg)&&ZH21r,J_';Bsi(R/cQRlo2&
%31]2*a0)9T&g_UQF4Git-tO*Xn[`]^d5q`=)c)YoU'e$WVpg;H+_mH;aS<)rl]s\'NAMra>:=iaQBms+8>O>fAqFIm=+Ug/%G-SK
%M0Lj^2bQ\K;d;6h!d.HmESW0X30rO7q2!,.\Zl=eR$NN03j'EZD2D=O>W6.O"@?MZAjgpFB3%UiB"SBoI14_e#Rl!iiO[]6&o(V3
%Fo)@HE4g(#BW&#jGhiebO>qqDYF?[l%eVD?6E21=`p74CWJNK=2]ZYt1h"%7k(hqNd"'s)]-QCB#4**A>Ip7PYaZ@RauH^aoP-mr
%'>#^in3gd)DXk]rMG^;^Xc[Y5940\N74_;D2[^7@5',$qBXgh(VM7n%#F3pnq,fEBi=YVmoN%BW,UeN*4B4rk;M-/+]c:dI",<qQ
%KM-Fsfe(12"g!GV;1j,tfo6',hq*tG9Q!4FJ0DPdgn53s3D5-nn"b^)QL'Zc[4&>MqCq_uMX9I[`sCEGZCASkJu)=V2uV3:N[V6'
%,r-@<b\e1dCAAUP?n/A\L[=.j)&ZREG)OPY0;5bQGg++kl]Br^bO9-T<ep%=pdd8n6+bN_Yu!Y!g+@%O%>_,G3'fP;.\^--d#i3q
%#431+8Z\^$#OV4j4rS!U4%5';G#LCg_e4t^NM_ReB?Y89MA/>2JJXe/"*eV*DB'cC^7;#a_T>Bd@>X=tlAbtGL?o]#Eh8N:DN$P!
%IN5ZJO(4sF<05oE)C(?t,T%k]jAp*<DMnFV6)9D)p73"P+hLlDe$("-&"aai-OQs!SEDb?2_:*:iC`GN+GE@2PR2tM/i%'c%GB!8
%-9+q72]b8g22CNf#rfRZZ5^c9o/L8>9>iljaDNH#dB/;m`^<>^FNA?e8Emcu`,:qV-$Nc4fM.8P8_415cIJ6C=PR!Y)&#kWG,M%e
%LU@g5/a4?'FsiCU.91rT..pR2`SCb&Un&@*4,HR"p@:b9W4g6f\eA;;XBM?kX#d7Bd7iebe.#`TVqQ:Y`fPqGqbRaO:""0MQ_di"
%1c+68]7Ls!].?rWG8=<'0Z@s_N?nmXX-i<3<].OjVOVo:l#m4f7X%ubM!icU&fRJ`+:]l.X+5*9b/4RZ)d7-9Lf6Jr$=k*Tijj%L
%pO0r#BBEf:FRIB%d9hNIVj9Tmf\Blm8@h>\Es)3SAZA5^-Asks'cq^a"hlgKgIg`]^9WXX7Nj4I7cd**UgXTE?(k1TDKj4`:;,*I
%O(Qg>ZX#R:2[\b]=<hhgH,o\N"*-cR8f"r<\Po!='co;qFc"OaWSL/tLU,=;_.[E$6Oh&[;MCLe>6*7]L/h++7=f.'C*`5cc3F^9
%L?_i\[jb+iOiV;TDYg4cc(@nD@>>X^J3pbE4m^`;ge8?Pk9Y^AYukZaE8uWhE`<-[o<kf?)Li]3bltrQgF/_:?_qZ[+OIs6)-.WO
%-%!7MT+\j)Z8`eK4#K*cEOO[);$1a7lEB?[gSq'-E&;D7<H+5,;7El"UB"Q,S>Sf2gkIm7I6FUKD4umM-#ae,gg^f'SXHfWNOOmF
%/k<q97U-0M(l$cL<Es"nWjHV2dI7-DY\bAnBms"3[em[kg+H$`Zjf&kU8\nG_3ULtWQ*W:%6nEkD&c8-UUOenV?_U4+2D]f=AD2[
%f;#rSD!Fn&H6l0hXCAV8.\Kh[CnlZD/Io,33kRlbZ]2Y!eDc59cBU!C.,-^&8_WngA@lNN7(sLKRkMcf2TRd"#alj@bNKfLSSYo(
%[Ribm?35aqo7LYDU:Z(po<U21>9V`@+'_,AZHX$0O]EX[9GVBF&-]\4Bn2%,[LZ#,92;eh.j<Zs5Z1`cK5@krXKMua(<pBOQ:Pk-
%*$k`u$JD:KN8@85fu@[UB..:03(sgL)Ij_7TQ/c0fIi6,`n6TfXpHg4MVu;@8K20/-#>m61o,tADX36uhrltYZ&KB9DD9'g6YnQX
%;BiQs;K8uu`&<@D@'L-F%B3/k]rQtV;?h<9'c=.:<[*J2hkHWUM![g>,.<p#R?e(FCnjD2ghMX^&i6I.0Z:Cqrja\UZ]^:hcGEh2
%C5?^8@J(U;`&:m0,r)YK[dfmlFB:hG,@$<%1h1>HDG<+b)NrD4H*',7)a8:OMGh)F`,I=X7b>Y!&P9]/f;91;bIQT>WC2nCkdlMQ
%KP/jc?!BqcOed5=hCCLO[Y+kj]"HP^g=2$96](?@n_L0cFF<I<1Ce^7Y`3lO$eM40-Sn5HiO'P1j9nGhUh_4":K1b<_\&-%'Oto'
%CI]^`NDfY@>/6en[2H[qabc;f4I;AIb14N-8<>X-FJ7`P*bX^h#%/SXKGmfOeJ)MRWL[enRR:fla@8m#KrBua5[:c-W(m:&:R*@?
%4VLh=ep5ubU/=En4RFCN'o(_T#uVFXFU?N/7OpMF.8(WSWIV>h1Xsu8g54gs>Tc(U(=dk-V'qcUp9Q5;)kIbn0cEG!7RKp$@q\Bp
%\5u%2P;/D^0-YPn!&/@p2Lot8MH6P`d"]<%KEeL:*5;B1s#,7JAH!,tH8^/8#\Gf92Os+hI8>`L+?N'u^tAuj(=7bUZX_qu))N9;
%.gF_YR+WmQ+>AekLU.^1FG@J`4-n6#Wkdt'6VnaU44YCqQ-5!<XM_>L_Bi]'-`S\>W,27DE"fF;ZI&qAc9U'fV,oTN2IalUeQ!?J
%*?1Zg0\N_uBh$4a)hj0i/8b"2C8`+,7Q.]Q<2&!0M.-q4X!=nnoSYar<CV3rNc5)2__6oheQ"dkiiPWQUO(EP[e,JMa3G>UB34?M
%.&<<Ri7PU%1cI>$0f/-/ls(Pt*#Uh>4+m]GUVIpPK!B$'n^QlbW\ZGb3%d,%dnEnE@^38hdU=O>4#bB_;6b1@^fR5^0_NL08t7WO
%f/sf1XNeWr`P3<*S&J?S(_k^PS(Q%k%Z3uM"D.!>'cY,$=#)6`&R<$[#P$JTEgoaT"3T!5nrAUH7Z#d,%#aNM(56,5@`u;2O%Lr]
%D;Z+b%#Z\O#Xu@,nd7WgPiQhA`MVTsP/g]PYX>-sWBC+&>\o399Q4+O@cn@4m\&3?%7hgLARaif'37V4kIQ1*+uTc2(8sLb>g\IP
%*]BdK_kb4ZkJjkeau-Sn1kO:lfS!^q>jX"m_o]!_L;U/rnu=fgSgu(=M"7cqW_8NgLJ=mcU2c_Me!djJqKEkgRr9*t,n6@7H'j@W
%>U_R(ULCJspn=\+[KILl;oN0$O@;L^'Sjr1VaT#b%bm8uE7hZu+V0IJ`^HX)f\s%XJjg<X;oN1?30Z8"WB!hU!nH86.CJbGeSs.T
%lH$+b*&^%u')<n3Ct@OBX5U;YEa`(uY^K:l,omGa;(u7?X#+XYb!MaXCmH?8!/&+FShFit3XqQ&BqTGPTc?KXEll_5;'M,?2&nLb
%e"LeXA=[+A?m%YVnetV0kYP=?@In^a=M27Z3C7"3N/&u3BDb`h@8e9./,)Aj)E;)D#r*P\TlaP#C-ZTeK#FKhJ_5Y(8W"#^@Z-'i
%&l6dcLe[%KriSM&(5.R[:*`25XB=m?%i_rVr=5^2n1>(!GhAr>h,`QE'67ft/&X=IUT8(nEs#k4WnjWdYt6XE+/u:X)^!ObfJn6#
%8?*9,WR_h)YS+2aRYkcf88Mra7+#%&@LGIO$VD[&r>9*Hg@gO>\hr$#f]!j=KI%78Y[SmiRhn]8=VZ`eh7V^o#q_0c4Y%B]Rn$>\
%k`e&CE<a\*&r4`@Vr>a:f[,ULkXQ);NFI<HUo1-CK&IE!bn:%Y<,pP=<^_f&YZXbJ6ZLbk\ZAn5*&c,4jK9=0)dcpA,*dph(=[le
%Q!u%Kit8#m1!hf.;!-qI_:F8d'"WsOXmnm!Y*;nBfO_<"Z$@f5VZJ/R]<PRQ@adH2=-2&;#LL<'OOuC)"r`M(qL>f<A&Y+nZtaV<
%#o&k`8STPd:i(-o:\,3Vc-R"OV$r7+3]oLUW7^*LSL,Wt]?Eo[<,?<bZ7J1)`?n>[E`OS'S#.U2BJ:noB;7I/<3m?s*o9c!;8=f+
%<,CjDR-C>7`MUY3l.$3#bnA^n"H1M+EJg](Z2#7_dogS`^=X'*.i'(M"UT:Q@BkY&M_lZRK`AhebYWW'@Ug"7=]`LMdhd^%<5un3
%Yc5`/P`&7)%+-[b/iJT4J9P77QLJB%(Rl_6I^.&7jrN\_A6`rN@jE0[\$g$f;k8h@=dWfBj'n4sa.._#`MNf+&o(IXfO_=-Z+1)p
%'qfQOfl>6N:uc#[=>TEE!=C.4lXa=;etEUUNJl%jIP^"n$gKG=9/&7e,*N+2D#/E4!o:*5n2]K3j1*aK%0`3"V;u)a7o!*9ENpD3
%S6'^^O?-92K375EkDCL(V(T<ATi,/^%>nGW.ea>HO">',a5irC^gD'K@)%&.X,b+.funif&[Cl28^VQDlpR283Y+;Loo$^r-`WVY
%2!dnINB.J0;sg=^>&04LM8IPS!7j]nRH.DI>UK5TLV_7m\>G;&cHK[l(i55!3%t[t]NrH>;MAKtPLr1*iIf.XcFD;R3qLl5fI.Ht
%V@p+AK(?41InaER*Zi+(#Dj>iP^\UD>dNM6nsDu)JNE^t=E0j_KRJhb-hL5Vn!Mj4\r+3k]ESO',@;CJb)rkp9,(\7?c2gM$>ICa
%e,)-49BnB2<I#U1*QBFM.e,R,9[3jTVMWL>%e-VgF)Wkh21csL]JePfW;)Ppm2CZm;%7[hRcgE]Y$i)U?LJfu)R2PQ:m.tihN3A@
%%OFNu0XFN6Euj@7<]A5[Q%sWe;Q^])9W^U`@60;:&oeAI):J2:E1NpL?la3Wkb5f^X`5?rnV4NmNN)rYdB2HY5,TmuA';l,D!P3t
%YWCJVkmkt,6*1fJDUR$Z[nu<.cah''`^*=XQ%HEP6_HcJ;ans\RFX>ZWrAT!'[Mr)=9g6)j"cYC)UKD&*#J+\R,UYb'+JR`G<sn;
%X#+V!377Z,1ml^b-5I%S'k)2!U%PJ/ZIT":8$]!jK,U+jL.r?_;Wh.0QM&3NerC\W'^N[;Kf+ZDZfHd[!9(c$%.)Q)1Gj&:%:K\f
%<,RR_YQdpl##>>'a3#3unZ)u#JaQ>(eZgjFN*[No.rGf&ND]uA)nR"f)s[G3?&bcXNb'5qo1)bM#-N\S8*YhKX(bGW>BO[<N$m-Q
%)71=++AP".<eorm<(BuE/s2nAWtC[BJ5ZVPLM!9\!NR73a`u>aOH!+sK.*CiUkYo[/O+d5W^6C>C1+8\#A^NJWY&YeEL7Z-'WN[p
%P,a.&Vf*#D*LIY:EN0-4TJ0%sKT@BA!3$H-&oj"J'MsW:N9\4LVUc=/Kd7dr;b*dHCj[\)3p$cmOA?m<SZLbK)$lC]pFhS/F=G>]
%WRmR&@YF`+;&O8.jcm\n6W6?d74*$a9qB`claIk%3mpu@%SWF.#-0eO3`\V#_c$BCD]=sF?"iP#C'd>V;J^+-9Gk5YOuagfjrfd)
%L__>_0HbM8#=67)Rr83*N*?1h*/ckclk>8N%P7IZNhT8_f],NPl=9'De20?/i_WQ0A)WlDgq%2[#W9VWYE=2YKGq+86rOq"#D66A
%0J[@P,0Fo(,Z'7G?5\8S0KHuEdgYSEn@$51,Q9?Y:fL%d3"L"R3qdZi\Npb1Vq$4Od*j^L%Xq!@Q6TNH*$A%8O%UCWjCtQ,A*-$1
%nhg;D4Y(Nd>4fA0MU]P:7.M]DHMXkerqVTY=IN/MP8eg/;Ce@a:E(_-JZ%PDr.M-+Bdb6[c)K?0YX9\rZr3f3$]D,QVa1lf,\,&4
%TL$L)X2nuhUfsNU+N<L@TYP9/JEbj#]P/3X/R)*:`=lJ>Z0LZ6#0R`].FLanD2(O#Ra-;eH:oE$^/8!qVK6*$&p;PX9"D_UBGq&k
%g/SLsR(J;BY@4;LL#P)71r@^07B"c+"-l&-`cS*:S;o<uTQ6?ak\-&A\.-soe#AKa>\Tq[W"(NK$>Os&.s6+$<;1\DNJ<WPcdF\\
%1n9Im7AQcJYF3B5/RA?Y,thIA"&#QS'4bA4e=`j"X>Cp",D/^#UIo$k-S&.7"dY+P,0O08)+.#ok"fPZ\277(C(2R#i"pN1b*,;r
%Q,MZ4:)`^Pd<pp":caM7&3$1;$\G1m8Q0!a`<U))!$?2=.SMm]%(e)FC$).Nir^iH!&DN@Xse"oR2U\r.cO.\.s6r\_j)*0g7^20
%,G")cX])#-^?'.m;N!):,ar46UEEBmI>O'29uCHDBi)0!j$a3cO,/cQIWSmjSV\4T=EfpmoOq?RB\KE$UB*mn1sN,@Tr&I+U?Lf7
%&$^7tF=)Asa,SC;FQTgT%&Aj"3]3A=E2LlYBJa%QJ\K-_c9lSBXtuhoKsE[KFDd4,7Z=M,W!#S&AgoWEFJ_M_#D]bLTh^N#-SI8a
%)D)m"2H#*c!M*Dcar2cKNX@%c=t'mGGm+mV+8[lZ^kmddMu$/e7,r2T9IV8Kodnb.$AjLcbTb>d;s>_BbRi/U[4qZn7Yjf=^$Z0R
%M1sb',2*d](suoo6D>-)8NB*l:<:pGeI^-LFs)'pFg49+Q[pm%.Rk>d=@Yc3f+i(6dO9m';im5kBUl"HEFBRmNFNje3/<:/ktU0>
%1r(Y?[td!a3`[mHa+afK8Wji>)O`9i2!(';kX<+t*#Y3c4:V:"4?+LjC:,_ND(*I#I`[;PUTriGoC/9G#I)Q7BTiI)I3&Or78PCS
%Un4H+-8`5<p?nG)AsIF.k_#VWdUsB1c4pY6B$ta?s-;Sn(ES8P<r/;3-PjWKq!`+HIo3lB\9QVp2mn%<ZX#\io#nfIn(Ab3o0)nh
%mIc+^DQgS#^]*\fq`!C/edkQK4<&*[q!WNm:AF'KlcL<]]mfM3c/Jn^h=^_dB>d7S4YpmrXL#1\m;3=pd[*8cet`5Sr"8rdrc>9\
%+0QCLqPD?TW)ibsh:pOb4.Yg5cM3cQrV!Bn/)J&khRLqWq7XC#hJ(=TX`n*2C!r51)`6U$Mqs%N)DpE6o4u4[UCRaG]q+j%s7E11
%2]K+-Q-QEbKCt:rNUc"9^V<paj5T",^9=nXMegr=rU+p[TQ.Bn2juVcU90:4rSdU%YLDCmSDH>JeZ%BaDLOdUE6aA;Dp!BQe6*f8
%IbcY\hIKbL;#e0HLTbiHj+a,PI]pj'AeiXm3W6eJ\3&P,DL8B?BuG>$]"Lk&M-6m-?B#=fDcM::p\Dh=rEH$d<@^"5ClWj^s.gGq
%I?Em/3c39C]_BP(It;60[t!0LXDMpTF^@G:gHW@hK>#R74WY"N[&'jM?4C'Wljl$9%u0JbSaJt2:XnS9Sbme;)XQl$7br'jl1,Y(
%"bi5j?f9LUB<-/fG*KUhc']U6/lE?0jX:qiNcP/YUYOG)?-%f7B7oVcH4G!*'G7[Xh!?Td(H8M5)EKt'?/SjB43PmoEjN+-76Sg_
%drgsle=6h*bM<T(i&'&e&JtI0\(LMYdp(R@D[q6rg]k>]4RY*<b!tF9jj%dMFgbs+CK@L.f9]h4m2rgG:ZB2Uj8eHhVFLu<d,#k(
%]']LVn_`V@bKUJCcXr@UEUt0:`$T>7Z8HKjj5)WFg)>+R-OcbASFXp*YXt8KchWDEEgHGB$H&?OA'c/'Du[Omr4/Z4C]<"&U)VU.
%k;CC#\9X&,LKj/*cItb"=bCJ>c`:?H^!=XhrSn+;CcsbmP?ieA=+%XY?@01=k`<aNIZoh6pl]]6T@^`,.t?mpqOKE"Ye4L5%idNV
%YP<U2IiOIf[Gle1LPnNJULsG%5r8L]mP;e?6+9(-dS.Q$j0*fh24^aC<,S'oU$%@>c3nP.Qp,e'l>.K#5LH9sH-U$`\7dBXK5KSr
%EPbuR6_Mj1%&jWLK(Z_8([^Xq_Vugn@I7KI]X-?12_f/Ee5FlUORoHnJGXGKj/pH$5>HK+CI<3K^I-YL%H7,j@HIX\^\@XpgKW!u
%Yb%'iqQr'6m[tpT;VGj!]2%P`pe0LRk2eDjni=!9r\Sor2#9*H?EMnR%2W9K\a\h#dU:F+*-OCCBjdm/`GJ:9gdVr/j[K3rr`k(p
%k@&_D]AM\M>/bPEgeX',@^Fg)2_k/)P`fK*IEJ,kL3l"7hI*t37XG/s+\fg-B$8g1q]`@Xlo^W>g#@-_(9_EP?JV+ULY*q\@U`B?
%7\P[&0u56i$[)jZj4>6k.2RHHnsW*R',o]aj9&-#1,d[fr=.Q's-MC;$bM6jb/Q6rJ:^6@ou2.6=[13`@$3F<-B4C[7JV#NnT/D4
%K+B_P)SC.*;*-EM(n[+;gAQJu\(9ed2O`kY%UX6_m9=73+?Y#J%UX8%]?PA?[+B)3FETbEn^I3g6uG#smG`9u9Pou5d[:;g?'@`O
%cGn=$'Y*?GO4U];Zk!&`YPn(b`q#`rNWrPSSCb7s"9UkOBp#pXle?`<,MRoZ&t/re:*dNK_8ht6V67r&o9mqP(N$Tt20;=AlLoPK
%4Ec#eHIcpB#J3^a_.r/`Ncsmcp7KBB3VAduD@[[]25tk-9o9lHB<qn]7r"Sr1O@l+Vqo-I^,W644<67uENW8([r9aR0JR6]PSfpc
%`7JCEXWsH@'-i.Z40POR#Q4i7EZ;"?p.oXsW4&X.q7N.Rm-s5pTOjU^h/W1u7dY4rc`:%TUpt0gm,?:CLst*[YCE]&MfukIgM!tM
%poE7Z$G^Hs;rNRr9n=ZaP:nXN-^j3R#gPP0/s:[,@lc_LVDr9tP:naIle#1KU,2nT9q3k/,CsGn[[mg"7;9,0?[Q4FNG7lNC!qfo
%=d;5G*']cZ1cVhcHr4Li-o54pJ#k<G`\dIb1hjnhCckY\MrN'1;'ok&gR.f2*%:kn#[`fC+(oV[\o[@0R05%b,l6"I=u@Yf>>@(=
%YE:Kslq>Q1#W$qgRGVDPpk9*:4tMm`o&2B?+")(.C8/>1'M?YMP%CMT]R32kb\UQHbIX"`f!P]f0O*.@le6/\Rtu3(AQY2@`3nhB
%f/i]*ZW1kNWr98*[@+6W<PmI+<L^+*s6*IbC(^=3RGBD@EH,d@"okVpG+oCqZY=OTBp?o?;1gKg9r$Au3]N+*FT:Rs?M)s$I[Gk'
%beH:KchT7%]N3h'5u-;0AKr;-9&0eZs+[*#_6J"N'*iGiq0)nDji>>iH`c<-mM,[RrqB1X6gLpqNL[gj5$):LFO4;_Hf2N+hNWkk
%]1`eSV;'noCj#WqkN8m@T=n!H]\I2I<U-/Wdq6sn$%fm]->!)WM(]Z>1g4g`_YTu7pOC'epB#i9M=KGpb)D#f%pM*$M;mO8`Xd7e
%#,=NaH+r/Y+oK8PT4;NPU`.8lmQM;i&1lM5S&eU&J_'&6EI,FcLHq[Bfj?(@*LeAc>C5!Cn*G5;9t$OJ>0n18Uea]Sh5><6FA3O&
%is`9%2FJAY3umDo=DL9K0dcp:PPhUFrhAebB3`b1jdXO>rGG<<rHB1DQ8AF,bl0[5p0W8W=F^MB:;a7uZh^2f,W[50hl4i`0sg]$
%Cqf)`XI7=WB(N^W>5*q-d*HOB';=`_fmGI4)UJKZ2;0-i(&QH`;qc;pqK\(/c0j06IZq,_(OgXFgldLs#sQ,3pS-@Wo\1r,qSh^*
%hrNN3]&Ee#:<$/[FeMk5]NXu@Vq2mcIX9Ihh<gbQ;;pXALqF1#GOU3=qpIpf%]2ic-6N-1p9<$1h^K>3cCNs6gta%,q5laBFiJW[
%S]s6K@Cq#j[:#jm],7QS=Yed#l>3=YS#O^4+f_k<_T,?"G4*4Fd_OqpknS\*<'++FT%d;82/#qc5Mb/onSq,*CEq)=T!Okt\]`IO
%'25KKohASTj4tB>i=e6<rFse"NV5CP`J-:@Y$cf0dC'aE[D1nWISS`#%H`lbcSK6u%UX7*B=R(5>kqm5&6I3-_"*YVioU(Q0</Ur
%`J\J>W.13a?=o(]RGqeTGaU!e"uF6ATm"Zp0/LR?oC"L>VYunaBr4-Vj,:#'JS1]78CJ?G4e7J*WM<.Wkqc%k#NB:3-CVkc?Zapg
%F'$8;^QS9$itq+NZ)Y9)>fNY,1!t[#0Omd]N&Fp_`l+*R-^j>GE>hAAB9]qRAqQUNQmQ3rS5GY+`XY!<'W1#UnNUo4S4%`$):n=L
%q49D=dZ&`N+an'AVnG+cI?o3B^HjMIil]c$Yr)o%5C]AP(=%@@O3A%G7;a0UlI=USr]%ZTeYEW`ZE:F\\ZPL.>GKI\_e@]UCcG!5
%B'N/.Xo(1DeN`R4nD=Z&8boB!3t,B$0/KHikh-8ZqG(^QkZp5tK^NrNGn.BBkI%ep;3U/?hVE#/^8:MJX"cR3\3XVnaAV1L8i:BP
%';>+>A_L%C0geM36hD5;9TLn7LRFPOj!"iGfbEX)R^?M#a-c*GApTE(*b2(fR,3lZdpl('*WmdsEP%>Df^*uD%Hk("@=)M>mQDM2
%S&?r#Ff0DA]D]8sBk&'G$f5+j<6BN6e6*f8IbjJb2k%h7#O5[W%l?$#F+:DPmZ'5ddt?6D*2rV3gM6pIWRX29`\dc0p%N[&(JDhf
%NET>aHu?jj*5)5&g9NqCTV4hjjjnCTgS?-sG$Zbg6@-ue*ctY6/c\"IY!LX/nXt`W2`SQQbd]qpDU:i1"uVO_s+/gq^In%fC4Eb-
%h^ePLP*LXJ6U-u":.QTe_M"k&cPGS!;j91#),HU:=/4nOLr3;XVHe(aY9luRps*4-(B*4%^tqZ2aj(;%%6A3NRTMI^jofVJRpK)W
%^=Gsq58hW=#+efoM_=ukjjVmcma+-V43RTibM;G@2`o:/:33bjh!?kA\-_iW>Q]P%G++nTe(bYKLO!qMcjI,>h!@#p(H8M5.%D=@
%B#hI8EULSIk%;ZEJ*_/-T!%*YUZP7kEUK\g"UDVNNO\aR\i58Xk4Z%8A:p8?kGI3#f.bkOU4;J5ZLa#)EW5.1.1LZqGcntAn1b.q
%"o;$J=uHInbQ&Ls$]o?lb33.TY"DaOgZuQH`htmM.2qQ\2nJ$6D`:S]NlHSBRV8\.hKb*lL<53(r:8FC*WOB!E1YNl'a&@uB@24L
%M7N+Jc4RmE92dT]VKtV#3dl,![<b/-KZVN+f>'=RZp3>\DfjPgg<Cmo>4qJ*ABbe3?M)4=ED%Wj7Jm!QK_$oT1cUB8[p'dC8)s<J
%H-g<hdXtV+i7?"0C:Z%IC7eS.Ic"iRptgW0X/L"/UqNe^\:YSSgljAEDSTjX!tZqrJE#hcMSC&Z]IS-ND*isdp?M@$]"@j!%%FE^
%3K$\V>qU4pRTYtqr08qPQ1p-\jI%iKJY]h4AON-35uYCn?;sM;`oe3B]u-2,>Pf?*Q1hX:J*[X@SMN.-]O[1ZU7"\3PDT9a1=;Q9
%iJA>-VThDP3ea9,;feSq1X20?(IXG`FBkC%LHq^-)HP)tgD>>clZL6$g>-88a[oaWg;E?'B=H><-br,%B+9O7:JD&KVfNhr:"jQV
%:J@l"dD^"@EVQJ9)oD2^_j#JY:A3i&A7/^8c1-`Jf5-)0D307JE&lYq0?/4GkSn((H2ir[)^eL84A.SW;2(V+RqS"OBCMXTLacm0
%9J_k)<-ZP2b/dLUnsRWOBiCE3I_roh]C"U$%CcTUZ%bIkXra.lZSdT_gf`4r$h"8\[ljW8;?(Y_VmhojCpNJ3`H+8so`i=3-dB&W
%]hD*M*Fh^ZiMLXnSTmWDc"V]=gh^q']'sZqkL1CY4.Rk.$&2.O2kt3klu(0NUJ\4lM\&!n5'CQu'huh[0\K2(IZrjP'.H[XQ\5PT
%OqY/KS8G6pPZ]j5!]<0b%pPU`C3MX3.\CceYV4]H*k0ajFMgL[-\GG%V*5jr\uBkR<r8CgPL]X2`lj3D7]'m]c)!"q2=8<J_/,L0
%pFu3:Ikb.i=6C,9E=`c\C=qs8[[L`)\:A)gbYIL<U%OLJ9psKkFaB+TSIR".co0RW&%]D*oQl#3]U?\Oc<8b_8K"Fik$n-&]tkSM
%+C//qjEhtLqO9)T'$F_uI<[[6^F8M:griDD?gMTQqpf'Qomb<]pff)[^$+i"s8AIU9SsWifGpu:>)U;sd8'"A]AMK5$sV&5S&II\
%p1$aE?#'+[h/1il[Hag/TQdFO\+[g_Xjpa)I-YN_:1']>mJ74g"cYP)NUY6T4'e]W8R2/u*[WoI^]*Ef^MPU</I][8+F]B/q=\ZT
%n9^dW@FAFakl!L[[6HcU.u)'M@Mm1V/68:u3j-m_0(o,?bq^g#Q)1$p\)3>uX#d]9Lg+'G`mL-TNS>DE::Y2G4mHq7Xr.^5F\]Y!
%i#fYq6`kar^qs52DD6OmfbbEUBTp2'7;ZPRqr``!s7LkJlZ)HuO%%aj/`1>,D7tA\[5S%br:gmh(B;"'qdZM1MRdr-E\BA2MMG[_
%[;NZk&'%2KCMD/Qh!^8aCXU<@UU@#lj2p]/%Ed6d05gT6+7$^SlUA'HGD?'sl4d6@MgF^8V+Dpsn6^1(G]R;V7BN&!R!Wn"PXb+F
%Hg%:^FJs\n6f#qj4,[]&(A"JIjnhnfjgS"bq<$fW](tsl<70^PbG(foc$;krk!&bVVga4:cR#i_B>sm_I[jrIPN@qqB<<90kL_:4
%GL9m'e)1(qqM9@j0.'VoFlb2MCdrEhard16ICtO:BPI>RXDEg6hUd))U!`-I]s>?4L^h!R/bY\p57Q%'Pj^Dp,XE?B1l[,sPZA"S
%_SO(R(SB).4sL8VnKjq4+4C0oX5`$h-aB#6@9U#d8:rH"0T/*ObB%i$,TT`=2[Xua.V=!'bjj`*`h/j*8Woh$BRL^6$X9LG,qQVQ
%`KCua?<XH+`OO%[Y7paXR%'Bo8[F([@kJ+?e;L_-r%&4Bbb3UHMgqHoMH)l3:[!s\/sqqgajMleY\_7s]Ld1.'BULp",lCY`:4.^
%&Uhrbpb*HTo:0E$&r2iV@2pU;(EcLTB1Q#>7n);NJl^%%fdg*ri.Ttb98D&1(D;TPrcM\e6k>28$*tVD54l]OZ->=mrMLJi=G=$B
%@-J!g'*^i[@07^0B-ZEW&J7H7L:nr_`dePSfJ_cc&E1,]`)5rnZok.J2B)R\_/PNtjo:6:@Wkp;b@ts1B/h<bL_%,P4%9dqTSLNC
%NR,qXd[dJsj9MbkIcZrSF7&C%dBB:t/?3oqLQAs<W;!;RmWC^k!$?Q=ch0%hZB5+UJcI!AmeNm5nr?g9D+GGj=V1Bh8*8K+dCe\;
%Q^r:S!uLggjeSsl]l"?2DR5q7qt\^a:9TX3phCr*r/*PGeEAQ07shrCTCOAq`HM:CDUHr2dcd5,cdtCq/7.slX*18e^@JD+9"J]t
%(&^tZL:kH4lZYgn_eiNDlkNHBoXs$CGJTuFlYh6NEt1>$kg$N8lSh&;%5#lNAOlW%-.b-GGXtU$4AP^5f^giPr!8_mLbbu+3V\Z!
%AmUuBfD\kCmOp^Qb)DIe)X,Fi%^1SIHG0:)QlZNSSNf/*YCErAPRHBj?bjmr+8b(]2DqdCZ.nU4ZK*>H35m%=b6M7HnJPrS1p$O*
%Ms\N6:)[PL&nK)eXmNr@D8.c?HU*#L,TU1j!i+E$9j<PA(rjkh=H(GJDQ!9:^?<W(grrCnV#9uH2D/?Ar6)0qJ&02sB*72#%?*PY
%B.Cnir"krOs'C'IkPN,)p,@EXJ"V\ZE?Sl:*.;FZ4pN*V>/??(5&g%Kdah.l\(:tN.%JJUW2Pu.=Ypri?N(K)o^Vi)V]jj="0pD<
%H#^jsAK]6/8b)i-4YuPu^NVDZ>ElVkHfK>#j_V'2]@SR"1YnR9-U<-Xc_:n3ZGjP+=)r%k/YG2f8q42,N-W!9kDOMe;bU)'`f'NP
%msX<bbMmgt*f@+JGEk>\_gg$SocO2+IkN^?lD6"LQmbj^DVA<3NjiK^f*edp]]Z[D'`YXecdSU)Me0e3o?QL=qP8B9g)-d!HQAs-
%YAA\GVq8hY7IL+]qV1k<r4)I`meWT3>Q)=:/+nJAj.;pG>omhKmhS7;EdM&5l_P-$X8l`LJ(=Z'MLnIM^_&dQmt4tHG$arnf53_#
%;iYpb^\$L'@#%AsY$CCU55`tQNp`DUktk@!&#Vl,]!iR-s.&ke>4;/DMe8SV6S.L<?+ST)5@^<BkcS[n)],6RrB^JUi0U0EDm8c2
%F(u=b^55kgS:fgNmt_Y;8M5F)p8tq4Q#/?6RXEq4s7f\12YKZ$_<t[?/6n!3So*`(rEJkoU@+F=qHl9ODi`V6$*f7$$Vg5TqKL/Q
%[F6jNJ+rh6f2Nf.rI4:GpPU_"7_S60oIT$"7RpY>$q\JtH`,=<B/AG`Wa:Jr4SQKeg\,u<oCOTfHj?d!+^0%Fb5>l/mSpJBhr;ri
%d]V'6f;Z8cH27\YO)O<_A)"=R(`-Z2PKqbSq67JZHE]A9k3teU7Zu[B.Ilqdcui\(;52_%0#W,'G/ipo6H8j109cF^0D";&.S:V=
%\Ou8c<*ej53h$tEY:DPmK.+gbp#/d)C(JANKD'8j[/mL\.qic140C$1<Z\h^@1pUhI!er/[9gS"Ir)e#P8=tRT_@`[LIh>A]NfZe
%2<t1=EGI%"4g`:`T"/<HmWI]/n("/l#50r`@Qh<ShV9Z/=Vd+Tp?9uAZI.N:I'B^.lW+.lKh&8!rUHQRZ99+ML1Q!Bon>oMhm+oi
%qU@0Yi.LuJd/emu]u,!aem<^,1G$+LGJ@4jRN-[hmV#ErlP/1(Tk^Cf7m+]`Y)X_k$+%uY2DsDj]Dl)^ZrT*AYJ':\@;"(-rmkes
%lMNASX_`1$mIbA#416^q/;4AB_"7Np?I;'iU$RH`b>-I3rCVS7EUBKuS^G_sQX"h5['SHAhlZhIXtha-Y"l<+*'s;mkd*,6oSX6s
%7Z:Od"d'n;N];FFPBMG&^V/H;]bp*9^N3sQ^P!S.S'gs$KAL"Lh0[i.g[C,:,G9)MX2/-8g1l[qXY';$He.qDh`AY<BQn=[VWC=O
%>qok;hYaL^0ePY>nK)No=ul+%)nkZG0j\h5rM(35gVlgH%ST6;,je=up36CNN.BKCc>T91.<dGB9<[+=ZpqEJNfI<I%d^rGS_h9X
%\G.Voj#b.Kb9R"6oNpqM4rJ1DHhbUgg=7+FE'D79D,C&m>Tr00`mL]<8#uO#SdgM-SKU1+n`pcC3N4jAh&giF7Ba'g7oVUN5K:Za
%.]_:4$pLa-Mj@mT)/QmhQ+>lFU3NBF%diWoMH0ER2O9Um`lII.Mj/m0j7N+nED4u%FpD#?$f6I'G0%O%X9RCC-cJ&Md'`)bnkgM-
%Ll:)Ih($CM>8qp9_n"Y09$=DT>h*SaEGo_nlo9?=Rg8iMcjadRYk%*%]V?nFC,\9IADBrFBr*BOkORQ08#'gC[ocbp6pe:WP/hY&
%YnpBc<@?C_>7W5948DlkST&+HQ$;U1j/cD.nR1g=mt?#`SPK,SeWsQFmVEWeB!\oEB5;cpN7]V5khlOmP1^./TJi[-qQd1l_<6>6
%<3>e4YWg+(H!SDb@rI-kS"3E#]73(&3<#M%X_t>kUge\XhAu'npJ)^UW*Sk\_bKP6K6bfs\p"SIl(mI7l>F.%*EU3s?0el\C.G-k
%<Zc5)%>Ji[3j"$2F0!s%Fp>kaPl'p3eHhMBM@jUjD8#28hg4,7ljRbp*>B,\kM7ipWfX$&*NiVm:)d5]s6[@f-C%9<m<clS,;\*1
%mF7$.S^LrANP42gT-qiWWO1%pSN&'U9&i5<FOKIEXXq26YJ""cYELL)SFG1EmG1QZ`K@4R^JA*n;/PCl6]RWBX<rjKFbV&Ypo(S0
%[>RH]qf[*V3oSr7<#[%`iNuZla!Q4<V7g>@mIn!nVq'N=%e`Yu1TYh<S9dDU+m\OSk_(Zhh01Ts42[8rG1l"enND:rWRW%#%S>[#
%<us9RhXujYCLV>NX`rO;:SS#1h4SreedX*1htj:shWg0b2LD>Q\l*6\\2EKB\:140BRei4p@,"h0IiMqb4nJePgNaNZd$j\PICG;
%gj0cghoU'l[[o2_k9j?b`PH50ap9V+h+-#(CZ*SJBMicVe)'F"4"'\:C3@N-j'CjU>C,B/%TH)^g7/)oRlbROMiW1%;6;gp+#jXp
%.['s7LPMlN;c3;aas#iEY?"\ge(`"=`"@eQTQ4s1m\[\c8IJNqA$@mQj_9@\NKY,Gf%AbB6#\>hN;!!*P(&1IR[^7RBGqB9itR&Z
%\2bNdfXFt"CVRW(d`@SDHBNBFlf^9;h0-Ot3-c6L[G'm,b37r>`R^fLV8U]DjCU+/+"%ll(@,U55Wr#@fWE;P7t$,d"r?08s.k4e
%B8J6OA,";F-Zimqk$Yj^G,#`EJA"[i@IKHL#h`?Km%^H1C"lMP\CY+5W7=+Q4g!OhJ(.UBD",5I;f5K]#7&Z\]<YF6I[kR$5Q22p
%JYY7@D4gI^bG.Y4G=o9jVs[l23p<4.>u>NBCdl6=B0_(7a]0Lk\&Tj(JZ*5Xd^-=#XuX(o*tQpE's_#NU]%3I\3DCLH*(tVMDsX(
%2d(R%,AJem3`3@hf24iS%HZ*VTr$FBiZ4AY#$b%`i6.Q-n5.s(Wl/)A.J:@6WkBmkRB#80F[YVDla:CW(Ct73CNZ6k<.d)+$Eq*E
%4%!q[p1`>/pMAJh;YfqpX4KG1a.uVN0%2m'm'GtEj&5LIUAIHYpS'J!lBL>;Whl%8nA$6LgAO`GgE.l7e?=1M-7oYf.bYJ0[Ku)t
%TD;o9=d,bS=o3^&@X7'P,so@HM(32?;Q04Q[I.\5O48+4q_+7:5Em(7R2+%_kFb1XTNt%SoMR,kJ(s@/<nhT[KuaA)4SZTC^3#,p
%b0cP61fYOMe,YOFZP4U^W!n!Z=a]Z*<nH^`8++LmhL\a0*=d7N;>'foq!$lhkHs8q9'mrP%0]7m$]aYV7o6<?X:O)0.luY;Vh=tV
%K:r[nI&.LZ207Zl`c/0=*^=B=fl?3TZZX\H-W$Gj:j17n/T(&e@3t3"?\g[FSPr$C2is?2p7qUV0lMs[H84W+:K3B412Iser_Kd!
%"nAQ*mT&e['dN,!^;])Gnmlmm*BRYi3C'4Qm+Z4#Q=HWYb&Uku*Sr,<]G<P[DU#,.=r/4XMFX8\mBX.uFaTB=J,Bqme*+^0;$Xi4
%0ot7KrdN@j%/T7>HM6"glNZjYinMkV"#,T?iVM*MrpG*Ih<g1?C`3N_<i+Q2H,7sgX!auV<9cUuc;Li\Sn?%:RkE/dF<"Hic8O"?
%Pe+\pQRrZ<qm3S/SUA7oB/K%6iMb`3<k4sUU,-YNVeF)P,@1hk]BJ`C<Jt=.ifqE05@N),F^%"T$9$Pi.WQH?=c/eQC@@!T9=Ju:
%b3f\P(.W0(:0QtP/s[mPH;1h%?GABNAE2YTH]eTN?InqUSUB=N@nsEC%2Q!RdFm89X_.C>(JcqV\/B"YSHa55@GMUI%W8*o^@du@
%qWi%^GE]LCm1eT[<NMXknP6!Y2NUtE*ahNu>/0NJqQ3Wl2pAXP^P,O/<V1'Q7_hN0[7C!hW(P$MS86b^X'!Scj5RgDEaA(PIh)0V
%Hc:MN(#*Op7PS7;DRp;.6FSW"[42:X7]Ud<]0X2FIqq0^NA`i"0%CR$<j++,r<Z!'iYrV"9"+?=rl,FSpecO/<p]Bhnmm/T0oksc
%[iT@N0@V#MpA:HnGs-BLOi/$;NF@&"2!nK6'/l2sAc!q-l3:V.=J<!oN>fQ$9u]6-qPt9HF`,SVQGl?AS,No#_%j@W;(O*,-$S:S
%j6U7,Nj9%.991-*nT&W>h.6H\V<FE3Qeu,aqrZbeGM5::GT:%=IWKLXpgA=/p3-Ioa/`S&\FT;j[ll\H.f')&9(M*2q<oE\Ii<`V
%qoR/k5FinaDksEa_:.b6+%9O_hIu`Fo(EO]X8+jGkH<(e]s0Mb++5*`.NUBqkK+N-X7^_M\Gbp/-hDPWcIu1jhYiGq\[eoQ%mB7#
%k)[I`e)f+Q\'prjN0ccC>E"$BH"19,n78oqBPkD'rI4>!rp"OreXOO=]s$<-O'1?1*j6Z2\$+5-.t.BPgRf9g/^:smri+Fo\)5Hf
%rNuE=rq:#Cp\OH?9Dbbk*c,^/O(!O?r_b;lb?OGlUl2q^h@I*)(3dbk46]OiX[diN]Y*2fq/u])2da=^)\k"h>'ds^ISft.nup5t
%2BR@PGVf6le\^%b0Dk;Q5I<BDMoXm#Y?]sefndDTZEt9n\8ulQ;L&$6ij0T=>b>C"qYSg>cMk6KY9/8)F(]!Xr<`Mh?=2B3Z6PG(
%]j'lGf_t*%gYMUb2]$h-^A7WfnG:K.$W#>+s,%"cS\Oc@-S-=&gj/j9I\FOHp$VL":[d(2GCR?Y:"*=AX`.^Yn]8KEl*g%u\Zu'W
%oXa7so]o9K-M037GF*3TMi[3h]m&T#NQtudIBb;>q!lJ&q5$T*^O3A.,EDjX=FTm#q=9!G1jFNKmd&-,[tF?,hsnGTqj30eh+t2%
%M9k`NH'<X-7p"MRr,ag,W<;ecjqH'jpZ9lc>OB%h=229Edh%R3nABV0KiO#NGjGBY'_.7MpK-hK^[Ag=q,Zc6h,sJAmM>^;4=Whi
%&)R!VpK)58bMR-ndi6!2GPBDFa(Ol:2;K2fpNsUkgLH+EMiZ[E]IR@*^N/chC3:_d`Et/KIpdI:bM>*Snl,+!A)Yu/a6UoQ\%_f`
%V;;.IX2SWJqsX(lQ[\^YiVCp]Mrh(Km]Z5s^:V'a4D$>En^Rm/d%?KGT2n/Nf3^1#5:ep(?2jW]_c$5=EpM$%m\T=$V6+N^d>.IG
%8^j#qKCXTHg98-G/j+W(mG$1QX./!=moWr?'Yk7sn'-9)rL;F+?_p?gPH6oskLK@b$a1V4pCB4N5j)0o_EPsM__:@WCW-^.^'$d>
%b"nLn[Y%rTI^ACCr]D9C*8LMSmcngI7]tRW^,X3k+8fI<cE2P#q\V)9^=aCkZ_,U5C0*QInmLFoA"VfDme+7T^T:bpqK?bm]DLlk
%i9FD4n&h-LHR.9oR<M]8>i**([$/0#ZuZ,eghJiUMg=gPJ;_\+asI>XHni6V0,KWFo'4ZscH7QKZgn";L%M;$c,&l<iaM:umH4Ft
%Y]B?TH@F@VaZjp^>q-o%nET9#ojY2:T._i]q=2p2n&q_rH4PHu[u/;6&pV6Fkiq'b1OcTTogS>pl>lf$E;fcg?bhaORoZn3@r$3u
%3DLBSS'PG_m@!Pf^:qF]0&QM:n(QdAn`K7KYQ&pQn7q-AYDR[SHemLcDro!s=g35JB)6]0jjq`/`F\Kj0.,;Cm-)lCFa<<=LIq$M
%K,n)-='kprcrTeu$/`ID's>i#htmH?r@c@[dE\58mk8O:lLcb_]R9C\Q[S5V]Z\j-g_]IIZGPP)GB`T+Q+cVNh$<qEb#88gbA6K[
%[hO0^Aa/p%p&1.+pO7NhmQ:`'`IPZX::H,tm&V5-OSs4ucD/cfZ$pV=))(j`]seAb^H>iN?h8tYk3kK=RObE9o"%p6Sm5UoJ(jq,
%YdXQ].Xu#@XD(,Fmeh%ap1=&1eVSV<a1L4k?g=OB\$iL8lgMSq#VU\teI%')P5eqSaZTQFhg>::^ZTajDh$g)\?bad/%].p;*:_W
%b$t:ZLim]o=7X[Jm7HdfI_@+qgColL[O??(\9i9SNGgGa$pOTr[t6)R=W)]A(QWPh\;4>7arAH4nA+l`k2#@\G?<R.'thg"^6<@%
%!oKeu$sP2u`bVD(*^5"+Z9,^'q&%uK?n^2+++,R<FSB"Ga10<<d2c1o6bY!rPP+a'dZOLq45[SD=C[]/a4riIq(Ms:?gEO:qd4`0
%"(/nd,8[&gb+#^\m&GAmggdt=5C#3^kQaVj`;J#b\UXHgOdG4Fgb%Weofm#(?m@XKGT8e';#,r`=#jTIlnA?g!I_JmmR_I[K<.T2
%Q*!O;k=>42JLTp]n=FgWJX3TGDV+@I:&T4#gnSFo+*]7cQa72)])6*H:OBhr]W@1>=?'d4gi9Om_CZuf<;D0K!ke!T]DLYT_d6tG
%o$0/AN`lnF3&a@R2AkP^\@JD.-f=K+P5/1Oo3_%pck*oTrp-Jn9R(F5ea%/NX7K\B?5;XRXe<7Tj9toqpY:5'qTI>0Dm+V0D%>;=
%R[0?EE:^+sSlu%Ls5qMn\!O\p5Kp<II/<NAltmIT,9FTZrjYml7BXDaE<iDLqMC!2]"EI_l8Kn#^3FbmkAo%PS]AArk?i^e-"#BZ
%J,.Ra\)71r=DcLGLX*c[rpo[V[J.R]#e.MC?,-B+lTAA+Icg;egqEO,lJUU(\,LgKD/iC#]sk:ej419Nj@4*pEjYHTf=.).f2`rY
%+r:E]a8:/82_(BsS3='Gm])F=EIPk-3:EsZ[R=pnFFt[0ij,&+>>JW*]RUfN!*.,2nPB2.iMFB4K`]d(G^*qAE\VR\%Fgk\S/eVG
%-fk#oaqIJ"Ri=Q@n*p:P:F\:$n9C'.DV8%OXetOE_=P++\/tX^r9[taFn(-cl\jZF^V.)Nh5,=*MTT$YdNc?'H;rke^Rom8\,>H"
%g+I^^#7kpJIY*:Q_t8*?afC-Yhg\i=qdQ#:(bOY+\2/n^l2;m<k2sL4`EokKQ=kj01$.r`n>g`(00f5RWDh$In*WO@Yu1Gb`q[C,
%^Xr)TqOQhQrOu'f3Q'YN=r3Y5$Z!HOlc%u?^\Sm&^NgmEJ,_s?a4XPG3^nOHMG@"Y"@%>2EbX_"05_SEr8E8;JTl0(KBKHG/:Mnk
%]f;t'fS\HP\W([Jqo)@I]e@MMgmIhRDsm<]I&b5pPB=+?H?\K63Hpg3p&2L<?`pR(pG"g`9DNHPj6O]d\)(`]`fnH$hn>C1G)m_h
%TBWEEs*/8:]4Yo_E?r"8hL#a>Rg5:no[Eg9$h)3o>joMmH"VB[d5F,u4T0=c\p0/QRB,qsiQh2FmAFm:i=kX(hq\#2#J_X(.pmU%
%\bYj1`J9B!rhAT5pjVj(m5qt/^Q@@Kp87`G<V5T^G<nu>.lZUGs*jlbp"Iq8;6b5V.1SU%2Z(I:ol>3J_ppD`d+318meZh[r1!/X
%?bX3pIB?`?LA==LpW?Zf8Cd8"k47Qk[9n$O*?I.HXPB/BDC4!'enc60ahhV,M:C4K2Nu$V:O2LfY.P(<EH,/%Cb9d"h1Y'KRr;Y[
%O&pd93cN7Hg47=o^\abXb\\8RKi%AXO&^)pfbZU[XBtkq`H^@r+8nq0QM8+A[^j&]S):FnGidi%EW-nqH0O:SZ8p_\HuXX2'F(:K
%HZLjSh>-/Q8%\'FMd)+Q\X.bbe$VANOlA+db\,gGmoDWb^\"sZrTu9#IpIGO`GK$FDY+ZZE:VPUU,2@1fRpV6eo1N:X\1QW^YeU<
%Y?UdcD$Wu&S#:UKp&/-qVK]qCcH?%IlQ6IjjUTk5XfErkf=ddmU+?%``DZIX'DXnc++?5"pRCV)00e1X^0Q\)s"LqOh6e'R$SPjm
%a2-fPV$HJ;`D?KqYU[H0#'97antWZiY!E,7aXY85I<Y(Wf?[c/rb?<C_j?^>>i$sACpB=TF^t7;Q)dt7ns$0T`Ja+VT8Jbns81*m
%=)0lf4>eUseX*%rldq<%l@+NW[J+,"rVYub`aec,-cK`TrZW4E=ac,-*P\&T=o7UP0>'en+5GCn\1O%nh5;@([Vg<(rpFJDlePZF
%?2jBQ[A+XAWu#+r*cpN#i9ei<eTuWqIC=.Yq11#>3q'8$U>G;2ZgBj1PoG@Jr*l(QrIqY(p"b8Vn[5Ptn"X*'%ZR;<8&a?UF@X9=
%Diu1`/3R3`rQTloU:--A(N0\DqU_(QQ_+5b+u\_g]Xablhgk&cqoKH-@BPurh^6IYeR'ET?1'k49*&0[jSLUF=Pd6YA['\_pK)>h
%^8'j!rVMW[7h$_m)iVJnK8mSBl..G9iVDl+Ds-R?mT%5HICHgik(bneIB:fe$gG:JB?ONT0=Ou2lARA<kgKChnEX/0/F`YZKu)(+
%CZr/%OE"/4s89ETrSk6!GuPY2p[9Ee;55E:['9+9+jF@lT)>h*p"]nC[&b2B^(7t`?!;K^]t-&8rUSoKp\[Mhq5mF#7orj'p2U*)
%X%2R-]?B6WlP/[UQiEYlrMHnaTC!(P:mH=E@u<)"21D`</A9\Mg/a@9l?Bf9T_ER&qYg'&6gQbHrcI<npU.kIeQ`tX`W'3u7Qt.M
%J%bMi^N/rCalE?]\X/dEkANT^po,IJ(]X.Xq=eWR8PM-]hYt+%,OXQ/YohO\_:QA)4.Z,\=Eet`C6(K)^;'U8rFiQc@srL]ma\Kn
%I:%rS++ISOIK'9"Habohb2W?nr-r#J%NRD2eCd%_N=lC5LrO-;$Gn&#2iSZ>#qEeQ>G$>on#dRIp[%XF7$G.3an!BIju^S-[^E<N
%^=1C=c'r&qEVB;(Ud0>i^L0a=rIa?RDgh5b&)[5Ifn8P,Vt[@RpHSW00E1bhhY?si]_nZ\^]3KK55aJ;f,)a"2ECW'(C:Sbqo6m9
%hlV+Skcf!P(aeZT=2!Jcb.GFcD(>MYs7tA5J*.o&D0j5Dm^^%0l$K%ohYZ\!?MOL)mpL\F#Me=pf7*\Hq\Ts<IJqG\4GAXWf3W]A
%ofmm%*E/:'q00%?.)/s1)ZT6o?[h6$J,&U596k2@p=BQ,]XO!edr2lX^@QMprK[BG#B.I7nqGER<uUB$Dj7^`$E5\lnbD.rDu7TK
%kss>Y?<FC\HtE<<LMtg/4ScHf5'c8-(S:49>Q#YFkIomZ;l\8a^@fCI=-Kb)IJ*(/U+?,bl&WN'h?>n7mF.]p3kt@X/#dpjNAp6<
%r?Aq(qrCQO[?nZ&LHchErl-<6HG`P-5<jGh,D@3MQ/h31oIo\3bIn'71%_eR5FO6T7@$CG6jJj2q6eOV*C'PSUCU`.dqPuZI2,!E
%hM^XKO$<EX0-8dApJ0F*;?!WJJ!F@:a8>^]]Q3d3]^jH'In`Vsb631?.mO$onXj1c`fL,o_4a-mrj1(XT92)/bZA/drR1J/=ZV'4
%V`.ph5Q9M,%HNT-qse0ae)1/okuYW7f)>'WSVhMT/,5h.n(4bNiI'bq'TI%GoD7'goT*@g215GO(]Eb`5IC=_K<Nq*hmgDmC&?-=
%lgMLadRS5gG[EadppQeWrrR5-s*4.=YO>gh^jQ)BT>%f'(aZ8I=oHeWDnbuL$g(g2q:dQPl_VsNO'fTjo8gUGN+%a-?CpWbk4Mg,
%5C`NB!pPd&Gi<!NrU_GOrUeQWs8#r,I;6+fnVd-+rLH/:Q$OkhrS?485Kc)PHY*0@&&5Y&+iJieHh3T]1F;OSo^*/Rqt6R&1?)*D
%p=_Io4`Q?6lf@!cpg`/F0kL81DnPW2DsX_.jKl<ZpofbKOCbMY^e4BqSY:7b.4HqKn<KVnj(6u7hgFhOB0N(HqYKSl?i'RKld>Bl
%:_h$'6Y>oRj'TRTIfI4hj/6hqm&+WJpZ?f]s7u+*HjLJQ9/"'PAps]e+8k&n0:h+J%j+/7HfLH"IJr8Gs6OUO8EZIL:ZWOF]JZSd
%hX=/IJ,"e#If*&mk8BT`bBI=moYl$ho\'iTV:t26nuI8M`*JELJ:Doa^@h*D5/qI6P:thkdqc__j%D%Rj0Sd\mJ+sK^\57,8RMAT
%)_\mE)i+"&X%mKr?r+Vf4q4"AhnJs[IsQBhkqsb3fLUI71Onu3-SM0ns5>Ks5J$HBId;UsDVt:kq;p6-mF@7=jgY6bh=oe)f_4IR
%YMT*Tr$VO@ri\M4itjrWlp&VMpdZ2tO$<Q_>>:T,J&@JCpjGXrr8sbuD"lh9iK]IRop\`QI.!D(^0dI(.c/A'Gil\(28/_^cYO&_
%r.D8a2a=qOf/RL5]^jY.o<#XdgV876GE6V3:Z$H;c,iTXiZ44cIn63GP$\":5MU=UC;!sPa-YY/m;'K8k3Yh!Gk-Jg?Wl:]54AC6
%DjcT&m7C*"hWc1%'WU'VVIR;cqoXtKn3,d6^Nm[gP\8#.k*JbBr;,<crQBCKq&LgM2dcU@5J6O_roCPl^]3_O^2:OGd?=sQs2B6[
%8,rS#?oF)'plFUPr/DNmr9[9d^E#!$=+C#)Mnbf)J,dcsb@#h``dZBYJKMVrO*7P<o%r\nSugh^g>8fimN$l9^Aj2M]^jWhT71YT
%nHZi,mQ[*CrIS0Z0BHh2G^@QbLu3UW=5WlQ5J?csh`gl,^#O9^Oj&<=5u4-INr%n_J%kisUY!6[dEO``e::NTr/WMGn\PfC?0ohN
%^%[L^mOc72*qXI3&\l:SmB?QTXk3FjRsaAIn"EF&mfRjH%qj%3>OE;1dPZIBXFKA:YQ+/0^\c#$++O%Rs6YeQ]^W8EV>-,'roNT5
%9QpS$?N0Qj^]"*QIIG5:>OT<)/"=eeh[&&c%UAL_In;VUdJmO[0Drk=5QCN0Q[e]FAM*TRo<5q._ln!jI:*#/h5.SEIJrk$hm6Ct
%rRF,[A\\3?^OKhpjrH!e)r(,Vl!M4*b$4mkqe&CoIt-YM:'I8D;U;Bc.9H&gX4N#.q/#`]6[Z#.I!c"ZRIf)uaSW0PQgOgi?"U#_
%nc:<4M?!!P;<[s[>Y#I)9&i42gE1n?nHmq.0>Q^2b<5^ia1qZ<dm%3sIe)/T^b@F@qu4XN^S4*;rA*#PKnhngjlaDXiFa82q6tkK
%kh!#.Q.)=SrEeBN#OP4aJVGSsk3q^q<Dh;0GL<tYrb_)(>h2p>h>X0:IJg.\q`catf2qdeX2c;t-#>i5TW$cIrbJl.eZXI?^\4Y(
%TA.]L5!b\nd%Abl8,[nnrP/@"s*T!)+S;"EFTT-6jaQkN?Tl+&T-mUua#&]K(C9m'rpu2a8RB-X,]D9NYL7PBHfj\.o$VYVX40co
%o*T?HHJ8'K](A,-f:2eG4fU;Dcaq]X]+"@Ie^UbFaS"nTCWu4!IJ*:eHfM1,`>`k9f5oWJo"kou`d[)6M!-Womk=ZSI7gKjIAcW%
%1=rn:8*[!@IJD]tV]K2mfAd^lo0/Ue^@$9kB0TR?\(,EomOJeSVro+.I%,VOj*'7QgDK=`M[`5sH/1"N]@UodHL7$i]$tigGpdR>
%lTWHNNToDO?TNZYhP[GqD4doU^3,M&g@sDs+9)$)d,Rc;HME2a`q@XM_4KeZY?0P(Rs7[fSpPkTD>os4n+uj>Wu#*THM=!-2uMXN
%CT1Rj3pD*+LOGH-R!Q/md2M2WffY&go<>L\?1L/,kC<5UAuaI+p?Om,.Q4T(o%a\GfKaVp?E"Hkq7<Y,T6Xk,m"O9`9=OeHO*X",
%-hld!liI+/kPaaUlI-7,jK$7cI+YIQ.[4h[`@dJ6iWO_7%HG$cI@nHNo=D)JbO8<KT%CNTHS;`lGMB((=bJo@a%GImq[Se&YI&R<
%a):XMk6(X_(?)V1G%fTgbEg^7)'A8Ep)`(thG2KMrPXrC]f29io.7f!2(D:FZV%>WgE*4GVVUOmY528P\ZU8nSWnP>/7@6FmH_bs
%kM==':2K(4`ZFeilaXsJG9%BE=0(Yu:V0[Uiq^Ze=e9%8.*l+h\'G68?[Ra2aU;TT>f(2;Ir=d#Z.Z-]1%oaj]pV]hf4C!>,b)l\
%dpgLKO4\9Q\iWBKXNnLpDDJ,/.;tfgr"BZ"`+/.[R&&ej_=MEJ>AM[MNa`B;Iio!\Q4Ybh8^$k,(T-o@J+)N)2W%Z/?,'D,T(K-\
%Qg;?5\m"etX1Ap%iP&@,EfPB<s5m^O^.O=V=LHfKg!cpIfc)SlnGe-!eCXBEq697h7Ed+5R9>?F8$1DcG2fhKrNnNm#6i\?MsYNA
%GJmrAUm+nT071R>plgP9]2-WBP.R&$'RO!.gU=W[46"//rGUO:qo(`\+4kZ.Wcj:Lf`gfB"$<i%qI6I/SJP!-Q9=r;bgthBFk/P:
%,TE**;\IiaHNeQ:HmMZNOeui&,1V*(Mqko6B32.eWHjq]#ALWHo.oYWFrqid[]5NHfB_"[9f#R0P/`RLLW13YY&S&h>K6,KfBe'.
%SF!91=,ih`(Uk'7D[amt+O`"73&lJ;UtQi+D>91?0KI4LG&..\pD;PLc`<MRBgq=2a/5>#4l&+?6QSnH6H.#--5&N_FZHFs1nE,p
%3Cl%TQHIK]mLjfg4uZ39e[0.c`CT]tCLd%GHDVJ4Xq!9WqePFfUCD<7UXe[b&2_O5>mdIbnm_K#;n(AJhIiX#ZSlfs8+!V2MGoD1
%mAR.l.0la+AOn_>3d@2IO,6EWh1C=-rfh9GcH8ZDCsQS>0$?^NS)6`4,@sQ$.PMZK+%EQDZd3eX4%qHd)NEu9KtCY0IkW\0B/<\8
%kcASsXYq?`pC/n,L,E*0C6."]k9K[gA'\mCa=kd^O"(Kt:2Q%(-^07mMqr[@?WIZZWa1k>N'A6&/=1,<m+.L_O+'o<nssIKQ;OHJ
%ddUg,^(;RE;*Pc7=&t;&RQ4lI;0:YO&l\?pqAO)&TpX(rG!Gm7(`TFo"]9V$eVQkA/6\0P+h;s.`l98%$Y.1B2X2uE0W9)"'oCZ`
%,a2l&Af^7]V=)[`I-^%Mb']2u>Dd(*c8LTXX"9Fe(OC75nP(SbX)$a1FtW1%@:c.^0&*%2&h,VeBD/d=0HFb1o0>OH+.A'GALhWH
%88K/<AmO0<3)T<__Re^,LpI0O.eX0q+!WZq^<GU2U2nI2E4?iAjCsD&7QUJ@eR_8BWDgj#fNcG:dqVsGCo5rY2N&`AYu%qC$5e0O
%L1`6IHZuLSZA;-%3FNXlC<j5aELr\&k\SFSgTBKoLY\^L9u3b1?8ZRT_tDQ6k%_A7RYnPZ,d/_Ii^'<9e.8Pc1e=M!c!u:WT:I]r
%HXgr4/T_&(<-I&orQai[n27R_ClIf):5c(Z]$Z4IA2frI.uQRG+uZ=?n'Htj(s/c2P!\Fp#;D;tIFEJk"?o66Y%V`sl&A[o^1u8o
%)l#9RBc[R4X&Ke]jc`-Q:H4"^<,R[IZ8`nQ^6i5C*6B`:S*T-]^n4:Ldt&BK8t%3QiIqRpl#r%eh-;NNSt3Z;7H<sL`*(<1ZMQ(^
%d<M0ElVuHW:=_["mB(/<>DdP\ODf2V-gfl/e'8W\79nEnNKMJ=G=,+2ZV"brbmZ*o,2('W[J7;:ZcSFQe^4s7VXrQ2,rnd+Cu'?h
%6E#jsIE:*V\u*T^c9@\.@<^,;lE\BJp0bLq9KBem+0)d%0:&#]*4Okjh&a?-aJarDOW7j)lo!6mfjs15gP.qLHSMGb;4DW:2E-)_
%lnHFRC[b&\p2Tg<$Q#u+c(1cMfOp[OjG,J;Aq.2EClM];1%!Q3BR7^mlAT1M@CpB:n[%.U/"<?W;N@4QUSa.mdEJA*A[`P`fJ[el
%4`.NoSV,(+7T_70<TOXic2GMo;W(:Cg7e[egG-;(6`akB>A&Xoh8F?lC8Oq7DoO.uAt))$41Q^D2b7QTR;e[%4SR^=SMQ$m*$6o+
%TdQ;QpUd-[X(L^4dJDsm+YWi')+(^$1\N<aKV-p^c"&3eI#Z"jL5`U6ZgN!n[I/5/Z*C+1]3EC+Q&JA/J(ic6[V4Lg"*M9p[n[7G
%CM2ilkMc;G)SdiW\\f?!fLD6B4/LZ`$uIA^Z;2/r#auS(VX',G'#V53h1^K&R5/F`?qXC7MHT:_U-gd-OCjZQa?bELfC;jASP^g:
%[_`d9;/J>\;"La(/[<-c5M;_hcBd:9\P+A/H*t._CnoK\)ff7).rHrad(G*k\p<]*!uJ84(5#/Z=jkt;M*C;60aX%%)R4,`]TG]Y
%"'Ul5YW1+7m"\,TWMlar'h+i?_\4@i)90o4+uau'F7-\\g\!@o?lNF4n(LT9k3s3:3HI%KDSsD;('D!;3c"[f>ASIGQZQ#P=Ks58
%*\:BON"bmHl7L'(N3VcN]XFENO-lAsfb@n"!Y]dt]0kU1=F5AFQE?fWfTi^kk85aL.5otaQEaZ+)/[L9K/hYpUSbD5GL70EcPF-5
%]lUg[%$-bY(cmY)gdFslY0.TJeh(2VPP$n99Q8WSY[_cH&aH6dfgqJ_9QoXpfYs8lC:\RPCbSC63-?`pe'+]/<u%gJ-=_;/9o,4a
%q+B*'Z@:&/%ZGL7b>6Hl*E$co2OGO0MCJ+jE*^NKHI$T*U?&Xn,J27;WA0][IefMCjp0K6K`uniRpdh^:+O)^@Xn6Z5C#J;,9Q8s
%]8CYa:Ziodk5^q7ArL(0bZ8SS>T6aW+u7<c<3uJq]\PR)[0p2cnI3?El#Bhp*W(s;q`%LN3CiO*DX,pRAI3M,FZ=Kj3V_S<BqO%o
%Hlh#rTjrB^'/XR3FdoD1/q1ZZ#Npd%>e[t>0)Dp@^kCompr5Z*",@U1W[B^ST>RklCu+hs<-alg'Y>-(:is,q`aBaZri^(J5st%0
%GZ7A'1dPksWS'`l;tJd22<Dk;b4`?*/cB0g7+`u^:NlA:N+K=7D1Hd0EiI%&@$>WSV6QSPJNd.GU=gil-:`,1TcVq>]$-]g;(8!_
%m]8gl^k^q3Sa@St-5+13>,c55I[E]OF^`!C8&XUXi2YUWD4-E"Nu+FUW@.7SFnmn+\_@Kj:G<VAcLXpbCRPZ`YAI3m#uA\4)U6r'
%a+d`l\cp=_G<=5_lE"Dmj(Ek%mU73<EWDDb8(9@\;[HStq#P=/m+6EmYboB]lrU;IkGC06k2$NYXjc]t)74R?QTQ'2[Yo"LL"ZG7
%e;rdmJX@U`"ZFs6jU'V-lOq7^*XtP!Q2=B]a)JpTO9lfY[5AGP]+sc:!N1O!%7+^0OI+Yn>&Hhq9[Y^N+Z\qWRBh<Zj+]/U(TMI<
%e2ZL$&(ESGM<CjX(D#<-X+S_uY.P7"5F0>,&!Jhc_/(3<N,]!,*'Jm?kg>EWZ"Q/P\PP8>`H<YfH?\X"YgH,E/hnP@-BG#@;1tq<
%<9<C[Eo0F'l/-0OZ!K^Ol_aPML8daG(C'5m$[IpN,W"Rp]Zmu?<_gK#Q&B)R2Xi;HF*`crA[q3Km,CLq_<GtJ"P.MN7E[r@(]h6G
%9]8GYL<Y_fDPk+k6q>3-$Pd8_*?lWrM_R&VFUTk\-TE3L:Z<N^^pe"c2>p:nb67.<VlO'E]Qi*@d;*Ti,e5\%2ckNh$RnDUMr85%
%@ti3I!Ld:[%#qeBA'gED_%h7CMSX<a=Uq*Z_[A\=-12olhXDLb-Tr=9h9;HNGkT(m47UC::NeC?CT'E&./`l]#*8O!6XF0el@lNN
%EDEn/p.n+IQ)qp>P`lkYeDsXepeb'/d<;=)k=fLT$oaE'WOTIEoi\k](`"MVGa0`o.2![SIl?"?F2jRd^.%(1E%$c=oAbCEV;l+,
%"$)k/QAj+tV&igQ*Husds)QX$]f*F\=2Qq:EB61j>SdhM1\J&9q9;AP+/_]_pSA?4QU(:\"d^_1[sPL#k0=3Zcdk"7c+5C*?qf@.
%r)o'D_&U^Y7`?$%m-6\U`DD['YdiLP#ln/VMW90*'Ta6M-0!W1Y18UA@f-,.9.q/I&TsUNLoIm*]I"TDX(52^b&#laq0MK$iZdN#
%^Y2AM@"C/r`HgSAn\L59#tf8oM`;*YL.<p,f8de)ie,0<cR*mXKQqNjGlG`L4`<r"]:THe3;mUEj`G,aeCpbQgXqc*@$F)>'2c-7
%GbaLXfiWf0Eql#7F)"!L`_]c1JI2es*4V)Famj1;V7Le"0NGZ!N&h5!+ams0na,>P5\b>JM_sH`:4uu2+"f<Nf[I8"%[%?VU`)Z>
%M,0r#:RdtHI+S.Af.OM;oFY>PQ"Lj#kt\Mtm2#:]%#\\Y=(J=brK+qa15L0KF].KVSh4R"q\_XB?h$K^XcQo0=;5$P8`C,1GfHL9
%'J3kbEq';JD%fg>1Ib9!X$J4UW5](>Ihi:^n_(3i6qsf,^@F[W,iu:mp@53GH6n0Q]113SX1CSngu$:u?nH?+;iS,hD2.m:3c$9c
%VO/5"rtN,d:5h!.=XEQrq3Zmur'=9p>m#J!a?fTjiidO'9tBLD(eb?<ERdVhj46pMQ^2ek2lEf%2Kd,3(e:<ZEDZ5BgpXl,p9I*M
%L=[eUVFK79=":PMiM^S<=d3:3\<-1k(*5LB92Q9pTYj(IZ!W6lRa'62%@d4*IGUM"=Gki1?CK^'4W_Y,R=),V06+YJ5?5Yf\Oebl
%V8oCaUK6E6UDSi7T`s+!CfdVn&4h^u(n9C[8rr:kg)anO<c'oUcfB:96J4rQL9O<].V1#<4^sJ`q]j'm`G*7^p8H"L1-H.sA(!9f
%J_;*YIg[#@:CN@QR&.D<r34S+<$%!MIN#!tLMc!++*"egOqYm=G'4?B\#sL=-DNo[V<YP-oI9[Cmo`*^+S0+'0Xkm>GjLuaCJ^Hm
%O:+;%S#4@CVTJSnA4I/'Tr@"7=L%Ut#]5nj12!ug6[k+Q2LU_lkW8Yq%H]k\m,*`g2gMXo!-8c-Jai'fmR]"??r.)%4RkGDX;j&9
%YIha!jbb&r)6R5tW]W0:(BYg(i^379pcXk(B'-LV&+OWt:=pd8R:X#$;\cHXgQ36+dM8LB]n\hf/1)U8n]S'l-,Rl\/>85LP@Vrc
%>Y)P5A]8&qA-pQq5\$YXZRo-'PZtFmD#'P1YA&P.,oEaaK#38FX@Fn[P'f%-`/-i,L>,Ro':4Y+'1pWdE3^&EXpWYNB>95]-nf77
%,haS=-sfqtk%=>?mjB!Ti[2l*8Ob$k9rQ^R*g8'a]BF]n!\>`S(e$SGTqNnufVub6?6p1="KB!GW^`1.hQ,uR>B/?40SmjnKSUFW
%VE`rn-EG*<J3r\tfCnQ"-/i]pfp8p&k*9)PUM(J6[W%?Uq^0Rn@Ho2#m3+m915n3>ZYY>1:%:#[<N`S(W\.0oU09[#A>-4;%gidV
%1iXik,P#_k<`$H;4G%*;^iAIJ0JOaVi$ORpj0L$\!J9+Yp)G[h*U$5Eh+-08p/?f*7bu)7d1q7c_Q'3r_LqsYGZ?&#Z-[:KnT#i*
%jQc"i6:ji$%oJcBO(:U"0uJ<G(3B^/-VFBt9j5,;VpX'o@Yl%S`aungR&oV2_e[iBE.c?;#r*(&r?Ge5\og,m;^/![Z8-#gfXYQ^
%4=Z.%9.#?5jl+%;72W^2f&f-5]Y`(-i1D"T]T/@j-8Kr,m+boh/>"L"7k@`ILA#TpN4G@l_Ngf(Qu3g,B4_sGi,"r:Xlb<p5MMMt
%]D(9<Mdpe$-t&N!OCqE?kN:XBCXVk,k&mO50"8WQ@pTbmhk'>L&@Ba39S:GCZ3SWR1No.B2Knn`m9l@!EeOg(`=DE4cf4a:)8/Ze
%'V8O5b4=UA.S?3ea^"55'I'>%9_U])r'Q/a-OX9ikDC9O?sV2Z*q_o$6\0AU6('\=S(+%8Q,;-9(7+"ec&l0[Y@f(%cBM_k.j`W3
%Ce3*I&7d.g"Ib;SHd";N>RuZfK&Y8!J#<aPK`s`CTUP5oHl%QZ*qR?&`lZn3I,+7-b/8r3nVtKYQt:>?449*/M1j>;BQbZJV298_
%Og*[35$IV!fmS`BR.]_>8bcSGI.*%7(7RY!]2Y=q&CM_lSS]u8!YD/1e`M&i2D$O\n9Z"a-I&@TaJQcj^Uc,YRg83IKqqBPbHiK)
%."BKqN[]Id!Q/FG)5!d_q^*<pl"qW^NYe:Ok$_lme[R?RB4WuB#&NBqU\+1pq]t%]^99/Jibj"CPofp.EZgAFc]XQ\]9?qYm@kDe
%6]XZ'0ULjPVk-"f]!C*j[`aO"388?6;eX/YmgcoiEhjmLH?+Gc1HqVLn0CI'b4YIn-Zmtlo<b#=?NSE(9l(W@.!DpA1c!]$ncXrA
%<=_qTXd.^2houKa'EumCTuhkd6o_dq-5,^?5FC]m9\,gd78I2<P%WI5,"tLrh/o!]/PK4]Q'obUE*QhiaG-o,0&*aS>3nPFgS9Mt
%/Rdnd.oDd823)-:(SaT:nh2j"Saj:a,UW=UWaC1QqXo!pIeMA^h=&+"*$=5\(O6,QR>mnV0hcBrE'1B?draO8cjJF2DO,DbRN:ae
%YLk+.NOhF^M+s!]WB:N165dij1DU_k';[83O\?UPdc:#?=XXt<QE#lX)a_O$GW&C5M\Onsq<ePJ:1nmY&f(#\p/nY,\AG/WnrA[[
%aq-?(HEJSF\l;oh.2]k#.C%&U3$&E^<4UA4W_GRf=B'=Kik&"*,A=C$PY<XcZ!"i[>hsUW)MgoSI(Yf:j7i4a4*9jU4V241e/0L[
%F,DNnV.l;Z<THe%Ftd:8`qTg<AC]>@l)S!&8T4`"XL_^qjhP$IGK87e3%fQj'h_DoN'!<;8;<XBH&?GP(-F.k]9iKh*EVhq*h1eq
%s1j&_kmq<>5=VNC"DGGkplNL\jBLFY_SftM2rq?oV<_%0S!YI]cA;7_$#-]7BWL$;5"\B<iV5c#3_>>U!MsW],_4(]%&YsPa%e*p
%V-8jM7!TluLTKo@p;'k:9^c$;gbORpcD.%(?8-IYR;#(W$,j`[n]Yk+%QnG?_+C6$dR`_\P'Ct1d!Mp6g[MRQlTua"K!!`^/=1<-
%(]=^M=(\rTa5g,lrAh=[?>c!^/(qK#Ph07;)OVSAiE99sU0'Zcpom$j)<FD61?70!JoHdQJb1h=8QnPGfiP[/K<M5"7Lg"*E2&Su
%PHV>RZ+flbI(NmeW83kV,E00cdl(cTk_"hY6EB@%RH8n]o-rPqor`7Z:ne<8DN\H>cW5Uigg4/m9UIAKgF-q/Up:`l8.gWF-W_R`
%1hWte(>,.C,i&)^0b&>Q`h`PNMcXmt06,JS98="Tqc%%Hm0.MHbKfUL214q+&Lo*?3MkaX>/XPR:"4lIm7ZPQMl<G$nu9&C=d&r"
%Z/V>`QSEQe]@<)i1P8/A9F3pLa99$2a'8NT.)S3-;s$g$\/_@bc>gM0:h*(R"b%\o1r#%&IraM*L`S>AEMaDG,&hbr1;qJOPZ<;C
%7ii;jlil#I?I0'+D=VfEs'qSRAKtr[4GbTj^-Z=49(^RnRGNp:9ZlR,(Nq(=PE0%hIOX5Bo^kI)6a2\.X11moZr<-BRKkbUR?u)W
%8]'oD/p?E:CFQ=Fg5EJ@NkGo_"VC!U8ZNc*U/$WW.9a9f;rfhL`?Y1&mX4la:q[eD.W;=HY2O]L&`A9nq<?t#D_2&G:1=uXK]T+j
%*-XNhb:=Sj@oIjfpIKA_0kV9!X'CtCR>f+?lp#2+Bl,F1Os3I.5]Ir>8d9<6+JU*_m230\@:GAh^.001&\!pbl4oGZ[_i*:7*s&_
%8NTOS2pl6?;.`nA'BN5!W),(qUk-6S#5;i)`l:gKn+=%^[09-7F2rQ2U]PUWMm&D?)kQ8pIuJI(W'=F(hW$*-'sscsSW7mB%)jZU
%$]kY;b+#VrX./W0O;_(f*8=>\`@Njq36S0-(KBN4f+LHjGRR9Jm5Wq5H+2dTaJRng\FXq8K\>;V[Yn>rJjHAO"qrq%&PUG#pu_"#
%&bdQE8t.q>!_oo>pn79Qi1_6a/I<qML8^F*7D(K<#Kr\Zc\!\^DbfYB?`sa$qk6t%jG"3L'hp!.rZ$f3FW.NXNF,\:53h>kCe!qU
%*@NtX[o+O<:]R\V.nJ\Ob&Z\=W14c`8(4$'HRRl>ZGFV5?&i]=Do?#K<Wn7$iO0k7D)eH2bAL51(2CJ(gX+pRe[\NQmtCoDAha:l
%:V<4WnAe1<:+iB[B&U6Y0nN0R:<n8t!%.GuGf"n+Gd&nPW>a:W<0I'B8HoK.L7Lm@=?'RD2b0S+i@1\O'Ld=,WNm3MD([EN5V9"_
%)Y:Qpp:m$']Z:5T8&i9F:NuKKetC2JVQqQgdoMRZF/4_STOrQG?B3^1S0Q7D5l6^/Jk@I%hGWa*;M10'XI*hQV8+rM[ej(s]<7sE
%-.<ZQ7[8'Zd#MRY@I,ohdk^(t6pU;7^-u3<LOgu^ci)X4S$oqj``@OA(E2rN;H*2q;U*KI9Z+=o^e[qf8::RfA?+PmT?O*KO33r2
%'XEj?bSr4_R9oihA:>0n'@-YBdO7,n^*c[O"d]8Xa^9G(H=FV\"4\uWX%/5>GbV/#3)\68G4Lo:]S*kB)..sJfM\kG9MfUFb-[8C
%X/TKfX@J\h@L0"aBMTZuRH6uA6EE)kaID:Yfj+c_6hMD.?9PQ[qO+G_6OG+eWF>C_K?@8PZ!Q(Trrq9u(Xu3odU+`U4VTj^ViOc6
%1t#iPHCBj0aX#"'_fM21L$cu<b3ggeSd(c+\IPUC,m$2Do@+_)iHfVWium3mCETnsWl:obRpA%iG/cU(=,WI3;@t$(Q/q1hb?_`a
%Ldk"2WJa_C2/,['"d;dtbU-QqGMG]3HJHO!`Nqr<mJ:4'8uF)I/Xl(hKdF@EB]8hoQT75l,iF?[gA)]s6g8S<X51=D-B&Ih!]OED
%/Q0UQk4&h.2gqV=l#SD$)cf$rB)[+""=NI*N+C=]PajEsl4V$qAWfa/8i+2"iYoR):muB")tsM?(Dj)!\Zg5OBLu@`.O?\@W*LPk
%R9l[LOBG-ZJ+``bK7p;Kc:XEH:g=AT]7E!_DO*n7<A$[N<)TS:q68ORWKU?&&UZteC1S$1C@lKi+JTR93'[<$,b9$MEqq)gQrfWj
%jTCXuX-C6im"bnF*1j!O:kr7cpQt!Y9)[![fH=FpQn:74-dPJnD'clp\JIEf4n#U!`NtK&SW0=+E?L\.@FHNdfPIPrgd^gI>XJbn
%.DN3ALNJ]4?VIVtqm7*S^"(b\Gd((YnBfeHetl9s]4.l"92HG]ALK#`P[Qafn1?Oonj@5=7f8Q;T7$Z^5n^n>ZJ)5IJlVc0Xe@PL
%EZcP/F*kWc/RDt#&o/Dqk_B-[<0or-!>0*<>rj+uK98=1H/SWC0ScMn2uBcO=dca\^p5Wp#9030<Q=R'o4@X(EI+JEGH/bbE7uc(
%nKFBZNh(kQTVIPe[<OjSI4G(VXI'XZXm-fbdYP:ELm.<OSI%Xa;[roCX+#Z-9Ca;3fm4^tVb3S"N(FjQFgN[7'Z?QI+#W&0c\#EG
%KY=@3f\t,!673<H0&\_oBSPh\&?fdhJ1_Pd:gP-H1:Aj8d$^tQ,nLGY+S#e5D^=g?asjZ68IfAiOHCRO`g!:%FSR+2&U!.3f`1SQ
%=SfmLEBh`Mp!V8qgnXJS]Wg@]:Bm(H.WaZsaCtb9PCc:S3_]L_bC%#G(O#1+gO&0)S=c+*a6H%[i7ZA.n"8Lq$eP;35F>'!L56Aq
%/E8@4jf!X;`)N=L0/$Sgo4rfC+'`7p(YHo"5'0)k-8f_Ai""%8ia>?,AOUc^4lCsf1a,Xrjqmi^PSXak._;\KQ't>MQjGo(EJ%pD
%Ao.d-W%5*D#tCCRe8[r,&Wtcrfkbn`.)K&[?m0)XbZJO9;F-&MS6_p6cTi@5SK,%o)c*c"FE0JF'f%Vr]Ae3F8qoKun,J-.WWKAI
%%,3?Ii!EB+_=eV6o;Ka=H5[<u",Y5I<5bL:3489_b;%TWKpsUt1>sU-]G2-Qe=`&r4M?8=#e/+#-D:WlU()oX2?TWOS]iK.2ShE=
%nE`tUH.*SKaZ<RkVUAnho]B_IR(_^M%k%65e-_eJWsSOY)-s@kDX*&)$G'DBeY5U.:A\%RZO98^p=$fo[,k(,Zpp32[Y0%\8t)e?
%l>@R^@CnmKTS;,$P^52l+iNc=qqk$+qB*Y.8#h.<6i'=DG]4RPc[cV%eRcrg.CDKrESrU;.IJK?V>RFVBGs"eV!UNLd!>u1jo?%Z
%8brm=3f:iW2rl;6`9)bQ[S!kukn.CM#\OKA\?k`%"bkW"P^O2-oSP*)A^b`96<p,R@+U,)'cAS/$9!TYi$OcjJ[XOW`dj1#n[FU@
%&$+mH<0Zp[^ii"RU2!1WO'(<P(C)Q=HO1JE*Fp:t%$)Tq^5l4W_N6F+L'=V:8(?#A`\ak'99GXE<03*JWqoS46Y'Q02$^j8H0.R#
%kGk,`Yie<g2O>o$2,^8gP5%<mcXil)\gGI@JgsG?WXI8g15Piob(W&!oAr5Xf<YL$OGUhnM7Wn6i/A02)7n8l'k5.[gX,WpOk=^B
%:4DYeTm&UO,Co@mFjV4p7DMQ,qGm(ppqlTDEcT%*LSR!,qH6\8c)n6haA;3D9lM<<l?pN61PR^IcT,]Y9SEXN:)gu'3)>L0),$)b
%Qtc[(Sm<Kq\WTrYiiXD]m&)qq<V3W&.4FDM!?,!pCNc(8Fel>03?#1na=KF\]1k)e9;cm^m&/VS_&)UWM#V'aA=.<MNK#)l'BdqM
%nDP$&Pa:&U_1B5eOZl8uQ3r*@G=:)hZdO)le7`;]c6Q!Rh=oeCPg>oP3*srt]J.&Is)5o-8&n3'&-qD<A@P3d-Rj9CPha-n+j$ri
%jK!Bc!17k7c<P=k3Mm`genP1K)D`f4>7Cg"`#B$o1+g<5^M!9B[9GRYEa8nbc]bIB2<r.PRFDkna-$:pPYc[JFoZPf[/O!-J!CnX
%g@78qRKn]FVr'$q1P'4K.__@nVQsLs0Pij$''cjBXPWEV!J>]#3W2C3O$Aif30.]t$R[)a.]t)nG?(h%@QbNtTHiDcNDjPSQ5_l[
%3_s.GU`6%jJecWQkq>-d)#)iB3^B=uhlmue7q*o7W*T]1Ru7%iZ4HHTFC<LRJk,$"eFu/s+"B]]!X9s&(EV74RqrboOH)t7ff]=5
%'38O`\K>r"S!1]GniffOMK5#CZKiX0,jfWpZihj;@BBleL"t3(`eVoA!pm&T%m-/Ce:8a^?t\AV8c4#5,ui,&Ut0o&L2p;mpe=Pt
%_uJGT)Q=g1SMC<o2^1D%OaEunWmqr[BOL(laj!*ZdQh,1I2ab[O%(VVXeT8m!$/Hcjd02Jo$(Zb3('q5<udQ\4'U$o+l;6=:[i,'
%NU,iQ%go4i9!r\%gW@Fq=[:bSN\edF\DPack`D=afaSqtCW-T5faC>^Vsi)O`f;#UT!#1>-qoo:Jr,_gi3O\P//@DO.=P@7]YP(Y
%L;-:$!uZ9HkCHGiVjEMU9&O4H"*]ES8';/8C&u"dT^hFipE^Ob9+O!sF%N4F_1=VIdO.RWhOELNLH;-7kiCm"2PJ/g2E#-A6U5ru
%$eL7LqS[lNfC?aEXH,=6FkkGD\k<Q>YnGppRXp<teO-cgEXXR>i7n94`%sft(kn,C4:[nhDFZU%YUO\6:sI$ho%9K\\pbgJ8QgW6
%5>>%=;;o=#B'1QQ<Ip$YT4JT8n"(L]M4\AW713WZPm;pb1Isoa<)n!H<?K\DUV2n).5.#=E_8ZS=pV*q&h-hY!*-[b6)F#e6X/)i
%Vi[Rq9&!iT!D%Jq/e$I9>?D9HH,uXI0a4?%G(I_*5+X&iU-c:+,aC4P=V?-F]!\I:A:-9(4dj@q7t^T;K0<\"!nj]'KcJ0`\<11J
%CSaS!,5S(Q&s27A]:Vb!*_36J<'?<7@^<*=5R_h%T$9U`Z)&hG/.4WXr4?nL&]-7/cojDs+!a0_)]6;L_F[]4<MdM+B9(u8Ke-u-
%C_ei5itJke;[NchM>s_kq5jB477**)@iO?B=^Fk7FS?N'"_WohqW0TZ&\K,Tc%XnE=>Ub7KluI5TEM<m!,tR49*BsT2#^2APgK<K
%Q*/emO/Y+>?+Q)Gq?-mUL#3m,-[^6ui@Nf6iOUGARUQ`QB31VYL8b<THJsIH;5-OC]Df)B*iL.qb*O-W'.8!$&tEd5m&)3UNu%gV
%KY&>)li7B9$PCh-=[Bs1-+of]jlQnm?i!Mg9biFd#tm1h0(?b<<>D/IDI?P7Gk&[+aMB&)lW#/9Qj1Fii*%U,X,'LCI"/)Xi-;AI
%-aa2(oB*9O,jX)I6HWbB7B%hXeY"CR%(1$_78aOt(c[3D+XP1&,XS*9KNls%+<g.eNuCe,6kmE_UP/66A>p2QPL:-;?,WW09S'CK
%$:?#n4m!6a3>VlmX6W77-=4`:_&q*:U\Y!=$DabdH7]0ZM]sUX)gl"hR`2VC6(COuP,'W0PmC;I<@9Bc(_sf"3-1bFAYt7m=5</(
%49gl2O2D5qne7I\4M,o;YdiH$XVGmi&gou0"TTd35s:N\qLYc0WR[d!6[T/s"8^`.8;,uhVmS*([I')[,/pmh+t>0gAjL0<LRA5"
%%T8HfX3^m/"54Y)U?/o0394HsjAU2@DIXGLCdE%"jkpgeNpF<re,2U>n8h-;cJTd5LBOKOEt(grEgm'/C\CR`rfs=mD;A\o:m'Op
%`fLS]8<`<s4e!1gFbZ,PgJ^pQ(mg=&cBfjH)eEI=mWd4'C#JQH?sAPn%<1moO[A#2=9Wl#!5&[R`KI!$W03(g%n:5^J6-J-Mt$__
%[CWXFWRLTN-255/P7uK_KfR)U2oLA7*"(n#*,tZXF`@n'V:+^&&`4iF2uJ@=geLsqRZ:m]0/q]8@12DFAe\jTj<aeV(l?-3RZZd,
%;#GsL"O`6dY2VJl,Y.XPgkt4"8-6JbT91f.`DjJE_LR%dm_V.s$g%.3L_6XN8kOp`D-/dDjd6iN'X+/cDS1rZ"EdVZkB:T8q?F)R
%q4"m)R/W10T3*dhflI:iVX/Mf=:q9hKj?Jer2q<>Ga?>TY!>UtXllqTLmR.DVEFpEN5FG(BdGSB88/?Z:uHZikjUiq(h4V=L$]B3
%l,bP'-Vnu+=4RflSX:.<(0?TF11WA5c=&q*$.,FmZ8qD<`$.HQIQ*1tqr!5)(NT*g&l:`jJik@\oPOgo@W9?M]1CIlc'>Bh\ChPi
%[4pgCFMYQnAU$]F\1IVV8Auef/E_TOM`M]a5cNC'nVFdcLCPRDUj6F7h%^<R,KY]iL^7K?OIG)R2us*BJlDgnN_n>ilstb=#7"^R
%%Pjr+PZ^dI8>c\=8glYrmR`qfXK&cli9t"*IUIR<5I-,m@d?RVW1V_Qma<TYG0iOZ0(imdA(_1T:a0prR'=k;XS\Zm_'I+/8#Uk=
%+G$-d+\fe(?X)g!$*$hE.XVH*4L0U;o;EW9(k=K&L(I*tEP%4tJlBq)E1VZ:C\dKL`$q4E.IWrZE`7^j0ND3H(_'0diFB\[LWN=8
%o?Ug*$Wua%d"+Q;i[SikD("'q[:5p5$?@,6s5k1rar"0TRnU?Bn*uO68A*BL2!&-]]1,0LlZAC,R7j]4;I3.\$4[EkY%@sIMFU8c
%Uu4@NK[,:uWq=U!$5QJrj7qJgBS;+:]CW3l%!<T3Op,YC8=g75`@iL/X$[>9gt@`1.Zq@`Vac+bor(_!]B9IB2IN;70)%?F7pp"!
%WfPFkl>D&</LAVu7*>;oE,I3l,==g)#jmH1#4MlIm\lnnYV?M0)JoYW:p_s1TmjpdqskLV@n#pZpC[RdF:a;acGB=simA;\A4U,<
%bTRXqYg6\h"iMmR+a8&4aKuH*9:gBcA8/=@Ku?_JhcTJ5?AL)Oi[Mu5ihV2Vm@h6G8"O"]_GaT7.jS5$iL.Pe1j;VP'?,XS6cT3(
%OkL7,5S8E6Q?WrA;"U_",ahZ@dgF^fmb"E;8(b(T)??6;5?3qNfGPj$QaUfEIBBM%3c:/LM1l8r>R;*pFmC83dBGi[A)H^V&PFA_
%HO(kmcjECXNu2^+N5k";)a:"D;J<k'4R.@i2bNT!:&#'NeZL4:nO39NWI)(dciim4KNPlre%8m6lb]J1IQ#4gO_)?AO%L:;$=,N?
%$G[Th>C@J(R9V<`c7KaZm+j@eGh1uT.kjUXFogiqNZP!U-XcXHG;&\9Fc\O[E=.YPG&8IN2<5GF//InFO\Uu&1#Q`AKPE+E.5/mH
%Ba\K(JaasEE=1+)JS=(tik%fY,f:_>:\)hXm9tiG7\pp0B_"I[l%H#Fpq6a<G2nF3q[h0?"B\*Qllr#sUpT7s>0,VQnj]S7Q9r7o
%N(Z/[+0&h--u7K\DHWg&afRcX<*uo/XO3^7Gf,0I4F^;*2%H+]":p2I7ne3VdR(.\:8m5MBH@.0.,fSEgOS6R8\m#0ojuohm'l@;
%Odo1L]PtA]N+M$%,NLq$NC8cU4dMddNI7:+XMRd<c>_"[ccXbL)Jk(@e,u@67(6'e.cUY0O8G^i)MID,.%5[=Cd9RhK_W]7=WlfI
%a1P>+#UR"]kN'6`#YsasY(5e5Pp<)T:.DSB9;L[k9jHZFee6Ks\V\JFS,PeL+!b[0lkI"QI(+)3a.lrsbmH+=gE<>`@a>CQ&7PuN
%><Cm/;Ie4A?gionosW>N3*Gf]6FX>d53Fu"Do@;bP;Ua.$dV7-nDAO]eQt&MK7a&`H<S>u7"'dMATB>$-](.8W_D>iO5S`B<;$T`
%-218<nkkI-h:o>7;<JA22h?#udVp)0h(0=5AMQ$/P6Z*>>`g>@/IbF`HNJkD,@gar0>b:-T8ZhZ3,s_3A!@g;Vg_3m]9?ps*uH<T
%ICNu#Feg&#ihj2C8G-@L17b$3&*n2DN-lT<48L8R\@H+\_$II1';!b&KQ5u4_Zc5l!r!lY.g*1b@tBK^O@cE^6=485p]ZhmF"(Fd
%lUedi8%b;3qpCS6@^-Pa'$dJ[F&uNrfjc6`CJ^*,87R#$ah>R5`<3\DSGGqA%AZtYd=oce.hTB#5^+2[!n0t&Ts/k82Ka(u"jP<:
%9rM'*j+t?SKkt+%*>(lS-D\9ajQP.Sd=P_:KL(Ced027(SPi^]6^nF&l"?$I:JUH=KH&>*P"8,)AEo2ajV$"om#/%3e/aaq5^c-*
%nmpT'D%3pn%5(kiF<Pp"6smCDP5qka]3*1XN-:&U)2`/0YQe!FLC&<r]Xnj,m%'i#^ZO079&?<Mhbk\CJuFSM(o?FD02dQd\skX'
%I("6BoIuB^'Q#fY3H#VeH(6QL=K%(MSg?o\;K%?f*1^H4*0cWA&Ii_<=8bJL5k7B>*+BV--p8Xl?cH>5=p.pc!+)+r1+3\1PB7I/
%WMO!IFWE!O7<PFBF[38J=@Qsm):QPr/\((*:8b&PE+#!lG9I3=$G:hAp/B=!++,oEaP&*9i9j$;(W71CKQ0skIpWKob1bN'rS2l>
%m0^r,m=cV`6L<uMFqDs%H5=Q*6-8_C.Fb_6%\!N5;H(TlYp<UX8u0/F'Fl.6LMe-;II+jZZh':oq4?OR`Y203\t0m^/ueMYlo%Z?
%/Z8fKPq:uUcl?TkRdr%#)#YtM3+?-N)JX`@c.>N!$+DY9/5?djX%U8C@<B?hjks7#Hl`I[lO#S[$n+Zo>mebt\bB9193^Z<Gal(3
%OA^sO4'^P*^mq.fq<tgBoRi/$c"NC7\c4:H?-k"IEB6)+3OZBTpOQ:fM&dN`//ej!f`s1]P=3iBQm@m.">ZuhEtZ$A%U@EO\G$U%
%8>^_eE^Qc<N9jhjR'JbGL;."oCclLuq<TQ_,4h^`KidVNI#Jq6iuZ.$cA_=BlSu@r3CbAAI5rFQ1$Z"#&mfUaQEqsWK#*^7[o[gk
%;joO/*85gk.69UF=Rju-]nWu%$A*fMZe;!([q5.&F?ndk]?rc]q_V/>Hsh93cE4Pf>$bs,V28m(4/J,s]mE@XFcQ\Wl\)X&k)eSQ
%[\_bB-8@iLCg&s6@6&L3:hmIjY$52,Vg]34AbC4D%g:<6EMbs?jSMVt$ND8j"GbTW9sPkR"Y$CRC$jruBEUYW*A*Xij46+d?0%@E
%=CrZdE"<p6:VQ'u"Z@<ZB#k*Vb7#+cUi:4IW)eT*>7Idh^iF<&YSV1"7EHR^[enf+0sb)61q=jK>AAeOMe?]nA9A8uT%]#8&X=C(
%hB5Dl\fOH'2%Xj'(h#DbUs;a]k19_'EUK2GV>22&_jFV15HO\MFdF^_hT2+*j$.f/PeJKBSGk"V"E)9hNI.Y,%S[F'5B\66ACM2;
%/m9?JJF&sM/j,S`OFTL8MUN\OA3qk&<<Zb5,.tn'e5TB6G\@iQ]b]!<gPBbTl6euZq?-B2%G,;,?jWVcO,.1>3@:a[E9OEF/B9.l
%c3/qX!jtDXk&;W."6N^n:m7gMDIjMDWcDfkY**C_]Z\K?fGs1jR.dWa3LAa,#H%WO'o7%!)=DgYl?j5sqHIO5Qu8ir+pC3.RAlZM
%:hQC45HS>B5T8VH+-+VNWLqDBH$#3cb#o36]9Y=<8b.A8Gl2_]Z6Qhm8H\UU&Ej]X('97.nu:mT$pM'$Qu;2@CpIOW&>qUS_7BeE
%UiYgcM:]Kk;!J9d5(n)A>"]B,Z`-]SP_T2LV`$M/MMo&GgH7Xu2OY"5Rg-SE:d,l^_CV%AbXHA`Q?i[aFtT[_]sLdZJm/'kW?)jj
%ir1)1H%hfj$5LTZ<]AkN::oTICQWTfK`T_tWQ"dDc3QR#gJa0C(tm<POcp=B*=oK8jJleq6R\=ZSjebn<(Gm@5T<dWJ8%/UX^]51
%;EIM9MdsYfFM2u0a5uO]SM]8EFls]]Jo7OG*3MAij4V(Nn513*Q.We5NX0Ah[=L0*Olc#P(JGSi^GR8+TbDuR$`NKN\Z=E'lgRN#
%#[Q1Xi#Bd#/KNeTXsmY9MV=%^iDra=]KB`%AT'YV=QFaP*Km<Fdd(CuH:6^tp%t,1n.;1r">j2t02qJaB4JNgkMERbLYbSU+AACo
%KlIBpX<(1XY<'NU&RPF<[of*lLiG>g80RZ[:,2tB#]"UAQlY)3!.uJsYl_X]JumC`J-b-ZQ.R4TflfI<Ns#>Hor_U^I`O<MRJB[%
%1SuVOASp$qM#3!DV1rA,/ePon.eMe0nr#t859u"cF19EAhN;ku3)1DFa;3"<AHoh:X($`0R1X(rlFtrgRNMbLnCuV,"a4L?8AM/o
%*6#*:21V`gi0Fa2,*6%_/]UCO0<AoHEELXZ$7Q.He]msWl*aTAPc2,?R.Z-)AT-Y0h^KM2WjEq^(bp)Eg]F):JpFGIi+Q*'2@l]Y
%6\C,h*jG(SXO00Jm5lCM/i7&PK\'C_a97#+BZZ'd$.[3HTpST4#\r[OQ:eMOV(6*I$\K_Tf[U*_m#=4K4KjshfY-6RmVsQdEBcuc
%:'!lpY6p>Rg=B%S=X458rsh7%:"j8F/uZGqMH,YA<r.HZf2pX=C7kZjgR`CIk>W[9En,5UA6XS@X)i>m#SEHg!-;$XiA"<>OClhg
%=1d%I]@lmYfN("q:hoY_+Z5D!&G@qB9ZpTO*]'2D!emU7RrVOV$rr$K?_OaBo?bV7+m&4_^Z%X]DPZhKKd*DpV0Y[2cVYZmQ,5'_
%:r!-rH>8QG2o2onkYm=WW?=VTG"N3J,ZcXi<Q[Zhnmp*@j[n)T\64N054NOK,MfU9erM>j%XS9.`)pE)O]dLa2*N9!ETYnI(.e:'
%Nf5!P@,-?i9N^fF[TiG8q&qnKc0;!=Q5ihp\Z)_4/mNO-gQDL^<)?l),ET,YFF3"QfLpJ%'`4t571`3S'T@\Xq`-mZ'/>N9<cE`&
%fUhC1dKX;+[D9,/FdrIC@2.h"cCiI!8q]_I/$.Bs7APA>!Trf8ekh;%+3A)g&e%\/k`_gMM*nAu=^%?:1>M\BRu$Ql!NOoeK=,s<
%0)>o=)]E&5PLBVI:d&!q36*$i,h:Qrm)YI=i_W?O^88u60]rUl?+ck"Gb?hKBU4^d<]:HVZ!IIg;u6nNSE]pgX]$7*,Mfkd$?=Q<
%WdbtP)X9b9;^%u.5p/JL]>kVk6f[lcMrQ>QGdf&sU78t*R"S'M%UZG4LfBJu_/fI0E7plS6NW6)oXKKM/8XKgoM[R-8QA3Ej6=Jm
%D4UouG>A\N9;Hg46W#N3'%,i6W?onM-At1s-Ds3a/7&YJMCYtu\2ik_F@oNpKea-C`8L4GGI/Z[3CBslL_56/(RRV@]aB:VkAkNX
%EDBhBQ#Rn>#<L??!PTONT@M_!0/Ybc\:,go>liS5r+Y2ULK[<;RJoO=;t0)rmV05F'PC7so*DotPmF>SEuqJm-H-Aa$7L)f'qK&H
%_U[@3p(1u^P<]mZ.mTFL4J8j\3&gqVC/QGP6@racA#BbR<g9[:krUR5LV.#fd&:for'6h$'j<Dj&^_"I6@#2Z7mOIq;]t`Xl],K6
%PTpa&!lhG-p4ZjaBdcg3.Ct9,jeNm&:bRC[d<aH>6G=((+I*9U'D?k6589]`9/r/R24`!c+=/eE\\]b+]`saN6>@Yqj^5_fbXKmf
%[>pBdjjmRX4T8/:<.C8M^chhY$$@dLXB@ncQgBR6U:P?-"RB"aLH-A>`6<t#erIhA=b9QO78:h!>;SIfML`9J5g!FGBfX[o/2gR:
%ZN;U$XMTtc+4<,D?`'kFPeN2p&PbSRg%piX1Jo29eT1.N"g&r54Mj+IVX&/bQ1"-p9meDeat$12'VpV`-i>SY@%7$8W:?Wb['pg"
%[7.+LkCBFJ#AjlBgQ#*rqH$#!air&1PM!^k!je'8!4.r0_%,rp+I-rVL)T=e7E@tgP@D/O<<0tR'Im?3P9!Qd3IGk*BF0dCUE:AA
%,M_FUee7,t,^!%]PL2)gO3O6M1Rqcm\PE]MbqjOf%"YB"k28pe@%L<Ji>`bYS3EED$ibrQP,]UiI2q`C^7mefEb#nAXPnE4HHX@2
%`2)KZ>V#5L@3eY.,I5Ga6ZlT5VkkFP#o.;Yq^-#>%[WAk9VL2!Y"H3S_#,--HsaojA9f0"EK]JJ?dZNcM].Ls88+9DDP\HpWs:N-
%jEC"t8Fr'tW!k:LA*,"W+Yj7$Z0)$Yq,TJcGb+.T4Ja^2X=LUL-_QjS>=F];:34;'cDp7k\5M?RWuu0Fi8:S[QjIMF3ui(4WiH!_
%jBki]5c)XU7kUm#cL`N@r%2/kNR/dnDek+H\DbY-r.f.^pn=K>,\)#<)l$]-9$6u2of&c)QjJe.0pc;a.Pm!Heib0[UENl`E9Fg?
%9*/ch(blm@hTY6Bc)Z(].$\Fh3BN/S8uaXn7'<N%jT#l5m>%<D8%s^-5BB6?e\_EF!<1bR^:cI"=RLi)QQshWN]hF;O<Jf7+F-%M
%-NOiDk&o2Ji)oX]-[ZI@5^)`uUjQ,aAb_INa+o$$dg6[&C/:b3YIYZLI@cHZi!!"A]f5aXd1o66dQYT0Q0N?WE"bbK_:_C9&iuI/
%>/ui5*,45g335[D#eqs1i;HaSaLjW1W2N5KbbFaK8Or0(:BAV#YJ34Vqu0[%DbE4Wpa=pue.8JrB-"i7j+@F#A++Rd4=X519s&F.
%h*OR;Upc;W$kNUdjmGuti\`k;Mh$gTC(+jI+LNVi+kiWBdS<C[)5IbUP1?>dA@;e**['`e$KHuoLiHr#Nhm>nP^r!Akr\+1C=Y)n
%OX86gZFXr78?HS?I-?M8e@g6G[nW>Iqqu&N1.e[I'gU5#$U'P?r>XlJ.fl;289l:pm7_U0;C\U,mtab&Mf>`Y#TqF=UuR'l@:Y85
%5OfhA3M:glS1L9^BD"aBYM$<I4A=n0`m4^cY="p)Ae$,r)4O[%RhqV?<(!W&'C)61:6aJ:bTu2J^W<Ep)$S]p7k(\,@:krZ@!Er:
%\p6r(2f9"XM=5XhB1BYmKM^)/)4NGlTWQXK8)!Fc)KH2KF8:i)VE@LTW7sO>8G`$I9V$2`+[Ic9daC<kZ+RAFS^UaQ#Ep&5M3Pm\
%8I$Ps$aR0J]jPu;);A+N,t_^(7fPlbXO0c?i2Ole=4=R)KVd3fp2g7B3q8J0BbbmK8doYj;pnn&h",LUPdp@]]=J(KZ^nrK+lBnO
%+NuSh.$Q5e.%QHaedde2e*lKrTWSfC0&s`Y/\kDYq8hXA`K:[a\6N\1b#j&V&(,"Q`>Ft/HLE<NnVBGbRXY!@:!LKE7h6=J[rU6;
%I*$dC^<B#=J9cQR>Z!``\c6P:;NR?8qsR!ha"l]-'PMUV@6k<W0GX#'bE4-;V;BhkTK@TPJ2K@'>IuW(4G'2*"`YfXDgX.Pb"j[Q
%,?Q/WVb6KE;!MfYUm5$HE=OYRQDt&/%1#toG&PK'`c:"g>#F2=8re=iGWSUkpF/W&;BeN4%R&Z=%#)9<`Z!*LG&Bg!,O?#0j&ps7
%%mRL%3I<AE'&"2IWNcDLSAl!t!=Nhq_jjTkp='VrERBG=9>?@tG/UN4L5?'V;n<u&Cm`1VA!)fR`g&[PP@fX(9:8_W&%!\@lbljY
%^jaE:e_)o!:oenP75gL5LhNIm(%QEXW#%8T';5Ui)*.i`kk)cOXNKWV)sFi=G7G3a\!J,^eNO,G`^Xs)GA:)E_WFR@)X52C_iHc?
%Gt*ddl<eO2jW*MN*\Ti#?ia4n=H=8e.8TQL)TEDMn`gkif`ukX$+6VLEX5IHYMpOQPa>a&lM/'5Nf*:cJ;h/cUHa#)[+`oRXaScI
%NuFf\j>3^L7@&RP&:._4mK&=fP7B(#RRk&B`H"fBj'Ag/'^;R$04U.!W'opmVSj44:aZ)b1S-2W4]eJ[h[CJhF%5pW@sE=/jeL0l
%&2[1qI:-nP4O:#A,.*Pog@/&^[M&U2e>\XS#(f'cFd-]#S.Ai5/$<PkSr"T:OW<PEIDgj+Pm1Bn"14Y7#C.#mBC;sB?&r_u2/N+o
%h#MUYA_iFm660?B/M78W,er%*3=5t&FM1Yk[d`PuW[[?cf3!#<"TIDk+q31+1hn"-q5fO@U7MkD?),!o;i=0u9Na+J8S82^Sm:BP
%,\qb3!f[@H8.Rrdi5Tgu\;8/4WN.9Lf5kedg)D$6<iWV]bV[J:X:*YO;,Q&\`W;8N*Mp1NY\k"7]E#!_ald!F&c!s&R"6e/Un`n<
%/*?51?KC.2;iqn32!@/>7.#FEIP0gn.%DcC'f]C.T%4T?lU;\$f.O[c*%K8,cuY'h##L=$4]O?jn:jaZ3s?r[:qHCPFb>gR?WAc&
%2F8'^U_\mj+&Y[P+6YOA*?u807M%5q$-VVBN(`*-6<<\^2?+$XGXE]Tc4p>E_'Bu_K=4=G`mrBPPY]dEl)<diNn6te_E;QL)bEUn
%/E%@5Bj_+RV3N8>X)L0=*[L+IkhD++U(k;fe=;Z]V\5SrC#CTNl>fdlY?'?u"KB;>+gkS?mu7]Y3\7C+;&01,p3as`Cm/AGZVb%;
%;=N#oXf(;)Gf$1rPl/bWmTqHEBud2>[]3_1d4hH7=C`IHDl:]7_&(Zb%E'Y;=@>5%0BB1ib:IH@;I+FdOm+?;+jO9o=/9ot32hL#
%FLTeb_;<`Gc['udc`+Poir9'%U$#T[cOZ"ApdFlQ<ANn!Km<?jMjcmm162_i?8ldR+duU.DCq4][%!3%4")<nF<Imq?:n2N&33p[
%R"n3j:&Ob=/$L0k:Lb`+P5XD*N@&`f,Z`=Q-+&$R?hJcJa*3jTK.9sX6[b[IQNeV`EC9\I3`Hgi*u)_:j2hQ:Klj%QG%sR=KBc"<
%dVbT)7-[48jPCitD:Ma\H)%;f02cjgYachiT"4uX6mVMGikSbSq@V^Oh>K_n_UhLSRMSOqTU8NHkTZ2MI]Bu"kC_FIG67A[&qEVm
%Gs-CmHCL$>$<&Ms'tk[[S&.G^DIr@:UuDq\BT4<7ES5Fmb%VhB6cdJL!K*)R/<W'YjEH;1'du"^ah*$"OF//cijX;]SHG-0i2Y:$
%r^;0^:hMtX3J3]^"5edF!/s9uE]ST>]\oG6o/NZgH_LA5INm%3l,n!kDP@f\l&HdT#e]CR+nhpZ!b\H':G-c$LbAA+&iL#DVG3dk
%kW7I@'1e=dM,VY,LY8/R?eNu:[0E_3W8WYH7Z&IRLo8QsS#b0Kj15Rc6kZr)rY1r[V*:=(*>1*YSA-)oa%kH^o89`'"CYD0'W;%V
%%ta"n;N0bh)r(\+2M[;mKuZ0i2CZ2-G]26"eeuE9cKFrtZ&i;qKK.]XT"8.F@7&I20hZ^=LhOfGqu/.qZAio2Tf*4'j3SHc1m]K5
%<O=/CrQOu##L2>)_t;Yn#2n]f/=/u.^*Ac^/.f6N4bGg29V+VICQ%!UItfdB_LbT)Y!e35qBj&q>?l/PPuj*BU;Rao_6[fhhUVJm
%=gb[LEMH&>Y<:=hLg`-,K.7!:q]UTuq!YX1"'jh"M%Dqj8/`.E`YC%L*_5h;;8GJCZA`ZaWJ]G'gLMr`m33Q#nLQ.-_c9fifajAK
%KL?ng7M5;`B2fs2Knu(EjsL4`=:uDaUf"0X[D<a;hHY2Ah+n\r8b!mW$=:j,n<B0seTk/N736p6q\Uubho#f^FnK!*^d,a#O]Tht
%,a4O]*Qu;MMuB^nWpMtAfhN`_9VPM!>E=fnUt`(.Du]kVTk\b.lFh"("%J'^*`^mF(U28T3P,YmH!7B,U>h@sL&\/DO!k(dX.I#"
%jtXiS6N>DF"8jWC0*mcB\*ou5Y]AeOp6=@,1*'_P#C#:l5%`UeU6\!@9,A1K+R2e.lja<#gGG;"`[PAD8NpL(>tNB.UgaCob24m-
%m*phC8jMGPp8=o8V+2e$CoctlKX>!%KE&Bn*XM%sNE]s#p+*&NlGc^4f1M?4e*3kcB)kc+)aJ0.AmA<;5l>Yc,Td@f'k"&oDE((c
%!i=U=;G4#&m%R(MP@di^?u\kNarcckPQZ.+-PBP+jSo\P3Y\VHcfuHUqGetCobnf6OW6^o?on_4BI\!=g1n.9LsOZI-4n!"3f<6l
%R8.q82?qLs<_Js)FM\?8FpVOS_CdtLn*`RoATQ3GDCZWgk,D+0lK3P83H"h/bOIeWEX*:6VDsIKQ.d%k5PVQGW]Gtk!i\E#+CD\h
%au."(26*E94E]r]3`QOA8BPBO9kYm72_BpXR=N1,6;#qeXjVu^Jsuk(9JR6WpNeUuq.ts[nYg?1kAGm"=O^I\`!F:)WM#iSir41L
%'(h-_U'SdP4/Il_@?$XcKlM!73!CkKLqD@F>[<``c)D#bIoFNg6?&r%3M!bAKTl?bO0@__TU@;.GI4,73"Oh*_-VrGLYLo1[(LQD
%C+>OA`HG3N2(Ff^q!ZY`&QDrl:[/RZ*0Kla4O9&B^1NA9Pg"toGl8[?'J_sVHonXPnr+i#ge_>391f8H0UaQl:H"b983!AM"dU-p
%27uY_>C@tnTjX$sJ1cEdk_m5[gX_rU];+aq)BN$ln$XT_%Aco1D5W#n65hsaj``c>^9-K0]$;2E:f/5^#EV&7O/iiqmTsMJ%nAd3
%fMEQ0gk=men"Q8!m\<?OhAGra$9>=89&NYQTT[VSSurI!nBt1II&<m3:g=fD#!j-5B(:p<'"K8M(SM<RROFf3HcH6\E['FGB+QRk
%)8CcA:-iX5dAsS)1n#l>Fn%='mV=(3j-P?QL$C>6ef*TOHtX"F6+Z_dHOf_=NaMp"b#fG$6_44_ij:6kVq3Bh%MC_gF!$8%!'jPR
%;%:ft\I%)6%aF#.5[>EfA$TAm25lLfHS(']Ag%KY<bk27^ITUG&6'[T(=>b)QTTG+/NNJ"6K-1!+5q7!/gLrS,5YNVKWq2eDOp^b
%"c65rPC9R[iB<]#Q_gkUO%KrDJ-52`b61d>d1.Ou:u0XUW#e4/.T&fIV3+>uj=mPtfZN1(,PR@)LYZ#7@2(Z3^r9'=d3aHf6k#:c
%TaPZu\mh#jBT'Ii\tP_=li1>3S@:3#@G9Qb@oDB\7JSH0=Sm[`<r_Fu2SGCr9a4>A%p]QaJf(upBV$YLQs?Rc!'.Ym&!T#;'j,8F
%,?=uJHZ_O.]4H9MY^DQq/Us<RXnUmj5NJfhaqk?5qS+4Nqd1gLla]:*J#P\Mk5od3&u[a,oaKpp'lQb&j*GAa$sp6L7c7+>%4e&e
%Pb*1HU%KG[EK/a,6L&u7a6,Qn:X:)&]K-&*W62skWt&7\_]BQ%4TNk6BqW:pm2NmeUiAbjgI![:'8#kXf9V`fWVEsmCn?CiTBn^'
%`L\A-HeBqn=FY?=D@m#%5C(*I6Khm",FF3qqpB8T+SdL],!0A+e;dF)q!\[5NbjDnOG?f)XLmVcL@h9`P-Ct+Opb"Qdtr\Lb&S`:
%%R=&p3EV?(<8]Q3jYQTqPjWe!jh`&j@Nj73?+@?N^(:?c2ZSXIgM?7UOnSnS0`YY.Urp=t<DKC^J"9QLDr@6F:9DZ*7*$5B_gs?@
%Z%RZMr]$Q;2ceL`L+ZkG3[THiDg61[@:f)kkd246pp#i$$@DK`ZSr]Xpt.[o4QfZ'.!Hh2#:if<+9s=64'Vj"+qWr%2GjOY$&f8<
%a"6Klf(HrB@*UgC/J'm(<O\p/HTeT%_TW,q(et>B8_lnd/`@qf0P36lHb2r@,SO9\28mQ_a\jLiTT%jWf]C5ak>0r>HJRW1BD2$i
%5J$XS.r'd5Y5iE->#gXM!^\m0YIjJ988Y^n_=FTm$3UP7JRfF<Q0N^X>[P/6%^sUac*.Z+or]F>k$Y">Hb#Z+eW9/uqW`mlj9fe?
%e"Fu(3(OGLs680"4#1k+aLLa+c,DV*r\$GM%0plW;YpQqp*6iRO]r;Ek3^gK'D^'h4@Y4bU^9SkOi:R%-gepm;\Y/cSECUMWbCIc
%dDg)ENA!h5!F5*abW^,RgS$YUhRI5OW&[g;l)rMgZ]IeQY3:nWB0T@Yf7djU0"s'+Wui:8Gb*^=Y`fm`\jKLD$B!o$(VQ3_\RID?
%G8aE]T=)T+7g;1#]hilrgRQCmqQ2qoJ>``O792Yfn^1VQ=@MnR3#f!'f.,n7[sUkYM*oh'LP:'2778RY=H0fKm9E`p?3!7s]6a>%
%;T&!DaFauFI8ScO4%\If'J!!"[T[qe3AMIGB3t;$mE1cR<?Z$#`o;mBR);fI3X3"m)5(X>Nd&<p9M>LlhP3LDSeZ/o5UMkR8RO1+
%j$b<Im#`NUe2$"A!l_`J;!=ln\F=4'_TJjOL:dBApE6M4C5HuL#q#Z?$d[[7I&!;i?5eZ6UhM)eQ>6Z"NT))19rmN6#>%K]Cefi[
%WjVo!_h78VX'1;Aq_'mg@aLY[c0((j*DQ"<haaot[mM!rMMic1`0kS;`W?=oO1Ah/"MrIs$_=laqO,cnMLX1H<n+0f[H#p?Aa%P/
%<BkRE`UTIg'N=\YX!LS-KarX#JQpNGV)a9hn>^1,!Sd.\P,$Hd-bZ@LTLj[DB<<1F=TXEnI(h%L0N<V]nLe7JWs9m!l*7@c;[BB&
%?>Tlp$:0j`O5=,h@@R_<'esn#L'*g6KKLgrcmBR2Yrm#$@;n(U8Y-NjTgVNVr%_TE9</M^kYSNYN#-2R@2QHp]Cp>J^g<ru=n71c
%_*'Y+>Ufn*6&I<n6)0?)(,jB+^N/*mE-E!#B,'Y;:\;G\VqXf;&1)'#fml_t]kR\=-T:UcVmG9ANsZ9J?O%-rqTe#OQWcuqZg,Ea
%?WQ(6T`l/=,GUfnq:)B"K$gA-(`.e2I%piT7QNn8?hObU[-=+bpu1q6,uZ$=8C*<F9VMdV_09g-5\Da0!M+Z;iYWcM1^91-7nXlT
%[K`<J'GO.9QfmoCj14Z6o?U[1,<a6Dn>(Tunc1+c7Zpa!:4q2Ha:X##RR^.D$Cl,HZ9pt5+cTF3&C7"@a!TDj8^W8D3_'eYNojuV
%c<pfRWLgj+ZsoN).ji.uH%/_\&sh42$c9jHjHf(kW&Ek;_m/Wr+2SjgPsrIdXCg1>o<[N.4k+.Dn%n>YG\oPkKZZiiW9QNJpL21D
%8qS*;ir/c,RI)IC6p]fmVo;tmA3]DZBVf\8rgM0njGY#!(+%_5#L(3<G'2BX>>H8\X>*W0h<&_Ok[mtO@NUOq%37&PCTKIoU`kW<
%n@$B3W@aZ>R:lf?[2]n=S"[c5+ZVC4&3`ND?9$KONsaRh2fLmLIJ!4i(=24Z4eKaRkg[Y67B6=Y40Ib#(IFVa&@2P95EU\ZH]c=u
%fdC8TjFMW2Pq#=n[kbsh$ctY;+6T#M.Soc<P-7,rmpfkn@=XGt<B\*V/-k1#_bJkP41UIdOEQ"O-)B'i];SbuOWgGtVnP".1^"-\
%]\Ou+-PB:sns(]&%J%1q?\>$dFW"4`.K-2u-pt.iWh/fR*joLP=bU@J]<Z5BdEXAZHr&U"L+-,XqsVMYfAHEK/]YHCbraE)[*l6p
%`0F!2Hn3?cn>a"[V&ajtoj-XP!9NX)'C\N_@H]H"`]D4ql'GD<:aLS#80S("IV.3(aHn4]YEjMD,,SOt9c*/('EQW`cV3jHW(SU4
%q[.&=$D)K!FZIdZd*90dg5?=o0Mi?824rHPi4iLpHD?"P31=kNo%E#Vcm05KVBC-h#d7>#IL<K0__E1B8_sr*?&)p.MJ4p;eQC^T
%a$l9/?i4!=X*6$nH]"Q,lBhbl0$Sm^@kM$Go;d?)BO3[7BBT2<m-,Z4]>3_bF!oU\EZH0ECj5lSIV^VaP[ZW&FON>.9=D7jI5i<2
%HZS_:O8k,6-#]J/J4;S!E`Tim;_;Sk;TP-@(GL)l\"Q/5JVH@u:K,gO:PLDBq%/I[4l1DcM;2?2PKlSbMNJmL_F<aII\2DlJ%Cid
%flo4Z<+W2JG!hT!p`1l-^+:@P?ILCH/+l;[O!m9\EhNetEa:\9AWAjCaNF%m'X"EdaclUa:poF/W"f=J.IM;!9]c_Tot?]Mb=gN!
%a<aVhTsS7h85u&m'+!L8.f_!0,?n>2Cib:nOY@h5+HS-DfUWp>)^8WJFct[@eN8#b/m.Ud9P(+u:/b1c)Tm@8AZD@<k%l@S!EDKW
%<;rB)jrPj\;asE[GM8^&ZDk?YL+X_o1Gt[^N!C?#_A.$cCmAEgqOV)G]TF6?Ni&6Z-1'YtAEA+.R<pii#8qgnJk8\;C@<-MT(>[u
%K*oT1[K?.^>_Q.2NgJ7qG9F\&?j+*&<Cq`O[riP[LYD$e#Z&r?Bd22kUS!*dVJ,/g3Oh3mfE\<,%d\'bcM,26'*XQh_hlP2]PXNG
%gkm131/5D6o,q&]KJ&nj@mJASoGGr/Y?r.,jXYG%f.L=LMs'NF!BiZdkKE@gVdOhNVO@goiA1Lg5\$%DTed"P62YW[*0FU4*2^g@
%rKPa@]\3Q$9kE9LMT])^D`n'`h-dldQHO*=iY[W,1FXJJM&$HJPkYN,MAP16XY<dhJa.jPTW'@cX#dSWJ+RV4&*A'eNV>A?+\468
%$bR:BO(MaJVZ>LQ%m)9f%0sq*Ifi)gTA"9lgBhY5X`3:LV.A<=SJ^02&YhAB3E0C9Y';H)cN_Cc,cH;73Q%=#n&p(Q7E=D8fe;a;
%_l5k5M(U@?jV)ccnh(s/$R\R1-LDXjjJU1/#u*sPeUkL+K"<kR:KjDoL/$:/[l&,P@Sa7Apo:?_SqZC0Um*+EqJ[C>fFH?:%u-NC
%!;a*f@N52D>5,A@%=nsZR&=H&E%3sZlCO]:-8Zl'b`sNL[]hhAj)>_#Z%F&M]#mDZqrT;`eF.k=]gC\oBB*s(epCqo*k,[64q4MZ
%hVaFsJkU+(iLposg#[FX>gWA.ik#mW,Y`lW?W=rG\L$F2r@cdc_8e3fnBsDs;/pWe6FSU;G3bpf+6s`FmF`OcfVf$"^738tGK*T7
%I/If:Qfis9WlDm@n6nlDTcBkPP![0l:.I3qG0LLf,jfs;"c?KCijWB[?)'HG33pi6aM76tEq7"]k;Ge:pQN=)2KX67U^c`Rf;@G-
%O^+G(.3.qIJJ?^3R[SkP-WO4Oe^_O5,?0HHK3-DMbt0q<.0f)f;A=Ys2P"OoR0bs95%GApT^B*,X1iYf9srVWV;*:9TV0?W&AdX;
%Xk7i:!-nr4#']4JSZ8LVOBD.WiZZ2%,@#/-Lceq<];9jt(9r*jPM=SCp,(G<$Un%j$eETN_'3[5=^ijeV_4,Kf8`6GHIT#7If5#4
%qt-ORXbSq=E_.S6:'.Ur,_lI*auj(B7GWb!UQU!0Bm\/gas"*aH-X-NDa;X_oJE64Y?r4._j?878%;,<<PBZ&XpL[u@6@ebb_H\A
%=1r_d0?kOpK0">RT/Ph?p>30MZo%?DZ34$b/$Yl+&o(\uU2/O:.+9[in[TEDi:T21gn1=cVse>?C`@?aP+uID$ccBSr*B'J'`c]1
%09$,$DS(T4VY^r(>pLfnBMl4DH;Yenblsh<hKnAlPqj<:gm00a[H=<MOIEY!P^C^Q#6XNT*;,JlfKsU^!,7d%O"+t.PtnL!_eo\?
%D2$e>j$gaj.,R192$<\*P2ARNg!5.3-Du!jEE,nL_MJ/d^'V\iY(4S_6g.Kkgc/tP+>Tn#!Q[H>?;cj$Z0o,?mH!hrn^aJZPTSj1
%&oq29JqWsV6rNLFDup77(lbP9NHh$5M$Y]WP?0`I$r.UP++F1@)JK('T>trQ&(r_Nhp_2#`2*ieIVgaqDsu&2>T,T++B:qr^`c8m
%3&ke1i\=4*MJ&F[;k?.HeiMTF,WUGm1Y(FY<.gS?<_k:oK.F,g*P8Mc!)lghiWnIo>?&YZ'1n&0lo+OCW#<MU5ROB[F9"-8J?tc+
%@G'MU-++j%_i(=nWEX$3QtRo@SG]<4<dPu5*b+-RE'Io%*Mh\_"Pnu^D]C<J3@#Rh!WQHWZA4d(4j/&3B#(bN0k?P-:Ou27Y4=AM
%GRud##$EO1;OFYu"iSQPhXT8^@nT(I`3a"$$E+Ho+:i!*]Oj5jK.=qC+TnLgiAg&^66\*W8tGe5n;Sc9:nsAFgb;!^D1Z@[_Q4W%
%$W;7.-m^L8r,q;;0a5A(*L0[i;/@Wh[2kj74rq?uHQUg82Oi&s[VYH[Yo=F:(\mr'#_M$f*h%p`+.bM;D!ElW!OLI[#*f!>\IFAb
%KkG<V^@C_0IYn+jNt>Kll'oUZ4nbNLJ:C@8ghdd>D.O_XR9I7t0'$Rb(Ce/qomh02Zqu_@A[d98.`&ST'!A0CFUcB',;#Ra4'a5d
%U0\WCTn)`sC?,AbG+c$aBk>.0]UOZB>(N4=n%]tq@&O0u(-FL==^&-JD/'XI`ZQl%<0p74/!p_b2#/]]Or1'oYc19IMYhTeR^sCm
%i;Rru)k-7oH]6hKLnthK6-#EE7h8gh6*%M^'_$5*5N"#>An$Njq!_Rp-]X5*<<^gpf9;mG\);)JT=_Z+1-\`lEoY%Y+(;OT#ij:;
%=4L&DN>_/OP]SP!"UH\i3mtdSs,PG[2pMR^6ur_>;lK0J+8"6X^$hq6&&3ESZEs;]qTC(i=rf5]S25qYPk1hZ*<-hVa8%8-cLf!N
%*6.-FeU`@upi[1+"459)m\Q'@]e!9%.73V6S0;?b?Km=G#2[Qe8+"$;/:\s:"@GC(>_s1ZpPJH[ENrn',oYHFYbSQg($u:3B1u]a
%55!8o2F47IVf"-".<sGn38&VjI(='iP^iJoHfVFDj6[Xh&%;cAf41\s!@N\.jaG:l!:TG'*p-$BJP^g$L4u!&MIjGJi*UtGKRO[b
%ZulpHD+%C2W<nNt"VFtG$)/_Nn-auN2Jk(R!YP*k#A\Lqc7W(aHI\7D(d]D[(Hh`Wm4jb/0D(C6FJNkL:n>tC*E`@Lq*e-R31O;:
%)NWk=gVG_#+,.W!o_nn9i5I-m#i:UsqfXro\VapPJMqU2Z"1ha8QDq1o1@sj*S;@KQPK4%`qJ:(+=^@/<8sn%*I,m)>JQR\9i+l[
%g<t];m_,hWX^oC@)-WgkVFau&SVI-U-7&;!Qq,.,M!sbg-4nhVmYEpeOQ>uPS?L'On([Y`\T"FkL4=3/k::Ol_9UBGq:W<giFUio
%[V!$X:Nk/cA"X_\/R/HFo-!Tff+IG<NfZ`lqEC'&/&`c6.+2OW%>mI?\YLFOXpVEsP!:9B6ASoc_q3BK0FKRMo^Fi?;"Rd5cT+l'
%<H+lrr/hZE]UQsJP<1mP&)[([_\hXZZs&G981B(cg\+)ZkKhshHJ.?A,.eiY&:\iQ#V_9SSGY^@6;JWfZ%i"PH97NG:Y#mA^^sau
%aTjksnrVY3TTkoXG5CESs%3OEL5-#reV2>(<rCbC4FG&CmlY5FBB)1Jh8So7%[fF*[4:j+FC*Gqekq)k[1^HeF[uA(&c9'M$=@lj
%ZX^Pf0;L@DVPpHYGRT.TopWhemC2/)j8*Y[cA`c06@+=<EPlgC81/+[%SD;dEBrPe%s(7ja'k>s:/oisQ9_O`k8]YM"5#+Xd3ZTi
%n>LU#0&c@*[QC]QJ=-_@HUe.LADd"PnGmG^Odde^SQhZuSC)r]<kh#g1j!Ei!R`_ja"jX\\O@Af@'O&!M?5k&D[^1/Y5XJ^m>\FP
%BiA)7!GU&.oZePl\bO%gBBd;s]GGJ"(B/lHU<#r-?0mN%"^n$Y:u7'`_G_1`$\Xhc2(I.inKpLofaL^+<\pKjSU"4q$SR0tLF+g7
%])usL]2_UMC)R=kD7$:A!oKZ"5@I.3/LYc/&T3g=3AOFOoV_3*hSI^!i*j=Y)`<_QAg)A5L='@7U\A5Y-0(Q!2Y_Gpd%[DO^aTR-
%7g7t3-1n3kU5Y'qrNdB,\]>5oI:d5`<(QB0Wp.I(4T\B7&eJbneG'D-Pt15Wn2<OLL\LI5"RR;Q6BB.)o_%HH<Rj`r,^i5K?QrAO
%j]gPj6kDnJIhVuWNc&[b"Jc3s/jOEfc?/WL+Djh=9q0qccVTq:O9$dGYt-VAO=R6-Q_=:e5pK9b.d_=Wg3N!)MhEYS#TUY&74paW
%puj[fs/.8V9cI;jXQ::M_S-`&!H5fX?N?.'44ZCC8UDVR-@ORPU)b\\A@3YBPD@o-Pf%#b/c(^<Z\"4fB=#'=Uq';:TFS`[A9?0Q
%.)%1/f-kB"e--l;d1YS),KAMQ!_a0:"=p<Ldd$0hX]3_>5fr?07k?QpB3QYTF+2YXX9`WV(+3\1`^Q/.l7>4WMWC-+N+T"s.#2dC
%ZO9f%$D<+``kT))<F8LDe+0NlU?2b#$t(#CNJ+N`X.T,aeWhO'W"7B47:!5\<K%N*5Z+5$4=L6EaQ!`.MD-;Thlj%):E9)Z&i6I+
%L9)9q?"4V\7^Ir_j-hBXG3_q9'l\2>3h:<ae^f<i0%i.iN52E.,_mq_oo9VQD)$rhX0Or>JPkL$`ZGD:KNF2U\a@:'(s,9T>Xt67
%*T'S(8'[">/ob:5HAPXooCL.d2TdJ+;]@CnH;pE$7rah[nP1i1;p'o7*<3[OT0\U%$UcBe;6YE&k=ljBEt.I>r2$HQ__p;aUqV1'
%'NO6T<tf!Ae.AB%I?##e@RY86S.?/GE&)WMYFpGC1Jbeq:PSonOYDmWnaA*N%jA8tLD+fh3/#<8Q5UmB=e\g`s(Un+??F;plTQ-K
%J&k1lX#]Xhcq\+*>d+IQ:a=Fo<QbSRag=GRs7_Q2>!'Hfq*ego99n>37ToV;&TOE>m'@dL2+eIt/Qo^<E8WO8^L*4<dO*tZA=fc%
%%!!Aja5E]o*l/]KTUCW>8dEaeM;o0Bqq;OUX'TfL4Z"Z:)oe0_3M(+#1t3SfIVT(W8$NA\,<p4mi5cdjB1$5j\3g6qYFE07I"$SM
%QCKaUqMQ/pr.=Wr:V!UH[:Kia.1"0A7q"/X)c]?XS1N/Q3bd7A3mA(:%L`heNLC#$)0J>Ya[*?Z5R"PtqoJrJed5A?q_BO%Ff:Ct
%^_B>CiY1[pbI6&5*$]kMFTG#,0p<S%a-fmimWF4Y"Ge@=0+%?/e#f+E=d-I#&*Wk$o$jK[e50t><4,g\UIgs#/iBo"0eK5:Pb''G
%`W3k)/Qb\UZ+r?NVnLP_AV9Zn1>b^]Q8pegqrETKHH?>W-$M:%c,HA-]ut@&DVH';*0bgt1I^E)lMC^_-lhV&*uuc<)m_-a@Ud^u
%V@B+<?p^+'P_'p[jK3ei<PQ[#.H`5?MH0A'oPC-cr<S1Kp'-rH>V%=+/LJ.GXpD[q=EB(g7RO$*k@r1PSRgLoLa;K%-:l..:1H5^
%rRG'_2uF*Y/,[+BI(4eWW>5a@M*sG6b/s[?>mYuhkalE*fi!!.().'/>2j]HZD*#@DLB@"JVjgtkr<,dVi@FNrT7VCi0Q96b7(Mp
%OSER9-3<;lg"4t;L@JP@URInE71B.>5@7kKd9nT/=lhb]DHQ;Y`QF+C77Aos>j_<)V3?JmfA,9dFChk9`K+Fh#.Fq'7JqNri3=F6
%0VKQkRI^/cEmljN3!Z*q\`jKoX].WR(lCf]?kKq<4%38)fZGs_4T![\-CK1k>jBrGk"B<R'n\gXp`eYF'qRMERaX:p8;APrQa;-B
%;5!*6')0-Yjf]IK$Dt*Lk;,''ir[Hp+XG1R$'muA?FI[#J$6VVJTd)sf>P%]M+E<?9'.T%*R=80Q,3YNXn&RQWbuiJ='K4OLZF8'
%M%lFZ^5Jt<i$2:$'qN)D4\@+6?*U\STPaXiStdPPN(jo)"(=$Mp8,'dYg9R3lf2'cQAl7IV=&3]K)3HeNSksLa[i>O_K.&YHe=\`
%9Y5&d1MR_,rZ^*pJ_,%'!:FfX/@p,s,CibeNat^u6:NG_j1FPRfg.=g!FcN+4#^[IqKW'@f6/U,88(uXSZ"Knh:TZ?7-*p26m'V7
%;:-F:/QT^I\Wd7FWXqCO5D@Po(JN_P'L>7K]U?<#G4RC+`=H)d)F>)ar\:4ki5B.)Q9a:a#HH]:_(g0)VY_K]<`ng$-jb>m+_D'k
%fYkW.+;:ED'$?'RZ`[l\-IA<7_?%p(&C>Cf2*tPD\6MG^,*bGT/&jWqPR.C"B6mcM%qW5&d!*7O\P"J6!1]@LO=s@'ojWctWlTi2
%,4[!$+D#%Q'sSL;.No;Ih1kB18Pi3YrpD6.>a/:2c[-$8C#]/Yk%:U<ZhWLfW2dt=GjtR?d'E_tl0_M11m5f<MWSeQYRq$:R5=sp
%SuQe'JHW/NJl3E=.gK80muia:qb;)9+EhUo]Jc+:gi`@?>d!+2*T[+N5Z,X7r<!gZ&YU3_!<NBR@X-YBU9iEX?Y=NGFI"@aYgc[s
%d?TlYeUl45SB@<]^TNOM-1o6-o1ANpkQn>qS^k$&@H'P)GbTk+Q$'29LN2)$Np]*QB;nD'Sgegb7K:#5R1$=75bp#*[nn3<7K&I8
%36A.hHK<f<4(Gq&5,rV(D:O^%2+E`g>/&.5LSClJ!['p"#Uihp!CJf$+jtE`RhWCN9-bP2!8kU].mfC7RKBr?WX@*RO,1r'D?f@k
%V]?ad9!nO#*%/2X2pY.+?O"gi;3%^b;Ao*Nb9V1&c_\Lp)1PI^/NEoUD8kN?2:dZ@7`l_f2$u]Nmc&nsTW0<qZ0NN9ap<YC%1n[D
%3qk=uL+`Hh%iC7mG1#W,W%Y,fAYu]$q\8!n\/iZJ]\:ZMG$OUFfE@;reQ.06\X<\'$a0FY(S$nCd6Lo2m3I1=[,+2F8B"U!Kp_PE
%[I_[+N'qEHGpgaW;d4=i2occ,<lEV9g[Qa5R,.Kji?H?<;<#:W"]@;14&^fh](mre.#7lCGq%BkL;TOoa:ddENpb@?$Y>@ap#>nc
%'X)5j;"!Rg:9GSkS@V/gV^uapC3'5#Xa;t^1Cg1-f_]cR*U2_S/YZ]-q6!AT$Ph<bLo2&OigQcO2p*h:YS&hl8*bNK9iM-ingH\D
%jVDQ:aS8!6k+F,(+&*leHJfIak]OlCUgR&*L\UJj`VoF[8Z(Q!Y1us[PH&'<GUkQXF?P0I"jC&T-Up2"mNpVGqoup>10!EF5INOd
%W('HIR`!`;CQ=iK-p6S2k-LS^F.UaW?lDD&K!X9L#<3(0rqFt5Niet#EIgHA5r"i^E.[H7b13.te`e5NEgqtXm>P,k5frl]BO5"U
%4Y$*@ko5e9^LVIG:L?sC:=4A$=J"(fC[68VNR(pJBqEMMSBJ&4np7>YY;[2NI'haj%7c?]DnE<.PH^R;ZVj1;P]NQY.'XW-'%_=u
%EqIJCAVZRfWcaK%%pUYT+B;W"o'pomA"619H<LY\'S99\`"K[u_$Ek@Bo>#K)HV?-BsW7:NmLa!+sY,iId**aNb4QEKSY7I%.iTA
%Dpbnk::P$0CUd"[(;];G=)7n(Ra+02R<3J44%$:q,(%?QjXoa+_lk7(;%3UFo@5@s#`8fW6.AM_Q=(AKq+8c4N.F>r`aWiZb&]+j
%h<kMf.n^+FTctsd`>AmA1"8STn@WWCV`cqUYNm1qQL48\"Bj66X;o8rJ&=^/_qOmp+BC10616Uh:!<36B;8.ofPh-F(BRKK>NNYt
%eEsCA'sICT/`U89ZDi3ugdFuC">Pt(%Nic/L?D'nF6T21Lgt7p?$GMdNU<[SDTMpZgm4?:n1>ErE>qs>YZoQNRJ[W#6)k7caQK^t
%J[c%5Wt-k[RH!BB'Q=R%U7$l#1/;h]@MHD>-S-7\\Y<5WdOD=X"R9P,%=,2mS1(Zm8Y4KW"phI#i60[4H.g(@?o"3`B0l5X#YnK%
%\)aEZP&-8+`k[a[AKlc8\J?Fs`.M:CYs)IdOf'f_+A@NFPrQqOF4`mNoJnGA,)]2E_jFi`hS.i+^j[g/l6M^sUd1AciHdu)S$>_X
%BeUp'fQFnn#p'ks7*6].hK1Y`2q".RBaE2q%!4nYKA)AOklT<'nm-HX$J!rmb0tlO1ha$G!sQ5*7D]`GG`'G)%a6T#*=R=79f^qR
%)lFRGnM:f#7$O4p?&)_I2rAb1<oWW]fuSTofsF-rXWe0KCN01u;&)+""/tm+j.`3b#V3.W#1t1O`L/+X2sRZQ->UIH?Y+S\Iaje?
%?=1_7Xtq0lqD't<h^/','H`Lq$rft3L1^?[3KcZ-K^gd$P);-:KQ:<Df>L&q8FNm_P=>d@4"a_2$fZ?kgodjXKm6b*2s^>>];kj2
%"7[?tMapL[c4MlQPjD(YgC.VSAZ`#F-sChs$\3H\9he*3-MN7kJlCK*k^YoOk<0fNhD'=&0LHLfF;"aL3F#1Z3fLtUZu7=%2+&8N
%;%b.E:Q7ianN%!0J'ULsN[fuEF[SDolSa)*(er<I5,DTf:"5F.,`*-Y>ZH7!r":i#!rF7`fI5!b<N.hW0Wc\iD.HGU/>,8:=gGUe
%Nc2AVlPlFccIH%hWC(:HE?]Pq%)IKDMTcG%)huibD%)WBl9?`..1/W!#YPTRg9^r'V/"U07a5q@*$WGM9p^eW5nUpN,4'W\H92`H
%>#!le&r^>p%Ts)nWW5'pr)XV@/P<Y=%$8=Bg6^7GZ4c04_h#V7.Uk)".t)f2E*qZ-M>`6#]23s!rB4Ih=Z]mhij+R.!tBg$H7M/B
%kY6pOl;7>dK&Ou;#<6\9ome#7`8q4Ibf>a7T"Y5mDfP]h@Wkak6C+=SJ_s37^s']&E$niuf??p)D3aUQ]J2-9Vq>%rYiR-COC&HJ
%WH!nlb6R&YJiMFI5q;r&'-Ed6_?i96Eo0RXkM>n;W=)p20pWn-!N_cu#hN*]NH5*Ga3e15=H2+RLSEQ:CmS8O-#cSsOeVQur*2o"
%/Uq[c\S!7*V"7&YM_fGZ2,A(D0.$3]/2,o?]':cbN*:$+o'ESB#YcUJ859]r<5PprRguE_/2lG*\o]n!K,FYlPRP]#cid>Wnf('/
%:nu!f#?4Y8U?d*TF!f<8--2&LgIREAj:Ne_22fq&YYa<,0(OZAa4TT(r"a=j/nqEIB*8SWHWb:nJ`ud63J)jN-sO+2=[D*7h4[Mc
%\t?4%BlMq7FpV_JWn<DO?`n6$;Q)B^:pP"nj:2``"hjJ'ai[^.%dM?Fm[P$!\s";)e^f.1-]Ml6W6&RT@:W"OI^P2Sa^/rsV;j+g
%IiqYX'O=5J:Z#5B]P^N45@MT]B9jn*V&Dlj[p<)'lYRKuk3X!fC5)UoC'KG-9m(>>1Uu0EI8\8L7<7RPahJ>5rD77MpY-;S]^0]G
%Zu#.XE;B>tWVNg3Uu$8.UWg_D$4u.9lE*:X>79gVb!Wec;nJU"AAbVPenttP9=omudtQc4PT)VQ\e8RpD)#6e48fe.)Mj4<VuDaL
%Oe2L-mN2k"QA[LiPHu*f-3_&>O@&OnKR8#5,U+$1`Di?mN'h^aI)H%L2)7>J)*;4bFXe:9D,QKU[cIJQ/kD4u;gj(A'/3N6?%kpB
%%L^DIRNl"J,/uOV^mVoJP",m2V>TgX@dG)`=e^6!<te[9dG40Ci)\0AO[uk*73IrQO1HZ4ZpGVCna(@0:K+<oIOL3lM$C1R(0R%t
%A3<Y`cH+J@,<d;<E.:9?2/Zb?B4I7>Tq0WM6fSE4E>rQ:m/IuUkW.+X%uZ--;2X4hE>%gc1GR.J[*5bQB1^l,0bq_>q$7Ss)4?6^
%%l#8p_)%"$[FDPLp]oK8oJgOs.e$jW--V`"Sf4HhZ)r&.:ig`)'9OgSDCE=7TeOYU\"uuG>Qp@m*Q:)[brs8AfELbP:$D'PU'X-i
%U+4e^4%-B:34YS?rK'C.<3&<<`d*H+p_WEl.89L/KhUZAN..QO`NW$%h(Am.ZU_Qs+p/B4(\/4&;(sPdZQgT'cp$t$M(AbB\gXt6
%('Uq:gdUg>Od*6s>$YkRn/A[ocg_T9:mH264t<\Vfu_W<fjOc9Y?S#a4$r1m^1FWbol)K+g;>^7iWuFAlAinUlRSN+%2;.;k'YjC
%UnR?<[^DVDkG/p,2ncTi=C"KgpW1(GNT5-H8us1?25,:#M$K'!E7p0aWW@W=PLgT`,uuJjHJ*+D(raPj%5K>r\dr]VN3rms`AWJh
%W'lED!PlN#E5H^0m?->._W`h\jbq_$hIJ#!%M:>gLWL-RLnM7'%_+`>0QdsAfh,32nqt9T2pbtSi!D5&Jm=NY#s86mYBk3l)]06h
%bYg&E>A5_b,<,?d6tr4VIX@Wo+i-B[8@$^T@rObXh];2EE_A]_a,Cj6*hdD*Wp5tB/08^1J+b-.734KL%O%:=BNs^E[8SZ8e7S$%
%.oI@C:b?$CSFIqVg_DCf>p)Y/=lKc:dGALk)g>aZbKH[g=2P5!5?phE-_lSrVaRA95<lD"L,eAA+*AAC,&JL"VGf&nTAFQ+O;"q?
%:@W4Y<aOnSXeD#;=DX$eM+sRV4i9IJ:4fTOj;F](_4iqN/'o0%i*3MB<SnbSL(;\P:d&9JaO3bj9SW,)<TcZb&0@)[(an\b8cYj,
%r6[a!/o0F$ADQcFW?K"gLZHe$E%TVsg>iB?7")OXT*Q]t+Hau<5h0.18!Xh2naqEn%%E.A?>)0g8S;"Gp[AUog;i[tfB.&4BZ[<T
%anSBU;tAWU!iJF2]@[;OSh6P)6=h4W5(/8'DN:Dqp`6*hrn,NH15%"ul&)mRli=5``q0<fL8IA^=d[oE.o`oMU`fl6YZEaYc%qZa
%W@=dBegR+prB.,kruu/oS._r-dL9_9JmS1441jQY<ka[H.$6fN-G`HRH:Yic2+O'"q#<4Zdft/q5"]U%QPPa=-3I[F1bM<kFr<Hk
%,a8;JJ@Gk(5r^KjEb5eAd9W2kWR0YP)O:.[qAB:'.^P-`c'V6&6>@hWW>,Y9f5:j35#3G6._I6A,Er0Pa0Kh5LV^s?epM2O^G?9\
%]NR<Q."uNF/bR.M^!!1iECD-"65c1Z;tj^^U;1c2881JPFk$A7em5?2[@E&qY+__H55_1*W'[?U+X[;m8N+ISYgg?.$NN3MVb^jf
%E!VQEcK`56aYcsJ:@^?>&[E:WjZoQG4H70f(IIuFEf2e:,%#+&E&'mpClqHM1%8h6Y@F:[BI,]:8)+F'%Itbp&Qh[DCl*1M7n&bP
%26`\cbtrHlmKsT"o,0%kp,#dJOh*-:D%G#FV^Me<Jpt3N5;[LL2KKP8"-"C":ZMB@1n>c;A`FA8]"BTdEqee;->"`>NUN(^K63cC
%DrNV,UuR.+@!eLa&j8mBL[?6;6"(JMi9kTc)G)b-pg%rs2MLTeHQpM4<-=AolujG;dY0fMabj8#Y8otS98OaMQ2A*I">%\jm1f#(
%"f2qLE76CB)eOidSO;T1Q;U%jje9pBE,_:#Pi<2sdYH5[="#/FUf^1pk-KC0Pga91MC2H$`!Ac"p!mRhF7$3-Cii`e)-EUOS8hRS
%bI1(FS%m=`(+EjV`.`7W"lG%[o=HEdqXnBW8!fT4pjen=$/!G'h5Q-f0PONg5][re<(k<Q;7E(I&/^I8c2BA<No#]O<TG6%>>4^e
%>VY!.`XXB>cEX]S^lTbb</(m^@@991H.Ugb45'!U=##>4T3IgVNTGaI:BCuHZ)#osY?jf=N(,f<OO8B%<XCE?i-15r2<b0TY=OBZ
%bq^=eh=@?#8#eW-K[8f;ehCf:HAHaOQq2ZbM)TQ;1:V>ObD<sZ5&K3BZ])PYLM_RJ72$q+\e75L<?36,J;Pp6[k";siS?oUFXF/,
%CW3V'!^7?.'0Y*qC<RR6(,R_>?W^W]KNCcpG_)E$oVgnncqW'$&#6:F"U_<5\NXkB?3+&`ZVm#Lq#o:44ls`$fJu3-`!@Ul^KQ.m
%$$ep#f't%lGFc-M/Q2^9Xl'kT/pbk_Cs<k:/'u!l!@#j-;a`Dag?)G+6j#7c?WmRH3E<07^nb'gXr'RZF:))T$SeG:FCb6uTjZrG
%W+_P!dn@=8Zd%1>='=XZ/><=na6Vm97_f6X*o&A*&QB1S&ELX8lXF#5&i]\_(DEAlp/XssqK9f$\o_jueP>p".$q+Ye7-jOCpd5W
%5`mJ@2(Z7nA>8Z%l6-M)B\3R[?=VFg`$,:)fBcAO<A!.%3c1=oIR95M\Lp?3@r+,3kBWubU*GgT:.=&lVD!6&`X+MbRqrm>[SkeE
%bIWI$fJMhH)rTR?PjIf@\QX=^j>g?UKSW9['O_T-\Cj7bl8_84(tAgq,"ii=Z,rMhr,S4ZODh5KUN/CMIYrP%7u&VjEGm3EJk7RP
%^Joul"uE#8+X#PcOUVi<:-GcI`U42`7SfP-eD_5gSn6NIPDFle-PsZa'^c?L9*'A-F!Ih:?gS'^K$m$\:[*<@Xr`$'V7@gSk:)am
%TN8e,X;?Jq885M[qf@Kj7J,a;]h7_OEt?;:I+lmG&R?K&*W0bm'&ApWC,G6;4kjQ!dgOogO8YgmR#$t/fZ"M0').=/`6IfLM6]M*
%44<8;=Rd]Z=h+W/To$s6.`PJ9C<F-[AIkcH`emU_NdjQ0"X;FuI"dAg04Dc]<[4uKXL_hS_V1HO,D9>U_J]_^_h"7eO"f!;7ef?i
%V1PY+e#T3SC6@n#7*Z02!_R.rBNO\RO8?kJ.=E2U5J)&mZRg\^mmGoED2-BE@&;b*iP0hb2PJE<-#cc7-=YtQ55_HZ-BJSX%=L6'
%eEj[[D2YWV<2i(8KB>o;<12g$ba!\d]IZlOa%@*B&Qg&dL>QE=fZ^12ku"9f2anmGQZH\Q%<JWX]3^X8rajT[m^?71-2F\HSA&6f
%Pk!A`]+\;0_Qp_!5Z&UA>c/A"n2>QYAScMW4Z<K94X8p6n:]-0bp?KA+SeHp7'ibLIaRF';M8)i&,>.HPk[u-V@_,OS4TBrLh\6$
%LC7`,EW<Ruea9u_o:$KP(4[3!h;fksk@]N+&>G!%i_^T%ZN(:a4.__4(l=G%M<pA1IG9sH>B;k;f?q0Qd#[=7(.pEmB(rW[IHu"t
%Fl]^Gcf=TOicAA0CK/IXeL"ELl3]ds?%II@9sEpPKhRbGONu(hO+[!S/S]9_E<=:Q"%5Duhh]^J0s3"DdTPqH3PP,+e<6INX#uiL
%-r@(:G$.E"Ju[u$q[8&G4Ba[RH9:nP<4g_&WpJOdh3EO,=c;\/AtWJV>fC>uFMS'+k*%_dfI%A?/;e^`Ada$]Rn.<-#kl8!V/n+V
%26&tY#mG68\i\ScH6YS5hb%YKpX`D*bE'L>rnW@nG]pK0+8MBJ8d4LI4C@hPo]Ec(Uh9eE^[BL/S,T"7aZ.Q_j\t,-ChI3N;k>B>
%l\$+8'1qUI@hp>Q8_(Z,5Lh((.AY/K1WSa7+*^*@dTd8OQ,u!2Wl^*$kcu5=>;A!VET9a.e$nhsg"D@q8nt'2kr9X6]B*8mWcFdA
%hpPKaZ]'2W1^Jfe&!7L_7NaC<X*0V.ZtfYnCol\(>/E2a!tHgs"Ni[-ETZruEjB=`W?=,M-T^b[0&&B,LbQ#67h-GLF,I%n%.,%C
%MXYN?Xt].,antk@7E7+e,GCR3PllcG#gL>QY)n^!HI%,)@<F1_IE_[Z_SVV"(^Xm`LFKS)_k?V<&D1S@IK1:*8O[DH3Gnt[RUDgr
%bSXAH%VUi4J&YCA7F&[t5i-W7lP@],nd%2E&u4n8SZ2<H0KnD!POV9h3K^\&#q6li<`m6CF0cWhDf]3em:4Dto]+ZYgHi@[hVAHe
%0GRD/#h>2,*_r+L&ip'"4R%n(kN\(MeK*sVG:YC<0gRT]4,0>r86[1\`ne"--hhKj8F=p$g&o3k6M02s!C'd$12#kJULkgUA7oi'
%Gt,U17\Q$K0>:GP4l4t4(8eA>#,Yc<C3a@#':1>Vo`^=Pnd&5G3*=0i2%f^b_"_U[JKq4l-+?=0W7Xh?HWX+Ef10Dk$C8r5:m<RT
%9-L+ufBH`r+<+C&n_$/Vj5agO+ECTAn9dST:+Gd8=UnT8?`j.039[0=dYt@)5'Mf4fOton>!W<YosG$=m3CP%[e:I\HU]_,q!5uq
%@I*+FNk*LEa8%oN^HY4m<XZTDn[,7B?81:WOKM4%[P't3T;/Gr#jfX-^SHE'8Ik<qJ$AC.!eC7M7ZTo596ZA1iG=r*&m]+J_aKGm
%M8%L8B0qB7dGn9a@jY:.2i'Kh=h<)\m%K#?C\7ZC>24sn/I&'dKNj8<Mr)ECP*ea;QfO4`!oo<t!_Ure%8E?03j5(9L'=h-&<hW0
%PfbhR1b%$R0M$<e>k^m*GpuRI1?TRM,d]#seWX9h$W#bA7oUp?Lmeie(0+71\#VkYgMMmt5'pC<g?)?P<W=a7$4EuW+o0O#bH<,=
%n++oqP#8`6+n;e/rPLJ<AWZHDpkSDZcp!sVC5aAAib$9lCeXR0+98=uB,)7>qA2Ru)OK\n6D7mK\\/?Ur&jG)iMgb8[%`SC)$f>(
%%sAW-lMT\8*[+O&D2B!#0e&A'=!&DWdFcpe7s^E<7>$V_Pf\qb4h4MoPt&:,0Mce97AAdK4^(!ub$jXEnWHQf(!uLeYc!-l0C2]o
%.a,oN8>gkQ0Ja:6>!b::d<fG!+Gs];ZEAptlB(/D%90jClA'*BfERPX)2XmS/Vl?\Y:e7X7C5D#fUtQGjlPc.3VF(Uob&*uQ6+nn
%-u.:Xk9M7=;,ZR[K(A:;##X3:W;D84b,Fqdk7Ij&We4gq;p+%>4uO.$PX#"gqOSoFpg'3N.jF/S"-3/_gN"9&Z8L=o-t,Nen6[B`
%P,)&Gi3:C^.>n&8'$eRHCedR?JV[h;0rg:L_N@Ne<i`^c^/>TrM`SIdI0./SK&74)aL5Vq1Z]fCN;Rp--&79Df34mR$btF?_B@EN
%j&I"R&SX/O)+dVk(+[90>lt1*h@`6$!KAfBSuQG&&s[`pqilY;PiaY!&;*"=(]gASR7dC=)]PNmQ5tOEpTo?OpDLj\F!@>5*2!tl
%Bi.[sUN8#Wfgr`?25?gFP8pc@7'L4D2U\mM[Xa@'I1BXC=pFD+D(LS0oa+'I\qf.(\cmNX=ElP@`A\%J=UJ$bCtHV6&h`Lcg\8;.
%nSJEU=AYh^'sjF(LoQg_,[)f\6u"9TM/e(eQZ\+T#PCtj@B8q78rcDk4F3A>j-5kh+1_kHU0-,h%@Z2)+F2>Z?Gfq%RKbRr_H1-H
%0(JATd,_%LFY8n9:5%JoADWIVlgk?8Z0Wda_D61!r7?#S=SI?DY1kQ%NmE-jm'TGbSb=?[,*o.J2_D(T_cKTFYHUlUgB1;U%o]Dg
%p+PYIE>7i@>lj/Q;L8tKq]mX=MVg`p]_^;YXTX876f59q,N8^#16"r82WjRrM'cl?O/eqHPX^MPMNXP<%&TUR(=-Lqih/bE1uT*%
%f&G$$'ARhP>5maZD$,FeGOCqZXkm,G$)2JL4Y(0[?YJOolS:s^6f<4-<$k6uLG([=0YsJM+i0-o4FHM@6Z4/`fscYDV0VaA*)8#>
%I6aU(5)]L6M7crK*X,kr7irE^rT[#!.)k:/c5e32>Q(i"P!sZNA"_$hT3SAJVD;s@-='MD=/bkE#OTS,SIKpp8#?>@PW#pA!ND+,
%9=VGQqn&fPN>.Tl&D+%W;j']?A'RPaFYk*k7CE^mAdXrF<Xe"!"'gG0iEk5bXQ?dg*T8hAj$Kkas6_SXihA+t@8ID>9-MaSf!@GW
%!+_^CO[)lEH<`Ti)uIj+,,_u3o?lrIEVA;#k1a4I905Q]>0<gu)CRm%^/S3F]cuWuCBU,(Gn7mBEKAP+G2BK%ER"o,,oQ;NCgER[
%>i^lV_'P34OU?3$o>$?h\!V/Q_l'jpPpShqI>T/_eD-?&=3?qS3u?'O5bOoY,?iC04%.!sIQW+)?7COKi&@7)e7fOCEP[o=R_;C]
%+h/(@YE]mGC\bBC<h,.$ejJd5EO,?6>u>I9<lL#%_9AaIPIC/jBdNU+*FeYUY#O1i&FJ7?F9;92E(_g'(fVq@iA+Lh9!V?$`J5**
%LAp#ekbg/'g@V($np,64F8A-pH$hRC:D<8'H3!@Ks),iAQS>uH!)Mub]60j*,0d8N,/0JFmEf=k'J$_JC$J5JYt#MK=$Kk_+HR9a
%?2gCPG*=h.$]17NR*62G1Sh#RW1(D3K=EE"9g0pkNq#"FnNpC%kHi/*"sQ%4fiSEg/qO;5C1ZQSdi\ZTG9/!5n!rIbF`a*MBq>`W
%!i";jVA[U1[@bK%G#=04?]&fENXCN8.e@A"-b%nUTqY>LllrR7.TJg=c3M!RP/)$C@u1Y;JddF>f6Lih$:N0/,s6jVbI0_?,bc!,
%Y#qKHoF_nY8Ub;DWI[`,CV$$fJk0ds)QsKT)pt0+<cOnI:f;gPMR_i2W[?_eWik0eM/)$I(CYQL=4b]T2th2^ADqS<9679ps/M3P
%#A[`%89FQI'gcDG%g1!#MO\"]30u1>L1&9:@pej>[F>-<L8!%211!M,PV"o'6:n_[B1u]f,cCK@gCM$78eD\[\7>HKF&na5[T$5<
%U`:]aVp[0l[T&Ur(Pi^`QXE]s".i2&_lm=uVR;ul3hJ"l=mBuZQQ.FQCmDrMON="pNnkC%IisDDIuUg923<bLV(%884o:\]bahKg
%U5.kH,[i_A"*N0+\b>P&+=Q<Gh!V56-p&7uorJ/)j&3#M3^gU7^FL:DqaSSe0&)ihE&To[Q3"oKT!\^84JHZ^:b&WJ2s[s+eO.64
%Zc,+]B)afamR12_))]&t8"3QC2[kmh<@'#%;NrL+KBa;r]*78abS7V/6;acp?p<A7^5oF6gg.H@FVPRWqC$Ll\cbh^W#S!r9qG2Z
%0G.j33Eo*:cW4j_6rTO>%_!j07_3Z#1G]&39%YO0*$8f6C&Njn'Ct7AN>%<H;MbKm^i+bA7?k="a@hV*KZVSC.e-o)>6$UbjsOYf
%\-*gbLJIIgFT*</XY<gGHUh!Q`mfM4&$s*Mq!q=$[kh6&0kFNi0D6XP,7?H!>Z!W1!")^mji[?Xd13T83e^QBGO\t]LThMjOZ[V#
%Ca580\-o"4OqF]/abCDFL4p,lKYDE5dKFcAaf:P=9hp_A'NQ>rMcXH3kq.B0W1:u:)A<c>Wc4&sW;t%toPkVo9RL;%O4bkL$l,CX
%Nlmm.i^G.&QOAEfL)Q4]E:QkDh];S`pBW1r=i(DOem)ZR'\Q_]l0Ec/LE)RBT7D>@lu+$VKJubfgS*l-eT,!Xd1u8k5jQ7RA$;ko
%pr!["ls3=1"u#;*HMsq?>W4>7(/e4B,@+3D)!Ej60NnhFA_Z&[e^lI*c;Y01-jE5>_-N:t;q;2%q7&RHUN&M/QTe$190B4nXa?B:
%!it>eq7%r!ID-Seqn>`hpk3m]$rZrH-V/GM,i12e3?0ouPVh<ra9!e1lf5pHgh(QSnX+BFWcIRgLf6aH:d$l85'!dZM2Df`YKEot
%EHO8H'W@Dg*)jnKIf%eibC<qCSjr'Y>X+U+%"D3/@:_b%LXK^XC]M>_)687.g;is3&,=J)f0NXB&t0UoH:n(r>c5Gng`2LJ6QV)&
%:V^#H1Q+3HFRT?^GpD)sR3XI.$tZGc3g:6O*5_/Ak&7K)/`WorKO;t'2GKO^ZVC@hG`XJNeU,"FSIPC0Wje'*'sS-@[7)JeS#bJf
%[gat/<SuDWrVUG1H_6Tr\?Z'Fe)EueVGQBsW(Vn`o\+1PAJ*Efj,@50A.B0KdZ"rnZ.!bZ)eg:KGh<'&n:?R@rSZ98#22Z+p.=SI
%;cW99UV.Y]3]bqoGp$k9!nP\kbhe.H2oTY3o=H*-dnM_0U1HAe9)eK3<HS2q&fYZ[@)RIEZ,$_B3i)%$Ei+odBBOo2K1fM,)q!?%
%Y<;]D(85c5Q^b_fpfCZ^>o&(FK<Z9_:b]+HoS6U7Uno/:WoH5nWY[(W7Q\$?_Ia?c<qBH'ek7aT0n!=/SOnA`$V4?rg@"+8f1#>d
%Jb1j6/57`k,<JMjZ3j(`MoINKR.`W+j5DZ;Du1.O,.CT=?QDWR]^`kOl:W][a$_f)r4(7:YTEHB:&V#1\fP2sG:3?s`Yl2MfW3:B
%K1n:TS7Z@YVFSfZhO\>%EbX2<'8,'rQ3&_-hYc8*dpM!Tk^<7D5WH<bE$]:)J%.c]D2<Pc6hJ)iO#-/`-18'MhP;h(lUTt5Ek:Mb
%[s(_Z?m*%00n"b7KU/>^HAJJ-]TK]sk<lGF2pQpOTb6[X=PiL:k#^1'R,J'o/*p/iLZ2u"dk*4P5m_\4#upDuc'ulNpp'qt<,[Ig
%,!?*C'$>T,ksQqo$M*>iYo^7DPc6"2SFeYof8")=jVsOu4Laq9PA>*?KCWb57IfMa6O!M3cMHqDYrj^fPhF09lUldKK$\]lR`hdQ
%(-<Cc/?jVCk)5f"8)&TV5H]ssJN*o$m;RVBnMFA"#ANJr"*`#"2"e"52k@[A%aW!4VRi"9@g8Bk=:uPI4dbU<I?Fu3ERc)l)tLWF
%gV)Fd0;=%3&it5rU?Z"=MGqUK:IB-:^'k3)gA<UOIeJ])[kD*u1um$4kJ#aDpL[fXEX>+tBt0B0-:"E)ng:T,Q*Q*pe:d_(!?OFo
%d=U,mH0lUO!'sIc7fIq"GE8WH6d<E;H6%pu20M2p2t+BSlD8&NXhX2^AMB-W/!gshQJW178<uPI4@V<`@%p7MWtqi*.#3Q,aY\im
%qg-`!0=T-%@>iEnhiGUu9>;<-rV>b<D7k#r%E6^F/=EtQCr3?KR>p8Ei[52T=S_;%Klr&jgLDrB0QsL;;XlMnV&lDgRW<p4'b>Ai
%f>H+Ml.XrC(kahkIo80FOQm'3l8\n_Us%o3R$+G%'=]2DC.n'5!M#BMoh=l>eL0fbW2TeG929?%8.Y@WURON+_TE<K+qD_=!s`G5
%6XfFY30MmVPSF20Ri4V)Np<BMG@:1_/f`8YcLWXhX(tcMc-rYBT0T;(eX.gF^5g7I`jls2##73X3R;UKNbA`SQ09tb$)TkX&-d9@
%*g,2MB.Tgo_ri]#pnCJOgpqA>K!:,ZUik(K]QAiTp="W*),3i`A_:oJk@OcKPC0\ND?f0>_+eN-H"(^4%3X'Z;uY%ObsY:?^,!ML
%V#Wd^Qf_G)0sF2j[PsjJZO:a&Vkd5G.1j_jI3jgY_]-#_Ic.(/1X"7_!GUACCs],Q+Lt"-FF$0d_)_Fr%<Dee14.4La_2>uN-(*5
%,j"l70^`#3!aX-`qW;MGHLmPo``sF0f;\MX^5NK'1s4amjF0$oAEEQ]'f0rGc7`rO^t-(pG\RV"J[]JuXD.!!()dAA"Dj7"f!WkN
%,_<@14l5%&!5@7ui>9OeSmQurLeC*R3cid3le&l,>V@a3Q(.TafcT*hQ++-\7B,*V^8lFi.*rnbHWA+iY1A*V8\0X]\(l+9?8h6W
%)uQE70&pr\#]A/^\(aiRe+i&6]fBd[Vt&#gI<2Pu%03d-<Hmc9\EN^WKA_&X>S!'gA*5lqJ,U`QDRdI3Q./MZ?1$[CMDfVJ9#X+o
%WS&F2Tp(g?A;,jtoe83aG`DTR&Q**GIPRTM8IAH'%`itUpsqpN_NZ:LPM`MOVofI3?s-Rf\t!D-DDXYsFmM=jT-XYrp)(pW[Q)e^
%oT3deMY?P%_FDp0OKl0^Rj`mI:B%FP.S0]'^"@Mt=$'d//3BqaW[^'8$51p#Rk#&CjX[-U[?7,ZS.Ebm<n7/E6%J"6J1A>*nVO53
%Vs&dN&)%_J;mdjX/[L'fP!>0R#.?]\P3e5\KLie9'\l1VI^<CQ>Z@%W2ct'IrG:Dr*Fk"@V&CdCCE;Ha)Au:-!;JW;qULVi-`Oa8
%fbI^X+V=_'&GNtucod3$Q\EeWU9i#8Pdcl\.('6HiT$OlH(SkO%ojf&o<S!pK>^7pdb@.9aC+u_,etmQU!JRkVP;5.'#QC?B7XYD
%+1jH,H?B6c/^cb2LD(PfW[ds*>dlYaIJqHfdq<3bbT%&*9:>J\.0,nrVRU`6dUSP)KgB>k&G`k].=_X[BS\l\GV]YL!l2.FC4ba1
%delC`DHhS=^CS?C10uo7HMcBuS>mC%h,L>fJaaX3,9pp@bj<SZ*ba!`Jdi"`\k:o6Js3]/@Ig+6;0'\iQo-i)Pc+D%;=`T<_Cm5=
%(.=0&gDc4q11PtIUST8!Y+%Fu`7nKo'):tKoPW"U8bEQ"O+'YUe4`7E6;"V34%6;b5ro/G-n/7@'(p^&KDLLqcal\BWL<GW%^jd5
%SuOni992k?jGB!EJ+-4/Gs(pI73H>j;4A[hrpAjK^XO7ZZF`5*XVh,EicT7En_tO@?#be%8>Z_?`NYO@6tibEEk@tkQUjr!4A/em
%,("T?&'E)$Z?t+3=B"K3'iKps$"UHWE4h3r6Sq_($4a!)`jD`h<!HMe3G_,Zde):KFWMge_aap&phH?f<SI!(;@-aDC]M@O!H+cH
%6(2sEDikC@ES8at$Lk&I,V/-]m3eXuk\'no<R?Em\^pD`3`USg4`$$^Xk*m6QB6-iVTP-=.-om?<)q!M8R@`l!W!0DAC]At%S-CN
%n;(79Pk.FpIic&Y-sL"^?&cm0j&VKrah#fO6C8Ha;8Nubl6JT-/6'e\MVj;K'OKA*@su1XJS6n),_3&%AZF1,rQ1E>b%/hK32i'A
%q,2COZ[NBa;jEE/rLOdY&lj3R/WN%-.$O0I]r9rZga+sF\%YXo3/'t`"D++)a!?snI=]Y]%QK\KoWg-fjKV]SFW?Z?]o"9?Fu%$>
%?`=?H,.C:OFjJAl,poKk#D_,BZr*a,8$id,E;N`HSX<YQF6KY]:X+PZr5F)6Y84<&k>!a;hYG".n!\LYQQ+b-<R>q.PuG.<SIr9?
%3(2%k/L0ZWiMBT9?.XX5IEB!Eo_%p3?fF`%\Y[Y)SKGsjL#Gs]/eMIQ(_I_EVQ8Si:b^UOAO%`@+^(.cq`uqrp@QN4+@4q7L!m7g
%#k.%4+W#Nu</mmJ:h>9lJ*WU0b"L(sb+tTe%dt77>,eNUSS!.`;mrnY-6O1*DLk$?`I$ZY;r"VQ/l`BPQ675WCmn@B,EYC:U+3.a
%XF?$tTBC>?4<da5-YS$eR`$gNji*7&YH*8H-$6L\he+P[_Ku^'GF/G-TG`L1'5k?ZjTUs<<uB"!1>a9hE3D(5:*?hab.nOp],%<,
%`dQ)kg8HUSUWpl'd$\9tNCTcG*/Sa47(Qp2XXrc!M=%Q(`7@=FC.l;&0P8EXO9!5PfP,kmVC?i2U#60R<_rI*p8aOW=`Tl>+]E-`
%Xq>G<;!79`nEXT]ll*@69F]R^&=Qj!2&0,P-7,[LpJ!ceJ7R2DgC?,`EN#=UX9ob\]U2aM2^Cf_jnd6j>Bu)fK7>"02;0h;#[mo&
%&CD-)G89s@htO<rETrLaD$=X?hj%1Cpi;;Yo^^O>)4?sih_ain8j,3u8'2S9&1/"4BV8!,o^/S`7fPM<cg?./W3,f4N*t,rb;\h#
%mDg>d1N)W"]YehSXf\ErZ:*m<Yem/]H):9F?(kqK\kd>H0KHJ3ldMg9e@Ggc+QQ0h(4j=H9a$\!oI@<pp.'mA>7ojd>J=a"Za>Hi
%[CGbBXH']!]n"]^2oT</Qs!O[7cqe7@84"FCXKJg6B;`4<"nBa]bgWefIJUn9-;98;2?%Kp8W-.de,)22&\P5:UPnG.4\9\1ceFQ
%%&)h>:=DL$7FC98o()ac`*rNM=%NQQ#a(31Cjpt+S?q#$+^0;25F]oQXCp/3%q3hSEQ-a5c/qO?UA?4'6*M7&Hjm2KL:?epq/7gU
%S1$Qn@E?`2!m@)^<9THtfR`i@cs@diF"l'^$,m_H6h>2X"&BkFnp\G50,=dqKVH#u.S+n35/a4^\nkrGX@g/="V/k9%**cTqC9.m
%[@GQTh_i21k3,2iKJ>'S>,&0Yq8;WJUb#V*FVV6*:#N*V+gB._>+#,k:N5*tpUM:7Z6:\5Tr-]nT>nOGC6frCXRh?0L#fK%.d`so
%dkuU")l(!5eC-75@k4dl8%(n5B7cPoQ4^7Y\h7ilXaS]"M$1]OD,+Z=,aW`kC/?1m;E;eK\ZFiMP'Y?1R'#?]);(?.e<7.Y#a!7=
%1le2Entp'iBpVXHa%FY:H6+5,Q@Gc>@!G3#Z&Kc]HXqjiDSW*EXmFM'`-Ao,gh;sL2j\`_D1IHZ3JG2lQapf'fVJmLm/+e-KO6pe
%Vu/O5=\p-KNFeap/h,_Ci7uXG\PRP]0H+p%i&!p_H4VB+jr/HW7YqAXI2j8sC:!^Ui(V%ro,gPbGA0:bhp2JKH"CZF`_AHe2oQj1
%f?MoS:XhD_oBB)r$T9*7]7D+j$DS_(<%[HaYN,0Zb1Xfu,,9435^5iI]#TQAq1SGcC%#^sLYo@SW]5#6bl]R/i1btk<!bf7"h>Q8
%\tPLEQI*QP8n`fl3`[_K.mQtE*Lq!SO4V/!O<*V;dT%1(7@D>ub0I`I[b]i7ZC]N^58llh3#'>0(%q&5:?WXc_OmQ<+[jeL/u=4B
%r$;g8O.8j;QmGe7a3fiG0eD]3MEPC%Vta[$qrt:FL's&d&Q>9A\:OnVb`;p<C'fgbHi2tcZ9uo8<X!9.!nu3oOoUm=r!>H]/^OBQ
%&u(,/7M9<cX/(#8Z'Ef38u#Pm_l=;1=a1?cL+:5;#X@-b1%@RT;/rS@=X^5Gms%aHZtf)].[<P@/=H-r97&f?`'%j5CN=rjdLdTa
%f5?%M,pg5*h]tOg-3@%N\ccU9'`[Vn5WJ'Y;eIb]Qlg0C-0[-B)q1KtO%nb3gON#`hO"DN(->XVH;d7?',F2_$n&"o[>Dlr:h)FI
%q><s.e%fm.j-Q?BqKk"PYCDSLNVsu6%BGo#.sM"QYh;[g,([bi&)qM1q<o!20$@<Hs16Ko2T+>p]NM<p$i4bsj'NZBFg<a`>p?lJ
%ZlAEN0;sl0a;eAHD*r\/eXGfJKQ:`a#=d1U7X8\B10TPrN^L20g=&j$Ei:=j3ar43<\%Y0i_QLL@R>&(5)&C8?.]uQqs&(nh(A%Q
%F@.$3a)i2m<P/)I99+DV/"BC"9eL)ILGf@qTSt,k8ZMVgV&ZN=G>!^8<I!f9+ju'+/$#PZj^`Q@SmN+,kBRn]@_,Ns%)FG;3pqOa
%jee$0GU.7;c-$tVq/I\<`t;@E;Eu/eU::PckQR2!9M$%L40s[T9Bu^^;Q/[F`X1o#Jsgk^O#I\)j)V):!,6Q(R+GOB<'UVaTI<oE
%""mb\h)&Ze.YL,t^!TrXA4:\lp-5"(l_N?1m<&m-lua<3n]cU?%-qbsmtTt:r%8)rU\Hcj3IdZ$99`J6bd]!V%Lp5jpXlXa^YXq7
%?XV'N'C(D/RS:^+;`B'mA"^r4JnA,'*r_jPmT*ji3Sa)PLlXXFH9SmEXbO&C8U4"ZH7>F2%Q9(<3,b6qFWt23Ib?<i>TbCE9*8ls
%D`X^iR5f^_&:qLfj"n1+#GVDqWD_5*1(ppLf;VJ;MQFtT=hL6ll^G>dSQC=6rMZ?sp%.P*bi&eZFE>BKZdcDQ8;.,n+Q:n2=!Gd"
%5.L51iO;N'UNJ!u$Q.RB5(EkpKHEq`F_0@0TBegBq!N0;E^!fjf=Nj6riEgTl8M65Xc7;%+oMl#FjK+["n2hHOAgRp*+Ek[dG]cI
%Y)4PR4&MunA&N\DJKh.Vqd%4D5YEq%D_l8iN/bEJ.ZacHafZu<;'fF5j%Z5oC="bJkU&rkptc]^6J8Q6f#tuN[Ue@U1(r]dV&tbV
%IG,a$XOc[`W@8.n\X`o4r@GM(WoVT!I5!R6;&km^3W/ESFb_N"JtHLO0ZYN6##*OI3H&<Z3k@G$K;U)tLSU%T23!cNA/\BO@o-R3
%Q^!Y^&D9LQ3+KR^AHTMfmPAU3`a1ACq=cf>5raN]O($mc6o3&V#gcpjj?J\?k/3T8>;e$1PnH]b/WWH`]b715=m%D2bcl+;RnAKY
%MY,U@U]F+VL3*Hhg)@GlM:FcIaIAj*NYbLMG3A?EUr"haH^bAjRhN]NOs8b&GkIjVo]5:+hBN!Nh:]dB<7fofJ*`uB_g[-A6m`A_
%_m,lHG+'*K^2(0b>gN:M;:ps.Ug]C'Ktl@RE98ktQt]d-*!kNF?UU\0aJ5M,YFDe-Wp8@uhe_)<#n;:53E+TsUqpF7iA#p*+g`ul
%f]d@fa:"LqNMhQn/A;9b-9&nca^56Vo=;5GOqMKteN6Km_oL#I_)XZD5GBkXR1?trMsNDWMAKD+-nrA5iuYoh6=Kin8?]tJf1GbP
%l,T^ja.)cW<pn%XFC`,@o[]dX)(V6rc\k)VGB,E']XKht7QV,$_!6tn52'ef5:MR/Vo@SeJNBR;S/Pa&fcQ1EDqHc>f/F+X*8M>Z
%&3n2957'%o]WX,AF<F1AZB3Bm"N\qjQc-S.FXe&O!Y>L]Y3DrKJ;rJ>!t.WheOJC\2/q=2g>]X\q?uMK)>PJdOdGi.^]Lu(oA*0T
%m,'JI86&28Z-eUk8fP-m12%bJ[d+.sAuXGO@\Y#dCN[uFl<q?]k`+46k*g_M7W6iQG,opVYBLr^DT>GFfe3"AObFq'`:U%;4A":[
%53#ZWIJ2oLYpEqU%08h10m"P#`T8`)`hm:.@7&I#lhdr="`c#rj'@5VGSGBhB?F&g:Gs@/rrN/Q(8E6jYC`CB^HHqa5cKtOFk*EG
%JSoa,+Po4]8h0bS,l4=cM&*1Yhl7F2BEbX:qjsrU+I)21OM<Zk#pJJsBi_Q/+q'Jc0TLW2VF&sdP_e&uMQ,\(6#&]6\S97#^Z/o[
%A_&+_7D'L\cV8gL2kIscXm/][Vl^jhSDRQ7?K=U0k(hd+*LFt5BpbMR4K+.)cc?:Z032G'.:XSn/]L1sEb0c@Y#,M/Ud!:=ha*O@
%U\mL5U]]g="N)h'LpVBr52Ip>:HebE%Mj;T/G\=Dl*<hCTB3ZK_XooH3R5<PD%,]&LKnl2m/"Bs"&IPt(iL-+38uEJi:0Plkfc*^
%p]_Q0L"9"pQMIaU3Sl-*9j9d`N8*AY`N5iZ6Tg^eDLA1pGWiuEjbP!'KUpIQP2g'.U-VDer>c0o&ni\D)!\2<^Rs\Q!mgmS//U.G
%m;pKh#1bU"j9W7U&t'Q.SNY7n%b$p=p%BO%M;94#p3MR:I6>gJomm/5a,_%nFH3`(=[dKs.$C$>R`&3P\#3^,br;+F[ci*T;+0-]
%cXZ"#r&clDo)7C-hndn_)e49.o_qa[%Y1GD2'Ss+Ghg5FSo&F_C=44,[]=/)(t8sX17elZ1WeW+R!o:0_>E3t/Trne3nT\MN$kH#
%`;l5Q\IpR,V3UJE\u_p&)I]HHTXU))C'k=o_..WP`,Bg>g^T1OUhF,[:2pO8e$f`p?PCq/p>rU2:#/ot0[FPs$5o&1UnoE`*,M_[
%5%cK7IG%rm!LK:@a"jDlH':[[78]C]rK:W1N13__QRrOF`U^)Qb^>U%rK+si+X``GN!tWt?Y%5Bm4e?D$6h*QN**af_PB,TPMH@@
%=&cHObV(fugp-,U*\*"9OPk6Q/kiO,MT[1II*?8Em9gtq5a6QS`'VX7N1d(s$_[1-[s@c9-^@5VD%Mo-`Nc'u/$T:M;ffc8bfD?6
%hGEc3)i`XjbLI[I@21*%<tCPDFLhFMl=2c7Dk=(YK?,ZDijsPphBqlT*O<Tn0CLV!GAn?G=#4oqKF?n=+(9C\Vd4-c;-:>.cbL`$
%[Nq<Vi)5.<[Aj97c/6'(UVMb2ofN+BWaU=1>,"EkSCV/cL4n3(:H+f.H0IOn`cTPf11hD'a3@'c^2W1'P#A6k9miOb`7:?+I/7`n
%2NOPXm`*YekKY,IEZLEP4=g-P)o5T?9T0e?G=>"H_nU#)^\b\K'#6[_>Z+AMVaY^-[(9XGglCtRq)1Fj0j#9ugIU$Fes=-p'b\(j
%/hghW^pL41Ca"KB-sUnR@0P[0WQ[e)L:[8'L`VaSmUSsKW<@"N$r;2J#Sh,O,qTHs;Q,AL`7g_.Bg\*g$iOs`Y5;9^p"_erQLU.k
%pk>hnh7qkFR<KVKGf*N#>dXbf]P]u<GdC>@[e'E)]C;6$:4H2tK.Y8dA'o<;iOp</jFcpSLp0Ho=RB9F@V#XRJm`Hj,rWbunDKnt
%`>DkOEd]EV0Ph9J80T(I?E:enM[C(%(9"jj!\("\,&jGYO1HsV(XTIdrlGI4Je>P^5bE1A_B\h.+$m-V^FrBN=i,,LiPB<&KMWdo
%2)\E?;#(4=3G#/C77u+,Is;QKU`HNgndS?X*Nt&rlIq&@0?/,7"jcagSEl*r@Qil5\5[.aSt1l;lBAMQj4^8Fd-P)mJ(r66BO"'o
%Bim*#.7P1ND%I3S"&Y+MHR8j?MHtKL,g@"*<XFbIA6e^+;Xi%!btb;#AOebL0=%5]h_)cA51`>`EAJNP)?s!ZOH-ieKQEXZ!"G_I
%:k1mXmah*6rN0Z54AQ.#mkb\h$2#V4_9)?t?!-fFQ4!%>M?Ke4-93K7qlidr`VR'?#q_65Xk):kcHZ<b+.m3QIP=<Wi@#2`TKaG<
%UiO=&[>aKp2t]+&jLUAYgb*)`)0#[F5#':A,i25Q7jE+=H,!LLS<8SK$=OQ>0C=YJ*-]-3\&&*4cc^/-"^FJ4p)OEAUubsNm!#KS
%^HAWgnIc5rq*;S6jBjIOSG5$d_7]m>A808SM`m6lm?T,T`S8/Br5ZSNS)=1"s4mXphu2TmJ,."^qrpm@r,;pjpL!si%mU$%5Q0Pj
%rU6BXoXB>A&-)Q_T7;1__a".\5Q/bIroL'XF8XM15Q'cDJ,YdaqU84ns85+]l2MsdTuR8Mqq^0.QiH]eJ+N[@"!\<d~>
%AI9_PrivateDataEnd
