%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: bg09.eps
%%Creator: Adobe Illustrator(R) 17.0
%%For: Krol
%%CreationDate: 7/31/2016
%%BoundingBox: 0 0 900 481
%%HiResBoundingBox: 0 0 900 480
%%CropBox: 0 0 900 480
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 17.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 17.0.0 x256 R agm 4.7700 ct 5.3328%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.5-c014 79.151739, 2013/04/03-12:12:15        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Web</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2016-07-31T22:48:29+04:00</xmp:CreateDate>
         <xmp:ModifyDate>2016-07-31T22:48:30+04:00</xmp:ModifyDate>
         <xmp:MetadataDate>2016-07-31T22:48:30+04:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>140</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAjAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8AT9PPU7eRp3p42tO9PG1p&#xA;3p42tO9PG1p3p42tO9PG1p3p42tO9PG1p3p42tO9PG1p3p42tO9PG1p3p42tO9PG1p3p42tO9PG1&#xA;p3p42tO9PG1p3p42tO9PG1p3p42tO9PG1p3p42tO9PG1p3p42tO9PG1p3p42tO9PG1p3p42tO9PG&#xA;1p3p42tIn08rtnTvTxtaXBE7qT9P9mC1XBYu8ZP+y/swWe9OzYEHeI/8F/Zg3712b/0f/fJ/4M/0&#xA;x9Xeu3c7/R/98n/gj/TH1d67dzREHaI/8F/Zjv3rs0Vi7If+C/sw2e9dlpRewI+n+zDaFvp4bWne&#xA;nja0708bWnenja0708bWnenja0708bWnenja0708bWnenja0708bWnenja0708bWnenja0708bWn&#xA;enja0708bWnenja0708bWnenja0708bWnenja09Cg/KPW5dJFyZUivyx/wBCkFAEBpX1BXfvSmc/&#xA;Lt3EMnDVx7/2OxHZ8zG+vczrQPIWg2mhw2l7YQz3UkYN3LIqu/qMPiCv1AXoOJzR6rtPLPKZRkRG&#xA;9vd7nPxaSAhRAvq82uvy48xNqd5b2Vo728EjiKSQhOUfI8CC3ENVfDOkh2vh4ImUtyPtdZLRz4iA&#xA;NmPz6XNBM8MzLHNGxWSNiQysNiCCMz45hIWNwXGMCDRWfUv+LY/+C/syXieRRwu+pf8AFsf/AAX9&#xA;mPieRXhd9S/4tj/4L+zHxPIrwu+pf8Wx/wDBf2Y+J5FeF31L/i2P/gv7MHieRXhb+qH/AH5F94/p&#xA;jx+RTwt/Vm/35F+H9MHH5Fab+rn+eH8P6Y8XvWvc36Dfzwfh/TBxe9Ne53ot/PB+H9Mb9617m/Sb&#xA;+aD/AD+jGx5r8m/Tb+aDBY81+TuD/wA8P347ea/Jvi/80H347eafk7i/80H347ea/J3F/wCaD78d&#xA;vNfk7i/80H347ea/J3F/5oPvx281+SaW/ljW7jR5dXiihaxhrykrvRftEDwHfMWWsxRyDGSeItow&#xA;zMeLaktlt7iJzHKIo5BSqMCpFRUbH2zJjKJFiy1EELCjnq0GHbzR8nem380GN+9fk16Tfzw/h/TD&#xA;Y81+TXon+aD8P6Y8XvWvc0bdv54fw/ph4veivc76sf8AfkP4f0x4vete5fbaZcXVxFbwGOSeZgka&#xA;ClSzGgHTIzzRiCTdBMYEmgjD5R10301gLYvd29DNDGOZUGlCeAIoa5V+fxcInfpPJn+XndVuGWf8&#xA;rP17xg/5FP8A81Zqv5Gxefzcz89Pyd/ys/XvGD/kU/8AzVj/ACNi8/mv56fk7/lZ+veMH/Ip/wDm&#xA;rH+RsXn81/PT8kHd+dZ7xi13ZWFw56vJa8m+8muXY+zhD6ZTH+c1y1JlzET8Etm1Wwl+1ptmOv2I&#xA;5U6/6rjMiOCY/jl8x+prOQHoELJJprH4bOJNqUU3H3/FIctAmP4j/sf1MCY933oT6ta/zt9x/plv&#xA;HJhQd9Wtf52+4/0x45LQd9Wtf52+4/0x45LQd9Wtf52+4/0x45LQd9Wtf52+4/0x45LQd9Wtf52+&#xA;4/0x45LQd9Wtf52+4/0x45LQd9Wtf52+4/0x45LQd9Wtf52+4/0x45LQd9Wtf52+4/0x45LQd9Wt&#xA;f52+4/0x45LQd9Wtf52+4/0x45LQd9Wtf52+4/0x45LQd9Wtf52+4/0x45LQbFvaggliQOxBp+Ax&#xA;4pLQTbTdXsNPmSeLTbSSaM1SSVbiSh8eJl4/hmJmwTyCjOVeXD+puhkETYA+39aewfmZqdvEIoLW&#xA;yiiBJEaQyKoJNTsHp1zBl2PCRsmZPvH6nIGukNgB8kBq/nH9Lpx1DT7KU1BEgjmSQECg+NZA3fpW&#xA;mX4Oz/CPolMfEfqa8mp4/qA+39bHZYrN35KPSH8qByP+G5HNjGUh5uMQFn1a1/nb7j/TDxyRQd9W&#xA;tf52+4/0x45LQd9Wtf52+4/0x45LQd9Wtf52+4/0x45LQd9Wtf52+4/0x45LQTHR9TGkzevapE1w&#xA;Psyyx+oy0/lrsp9xvmPqMPiipXXkabcc+A2OadQ/mDrUV3Ld8oWmmRI3Ywn7MZYr0p/Ocw5dlYzE&#xA;R3oeff8A2N41kwbQulaJe6nMY7dPgTeWZtkQeJP8Msz6mOMWWGPEZnZrUNGvrB6Tp8B+zKu6H6f6&#xA;4cWojk5LPFKPNCqtWFEDe2/8DlpK48cpyEYiyVzLx+1Co/4L/mrIg3yLbn0uXD9cTG3B0H+6UPz5&#xA;f81Ya82i2/UT/fEf/Df81YK8yt+S4TRgf7zx/j/XBwnvK35O9eP/AJZ4/wAf648J7ym/JcLmIf8A&#xA;HtGfox4D3leLyb+sxf8ALNH92DgPeV4vJ31mL/lmj+7HgPeV4vJsXcIH+8sf3D+mDwz3leIdzf1y&#xA;D/llj+4f0x8M95TxDud9cg/5ZY/uH9MfDPeV4h3O+uQf8ssf3D+mPhnvK8Q7mjdwn/j1j/z+jHgP&#xA;eUcQ7ln1225hPQj5E0xMa6lz9P2dmzC4w27+SIp/y7RZXxjvLnj2e1J6R+f7GzBKwqLNCPEA0/DB&#xA;4sf5xYHsHUA1UPmpMjr1tY/x/rkxMfzi1y7E1Q/gB+I/WsYn/llT7m/gckCP5ziZOz9RDnjl8v1L&#xA;OQ/5Z0+5v+asnXm4Z26NEg/7oUfLn/zVj8UfBqg/3yv/AA39cPxVYVH8oH34UNcMNodwxtXcMbV3&#xA;DG1dwxtXcMbV3DG1esSQRWUC2dpAYLRPYjmfEk9c5QSMzxSNydzwiIoDZDOiOpR1DK2xUioI+Ryw&#xA;GuSCGJXVjZfpSSO1ThGuz0NRUdaV6eGbIZZGA4npeydFHBj8SvXP7vxu3eWELwngtCorTxyOPKQX&#xA;MywjmiYZN4n7PNSfy6J7VbnT3Mop+8henMEdaEUBy+Oso1PZ4rW9mywTMef6UpeCRGKujKw2KkEE&#xA;ZmCQLriGvSbwOHiRTXDG1p3DG1p3DG1pWXTrx1hZIHYXBIg4qTzK9QtOtMgcsRe425suA93NNbby&#xA;VrtxZG6SDiwai28nwSEUryAagpv45iz7RxRlwk/Ho2x0syLpPdU8g2cGjNJbGWS/iUMafEHI+0Ao&#xA;H3Zg4e1JSyVKuEuRk0gEdubELnSdQtYY5ri2kiil2R3UgE9e+beGeEiQCCQ4csZAshDAMOhOWMF/&#xA;qTDYO33nBQTaXXUbLKWO/Mk1+eB7nsjVRy4QB9UBR/HmjbK/VgI5TRhsrHvmPOHUO6hPvTiG/lRQ&#xA;pAZRsOxzHOMFEsIKqdRiYUeKvtscj4Z72HgEcioh7R5qsvpoBuBU1P0dMlUgGypAbblDXt3Hbh2j&#xA;Yqv+61qdzlmOJLj6jSY8sf3kQT9vzQMGp3MnwmQh/wBeZQhHueN7S7Lng9UTcPtHvV/rV1/vw4eC&#xA;Pc6fiLhNdt0kY/TgIiG/Bps2U1CJk273yryDsx/lDb5Dih3O3x+z2plvIiPx/V+tCHU5SaOzinv0&#xA;ywCPcmfs/lA2kCVZZpWAYSMQehqcNB0WTHKEjGWxDRMjbliT7k4dmtrjhtXcMbWk/wDLnk+71Vln&#xA;mrBYg7yU+J/ZAf15gavXxxbDeX45uRh0xnueTLnkkkarsWPic1IAHJz7Q19crbWks5NOC/D/AKx2&#xA;X8Tk4R4iA3abF4mSMe8sV0+RfVfmfibep7+OZ+QbPaZo7CkbJPGg3YVPRe5yoRJaIwJQsN8+lXXJ&#xA;avDQetGOtO5HuOuWGHiDzYazSjUY/wCkOTIpre01C3WRG+F1DRzIaGh/z75iRnKBeNy4tyDsQx69&#xA;0nWLZiVcyxdpFIH3g9M2GPPjl5Fw545BCGDVD3b/AIIf1y7ixtdSd6GqeLf8EP648UFqThDqgIIL&#xA;VHiyn9Zx4sa1JMk1vzSvpASLxhNY0EcIANCuwCjsxzGOmwG9ufmW3xcn4pX/AMTebv8Afi/8BHkP&#xA;yen7vvZePkd/ibzd/vxf+Ajx/J6fu+9fHyLJPMPmmVCkpjdD1Vo4iPuIwjSYBuL+ZQc2QoKSfUpK&#xA;87S2qepEMKn8AMuEYD+KXzLAmR6D5BDyW944INtGte6hV/UcsE4jqWBB7kO+lXLrxaKo+Y/rk/Gj&#xA;3tuny5MUuKGxQN5oGpW1u900J+qxgs8lR8Kjck79B3OR/MQurew0XakMoqXpl9nwQkN7cRbK1VH7&#xA;LbjLDAF2wmQiF1Z/2owfkaf1yHhM/FafVZiKKoX364jEFOQoOSR5G5OxZvE5YBTWTbowxdQn2iRx&#xA;+eG2MoCQMTuCyKyslmejnYCrZjZc5A2dNpewseEcWT1y7ug/Wmq29tEv2VAHdv7cxDIl2oJ5Dl5I&#xA;C9e3ZwIgNvtEbA5bAHq5eISA3Y9qDxvckp2ADHxIzMxjZhM7ozSrW5mt2aNaqGIrUDsD3wymBzeO&#xA;7fh++BH839JRwsb8dFI+TD+uQ8SDo+Eo7TPL2t6hMEjDJGD8czN8K/cdz7ZTm1eLGN+fc2QwzkWd&#xA;6Xomm6Pb/E3qzMKSTSbsfEKOw9s0WbUzzHuHc7DHijAKs2oxmMLAxjoKAcRSn8MjHCb33ZGXcluZ&#xA;LWkHnC59Kxt4wf72dA3+qtSfxpmVpI3Inydt2NC819wSHMx61aWVSoJoWNF9zQn9QwKuwqv8ua4d&#xA;PvzYTGtnK9EJ/wB1sx2PyPf78jqMHHHiHN0XaeiEwZR+ofazrNW8ygrnTY5KtF8D+HY5dDMRza5Y&#xA;75JJeXAs1ka5jkRYlLu3Go4qKk1HXMyI4hsQ0iJJqt2hdxkAhHIO4IXamHgPeGNu+tJ/vuT/AIHH&#xA;g8wjid9aT/fcn/A48HmF4la39S4bjFDIfEkUA+knIzqPMhlGzyTSDSoxvKeR/lGwzFlnPRuGLvXy&#xA;6XA+6VQ/eMEcxHNJxhCjSpvU4kgJ/P8A2ZZ44ph4RRsFhbxb05t/M2+UyyktggAgtU1+0s7j6mU9&#xA;Wdl5FDstD2JNfuyePTmQvo7XRdnSzi74YsV0/RrNYpbaKJTa8+VukhJMCn/dUbLxYxj9lXJ49BQU&#xA;GZMbx8iXfY9GMI+qR+Vfcrf4Ytf9+NXLPzR7m7xB3IW50GOGlXah6EEf0yyOe22HDJKp4ooZZELM&#xA;wUVXiASTSoG5FMu4iRYDDJY5bpndaKIPL9jqER9WWQA3ckZJRHI+ytQporVFSPu6Zj4s0jMxls67&#xA;TauUsphP0kcghYdVkUAOvIj9oGhy44g7YZO9e2rg9IyT7nAMSfE8kNNqE8oK14Key/1yccYDAzJU&#xA;7e2muJOESlj3oOg8TkiQHF1GphhjxSLK7IRW1ukEcchp1PHck9TmJMEm7DxOp1JzZDM9U7s9OLgS&#xA;TgoD0jPX6fDMPJmrYIjj705tp/q0dIl+IbLXoo9hmHOPEd28GlkkjyNydizHuckAByW1uFDsVYn5&#xA;+LCGyI6BnP00WmZ+g5l3fY3OXwSqGVZYlde/X2OZEhRenBsJNqOrrIlq9vRvTureO6QmjxGW4EG4&#xA;oQaMGU/fWmUyk488t1XeL+dJtcXlvADzccxSiVFfiNF29yMuiLb5SAS2ztpr+/jgQVkmfr4A7k/I&#xA;DL5yEY33OHmyiETI9Hq2aF4p2Kpb5kRW8v6kGANLWcj5+m2TxGpBswj1x94Yt+X16+q+VbeUHnNa&#xA;E20wPX92BxPvVCPprmZmPDKiz7R0/BlNcjuyKK1mkPwrt3J2GVymA4AiSjYdOiXeT4z4dBlMsxPJ&#xA;sGMIsAAUAoB0AypsbxV2KuxV2Kse80aRY3qiUzCG9jFEPXkOoDAb/TmZpcko7VcXP0evODY7xYqZ&#xA;dUsQWkUmNRUyV2AH+UP45nmMZPQ4e0cWTkR7iqDzBLTfkPprkfy4cu49yGudYnkBI+HxZjU0yccQ&#xA;CeOuWyDhX17Vb5GElo9xFaeujKwM08qwqoofibnIKgZDJqYRHNwc2tx4+Zs9weoadpsFlp8dkv7y&#xA;NQQ5YfaLbtUe9c1WTIZS4nmM+c5JmfIsJ84RaDYa3pGmwBorrUnkknWJXlEdtDGxaT00DNVpOCL2&#xA;3Phl0NbOOx3c7B2nliN/UutvKVzdzA25lS06m4uoTAx9kiY+r8+ar7Vy8a/yckdsDrH7f2JmvkSG&#xA;L4nnaenVQAn8W/Xg/PX0px83bGQj0AD7UwstMWMelbxCNB9ran3nqTkJ5epLpsmSeWVyNlD67qo0&#xA;r07Wzo1/KOTSMKiNOnKniT0yOOJnufpdv2X2YMtzl9A+0sYuNX16FvrEeoTMw3ZWaq/8D9n8MyRj&#xA;gdqeljocBHCYR/HnzZZ5S8zjWYJIpwEvranqqOjqejqP15h6jBwGxyLzPaWg/Ly2+g8v1MgzHdY7&#xA;FUnvPMtnDVYAZ38Rsv35l49HI89mByBi2vahd6hEGlI4xnkqKKAV2PvmwxYYw5Ox7I1HDmo/xCvi&#xA;ksNxNCSY2pXqDuPuy2UQXrBIhjHmuC6trO+1lLt4pi0E13DGqLDILeRStUYO3JQv2g1e3TbMLNhE&#xA;YmVuHqAQDO+6+7ZHxW1zrd+LqeKVLagWO2k2eYqeSSSJ+wEJPFT8zTbLxG9ztFnI8XqltEd/6Xpn&#xA;lLTrCwi5yOv11xxodgi/yr2zD1cpS2A9Lz2u1/inhj9A+1kzMqqWYgKNyT0zBAdelV5rQFUttz3k&#xA;PT6BmVj0/WTAySTWNWuo9B1MM3qqbWeob/jG3fL/AAI2OjbpjeSI/pD72D/kxrn1bzBcaTIaR6hF&#xA;zi/4yw1NP+ALfdktZC433O77UxXES7ntOax0TsVU5p4YU5yusa+LGmGMSdgpKhbarp9y5SKYFh+y&#xA;aqT8q0rlk8E47kIEgUUSAKnYeOVJQVxq9pFUKfVfwXp9+XQwSPkxMgllxq13LUKfSTwXr9+ZUMER&#xA;5sTIpNa6ta3UcksTckWR4ww35FDxJFO1a5kCBTlgYGjzpz3jHZBT3O5ywY+9q4klutBgnt5LaC6l&#xA;sYJQQ0CBHg37qjgtFTqPSZd9+uVTwdxbYZyFO1s/OmiwolpNB5gtUACi4b6rdinYSqJI5P8AZAH3&#xA;OU1OO31M5ZBLmSwLU9J81aPr9vr3lvy5dWbxT/WrrSpGiubFpVVgJESGTqA7U+Hb9mmYWTCbsAts&#xA;ZgiiXouk/n1oOp6PCbOwubjzNM3ox+X4VZ3aUCvL1acBF4sdwP2cp4kHGfgybyX5Z1Ozlu9e8wSJ&#xA;ceZdVC/WfT/uraBP7u1h6/Alasf2m3364QGMj0Cf3mpW9tVSecn8g/j4ZdjwmXuYGVOstRiuhT7E&#xA;o6of4Y5MRj7lErRMkkcaF5GCqOpO2VgE7BLy3WdXE2u3twv7xC/ppvT4Y/hH6s2uPFUQHuezsQ/L&#xA;wruv5pZNeyTOylqbCqDwNf6ZYAA58YgI7yXdNB5wtkU0WdHikA7jgWH/AAyjIamN4i6rtmAlgPlR&#xA;es5qHjFruiKWdgqjqxNAMQLV59nQOK0xXo1Pi2APfFlGxuOiEk05CaoePt2xt6DTdtgCsgN94/Ux&#xA;r8xLX6v5K1SUv0jVR/s5FX+OY2rJ8MtmbtbHkHBEGyi9S1Ca0WCK2cozwAyt3q3evWu2bbR4RKNy&#xA;dFrdflzGpHbuZRpOrLcWEU01EBX4m7Djsa1+WYOow8MiA0QNpXpHn+PUNWn056padbBqn4+P2qg7&#xA;fF1XKPC69Xaans+WPEJdeqcy3Uj7D4V9uuWxgA6olLNaZhouoUJFbaav/Is5Ihv0n97D+sPveTWe&#xA;oPp2q2V+la28ocgdwCKj6RtiBYIet1OPjiY976DsPMlFXk3qxMAVLdaHwbMHJpL5PICdbFUu/ME3&#xA;H4KRg9KbsfpODHpR1UzSK4uZrh+crFj2qa5mwgIjZqJtTDFTyBoR3ydIV4PMVvcr6AuPVdP91q1R&#xA;8xvlctIY71TITba9c/ZAH44jGF4km8zarLZ6Nczhz6hXhF/rP8NR8q1yVAOTosPiZRE8kq8gXKy6&#xA;K8QNWgmZWB7BgGH68k5Pa8azX3hkuLq3YqvSR0NVNPbAQCm0VFeIdn+E+PbKjj7kgvGfzHgufJPn&#xA;3TvNmiUiF0zTFB9gypRZ0NP2ZUff5nNTqsfDKx1c3DLijRe52nmxNY0q11CyPpWt3CkysT8QDrWh&#xA;PanQ5kYcAoHm48yQaQEt5v8Au9/8rxzPjj72ol0d+6sGpQjcMpoRicQK8S6/1Se5A5ueIG9dv1bY&#xA;MWER5LKVsJ1Mm11OYP8A3Ux9RG/1uv45aRb3fY2oE9PH+jt+PgkUOsrHeXbXFVCogUFWAIViOa1H&#xA;RuXSu2YcMh4jxbfjm5wy0TbIPKE0p1qK/AI9FS/xDoXUqAQfnmVOIlCu91PbeoEcFdZH9r00+YWa&#xA;DkiKG7vXb7s1/wCU3eQ40ivr+4u5KyuWUfZXt92Z2PEIDZrMrQpZRQEgV6ZaxYrqt9NNKt4j8I0c&#xA;raqOp4/af78mO56fS6QQx0RvLmir7Xpxa2k8BALlvVQio5JTb5b5k6bDGd287q8RxT4WKfmf5lW7&#xA;8tR6bDGRNfzRRsK/ytzpTuKqMwO0tOYQq95SoLpjcr7gmuqzW814Wt2LRBEVSQQfhUDvTN5psZhA&#xA;AuLI2Uu1PVbyKxFskzLG4MfAGg4kktUe9cx9bwiPLcu17HwceWzyj9/RJjeSi4jni/dvCVMdOxU1&#xA;Gay3rMgEhR5F6vpl6t9YQXa7CZAxHgejD6Dknic+I45mPcp63BcT6PewW45TywukaggVLKRSpxTp&#xA;pCOSJPIF5PL5d1xb+3sZoON1chzBG7oKiIBnNa0FAR1wGcQRHrLl8HpfzuIgni2D03Tr1NN02ztN&#xA;SlCXccSo4Wr7L8IJIB7DLoYZTFgPMamcTkJjyJTSO6t5ITMkqtEBUuCKCnj4ZAwINEbtVpXb6/bf&#xA;Wiks4ZCAqsEKpyqamp36UzKnpZcNgMBJf5kuWi07ihoZmCEj+WhJ/VkdHC5+5MzsxrT3ZL63ZTQi&#xA;RfxNDmyyi4H3NY5s6zRtzEvzHuhFplrGa8ZJqkj/ACVP/NWNW7jsYDxCfJj3kHWVtdbe2c0gvqIK&#xA;9pFrw++pGGtnM7Uw8cOIc4/c9OwPNuxVhnnDXxJLJpcMvpxxj/SXXqzf77HsO+AvQ9k6EV4kvh+t&#xA;X8p+aVmtmttQkpLAAUmbfkvSh/yh+OSxwlLYBxO1dJHEeOOwl0SP85lN/oGmiyU3Lm6JRYgXanpt&#xA;y2FT4VzC1+GZAiATK3B00gCbOyF8oajqa+TrTSrhZIFtZJVMbqUJDPzFQd6Dnmy7HwGMLkKkDW7V&#xA;qpAy25My8q3Ln1rZjVQA6Dw7H+GZWugNpNMCyDNezYdrl9LcX0icj6UTFESu3w7E/Sc3GmxiMQep&#xA;apHdB26mWaKBieLsFFN6cjSoGOoxCUSeoc7s/tCemnY3ieYWzaHBJ5it4JLyBlWCSQfHtUSIBVa7&#xA;neorminiJyiwfpJ+0PSS7cwkcdS22rbn8/x3Mxt4tP0q2CmRUDbs7HdjmRGEpcg87rdbLPPil8B3&#xA;Kseq2DoSlwpXbkK06mgqDhOCY5hw+IInK0vMdU/Nry7eLGsckkQQkn4GJqQRsaDsTl+PLiiD6ufk&#xA;W3HGUZAkcilrfmF5dZUU3D8UBCj037knw98j4mL+d9hdz/KZ/mfavX8wPLTW7RGZ68gyn03oNiG7&#xA;d9stw6nFA/V9hdfrspz0RGq80k1LzB5evdYsryW9YW9lV0t/Rckud+XL5gdu2VZ8uLJljMy9MOlH&#xA;m40IyjEitymv+PfLX+/3/wCRb/0zO/lDF3/Y0+BJCXvnDy5clKXTrxr/ALqc9fozG1GoxZK9VV5F&#xA;2fZ+olpxK43ddUN/iTy7/wAtjf8AIl8xv3X877C7H+Vz/M+1lOhfmr5Y07TYrItJKY+R58WAPJi2&#xA;w4nxw3i/nfYXT6ucsuQzqrV7783NAnEfou8RRuQbg5NR0psPpyzHlwxu5X8HGOKfclN9+Ynly7u4&#xA;bqaZzcQFvScRsCFcEcdhuKMRlgzaawf5vLY91FRDIAR3q1/+ZHla7aN/WlWVV4ySMjHl3rQLtlmL&#xA;WYo2L29xYnDIqCeffLwR0S8YK4AdRHJQ0NRX4ctOuw9/2FHgTa/xv5b/AOWo/wDIuT/mnH+UMPf9&#xA;hR4E+5c/nzy+/wBu8dunVJT02HVcA12Ecj9hT4E1v+N/Lf8Ay1H/AJFyf804f5Qw9/2FHgT7lZ/z&#xA;C0Vwga/ciMBUHCQAAdKUXIjWYB15+RT4M0zH5v8AlQwxxXKNcPGAC7IxqQKV3XvmFKWInaX2FtjH&#xA;IOX3pfpP5m+WdP1TU7lHY2t88csNuI2UxMqBHoeO4egPTMbHjhGcjx2JdKOzdllKcYgjceabj85/&#xA;K56LJ/wLf805fxYv532Fo8OXc3/yuXyx/LJ9zf8ANOPFi/nfYV8OXcwy48y6BNPJK16xMjM5Jiet&#xA;WNcjeL+d9hd7DtUxiBwcvNEWPnHyzBGUN0eRNa+lIP4HMzT6nDjjV/YXV6/LPPMSqgB3or/G/lul&#xA;PrRoP+K5P+acv/P4e/7C4XgT7nf438t/8tR/5Fyf804/yhh7/sKPAn3Imx/Mfy/ZO0kVyxc0H92/&#xA;Eiu4NV/VlWXV4ZiifsLIYZhqH81NKhaqXklACqqY3IALcthT2wS1GnPP7l8Gajc+f/LM1xJMkzqs&#xA;jFgpRzSprTpk4a/EAAT9iDgkp/458uf7/f8A5Fv/AEyf8oYu/wCxfAkhv8XeXv0j9bN03H0fSCek&#xA;/XlyJrT5Zj/msXi+Jxfw1y87bPDlwcNdbRDefvLpoGuJDxFBWN9h4dMyBr8Pf9jX4Emh598tg/37&#xA;/wDIt/6Y/wAoYu/7F8CSa2P5uaHagI07yxjoGR67kFt6fdmLlzYJb3R9zIYph4zwbwzUOa4I5NAD&#xA;jaqoUgUpgVZINq4qp4VdirsVXIPiGKquBVjrUV8MVU8KrkNGxVVwK7FXYq0TQVxVRwq7FVVBRfng&#xA;VdirsVUWFGOFV6NXY9cCr8VdiqieuFW0ahoemKquBXYqtZC3Qb4qp8W8DhVvg3hiqrkUKkR3I8cS&#xA;pVMCGiARQ4qhZqqtQBt1BxkabsURI0VD1vi3UU8Mh4hcj8sK80RwQioy23DK+OEUJrgJRa/0ffG1&#xA;tr0m8Rja2ovEwbbDaVvBvDCqqoYitMCu4t4HFXUOKrJDtTFVPCrsVVsCt4q6h8MVWSI2xocVaWNy&#xA;Rtjaq/pNgtFu9E9zja2pGIVO+G1cET54ppVj4jYj5HAUKtBgQ7FVrpXcdcUqWFWsVbBoQcVV8CHY&#xA;qhL3YAfzZGZ2cnTDe0JlbnK6ThQqkdhvlgk4k8JJJCOUUUDJOG3irYRiKjenXBbOOMkWFiKrzcW7&#xA;7A4SaDLFEE0VksbRtxP0HEG1yQMTRbiO9MJayqYEOxVSlDByGFMIZyiRsVmLF2KqyUKjAhdirsVU&#xA;5W3phCQ6Ibk4lSqYELHagoOuKUNM5ACjv1yQb8Mb3UQSDUdcLkEWikNaHxyLgyFFEYGLqGle2Ka2&#xA;txNBXFCgTU1wpaxVRuJGWgU0r1OQmXJ0+MHcrre7oCsh2A2P8MAkyy6frF3188vs/D+OPGv5Xbnu&#xA;su5UkK8TWnXBIstPAxu1DIuS7FCt9cmBFKADtkuItP5eKORuSBvEVyYcGQo0qxPxb2OxwSFtmGfD&#xA;JUeFeYkGzA7+4yAl0c2WMWJBq6jLoKCrA7YYGmOeHENuaHkhESgk1cnYdsmJW42TFwjfmuBqK4XH&#xA;VEjDrsaMMiTTkY8InHbmqGJXVQ43XIXTlDGJRHF0QohLySAbKpP9gyzioOL4XFI10Uck0KkR2IxK&#xA;lUwIU53ZIyy9cIZ44gndCCaStSa5KnJOKKstygjrT4vDI01eCbU/rU1a1FPCmGmzwYrvXU7tscaa&#xA;zhPRSkYM1R0wt2ONBbhZq8Ui0FduNMiQ408ZtWS4jduIqD2rgphLEQLRUNGUofnlctt2/ABKJiWm&#xA;tyUYftfs48ajTGj3oV0KMVPUZYDbROJiaL7X/wCQEf8Afrf9y/NR+/8A6f2rspTf9C+1Hrf4Tr25&#xA;/o3+ORPjdeL7WcfJZ/1jt/36H/cswfvf6X2svV5u/wCsd/8Av0f+5Zj+9/pfavq82v8ArHb/AL9D&#xA;/uWY/vf6X2r6vN3/AFjt/wB+h/3LMf3v9L7V9Xm7/rHb/v0P+5Zj+9/pfavq82/+sd/+/R/7lmP7&#xA;3+l9q+rzRKf8qI4D0/8AC/Cnw8f0fSntTJDx/wCn9rWa6rv+QGf9+x/3L8f3/wDT+1HpUj/yoLv/&#xA;AIV/7l2R/e/0vtbfV5u/5AF/36n/AHLsf3v9L7V9Xm2v/Khf2f8AC30fo7CPH6cX2sJea8f8qLpt&#xA;/hin/bvw/v8A+n9rHZp/+VEU+P8AwvTtX9H/AMcB8brxfayj5LD/AMqC7/4V/wC5dkf3v9L7Wfq8&#xA;3H/lQm1f8K+1f0dkj439L7WIvou/5AR/363/AHL8l+//AKf2sNmx/wAqJ/Z/wv8AR+j8H7/+n9q7&#xA;Lv8AkBn/AH7H/cvx/f8A9P7V9K2T/lRHA+p/hbh+1y/R9Ke9cf3/APT+1RSG/wCsd/8Av0f+5Zj+&#xA;/wD6f2s93f8AWPH/AH6P/cswfv8A+l9q7u/6x4/79H/uWY/v/wCn9q7u/wCsd/8Av0f+5Zh/f/0/&#xA;tXd3/WO//fo/9yzH9/8A0/tXd3/WO/8A36P/AHLMf3/9P7V3d/1jv/36P/csx/f/ANP7V3XJ/wBC&#xA;98hw/wAJc6jjT9G1r2pg/f8A9P7VNq7/APKiafH/AIXp7/o+mJ8brxfaxjz2Wf8AIAv+/U/7l2R/&#xA;e/0vtbPV5rl/5UNT4f8AC1Pb9HZMeP04/tYS57v/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:0734f647-fac4-4442-b23d-2fd7726c4a3b</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:0734f647-fac4-4442-b23d-2fd7726c4a3b</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:9a336d3d-7e43-a24f-9766-439b643d676f</stRef:instanceID>
            <stRef:documentID>xmp.did:9a336d3d-7e43-a24f-9766-439b643d676f</stRef:documentID>
            <stRef:originalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9a336d3d-7e43-a24f-9766-439b643d676f</stEvt:instanceID>
                  <stEvt:when>2016-07-28T14:05:40+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0734f647-fac4-4442-b23d-2fd7726c4a3b</stEvt:instanceID>
                  <stEvt:when>2016-07-31T22:48:30+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>900.000000</stDim:w>
            <stDim:h>480.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -480 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 480 li
900 480 li
900 0 li
cp
clp
0 313.724 mo
0 313.724 li
0 0 li
900 0 li
0 0 li
0 73.5625 li
900 73.5625 li
900 169.245 li
832.69 169.989 778.607 170.979 778.607 170.979 cv
836.859 171.981 872.439 172.588 900 172.956 cv
900 187.064 li
873.503 187.064 li
867.095 190.519 li
769.915 190.519 li
770.435 187.257 770.465 183.958 769.95 180.663 cv
769.95 180.663 li
767.483 163.541 756.181 156.664 738.654 156.664 cv
735.363 156.664 731.856 156.906 728.143 157.369 cv
728.143 157.369 li
725.61 157.67 723.038 158.062 720.443 158.524 cv
720.487 158.54 720.529 158.555 720.573 158.571 cv
694.633 163.267 665.876 174.255 646.7 189.743 cv
647.281 188.063 647.582 186.321 647.582 184.531 cv
647.581 179.774 645.45 174.666 640.78 169.394 cv
640.78 169.394 li
634.624 161.213 627.125 155.146 618.887 150.473 cv
618.883 150.485 618.878 150.496 618.874 150.508 cv
615.507 148.562 612.01 146.861 608.403 145.367 cv
609.338 145.367 610.269 145.368 611.192 145.368 cv
703.304 145.368 820.05 142.824 820.05 142.824 cv
820.05 142.824 695.805 140.28 611.192 140.28 cv
605.326 140.28 599.269 140.292 593.076 140.315 cv
576.585 136.06 558.44 134.583 539.816 132.936 cv
525.979 132.353 511.861 131.67 499.143 131.67 cv
489.499 131.67 480.658 132.063 473.355 133.188 cv
473.351 133.175 473.348 133.162 473.344 133.149 cv
463.791 134.494 456.713 137.075 454.297 141.882 cv
423.499 142.391 402.338 142.824 402.338 142.824 cv
402.338 142.824 423.311 143.241 453.641 143.737 cv
453.558 144.179 453.517 144.653 453.516 145.158 cv
453.514 152.805 463.024 167.328 480.402 179.868 cv
484.99 183.315 490.148 186.619 495.727 189.713 cv
494.002 190.519 li
182.193 190.519 li
154.348 173.469 li
252.497 173.102 375.942 170.979 375.942 170.979 cv
375.942 170.979 242.215 168.747 146.175 168.465 cv
119.18 151.936 li
114.362 153.024 li
112.234 153.505 li
110.754 151.651 109.288 149.854 107.843 148.135 cv
100.834 139.974 94.6473 135.435 88.4858 135.435 cv
84.5432 135.435 80.6112 137.293 76.4793 141.249 cv
73.6832 143.9 70.7881 147.588 67.9154 152.161 cv
28.0086 129.351 li
21.2529 142.085 li
8.70851 153.981 li
.210661 164.761 li
18.825 166.619 li
12.837 169.108 li
8.51259 169.152 4.23009 169.198 0 169.245 cv
0 172.956 li
1.16806 172.972 2.32557 172.987 3.46594 173.002 cv
1.82926 173.682 li
0 174.207 li
0 186.972 li
.210661 187.064 li
0 187.064 li
0 190.519 li
0 214.505 li
0 222.591 li
0 308.605 li
0 313.724 li
377.33 116.68 mo
247.769 116.68 57.5174 120.862 57.5174 120.862 cv
57.5174 120.862 253.531 125.043 377.33 125.043 cv
518.379 125.043 697.148 120.862 697.148 120.862 cv
697.148 120.862 506.896 116.68 377.33 116.68 cv
787.323 222.591 mo
747.414 222.591 li
750.888 220.093 754.054 217.382 756.852 214.505 cv
799.469 214.505 li
787.323 222.591 li
352.398 222.591 mo
253.292 222.591 li
252.084 219.374 251.383 217.542 251.383 217.542 cv
251.291 222.591 li
234.573 222.591 li
221.367 214.505 li
369.564 214.505 li
352.398 222.591 li
435.795 217.715 mo
427.035 214.505 li
442.665 214.505 li
435.795 217.715 li
false sop
/0 
[/DeviceRGB] /CSA add_res
level3{
gsave
clp
[8.71041e-009 -194.01 194.01 8.71041e-009 450 272 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.635294 .752941 1 ]
/C1 [.458824 .635294 1 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.71041e-009 -194.01 194.01 8.71041e-009 450 272 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~U7n9STqS-PTV.sNT:_aJT:_^HSt;OESXl=BSXc4?S=H+=S"#n:R[T\6R[TY4R@0J2R$a8.R$X/+Q^=&)
QBmi&QBd`#Q'ISuPa%DsPEV2oPEV/mP*1ukOcbcgOcYZdOH>QbO,o?_O,f6\NfK*YNK&pWN/W^SN/W[Q
Mi3LNMMd:KMM[1HM2@(FLkpkCLPLY?LPLV=L5(G;KnY57KnP,4KS5#2K7ef/K7\],JqAT*JUrB'J:N0#
J:N-!It)rtIXZ`pIXQWmI=6NkI!g<hI!^3eH[C'bH?sm`H$O[\H$OXZG^+IWGB\7TGBS.QG'8%OF`hhL
~>
<~^q[Y!^V@Ou^V7Fr^:q=q^:q:o]tM+m]tM(k]Y(ni]Y(nh]=Y\e]=Y\d]"5Ja]"5Ja\[f8]\[f8]\@B&Y
\@B&Y\@8rV\$riU\$i`R[^NWQ[^NTO[C*EM[C*BK['[3I['[3HZa7!EZa7!DZEgdAZEgdAZ*CR=Z*CR=
Z*:I:Yct@9Yck76YHP.5YHP+3Y-+q1Y-+n/Xf\_-Xf\_,XK8M)XK8M(X/i;%X/i;%WiE)!WiE)!WMukr
WMukrWMlboW2QYnW2HPkVl-GjVl-DhVP^5fVP^2dV5:#bV5:#aUnjf^Unjf]USFTZUSFTZU8"BVU8"BV
~>
255 ]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
739.286 254.569 mo
710.533 237.809 li
724.394 235.406 737.224 229.918 747.414 222.591 cv
787.323 222.591 li
739.286 254.569 li
285.804 253.959 mo
258.78 237.413 li
256.518 231.22 254.606 226.088 253.292 222.591 cv
352.398 222.591 li
285.804 253.959 li
251.106 232.714 mo
234.573 222.591 li
251.291 222.591 li
251.106 232.714 li
level3{
gsave
clp
[8.71041e-009 -194.01 194.01 8.71041e-009 450 272 ]ct
/1 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~^=3+qe,R,0s1Qk\][Hhldf6r,s1?\Y]$UJgd/UZ's1$GU\Bk2bci:K"s0g5Q[a"i\c2Y2rs0U&N[*8QW
bl>#ns0KoKZHN9RbQ"ijs09`HYfd!LaoAQds0'QEY0$^GaT&B`s/j?AXN1@B`rE*Zs/X0>WlG(=`W)pV
s/<p:W5S_7`;caRs/*a7VSiG1_uHOLs.mO3UVd&)_Z-:Fs.I4.T>:Ju_#L"@s.$k(S%nul^]0b:s-UP#
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.71041e-009 -194.01 194.01 8.71041e-009 450 272 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~]tM+m]tD"j]Y(ni]Y(ni]Xtef]=PSb]"5Ja]"5Ja]",A^\[f8]\[]/Z\@8rV\$riU\$riU\$i`R[^ENN
[C*EM[C*EM[C*BK['[0GZa7!EZa7!EZa6sCZEgdAZEga?Z*CR=Z*CO;Yct@9Yct=7YHP+3Y-+q1Y-+q1
Y-+q0Xf\_,XK8M)XK8M)XK8M(X/i;%X/i;$WiE)!WiE(uWMukrWMukqW2QYmVl-GjVl-GjVl-GiVP^5e
V5:#bV5:#bUnjf^USFTZUSFTZU8"?TTV.sNT:_aJT:_aJSt;OFSXl=BSXl:@S"#n:R[T\6R@0J2R@0G0
~>
<~daHRldaHRlda?IidF$@hdF$@hdF$@hdEp7ed*U.dd*L%acd0q`cd0q`cd0q`cd'h]cHa_\cHXVYc-=MX
c-=JVbfn;Tbfn;Tbfn;Tbfn8RbKJ)PbKJ)PbKJ&Nb0%lLb0%lLb0%lLb0%iJaiVZHaiVWFaN2HDaN2HD
aN2HDaN2HCa2c6@a2c6?`l?$<`l?$;`Pog8`Pog8`Pog8`Pog7`5KU4`5KU4`5KU3_o'C0_o'C0_o'C0
_o'C0_SX1,_SX1,_83t(_83t(_83t(_83t(^qdb$^qdb$^V@Ou^V@Ou^:q=q^:q=q^:q=q^:q=q]tM+m
~>
255 ]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
799.469 214.505 mo
756.852 214.505 li
763.87 207.288 768.559 199.033 769.915 190.519 cv
867.095 190.519 li
824.54 213.457 li
838.703 195.986 li
821.866 199.594 li
799.469 214.505 li
442.665 214.505 mo
427.035 214.505 li
394.712 202.659 li
369.564 214.505 li
221.367 214.505 li
182.193 190.519 li
494.002 190.519 li
442.665 214.505 li
level3{
gsave
clp
[8.71041e-009 -194.01 194.01 8.71041e-009 450 272 ]ct
/2 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.745098 .827451 1 ]
/C1 [.623529 .745098 1 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.71041e-009 -194.01 194.01 8.71041e-009 450 272 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~]tM+m]tM+m]tD"j]Y(ni]Xtef]=Y\e]=PSb]"5Ja]"5G_\[f8]\[f5[\@B&Y\@B#W\$riU\$rfS[^NWQ
[^NWP[C*EM[C*EL['[3I['[3HZa7!EZa7!DZEgdAZEgdAZ*CR=Z*CR=Yct@9Yct@9YHP.5YHP.5Y-+q1
Y-+q1Y-"h.Xf\_-XfSV*XK8M)XK/D&X/i;%X/`2"WiE)!WiE%tWMukrWMuhpW2QYnW2QVlVl-GjVl-Dh
VP^5fVP^5eV5:#bV5:#aUnjf^Unjf]USFTZUSFTYU8"BVU8"BVTqS0RTqS0RTV.sNTV.sNT:_aJT:_aJ
~>
<~daHRldaHRldaHRlda?IidF$@hdF$@hdEp7ed*U.dd*U.dd*L%acd0q`cd0q`cd'h]cHa_\cHa_\cHXVY
c-=MXc-=MXc-=JVbfn;Tbfn;Tbfn8RbKJ)PbKJ)PbKJ&Nb0%lLb0%lLb0%iJaiVZHaiVZHaiVWFaN2HD
aN2HDaN2HCa2c6@a2c6@a2c6?`l?$<`l?$<`l?$;`Pog8`Pog8`Pog7`5KU4`5KU4`5KU3_o'C0_o'C0
_o'C0_SX1,_SX1,_SX1,_83t(_83t(_83t(^qdb$^qdb$^qdb$^V@Ou^V@Ou^V@Ou^:q=q^:q=q^:q=q
~>
255 ]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
900 73.5625 mo
900 73.5625 li
0 73.5625 li
0 0 li
900 0 li
900 73.5625 li
568.139 58.0486 mo
438.578 58.0486 248.326 62.2299 248.326 62.2299 cv
248.326 62.2299 444.34 66.4113 568.139 66.4113 cv
709.187 66.4113 887.957 62.2299 887.957 62.2299 cv
887.957 62.2299 697.705 58.0486 568.139 58.0486 cv
168.08 36.7814 mo
119.944 36.7814 58.9343 39.3251 58.9343 39.3251 cv
58.9343 39.3251 123.863 41.869 168.08 41.869 cv
212.296 41.869 277.224 39.3251 277.224 39.3251 cv
277.224 39.3251 210.33 36.7814 168.08 36.7814 cv
level3{
gsave
clp
[7.18851e-009 160.113 -160.113 7.18851e-009 450 -14 ]ct
/3 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.231373 .478431 .996078 ]
/C1 [.458824 .635294 1 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.18851e-009 160.113 -160.113 7.18851e-009 450 -14 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~4$,Mc4$5Vf4?Yhj4Zttm5!D1q5<h@t5X7S#5s[e'6:+"*6UO4.6psF26q'O577Ka97Ros=7n6*@84Z<D
8P)KG8kM]K91qoN9MA,R9he>V:/4PZ:/=Y]:Jaka:f("d;,L4h;GpFl;c?Uo<)cgs<E3%!<`W7%='&I)
='/R,=BSd0=^#!4>$>-7>?b?;>[1N>?!U`B?=$rF?XI/I?smAM@:<SQ@:E\T@UinX@q9+\A7T7_AS#Ic
AnGXfB4kjjBP;'mBk_9qC2.KuCMR^$CM[g'Ci+$+D/F0.DJjB2Df9T6E,]c9EH,u=EcQ2@F)uDDFEDVH
~>
<~H?sm`H?smaH[C*dH[L3gI!g<hI=6NlI=6QnIXZ`pIt)rtIt)ruJ:N0#J:W9&JUrB'JqAT+JqAW-K7ef/
K7no2KS5#4KnY57Knb>:L5(G;LPLY?LPL\ALkpkCLl$tFM2@(HMMd:KMMmCNMi3LON/W^SN/WaUNK&pW
NK0$ZNfK-\O,o?_O-#HbOH>QcOcbcgOcbfiP*1ukP*;)nPEV2pPa%DsPa.N!Q'IW"QBmi&QBml(Q^=&*
Q^F/-R$a8/R@0J2R@9S5R[T\6S"#n:S"#q<S=H+>S=Q4ASXl=CSt;OFStDXIT:_aJTV.sNTV/!PTqS0R
~>
254 ]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /3 /Gradient get_res exec grestore
}if
np
0 95.3599 mo
900 95.3599 li
900 81.1183 li
0 81.1183 li
0 95.3599 li
cp
level3{
gsave
clp
[7.18851e-009 160.113 -160.113 7.18851e-009 450 -14.0002 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.18851e-009 160.113 -160.113 7.18851e-009 450 -14.0002 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
0 110.84 mo
900 110.84 li
900 105.914 li
0 105.914 li
0 110.84 li
cp
level3{
gsave
clp
[7.1885e-009 160.112 -160.112 7.1885e-009 450 -14 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.1885e-009 160.112 -160.112 7.1885e-009 450 -14 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
611.192 145.368 mo
610.269 145.368 609.338 145.367 608.403 145.367 cv
603.489 143.332 598.369 141.681 593.076 140.315 cv
599.269 140.292 605.326 140.28 611.192 140.28 cv
695.805 140.28 820.05 142.824 820.05 142.824 cv
820.05 142.824 703.304 145.368 611.192 145.368 cv
453.641 143.737 mo
423.311 143.241 402.338 142.824 402.338 142.824 cv
402.338 142.824 423.499 142.391 454.297 141.882 cv
454.176 142.124 454.066 142.371 453.968 142.625 cv
453.968 142.625 li
453.825 142.968 453.716 143.339 453.641 143.737 cv
level3{
gsave
clp
[8.71041e-009 -194.01 194.01 8.71041e-009 450 272 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.71041e-009 -194.01 194.01 8.71041e-009 450 272 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
377.33 125.043 mo
253.531 125.043 57.5174 120.862 57.5174 120.862 cv
57.5174 120.862 247.769 116.68 377.33 116.68 cv
506.896 116.68 697.148 120.862 697.148 120.862 cv
697.148 120.862 518.379 125.043 377.33 125.043 cv
level3{
gsave
clp
[8.71041e-009 -194.01 194.01 8.71041e-009 450 272 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.71041e-009 -194.01 194.01 8.71041e-009 450 272 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
568.139 66.4113 mo
444.34 66.4113 248.326 62.2299 248.326 62.2299 cv
248.326 62.2299 438.578 58.0486 568.139 58.0486 cv
697.705 58.0486 887.957 62.2299 887.957 62.2299 cv
887.957 62.2299 709.187 66.4113 568.139 66.4113 cv
level3{
gsave
clp
[7.18851e-009 160.113 -160.113 7.18851e-009 450 -14 ]ct
/4 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.396078 .584314 .988235 ]
/C1 [.486274 .647059 .992157 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.18851e-009 160.113 -160.113 7.18851e-009 450 -14 ]ct
clp
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~A7]=`AS#FaAS#FaAnGXeAnGXeAnGXfB4kjiB4kjiB4kmkBP;'mBP;'mBPD0pBk_9qBk_9qC2.KuC2.Ku
C2.L!CMR^$CMR^$CMRa&Ci!p(Ci!p(Ci!s*D/F-,D/F-,D/O6/DJj?0DJj?0Df9Q4Df9Q4Df9Q5E,]c8
E,]c8E,]f:EH,u<EH,u<EH6)?EcQ2@EcQ2@F)uDDF)uDDF)uDEFEDVHFEDVHFEDVIF`hhLF`hhLF`hkN
G'8%PG'8%PG'A.SGB\7TGB\7TG^+IXG^+IXG^+IYH$O[\H$O[\H$O^^H?sm`H?sm`H@(!cH[C*dH[C*d
~>
<~Pa.N!Q'IW"Q'IW"Q'IW"Q'R`%QBmi&QBmi&QBmi&QC!r)Q^=&*Q^=&*Q^=&*Q^F/-R$a8.R$a8.R$a8.
R$jA1R@0J2R@0J2R@0J2R@9S5R[T\6R[T\6R[T\6R[]e9S"#n:S"#n:S"#n:S"-"=S=H+>S=H+>S=H+>
S=Q4ASXl=BSXl=BSXl=BSXuFESt;OFSt;OFSt;OFStDXIT:_aJT:_aJT:_aJT:hjMTV.sNTV.sNTV.sN
TV8'QTqS0RTqS0RTqS0RTq\9UU8"BVU8"BVU8"BVU8+KYUSFTZUSFTZUSFTZUSO]]Unjf^Unjf^Unjf^
~>
<~qu$Bir;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kj
r;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kj
r;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kj
r;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kj
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /4 /Gradient get_res exec grestore
}if
np
154.348 173.469 mo
146.175 168.465 li
242.215 168.747 375.942 170.979 375.942 170.979 cv
375.942 170.979 252.497 173.102 154.348 173.469 cv
3.46594 173.002 mo
2.32557 172.987 1.16806 172.972 0 172.956 cv
0 169.245 li
4.23009 169.198 8.51259 169.152 12.837 169.108 cv
3.46594 173.002 li
level3{
gsave
clp
[8.71041e-009 -194.01 194.01 8.71041e-009 450 272 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.71041e-009 -194.01 194.01 8.71041e-009 450 272 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
900 172.956 mo
872.439 172.588 836.859 171.981 778.607 170.979 cv
778.607 170.979 832.69 169.989 900 169.245 cv
900 172.956 li
level3{
gsave
clp
[8.71041e-009 -194.01 194.01 8.71041e-009 450 272 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.71041e-009 -194.01 194.01 8.71041e-009 450 272 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
168.08 41.869 mo
123.863 41.869 58.9343 39.3251 58.9343 39.3251 cv
58.9343 39.3251 119.944 36.7814 168.08 36.7814 cv
210.33 36.7814 277.224 39.3251 277.224 39.3251 cv
277.224 39.3251 212.296 41.869 168.08 41.869 cv
level3{
gsave
clp
[7.18851e-009 160.113 -160.113 7.18851e-009 450 -14 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.18851e-009 160.113 -160.113 7.18851e-009 450 -14 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
569.162 155.401 mo
435.795 217.715 li
394.712 202.659 li
264.344 264.068 li
286.511 313.965 li
811.577 331.726 li
802.58 291.465 li
569.162 155.401 li
.854902 .890196 1 rgb
f
119.18 151.936 mo
114.362 153.024 li
104.208 161.043 li
114.729 160.672 li
88.8308 174.426 li
91.2587 166.991 li
83.975 169.965 li
82.1541 160.3 li
28.0086 129.351 li
21.2529 142.085 li
8.70851 153.981 li
.210661 164.761 li
18.825 166.619 li
1.82926 173.682 li
0 174.207 li
0 186.972 li
.210661 187.064 li
0 187.064 li
0 326.56 li
413.273 332.009 li
119.18 151.936 li
f
1.82934 173.682 mo
18.825 166.619 li
.210755 164.761 li
8.70856 153.98 li
21.2529 142.085 li
28.0086 129.351 li
27.5252 129.075 li
0 150.708 li
0 174.207 li
1.82934 173.682 li
cp
1 1 1 rgb
f
0 186.972 mo
0 187.064 li
.210755 187.064 li
0 186.972 li
cp
f
114.362 153.024 mo
82.1541 160.3 li
83.975 169.965 li
91.2587 166.991 li
88.8308 174.426 li
114.729 160.672 li
104.208 161.043 li
114.362 153.024 li
f
873.503 187.064 mo
824.54 213.457 li
838.703 195.986 li
821.866 199.594 li
636.366 323.085 li
900 326.56 li
900 187.064 li
873.503 187.064 li
.854902 .890196 1 rgb
f
900 186.972 mo
900 174.207 li
882.406 179.258 li
900 186.972 li
cp
f
872.896 172.009 mo
865.612 169.221 li
821.866 199.594 li
838.703 195.986 li
824.54 213.457 li
873.503 187.064 li
900 187.064 li
900 186.972 li
882.406 179.258 li
900 174.207 li
900 150.708 li
872.896 172.009 li
cp
1 1 1 rgb
f
855.372 297.831 mo
784.258 261.043 li
735.231 290.42 li
704.668 266.169 li
650.268 299.338 li
547.064 226.818 li
404.793 286.962 li
372.843 273.466 li
307.576 298.078 li
229.886 256.805 li
182.322 286.952 li
77.6007 243.628 li
0 278.041 li
0 435.433 li
142.266 434.607 530.035 432.368 780.368 431.054 cv
780.379 417.341 817.183 415.782 844.387 416.501 cv
845.27 435.752 li
845.27 435.752 865.36 435.634 900 435.433 cv
900 278.041 li
855.372 297.831 li
.611765 .682353 1 rgb
f
168.856 305.879 mo
156.978 297.41 145.318 288.681 133.736 279.876 cv
137.415 277.051 140.847 274.087 144.006 271.1 cv
182.322 286.952 li
229.886 256.805 li
250.467 267.739 li
250.336 274.885 li
251.5 275.205 252.604 275.467 253.508 275.665 cv
254.172 275.811 254.728 275.897 255.117 275.973 cv
255.507 276.045 255.728 276.086 255.728 276.086 cv
255.728 276.086 255.506 276.117 255.114 276.172 cv
254.722 276.222 254.158 276.317 253.474 276.388 cv
252.585 276.481 251.486 276.576 250.304 276.634 cv
250.133 286.024 li
243.56 283.696 237.028 281.273 230.561 278.695 cv
233.027 277.447 235.505 276.211 238.007 275 cv
235.505 276.211 233.027 277.447 230.561 278.695 cv
230.561 278.695 li
215.705 286.212 201.461 294.359 187.257 302.68 cv
182.816 295.625 179.237 290.919 179.237 290.919 cv
179.237 290.919 174.317 296.997 168.856 305.879 cv
.690196 .745098 1 rgb
f
319.137 309.484 mo
305.101 304.314 290.895 299.698 276.74 295.035 cv
277.222 294.752 277.719 294.463 278.224 294.17 cv
278.224 294.17 li
278.224 294.17 li
276.788 289.559 275.261 284.824 273.693 280.077 cv
307.576 298.078 li
338.693 286.344 li
355.242 280.103 li
343.411 290.079 331.26 299.71 319.137 309.484 cv
f
654.565 319.018 mo
653.149 311.446 650.634 304.048 646.929 296.991 cv
650.268 299.338 li
704.668 266.169 li
735.231 290.42 li
761.857 274.465 li
754.246 282.95 746.557 291.363 738.247 299.083 cv
724.035 295.583 710.049 291.464 695.898 288.693 cv
696.6 288.127 697.309 287.572 698.007 287 cv
697.309 287.572 696.6 288.127 695.898 288.693 cv
695.898 288.693 li
682.539 299.468 668.57 309.322 654.565 319.018 cv
635.451 313.482 mo
601.49 295.684 567.073 278.981 533.891 258.966 cv
535.624 258.23 537.354 257.487 539.079 256.735 cv
546.19 261.65 554.888 265.108 565.051 265.108 cv
566.381 265.108 567.734 265.049 569.114 264.926 cv
579.685 271.198 593.046 274.443 606.995 275.093 cv
607.18 275.103 607.409 275.107 607.671 275.107 cv
608.217 275.107 608.908 275.089 609.659 275.071 cv
610.41 275.053 611.22 275.034 612.004 275.034 cv
613.824 275.034 615.503 275.133 615.966 275.558 cv
617.966 277.46 619.796 279.43 621.46 281.454 cv
624.897 285.634 627.622 290.048 629.752 294.565 cv
632.665 300.693 634.51 307.036 635.451 313.482 cv
407.991 299.685 mo
399.836 292.587 391.678 285.493 383.818 278.102 cv
404.793 286.962 li
508.359 243.18 li
515.156 246.344 523.255 248.993 531.957 250.894 cv
534.118 252.97 536.493 254.949 539.079 256.735 cv
537.354 257.487 535.624 258.23 533.891 258.966 cv
533.891 258.966 li
518.165 265.641 502.075 271.621 485.78 277.081 cv
486.05 271.806 486.712 268.488 486.674 268.488 cv
486.674 268.488 486.674 268.488 486.674 268.488 cv
484.488 271.84 482.471 275.278 480.624 278.79 cv
456.665 286.641 432.291 293.419 407.991 299.685 cv
607.533 270.23 mo
594.199 270.23 581.113 267.71 570.558 261.943 cv
566.426 259.691 562.822 257.036 559.784 254.128 cv
560.373 254.136 560.961 254.14 561.549 254.14 cv
561.976 254.14 562.401 254.138 562.827 254.133 cv
563.111 254.13 563.395 254.127 563.679 254.122 cv
563.78 254.122 563.886 254.122 563.987 254.122 cv
570.754 254.122 577.406 253.57 583.695 252.558 cv
608.832 270.222 li
608.4 270.227 607.966 270.23 607.533 270.23 cv
563.278 262.628 mo
554.535 262.629 546.925 260.009 540.432 256.144 cv
542.552 255.214 544.665 254.271 546.77 253.315 cv
549.892 253.658 553.039 253.899 556.185 254.028 cv
558.723 257.093 561.795 259.978 565.47 262.574 cv
564.732 262.61 564.001 262.628 563.278 262.628 cv
540.432 256.144 mo
537.935 254.657 535.603 252.986 533.437 251.209 cv
537.772 252.107 542.243 252.818 546.77 253.315 cv
544.665 254.271 542.552 255.214 540.432 256.144 cv
f
855.372 297.831 mo
836.297 287.963 li
836.297 287.963 li
855.372 297.831 li
.882353 .913725 1 rgb
f
861.855 313.273 mo
852.851 306.883 843.935 300.373 835.137 293.741 cv
835.609 291.863 835.997 289.935 836.297 287.963 cv
855.372 297.831 li
885.121 284.639 li
877.366 294.294 869.61 303.816 861.855 313.273 cv
.690196 .745098 1 rgb
f
265.333 308.788 mo
266.523 315.539 267.405 322.245 267.819 329.092 cv
267.917 331.265 267.917 333.426 267.869 335.583 cv
267.753 340.894 267.344 353.173 267.347 358.5 cv
269.664 358.536 271.98 358.571 274.296 358.607 cv
274.296 353.024 273.695 340.418 272.678 334.862 cv
271.047 325.941 268.345 317.148 265.333 308.788 cv
.360784 .156863 .113725 rgb
f
267.869 335.583 mo
267.889 334.707 267.9 333.83 267.9 332.952 cv
267.9 332.295 267.894 331.637 267.88 330.978 cv
269.241 330.876 270.556 330.747 271.818 330.599 cv
272.13 332.016 272.418 333.437 272.678 334.862 cv
271.076 335.12 269.472 335.372 267.869 335.583 cv
.32549 .129412 .105882 rgb
f
278.807 296.053 mo
276.99 296.599 275.268 297.116 273.928 297.567 cv
272.193 298.128 271.051 298.497 271.051 298.497 cv
271.051 298.497 272.073 297.867 273.625 296.91 cv
274.878 296.119 276.505 295.169 278.224 294.17 cv
274.933 283.601 271.163 272.376 267.508 261.87 cv
266.396 262.652 265.314 263.415 264.344 264.068 cv
263.904 264.365 263.485 264.641 263.1 264.882 cv
261.827 265.708 260.988 266.252 260.988 266.252 cv
260.988 266.252 261.637 265.492 262.622 264.338 cv
263.074 263.827 263.581 263.216 264.119 262.556 cv
263.134 256.032 262.009 249.529 260.834 243.066 cv
255.432 228.125 251.383 217.542 251.383 217.542 cv
250.336 274.885 li
251.5 275.205 252.604 275.467 253.508 275.665 cv
254.172 275.811 254.728 275.897 255.117 275.973 cv
255.507 276.045 255.728 276.086 255.728 276.086 cv
255.728 276.086 255.506 276.117 255.114 276.172 cv
254.722 276.222 254.158 276.317 253.474 276.388 cv
252.585 276.481 251.486 276.576 250.304 276.634 cv
249.649 312.568 li
249.325 330.285 li
254.846 331.205 260.309 331.369 265.293 331.136 cv
277.651 330.559 287.059 327.541 287.059 327.541 cv
286.452 324.101 285.541 320.074 284.404 315.637 cv
282.885 309.709 280.962 303.047 278.807 296.053 cv
.596078 .231373 .678431 rgb
f
264.119 262.556 mo
264.768 261.758 265.463 260.887 266.168 260.011 cv
266.328 259.808 266.487 259.604 266.647 259.4 cv
264.624 253.62 262.653 248.096 260.834 243.066 cv
262.009 249.529 263.134 256.032 264.119 262.556 cv
f
264.119 262.556 mo
264.119 262.556 li
263.134 256.032 262.009 249.529 260.834 243.066 cv
262.653 248.096 264.624 253.62 266.647 259.4 cv
266.487 259.604 266.328 259.808 266.168 260.011 cv
265.463 260.887 264.768 261.758 264.119 262.556 cv
.505882 .192157 .658823 rgb
f
287.059 327.541 mo
287.054 327.517 287.05 327.492 287.046 327.468 cv
287.05 327.492 287.054 327.516 287.059 327.541 cv
.564706 .623529 .984314 rgb
f
261.281 331.231 mo
257.44 331.231 253.398 330.964 249.325 330.285 cv
249.398 326.303 li
249.596 326.385 249.795 326.465 249.995 326.544 cv
250.006 326.556 250.017 326.567 250.028 326.579 cv
251.512 328.107 255.62 328.325 257.637 328.66 cv
258.679 328.833 259.729 328.964 260.782 329.052 cv
261.949 329.154 263.122 329.205 264.295 329.205 cv
265.732 329.205 267.171 329.129 268.6 328.975 cv
271.747 328.655 274.865 327.92 277.839 326.842 cv
277.927 326.81 278.084 326.75 278.295 326.668 cv
278.789 326.479 279.279 326.28 279.765 326.071 cv
282.27 325.025 286.211 323.243 286.059 322.553 cv
286.059 322.553 li
286.059 322.553 li
286.442 324.294 286.775 325.941 287.046 327.468 cv
287.05 327.492 287.054 327.517 287.059 327.541 cv
287.059 327.541 li
287.059 327.541 280.814 329.544 271.818 330.599 cv
270.556 330.747 269.241 330.876 267.88 330.978 cv
267.035 331.042 266.171 331.095 265.293 331.136 cv
263.986 331.197 262.647 331.231 261.281 331.231 cv
.54902 .211765 .666667 rgb
f
249.417 325.265 mo
249.349 324.784 249.385 324.267 249.444 323.747 cv
249.417 325.265 li
284.583 316.341 mo
284.577 316.317 284.571 316.294 284.565 316.271 cv
284.571 316.294 284.577 316.317 284.583 316.341 cv
284.561 316.251 mo
284.509 316.047 284.457 315.843 284.404 315.637 cv
284.457 315.842 284.509 316.047 284.561 316.251 cv
271.051 298.497 mo
271.051 298.497 271.051 298.497 271.051 298.497 cv
271.077 298.489 272.213 298.121 273.928 297.567 cv
275.08 297.179 276.513 296.743 278.047 296.282 cv
276.513 296.743 275.08 297.179 273.928 297.567 cv
272.193 298.128 271.051 298.497 271.051 298.497 cv
.521569 .568627 .972549 rgb
f
271.281 272.865 mo
270.026 269.152 268.76 265.469 267.508 261.87 cv
268.76 265.469 270.026 269.152 271.281 272.865 cv
264.344 264.068 mo
265.314 263.415 266.396 262.651 267.508 261.87 cv
266.396 262.652 265.314 263.415 264.344 264.068 cv
.72549 .741176 .972549 rgb
f
264.247 329.197 mo
263.091 329.197 261.934 329.15 260.782 329.052 cv
257.077 328.729 253.429 327.893 249.995 326.544 cv
249.651 326.173 249.483 325.736 249.417 325.265 cv
249.444 323.747 li
249.501 323.25 249.579 322.749 249.607 322.274 cv
249.794 319.064 249.579 315.862 249.653 312.654 cv
253.42 313.783 257.629 315.277 261.616 315.277 cv
261.671 315.277 261.726 315.276 261.781 315.276 cv
271.361 315.176 267.509 295.592 267.185 290.281 cv
266.65 281.505 265.627 272.764 264.344 264.068 cv
264.344 264.068 li
265.314 263.415 266.396 262.652 267.508 261.87 cv
267.508 261.87 li
267.508 261.87 li
268.76 265.469 270.026 269.152 271.281 272.865 cv
273.69 279.99 276.06 287.222 278.224 294.17 cv
277.719 294.463 277.222 294.752 276.74 295.035 cv
275.581 295.713 274.51 296.351 273.625 296.91 cv
273.619 296.913 273.613 296.917 273.607 296.921 cv
272.065 297.872 271.05 298.497 271.05 298.497 cv
271.05 298.497 271.05 298.497 271.051 298.497 cv
271.051 298.497 271.051 298.497 271.051 298.497 cv
271.051 298.497 272.193 298.128 273.928 297.567 cv
275.08 297.179 276.513 296.743 278.047 296.282 cv
278.298 296.206 278.551 296.13 278.807 296.053 cv
280.962 303.047 282.885 309.709 284.404 315.637 cv
284.404 315.637 li
284.457 315.843 284.509 316.047 284.561 316.251 cv
284.562 316.258 284.564 316.264 284.565 316.271 cv
284.571 316.294 284.577 316.317 284.583 316.341 cv
285.136 318.523 285.63 320.599 286.059 322.553 cv
284.09 323.944 281.977 325.116 279.765 326.071 cv
279.168 326.32 278.654 326.527 278.295 326.668 cv
275.192 327.85 271.921 328.62 268.6 328.975 cv
268.57 328.978 268.54 328.981 268.51 328.984 cv
267.094 329.125 265.671 329.197 264.247 329.197 cv
.505882 .192157 .658823 rgb
f
260.782 329.052 mo
259.729 328.964 258.679 328.833 257.637 328.66 cv
255.62 328.325 251.512 328.107 250.028 326.579 cv
250.017 326.567 250.006 326.556 249.995 326.544 cv
253.429 327.893 257.077 328.729 260.782 329.052 cv
268.6 328.975 mo
271.921 328.62 275.192 327.85 278.295 326.668 cv
278.084 326.75 277.927 326.81 277.839 326.842 cv
274.865 327.92 271.747 328.655 268.6 328.975 cv
279.765 326.071 mo
281.977 325.116 284.09 323.944 286.059 322.553 cv
286.059 322.553 li
286.211 323.243 282.27 325.025 279.765 326.071 cv
.466667 .176471 .647059 rgb
f
481.124 325.103 mo
482.113 329.288 483.096 333.38 483.88 337.522 cv
484.096 338.836 484.241 340.143 484.362 341.446 cv
484.584 344.658 485.577 352.074 486.464 355.25 cv
488.826 355.08 491.188 354.906 493.551 354.734 cv
492.557 351.527 490.371 344.208 488.995 340.924 cv
486.646 335.683 483.757 330.365 481.124 325.103 cv
.360784 .156863 .113725 rgb
f
484.362 341.446 mo
484.276 340.519 484.177 339.59 484.05 338.658 cv
484.051 338.658 484.049 338.658 484.05 338.658 cv
484.178 339.59 484.276 340.519 484.362 341.446 cv
484.362 341.446 li
484.362 341.446 li
.54902 .560784 .92549 rgb
f
484.362 341.446 mo
484.362 341.446 li
484.276 340.519 484.178 339.59 484.05 338.658 cv
485.359 338.585 486.622 338.499 487.829 338.403 cv
488.229 339.245 488.619 340.086 488.995 340.924 cv
487.454 341.106 485.91 341.287 484.362 341.446 cv
.32549 .129412 .105882 rgb
f
493.549 318.401 mo
491.923 318.572 490.376 318.742 489.166 318.906 cv
487.601 319.105 486.566 319.243 486.566 319.243 cv
486.566 319.243 487.503 318.941 488.917 318.496 cv
490.058 318.126 491.534 317.7 493.083 317.266 cv
490.479 310.888 488.338 303.861 487.125 297.152 cv
486.114 297.44 485.126 297.73 484.243 297.974 cv
483.841 298.084 483.459 298.187 483.111 298.275 cv
481.952 298.582 481.183 298.789 481.183 298.79 cv
481.183 298.79 481.833 298.424 482.816 297.881 cv
483.264 297.642 483.772 297.354 484.311 297.044 cv
484.617 293.031 485.068 289.02 485.746 285.05 cv
485.332 275.355 486.73 268.481 486.674 268.488 cv
479.725 279.145 474.474 290.676 471.014 302.669 cv
471.93 303.017 472.809 303.319 473.534 303.555 cv
474.065 303.728 474.517 303.85 474.83 303.946 cv
475.145 304.038 475.325 304.091 475.325 304.091 cv
475.325 304.091 475.134 304.083 474.798 304.069 cv
474.463 304.051 473.977 304.042 473.394 304.002 cv
472.636 303.95 471.701 303.876 470.702 303.768 cv
468.603 311.301 467.207 319.011 466.541 326.795 cv
466.212 330.633 466.06 334.489 466.089 338.35 cv
471.442 338.919 476.75 338.96 481.558 338.779 cv
493.501 338.294 502.278 336.594 502.269 336.61 cv
501.373 334.7 500.198 332.44 498.916 329.9 cv
497.201 326.507 495.3 322.609 493.549 318.401 cv
.596078 .231373 .678431 rgb
f
484.311 297.044 mo
484.963 296.67 485.662 296.261 486.367 295.858 cv
486.528 295.763 486.688 295.669 486.849 295.575 cv
486.235 291.876 485.886 288.308 485.746 285.05 cv
485.068 289.02 484.617 293.031 484.311 297.044 cv
f
484.311 297.044 mo
484.617 293.031 485.068 289.02 485.746 285.05 cv
485.886 288.308 486.235 291.876 486.849 295.575 cv
486.688 295.669 486.528 295.763 486.367 295.858 cv
485.662 296.261 484.963 296.67 484.311 297.044 cv
.505882 .192157 .658823 rgb
f
476.626 338.875 mo
475.881 338.875 475.13 338.868 474.372 338.853 cv
475.129 338.868 475.88 338.875 476.624 338.875 cv
478.312 338.875 479.963 338.839 481.558 338.779 cv
482.405 338.745 483.237 338.704 484.05 338.658 cv
484.05 338.658 li
483.237 338.704 482.405 338.745 481.558 338.779 cv
479.963 338.839 478.314 338.875 476.626 338.875 cv
487.829 338.403 mo
487.829 338.403 li
491.176 338.139 494.102 337.808 496.428 337.502 cv
494.102 337.808 491.176 338.139 487.829 338.403 cv
466.088 338.227 mo
466.087 338.187 466.087 338.148 466.087 338.109 cv
466.087 338.148 466.087 338.187 466.088 338.227 cv
466.087 338.074 mo
466.086 337.985 466.086 337.896 466.086 337.808 cv
466.086 337.896 466.086 337.985 466.087 338.074 cv
466.086 337.806 mo
466.086 337.752 466.085 337.697 466.085 337.643 cv
466.085 337.697 466.086 337.751 466.086 337.806 cv
466.085 337.595 mo
466.085 337.563 466.085 337.53 466.085 337.498 cv
466.085 337.53 466.085 337.563 466.085 337.595 cv
466.085 337.395 mo
466.085 337.385 466.085 337.376 466.085 337.366 cv
466.085 337.376 466.085 337.385 466.085 337.395 cv
502.269 336.61 mo
502.268 336.61 502.268 336.61 502.268 336.61 cv
502.268 336.61 li
502.268 336.61 502.268 336.61 502.269 336.61 cv
502.269 336.61 502.269 336.61 502.269 336.61 cv
.564706 .623529 .984314 rgb
f
487.829 338.403 mo
487.829 338.403 li
487.829 338.403 li
487.829 338.403 li
487.829 338.403 li
.333333 .145098 .113725 rgb
f
484.05 338.658 mo
484.05 338.658 li
485.359 338.585 486.622 338.498 487.829 338.403 cv
487.829 338.403 li
486.622 338.499 485.359 338.585 484.05 338.658 cv
.301961 .117647 .105882 rgb
f
476.624 338.875 mo
475.88 338.875 475.129 338.868 474.372 338.853 cv
471.667 338.8 468.883 338.647 466.089 338.35 cv
466.089 338.35 li
466.089 338.35 li
466.088 338.309 466.088 338.268 466.088 338.227 cv
466.087 338.187 466.087 338.148 466.087 338.109 cv
466.087 338.097 466.087 338.086 466.087 338.074 cv
466.086 337.985 466.086 337.896 466.086 337.808 cv
466.086 337.807 466.086 337.806 466.086 337.806 cv
466.086 337.751 466.085 337.697 466.085 337.643 cv
466.085 337.627 466.085 337.611 466.085 337.595 cv
466.085 337.563 466.085 337.53 466.085 337.498 cv
466.085 337.464 466.085 337.429 466.085 337.395 cv
466.085 337.385 466.085 337.376 466.085 337.366 cv
466.086 336.826 466.089 336.287 466.097 335.747 cv
466.286 335.801 466.478 335.854 466.669 335.906 cv
466.681 335.914 466.692 335.922 466.703 335.93 cv
468.142 336.933 472.105 337.066 474.056 337.275 cv
475.258 337.404 476.47 337.492 477.683 337.543 cv
478.563 337.582 479.444 337.601 480.325 337.601 cv
481.87 337.601 483.412 337.542 484.936 337.428 cv
487.841 337.217 490.687 336.786 493.367 336.192 cv
493.415 336.18 493.485 336.164 493.574 336.142 cv
494.118 336.018 494.655 335.886 495.184 335.747 cv
497.497 335.166 501.081 334.202 500.905 333.827 cv
501.404 334.82 501.866 335.752 502.269 336.61 cv
502.268 336.61 502.268 336.61 502.268 336.61 cv
502.268 336.61 li
502.268 336.61 li
502.231 336.61 500.059 337.025 496.428 337.502 cv
494.102 337.808 491.176 338.139 487.829 338.403 cv
487.829 338.403 li
486.622 338.498 485.359 338.585 484.05 338.658 cv
484.049 338.658 484.051 338.658 484.05 338.658 cv
483.237 338.704 482.405 338.745 481.558 338.779 cv
479.963 338.839 478.312 338.875 476.624 338.875 cv
.54902 .211765 .666667 rgb
f
502.269 336.61 mo
502.269 336.61 li
502.269 336.61 502.269 336.61 502.269 336.61 cv
f
466.108 335.069 mo
466.04 334.755 466.074 334.418 466.13 334.079 cv
466.122 334.409 466.114 334.739 466.108 335.069 cv
499.228 330.516 mo
499.125 330.313 499.021 330.107 498.916 329.9 cv
497.469 327.037 495.889 323.815 494.38 320.35 cv
495.889 323.815 497.469 327.037 498.916 329.899 cv
499.021 330.107 499.125 330.312 499.228 330.516 cv
486.566 319.243 mo
486.566 319.243 li
486.566 319.243 487.198 319.039 488.207 318.72 cv
487.239 319.027 486.618 319.227 486.569 319.242 cv
486.567 319.243 486.566 319.243 486.566 319.243 cv
489.072 318.918 mo
489.075 318.918 489.077 318.918 489.08 318.917 cv
489.077 318.918 489.075 318.918 489.072 318.918 cv
484.243 297.974 mo
484.243 297.974 li
484.288 297.961 484.334 297.948 484.38 297.936 cv
484.334 297.948 484.288 297.961 484.243 297.974 cv
484.243 297.974 484.243 297.974 484.243 297.974 cv
486.356 297.373 mo
486.61 297.3 486.866 297.226 487.125 297.152 cv
486.866 297.226 486.61 297.3 486.356 297.373 cv
.521569 .568627 .972549 rgb
f
480.254 337.596 mo
479.397 337.596 478.539 337.579 477.683 337.543 cv
473.907 337.376 470.164 336.847 466.669 335.906 cv
466.337 335.662 466.174 335.377 466.108 335.069 cv
466.114 334.739 466.122 334.409 466.13 334.079 cv
466.185 333.754 466.26 333.428 466.289 333.119 cv
466.482 331.029 466.348 328.936 466.541 326.852 cv
470.035 327.75 474.004 328.854 477.776 328.955 cv
477.857 328.957 477.936 328.958 478.015 328.958 cv
486.513 328.957 483.209 317.249 483.581 314.002 cv
483.73 308.671 483.863 303.322 484.243 297.974 cv
484.243 297.974 484.243 297.974 484.243 297.974 cv
484.288 297.961 484.334 297.948 484.38 297.936 cv
484.999 297.764 485.667 297.571 486.356 297.373 cv
486.61 297.3 486.866 297.226 487.125 297.152 cv
487.125 297.152 li
488.338 303.861 490.479 310.888 493.083 317.266 cv
491.534 317.7 490.058 318.126 488.917 318.496 cv
488.917 318.496 li
488.665 318.576 488.427 318.651 488.207 318.72 cv
487.198 319.039 486.566 319.243 486.566 319.243 cv
486.566 319.243 li
486.566 319.243 486.567 319.243 486.569 319.242 cv
486.567 319.243 486.566 319.243 486.566 319.243 cv
486.566 319.243 487.56 319.111 489.072 318.918 cv
489.075 318.918 489.077 318.918 489.08 318.917 cv
489.109 318.914 489.137 318.91 489.166 318.906 cv
490.376 318.742 491.923 318.572 493.549 318.401 cv
493.823 319.059 494.1 319.709 494.38 320.35 cv
495.889 323.815 497.469 327.037 498.916 329.9 cv
499.021 330.107 499.125 330.313 499.228 330.516 cv
499.819 331.684 500.382 332.788 500.903 333.823 cv
499.151 334.565 497.228 335.21 495.184 335.747 cv
494.484 335.923 493.901 336.064 493.574 336.142 cv
490.84 336.767 487.922 337.204 484.936 337.428 cv
484.804 337.437 484.671 337.446 484.539 337.455 cv
483.121 337.547 481.689 337.596 480.254 337.596 cv
500.905 333.827 mo
500.904 333.826 500.903 333.824 500.903 333.823 cv
500.903 333.824 500.904 333.826 500.905 333.827 cv
.505882 .192157 .658823 rgb
f
477.683 337.543 mo
476.47 337.492 475.258 337.404 474.056 337.275 cv
472.105 337.066 468.142 336.933 466.703 335.93 cv
466.692 335.922 466.681 335.914 466.669 335.906 cv
470.164 336.847 473.907 337.376 477.683 337.543 cv
484.936 337.428 mo
487.922 337.204 490.84 336.767 493.574 336.142 cv
493.485 336.164 493.415 336.18 493.367 336.192 cv
490.687 336.786 487.841 337.217 484.936 337.428 cv
495.184 335.747 mo
497.228 335.21 499.151 334.565 500.903 333.823 cv
500.903 333.823 li
500.903 333.823 li
500.903 333.824 500.904 333.826 500.905 333.827 cv
501.081 334.202 497.497 335.166 495.184 335.747 cv
.466667 .176471 .647059 rgb
f
341.335 319.629 mo
342.315 319.779 340.349 319.471 341.335 319.629 cv
cp
.380392 .466667 1 rgb
f
341.335 319.629 mo
337.606 319.034 338.67 324.424 341.911 325.033 cv
344.195 325.465 344.149 324.685 344.237 322.421 cv
344.311 320.52 343.06 319.894 341.335 319.629 cv
cp
f
351.007 316.25 mo
346.154 318.359 346.569 322.264 348.757 326.25 cv
352.456 323.435 352.535 320.993 351.211 316.889 cv
351.143 316.676 351.075 316.463 351.007 316.25 cv
cp
f
351.211 316.889 mo
351.337 317.28 351.086 316.496 351.211 316.889 cv
cp
f
125.757 285.25 mo
124.476 292.237 126.642 297.257 132.757 301 cv
132.643 299.446 132.428 297.91 132.173 296.373 cv
131.69 291.769 128.98 288.393 125.757 285.25 cv
f
132.173 296.373 mo
132.251 296.841 132.122 295.886 132.173 296.373 cv
cp
f
138.388 285.826 mo
134.041 290.003 134.568 295.548 136.507 300.75 cv
140.138 295.031 140.684 290.351 141.007 283.75 cv
140.067 284.32 139.126 285.009 138.388 285.826 cv
cp
f
138.388 285.826 mo
139.031 285.113 136.957 287.201 138.388 285.826 cv
cp
f
74.414 319.616 mo
73.0387 319.03 71.491 318.813 70.0072 318.75 cv
70.4011 323.716 72.6387 325.621 77.5072 326 cv
77.301 323.612 77.6134 323.56 78.9027 321.333 cv
80.4771 318.614 79.2266 316.275 77.7572 313.75 cv
76.0244 315.029 73.8294 317.244 74.414 319.616 cv
cp
f
17.0072 334.5 mo
17.5246 339.447 17.7706 344.607 19.1089 349.409 cv
17.7861 347.661 15.759 346.538 13.7572 345.75 cv
13.5007 351.258 15.1107 354.357 20.0072 357 cv
20.1579 355.831 20.2336 354.647 20.1974 353.468 cv
20.6073 354.88 20.8889 356.327 21.2572 357.75 cv
24.4686 351.072 25.2074 343.72 20.1045 337.725 cv
19.2353 336.522 18.1012 335.495 17.0072 334.5 cv
cp
f
20.1045 337.725 mo
21.789 339.704 19.3543 336.687 20.1045 337.725 cv
cp
f
31.8993 346.996 mo
33.0461 346.627 31.205 347.218 31.8993 346.996 cv
cp
f
31.8993 346.996 mo
31.1571 347.225 30.455 347.543 29.7931 347.95 cv
30.0013 345.334 29.4751 342.607 29.2572 340 cv
23.6201 344.337 23.1293 350.786 27.0072 356.5 cv
28.0669 353.766 28.4367 354.739 31.1193 353.558 cv
34.0727 352.259 34.1743 349.373 34.0072 346.5 cv
33.2932 346.608 32.5871 346.774 31.8993 346.996 cv
cp
f
255.985 353.478 mo
256.12 353.741 256.256 354.001 256.391 354.268 cv
256.135 353.76 256.021 353.54 255.985 353.478 cv
cp
f
255.985 353.478 mo
252.563 346.841 248.846 341.791 242.257 337.75 cv
245.587 346.816 249.602 353.982 258.507 358.5 cv
257.81 357.086 257.03 355.711 256.391 354.268 cv
256.634 354.818 256.424 354.407 256.224 353.997 cv
256.074 353.69 255.93 353.383 255.985 353.478 cv
f
256.391 354.268 mo
256.256 354.001 256.12 353.741 255.985 353.478 cv
255.856 353.256 256.817 355.229 256.391 354.268 cv
cp
f
260.822 348.107 mo
260.24 346.145 259.052 344.382 258.257 342.5 cv
253.637 347.072 256.365 351.212 258.507 356 cv
259.063 355.371 259.549 354.663 259.906 353.902 cv
260.209 355.144 260.698 356.353 261.257 357.5 cv
264.97 353.37 265.78 350.109 264.257 344.75 cv
262.96 345.679 261.726 346.783 260.822 348.107 cv
cp
f
286.952 343.269 mo
287.03 343.262 li
286.78 343.276 286.839 343.274 286.952 343.269 cv
cp
f
287.03 343.262 mo
287.133 343.261 li
287.232 343.256 287.267 343.253 287.03 343.262 cv
cp
f
287.03 343.262 mo
286.952 343.269 li
287.133 343.261 li
287.03 343.262 li
cp
f
286.952 343.269 mo
284.122 343.438 281.162 344.437 279.036 346.358 cv
279.528 342.984 279.671 339.569 280.507 336.25 cv
276.671 338.767 273.548 343.441 273.236 348.065 cv
270.997 342.816 266.923 338.555 262.757 334.75 cv
263.35 338.754 264.354 342.748 266.181 346.378 cv
266.717 347.444 267.35 348.376 268.104 349.298 cv
269.471 350.971 267.941 350.459 267.302 352.123 cv
266.657 353.632 267.487 355.628 267.257 357.25 cv
269.287 357.295 272.058 355.874 272.532 353.757 cv
274.366 355.27 275.105 357.104 276.757 358.75 cv
276.466 355.101 279.104 353.664 281.645 351.449 cv
284.245 349.182 285.874 345.933 288.007 343.25 cv
287.716 343.244 287.424 343.25 287.133 343.261 cv
286.952 343.269 li
f
238.757 348.75 mo
239.894 350.185 240.855 352.309 242.383 353.331 cv
243.825 354.462 246.267 354.695 248.007 355.25 cv
248.041 354.432 247.996 353.562 247.799 352.765 cv
247.003 348.298 242.575 346.95 238.757 348.75 cv
cp
f
247.799 352.765 mo
247.967 353.445 247.548 351.358 247.799 352.765 cv
cp
f
595.011 352.718 mo
593.822 348.632 592.194 344.97 589.021 342.034 cv
587.123 340.277 584.939 338.721 582.543 337.721 cv
582.221 337.584 576.72 336.147 577.007 337.75 cv
581.07 337.139 585.913 346.659 588.293 349.268 cv
585.108 350.964 585.205 353.783 585.757 357 cv
588.03 356.302 590.856 355.112 591.109 352.443 cv
592.797 354.404 594.517 356.337 596.507 358 cv
596.029 356.438 595.607 354.86 595.173 353.285 cv
595.237 353.519 595.095 353.019 595.011 352.718 cv
cp
f
595.076 352.931 mo
595.109 353.049 595.141 353.168 595.173 353.285 cv
595.157 353.224 595.126 353.112 595.076 352.931 cv
cp
f
595.011 352.718 mo
595.076 352.931 li
594.911 352.355 594.941 352.467 595.011 352.718 cv
cp
f
595.173 353.285 mo
595.141 353.168 595.109 353.049 595.076 352.931 cv
595.011 352.718 li
595.095 353.019 595.237 353.519 595.173 353.285 cv
cp
f
598.276 341.655 mo
597.882 340.92 597.461 340.199 597.007 339.5 cv
593.658 344.306 593.812 349.384 598.757 353 cv
599.626 348.825 600.415 346.005 598.485 342.061 cv
598.419 341.935 598.337 341.776 598.276 341.655 cv
cp
f
598.276 341.655 mo
598.394 341.869 li
598.122 341.351 598.163 341.435 598.276 341.655 cv
cp
f
598.394 341.869 mo
598.485 342.061 li
598.61 342.301 598.671 342.415 598.394 341.869 cv
cp
f
598.394 341.869 mo
598.276 341.655 li
598.337 341.776 598.419 341.935 598.485 342.061 cv
598.394 341.869 li
cp
f
601.757 354.25 mo
602.908 352.423 604.818 350.665 605.449 348.591 cv
606.197 346.447 605.747 343.651 605.257 341.5 cv
600.599 344.577 598.233 349.168 601.757 354.25 cv
cp
f
571.836 346.97 mo
571.931 347.086 li
571.846 346.966 571.824 346.942 571.836 346.97 cv
cp
f
571.836 346.97 mo
570.287 344.887 567.662 343.729 565.257 343 cv
566.007 348.79 568.214 351.868 573.257 354.75 cv
573.403 352.302 573.286 349.578 572.08 347.372 cv
571.982 347.22 571.857 347.017 571.836 346.97 cv
cp
f
571.931 347.086 mo
571.987 347.178 572.028 347.277 572.08 347.372 cv
572.22 347.589 572.301 347.699 571.931 347.086 cv
cp
f
571.931 347.086 mo
571.836 346.97 li
571.857 347.017 571.982 347.22 572.08 347.372 cv
572.028 347.277 571.987 347.178 571.931 347.086 cv
cp
f
580.161 341.462 mo
580.159 341.532 li
580.174 341.374 580.196 341.111 580.161 341.462 cv
cp
f
580.159 341.532 mo
580.149 341.643 580.142 341.703 580.161 341.462 cv
580.193 341.142 580.225 340.821 580.257 340.5 cv
573.053 344.329 575.416 351.895 578.007 357.75 cv
579.133 355.711 579.897 353.433 580.372 351.157 cv
581.05 347.914 579.918 344.784 580.159 341.532 cv
cp
f
730.116 345.436 mo
730.122 345.513 li
730.135 345.658 730.144 345.745 730.116 345.436 cv
cp
f
730.122 345.513 mo
730.116 345.436 li
730.077 345.011 730.104 345.317 730.122 345.513 cv
cp
f
730.116 345.436 mo
730.08 345.041 730.044 344.645 730.007 344.25 cv
728.786 345.773 727.686 347.407 726.871 349.186 cv
726.936 347.287 726.785 345.377 726.507 343.5 cv
724.257 345.353 722.021 347.733 721.144 350.573 cv
721.246 348.8 720.697 347.153 720.742 345.391 cv
720.798 343.156 720.174 340.863 719.507 338.75 cv
717.917 340.386 716.39 342.299 715.542 344.439 cv
715.198 343.375 714.845 342.315 714.507 341.25 cv
713.138 342.49 712.048 344.067 711.423 345.809 cv
709.958 342.158 707.144 339.272 704.007 337 cv
704.277 338.325 704.618 339.641 704.818 340.978 cv
705.136 342.451 705.346 343.945 705.659 345.419 cv
705.095 346.416 704.597 347.476 704.252 348.571 cv
703.038 352.432 705.192 355.875 708.757 357.5 cv
708.848 356.174 709.04 354.864 709.232 353.549 cv
710.102 354.985 711.028 356.387 712.007 357.75 cv
712.253 356.228 712.382 354.688 712.43 353.148 cv
712.841 353.949 713.284 354.734 713.757 355.5 cv
714.543 354.227 715.197 352.875 715.714 351.471 cv
715.982 354.158 716.637 356.822 717.007 359.5 cv
718.767 357.604 720.105 355.372 720.767 352.857 cv
720.643 354.812 720.652 356.795 720.757 358.75 cv
722.562 357.432 724.218 355.897 725.436 354.011 cv
724.887 358.13 726.836 362.369 729.007 365.75 cv
730.666 358.728 730.745 352.636 730.122 345.513 cv
730.104 345.317 730.077 345.011 730.116 345.436 cv
f
690.257 343.5 mo
691.737 346.499 693.728 349.564 696.216 351.823 cv
698.657 354.016 701.672 355.4 704.007 357.75 cv
704.068 356.449 703.894 355.153 703.545 353.899 cv
701.777 347.459 696.225 345.005 690.257 343.5 cv
cp
f
703.545 353.899 mo
703.85 354.992 702.947 351.718 703.545 353.899 cv
cp
f
868.233 333.832 mo
870.377 335.637 867.162 332.919 868.233 333.832 cv
cp
f
868.233 333.832 mo
866.992 332.773 865.663 331.827 864.257 331 cv
865.849 335.047 867.096 339.252 868.85 343.23 cv
870.59 347.184 872.836 350.802 874.007 355 cv
877.02 347.261 874.465 339.079 868.233 333.832 cv
cp
f
878.826 341.669 mo
878.192 340.714 877.626 339.716 877.007 338.75 cv
874.334 345.89 877.139 350.875 881.007 356.75 cv
882.692 351.272 881.884 346.922 879.121 342.174 cv
878.973 341.947 878.485 341.156 878.826 341.669 cv
cp
f
878.826 341.669 mo
878.929 341.839 879.023 342.006 879.121 342.174 cv
879.205 342.304 879.18 342.253 878.826 341.669 cv
cp
f
879.121 342.174 mo
879.023 342.006 878.929 341.839 878.826 341.669 cv
878.485 341.156 878.973 341.947 879.121 342.174 cv
cp
f
886.757 344 mo
882.147 347.636 881.938 351.862 884.757 356.75 cv
886.981 353.982 888.745 351.18 887.776 347.558 cv
887.489 346.355 887.167 345.168 886.757 344 cv
cp
f
887.776 347.558 mo
887.874 347.926 887.69 347.198 887.776 347.558 cv
cp
f
895.54 350.698 mo
895.567 350.806 li
895.447 350.246 895.484 350.428 895.54 350.698 cv
cp
f
895.567 350.806 mo
895.577 350.873 li
895.639 351.165 895.689 351.399 895.567 350.806 cv
cp
f
895.54 350.698 mo
895.381 349.961 895.204 349.228 895.007 348.5 cv
893.255 349.383 891.188 350.889 890.435 352.771 cv
889.709 354.597 890.617 356.644 890.007 358.5 cv
894.232 358.73 896.275 354.431 895.577 350.873 cv
895.54 350.698 li
f
895.567 350.806 mo
895.54 350.698 li
895.577 350.873 li
895.567 350.806 li
cp
f
867.735 347.496 mo
869.081 348.13 866.396 346.842 867.735 347.496 cv
cp
f
867.735 347.496 mo
866.934 347.105 866.105 346.772 865.257 346.5 cv
865.326 348.68 865.509 351.388 866.722 353.277 cv
867.825 355.132 870.144 356.348 871.757 357.75 cv
873.231 353.466 871.883 349.448 867.735 347.496 cv
cp
f
858.923 334.716 mo
842.93 328.557 833.831 333.956 822.661 341.461 cv
812.092 331.284 789.993 331.732 780.14 341.497 cv
779.653 342.094 779.131 342.688 778.551 343.278 cv
779.034 342.652 779.57 342.062 780.14 341.497 cv
798.191 319.358 752.615 293.36 738.794 321.084 cv
734.487 329.723 730.059 350.078 744.268 356.564 cv
862.756 356.564 li
877.526 352.992 868.577 338.435 858.923 334.716 cv
f
780.14 341.497 mo
779.57 342.062 779.034 342.652 778.551 343.278 cv
779.131 342.688 779.653 342.094 780.14 341.497 cv
cp
f
704.448 232.463 mo
704.548 232.379 704.651 232.294 704.75 232.21 cv
704.576 232.356 704.488 232.43 704.448 232.463 cv
.196078 .145098 .239216 rgb
f
704.448 232.463 mo
695.197 240.265 679.798 249.269 665.811 248.136 cv
668.023 242.819 669.455 237.423 670.305 232.048 cv
670.716 229.45 670.99 226.855 671.139 224.268 cv
671.229 222.823 672.288 219.156 670.093 219.177 cv
668.174 239.647 658.647 262.697 631.971 276.82 cv
627.992 272.889 623.371 269.289 618.482 265.79 cv
616.04 264.043 613.549 262.321 611.061 260.595 cv
608.856 259.06 610.248 259.203 611.622 257.555 cv
612.509 256.491 613.206 255.351 613.723 254.192 cv
617.417 245.829 614.2 236.178 609.936 228.363 cv
613.229 236.805 616.555 250.151 606.563 257.455 cv
593.929 248.575 583.433 238.988 579.624 226.704 cv
577.551 220.066 577.117 213.25 577.515 206.549 cv
577.702 203.182 578.138 199.833 578.723 196.507 cv
578.959 195.165 579.218 193.826 579.494 192.49 cv
579.888 190.578 579.669 191.057 577.53 190.271 cv
573.398 203.863 570.762 218.179 575.334 232.286 cv
580.141 247.292 595.932 258.658 609.868 270.204 cv
595.735 270.512 581.728 268.046 570.558 261.943 cv
564.975 258.9 560.356 255.122 556.794 250.976 cv
555.064 248.963 553.575 246.867 552.291 244.728 cv
551.345 243.166 550.126 238.627 547.879 238.519 cv
550.49 247.214 555.965 255.86 565.47 262.574 cv
547.287 263.475 533.798 253.043 524.898 242.876 cv
533.549 254.48 548.581 266.754 569.114 264.926 cv
579.685 271.198 593.046 274.443 606.995 275.093 cv
607.566 275.125 608.547 275.098 609.659 275.071 cv
612.152 275.01 615.303 274.949 615.966 275.558 cv
617.966 277.46 619.796 279.43 621.46 281.454 cv
624.897 285.634 627.622 290.048 629.752 294.565 cv
637.644 311.169 637.699 329.344 633.166 346.903 cv
632.096 351.096 630.53 355.254 628.94 359.413 cv
628.047 361.42 624.823 363.954 629.319 364.315 cv
636.37 364.863 643.455 365.258 650.57 365.494 cv
659.699 338.852 657.756 310.393 640.714 287.022 cv
639.857 285.829 638.955 284.65 638.012 283.486 cv
636.148 281.18 635.864 281.35 638.976 279.365 cv
643.066 276.746 646.74 273.859 650.014 270.812 cv
653.633 267.444 656.711 263.82 659.263 260.107 cv
660.166 258.855 664.271 250.55 665.366 250.569 cv
682.809 249.24 695.853 240.904 706.566 230.704 cv
705.963 231.207 705.358 231.71 704.75 232.21 cv
705.331 231.732 705.046 231.97 704.759 232.208 cv
704.558 232.375 704.357 232.541 704.448 232.463 cv
f
704.75 232.21 mo
704.651 232.294 704.548 232.379 704.448 232.463 cv
704.357 232.541 704.558 232.375 704.759 232.208 cv
705.046 231.97 705.331 231.732 704.75 232.21 cv
f
545.789 219.413 mo
542.152 218.833 538.606 217.913 535.198 216.637 cv
526.957 213.557 519.665 208.798 513.793 203.363 cv
501.57 192.202 494.43 176.1 502.075 164.248 cv
486.727 183.735 515.128 217.724 546.011 222.593 cv
546.109 221.81 546.992 219.603 545.789 219.413 cv
f
605.959 224.236 mo
604.391 224.642 605.175 224.44 605.958 224.237 cv
606.739 224.036 607.518 223.834 605.959 224.236 cv
f
614.91 216.456 mo
611.139 219.896 605.854 222.453 599.618 222.108 cv
599.041 222.085 594.86 221.289 594.76 221.519 cv
594.357 222.447 593.952 223.374 593.543 224.3 cv
597.768 225.009 601.762 225.322 605.959 224.236 cv
622.346 219.933 626.033 202.757 627.254 191.916 cv
625.472 200.374 622.398 209.629 614.91 216.456 cv
f
539.816 132.936 mo
501.287 131.311 460.585 128.922 453.968 142.625 cv
451.254 149.135 460.847 165.757 480.402 179.868 cv
499.622 194.306 528.805 206.233 557.352 210.733 cv
616.546 221.871 666.164 198.057 640.78 169.394 cv
616.777 139.169 579.383 136.434 539.816 132.936 cv
.996078 .521569 .952941 rgb
f
640.78 169.394 mo
634.363 161.313 626.99 155.199 618.874 150.508 cv
618.878 150.496 618.883 150.485 618.887 150.473 cv
627.125 155.146 634.624 161.213 640.78 169.394 cv
454.297 141.882 mo
456.713 137.075 463.791 134.494 473.344 133.149 cv
473.348 133.162 473.351 133.175 473.355 133.188 cv
463.969 134.634 457.124 137.29 454.37 141.881 cv
454.343 141.881 454.325 141.881 454.297 141.882 cv
level3{
gsave
clp
[8.71041e-009 -194.01 194.01 8.71041e-009 450 272 ]ct
/5 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~MP0a$T_OA9pkYR;LS"9qT(n&2pk>:6Kq.plSG7c,pk,(2Jt)OeS+qQ'pjeh.J=61_RJ;9!pjSV*I[BhX
QhYrppjAD&H^=GQQM>clpj/5#H'S/LPk]KfpihqsG*D]DP5'0_piMYnFHQ??Ona![pi;JkEKKs8O8*[T
phu5gDiXU2NqdLOphc#cD2n=,NVI:JphPi`C5_k$Mth"Dph>W\BSlLsM>1_>ph#?WAVg+lM"kM9pg]*S
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.71041e-009 -194.01 194.01 8.71041e-009 450 272 ]ct
clp
/5 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~M2@(GM26tDLkpkCLkgb@LPCP<L4t>8KnY57KnP,4KS5#3KS5#3KS+o0K7\],Jq8K(JUrB'JUi9$J:E&u
It)rtIt)rtIt)orIXZ]nI=6NlI=6KjI!g9fH[C*dH[C'bH?sj^H$O[\H$O[\H$OXZG^+FVGB\7TGB\4R
G'8%OF`hhKFEDVHFEDVGF)uDDF)uDDF)uDCEcQ2?EH,u;E,]c8E,]c7Df9Q3DJj?0DJj?0DJj?/D/F-+
Ci!p(Ci!p(CMR^$C2.KuC2.KuBk_9qBP;'mBP;'mBP;'mB4kjiAnGXeAnGXeAS#FaA7T4]@q0"Y@q0"Y
~>
<~T:_aJT:_aJT:VXGSt;OFSt2FCSXl=BSXc4?S=H+>S=?";S"#n:S!oe7R[T\6R[T\6R[T\6R[KS3R@0J2
R@0G0R$a8.R$a5,Q^=&*Q^=#(QBmi&QBmi&QBmf$Q'IW"Q'IW"Q'IW"Q'ISuPa%DsPa%AqPEV2oPEV/m
P*1ukP*1ujOcbcgOcbcfOH>QcOH>QcOH>QcOH>QbO,o?_O,o?^NfK-[NfK-[NfK-ZNK&pWNK&pVN/W^S
N/W^SN/W^SN/W^SMi3LOMi3LOMMd:KMMd:KM2@(GM2@(GLkpkCLkpkCLPLY?LPLY?LPLY?LPLY?L5(G;
~>
247 ]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /5 /Gradient get_res exec grestore
}if
np
453.968 142.625 mo
454.066 142.371 454.176 142.124 454.297 141.882 cv
454.325 141.881 454.343 141.881 454.37 141.881 cv
454.225 142.123 454.091 142.371 453.968 142.625 cv
level3{
gsave
clp
[8.71041e-009 -194.01 194.01 8.71041e-009 450 272 ]ct
/6 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~U9F?cYP=fppn=ndTWe-_YP=`mpn+_aSuqdZXn\HhpmeJ]S?2LUXSA<dpm\>ZS#Z7QWq`$_pmJ/WRB$%M
Wq_s]pmA&UQ`9bHWVDdYpm.lRQDjSDVtcOTpm%cPPc+;?VYH@PplhQLP,7r:V>-1LplVEJOeqi8V"g%I
plD6GO/)K2U\KkEpl2'DNM?3-UA0\@pl(pAMkTp(U%jP=pktg?MP0a$T_OA9pkbX<LnFHtTD425pkPI9
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.71041e-009 -194.01 194.01 8.71041e-009 450 272 ]ct
clp
/6 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~TqS0RTqJ'OTV.sNTV.sNTV%jKT:VXGSt;OFSt;OFSt2FCSXl=BSXc4?S=?";S"#n:S"#n:S"#n:S!oe7
R[T\6R[T\6R[TY4R@0G0R$a8.R$a8.R$a5,Q^=&*Q^=#(QBmi&QBmf$Q'IW"Q'IW"Q'ISuPa%DsPa%Ds
Pa%DrPEV2nP*1ukP*1ukP*1ujOcbcgOcbcfOH>QcOH>QcOH>QcOH>QbO,o?^NfK-[NfK-[NfK-ZNK&pV
N/W^SN/W^SN/W^SMi3LOMi3LOMMd:KMMd:KMMd:KMMd:KM2@(GLkpkCLkpkCLkpkCLPLY?L5(G;L5(G;
~>
<~Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-"h.Xf\_-XfSV*XK8M)XK8M)XK8M)XK/D&X/i;%X/`2"WiE)!
WiE%tWMukrWMukrWMukrWMukrWMukrWMukrWMuhpW2QYnW2QYnW2QYnW2QVlVl-GjVl-DhVP^5fVP^5f
VP^5fVP^5eV5:#bV5:#aUnjf^Unjf^Unjf^Unjf^Unjf^Unjf]USFTZUSFTZUSFTYU8"BVU8"BVU8"BV
U8"BVTqS0RTqS0RTV.sNTV.sNTV.sNTV.sNT:_aJT:_aJT:_aJT:_aJSt;OFSt;OFSt;OFSt;OFSXl=B
~>
247 ]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /6 /Gradient get_res exec grestore
}if
np
604.972 212.321 mo
604.966 212.319 604.961 212.318 604.954 212.316 cv
602.426 211.714 599.891 211.183 597.488 210.687 cv
597.496 210.704 597.503 210.721 597.51 210.738 cv
596.021 210.444 594.577 210.166 593.211 209.896 cv
579.94 207.676 563.992 206.943 548.883 206.943 cv
545.758 206.943 542.671 206.975 539.648 207.031 cv
528.059 204.022 516.73 199.942 506.384 195.127 cv
505.237 194.594 504.105 194.052 502.983 193.501 cv
494.586 189.373 486.921 184.765 480.402 179.868 cv
463.024 167.328 453.514 152.805 453.516 145.158 cv
453.517 144.2 453.666 143.349 453.968 142.625 cv
453.968 142.625 li
454.091 142.371 454.225 142.123 454.37 141.881 cv
457.124 137.29 463.969 134.634 473.355 133.188 cv
473.594 134.044 473.884 134.876 474.218 135.666 cv
488.36 164.71 524.656 182.933 558.612 182.931 cv
574.663 182.93 590.196 178.856 602.611 169.928 cv
610.264 165.293 615.928 158.25 618.874 150.508 cv
626.99 155.199 634.363 161.313 640.78 169.394 cv
640.78 169.394 li
645.45 174.666 647.581 179.774 647.582 184.531 cv
647.582 186.321 647.281 188.063 646.7 189.743 cv
646.497 189.907 646.295 190.071 646.095 190.236 cv
641.195 194.381 637.877 198.304 635.982 202.058 cv
632.468 204.346 628.246 206.354 623.441 208.023 cv
622.688 208.285 621.917 208.539 621.136 208.784 cv
616.249 210.315 610.825 211.511 604.972 212.321 cv
.847059 .435294 .92549 rgb
f
728.143 157.369 mo
700.123 161.182 667.136 172.954 646.095 190.236 cv
637.36 197.625 633.651 204.308 634.072 210.588 cv
634.37 230.888 680.746 243.742 709.128 238.041 cv
744.752 232.43 773.97 206.378 769.95 180.663 cv
767.019 160.326 751.63 154.444 728.143 157.369 cv
.996078 .521569 .952941 rgb
f
747.414 222.591 mo
747.414 222.591 li
750.888 220.093 754.054 217.382 756.851 214.505 cv
756.852 214.505 li
754.054 217.382 750.888 220.093 747.414 222.591 cv
769.915 190.519 mo
769.915 190.519 li
770.435 187.257 770.465 183.958 769.95 180.663 cv
770.465 183.958 770.435 187.257 769.915 190.519 cv
level3{
gsave
clp
[8.71041e-009 -194.01 194.01 8.71041e-009 450 272 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.71041e-009 -194.01 194.01 8.71041e-009 450 272 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
710.533 237.809 mo
710.533 237.809 li
724.394 235.406 737.224 229.918 747.414 222.591 cv
747.414 222.591 li
737.224 229.918 724.394 235.406 710.533 237.809 cv
level3{
gsave
clp
[8.71041e-009 -194.01 194.01 8.71041e-009 450 272 ]ct
/7 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~U9F?cYP=fppn=ndTWe-_YP=`mpn+_aSuqdZXn\HhpmeJ]S?2LUXSA<dpm\>ZS#Z7QWq`$_pmJ/WRB$%M
Wq_s]pmA&UQ`9bHWVDdYpm.lRQDjSDVtcOTpm%cPPc+;?VYH@PplhQLP,7r:V>-1LplVEJOeqi8V"g%I
plD6GO/)K2U\KkEpl2'DNM?3,UA0Y?pktj@MkTp&U%jG:pkYU<LS4EsT_O86pk>@8KV/$lTD4&1pjo%3
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.71041e-009 -194.01 194.01 8.71041e-009 450 272 ]ct
clp
/7 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~TqS0RTqJ'OTV.sNTV.sNTV%jKT:VXGSt;OFSt;OFSt2FCSXl=BSXc4?S=?";S"#n:S"#n:S"#n:S!oe7
R[T\6R[T\6R[TY4R@0G0R$a8.R$a8.R$a5,Q^=&*Q^=#(QBmi&QBmf$Q'IW"Q'IW"Q'ISuPa%DsPa%Ds
Pa%DrPEV2nP*1ukP*1ukP*1ujOcbcgOcbcfOH>QcOH>QcOH>QcOH>QbO,o?^NfK-[NfK-[NfK-ZNK&pV
N/W^SN/W^SMi3LOMMd:KMMd:KMMd7ILkpkCLPLY?LPLY?L5(G;KnY57KnY57KS5#3K7ef/JqAT+JqAQ)
~>
<~Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-"h.Xf\_-XfSV*XK8M)XK8M)XK8M)XK/D&X/i;%X/`2"WiE)!
WiE%tWMukrWMukrWMukrWMukrWMukrWMukrWMuhpW2QYnW2QYnW2QYnW2QVlVl-GjVl-DhVP^5fVP^5f
VP^5fVP^5eV5:#bV5:#aUnjf^Unjf^Unjf^Unjf^Unjf^Unjf]USFTZUSFTZUSFTYU8"BVU8"BVU8"BV
U8"BVTqS0RTqS0RTV.sNTV.sNTV.sNTV.sNT:_aJT:_aJT:_aJT:_aJSt;OFSt;OFSt;OFSt;OFSXl=B
~>
247 ]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /7 /Gradient get_res exec grestore
}if
np
756.852 214.505 mo
756.851 214.505 li
763.87 207.288 768.559 199.033 769.915 190.519 cv
769.915 190.519 li
768.559 199.033 763.87 207.288 756.852 214.505 cv
level3{
gsave
clp
[8.71041e-009 -194.01 194.01 8.71041e-009 450 272 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.71041e-009 -194.01 194.01 8.71041e-009 450 272 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
720.573 158.571 mo
720.529 158.555 720.487 158.54 720.443 158.524 cv
723.038 158.062 725.61 157.67 728.143 157.369 cv
725.654 157.707 723.127 158.109 720.573 158.571 cv
level3{
gsave
clp
[8.71041e-009 -194.01 194.01 8.71041e-009 450 272 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.71041e-009 -194.01 194.01 8.71041e-009 450 272 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
694.247 239.398 mo
667 239.398 634.384 227.635 634.073 210.637 cv
634.072 210.621 634.072 210.604 634.072 210.588 cv
634.072 210.588 li
633.72 205.294 636.318 199.681 642.398 193.637 cv
643.085 205.923 661.716 212.876 677.838 212.927 cv
699.738 212.814 725.285 207.968 738.46 189.945 cv
742.858 183.98 744.505 176.004 739.124 170.436 cv
734.295 165.238 727.742 161.224 720.573 158.571 cv
723.127 158.109 725.654 157.707 728.143 157.369 cv
728.143 157.369 li
731.856 156.906 735.363 156.664 738.654 156.664 cv
756.181 156.664 767.483 163.541 769.95 180.663 cv
769.95 180.663 li
770.465 183.958 770.435 187.257 769.915 190.519 cv
768.559 199.033 763.87 207.288 756.851 214.505 cv
754.054 217.382 750.888 220.093 747.414 222.591 cv
737.224 229.918 724.394 235.406 710.533 237.809 cv
710.066 237.89 709.598 237.967 709.128 238.041 cv
709.128 238.041 li
704.546 238.962 699.497 239.398 694.247 239.398 cv
.847059 .435294 .92549 rgb
f
593.211 209.896 mo
573.139 206.539 546.953 206.583 526.792 207.419 cv
516.663 208.084 499.587 210.359 491.602 216.063 cv
486.472 219.825 485.262 225.514 493.766 233.648 cv
505.742 245.549 535.668 254.6 563.679 254.122 cv
591.78 254.191 617.967 244.731 624.55 232.252 cv
632.787 216.812 608.264 212.872 593.211 209.896 cv
.996078 .521569 .952941 rgb
f
583.695 252.558 mo
583.695 252.558 li
585.268 252.305 586.817 252.023 588.341 251.714 cv
588.341 251.714 li
586.817 252.023 585.268 252.305 583.695 252.558 cv
.72549 .741176 .972549 rgb
f
596.486 249.729 mo
596.486 249.729 li
602.874 247.895 608.573 245.554 613.227 242.838 cv
613.227 242.838 li
608.573 245.554 602.874 247.895 596.486 249.729 cv
614.946 241.787 mo
614.946 241.787 li
619.402 238.932 622.726 235.708 624.55 232.252 cv
627.889 225.993 625.845 221.624 621.23 218.442 cv
625.857 221.613 627.916 225.97 624.55 232.252 cv
622.726 235.709 619.402 238.932 614.946 241.787 cv
f
588.341 251.714 mo
588.341 251.714 li
591.155 251.143 593.877 250.478 596.486 249.729 cv
596.486 249.729 li
593.877 250.478 591.155 251.143 588.341 251.714 cv
613.227 242.838 mo
613.227 242.838 li
613.817 242.494 614.391 242.143 614.946 241.787 cv
614.946 241.787 li
614.391 242.143 613.817 242.494 613.227 242.838 cv
.168627 .121569 .231373 rgb
f
487.571 223.216 mo
487.567 223.114 487.565 223.012 487.565 222.911 cv
487.565 223.012 487.567 223.114 487.571 223.216 cv
491.602 216.063 mo
491.814 215.907 492.038 215.757 492.268 215.609 cv
492.04 215.758 491.818 215.909 491.602 216.063 cv
.72549 .741176 .972549 rgb
f
604.954 212.316 mo
602.44 211.727 599.915 211.212 597.51 210.738 cv
597.503 210.721 597.496 210.704 597.488 210.687 cv
599.891 211.183 602.426 211.714 604.954 212.316 cv
.721569 .360784 .898039 rgb
f
561.549 254.14 mo
534.165 254.14 505.438 245.247 493.766 233.648 cv
493.766 233.648 li
493.766 233.648 li
489.514 229.581 487.69 226.125 487.571 223.216 cv
487.567 223.114 487.565 223.012 487.565 222.911 cv
487.565 220.142 489.127 217.878 491.602 216.063 cv
491.602 216.063 li
491.818 215.909 492.04 215.758 492.268 215.609 cv
492.455 215.489 492.645 215.371 492.835 215.253 cv
493.963 218.777 497.625 222.578 501.325 225.19 cv
516.219 234.91 535.571 241.405 554.12 241.404 cv
563.221 241.404 572.132 239.839 580.222 236.324 cv
592.599 230.66 602.607 221.382 597.736 211.253 cv
597.667 211.079 597.586 210.908 597.51 210.738 cv
599.915 211.212 602.44 211.727 604.954 212.316 cv
611.072 213.774 617.149 215.647 621.23 218.442 cv
625.845 221.624 627.889 225.993 624.55 232.252 cv
622.726 235.708 619.402 238.932 614.946 241.787 cv
614.391 242.143 613.817 242.494 613.227 242.838 cv
608.573 245.554 602.874 247.895 596.486 249.729 cv
593.877 250.478 591.155 251.143 588.341 251.714 cv
586.817 252.023 585.268 252.305 583.695 252.558 cv
583.695 252.558 li
577.406 253.57 570.754 254.122 563.987 254.122 cv
563.886 254.122 563.78 254.122 563.679 254.122 cv
563.395 254.127 563.111 254.13 562.827 254.133 cv
562.401 254.138 561.976 254.14 561.549 254.14 cv
.847059 .435294 .92549 rgb
f
554.64 155.923 mo
551.891 155.923 549.009 155.805 546.083 155.545 cv
527.927 154.43 507.995 147.83 509.09 142.235 cv
509.713 139.07 514.495 137.842 521.267 137.842 cv
537.787 137.842 566.129 145.162 574.648 149.533 cv
579.798 152.69 569.023 155.923 554.64 155.923 cv
.996078 .662745 .968627 rgb
f
585.145 162.672 mo
583.613 162.672 582.238 162.223 581.324 161.066 cv
577.489 156.094 585.354 148.776 590.27 148.292 cv
590.677 148.251 591.066 148.232 591.437 148.232 cv
598.315 148.232 599.068 154.876 594.387 158.941 cv
593.789 159.452 592.935 160.044 591.932 160.603 cv
589.96 161.714 587.384 162.673 585.145 162.672 cv
f
548.528 229.824 mo
541.147 229.824 531.172 228.943 524.686 225.645 cv
513.621 219.925 524.795 215.038 531.842 213.094 cv
537.515 211.57 543.423 210.619 549.453 210.619 cv
553.276 210.619 557.149 211.001 561.04 211.863 cv
568.988 213.753 585.204 218.853 574.554 225.396 cv
568.558 229.026 557.472 229.818 549.513 229.818 cv
549.19 229.822 548.862 229.824 548.528 229.824 cv
f
676.433 197.876 mo
668.446 197.876 660.82 195.919 664.075 188.803 cv
667.579 181.189 682.45 174.512 691.386 172.731 cv
693.917 172.328 697.468 171.971 701.132 171.971 cv
708.955 171.971 717.294 173.595 717.323 179.847 cv
717.294 189.52 696.388 195.42 687.579 196.766 cv
684.712 197.363 680.525 197.876 676.433 197.876 cv
f
121.037 331.292 mo
121.359 333.533 121.807 335.472 122.369 336.933 cv
122.928 335.1 122.268 332.921 121.037 331.292 cv
cp
.380392 .466667 1 rgb
f
146.279 322.405 mo
145.947 323.108 145.693 323.759 145.539 324.31 cv
145.812 323.766 146.058 323.12 146.279 322.405 cv
cp
f
160.948 326.59 mo
161.897 322.98 162.503 314.496 158.01 313.064 cv
153.509 311.63 148.337 318.057 146.279 322.405 cv
146.058 323.12 145.812 323.766 145.539 324.31 cv
145.693 323.759 145.947 323.108 146.279 322.405 cv
149.25 312.832 147.449 289.404 135.909 290.022 cv
122.153 290.758 119.013 317.205 121.037 331.292 cv
122.268 332.921 122.928 335.1 122.369 336.933 cv
121.807 335.472 121.359 333.533 121.037 331.292 cv
119.156 328.802 115.94 327.602 113.68 330.916 cv
109.1 319.629 95.5521 322.02 92.2633 332.569 cv
90.8042 324.677 77.6653 313.621 72.1494 323.543 cv
68.2849 330.494 72.6626 358.559 84.2731 356.451 cv
169.964 356.451 li
175.308 351.335 178.639 341.012 179.182 333.837 cv
180.118 321.475 168.908 316.096 160.948 326.59 cv
f
142.882 192.766 mo
131.547 179.568 119.078 161.5 107.843 148.135 cv
96.3488 134.751 87.0684 131.11 76.4793 141.249 cv
66.2786 150.921 54.7686 174.374 47.7869 204.395 cv
40.8294 234.281 42.204 263.732 53.2312 280.755 cv
63.8606 298.253 84.1429 303.323 105.807 295.397 cv
127.708 287.715 145.608 271.043 156.316 257.833 cv
167.164 244.018 170.821 233.666 167.48 224.653 cv
164.148 215.507 154.082 206.571 142.882 192.766 cv
.996078 .521569 .952941 rgb
f
45.0042 258.083 mo
44.6123 255.817 44.2999 253.484 44.0653 251.088 cv
44.3021 253.482 44.6167 255.816 45.0102 258.08 cv
45.0042 258.083 li
.72549 .741176 .972549 rgb
f
53.9181 281.848 mo
53.9088 281.84 53.899 281.831 53.8897 281.822 cv
53.8897 281.822 li
49.5423 275.481 46.6087 267.36 45.0042 258.083 cv
45.0102 258.08 li
46.5391 266.877 49.2589 274.623 53.2312 280.755 cv
53.4556 281.125 53.6851 281.49 53.9181 281.848 cv
.521569 .568627 .972549 rgb
f
47.7822 204.415 mo
47.7839 204.408 47.7851 204.402 47.7869 204.395 cv
48.8224 199.776 49.9994 195.29 51.2755 190.983 cv
51.2735 191.044 51.2716 191.105 51.2696 191.167 cv
50.0176 195.407 48.8496 199.825 47.7869 204.395 cv
47.7852 204.403 47.7839 204.408 47.7822 204.415 cv
152.595 204.116 mo
149.786 200.935 146.754 197.492 143.622 193.673 cv
146.775 197.406 149.8 200.893 152.595 204.116 cv
140.684 190.165 mo
140.355 189.77 140.026 189.371 139.695 188.969 cv
140.025 189.37 140.356 189.769 140.684 190.165 cv
.72549 .741176 .972549 rgb
f
84.9064 293.232 mo
73.3372 293.232 63.2019 289.636 55.2308 282.988 cv
54.7863 282.617 54.349 282.238 53.9181 281.848 cv
53.6851 281.49 53.4556 281.125 53.2312 280.755 cv
49.2589 274.623 46.5391 266.877 45.0102 258.08 cv
44.6167 255.816 44.3021 253.482 44.0653 251.088 cv
42.6849 236.993 44.008 220.817 47.7822 204.415 cv
47.7839 204.408 47.7852 204.403 47.7869 204.395 cv
48.8496 199.825 50.0176 195.407 51.2696 191.167 cv
50.8627 204.189 52.2621 217.02 54.2081 228.027 cv
56.8565 243.573 65.251 255.924 76.952 261.209 cv
80.6775 262.982 84.7423 264.026 88.9916 264.402 cv
87.984 264.766 87.0248 265.058 86.1918 265.277 cv
85.3068 265.512 84.5606 265.676 84.0394 265.77 cv
83.5158 265.868 83.2175 265.922 83.2191 265.922 cv
83.2191 265.922 83.5163 265.899 84.0408 265.857 cv
84.5651 265.818 85.3183 265.731 86.2262 265.584 cv
87.4954 265.381 89.0766 265.038 90.7293 264.519 cv
91.3754 264.548 92.0245 264.563 92.6773 264.563 cv
95.7837 264.563 98.961 264.23 102.151 263.586 cv
103.224 264.001 104.317 264.316 105.39 264.532 cv
105.94 264.641 106.487 264.723 107.02 264.781 cv
107.162 268.754 107.269 272.828 107.318 276.962 cv
107.329 277.996 107.338 279.032 107.341 280.073 cv
107.346 281.359 107.346 282.647 107.336 283.941 cv
107.327 285.781 107.299 287.629 107.252 289.481 cv
102.977 290.859 98.5665 291.911 94.0721 292.544 cv
93.1183 292.678 92.1628 292.793 91.2015 292.888 cv
91.1042 292.899 91.0059 292.909 90.9089 292.919 cv
89.3274 293.081 87.7686 293.18 86.234 293.216 cv
85.7896 293.226 85.3466 293.232 84.9064 293.232 cv
112.647 287.547 mo
112.522 285.829 112.382 284.111 112.228 282.397 cv
112.105 281.007 111.971 279.623 111.833 278.24 cv
114.333 277.01 116.908 275.428 119.252 273.644 cv
120.621 272.627 121.889 271.535 123.116 270.441 cv
124.318 269.335 125.454 268.216 126.493 267.1 cv
127.16 266.385 127.779 265.675 128.371 264.974 cv
128.822 264.441 129.252 263.915 129.662 263.394 cv
131.245 261.381 132.526 259.479 133.517 257.799 cv
134.631 257.763 135.988 257.535 137.267 257.086 cv
138.827 256.562 140.159 255.732 140.904 255.083 cv
141.108 254.927 141.246 254.766 141.387 254.634 cv
141.53 254.502 141.628 254.382 141.707 254.284 cv
141.868 254.09 141.96 253.98 141.959 253.98 cv
141.959 253.98 141.839 254.084 141.632 254.267 cv
141.434 254.45 141.102 254.7 140.681 254.976 cv
139.838 255.53 138.521 256.139 137.175 256.417 cv
136.432 256.582 135.707 256.65 135.06 256.65 cv
134.751 256.65 134.46 256.635 134.193 256.606 cv
134.432 256.166 134.654 255.742 134.852 255.341 cv
135.606 253.822 136.066 252.593 136.339 251.743 cv
136.485 251.318 136.567 250.989 136.629 250.764 cv
136.689 250.546 136.72 250.428 136.723 250.421 cv
136.723 250.421 136.723 250.421 136.723 250.421 cv
136.723 250.421 136.723 250.421 136.723 250.421 cv
136.72 250.428 136.671 250.547 136.581 250.766 cv
136.488 250.992 136.361 251.321 136.156 251.746 cv
135.768 252.595 135.147 253.816 134.206 255.31 cv
133.971 255.685 133.713 256.078 133.44 256.486 cv
133.159 256.903 132.853 257.337 132.531 257.785 cv
131.912 258.641 131.218 259.548 130.445 260.492 cv
129.938 261.109 129.385 261.744 128.811 262.386 cv
127.923 261.222 127.096 259.758 126.515 258.188 cv
125.871 256.537 125.451 254.805 125.166 253.346 cv
132.698 248.141 138.215 242.493 141.599 237.03 cv
151.979 218.141 145.275 206.549 131.935 181.061 cv
131.07 179.358 130.18 177.587 129.271 175.75 cv
132.763 180.409 136.277 184.822 139.695 188.969 cv
140.026 189.371 140.355 189.77 140.684 190.165 cv
141.674 191.357 142.654 192.527 143.622 193.673 cv
146.754 197.492 149.786 200.935 152.595 204.116 cv
155.34 207.28 157.864 210.189 160.071 212.827 cv
160.071 212.827 li
160.071 212.827 li
162.5 216.494 164.386 219.817 165.542 223.156 cv
168.082 230.494 167.097 237.908 160.603 249.202 cv
154.937 259.135 139.765 274.441 120.285 284.139 cv
120.219 284.171 120.152 284.205 120.086 284.237 cv
120.084 284.238 120.083 284.239 120.082 284.24 cv
120.078 284.241 120.073 284.244 120.07 284.245 cv
120.005 284.277 119.944 284.307 119.88 284.339 cv
119.854 284.352 119.824 284.367 119.798 284.38 cv
119.752 284.402 119.71 284.422 119.665 284.445 cv
119.662 284.446 119.657 284.448 119.654 284.45 cv
119.572 284.49 119.49 284.53 119.408 284.57 cv
117.205 285.64 114.949 286.638 112.647 287.547 cv
111.551 275.49 mo
111.175 271.915 110.764 268.37 110.338 264.887 cv
110.205 263.803 110.072 262.727 109.938 261.655 cv
109.928 261.576 109.918 261.497 109.908 261.417 cv
112.27 260.573 114.613 259.567 116.913 258.408 cv
119.712 256.882 122.313 255.291 124.715 253.655 cv
124.817 255.123 125.009 256.851 125.413 258.546 cv
125.841 260.499 126.619 262.368 127.515 263.793 cv
126.654 264.697 125.742 265.612 124.767 266.521 cv
123.67 267.54 122.499 268.543 121.29 269.513 cv
120.06 270.469 118.812 271.407 117.511 272.243 cv
115.524 273.557 113.477 274.652 111.551 275.49 cv
.847059 .435294 .92549 rgb
f
75.7725 297.714 mo
66.8867 295.431 59.2902 290.137 53.8897 281.822 cv
53.8897 281.822 li
53.899 281.831 53.9088 281.84 53.9181 281.848 cv
59.2806 290.097 66.8817 295.407 75.7725 297.714 cv
.564706 .623529 .984314 rgb
f
86.3926 299.012 mo
82.6991 299.012 79.1434 298.58 75.7725 297.714 cv
66.8817 295.407 59.2806 290.097 53.9181 281.848 cv
54.349 282.238 54.7864 282.617 55.2308 282.988 cv
63.203 289.637 73.3362 293.232 84.9061 293.232 cv
85.3464 293.232 85.7897 293.226 86.234 293.216 cv
87.7694 293.18 89.3264 293.082 90.9089 292.919 cv
91.0059 292.909 91.1043 292.899 91.2015 292.888 cv
92.1628 292.793 93.1183 292.678 94.0721 292.544 cv
98.5665 291.911 102.977 290.859 107.252 289.481 cv
107.207 291.3 107.142 293.124 107.058 294.947 cv
106.642 295.1 106.225 295.25 105.807 295.397 cv
105.807 295.397 li
105.807 295.397 li
99.1066 297.806 92.5598 299.012 86.3926 299.012 cv
.921569 .478431 .937255 rgb
f
53.9181 281.848 mo
53.9088 281.84 53.899 281.831 53.8897 281.822 cv
53.899 281.831 53.9088 281.84 53.9181 281.848 cv
53.9181 281.848 li
.482353 .521569 .956863 rgb
f
86.234 293.216 mo
87.7686 293.18 89.3274 293.081 90.9089 292.919 cv
89.3264 293.082 87.7694 293.18 86.234 293.216 cv
94.0721 292.544 mo
98.5665 291.911 102.977 290.859 107.252 289.481 cv
107.252 289.481 li
102.977 290.859 98.5665 291.911 94.0721 292.544 cv
55.2308 282.988 mo
54.7864 282.617 54.349 282.238 53.9181 281.848 cv
53.9181 281.848 li
54.349 282.238 54.7863 282.617 55.2308 282.988 cv
.780392 .396078 .913725 rgb
f
167.601 224.988 mo
167.562 224.876 167.522 224.764 167.48 224.653 cv
167.469 224.621 167.457 224.588 167.445 224.556 cv
167.457 224.588 167.469 224.62 167.48 224.652 cv
167.522 224.764 167.562 224.876 167.601 224.988 cv
.788235 .815686 .984314 rgb
f
112.959 292.518 mo
112.871 290.862 112.766 289.204 112.647 287.547 cv
114.949 286.638 117.205 285.64 119.408 284.57 cv
119.49 284.53 119.572 284.49 119.654 284.45 cv
119.657 284.448 119.662 284.446 119.665 284.445 cv
119.71 284.422 119.752 284.402 119.798 284.38 cv
119.824 284.367 119.854 284.352 119.88 284.339 cv
119.944 284.307 120.005 284.277 120.07 284.245 cv
120.073 284.244 120.078 284.241 120.082 284.24 cv
120.083 284.239 120.084 284.238 120.086 284.237 cv
120.152 284.205 120.219 284.171 120.285 284.139 cv
139.765 274.441 154.937 259.135 160.603 249.202 cv
167.098 237.908 168.082 230.494 165.542 223.156 cv
164.386 219.817 162.5 216.494 160.071 212.827 cv
163.41 216.945 165.997 220.648 167.445 224.556 cv
167.457 224.588 167.469 224.621 167.48 224.653 cv
167.522 224.764 167.562 224.876 167.601 224.988 cv
170.727 233.923 167.03 244.189 156.316 257.833 cv
146.799 269.574 131.598 284.05 112.959 292.518 cv
.921569 .478431 .937255 rgb
f
112.647 287.547 mo
112.647 287.547 li
114.949 286.638 117.205 285.64 119.408 284.57 cv
117.205 285.64 114.949 286.638 112.647 287.547 cv
119.654 284.45 mo
119.657 284.448 119.662 284.446 119.665 284.445 cv
119.662 284.446 119.657 284.448 119.654 284.45 cv
119.798 284.38 mo
119.824 284.367 119.854 284.352 119.88 284.339 cv
119.854 284.352 119.824 284.367 119.798 284.38 cv
120.07 284.245 mo
120.073 284.244 120.078 284.241 120.082 284.24 cv
120.078 284.241 120.073 284.244 120.07 284.245 cv
120.086 284.237 mo
120.152 284.205 120.219 284.171 120.285 284.139 cv
120.219 284.171 120.152 284.205 120.086 284.237 cv
165.542 223.156 mo
164.386 219.817 162.5 216.494 160.071 212.827 cv
160.071 212.827 li
162.5 216.494 164.386 219.817 165.542 223.156 cv
.780392 .396078 .913725 rgb
f
140.681 254.976 mo
139.838 255.53 138.521 256.139 137.175 256.417 cv
136.077 256.66 135.018 256.694 134.193 256.606 cv
134.432 256.166 134.654 255.742 134.852 255.341 cv
135.606 253.822 136.066 252.593 136.339 251.743 cv
136.485 251.318 136.567 250.989 136.629 250.764 cv
136.69 250.54 136.722 250.422 136.723 250.421 cv
136.723 250.421 136.674 250.54 136.581 250.766 cv
136.488 250.992 136.361 251.321 136.156 251.746 cv
135.768 252.595 135.147 253.816 134.206 255.31 cv
133.971 255.685 133.713 256.078 133.44 256.486 cv
133.159 256.903 132.853 257.337 132.531 257.785 cv
131.912 258.641 131.218 259.548 130.445 260.492 cv
129.938 261.109 129.385 261.744 128.811 262.386 cv
127.923 261.222 127.096 259.758 126.515 258.188 cv
125.724 256.159 125.271 254.008 124.989 252.391 cv
124.712 250.769 124.587 249.681 124.587 249.681 cv
124.587 249.681 124.576 250.786 124.647 252.456 cv
124.723 254.122 124.893 256.361 125.413 258.546 cv
125.841 260.499 126.619 262.368 127.515 263.793 cv
126.654 264.697 125.742 265.612 124.767 266.521 cv
123.67 267.54 122.499 268.543 121.29 269.513 cv
120.06 270.469 118.812 271.407 117.511 272.243 cv
115.524 273.557 113.477 274.652 111.551 275.49 cv
111.175 271.915 110.764 268.37 110.338 264.887 cv
110.205 263.803 110.072 262.727 109.938 261.655 cv
108.936 253.677 107.921 246.08 107.09 239.525 cv
106.292 233.497 105.699 228.355 105.3 224.731 cv
104.896 221.104 104.68 219.005 104.68 219.007 cv
104.687 218.993 105.032 227.358 105.785 239.591 cv
105.837 240.519 105.892 241.477 105.945 242.447 cv
105.745 242.392 li
105.558 242.337 105.366 242.25 105.146 242.172 cv
104.305 241.809 103.305 241.099 102.543 240.17 cv
101.756 239.261 101.173 238.199 100.787 237.388 cv
100.403 236.574 100.2 236.009 100.2 236.009 cv
100.2 236.009 100.275 236.59 100.478 237.465 cv
100.685 238.337 101.023 239.512 101.644 240.634 cv
102.232 241.766 103.181 242.811 104.164 243.449 cv
104.419 243.595 104.65 243.745 104.883 243.854 cv
105.12 243.958 105.332 244.051 105.517 244.131 cv
105.735 244.201 105.912 244.255 106.049 244.295 cv
106.342 249.592 106.65 255.432 106.897 261.556 cv
106.852 261.552 li
105.025 261.323 103.002 260.8 101.058 259.884 cv
100.726 259.73 100.397 259.555 100.071 259.382 cv
99.5459 259.104 99.0292 258.804 98.5212 258.479 cv
97.4825 257.815 96.4797 257.064 95.5426 256.239 cv
95.4604 256.164 li
96.1102 255.03 96.5786 253.711 96.7823 252.436 cv
97.0923 250.752 97.0815 249.132 97.0666 247.929 cv
97.0407 246.727 97.001 245.936 97.001 245.936 cv
97.001 245.936 96.8947 246.725 96.7291 247.924 cv
96.5428 249.118 96.271 250.726 95.71 252.29 cv
95.3748 253.302 94.8735 254.269 94.3082 255.087 cv
91.5329 252.342 89.4046 249.089 87.9751 246.428 cv
87.152 244.906 86.5523 243.578 86.1499 242.637 cv
85.7475 241.696 85.5375 241.145 85.5375 241.145 cv
85.5375 241.145 85.6837 241.714 85.9771 242.696 cv
86.2695 243.677 86.7152 245.071 87.355 246.693 cv
88.514 249.639 90.3322 253.348 92.969 256.609 cv
93.2339 256.937 93.5016 257.264 93.7814 257.582 cv
93.8891 257.705 94.009 257.823 94.1192 257.944 cv
94.8848 258.778 95.7055 259.564 96.5835 260.286 cv
95.4379 261.199 94.0196 262.139 92.4634 262.904 cv
90.3009 264.018 87.9616 264.812 86.1918 265.277 cv
85.3068 265.512 84.5606 265.676 84.0394 265.77 cv
83.5158 265.868 83.2175 265.922 83.2191 265.922 cv
83.2191 265.922 83.5163 265.899 84.0408 265.857 cv
84.5651 265.818 85.3183 265.731 86.2262 265.584 cv
88.0393 265.294 90.4895 264.718 92.8748 263.752 cv
94.6502 263.068 96.356 262.144 97.7639 261.199 cv
98.1988 261.509 98.6415 261.806 99.0966 262.082 cv
101.071 263.293 103.269 264.105 105.39 264.532 cv
105.94 264.641 106.487 264.723 107.02 264.781 cv
107.162 268.754 107.269 272.828 107.318 276.962 cv
107.329 277.996 107.338 279.032 107.341 280.073 cv
107.346 281.359 107.346 282.647 107.336 283.941 cv
107.249 300.14 105.803 316.967 101.826 331.783 cv
99.8971 339.15 97.3983 345.954 94.96 351.346 cv
94.661 352.017 94.374 352.665 94.0966 353.286 cv
93.7826 353.916 93.4836 354.519 93.197 355.095 cv
92.613 356.247 92.1394 357.277 91.6309 358.2 cv
90.6098 360.048 89.873 361.392 89.4731 362.141 cv
93.172 361.12 96.8686 359.98 100.559 358.719 cv
100.992 357.886 101.742 356.406 102.745 354.392 cv
103.242 353.387 103.683 352.307 104.231 351.082 cv
104.496 350.474 104.775 349.836 105.064 349.171 cv
105.311 348.528 105.568 347.859 105.833 347.164 cv
108.003 341.579 109.978 334.823 111.251 327.714 cv
113.903 313.416 113.61 297.786 112.228 282.397 cv
112.105 281.007 111.971 279.623 111.833 278.24 cv
114.333 277.01 116.908 275.428 119.252 273.644 cv
120.621 272.627 121.889 271.535 123.116 270.441 cv
124.318 269.335 125.454 268.216 126.493 267.1 cv
127.16 266.385 127.779 265.675 128.371 264.974 cv
128.822 264.441 129.252 263.915 129.662 263.394 cv
131.245 261.381 132.526 259.479 133.517 257.799 cv
134.631 257.763 135.988 257.535 137.267 257.086 cv
138.827 256.562 140.159 255.732 140.904 255.083 cv
141.108 254.927 141.246 254.766 141.387 254.634 cv
141.53 254.502 141.628 254.382 141.707 254.284 cv
141.868 254.09 141.96 253.98 141.959 253.98 cv
141.959 253.98 141.839 254.084 141.632 254.267 cv
141.434 254.45 141.102 254.7 140.681 254.976 cv
.196078 .145098 .239216 rgb
f
86.2985 195.478 mo
85.6174 195.478 84.9355 195.46 84.2548 195.424 cv
68.7914 194.703 68.978 175.783 75.4609 162.89 cv
79.8089 154.19 85.1494 146.125 91.4203 146.125 cv
93.1133 146.125 94.8751 146.713 96.7023 148.036 cv
97.3446 148.469 97.9994 148.98 98.673 149.57 cv
105.441 156.126 114.037 170.532 112.724 178.893 cv
111.016 189.521 98.7613 195.478 86.2985 195.478 cv
.996078 .662745 .968627 rgb
f
120.907 192.633 mo
120.904 192.633 120.923 192.586 120.952 192.518 cv
120.952 192.518 li
120.952 192.518 li
121.07 192.302 li
120.955 192.545 120.911 192.633 120.907 192.633 cv
f
121.07 192.302 mo
121.141 192.094 li
121.141 192.094 li
121.141 192.094 li
121.161 192.05 121.176 192.022 121.178 192.022 cv
121.182 192.022 121.154 192.098 121.07 192.302 cv
f
120.952 192.518 mo
121.005 192.392 121.091 192.199 121.141 192.094 cv
121.07 192.302 li
120.952 192.518 li
f
113.599 196.141 mo
112.438 196.141 111.21 195.987 109.957 195.672 cv
111.754 192.032 112.149 187.471 113.916 184.303 cv
115.363 182.029 116.886 180.163 117.825 177.686 cv
120.614 183.159 122.418 188.607 121.141 192.094 cv
121.141 192.094 li
121.141 192.094 li
121.091 192.199 121.005 192.392 120.952 192.518 cv
120.952 192.518 li
120.952 192.518 li
119.714 194.873 116.932 196.141 113.599 196.141 cv
f
800.473 229.322 mo
780.283 229.322 763.916 251.197 763.916 278.182 cv
763.916 305.166 780.283 327.041 800.473 327.041 cv
820.663 327.041 837.029 305.166 837.029 278.182 cv
837.029 251.197 820.663 229.322 800.473 229.322 cv
.894118 .356863 .85098 rgb
f
764.461 286.629 mo
764.46 286.625 764.459 286.62 764.459 286.616 cv
764.459 286.621 764.46 286.624 764.461 286.629 cv
764.452 286.566 mo
764.451 286.556 764.45 286.546 764.448 286.536 cv
764.45 286.547 764.451 286.555 764.452 286.566 cv
764.444 286.505 mo
764.442 286.489 764.44 286.473 764.438 286.457 cv
764.44 286.474 764.442 286.487 764.444 286.505 cv
764.437 286.444 mo
764.094 283.758 763.916 280.998 763.916 278.182 cv
763.916 277.421 763.929 276.665 763.955 275.913 cv
763.929 276.665 763.916 277.421 763.916 278.182 cv
763.916 280.998 764.094 283.758 764.437 286.444 cv
763.956 275.872 mo
763.957 275.861 763.957 275.85 763.957 275.839 cv
763.957 275.851 763.957 275.861 763.956 275.872 cv
.541176 .568627 .964706 rgb
f
801.089 323.409 mo
801.088 323.409 801.087 323.409 801.086 323.409 cv
798.701 323.409 796.261 323.144 793.805 322.591 cv
793.768 322.583 793.733 322.575 793.696 322.567 cv
793.685 322.564 793.673 322.561 793.662 322.559 cv
793.628 322.551 793.594 322.543 793.56 322.535 cv
793.56 322.535 li
786.539 321.131 780.322 317.779 775.034 313.267 cv
769.613 306.244 765.813 296.999 764.461 286.629 cv
764.46 286.624 764.459 286.621 764.459 286.616 cv
764.457 286.599 764.455 286.583 764.452 286.566 cv
764.451 286.555 764.45 286.547 764.448 286.536 cv
764.447 286.525 764.446 286.515 764.444 286.505 cv
764.442 286.487 764.44 286.474 764.438 286.457 cv
764.438 286.453 764.437 286.448 764.437 286.444 cv
764.094 283.758 763.916 280.998 763.916 278.182 cv
763.916 277.421 763.929 276.665 763.955 275.913 cv
763.955 275.899 763.956 275.886 763.956 275.872 cv
763.957 275.861 763.957 275.851 763.957 275.839 cv
764.003 274.552 764.086 273.278 764.205 272.018 cv
765.742 277.356 768.122 282.589 770.36 287.384 cv
774.539 296.206 782.549 303.034 791.659 304.832 cv
791.148 305.002 790.662 305.131 790.24 305.225 cv
789.791 305.325 789.414 305.391 789.148 305.425 cv
788.883 305.462 788.732 305.482 788.732 305.482 cv
788.732 305.482 788.884 305.48 789.153 305.476 cv
789.421 305.474 789.806 305.454 790.27 305.408 cv
790.916 305.344 791.719 305.218 792.558 304.992 cv
793.818 305.193 795.097 305.298 796.388 305.298 cv
797.081 305.298 797.778 305.268 798.477 305.206 cv
799.04 305.573 799.61 305.889 800.167 306.147 cv
800.453 306.278 800.735 306.392 801.011 306.493 cv
801.093 309.2 801.152 311.987 801.178 314.812 cv
801.185 315.518 801.189 316.227 801.191 316.937 cv
801.194 317.815 801.194 318.695 801.19 319.576 cv
801.185 320.853 801.172 322.132 801.148 323.409 cv
801.132 323.409 801.115 323.409 801.099 323.409 cv
801.095 323.409 801.092 323.409 801.089 323.409 cv
803.724 323.301 mo
803.679 322.041 803.626 320.781 803.563 319.525 cv
803.515 318.52 803.46 317.52 803.402 316.522 cv
804.639 316.153 805.927 315.56 807.125 314.756 cv
807.823 314.304 808.48 313.77 809.122 313.216 cv
809.751 312.648 810.356 312.048 810.917 311.417 cv
811.277 311.013 811.615 310.598 811.942 310.18 cv
812.191 309.862 812.43 309.542 812.659 309.22 cv
813.547 307.973 814.296 306.71 814.895 305.536 cv
815.357 305.706 815.905 305.819 816.457 305.819 cv
816.593 305.819 816.73 305.812 816.866 305.797 cv
817.698 305.728 818.437 305.345 818.866 304.961 cv
818.982 304.876 819.064 304.768 819.146 304.688 cv
819.336 304.458 li
819.434 304.327 819.489 304.252 819.489 304.252 cv
819.489 304.252 819.42 304.314 819.299 304.424 cv
819.184 304.536 818.994 304.673 818.759 304.81 cv
818.359 305.044 817.783 305.222 817.185 305.222 cv
817.077 305.222 816.968 305.216 816.859 305.204 cv
816.279 305.153 815.73 304.942 815.308 304.692 cv
815.456 304.377 815.594 304.07 815.72 303.775 cv
816.197 302.66 816.513 301.705 816.709 301.034 cv
816.812 300.7 816.876 300.433 816.923 300.252 cv
816.969 300.071 816.994 299.975 816.994 299.975 cv
816.994 299.975 816.96 300.069 816.897 300.244 cv
816.834 300.42 816.746 300.678 816.612 301 cv
816.356 301.648 815.957 302.562 815.385 303.615 cv
815.242 303.879 815.088 304.153 814.924 304.433 cv
814.756 304.719 814.576 305.013 814.387 305.312 cv
814.024 305.883 813.624 306.473 813.185 307.067 cv
812.898 307.455 812.588 307.843 812.269 308.229 cv
811.863 307.114 811.493 305.803 811.248 304.473 cv
810.973 303.071 810.812 301.663 810.71 300.491 cv
814.903 297.478 818.257 293.529 820.626 288.791 cv
828.008 272.621 827.305 253.992 819.22 238.174 cv
818.696 237.102 818.141 236.036 817.557 234.979 cv
825.62 240.686 831.891 250.309 834.959 261.951 cv
834.959 261.951 li
834.959 261.951 li
835.783 266.536 836.215 271.18 836.215 275.81 cv
836.217 286.09 834.094 296.302 829.414 305.663 cv
829.387 305.718 829.36 305.773 829.333 305.827 cv
824.427 315.769 814.778 322.387 803.724 323.301 cv
803.282 314.541 mo
803.118 311.97 802.929 309.434 802.724 306.965 cv
802.66 306.196 802.594 305.436 802.528 304.681 cv
802.523 304.62 802.517 304.56 802.512 304.499 cv
803.747 304.173 804.984 303.743 806.214 303.202 cv
807.709 302.455 809.126 301.609 810.459 300.67 cv
810.464 301.818 810.509 303.18 810.661 304.561 cv
810.818 306.147 811.152 307.749 811.553 309.06 cv
811.082 309.585 810.588 310.1 810.067 310.589 cv
809.482 311.138 808.863 311.649 808.233 312.124 cv
807.592 312.582 806.949 313.018 806.286 313.367 cv
805.272 313.925 804.243 314.308 803.282 314.541 cv
.788235 .298039 .819608 rgb
f
800.473 327.041 mo
800.453 327.041 800.433 327.041 800.414 327.041 cv
800.434 327.041 800.453 327.041 800.473 327.041 cv
800.667 327.041 800.862 327.039 801.056 327.035 cv
801.056 327.035 li
800.862 327.039 800.667 327.041 800.473 327.041 cv
800.393 327.041 mo
800.38 327.041 800.369 327.041 800.356 327.041 cv
800.368 327.041 800.381 327.041 800.393 327.041 cv
800.326 327.041 mo
800.316 327.041 800.307 327.041 800.298 327.041 cv
800.306 327.041 800.317 327.041 800.326 327.041 cv
800.269 327.04 mo
800.259 327.04 800.249 327.04 800.239 327.04 cv
800.249 327.04 800.259 327.04 800.269 327.04 cv
800.212 327.04 mo
800.201 327.04 800.191 327.04 800.18 327.04 cv
800.19 327.04 800.202 327.04 800.212 327.04 cv
800.153 327.039 mo
800.143 327.039 800.132 327.039 800.122 327.039 cv
800.132 327.039 800.143 327.039 800.153 327.039 cv
800.09 327.039 mo
800.081 327.038 800.073 327.038 800.064 327.038 cv
800.073 327.038 800.082 327.038 800.09 327.039 cv
800.031 327.038 mo
800.023 327.038 800.014 327.037 800.006 327.037 cv
800.013 327.037 800.024 327.038 800.031 327.038 cv
799.972 327.037 mo
799.964 327.037 799.956 327.036 799.948 327.036 cv
799.955 327.036 799.965 327.037 799.972 327.037 cv
799.914 327.036 mo
799.906 327.035 799.898 327.035 799.89 327.035 cv
799.898 327.035 799.906 327.035 799.914 327.036 cv
799.854 327.034 mo
799.846 327.034 799.84 327.034 799.832 327.034 cv
799.839 327.034 799.847 327.034 799.854 327.034 cv
799.795 327.033 mo
799.788 327.033 799.781 327.033 799.774 327.032 cv
799.78 327.033 799.789 327.033 799.795 327.033 cv
799.735 327.031 mo
799.728 327.031 799.723 327.031 799.717 327.031 cv
799.723 327.031 799.729 327.031 799.735 327.031 cv
799.675 327.03 mo
799.67 327.03 799.665 327.03 799.659 327.029 cv
799.666 327.03 799.669 327.03 799.675 327.03 cv
799.616 327.028 mo
799.611 327.028 799.606 327.028 799.602 327.028 cv
799.607 327.028 799.611 327.028 799.616 327.028 cv
799.558 327.026 mo
799.553 327.026 799.549 327.026 799.544 327.026 cv
799.549 327.026 799.554 327.026 799.558 327.026 cv
799.499 327.024 mo
799.495 327.024 799.49 327.024 799.487 327.024 cv
799.492 327.024 799.494 327.024 799.499 327.024 cv
799.44 327.022 mo
799.437 327.022 799.433 327.022 799.429 327.022 cv
799.433 327.022 799.437 327.022 799.44 327.022 cv
799.382 327.02 mo
799.379 327.02 799.375 327.02 799.372 327.019 cv
799.376 327.02 799.378 327.02 799.382 327.02 cv
799.324 327.018 mo
799.321 327.017 799.318 327.017 799.315 327.017 cv
799.317 327.017 799.321 327.017 799.324 327.018 cv
799.263 327.015 mo
799.262 327.015 799.261 327.015 799.259 327.015 cv
799.261 327.015 799.261 327.015 799.263 327.015 cv
799.206 327.012 mo
799.205 327.012 799.202 327.012 799.201 327.012 cv
799.203 327.012 799.205 327.012 799.206 327.012 cv
799.146 327.01 mo
799.145 327.01 li
799.147 327.01 799.145 327.01 799.146 327.01 cv
799.089 327.007 mo
799.088 327.007 li
799.089 327.007 li
.576471 .623529 .980392 rgb
f
800.473 327.041 mo
800.453 327.041 800.434 327.041 800.414 327.041 cv
800.407 327.041 800.4 327.041 800.393 327.041 cv
800.381 327.041 800.368 327.041 800.356 327.041 cv
800.346 327.041 800.336 327.041 800.326 327.041 cv
800.317 327.041 800.306 327.041 800.298 327.041 cv
800.289 327.041 800.278 327.041 800.269 327.04 cv
800.259 327.04 800.249 327.04 800.239 327.04 cv
800.23 327.04 800.221 327.04 800.212 327.04 cv
800.202 327.04 800.19 327.04 800.18 327.04 cv
800.171 327.04 800.162 327.039 800.153 327.039 cv
800.143 327.039 800.132 327.039 800.122 327.039 cv
800.112 327.039 800.101 327.039 800.09 327.039 cv
800.082 327.038 800.073 327.038 800.064 327.038 cv
800.053 327.038 800.042 327.038 800.031 327.038 cv
800.024 327.038 800.013 327.037 800.006 327.037 cv
799.995 327.037 799.984 327.037 799.972 327.037 cv
799.965 327.037 799.955 327.036 799.948 327.036 cv
799.936 327.036 799.926 327.036 799.914 327.036 cv
799.906 327.035 799.898 327.035 799.89 327.035 cv
799.878 327.035 799.866 327.035 799.854 327.034 cv
799.847 327.034 799.839 327.034 799.832 327.034 cv
799.82 327.034 799.807 327.033 799.795 327.033 cv
799.789 327.033 799.78 327.033 799.774 327.032 cv
799.762 327.032 799.748 327.032 799.735 327.031 cv
799.729 327.031 799.723 327.031 799.717 327.031 cv
799.703 327.031 799.689 327.03 799.675 327.03 cv
799.669 327.03 799.666 327.03 799.659 327.029 cv
799.644 327.029 799.631 327.028 799.616 327.028 cv
799.611 327.028 799.607 327.028 799.602 327.028 cv
799.588 327.027 799.573 327.027 799.558 327.026 cv
799.554 327.026 799.549 327.026 799.544 327.026 cv
799.529 327.025 799.514 327.025 799.499 327.024 cv
799.494 327.024 799.492 327.024 799.487 327.024 cv
799.471 327.023 799.456 327.023 799.44 327.022 cv
799.437 327.022 799.433 327.022 799.429 327.022 cv
799.413 327.021 799.398 327.02 799.382 327.02 cv
799.378 327.02 799.376 327.02 799.372 327.019 cv
799.356 327.019 799.34 327.018 799.324 327.018 cv
799.321 327.017 799.317 327.017 799.315 327.017 cv
799.298 327.016 799.28 327.016 799.263 327.015 cv
799.261 327.015 799.261 327.015 799.259 327.015 cv
799.241 327.014 799.224 327.013 799.206 327.012 cv
799.205 327.012 799.203 327.012 799.201 327.012 cv
799.183 327.011 799.165 327.01 799.146 327.01 cv
799.145 327.01 799.147 327.01 799.145 327.01 cv
799.126 327.009 799.108 327.008 799.089 327.007 cv
799.088 327.007 li
789.749 326.542 781.306 321.392 775.034 313.267 cv
780.322 317.779 786.539 321.131 793.56 322.535 cv
793.56 322.535 li
793.594 322.543 793.628 322.551 793.662 322.559 cv
793.673 322.561 793.685 322.564 793.696 322.567 cv
793.733 322.575 793.768 322.583 793.805 322.591 cv
796.262 323.144 798.7 323.409 801.086 323.409 cv
801.087 323.409 801.088 323.409 801.089 323.409 cv
801.089 323.409 li
801.089 323.409 li
801.092 323.409 801.095 323.409 801.099 323.409 cv
801.115 323.409 801.132 323.409 801.148 323.409 cv
801.126 324.62 801.096 325.831 801.056 327.035 cv
800.862 327.039 800.667 327.041 800.473 327.041 cv
.839216 .32549 .835294 rgb
f
837.029 278.182 mo
837.029 278.157 837.029 278.134 837.029 278.109 cv
837.029 278.133 837.029 278.158 837.029 278.182 cv
837.029 278.083 mo
837.029 278.068 837.029 278.051 837.029 278.036 cv
837.029 278.052 837.029 278.067 837.029 278.083 cv
837.029 278.003 mo
837.029 277.99 837.029 277.978 837.029 277.964 cv
837.029 277.977 837.029 277.99 837.029 278.003 cv
837.029 277.928 mo
837.029 277.916 837.029 277.907 837.029 277.895 cv
837.029 277.906 837.029 277.917 837.029 277.928 cv
837.029 277.851 mo
837.029 277.846 837.029 277.841 837.029 277.836 cv
837.029 277.841 837.029 277.846 837.029 277.851 cv
.803922 .815686 .980392 rgb
f
803.824 326.839 mo
803.799 325.662 803.766 324.481 803.724 323.301 cv
814.779 322.388 824.426 315.77 829.333 305.827 cv
829.36 305.773 829.387 305.718 829.414 305.663 cv
834.094 296.302 836.217 286.09 836.215 275.81 cv
836.215 271.18 835.783 266.536 834.959 261.951 cv
836.27 266.927 837 272.269 837.029 277.836 cv
837.029 277.841 837.029 277.846 837.029 277.851 cv
837.029 277.866 837.029 277.881 837.029 277.895 cv
837.029 277.907 837.029 277.916 837.029 277.928 cv
837.029 277.94 837.029 277.952 837.029 277.964 cv
837.029 277.978 837.029 277.99 837.029 278.003 cv
837.029 278.014 837.029 278.025 837.029 278.036 cv
837.029 278.051 837.029 278.068 837.029 278.083 cv
837.029 278.091 837.029 278.1 837.029 278.109 cv
837.029 278.134 837.029 278.157 837.029 278.182 cv
837.029 278.182 li
837.029 281.532 836.777 284.803 836.297 287.963 cv
835.997 289.935 835.609 291.863 835.137 293.741 cv
830.616 311.739 818.467 325.06 803.824 326.839 cv
.839216 .32549 .835294 rgb
f
803.724 323.301 mo
803.724 323.301 li
814.778 322.387 824.427 315.769 829.333 305.827 cv
824.426 315.77 814.779 322.388 803.724 323.301 cv
836.215 275.81 mo
836.215 271.18 835.783 266.536 834.959 261.951 cv
834.959 261.951 li
835.783 266.536 836.215 271.18 836.215 275.81 cv
.741176 .27451 .803922 rgb
f
818.759 304.81 mo
818.287 305.086 817.569 305.284 816.859 305.204 cv
816.279 305.153 815.73 304.942 815.308 304.692 cv
815.456 304.377 815.594 304.07 815.72 303.775 cv
816.197 302.66 816.513 301.705 816.709 301.034 cv
816.812 300.7 816.876 300.433 816.923 300.252 cv
816.969 300.071 816.994 299.975 816.994 299.975 cv
816.994 299.975 816.96 300.069 816.897 300.244 cv
816.834 300.42 816.746 300.678 816.612 301 cv
816.356 301.648 815.957 302.562 815.385 303.615 cv
815.242 303.879 815.088 304.153 814.924 304.433 cv
814.756 304.719 814.576 305.013 814.387 305.312 cv
814.024 305.883 813.624 306.473 813.185 307.067 cv
812.898 307.455 812.588 307.843 812.269 308.229 cv
811.863 307.114 811.493 305.803 811.248 304.473 cv
810.91 302.749 810.744 301.015 810.649 299.723 cv
810.556 298.429 810.525 297.573 810.525 297.573 cv
810.525 297.573 810.482 298.428 810.464 299.729 cv
810.447 301.029 810.465 302.78 810.661 304.561 cv
810.818 306.147 811.152 307.749 811.553 309.06 cv
811.082 309.585 810.588 310.1 810.067 310.589 cv
809.482 311.138 808.863 311.649 808.233 312.124 cv
807.592 312.582 806.949 313.018 806.286 313.367 cv
805.272 313.925 804.243 314.308 803.282 314.541 cv
803.118 311.97 802.929 309.434 802.724 306.965 cv
802.66 306.196 802.594 305.436 802.528 304.681 cv
802.031 299.056 801.467 293.846 800.965 289.459 cv
800.484 285.423 800.087 282.076 799.808 279.738 cv
799.525 277.401 799.364 276.073 799.364 276.073 cv
799.364 276.073 799.706 281.414 800.226 289.523 cv
800.262 290.139 800.299 290.775 800.336 291.422 cv
800.223 291.385 li
800.118 291.349 800.009 291.292 799.885 291.241 cv
799.41 291.004 798.841 290.55 798.397 289.965 cv
797.939 289.393 797.59 288.732 797.354 288.231 cv
797.12 287.727 796.992 287.38 796.992 287.38 cv
796.992 287.38 797.048 287.744 797.179 288.292 cv
797.313 288.839 797.528 289.575 797.896 290.284 cv
798.246 290.999 798.792 291.666 799.347 292.086 cv
799.491 292.183 799.622 292.281 799.752 292.354 cv
799.885 292.424 800.005 292.487 800.108 292.54 cv
800.23 292.589 800.329 292.626 800.405 292.654 cv
800.602 296.191 800.794 300.131 800.939 304.297 cv
800.916 304.29 li
799.96 303.957 798.897 303.434 797.86 302.708 cv
797.683 302.585 797.508 302.451 797.333 302.319 cv
797.051 302.107 796.773 301.885 796.498 301.651 cv
795.936 301.172 795.388 300.656 794.868 300.11 cv
794.822 300.06 li
795.141 299.376 795.362 298.563 795.443 297.768 cv
795.572 296.72 795.531 295.703 795.494 294.951 cv
795.452 294.2 795.411 293.707 795.411 293.707 cv
795.411 293.707 795.37 294.2 795.308 294.948 cv
795.235 295.692 795.125 296.694 794.86 297.656 cv
794.704 298.279 794.46 298.868 794.179 299.358 cv
792.621 297.589 791.346 295.671 790.453 294.151 cv
789.939 293.281 789.548 292.537 789.282 292.013 cv
789.015 291.49 788.873 291.188 788.873 291.188 cv
788.873 291.188 788.981 291.504 789.189 292.055 cv
789.396 292.606 789.704 293.391 790.123 294.321 cv
790.882 296.009 792.009 298.183 793.506 300.257 cv
793.657 300.465 793.807 300.674 793.965 300.881 cv
794.154 301.116 li
794.581 301.66 795.034 302.188 795.512 302.69 cv
794.929 303.203 794.208 303.709 793.419 304.097 cv
792.322 304.666 791.137 305.026 790.24 305.225 cv
789.791 305.325 789.414 305.391 789.148 305.425 cv
788.883 305.462 788.732 305.482 788.732 305.482 cv
788.732 305.482 788.884 305.48 789.153 305.476 cv
789.421 305.474 789.806 305.454 790.27 305.408 cv
791.195 305.316 792.442 305.098 793.656 304.64 cv
794.561 304.322 795.43 303.849 796.15 303.337 cv
796.385 303.561 796.622 303.781 796.864 303.989 cv
797.918 304.904 799.067 305.637 800.167 306.147 cv
800.453 306.278 800.735 306.392 801.011 306.493 cv
801.093 309.2 801.152 311.987 801.178 314.812 cv
801.185 315.518 801.189 316.227 801.191 316.937 cv
801.194 317.815 801.194 318.695 801.19 319.576 cv
801.149 330.626 800.426 341.863 798.818 350.459 cv
798.037 354.759 797.066 358.388 796.144 361.051 cv
796.031 361.385 795.923 361.706 795.819 362.014 cv
795.701 362.313 795.589 362.6 795.481 362.873 cv
795.263 363.415 795.088 363.914 794.899 364.332 cv
794.519 365.164 794.25 365.767 794.104 366.107 cv
798.405 368.119 li
798.571 367.736 798.859 367.047 799.25 366.093 cv
799.445 365.615 799.617 365.062 799.834 364.451 cv
799.94 364.145 800.05 363.824 800.166 363.488 cv
800.265 363.149 800.367 362.795 800.475 362.427 cv
801.349 359.484 802.189 355.585 802.776 351.078 cv
803.996 342.061 804.115 330.648 803.563 319.525 cv
803.515 318.52 803.46 317.52 803.402 316.522 cv
804.639 316.153 805.927 315.56 807.125 314.756 cv
807.823 314.304 808.48 313.77 809.122 313.216 cv
809.751 312.648 810.356 312.048 810.917 311.417 cv
811.277 311.013 811.615 310.598 811.942 310.18 cv
812.191 309.862 812.43 309.542 812.659 309.22 cv
813.547 307.973 814.296 306.71 814.895 305.536 cv
815.472 305.748 816.182 305.872 816.866 305.797 cv
817.698 305.728 818.437 305.345 818.866 304.961 cv
818.982 304.876 819.064 304.768 819.146 304.688 cv
819.336 304.458 li
819.434 304.327 819.489 304.252 819.489 304.252 cv
819.489 304.252 819.42 304.314 819.299 304.424 cv
819.184 304.536 818.994 304.673 818.759 304.81 cv
.341176 .156863 .180392 rgb
f
781.604 266.951 mo
775.109 266.95 773.969 260.009 776.517 253.301 cv
779.083 246.549 783.689 238.36 791.201 236.444 cv
791.749 236.305 792.313 236.198 792.893 236.128 cv
793.307 236.078 793.724 236.054 794.144 236.054 cv
799.824 236.054 805.679 240.557 804.575 246.938 cv
803.002 256.034 793.926 263.657 785.46 266.292 cv
784.008 266.744 782.727 266.951 781.604 266.951 cv
.933333 .486274 .898039 rgb
f
810.245 253.641 mo
810.242 253.641 810.273 253.554 810.312 253.449 cv
810.312 253.449 li
810.372 253.32 li
810.282 253.555 810.247 253.641 810.245 253.641 cv
f
810.372 253.32 mo
810.405 253.198 li
810.405 253.198 li
810.435 253.118 810.458 253.06 810.46 253.06 cv
810.462 253.06 810.439 253.13 810.372 253.32 cv
f
810.312 253.449 mo
810.405 253.198 li
810.372 253.32 li
810.312 253.449 li
f
802.582 259.498 mo
803.806 256.478 804.099 253.184 805.411 250.219 cv
806.486 248.003 807.658 245.92 808.44 243.563 cv
810.45 246.219 811.483 249.953 810.405 253.198 cv
810.405 253.198 li
810.312 253.449 li
810.312 253.449 li
809.023 256.627 805.912 258.894 802.582 259.498 cv
f
24.0985 351.934 mo
24.0985 353.987 24.4215 356.182 24.9862 358.455 cv
69.2188 358.455 li
69.7501 356.205 70.0529 354.014 70.0529 351.934 cv
70.0529 333.732 47.0756 307.005 47.0756 307.005 cv
47.0756 307.005 24.0985 332.119 24.0985 351.934 cv
.670588 .356863 .847059 rgb
f
36.1631 346.454 mo
36.1631 346.454 36.0471 345.973 35.8851 345.145 cv
35.726 344.318 35.4771 343.127 35.4696 341.764 cv
35.2554 339.002 35.8448 335.52 36.9769 332.993 cv
38.1668 330.491 40.4288 327.886 42.4922 326.151 cv
43.4781 325.24 44.4656 324.569 45.1364 324.07 cv
45.8215 323.593 46.2361 323.304 46.2361 323.304 cv
46.2361 323.304 46.0732 323.799 45.806 324.61 cv
45.5415 325.421 45.1132 326.505 44.7223 327.763 cv
43.821 330.228 42.9665 333.229 41.965 335.31 cv
41.6669 335.904 41.4085 336.527 41.0665 337.132 cv
40.7316 337.739 40.3585 338.343 40.0548 338.962 cv
39.7275 339.575 39.3782 340.179 39.0232 340.765 cv
38.7104 341.366 38.4085 341.948 38.1251 342.493 cv
37.4857 343.585 37.0907 344.586 36.7318 345.301 cv
36.3758 346.023 36.1631 346.454 36.1631 346.454 cv
.823529 .521569 .921569 rgb
f
154.403 345.809 mo
154.403 348.97 154.956 352.406 155.891 355.963 cv
202.666 355.963 li
203.552 352.448 204.072 349.02 204.072 345.809 cv
204.072 323.572 179.237 290.919 179.237 290.919 cv
179.237 290.919 154.403 321.601 154.403 345.809 cv
.596078 .231373 .678431 rgb
f
171.379 323.317 mo
167.081 323.317 170.71 309.316 175.31 308.178 cv
175.798 308.057 176.238 308.001 176.634 308.001 cv
182.81 308.001 178.161 321.832 171.911 323.254 cv
171.722 323.297 171.544 323.318 171.379 323.317 cv
.713725 .298039 .780392 rgb
f
588.831 309.379 mo
588.831 309.379 564.158 331.353 564.158 348.691 cv
564.158 350.954 564.708 353.415 565.637 355.963 cv
612.107 355.963 li
612.987 353.446 613.504 350.99 613.504 348.691 cv
613.504 332.765 588.831 309.379 588.831 309.379 cv
.596078 .231373 .678431 rgb
f
581.024 332.582 mo
576.754 332.582 580.359 322.555 584.93 321.74 cv
585.414 321.654 585.851 321.613 586.245 321.613 cv
592.38 321.613 587.762 331.518 581.553 332.537 cv
581.365 332.568 581.189 332.582 581.024 332.582 cv
.713725 .298039 .780392 rgb
f
900 480 mo
900 352.667 li
0 352.667 li
0 480 li
900 480 li
.380392 .466667 1 rgb
f
900 480 mo
900 358.318 li
0 358.318 li
0 480 li
900 480 li
.180392 .184314 .403922 rgb
f
67.8967 480 mo
0 480 li
0 387.128 li
13.6736 387.435 29.4683 388.29 46.9999 389.544 cv
44.7495 392.097 42.4225 394.585 40.0073 397 cv
40.0073 397 li
40.0073 397 li
49.8978 424.316 58.4733 452.293 67.8967 480 cv
.160784 .152941 .392157 rgb
f
46.9999 389.544 mo
29.4683 388.29 13.6736 387.435 0 387.128 cv
0 358.318 li
69.7972 358.318 li
62.9157 369.324 55.5083 379.894 46.9999 389.544 cv
.141176 .129412 .380392 rgb
f
120.695 480 mo
67.8967 480 li
58.4733 452.293 49.8978 424.316 40.0073 397 cv
42.4225 394.585 44.7495 392.097 46.9999 389.544 cv
65.0925 390.839 85.0265 392.557 106.344 394.531 cv
112.056 409.844 118.296 424.999 125.007 440 cv
123.297 453.4 121.917 466.717 120.695 480 cv
.176471 .180392 .403922 rgb
f
106.344 394.531 mo
85.0265 392.557 65.0925 390.839 46.9999 389.544 cv
55.5083 379.894 62.9157 369.324 69.7972 358.318 cv
93.9405 358.318 li
93.9405 358.318 li
97.7328 370.483 101.877 382.556 106.344 394.531 cv
.160784 .14902 .392157 rgb
f
189.506 480 mo
120.695 480 li
121.917 466.717 123.297 453.4 125.007 440 cv
125.007 440 li
118.296 424.999 112.056 409.844 106.344 394.531 cv
138.321 397.492 173.442 401.033 210.15 404.584 cv
201.361 429.162 194.193 454.383 189.506 480 cv
.160784 .152941 .392157 rgb
f
210.15 404.584 mo
173.442 401.033 138.321 397.492 106.344 394.531 cv
101.877 382.556 97.7328 370.483 93.9405 358.318 cv
93.9405 358.318 li
212.5 358.318 li
212.5 358.318 li
215.209 363.763 218.317 369.018 222.007 374 cv
217.812 384.068 213.838 394.27 210.15 404.584 cv
.141176 .129412 .380392 rgb
f
283.766 480 mo
189.506 480 li
194.193 454.383 201.361 429.162 210.15 404.584 cv
236.669 407.15 264.005 409.72 291.632 412.087 cv
287.647 434.491 285.025 457.22 283.766 480 cv
.176471 .180392 .403922 rgb
f
291.632 412.087 mo
264.005 409.72 236.669 407.15 210.15 404.584 cv
213.838 394.27 217.812 384.068 222.007 374 cv
222.007 374 li
222.007 374 li
218.317 369.018 215.209 363.763 212.5 358.318 cv
259.426 358.318 li
259.426 358.318 li
268.876 376.461 279.051 394.099 292.007 410 cv
291.881 410.696 291.756 411.39 291.632 412.087 cv
.160784 .14902 .392157 rgb
f
371.134 480 mo
283.766 480 li
285.025 457.22 287.647 434.491 291.632 412.087 cv
309.339 413.604 327.164 415.036 344.941 416.328 cv
353.505 437.602 362.136 458.842 371.134 480 cv
.160784 .152941 .392157 rgb
f
344.941 416.328 mo
327.164 415.036 309.339 413.604 291.632 412.087 cv
291.756 411.39 291.881 410.696 292.007 410 cv
292.007 410 li
279.051 394.099 268.876 376.461 259.426 358.318 cv
259.426 358.318 li
321.55 358.318 li
321.55 358.318 li
329.44 377.656 337.163 397.007 344.941 416.328 cv
.141176 .129412 .380392 rgb
f
435.705 480 mo
371.134 480 li
362.136 458.842 353.505 437.602 344.941 416.328 cv
374.757 418.495 404.453 420.266 433.333 421.377 cv
429.499 431.198 425.683 441.054 422.007 451 cv
422.007 451 li
422.007 451 li
427.986 459.793 431.986 469.822 435.705 480 cv
.176471 .180392 .403922 rgb
f
433.333 421.377 mo
404.453 420.266 374.757 418.495 344.941 416.328 cv
337.163 397.007 329.44 377.656 321.55 358.318 cv
456.976 358.318 li
449.794 379.582 441.522 400.404 433.333 421.377 cv
.160784 .14902 .392157 rgb
f
619.738 480 mo
584.619 480 li
592.39 460.356 600.709 440.968 610.007 422 cv
610.007 422 li
610.007 422 li
609.457 420.349 608.899 418.698 608.337 417.047 cv
619.388 416.024 630.493 414.897 641.627 413.695 cv
634.794 435.933 627.173 457.946 619.738 480 cv
.160784 .152941 .392157 rgb
f
608.337 417.047 mo
601.775 397.775 594.603 378.441 591.537 358.318 cv
611.395 358.318 li
611.395 358.318 li
622.315 372.379 634.297 385.693 646.007 399 cv
644.592 403.912 643.129 408.808 641.627 413.695 cv
630.493 414.897 619.388 416.024 608.337 417.047 cv
.141176 .129412 .380392 rgb
f
584.619 480 mo
522.04 480 li
518.385 460.632 513.904 441.455 508.431 422.587 cv
514.05 422.529 519.612 422.43 525.096 422.29 cv
551.952 421.605 579.94 419.674 608.337 417.047 cv
608.899 418.698 609.457 420.349 610.007 422 cv
600.709 440.968 592.39 460.356 584.619 480 cv
.176471 .180392 .403922 rgb
f
508.431 422.587 mo
506.721 416.693 504.915 410.83 503.007 405 cv
510.094 390.181 516.34 374.529 520.697 358.318 cv
520.697 358.318 li
520.697 358.318 li
591.537 358.318 li
594.603 378.441 601.775 397.775 608.337 417.047 cv
579.94 419.674 551.952 421.605 525.096 422.29 cv
519.612 422.43 514.05 422.529 508.431 422.587 cv
.160784 .14902 .392157 rgb
f
783.962 480 mo
662.004 480 li
676.446 459.851 691.342 440.042 706.007 420 cv
706.143 415.374 706.223 410.749 706.242 406.126 cv
726.154 403.669 745.867 401.178 765.129 398.841 cv
771.709 406.21 778.66 413.282 786.007 420 cv
784.982 440 784.477 460 783.962 480 cv
.160784 .152941 .392157 rgb
f
706.242 406.126 mo
706.245 405.432 706.247 404.737 706.247 404.044 cv
706.25 388.739 705.577 373.467 704.055 358.318 cv
734.209 358.318 li
734.209 358.318 li
743.515 372.519 753.771 386.122 765.129 398.841 cv
745.867 401.178 726.154 403.669 706.242 406.126 cv
.141176 .129412 .380392 rgb
f
856.772 480 mo
783.962 480 li
784.477 460 784.982 440 786.007 420 cv
786.007 420 li
786.007 420 li
778.66 413.282 771.709 406.21 765.129 398.841 cv
793.381 395.414 820.668 392.321 846.21 390.156 cv
856.241 400.512 866.752 410.504 878.007 420 cv
870.83 439.936 863.505 459.874 856.772 480 cv
.176471 .180392 .403922 rgb
f
765.129 398.841 mo
753.771 386.122 743.515 372.519 734.209 358.318 cv
817.464 358.318 li
817.464 358.318 li
826.742 369.204 836.238 379.86 846.21 390.156 cv
820.668 392.321 793.381 395.414 765.129 398.841 cv
.160784 .14902 .392157 rgb
f
900 480 mo
856.772 480 li
856.772 480 li
900 480 li
900 387.113 li
900 387.113 li
900 358.318 li
900 480 li
.881569 .833725 .968627 rgb
f
900 480 mo
856.772 480 li
863.505 459.874 870.83 439.936 878.007 420 cv
878.007 420 li
866.752 410.504 856.241 400.512 846.21 390.156 cv
865.214 388.545 883.249 387.449 900 387.113 cv
900 480 li
.160784 .152941 .392157 rgb
f
846.21 390.156 mo
836.238 379.86 826.742 369.204 817.464 358.318 cv
817.464 358.318 li
900 358.318 li
900 387.113 li
883.249 387.449 865.214 388.545 846.21 390.156 cv
.141176 .129412 .380392 rgb
f
662.004 480 mo
619.738 480 li
627.173 457.946 634.794 435.933 641.627 413.695 cv
663.191 411.369 684.836 408.767 706.242 406.126 cv
706.223 410.749 706.143 415.374 706.007 420 cv
691.342 440.042 676.446 459.851 662.004 480 cv
.176471 .180392 .403922 rgb
f
641.627 413.695 mo
643.129 408.808 644.592 403.912 646.007 399 cv
646.007 399 li
646.007 399 li
634.297 385.693 622.315 372.379 611.395 358.318 cv
704.055 358.318 li
705.577 373.467 706.25 388.739 706.247 404.044 cv
706.247 404.737 706.245 405.432 706.242 406.126 cv
684.836 408.767 663.191 411.369 641.627 413.695 cv
.160784 .14902 .392157 rgb
f
522.04 480 mo
435.705 480 li
431.986 469.822 427.986 459.793 422.007 451 cv
422.007 451 li
425.683 441.054 429.499 431.198 433.333 421.377 cv
454.548 422.194 475.328 422.655 495.373 422.655 cv
499.765 422.655 504.111 422.633 508.431 422.587 cv
513.904 441.455 518.385 460.632 522.04 480 cv
.160784 .152941 .392157 rgb
f
495.373 422.655 mo
475.328 422.655 454.548 422.194 433.333 421.377 cv
441.522 400.404 449.794 379.582 456.976 358.318 cv
520.697 358.318 li
516.34 374.529 510.094 390.181 503.007 405 cv
503.007 405 li
504.915 410.83 506.721 416.693 508.431 422.587 cv
504.111 422.633 499.765 422.655 495.373 422.655 cv
.141176 .129412 .380392 rgb
f
425.781 346.481 mo
426.505 339.963 423.747 333.751 416.729 338.184 cv
421.863 327.505 418.698 305.026 404.145 304.543 cv
386.672 303.964 381.421 329.248 382.674 342.207 cv
380.455 337.32 378.476 339.573 374.362 339.238 cv
371.915 339.038 368.701 342.558 368.701 342.558 cv
368.701 342.558 362.257 323.441 345.507 329.197 cv
339.88 331.131 327.754 338.971 330.201 345.73 cv
324.514 338.011 301.468 324.103 292.47 333.452 cv
285.94 340.237 298.055 353.622 304.626 356.564 cv
452.626 356.564 li
454.196 354.886 454.518 346.635 451.458 342.915 cv
443.889 333.712 433.041 341.775 425.781 346.481 cv
cp
.380392 .466667 1 rgb
f
660.97 341.497 mo
661.294 342.094 661.642 342.688 662.03 343.278 cv
661.707 342.651 661.35 342.062 660.97 341.497 cv
cp
f
660.97 341.497 mo
661.35 342.062 661.707 342.651 662.03 343.278 cv
661.642 342.688 661.294 342.094 660.97 341.497 cv
654.4 331.732 639.666 331.284 632.62 341.461 cv
625.172 333.956 619.106 328.557 608.442 334.716 cv
602.006 338.435 596.039 352.992 605.887 356.564 cv
684.887 356.564 li
694.361 350.078 691.409 329.723 688.537 321.084 cv
679.322 293.36 648.935 319.358 660.97 341.497 cv
cp
f
772.842 479.201 mo
773.866 469.992 769.969 461.217 760.054 467.479 cv
767.307 452.392 762.837 420.635 742.276 419.953 cv
717.591 419.134 710.172 454.854 711.944 473.162 cv
708.808 466.258 706.013 469.442 700.201 468.968 cv
696.743 468.685 695.25 474.147 692.203 473.658 cv
689.212 473.179 689.512 469.735 686.799 468.664 cv
673.045 463.23 668.935 453.205 651.996 459.723 cv
644.15 462.741 634.355 468.592 637.812 478.14 cv
629.777 467.235 597.219 447.586 584.507 460.794 cv
579.692 465.797 582.059 473.34 586.738 480 cv
811.743 480 li
811.22 477.772 810.377 475.694 809.118 474.164 cv
798.425 461.162 783.099 472.552 772.842 479.201 cv
cp
.2 .0823529 .372549 rgb
f
197.477 467.324 mo
198.964 461.668 199.963 449.124 194.412 444.899 cv
194.257 443.993 194.04 443.074 193.808 442.207 cv
193.165 439.861 192.34 438 192.34 438 cv
192.34 438 190.59 438.889 188.653 440.286 cv
188.003 440.748 187.334 441.287 186.702 441.876 cv
186.12 440.514 185.366 439.172 184.622 438.006 cv
183.131 435.663 181.674 434 181.674 434 cv
181.674 434 180.385 435.796 179.124 438.184 cv
177.864 440.58 176.631 443.544 176.758 446.108 cv
176.768 447.533 177.308 449.207 178.048 450.846 cv
175.502 453.797 173.377 457.164 172.02 460.022 cv
177.16 443.37 174.016 402.749 153.994 403.821 cv
149.603 404.056 145.837 405.804 142.632 408.647 cv
142.362 408.385 142.084 408.125 141.789 407.874 cv
141.435 407.575 141.075 407.278 140.688 407 cv
140.287 406.733 139.875 406.474 139.457 406.226 cv
138.619 405.73 137.767 405.27 136.914 404.867 cv
136.022 404.499 135.147 404.176 134.321 403.899 cv
132.701 403.306 131.127 403.076 130.063 402.893 cv
128.985 402.724 128.34 402.667 128.34 402.667 cv
128.34 402.667 128.578 403.249 128.978 404.228 cv
129.364 405.205 129.99 406.41 130.556 407.91 cv
130.855 408.639 131.179 409.391 131.53 410.134 cv
131.872 410.889 132.189 411.703 132.565 412.448 cv
133.339 413.915 134.069 415.453 135.075 416.606 cv
135.317 416.919 135.601 417.231 135.904 417.541 cv
127.472 433.335 125.82 459.162 128.156 475.473 cv
124.888 471.161 119.311 469.089 115.392 474.837 cv
107.439 455.236 83.911 459.389 78.1997 477.708 cv
75.6658 464.002 52.849 444.803 43.2699 462.033 cv
41.2904 465.593 40.5573 472.345 41.0235 480 cv
229.133 480 li
229.142 479.909 li
230.767 458.441 211.299 449.101 197.477 467.324 cv
cp
.219608 .0666667 .301961 rgb
f
439.807 458.419 mo
437.431 454.518 434.407 450.902 431.274 448.206 cv
428.148 445.487 425.01 443.705 422.725 442.702 cv
422.148 442.454 421.638 442.232 421.183 442.055 cv
420.72 441.898 420.323 441.763 419.999 441.653 cv
419.358 441.446 419.007 441.333 419.007 441.333 cv
419.007 441.333 419.197 441.639 419.546 442.199 cv
419.899 442.745 420.395 443.54 420.937 444.562 cv
422.048 446.58 423.338 449.44 424.35 452.704 cv
425.398 455.955 426.119 459.652 426.764 463.293 cv
427.381 466.961 427.906 470.613 428.659 473.879 cv
429.098 475.8 429.69 477.866 430.35 480 cv
445.793 480 li
445.778 476.68 445.454 473.329 444.739 470.18 cv
443.89 466.473 442.161 462.321 439.807 458.419 cv
cp
.32549 .164706 .4 rgb
f
425.967 473.374 mo
424.176 471.178 421.64 469.169 418.92 467.432 cv
416.191 465.718 413.267 464.27 410.612 463.124 cv
407.949 461.968 405.562 461.058 403.818 460.398 cv
402.066 459.734 401.007 459.333 401.007 459.333 cv
401.007 459.333 401.316 460.4 401.932 462.158 cv
402.561 463.89 403.522 466.294 404.712 468.893 cv
405.912 471.498 407.276 474.309 408.739 476.928 cv
409.32 477.998 409.922 479.019 410.533 480 cv
430.004 480 li
429.618 479.151 429.201 478.318 428.769 477.494 cv
427.911 476.037 427.013 474.579 425.967 473.374 cv
cp
f
453.312 462.362 mo
452.935 457.348 452.341 453.333 452.341 453.333 cv
452.341 453.333 449.197 455.584 445.665 459.252 cv
442.125 462.892 438.26 468.09 436.845 473.41 cv
436.323 475.338 436.158 477.623 436.237 480 cv
451.984 480 li
452.301 479.201 452.587 478.408 452.795 477.636 cv
453.928 473.344 453.671 467.392 453.312 462.362 cv
cp
f
474.383 464.642 mo
473.967 463.018 473.674 462 473.674 462 cv
473.674 462 472.982 462.7 471.894 463.965 cv
470.823 465.229 469.397 467.069 467.944 469.261 cv
465.849 472.431 463.704 476.246 462.266 480 cv
477.432 480 li
477.193 476.911 476.623 473.8 475.998 471.075 cv
475.418 468.527 474.819 466.276 474.383 464.642 cv
cp
f
833.853 452.681 mo
831.523 450.139 829.469 447.821 828.013 446.112 cv
826.551 444.375 825.674 443.333 825.674 443.333 cv
825.674 443.333 825.577 444.617 825.535 446.836 cv
825.521 449.042 825.652 452.175 826.196 455.77 cv
827.201 462.974 830.153 471.933 834.726 478.483 cv
835.079 478.989 835.465 479.495 835.864 480 cv
854.47 480 li
852.517 476.04 850.428 472.147 848.248 469.028 cv
844.462 463.621 838.519 457.798 833.853 452.681 cv
cp
f
867.899 475.072 mo
867.755 474.057 867.526 473.002 867.329 471.958 cv
867.105 470.903 866.818 469.822 866.496 468.741 cv
866.215 467.677 865.963 466.635 865.666 465.609 cv
865.026 463.543 864.624 461.698 864.268 460.296 cv
863.897 458.862 863.674 458 863.674 458 cv
863.674 458 862.976 458.464 861.863 459.358 cv
860.774 460.254 859.133 461.583 857.72 463.365 cv
856.98 464.249 856.218 465.23 855.475 466.289 cv
854.807 467.348 854.177 468.481 853.599 469.661 cv
853.311 470.25 853.038 470.851 852.785 471.46 cv
852.57 472.064 852.376 472.674 852.206 473.286 cv
851.868 474.51 851.624 475.744 851.522 476.944 cv
851.476 477.91 851.558 478.942 851.72 480 cv
867.712 480 li
867.854 479.297 867.963 478.607 867.991 477.955 cv
868.072 477.049 868.035 476.083 867.899 475.072 cv
cp
f
876.606 468.977 mo
876.056 467.953 875.674 467.333 875.674 467.333 cv
875.674 467.333 873.222 468.761 870.574 470.886 cv
867.927 473.005 865.068 475.935 864.353 479.068 cv
864.286 479.361 864.251 479.677 864.226 480 cv
880.527 480 li
880.292 477.787 879.459 475.274 878.54 473.039 cv
877.877 471.444 877.157 469.999 876.606 468.977 cv
cp
f
327.893 464.2 mo
326.841 459.948 324.914 455.22 322.16 450.785 cv
320.874 448.552 319.267 446.426 317.73 444.41 cv
316.964 443.401 316.073 442.462 315.262 441.539 cv
314.413 440.629 313.663 439.72 312.773 438.922 cv
309.402 435.636 306.099 433.201 303.662 431.648 cv
301.169 430.13 299.674 429.333 299.674 429.333 cv
299.674 429.333 300.111 430.94 300.84 433.619 cv
301.524 436.259 302.328 439.906 302.977 443.947 cv
303.182 444.931 303.284 446.002 303.431 447.057 cv
303.576 448.099 303.724 449.165 303.874 450.247 cv
304.066 452.453 304.418 454.583 304.596 456.796 cv
305.138 461.117 305.522 465.437 306.461 469.163 cv
307.189 472.547 308.5 476.201 309.904 480 cv
328.842 480 li
328.854 479.821 328.874 479.644 328.884 479.465 cv
329.287 474.367 328.952 469.051 327.893 464.2 cv
cp
f
303.506 469.413 mo
302.78 468.362 301.996 467.305 301.167 466.249 cv
300.34 465.19 299.471 464.129 298.493 463.131 cv
296.557 461.121 294.558 459.078 292.362 457.232 cv
290.144 455.405 287.929 453.608 285.652 452.012 cv
283.345 450.442 281.08 448.98 278.932 447.659 cv
274.489 445.154 270.595 443.139 267.652 441.933 cv
264.758 440.675 263.007 440 263.007 440 cv
263.007 440 263.783 441.646 265.144 444.297 cv
265.808 445.638 266.685 447.159 267.558 448.975 cv
268.445 450.777 269.446 452.752 270.542 454.821 cv
271.608 456.918 272.687 459.184 273.89 461.432 cv
274.503 462.545 275.073 463.719 275.66 464.892 cv
276.251 466.061 276.861 467.227 277.491 468.381 cv
279.615 472.399 281.832 476.361 284.164 480 cv
309.077 480 li
308.586 478.75 308.016 477.587 307.462 476.409 cv
306.236 473.912 305.002 471.485 303.506 469.413 cv
cp
f
355.842 463.695 mo
357.001 461.017 357.674 459.333 357.674 459.333 cv
357.674 459.333 356.11 459.96 353.505 461.167 cv
350.923 462.394 347.339 464.263 343.405 466.804 cv
338.224 470.082 332.501 474.671 327.658 480 cv
349.141 480 li
349.935 478.063 350.712 476.153 351.445 474.326 cv
353.206 470.069 354.744 466.35 355.842 463.695 cv
cp
f
374.569 163.625 mo
371.434 163.625 368.629 165.151 366.753 167.552 cv
364.94 166.129 362.615 165.109 360.015 164.672 cv
360.166 163.842 360.246 162.982 360.246 162.101 cv
360.246 155.155 355.318 149.524 349.24 149.524 cv
343.161 149.524 338.233 155.155 338.233 162.101 cv
338.233 162.537 338.252 162.969 338.29 163.394 cv
336.691 162.574 334.826 162.101 332.833 162.101 cv
332.203 162.101 331.587 162.15 330.986 162.241 cv
330.169 159.5 327.896 157.527 325.217 157.527 cv
321.851 157.527 319.123 160.641 319.123 164.483 cv
319.123 164.631 319.128 164.777 319.136 164.923 cv
318.243 164.605 317.292 164.433 316.306 164.433 cv
313.97 164.433 311.834 165.396 310.188 166.987 cv
309.41 166.074 308.456 165.529 307.421 165.529 cv
304.816 165.529 302.704 168.942 302.704 173.152 cv
302.704 174.092 302.815 174.989 303.007 175.821 cv
445.476 175.821 li
445.476 175.821 397.896 173.661 383.863 170.066 cv
382.246 166.265 378.694 163.625 374.569 163.625 cv
cp
1 1 1 rgb
f
297.276 168.834 mo
296.91 168.834 296.56 168.936 296.239 169.116 cv
296.177 165.929 294.338 163.371 292.073 163.371 cv
289.769 163.371 287.901 166.016 287.901 169.278 cv
287.901 169.941 287.981 170.577 288.124 171.172 cv
287.823 171.059 287.509 170.993 287.183 170.993 cv
285.273 170.993 281.8 174.424 277.224 175.694 cv
299.761 175.694 li
299.715 175.491 299.665 175.289 299.61 175.092 cv
299.92 174.449 300.102 173.673 300.102 172.835 cv
300.102 170.626 298.837 168.834 297.276 168.834 cv
cp
f
89.8093 85.9004 mo
87.7505 81.0632 83.2295 77.7029 77.9794 77.7029 cv
73.989 77.7029 70.4199 79.6451 68.0319 82.7003 cv
65.7241 80.8901 62.7654 79.592 59.4561 79.0353 cv
59.6482 77.9788 59.7501 76.8843 59.7501 75.7626 cv
59.7501 66.9219 53.4782 59.7551 45.7412 59.7551 cv
38.0043 59.7551 31.7324 66.9219 31.7324 75.7626 cv
31.7324 76.3185 31.7574 76.8677 31.8058 77.4091 cv
29.7694 76.3643 27.396 75.7626 24.8596 75.7626 cv
24.0578 75.7626 23.2735 75.8259 22.5095 75.9409 cv
21.4688 72.4524 18.5756 69.9417 15.1668 69.9417 cv
10.8828 69.9417 7.40985 73.9052 7.40985 78.7943 cv
7.40985 78.9829 7.41675 79.1694 7.42695 79.355 cv
6.28968 78.9504 5.07966 78.7314 3.82421 78.7314 cv
2.48499 78.7314 1.20214 78.9917 0 79.4502 cv
0 93.2252 li
168.227 93.2252 li
168.227 93.2252 107.669 90.4766 89.8093 85.9004 cv
cp
f
892.517 80.126 mo
889.201 80.126 886.513 84.47 886.513 89.8286 cv
886.513 91.0254 886.653 92.1667 886.899 93.2252 cv
900 93.2252 li
900 79.4502 li
898.533 80.0095 897.189 80.8691 896.038 81.9819 cv
895.048 80.8196 893.834 80.126 892.517 80.126 cv
cp
f
879.604 84.3323 mo
879.138 84.3323 878.693 84.4622 878.284 84.6912 cv
878.206 80.6354 875.865 77.3794 872.981 77.3794 cv
870.049 77.3794 867.672 80.7457 867.672 84.8981 cv
867.672 85.7422 867.774 86.5505 867.955 87.308 cv
867.572 87.1648 867.173 87.0809 866.758 87.0809 cv
864.327 87.0809 859.907 91.4465 854.083 93.0635 cv
882.767 93.0635 li
882.708 92.8048 882.645 92.5483 882.574 92.2971 cv
882.97 91.4794 883.201 90.4911 883.201 89.4255 cv
883.201 86.6125 881.591 84.3323 879.604 84.3323 cv
cp
f
666.071 92.6442 mo
666.071 89.6621 664.644 87.2448 662.884 87.2448 cv
662.185 87.2448 661.541 87.6309 661.015 88.2776 cv
659.903 87.1508 658.46 86.4688 656.882 86.4688 cv
656.216 86.4688 655.574 86.5906 654.97 86.8157 cv
654.975 86.7124 654.979 86.6086 654.979 86.5037 cv
654.979 83.783 653.136 81.5774 650.862 81.5774 cv
649.053 81.5774 647.517 82.9744 646.965 84.9158 cv
646.559 84.8518 646.143 84.8167 645.717 84.8167 cv
644.371 84.8167 643.111 85.1514 642.03 85.7329 cv
642.056 85.4316 642.069 85.126 642.069 84.8167 cv
642.069 79.8969 638.74 75.9086 634.634 75.9086 cv
630.527 75.9086 627.198 79.8969 627.198 84.8167 cv
627.198 85.4408 627.252 86.0498 627.354 86.6378 cv
625.597 86.9478 624.027 87.6699 622.802 88.6774 cv
621.535 86.9772 619.64 85.8964 617.522 85.8964 cv
614.735 85.8964 612.336 87.7664 611.243 90.4581 cv
601.763 93.0046 586.933 94.5344 586.933 94.5344 cv
685.799 94.5344 li
685.799 94.5344 680.547 94.1257 675.981 93.3196 cv
671.181 92.4724 667.096 90.9845 666.071 92.6442 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 /5 /6 /7 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 17.0.0
%%For: (Krol) ()
%%Title: (bg09.eps)
%%CreationDate: 7/31/2016 10:48 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6D6G!NE[CLoJc62SMh1Tgp79A#bhg;=jLqA0$[Z]3gG<.E"p.NHD9[m25Y:ZqJ,RAInWHnu-!T`%2!\GV*k.u'>Er2kPo1Gm
%-VjZ_T0.Vth,g4un^VQM^\bcpFa)X>ZHdj,%f)1Xo:Q!'TDZ__If8DulRDR`r0&&E9_e'u3rSU)lgN]Eq<H_LIfJj/Rr?#dGk^=3
%pYYo6mbqMZI<G:NYC8!OH$/k2^A7?CGQ3'br6&0Fs+akNm*FF!0>I;Qc-(>"hnJs\Y2:<8QHsgGhgQeO8H\a+b/\.Er`2G%H1UF4
%njLna:B-Mbs4R#8/^Y1.IdpcprT:RrI.Qb&=5SJsm]6B]V`=A&T6G/K2fHEZV14THIW_"<pC$fWh;auSGkKmZhs*Anp0$sYhu;j\
%ReU7Xrp"8i^>W'tDNsoXm&*?fL;8;R9_cANg=-)=J*4Fa=7nb,rR[+?8(J@MEEAY-3SO`%aUKBg"Wn@qn8I0rrVF]=hnJ&nX6mE`
%O-V<qF[#;YjW!^-]^Ci,pWHUWIIDB$*;?Mk2&t8:q]ilOV_?p)o<7T]j-s,B^NjbTo%EnYJ+LYZ/`-u3U<^Zp^]*ZE2t-e?X"V2P
%Q_k3Dr="2OmdiAE8gjAp0>DnR%t!Rds1b,p2m;*<p<C'%/DkmO*PTComcNJXqbQ+_rJObWnciSVfhMJ2lSi2Lc+F#"#Q<bIdFr6D
%6gmr6A>IE3ZO\AB50:%c+4(rq$b5%t*r%XC/VEPrhLG(M0>@9_P7QF5@Dh]_hLG(k*h=P5:&TS._YlUqDu'G"8Yt>%If&7XJ+Ssi
%Hhbe53'Zj2ni+)MMm#<oGkVsqi#<Y"QP'4^%/qp;rRUtZ&,8(tik)Cr.hmC)TAIZn?[RQ^J,ZeSUjnl+rUlN7aWLQLrO_O4rq!>m
%iSDh0p5<RU^\dmeGQ7K`lYk[oQV[JRh-^-ZJ!YdP^&%uri8*;'J+["!OQ/=`rm_fls6987./ePnk"bq+fCDc;r=A\tVd(kg<-6)s
%5c$-JqPQ8Z^AIcVE(F;`p%dEnH1h1&:MKa1^O5_)X7pi96aZe.?i6,cjd!Kah>3Fc;R8-!^6Y,(Mg3Ol/Uk_HVa#UXX^6GQO.oq;
%I.d:odCLCU4M2"cV9.WmbM0d]pZ34K]T!-AP5+KAI(F7R]`79#^=(&Ls4oX6GkX/chL2qAKUuS$g)p.h[sH<6R[_7;+1d%$nR$4p
%&$N_Fnr)D>J+`J!Ie!8%m=4'_EMJS"qamRH2;e7cmWe\/h!F8?s-iB9KBU;;?\n:MaL(r;kPXJ7?[_hJ+%<m@rVK[b^Nf?5EtP&=
%+27MBQJ/t.I.tUhDt`pOp\&BiBQq5ea&cV8N&+h4cJ7fqcX_Sd0*&cbjj/FBn",#O?6K76rN"8ZOS.^:GJEq-YJ,>U<]'hp9lsIK
%2"X)=XDcP6k<K""J,T2hrqE&bm.o]5#PgN4rp9HDhg@WKf:H(>Q07E-nbdY*in<@uLM+r*4aXW/c"HuXHWHc(BDG\60@pU-4j&K)
%ellSV-"b<"X/rt^3p+W]@QmP$FKRXeR!lDGAtH;KrWh:crZY(jhtjGF=8`#aa*9TcnL3GNO?\a[Rf(=Litt:9fjDhhTg+n$1V%JG
%YP$Vg*:(-_q&SikH^*DTPK.MJ(Ur79/+Ulrqn`;rB.2*L6[:49b0,+\<-'Y!eg?B93pWfljAe=la82OECe%,M9+/-bBl-DQce<HN
%a.qGWAO#7i\JKOG.SnOTR:]gsI*^nG+6@cTb-NJ[5oFf%Ifn+`o^Y:oqa,`bdJ''i*FsF/<Sgf@pOZI#jW,t!=3p&^r#XtE^6gS*
%+ho:@]?%1Y`qSBP9+3h+a]Ea7hr[4RO8Mm/T,l7@r3G5Yjbl@upVD?T`D?8aGHZ4?o%EX/*/7qb*IUX:^$\OZrc^4Lmq\CK=8@n0
%+)P$3gg\5KYup*k=BV9p!LH"M#'V'XTc;3;%#UM@Z<U9FYWM0<[@l'XqD"jRID5(jG!59lr,GMPT>I3_XiH3posgRDnl.Y@0nP]"
%dO2pHe&@(+`s-7EBt$&e+(V$.g@1'CRpY6Cq.2R^c`,uWIqk,?/cV:q*q;JB':`A>S747qA;XfY'i)%e%ln0X4m*N++_*hdfl9)B
%Tkp;@<&]jnQrVs9<B)'s2pY7aVQ.M,6?s`&G^rDKhCL.A^*hpXnbf6]?ALpqUdA%G32mOaBj<*!q5IhN.B671UT6m589nW?P4I,&
%.#Ug/o`+cT07!2CbL0(t(;%f9Q6D6;-bo"q^YeY":Dr7i]pnS>/8rt7%o*8KjT4(L-6N_;A/TPb<fV;b4!'EK.ERZgBr%#cVhamg
%+1^I$HX?8_+7fjXe&B<]7dg_Ffuh\l@n29)/-d#gS7@3Cld=i0k*4/il[0>1J"BH'9s3\k)2,#FZG3Db./B3/nkel0<P85j(&V,&
%Y2i=%b9HG=b21X]r&>F&4Q=C=;8t#5K>2-8'gM`]\c-+r5Nb#Hn'QS;0#*bP_q[6MdYE<-7.QOKq;AH*jO^P!C%3\;TCa'Es%/+j
%qqM%dIa[5RT=mGM-S9eqH(Y*5@uDEjj$.@>P!l2^d4.;db+n0c,NVllZTM$El)!U0/D?r^+]J/=I__s4lQt+SeM,<_Jj,Whd<0HU
%lr9`9d:h(<r+'bEhmg\:)On$9X6pSe'*]hlc]D.FEQXnI:0lDLMb7ZW::##Q5,,%UgpGM)CF1i&Tq>:OWK,\98km]A#3dt8Kn#me
%;`4Q#+6*$.^DHEeks+I?,;e0:7lt/Zap3Cg,JWs58*q]Vp5f3m-i`?.8W337r2nlTP8:prN8OC(aXqu45LSPPr6PC->5TBZjgf&h
%(XsgIWD"2f%q_l<YZ@@C?@`QWWD<`#DHX)M[>70XG?4*s8K1l>fT/%smMDfcq-=oXFc'q!Bj0WopM(Gp/#$07USr?]G0qioe?Q^7
%/R,ugX*`DQWb4`KLdp'd`rF`0or;XG0>A<!Iag8j7pWLIa0\YAaR;S#adDi[NV%Yq.=UnFIa$^<ep;hmmuK("cYE!E;1?H5IV4S\
%I[Rsf?_tfnWQipZH:FI&<mm+@[AIiBVVRP3,5>W.VW"go37pog3pn0XVJMil`Y`AJ\`G*.=_$B-Emc(DpG2*5.f'Vj'ScAb6\@%+
%5G>&GD$M?gLYu$YcuNhkMk]C-jT[lW-/.a;g?f']FO4f_?5n>i3tM7G"uG)3\k9@E)\A"'s/6^-Xtbpq)T1aNIoBEVk)"fdor-`5
%N!]8agTrqf:1nM/lG)+X\#4_o'#m.s+8EPEnF,?2SNlX`+7^fZlDOQU`D8P`Tmu?'>5[H&s"1VqU#MCl+(%3u`GiJ+0?_Q2ioQ(g
%q=I<,6^&sd*a_)paq.^]M"esdQlhBEQOf,fcXiJ>Br=.ZLW&s+@V^n9Fn[-`UM,IV+aU"_1QD,Pg?5_)NV%Ldn)4uDZRDGJ'HZFI
%P]+V;`)]1h+Be!fZ$YbD0mV,'Gp&Ou1Naf\AGSQm*_m_$&2;Lo6GPgO7M*h-g&W3=I[Y@]L)[uBR(NghN`]Qhbu-&l`]W?#`?Gtl
%#PD3[2*uXE1A]'/.4-Xj!`^4:0S@-c\12rDVW^5^5I'koIoO%9aNErTIuj<pWT@P(=#Fknc1o\nqt\S5miK5eqUO&u>^j0^V#?Jm
%naGN&0>7;)n&=bn4j*'[prU:+:\dS?T6/p[_H@uU8W03gm_>;./cG92NUfT!nje]17ud'a[.m.Nnje]17ud(0NUl,;GQUf':B-[Y
%s*j_bM#nO)c3/B3mr]4'd[Q1^8B,>&s,de%p-8$g++ORn3:.lA%jZ6HG:hVmU>+ZC2e#"XVu%b>gm*3C;lc86Du\tO$u)KuI[>U>
%=Q=GHmGIi1$Sik.5871_Nr0JO5mEpRS,m[amC2*tf,2WIp\fKI3^n)ep[J(YU*Yd-?2s_+R@>R,-?&-;Q^+k6_TskF=Y44\PSI,_
%89PH'VucK-^N'-473Fagd4>Va)&1Oji,]894iZs0mI+D!90Rn])YBM*j'su6ip0jag?"753?Q+E4EKkCSg//tb.E-M2gURhnkpMV
%,PW]pCr^tcZUk\G>`i>el!qUTN^X@2g`Q'VWtHq2Wid59Th[t^cV[n:"[u-s6#s?DNr4J.plH-c;;*h!?TV)N,>BaA.HppPGsLt]
%e>q-'aCRe^kFB'WoH:pK`HKiTgk-^CIJe%!=lorHUkkl;H;]ijeFFlr-bt.<X/`I^&3/U-ADJr;IS&Z*cmc,C&b)aZPTnmaD]ERY
%2_=d(M1>h(!Ybk=T3Ks_0\jE4gkVbK2Db2`RF'8n3d3BK@4oGsIdoYqR^3pLX-j/m*!TO3(AP';>V$(cb[KZ_M".;B\/kapW,SrR
%Ls1B,G(*M?h\)sTfk""uETTHo>-]ptaGJe_E6]8):EBf,I*Q=>;^@Rpe1c]VK00J3KQ@n&hY1_+]Nb*AnU<,C\bg%o;S/\aDfRM*
%Vu;'na5hH@;]">L%V$7p#m5_GU:b8]($0k\;-`Zs<UP@Xr>pcTDpmVg/M+Jc7GL-fJW&1S1;kj\a6ukhgEN*"LoL$p&F@lMlN+[n
%Q7=,l-kTj?FBN7nCg"pIOX[WSP%HS%\^-ikhISBh0BW5joY"%ANOm2^"HO$.0Mm:tr'.%ZY<%af8f>SPT=b1uSfs5/^uH<@(dPpa
%MWFos=okjPfW_K=lIoHZqZ(KF@AP>Bl%_R$4o.5mi2$Fb=B38HY$kY.nRGc$<j-EQR=:&MOCLX92DjGC!;6Qed\i"cEe`V"6CI*!
%O/sGjaU3W!Z$]\$M&VYr%nm<H-A%BZIDM.dAV(^i?)2EIe$P%T=!Ue.%#q/p!,..;)#T6+O+r'H]Rm6>22!-D7tQDc1QXC1^1e#0
%TS293Gik.IQtHiA%#.k66R[d7OV\F04TFHjrP5>C(t)^P6`,9uN^`iJ+%Ml`aIF[ghRf_g<5o1BK8/6OpEe@=1*1qX2V#2%oanfm
%b*S\4Wt=@ZadY^Z65jSl(DI#5&,Z[elhQ"k<6ihbUU=gupCE:9oQ6.jq+$FGGanCJ%rnNd\gg=+rFtLEMkB%n;u<ZH6VmaBM2Uk5
%[.ZX8_?W[G^Sb8KkhiJQo&Nf<jQoaRk\dO"eap?ko=jp)mW,H(LWlO*SGKpXjN\7m4k"oZh*9rWhs#\J/c=G>kjeZrs8ChDqTn.3
%hYlQlJ,O<+h<.#c<PQN[IOB(/mOb51mW\CA(U63V?_!V\T^^Y8MH`:ApWq]GqtS-G&0ec5s"AT2dO<\]J,\llQ_:ajQggEoTml_5
%ea*5YmusOXTDb39rVnCNpttT@U>Q"=4)O(V48i5A+EA4[23A+hM-e)=XYQ)2U*'P=%Nq5]=APlI2.a;QrS8u@lhVr$9)")XUj#Ni
%_''W[MirO$C$;_%q^u[=SJ]QEBWVa.J#[_P&`8p(rb?6C8MoPbCL/pR]r9q2f<WUC>W0cRc$eI!FYC>+MkJt*,3RQu0=it:FmK#D
%-/TI5lX9=:\'+BWAat?CPX3''rO<YLT'Wa[n&pg!4-Z,fXik!\Btl0$*t!VJB"]_CNH/"19VeD?nst1%.=*<7EA%]L\uX7>9X*<1
%I,(#2aCT\\\kMpblWroPJDK'nGr]T\aJe?0\qK7N1J/>ZlW9p0nN'T2H1"E!c"J"tJ.pi;I8+e=V']QXGJC<<Y>ipjmX`.4TrN>U
%GLG?L<SgG#nguiQA`\d7Uf2MZ^J+C$-+pK<muKC'?'SJ?Mjaq48UA]<E=`7eG+H;BNXq>.Ff(nM&J$L$*i(.uV2ok=I/2l2Y$aSh
%_b$0941%o)KY!A:if3(uot/athe2KJ<mnZ$aI)9AX-C??p%+8gHBf!h$^iQFnmt8/Fh&ARZ!JfQ0BIXA3gR7s=.,7W0:.N6-N]^:
%V&duZQf47M*aKY)65kL=]ISbZBup@B<Bg2h_]7TBQGG"#\U?J`0N#OS-=e[MWZ[kV\=MDeb2l?(<KVjQd64cF5eTq,F>'p8@,2_A
%UJ]=/]j^IO%AWiEcLJJqcoM*(?[pqYH;%S\H1U_RQ#Xh'5Rrr+o0ij$3g0:_N]=J0,Yto1_o53GCd#2B6bcJ,Fi\)1YDuP_"W;;h
%7H](@([N<'VqItn0;>/0DXEIN2"*m!aLa!t!b?Ph]h5=80JOGU(tT+GGhbXh1)mh6CDYX4POTtHropeiGMWe>_!Yje\MW4,$r%?D
%V>Da;i,h0sfQI0qELK+:1j%3]h=Z9l\+ouQqg5CfJ,YEY).1.(p$J6p6.]U>a+mIgb?)!$5J6mi?Tri2%pXL@qV\s=/<CYGh1,7A
%_BU;%o`KB"9[^IZMo`CKM<1I.;^8dCMBe^U/4.)1e1%hg%&\Z%<,F1).?$D-$=_c2,V8%PoN\#_Kp-1WSq.lF=SM[3Oslj5FMR0a
%1/50MVTjm(fbo+,9>sf;$SrRl,*LGM!l?7Lf=F@'XjD'S'4jGpM9"+Y$],_MF'n00d6O3%dH_*e\F,s$RjXXi`h'gYn/#Y]^S5i,
%?DV,A5c#c(QrVo^=(qtVP'e?5[!p*eeGDE7YHiu\MFKp?pY'PU;R(5j`4`gS6YCDolo<8TrBtXk5BF2Qe$[pZEAIkn&T%q(7uZ<1
%B`GG*num\s#$IKp'30tj&H>$Q\dlP-CMcK\F0"4lCSji][kmWHZFGe'3[t3sU:;qrYeV?d/BLeC-U*]odmLK%(.>;T:hiSoHkihn
%<EY-U/<DX;=-BD/aa,,mLL#\SU<*46U-N7K\Do%e5/c:"W40e+.Cqj#-Pi5[ZEIRY*Gt#?1SkU"7ZjciGd1]`66PGeH(gs9N`,g:
%Ok)(-QUMO<+5X2ZPCceYeqNF-hTF;Y#a=D4>KFM4+a80XQ(m;@^88`LEj/shAPn11_tN-BnZmqOMK+e]#,3G>NOZdlAXBr,^:(\/
%]4bj8-.fm"joW.i+).A/cQ)?-FR=8@V7UAIrs6b#_#b?]IF'[R2n5\Y^6j:^)63FFEcIH`da0hGob%>T@86-QI@@gm%Z;ahEIlrk
%Y&ij;7l:-]2^EQjPG,5LB*,]jSgr%Va,Y=\H?X[lk-sSJr"8(1P(D(OVRD(>X=k1r#JPVQY9]uK&tL]!0V:%U="dKS[*Xn;.W]oE
%ZInB^@.-W?9H$C7(sr!pP>%iA5@h'qM>UT(+j_#,cN,qfT-[EmqRmSM(ec%^d!6K_WL,mjh]]g"V:r+rSJY=I@/1Aa*:#kA+#8_@
%r)?(#T6>5)0*oI?9<nui)OH1\9PYcp\3_cp,H+nd?LQ8=''"(,oMY/f:=8h57![#(C?5LgLZfuqmpi3VQb&QaV9"1?#KAB(+uf<s
%1-<F1B,;2pPs;Ls_nn,[95965,Tlir<%LZt3"K.ejQf-@A(aQ9oU>=oh^\4cF7Vd/b8$fD`.?#_,B)MWA"D1R%YJl='1)t!bX<lR
%,kFPj_l3(4A2t_eeY&]#OaK@7;=+bHL%>%MY01Q,Y=opdFm&q_%b@Q$3d_O"fS!H<[u.U2Au9[L6b<fX&6/'hoJqdq[j8scSbP&=
%`%3R8Vc-eCY^>)h+dU_W9"I*l-0B$1Blpqc8aOlM\i;E*&<5N>FMEdApmMNppsHBMrV4[E@;rh\gha7UnR<"H$`dPY@ckoTT-hLD
%CU;if)NtJjn>C\9PLu_n5)ZF*T-t(fKj*;lL#dR3&BEg"A'p"b^7O26bT"8@EKeS1428I$jXnB`:%01m\gngl9Sk%_7_u<N6"m6T
%#ool9WF%V'$A%%%[1>Hd()\cBh<fs&od]BB!h8l^=E0co\2SNa^[JH"ISbP&?Kcr:eN'9+m3`B4`3\B,Zncq1Zr.Y)9jG2D5RWm[
%(gniq>3^RXB_$ZhbZl$(obu1DCTAXI?i_kC;Vo_E>)A@Sd34j4(=ajUU5-+OqtIl:7n=#>/.ZiZBVesB!D\\h62d*#n%^/Oe;X1n
%Q\ZCl/)jVGd))MtoY)NBjX6SX=jX+T@\pHp(./l]SeU^rP[uVoeZ\Ko8B6r0_;e[,4*WjqdgdhFCHN!)R4g/o=u*FGHAQk^AfBHg
%9/oQkAA_L=BU5TNfsq_LQmINaigJ,t/1?BrlsQ-d;+e#5b7`XV%sA7jM5`[LV27_Y_PC+:Jd8SlrQ'5^9,oI]q6:$)G_a<R1XZA.
%ErUJsPcfS=,e)o(o0??>d4;ZR%$+0U0aI4pOHn`ANtlXc/@EN_Nd2TpM%.`rI>MHB;57^hE@eZ,/E&@Z4HB)FW]aYMA71F^l8=S:
%;NF+PE(gZe$W3bEFO;CnKlo!A\^*hQRj-GHNO[mZ>hW)65t*jVV=L*]@Ti4hq^h2m[r^<3X#_%IWa91<>A><0kfk;@L<$72?kj2L
%bfWR,$T](0L=9jlhKZNiJobU>9.^4Q)mU=2^>Cr8'i,QWq-uoV2nf+g<$^c7";+$&j9[X7W5RhDWl2h2eN9(a89)_&04PA>5A<A"
%R]84UB#@':EbD<gY[V7Xpp:l.BZ6^B=Q&6C;.Ym&YhT@J9'q_pH%J=E(/@e20]g,L%tWgG@-h[U7ScCeIu%:#e$:#I=:9>/n:O:e
%9ob7sPbh/TP'S*)A.Tj.SKYC`12RS^T*#uq:5i81=dd<5i\0t=&7QUtEQ*eY<g8<R[TJclp_-Z&b=l__kguNuENp;UQIn8eNWcfT
%4u":AEGA+,rJhI\?g:Q0@bT]+B&JX<'?9uU@Meln`JM3&hUn#ure*1-,TpJIbCX)>Z@6b>W8To,L\"+BBYa4g0Q:7^Ohe<AT<.Eh
%6fL_ar$AltBeIcp"kFdc'g2$I\N_!hL%isT+-m^GSC>d__$pul.V=d>s56#_g7ENf&%[f4(C<@.?)O'YB)o3Vams]!!K)RS6U2XB
%QtV:1aLI:LBfSAeG[a7)SH]d>.(AB(oQ(SBWU;(N9T<pX/s&76%"M83&2AnW3?63HdV`nZT@/;3^f>[-OUk,B=SsIJ5*2p/S=7M(
%_K(oa/"[H+'sGU$L7Jp@,u=F".D^Zp=$G>5$8S@';BupD'h%dRn)J+J3<(L=\9hZrYOSQb'Kn6CDeYo;Sf/:J?hBDH0p*Chh(%!=
%Y?RS<bY7!>['PCtZ9dL75m2B*0_4iYg7(HuM#8A>V"AjT6RXIX(jI)lMA0LEE&-OC,"J#o/ebR@Q6\j0K#@5L,t-sR->K=_iNZF/
%l$#q$l,OHk3/,iJm>ZA51(M*O-g)$m@@na#(QrRFn8ok\JZ#C3f^<uZ)+#p27D!`g&ABlobAk:Y>dK0_'BA&HZ.iT6+E8ge>+QkE
%S'3%-4<0$:UWZ6[iK8:5cNVqMiBGM,Ju=o$@^ius&+QJ8%.)dcI%-?r[ktoYHalk0LQ@a=HhhTul4Tq+H+SZAU^qFGRrfG9GO[`!
%j;sVNK0'GWR:1#+6o.^R*iudu6[$W(OC_d@IRSJdS#e;++?.ch>[e1FdH'=O&\13="4/q8lZY.=Q5UHY>hZ&^.]X?R.[M1[+X2SQ
%@5L+2l;N24^dCJ"XrXEoq]nqJ.%r3q`XrG^BlL8@HdkH#M>9/1S_edh.&I=.EOW>%a%6_WZ#kZ=ghs3NWlV02mcoter_`K5q`O=4
%[.U5mhd[2q-n/nAQT-7n3GQKrolGJC)L7%3,-L<9l6O@_!YRG+C<!?#W@+@4=*3)KUpT_9$ZYi*k*bMiWfKs!</9P'WST"K#!-g+
%Pd@0EdjWs[I+EJd9k2F0RXM@)C\i:e3l@0dbk(4](lNV+4(0.FXCmY_E(sO)o/n,.gY*:Pkr!J*[?r+hBFI?gj*?)P(L2%5Vt6Vb
%dFN/1J$S](1n(A&H/j1)fKIQ:7CqZ=@DWT$`Ueb/&YC5%k6_/^CsEce-Xn#'\m8Re#U6kG)6lI$.1m::#_HAf:\^-oa[&@3%LUW)
%:HuSgSLt>['4Gs8]#'kGG-W5fFR_C(3ZAf0(FR5gF0G3"$iN?OWbZS7l?.!L]8DOL1&gC^,lWE&rN"Pl3"u4ZI:@5F)3'@2iWYpl
%jt?)AgnieM^%e2rnb.geZY8^6Y9-Pps.I_dD2,Pd'HHr6[l7c0,\A*u-T/M^,a`ERbasnaI%G?/dtoa\O@S)cKuEBtMT*LA@1%^n
%BOe>_M43b.]=K8^qj(KH';Gr_fPOuF_VBCU"R]FK_ZM\s]`<%Aei6V`d,rE'_=c%EK35%0l@'/o/VKn#5c_t>@Fbj,rgZrsMReoG
%WojE7$sD5Ar34tJTtu7qAE6FhKPT4q+HA9lktL)_`R'n5:%VF]_(?dK<mkn54k=k0\4N*TNeQ,=BHIGLnV6.bq)Ck]U#6u$0-oV!
%R?X2*+H9\Hd/g4&DiZ`%i'YIJPdP$UHXC_94Md>I-I!9e/@N=G(Q_;js#8)r-d3]QmF_rM;Y*.X*Kt7g"Lb)(!'uG]fuAtQrW**&
%@8qK9=WVt_V<L%\jUoVX$T_'gVc(CD7W'<e*I,/pT+rO&U`ErKo'(sTl8iOq'G)jYMs@5NrSD"E;IC=^LmH-Z)5r[p(Ynm'fU++F
%3'*Us&^<9ojT<&j?0K^GGi7CUf!TYX0qT69e!%arnat5[D)Zr26S^TN)[J8;-UTZ-^]tEG?]uZOVGBm50+-G3OZ`l#nMNC[]a3KA
%F[^BZH,7BOKN$T=?`'#I#E+jE>8WPp\mpgPFonfU9gd,8G;i8Tj@hURpPEB?:ibeP3'n@tYq@rq\.M),WXC-u</oara@+`?j;*g9
%G,j["UnN.t0P(kF%!,`+m:"ok"<-rY]0ELsLYd+oelA&ic57A&"tQs;+BU)kiQ\a7F`tp#Qh\44"LP5Q4q01kqIpH#Q4FF(Q+/>7
%qn\p*dWl+8&O]RjPN[[SN\)0AA2lHL<95m`4i<aZeoDILT/s3P9l3L7`:eHo.]Zg?W^Ze&:r%oa[2<n>]r@f4*k*$nP3sd:J2,-O
%%G%Gpri*?Bn-!V>?"2=Om>Y56T?4<qfJ+,44n+I%/6k@gHg)04*:grO'^Iq[f!9I:b)XY*:?]QLHE)(2C'K5;K^SR49O\gXK>i];
%nBom*02G_:)8FD1@H;JYH[?uD)F=W*L7(++-sFWplri:m+Ygc%;H2*/7%(]u>oF*-h)-fBnPBU<2hprW!j2@&0!S(Jnb.geKkTh]
%YG_+;T4^$_bMl80Mu!&r`WD/[.;,c;Aahtt3?452NY$jJ3/CqokK,K8\GL.o,^r\(1rM)5Qoa`V!!n,jj7fojdiA@#Ib*qO2tWo8
%q\:7942L<8GM.meLem";b?8hA@_?E"M3^/rZC.`/-)Q_72aO\)`ItDUhKNHWM;?]7%<7+O3:BV%+Y?RFq5u&im14#o(FMZgXKe[O
%4hZW&P]Ts5QM<\9g']WEHEcA%+ci36@:ch6J:\R&YA_Nu[pE8(rHogJ*:qZ^8GoW!9UOH6,J,\XWiY0:S!q-U(B/9%g?t99oVA6H
%=g0#Fh,m@./GWAO44Z35f!`uo=JgC3,0Ss5LjG:'#lt:D_c:):.M2'aVROBt[mAlW(_&k8`Rc6p*<n!0WPH1,SS@6:616eBZq);W
%kag[ug?V5AdjAPST>TNZFN_7L]q^&[A-MBATstNMp%/uI@(A%;3<"O?h%fbrDlBTJUd0"(l@@Ij*^(dPj8EJ!31Xa0p/>0JnXG8#
%A`@tG:t]_ZmZe$Z5ej9k_L?=/SBm+2GuM3Nr4)(mUYt'uT$)\/h-rgD392&H9ZGN7aRkQr7)TZ'V\9O#^7,I\h9rG7Yq5hO.!MSt
%L4uDs9uf81*=itL`T'Hm\,AF'3s:TpMuss@ioW:P,fF/9ae^Dn"@NQ%5`@F#cLX:]G=ZP=Lr-,SSPC_lQHrK60(=4Bb+]Rn4b24/
%9,LlUST!a*1C*m3il$*@B^A;\J&9i.5clcGLbQSC#1/`IYgQ/H0RHusij7>=3(p/!;_JVgq@VF)WWQWRXc`3-%g\#[7Tpn<cZA/3
%/9VEB]4@arlXXI>>M.G&,=&k>r>I1!J<J^mH;k1neZZ-3KE(HbBSC=q8,+8\%C+PO8"Od'#lq>#TKuN`KZ#DhWtO&43qtoM"&*Nf
%7l8*H13'lQ7bWb'16YP2mihd_NV\*10+pNb6j%L:,_1hD)4!F`UC4!\jMlG,!,r!-Jjb_$]pF>DM3eOAq<c0iR/iln%-^lZ!5:fm
%C$m_WX>OCFEQcMi"Q8,1H)_OnC;u$R3dRDfU)cL[YF/41o(GO(/fc>u!fbNtY>_EN$Y$a[h7lal!e=3B+gG8*Pp&oj:O?:GL#mB$
%6:gH@J$sc74F]22gX256i95IEfP69n;?urO3!oX>)jnN'8_U^AAr@6E,Iej7K>ij!^qQj@lr!r[T2)`pJ5]r$\_]3^nT`G`FQ'[3
%Vt]+?H46WI,D<eMU>19A#uJ@g^bW<+Ilhm>,b_OMo%tg@*PcQ/9C/gbI0c9$=fc3oG$+M4>tnch+<E12N%T?b:\soN7e;[=2K4Ag
%H/1_.ihCB7+E:7=E.u5!ks.MnU37Y%EKRK;6K4_c+<YZ$4qO*kW#rNYihCrG5]KXe&>2!9+h2"@U4sdEED].9R(13;?86G+-4l9K
%-mT'h>b#h#`'j_^3YBmFJVZCQ':]YS;,7aZ\6VqhLq'B3\00e*U*(Ru?;V8i\0rf9!90`M_!uAM<"O".0.XQ,iOl<9i,E")&84$V
%/\$Dk]XAreE*cc\:cPX2\0Bn+]HEkd;-sl2\0s&@5iJHQ+J<[N@Be5L?=Rr._Kh80+Q9';+HUP>AoL2U7@c^eiM+[AODn!.k6DX.
%L<%%QiD*j7Y6D9t!,c*DE!=*ITtik<CC,/g>B0qFS]$7jMoGh[ju9uJiSrfkk=#WgXX?9FXq(Zu?dWg?Z!l9)k3j_--jI23iM'pl
%T4V(,VhRNY7])`p#%?8')9QgRndL82#E,qJdA*Di5(:^gh<@\Qq*]LQHn!!i<X^k4g=/Vr*pLLqkZ_ND"Y9b$S50h6<_>Tc'b\.C
%%SWg'-<XqC,oSQQiH3\XdBK7gceBK0[\!-`1dQSPkC-(;78L0f*<?8"i9cL`BlObp5%5HgrGY8(^I>5VZ6^+L1!_CG`7inf\Zq7K
%?!hrSd)8@'Jkq@`fE(Ae=-M:5nT]%_F<MR7mHaSMrW&Q*l,mM7qpNK)CNbUJ:*ZkHnFp&1J\.ffd1-6u]#6]kVbr9a=eXLEWNe%[
%]:./lnY-??mri1b)2hX9^T1#oY5W\C7.8!1m'a)FD,mLe-<QopH/@D6nWjVq[otS.QNUfV[B+(ZM00"6T:+"Q&jW&6NJ5==)N.sY
%B.%B?)ahheT'iSuG*tR`T60@^207Nq+)>cNP.As`XThNFC?k2G(l0i"Beu"(+Qc,75ROU\Fcu(tf$i_Kn0L,o6lQMjh)/Y8+f:10
%gHoRsSaWP0:^?]1IbLc&g<a[qcS+pGGQG:r:0g2<KWHTom>Vsu\tV(DKiq=L`Zs6L?>7?i`#M$Hp>`gM0]6V[9C/O<XZ#]7i$."E
%[LhTGm<h]n]QWJk*\L3H%RaO14oNJ,.3^M+%Z(Po#$"HIRBYt&L(omI3W0H5aAi1tRb3Y&?XbAmZ.J"]<34;`C;g@"YOMHi.au!b
%Fmn]+/Pk8J)s@(mGUAWo6X)X]4ZhhUZhi5\,s[U`%&pnFUMI0$*nS9m/Xc^;GO,B0]1X1)3"8uIWK)Wi'EYn=?0>)o'BlH0#SRP7
%HecpMOY#)(MUVL>]qO3[rDXGn/+R+t9:)E;oq>jIL><2q13-?5H&euWa"\0pG=cJX?5Vd`'Cc^d\LeWM4[Zu`F=>0-eC(]RrdDt8
%i]9(_>FZPV+-#*"oLCZ"DI7'p)?ctSNi;=!Wu)EhUp8nHe[-%g6N]J-KTec2[OO%[[@L&S1mN9"aX)C/]/%<mh7;9W0j7Q=l(0N4
%9E!Q;M:&G=m'`ZRQ%]X;g5XT0"k$sTZQV,d>m:^!BjIC3?3Wu+?nPm(hFcgU*i<4HkI*]dpC(ug`(8GZWj*KFJSgjRS!q-qN/*>_
%r;!+eRr83^"-eA.K79#O%q>eT42f8ic$,g(7;tCu:D^+;AW_Vb,h=nlp/93a*YrSGNJ5==)OHmPX0UB;M+##JHFg.Mi`kX,m1Z6&
%dF`;CJ$_W]R&-M`^Oj58]h52$6Z`]>Z:M!15T/)I>@PTCFgf7K;2d:b6(Jo%M;:#J4Xub!7t/,,Qq1=7[I<CDfD`GZGl'np_/AS9
%U\bN"SeZ91V"!bAb\p7SG.U#O!HB@2b)tN.m:2s&J_^=!ENQt5\gM5mk!jJ<!dTlY`'E,\+,=:V1T"BRKd_qc+l-Pn"O8t<h&Wj>
%KQs*ih2QO0FlU"EXCY;_iS;M7&:JagF!C[63.;74>pV,0Cb0c417o'>)9OQ*du"?"Ed.+P!m'2KHU++^N8ksEX-L)$ggabWVQs(S
%['ZP!/g,%bOps9\+RZ$jbHsRj_uLriGm/0i#a>k[ARhkT`Z/i:a)F9=nkW_d'/=IciQ__s/[_64#WKddiNc<V?_62b#LX7k5.PdV
%,>P!qAOB[@L/Mrh6*>E!L<ABI4/9:ZA,0j/i7?8=rd@QDk_C<\`#2h\2I)p0+a3)C!fN'Y4)u9#%j%?ogW4>$)`_e?'YLN:D8Wg(
%#=R*e7KFWE6V#-ngMQ3"!fN%`J/<K^Cs/&M/<+[a!BK'EL5g5V>HE!.MiJ7n5&QJ8a+e+,/IfL\,I0,\SQe37]_@E)cLrLnYQc28
%=dAk"[4/QAKqRJPV/?if[8nmkCdW/<d-U]8p)9;(]\b73)C'CS[?9(N!PaNpY;,$=9mctJO(mmpE7]>#N$LFMRM<`Ch4Uo>q6WO:
%@fp!]E6ZiOF$59b/s,BerW0N/%_:GKdim==L[,W@!8UZF\Lr^(/N&bLaeV\ilJZ0W$ecLDQr[RaL3eHHmrl.t%"6u1K1PHc$q7ku
%G=GfW;jhSh[^G_&GJ!k\oX37fJC[rictJ?;#C%.U%HA46/Oh?CCGs+7f&qL"-3RD#[7_MQm0s56g2;*<=5,OAE'L]eo;$<:gP,=Q
%-]%BKMq"HIR">WQ:.IsDC1N_K<&J-+BqEVe_?\O?g2Xq4hn5e?KD'Hs-lk6._l;[Yr1rP52fdZ\h.tAUOf\'SV;>)P5N@Hp1Mdu&
%T6:E4Wr^VL&2R(^Rap(#L#<APhGSthmtM5g^$g/7;")Hqe)J3WU"fS6Xs4F14T,FGm6X<)bC!/.:'X033(AAI$ZK8`T9dL:BjqDi
%m=`:c_$.]gV$;(&L("J2[lZsSj.ZArmtiuDe$G)]plOI\j:]3m._"&=O=9`q[*'F<.I6aKZecfSO^_+7D!;(,2n@nLV%?n9N?NEQ
%A2N@$agg43::["?`V\?%WMc<bK702\NqGa\jMfGfA"XWFI;UY8r)7bG]#u2J.nG?c'j,L5@aVL2%\4!+5^>54VIH]orp-jqOC=H)
%hee#DQ@=Gq!kR/gGPqhf4Q'S:g\A#Fg;O$@NIr'Z'r?#6@^BOi1mlEaGIiA7qcQpR?nVp>9acG:5ZiZU*)b9UJ9i3c!>*<rR3B@H
%CD="N'EmJ%(@3"M;QUQ9G_XI=O"W*c9K;]QVa'BcR^>OcoSpLcAU,_Di!(#:&AOAc6L9&2%(HP2RCNFi/uAo7AU?PDVF(KSr#u\G
%-5K41<M,TuPh$&R%]q*l5m";j0[!QJ.!bP^l0=1=Ts8Jk?jR"18t68,!p?<5[;W?-XB%lNYkSEQL]jm`a]aTDGEN8FPUh%:cJmQA
%?<HJj8`Nld+D)r9MG^;#V%##7Pck;nL7<HpZPom<*_WWk^E.XE7nVRYX(fO0q>gd->4Ao\n5jnS@0rWTJ`OnFM!@T2MUU!Nj;(Ip
%c:Tr@k5$KW\*r.1Qs%[k9G_2u6^K_`f'*0'-0>.M5A[,HZlA86&(ZrX,V3W1j.jOBK91l@QWC[r$%"s>MoTuRjC5N$G1X]E(3O`X
%e76no7I>4ET8CfN2_P[N`#a:DM0hht=pDSMA::u1aN$OP3h5E/>;6n&2=/,pi/`p?5R0g,03mYhC;a9FFUn2DMX2lF_#fZl$JoCW
%Z)eFMA:tslde&W"F5#]KUrU@SQrX\YZ152hVHO2`bp^GNk,BH*Q.Sl?,3H]i8b"la'G)">%InNq6"1N!E?Vnu]6=mE&l=mUjBhZ@
%$;+`hPH1L76_jut&%%cg$IfQVjU6&J!o"3ep&t59B$K:GN'RX=jjS>uP;d`nXK<_T6hm'MiJB;9osdJ/(TGkY?sk""T1F_hH+I"X
%:*';#NDR?tr"G62!,i0fK*l*W&=>7$3BO<C"fe5fh^>6jiPnn<+qTi#!TA`ic+fDr5X<]FW>:=D%FUrcQm'_[*J45fe(78]G&TdP
%Unq!gQ_PCL^='r0%2&00glQQV6Z8MG=tg"Bm@]M(odk@<du[n$Pd>VVSq3OK7:tT,3<qjd(IFKs9k?tMR`'3,GB-e/4f$%L'+8rR
%/t2iWUhKP2IflhuW'%j3`@(*C`=U949iLrlp!I9K%_(jP^#'Yf65a!0M-E8W^`ODF5S65bnjed-6Ain:!N[LjS1SCui&]".6:2<S
%00;X7@jE+[]5^]f8S)';+1)%%NRC;#<?\(l%]<Bm$&J,rC0.MnY;J+4FnC4YN3!_\*>"R5R6E0Ri/48O!NI5c7>,\31IuY\4MGb=
%;/u?Q)"TF<k<T,l!T2U[N(H)$0peVJ1"gL`ef7sAACucIX^-!XX/>f!bPVpGKrKU9?Y\$5"DLT((M0FDNIpU]jmu0Ia@gSB'*c6S
%`m`h]$FfLs89&?Zoru8rR/CO^Z8TuB<L$QR.G/k7r_'&W+>*G,Mp]PLl4KX#<K/8V_i!0+Wj+6*f!I.4V+(KO,dbj%Bq<Ca+Tdt4
%`9iRr;0bXt:j%>n!?"f.Z$"54n=bb#V4EedX2?235QYpTQE;?B<AiL&VG^Ih^.IX[FokOe6Y$!uj+cfV-Pkd,:_dgM/>Js7YUT%?
%1d5ui:#J.EqIf@VJjWnGb[j+[Mo&YmT"1'`MGi^I$4^#E-*sKli"ShaYO+AJH4t)A[+,ciqh"l$e-Duo@)f)O?Fq/Ll`Qk7blTj@
%S$CXsIh5iP(?p>>-&n)oCWY"[+k.Fm&Q1@>WquN5)'''gI6VfVJsFT>P63lBF=\ZNo;WKt0C7jVZn31mSOKG)6ikk7m3AGnQ'WPG
%\4i]+"[ZKJ(-M:+CBlXVq/eal$\h5'IRV/?&<3O6%EP<eI1'SkCA<JHpehjMAWL!dI"[=^NU;\mAI?T.]h.?00,<(Z_5ND=[6pf#
%M/\2U7o)VXe>g.k?`@"1/$40h=L'\LV&]7s&1l4O%.U@Gaf7c`_<3cqH9*ch.Q*4C/5k%pMu.X!b*-TjKCa('T=uuI:=_iFJn@IH
%%1,]6Nbts1*Fk`IDT;9HA;k#j!S6@BK#8pO;i-b\gs"s9DTNcVaN(6)3%DI24?^0$@+hnmLL#\sjjKbL#%7Xe'<8[SeP;O0)3W#2
%9G=?j!T@/'mZ`WIM^Sd];A1E1We\/JE>`1?=IpEt_%]-N'1BS,3ik=$d-d<j90*ft:hWObL'Z4f5l<B!MV!M!\Ore\!9mS82)I,^
%1$g>:X8A#4C"NU;"F<"phcp?F1bg7*Q8,D9l$NQb'&[S!EmGmH,hOl*1Br.,.mNO#>T]M*$FF:@]_U."U'drLC6HAPVP2EmWIUek
%-maM.(Y:64XQo]-5QEhY^7D(<GnU>'&Bo\$-aV:UToY+&+J+pg@k!lfBi1P(Tr7NoMTOPfA&VEtTrj6IiN>'1Qk?a#s,V;MCX$[<
%`/o"kJm/6h#(l*@QSRX)X$).2jFH6Q5)X&b$8Pa8d#P1e'[1fk?l+@)_a&rlMJq;/5fsY9`No`HqMc4LUsn*iK(_:8S\S&l_3LI+
%H>E];bc<_Fg`2@ZC]V"fM;g+N,.9crSij"#G_LL#--8Yh26<$j3Y8Pr8i:T8cK,%lTOt$3^rW$Jb4&<u;'H6>Dd0$V*B<mG&2;:X
%+[-/("^bVA#?D'd#.K0(-sOJW;&USP+1hKr8Vr"r!JW;VP=IR1BdM`HH<1Lm@4%/HZM5!SVUN>e@3[<:\Si6HAf)a$%->Fp0^h8&
%LKI=GaQh:IJpGR6J*QE%i8G2u#UZB5ku#f=7"H_6<K6A81STEd1k?:FeR3;rc&_%`(C0#hf&.c@L#UF-nc\I4eH6Y+dj5GE@G@?K
%W9oQ-#PV:LY+r%[6"+>*<=\DQ+tnjn@2.9]r]R+DLp8DS(/:pQZ!$_"!0CIUH?!(s,nRL%>5L'YAi.5ZZA.nGAIk,8cmKHs;fA%\
%<\jc8)r8t0U^f]TgJE'`JKP^DpoRP$$8Pe>.'QHXh7n`;Npd6LMfR$bWju(mRUN"*&<NQ'QkG)QT44a?(74:VBIk'4KuNfj6RH.d
%QH,#Z51J5jlX8$^i1`CQJ/VB&aPsa1he@@Joc[gfeQE3a.-&L'LPKnOkK^n_p>^+Q\0lQl"IDGU,?[)b6)ho'bA'n>kJF*)#In6,
%$i4m5K,_`*PXPc%'+@4/$ljI\/WVZg`mQdYOuI9*Wj".Bfhe.lF#:D@Wh565H>]V\ZQ/Bt(l=OQ*@6=p9q-"WOQS'A#]XcSR5@"^
%(F6+&RLg?%#!c(s56<*#m.4>AKkp"#.J`f4*j_;G.9T*!Bu54ulDtc0qa"F[l"")j!;ISP6N(.0[&[c<AWN+Jr^p`/9e0rr3<T"r
%4dI;_fp:J/)MUBKliq5UTWj@J@+;!a25DJ_b/Y?p?&HsjXMr2=*\bQL!G7.VOufp$Rf.?WS<O5D=s)o^bcK-K,!M6LQDWS0g8fBG
%JDn[fPG&[VAKpaP*R2GP.)0Tqa5j])7>jkgQM3<!Pg%nj")R=Kh]Qki7%UP[N"n3j]"&$2K?DVAF1EHf2%4/AS"pipl64mAi]C-$
%3i,;WN=*#]kXetcrmjpWb,-mg?uM&^LcGgp=;cFakWc2c@g&6`(#,J3I3T@XCLVpl44PmPC,@`e;&#TpQAPsXAYT`2M.+J:21u:r
%h+E64S>EAkQe*:";`0sWDZbP;V&1AorjRt7j)JKQ1p3qO:be_[4>Ach>Rla43L(k1QIE6TAtU&@Mrf#]Vd0ECJMb,W%4TmRbR6=:
%&[YsLWSD][6qmsc1&hVcOCc2ZWm%nfX@FNA&4WcK/Z_!+(+_t[OD?`IkbL.cYkn@;he4qFZGO^p[MG5,d7hEh_ld@OU`h>M*1TJU
%Ke'_]:Qtqo"i/:uYrbV_m4-rmeBq,MZG7!nA^CP'#h:Z,/+8"^[2m&PaBC7"'Sne:q(@ieg@;9"IXK,Q50-&H+<4A2BSCHgkrX@p
%N&,`^hkLE:#fL4S1EMFLA>76]%d%k;=jo7h-e7()JbfAtk;Y<bKQ0_aH#_`^`<oCqKS[)E[>4YfU1'.\U_TXFlhE6MN<2LZ;1h*'
%K8*9W3fm'g2p$ej]@PE2(7I#J:-gqc/(QbD+o'CoEjRAj$F7rbaAcFF.X9#=o+p]_/8`VR"^apb:0Z6>GV=rJjm9><O$,``nPP9m
%b+PVRkV7*jXI.$4Lb'[/ICDIY$d/j9iDkCM9quGoRT6Js?`W[T;uA^u$ckfI#(-`UdCctr(de>*;Si21[L0P:p?frccIsT@L=u5>
%U8XpAP(h0?auN6!)]AO@5^ICI*uNaR.?9dNHs$;0Qd\s@g-4*GAUo<iRo/n(?s/VX.$eD^NaN,H=H.;+o*RSA/6;1p.5L@?Mb';V
%H5T$n[AYpEA]U08n3.t<WWLW++!nG_+;>37AGV+)Z5l\mWl?#sLT#sjU?jr=3HNF-5rLCW-P!HQe'&'m4LP]'78GW7B^-N<N@YCh
%i#;/J9s^1B_B#0=/OD(O!]L6j6V[gg:<-b>N0u/I'[Z`R;>#>P4u;c>>Xt4f5EA0u,"R#a\iDMNSm;X9S"PO(M[Ik(;3\h&B)a,t
%QtQ^tK6[e7#%1K^V[F(2I;&bFLC&7!:2m<2F,[9d*P2L5OW,%33I,(L967h+EN5gJ\i84XBUua@BNg\+?oFlZQp[E"hNcRpOR0S'
%%)U&[>DLm<h5DHj4"I_JW'I@Y7P2m_CHCV*<B<:S93)tn-r8kC@R(>c^^Q3^oK"p*8jta#0uhd1Wk#,IADR$].)TV'^(`oh(it=s
%MM@g'=IhS%,[pmP8k+aC@M4iqa2ArDgu/d05B:C4I=[TS!1dHP?ZsEqEYMtS!FcRqIgF,dg!%+HQI/g@He77M;p?_^&TrkjSne8#
%Z\2QKfl^Q++=OqilOI#GO="1G()AV]YAWW6RBh;4F@\(c<s)<l<\un[+bd%?aVT[o+EB,hHU,3f@UWT_7@D&(/6E?`YoCcZklN^]
%^j]`A>WiNi%<s&pTOWan)oI0`JNk>:$7T#2Fp(0$Pu5FQ*Of(p)Pt6SO!=q@BV:HZTu)pL-td0IZNgh_[(>3(+E!D9PMem+T0>*D
%eMOE:A-!H,4#D#WW!VMIOR@jsj2JSb4,-fRn%rX-Ys8;RF.!faKD#]R":XMHZ+[uJ^;iDF<g!$K9[.I/!#sIr[9pQRX).tLW;bl!
%7#D%+Gtui"G+KF8]PbfZ-13k#1e?CN>P-EHN"(]*o4;<47Ar0"=k(u(WJGKs4i>^k:4_bg/JA]S=ZY-T0*iX<5u^0u``,I)>%0lE
%$,B6N"K3A9T`C,[a*?m@KG?!fco`OrJ:Y'-baPo5)$7gR>;g`oY^Snm2X0,Ir,9##k#e))j'%`?0hHYNbDu?!a<r$ofc]*'J[?__
%]3I/A4)M:?^r"lUnDRJ(.T!IM[lZG?<3d^k+J?]1[h:(t$58-;jRY.fY/htEZt,7A0F67o1+qkuY:Bk$Tni^>Hg)]*6YQ1X2!cnZ
%(8>adW'ZAhEe>U]2t>GhMo3l#llY.K=Nd(s@\h-$/6G/Z>jsk#g+#SiCa[q*#1J]D/R>^=1m(%`YGe=p#q(]*]odTLKc\a%FSd22
%.p4kdla`]Yf@')"=iA6=<7r9=RZ>`!LLYE9[9q\%c:!BJFi.Y4jes[EQm/KK[HXT_]ESicR'#(A"spi[KaOo!V8G99;?)6gZ8dAb
%%9&h<a=_E8NjSR2X<Z,CBAm!PQ%A+WnNY[E=:GVNL!XdpB!YtPqkUrIia1aU;hk@PST3@a7"rg7NV&iVJckYH$\^36VF#-:3AeF?
%RslM?M$(C.fo[F#"D2+gBE0d")J6fBl@qZX.i?/lU,R?ph)Jt@Q2P</>;U)X"$22i!YfV6(PKQdM'Z/IG,E;,^r=-</<.Ar(ajTG
%i5>cf-[I]Ve$,:q-:aJq`D=O&AmiR;/ZmY3K@D?OMq>q1]5GG'cK8pT1PKt9qp:,/MR[7YL;%`]'+djM?(#tk<\]'Z1k0t=\0$UL
%jK0TJ6OVB7>[lN/LcdD=*l9,t0Vc+)@8%WE+CNCg6Yeo]k#7Lk7<R<^63JqnQhC30!!/5J7Pfp)aL<=H"pBpe&oHYR+$<7Bd"qX/
%^K;;*\&cg<J`?kIP+NJDB@EiSU^2n#8hQhK@;Q`:<I,sVQ$KF/J"h'm\<U1U6F>dXfF+T8RSB?ke4@:4\SHjHX2[p#,sk`l!Y"L*
%"Due;/M)[P)T]mZ+r&7"OE&&R5jO)b-'I)l42uYVR3TJ#Ka6+dD0O<"<S/$4gQ9W!Zs6-U3f"E!f,VBm/B+p3A!h#d?>UMo!qrek
%c$A;(>$]f*4qQ)SJH16U$IZaHQoKH[d>.j56uEscTMne].9S%V.O='+OXZ\"]7>.\^uhrbB*'?9P<c%k+AqXkStiI(S^EBKB$S;0
%,:e04#m(3/@5g1\2'Xl`g//-T)k&MoR8#.""@`V,9j@)0#`:E[-]:e>"XBt_3"6CXW7t6'_NF@Xf`h.TPP\(*oUb/qr7CmR8t_88
%j5:L;'/n'Ll<'^&OiSA-YP?=7o/=28Td6"DH"m6d=B5j`g_ELS2GE0RF#c\[+GKg4HR+=Pi(8;QC^S3.iN-br686aYp5P1u%<\mc
%^60s?JZTW*[4(mKj"_scn8SbW"uI":I7XXI_>Z@.%3bc&_t:fg0G@:OXfK@47?)%7U5Xgq%P]i%Foi(U>Fg]PYcoCM3ENk%Fs5B8
%$mTLtI2ThW*U;Z=O'GBC5eqV-"d'B9K2s7\`f,Jp6W%Qll4j7,\n*'=%\7Ol2f?3dg"b*85sC<%!RgDlWlLMt#Ke[<^9Nd:,QZDT
%\O<7\OB<j6Zg)\#pc&9i?X-'N!i49^^f^csM^@I-JC.*PB:,r@-k<9m"h,*2"s\oYf3HsD+=9)*Xa=":&o_dQ9/na>-1f&a!JCRu
%#!hN&>Zk+5Q(ACn%DbqnU2kQWOAo"jle6JM,M1j9k<<+g-FS'-NbXJ(Dqnr+%3WqCkE1&s5a#X[TT#QfRV$=$_4:nhYPG&9I;#F_
%+1d3b"4K78]X`_l%-\lIRdND#$0M?/RDoq7H+#NTH#GelFD"\L+3/I6!q6N4:h9:)2l/RZffs;2]J7s8@hA+USYd62BM/FJAnkKn
%UK[k"GJl!WC*:NZn7%I]<(31A%Vr(RTNml#__t?$5BIG@%g3;k6P)!7"7T+u"B7eq5sV%CmE?dlO*J.JpWE[%\q/M$+7QoE_H6/'
%'7bdQ5ItbOZdUZ5@33h]Sj.f#L_psF)%<aX:?ce$LcToGb"b.R^*1h\9Ei^n28_">S#kl#DWh[7!s_k^52B\dI+'_f#Xerd'7c;T
%<%])S`5'3d+VXnrd-$F&6sEqiEcdKu7%:]=Woj3r(7&8<\7B#li;*]!M-A;#.8LE]h%lhpF=0D1[d'W5#;6`g2@fmdrnT+:nAJ#U
%n[]6rS,M?5!#R*Zp4%D_msjrrq_,\[mG0Fe5C`D'olk>(rU/EA3;L#.b]c[13DhB&b)jGD(Fr6(*H#X%UFA_<d&%8GS+RaKGS*;^
%e[G*^<.^9NpE5WbP/GFkQseZ/8DQ:^eEL[c_FC\Bg,TE]df"6DR2fN&0`*tcBX2W(W8D03Ycag0%t:)GS>_s0,,+1bI!=8_X[\Ht
%"doiO3BX`\5Ua:_6ObpWEu`*8R)o?f2ch'3YX2$f%je=Q).!]6ZpY'1C96q!["<(nL;<E0W^0+=0H`F]C*"9?9Ob.kF"%/1WD'%7
%OHF>P0c?lSiD00n\o[S>eEG+-<XqF$DbI/AY,ettl^3_\2.+o"Los3t!#S?9#*6;5>ORGMg!?Pc0Cfl'MD@<&%HRc,MoBLB9Fe,G
%"H8Z^0Sc(M=9Q/^!!Hs8-!h1DTtuS@LK"Mh<=])]9ABEl4:Fu@[?"'9AplHtqp6m(2^/de&<gfaY&t96"*]tP+(boCXS=ZTYo]3u
%4\-u'OCjL<\u^j7Ui*t-VI-\I$!3=qW7'qN3Mar^(08YsoHd1!Pbd7pIS8ff<2\-B%r[Gm'j1@C_#cpUPnjFK4gkH7Dmu"e/qXXI
%KG^ca66)I##/H2Q-OCqHBc'];(h2(.WJCO,cq@@^/*DEaeheP)=r^_C"b=VCpISJ,Oei_,6?C8Q=qX`&ojmH#IXY,WA9nl]AO*e=
%ZZR'(oi2b2QI\LVJH(B\4FM+aVLrN[9Tm,Fc6Tf.hE,Y,#7$&O7)QQ#63%Dr[V>dNPh/XW3M=LX4mk6D$O!mc#!L%-0aXIQ&0El]
%d1FCS%hCcWj!Ui@ei$eH4=8&s]E(EN\AJ_AkHjH(e_AV`\#TjcL1'SOWp1K0OMlYiYq\M*iet_7+_$;+i@R#R,$G1Y$-l8+DZHg>
%=F8JFiiN<,VeLD#);2:IO0n6?.MH"H&:J!."<1>(VD$%Hmcd\C"#*g"=t-5EQ)<Jr@E@@Y=GjAglV'@/jp*Y_'%/ni".09R/<Td2
%YnJa0r?-_b"r%._-R/IB(Ko#fB1(QQ^`Jp@"!0(B5c"C*@V$TJG0JhQ[IeX=%*/:q&(#RH&tb>Z,O:9g9cLh"em+U-#b<3Ll]WhF
%A4R1@"MeK_r*,,L5PV/-')mM``TZJ^Z<j@`LC/'9[QRq%Zu;A$R:eIo\mAK7WR`chVe!O"ZD]M(FJK*_J4W][,6<Zi4dA%nWO/5-
%V[_K?'$[@(`TTZaOLR&#!#2149RW>O>HqHAHtu/+*`ZW50]QiA@Rg^bfsjNp[W4YN*4COb/tag&XO6hQbaIV3;5Sut>G`UT\X18n
%OV!rG6l[c^)cM>!_^p(BZl&H;LY>tEIY]T$Y5.Le@)T%>KbF*c9T?5QEWZ,Pp)):j9D;U:d[kUlQ5eX^Y9dKA"'T/#jMM9E+XDg(
%hKW(M8%c$Qkb`29T[)qh34P,`C+-#JcVmi$.u?\eoi-`C0u"Esiiqj]j'^:c23\57+*8VOVf:G<KPR;6Z'>'kB2,l`FW@\S,HS6s
%elaJBDXF*D'm=^s\/B_Hn<]HCRpZKQ']*c+@:*@S@fne`,ngpd&SmsF4&+M4F;I:uBo68QiY24ea*.\h2o+u5bE<'P)F:j:LKWc3
%I)?%Bb.-UCJUUVD2Y@`s!f`i^'!b_p#GnP+TOSp^l2hNDB-=RpOM/K';Eub?BONSf"VVj(.7HYXf.f7nY;<B)Ro]X^7,)>7m9%?#
%?8,6KbVq-`NNmeMdGE<5SG!H&H#@Ysq0V0c&4`:I[Z^7*^hLcN96rC[%PBll&HmuM!Ys"(/[Aoe]$R@4P*4saYb^-+EPiCP2O(YF
%0T(T:nE0OiLl43p+%kYrhe#+7<4kZ*]he;VXDrq>if(8F+Km`/i^))fE9I(n85Qp5C']&eR04WWR)t=6K:,.1N!Et74Q8,S=G")X
%YtQr(&FP&`NS@Lgq3/H)]6LLtjo_FdlFI#Q:Cb[UU'-)NRQ9>$?iVni'5!!*h'%u%YUa1j>)WglT68ca+W-!%dP$Z.@u5hqp@3e[
%9&<YJJ=u`3l%4604tLZn>"pNjo7DC@D$!//qkufcH"7@aMT!"_Ka(CN\Nce-A`Gfls)$r)kmo&k:CN4KfleD-40ll03h4J?CUbcq
%YnkI(\7qa.Cb8IdFl__eT:;JfoH"Q5NMmp[TlWC&ng;_XoTCb&&$SHqa.PU@i<8d80!u7P1<PliL5H&$qH::+AOF\jBLpuHGu[RS
%`;0)f]@j`r(:./GMWsC2s*,Hu_`LCm+UZFdZ(NW=mI4RW55ECGmph?.PSe2Q!"*d,6YfXpNL-`[h>p-^qb#F'72:4?W:)El$uDMS
%)CnBh_4Y1GomG7=(O\EJ&7p0P&UWnN2)D*h"V%32nC*:b6V4!R*KD]bO5iX1_H1*W1r#O-=NmW%)9?FjlT+[)Kh3*1ZE,7^>Ib(D
%6s61Q)8Tnj_WGJ>*?K.83h<[&1dR#\)d+VN3<C7+KE^`&=W3K=+=S0<B3qpMIpa<P#+JVqg+;]ME<*I!_`5%S@&6R$F`U%b)9C(F
%@,j!dcQUj0UJC63VAVB8@_$;EY@1KA/QZWjJn?kQJKN1q;iSVf(jV!e\uZ(%<NC"^(7$NVDn0#>"aeu`L\[(]6/i.\786hlKE)$G
%]-'@V#D*5^6!Eq4Xc"fDK=A+(7qDn!]A00E\7hjioc:NJ+hqI"68t^7.]aIGKjFtQbpr<!:mA'*TgUlg:`773:N7Bk>H]0FJC(U\
%eZa`N3ZOc0B3S1K%m)Q5Mi,Ah;+I:f3M*.#9?k=&)Wh9l!$s2#(j5@$?JF4;f`7gH6tBul+^g=X/rSqu&9-,<`/OhYn"_:)>fSN#
%.MJkJL%&eadT8RY.%jZOTG]^\a!850[76WoPd8[kAM#S,$s]0<jIBX%daWS;Wc(oO<Q"PPK]eto+2D+qE+0,%#T.3[I2,^8[(u09
%k,EpMW7G(Za*9@oZ,<50ftno[45KC:l/O,J-TjK%L;iFX2("'lfl(/O3=;-F;hC>ol("-o$?MKS'+G-!2cuANS<e<92V!\`]%>3e
%STSY;/Ln\7V`s49n_Ip'?;"]i'JLc5dkEC!XoWZJ1nc(kjOCS5GAFMa"C;+n[)1i@82`(`)/:!fgs`TF(6pE$B[.*2(jrb@Q\-jj
%L\:l05uo`a]Emi7=3YrPp]:gC.CR6Q#`LPF;PV9?*#Yk;(GMQ7:@8]tVjE4PpL-Ia9M1CR4t/ob'7_Jp#\4?bSR)'RfP,5i#]8;/
%N!`Ea9CYkeM8(95c?e1_p0+hlG&KR.2"VU[6CR#-2o&Q5e;4#G,nAFS;$ufuNJ1qWe7kbH9KPS%q.UO.e"E7^=!3&!f4C>QaZU"$
%VMA`MajuBbN!gTLR'_8#/6n5]'qp9tdk7$\Eg]M@]oE[hD2eccK,[J.VA>L+bg)\=n)C]s-qk-47B@:9_/Y'oKlf@u0>ak/JCEi?
%^_I"DA*.ieGZpVF)KQ,eYct"l02;Oa^3R+rMetglO=T/L[dl7,LWB?_g&em(-rL7Ii:pFH#"sKY96\?41'C>=WT+VE:LrF):7c#>
%6kWdHpU@6*(h9+e30[l-i`f8a/TpH8%4iLJ6R65lbgp?:!g">KP't8'aW[!N^nI;n;e6.@P"aZg$Y4/IHk:5V]!uSQ1)L\'6B"UW
%)B^\H"`d9:@3BX95^3o-SnXTM]44b+2f7C6Fk&hOkS=<.(oNX`a)ud[OCBuOOq*P*L00e1[3!dGoHMZ")H[QIBlR]aq[k>4=XWun
%2<\K4#OA$[ZpCe=d;nCY&cakt.$4,Nr<2iF8)o%Ch3)6G1$$Bu7^Y\,Z2i##8N7Zmh!?!coRBu0l_TKmbg9n.I="cI!^#(XA17ME
%&]D?4KF=l>al4aQkg'!K1bD-rF([O<V+XKZ%!+bp7-&0AD0Jnb?^c_P!YB*aK!V;)*jU+='-FriZHO-njtJn,)+ukkHlCucF<c\7
%Slu39Wa;,e_s/Onc3=EFa=VQ3*;$D!7PS+M\K@_j`IuF?1>rc(8O@Har?;$+_#brUCYi_Bi^>JQkhqP1aI#04:$(^YLnB]Q66FSW
%dbs=ehK!,LXI@Q`.1p\(A#uq^FW:2U!i6=V'.*$&U)KUiPm;+qgWo"keH^l/7\J9,'i=YIeU#r:3fZk05Z46Te,[-GFo:kgmPdC#
%<TY7?`kRTV8XVlAQBFU%/)`1sNa*%4Qr&T9ZRZW.37@'iUM>Pq2ZOp67:rS.PPJXFF/o@:KW(&P(6hr+1qGQ6*e&4Km,*5U2>Rht
%m9^;+oi'l15EPF1aej,b$gB8HaI'ZVT0*'mmTN'BoZ%4eP>UkoIU&0c31]saqkp`2j$&2l$e3=eqA=\W/2NZSiS(#nd#!hBK>I#e
%n/_[`9Zf_t4iT4Jele&RN5D_*lS1%jPCR'tZojl<GUV9kh(TlP=pa]('-8Ba$RgSs*B*uB0RZ`=a2!/%>(Z,YeY7gC6jQ>_L>0;&
%*M91(n\s(O^dJFXE@jYbHXSt<:;lKm`uoQ'8`E.YeT11]VIO67P]2q>+Lm#J80p<7[aJK<NWBAb=s;odAfAC\c#\gtOD9G)bqUCc
%W;I*jA*sUZlR"V=3Zu`fNamS?87gcpa%_CWKA`-;rJ'0r_R2;60q-4jD0"ZKJ@@&<0t-!`O,$RO"1D@"7Pnji3-NG)EFq+P9PY1Y
%GN8]5?K817F&uCPp^3j7:1NVrJ+OVC``T+!F@0`ce\&$/B?YD(PdYKnCg('MNJI+\.%`5Oj2Pi'c56VIN*P%p@1d8^f#WfT]1be=
%EuC%=Z)7tp1!JrN3O72fDdo-!'h$'_r$,-iiA!ejl-N--(ep1RL&*rF0ue2O<t8_F_np>g0Li[Q4YR(M(gErF\.BM'Xr1+"0?0eW
%c)oG2j4Q.S0'pOWP+f?[?Ha$j9H>K6k)'G9r!ReTY*6HsN)=a@I?7Nl(G"RkfSkHqJV^dGPf?)bN5-M(OUAoZOdGZ+#1aO3inVLt
%r?0a4mUGNkKT,Yn\es6U8eF]EW(q.hadJ'tLni,T_Ha1j=bC*!JccjQ*e\*[lF[LI0uqNc/uFI-R-Ek0SpJ-A(;l>$WOC7kKBRoc
%-%jR=-imG<$Yf,tq0+M.druF/dKti`1mlm_Y8BUM/Z1+*[L,$!0qJK,SB6Y>!WXs*E>;t%*83$/idg_7O*b=c?:CcL',>Qs@4!L#
%0c!]Ta;::SYf+BpF-bgoPgS)cMOW"c>Y'aATbX,o(uu1:Z#^V3gAtEg$Uo'AW1#LVUZ<;:Ee\$C+3GqA.1;7U!H!AY',*N9B$_4/
%WdpXiAg\p"=.2EMgbh=\eAR0I,HYsZ->&*Scd#2mkS3<c*N*5Gi8_[I>RrF$FC&EQa:57O+>/:'K7.'/M30Kjb&C#`"^ZkbT:&8E
%*"V/ChU*;j/9F?jAlaGc<'oSJQ&#.O7pJ`+3ZTrlhE^HF)_inHL<4XjDd[-Ve/l*H[7/3:Li6"u*VD6K1D]MKqiusSPokMu.1J!K
%2B$@m!n+9VQ88n'q(u42Vu_/j$'i;dY9+QlrVN`EDME"N#%HAEN;pmKgp6I0Sb\%D%^Iuc0oMJlbbjaE8=m`t30OlJ(r)"Egr$(*
%f=/_n9\m[h?&=?QTo/AO4N!._c^p.&n@OblK4Gn$P]I>pfIAHj8\d&R<R6WA8H+5Z_[2)YCJjc!7"TE'VAi"0+P&&U)]$bXXC"^\
%N6NH&(7f?G@H?3P,WO=.LlAr_LK.<%O;?b@1^pDi`hr>96cUm#@Pl!t4$LZ<A[j2*K6%GG@0a^+.>D&,6CnS&0SGs,VPeBl`0U!&
%6`\]e\M,Qko!97D0X-4t+&4Br@N+a!>aU5-s.g9.@UVMP!TeE0iG/6f>\JhJZT)^($3Tm-1nmrFKps$Y/#P'l/-0:&8msajGZnSk
%"pZP(pR+hpW4>fI&.4WkZaJ^)`\CQ,1S&Jk9(1eV_HB6bc6\Eb9"QhbA)ft9D'KZ_&f[^=o*?-7\6`j%Oh8fZc-AW1PuAgXJ\,%I
%fF7Aq+l&%ab%(bIgb=VF629A/.-lUR=@Osc7[-0JlUi/h_8$0&HG^eO-kB[H#?q@GE!IJR9taF0)l$[m#NHQLbo;%,rEWNXBd*-j
%Uqo<7(>TO!C[rsGKaVHGLju[I"Cj+u,.2@+i2&P1=2&([IQLghML]G\"_Y^b?5?l.<:NhV.[VTK]U=?`kgoX&Lk:EIW8J!MarhQY
%_1$c?$$N#+">>`D)#Z,_=(s1U."\cC2L^PZ%SdQTa(Kj/(HO]5.\+k'YQNXA]9!+Jk-8]@"+t=g#)uO`+*=E'p28r&+JG;Dpn0!2
%F&2r\"M'eCV$=qe<A&(I#6#odX6d5`%XbL230c!S0Zmf1F)c)*fO8=o2)#-]X^.?G5q**o^(CIj\=mdK?=<Wijb=Nfqs5=P=Fgu,
%b\I\h?t]uR<\CJhgbXC_@gW5=41?C88D%o9n8Uf&XA!2>ErmFQf]SL7#i:ekAHYJ])DN`i"9t_.*f][j6Q:U8lTti8"UAq@ZN5]4
%JV@!.++u=I.9A.[CjUCE'eh/P8St+K!$&ms]at4>U!cF"!$g1!]M&MpD&P5lZN.m^"65fU!97'0Sm-j2!(nHFF5[+BTi1q-DDRf7
%!gmn[`$HcZ4?ua\2GO5\U]QdUoDdh=,V2+Mrt^Ns3W3m$)L#io7K/nbW`''BWOe3$1%&B[#`rcOW..)^9RH6Pr!WB))T[bbU%(t:
%iLIUkOT\p:-N9jH?ac&Amh>5p+('hR6YOEQ%802s_>ARpk&*6tnRs.244F2o7OKDamr'D!aEZt6IfV4-L1Muhpbr5#7A,bVs5H-R
%ni?4np/9psHR8Zf3#TcK!f9eJ8FBP,r_4r)D#&h\(Ee]K/AH?S>dUaomk5tCbo>MH1mf6(H]@c$Bj6QS9bT?OHK9Omqb&F610<uE
%il],'T(DrEb''S$_u!(]\,UL*?i7qaIFJ2d5C2]U[(jcW>KWiAAI%C'S+`1u9(o1-&XH:h>O&*aAJ0rS`+a_sJ]L?*U&@EW9"B\9
%p)!2_i244`ql<'aBT<Jf0/I^\Dq8:Db_!dM=b!u1^ga&0bkd5Zbf4K(NV+*KFHH(>=b#*QkWZ/N^F;7HTX4V1V3PnIA^+Tp\$bc9
%lRso&;2)>bnfAeMcM@o?RZ8HsemG`EZ9]`679EOLbg-(.pgS/#Uq]UQl+Ae&?\XW+MV;0^Qi*<li`oT85uUWaE;kH=18hB+J$D'Q
%+8!GF$Ro"c:AE#]HJ<h^B]tcKGM*0@_=c!EQPP]#h(Lh+-0Inp]9^\JBDYt+8JHgD(HDdR.lh\L+r5G@.Z>hN8_hR&qSdI"m=shK
%_WT]*^XGlR+SfU"A?6`1?du9gSi4P@@riQ+bT=Yl8mp^!MI6'<+),foo(-if`[5^p,G,d0hk`2u7du<q)"S2+n;CcfkFD?r+[[!(
%e,,jCRR+s]9,:JpPgAF)M.hF7#J%#Bjt4!7>8e"E'<gc:<,16tER[^Za9+,CYl"!.6(qZ<I2Tpm:s%C=.:<S8gaNTg+^`lM2?-TF
%Ykr0e`lWV/V/X46HXZZf@rjR7BD5u&&IM+#h%s@bMBgj9^>,8'CI+PhMG`#WBkQeHHnR#f4Oa1*$4Fc8I@7K5YhSDj+^jTp6LP;]
%ZN>?QFW\aYlh%n*0`,gdpEaj$Zl\kRgt`.F_"iDP:#KAaq0a"$#pom%IcY8p#rR1hPV$$Y+o$bU5)0gL.caN()lfa>8]uhF(ID:E
%cL4C,6A3YQ9*$%/$c+JQ\T/K*_6<:ETS1$)L;Da,cp8J"?V"<[lib([go[CU_(Pu=]bcE1Q-L*Q^MJ_VQcAM&!SR3#%):T8!Y27e
%r+]@?C>+s3Q[?V^Ka)FL?enDXeR80k5"&Z(S`)Mi,?%`j2o@;"hJ8p[peB:0Q]:!k`uNuLMI/tk%Ye?0MeC9Z.+rujir9D(Y6)Y+
%VE9SZiO2KS$R<d_X4ZlN?5\3+s0\r.:Vj'`7"OK\F8Vb-JF%/TNaIT@0h,Mjr'Fl9fAZVWf:DBc*5<rrT.l.0[cMd2Fg=7ibQQdV
%iYNV8A'?BN\QI=4E/J")5ch`5;#Crq`Dsjc21^OX)qZ(H04)ZV`XN`=?\%d.]%@jK0udBMD);*eAhMZ"iKlu"1^0H/Q[>oMU=^<3
%BtWbt!@NWZjD"Bspn_L<5+[F$:X/m&9)q,5q0ZWG<F1O3K&IN'<u1eo%)4h3B"p,!;MnoL%)6J('rCgS__2-t\1S3)9]/^C=A]9n
%_s$6RiE$2r?5\335P"2&__5ZE;1d^BMoRRKL#85b^,C<,q_Cm7;NUW>6VS$*DMhf"43M\C#_jM8%jUl::d.C[o(tau(_Q5dF-to`
%G$fc[@:YtOICUl%L63@r6i%2EaNhUF[)IaP[uX'.OOJ1d3NmGr@V9+]2GUp!,fuV#AH4c3?TbsKO3b2I+Z!<ZC!3jSon('smd5_Y
%G;P:Wa%=9-m@:n>I&?NFR5+Q\o+.KsN6uhj])UuNcZbi#E'E0)W9SFb?QA+&?J'XF&`%M<o::VYEAHEskX`F,q$u0;aJjQBJUj<5
%(DI;!$s\U9am*&&nG)QV#nIoi6G+7OLC9"nKGaGYieq:T)X$TY:n/fGB+!O9=E;n>I"uQ5is`X1Ms#1.n3pq"cgL_ER"?_0GQ-IX
%)aBkWHU5j*Q"X)`_XNb(&+\SK'c;G_m\NT[Ng\/32.V=rk$G8@2;R">TU=XX/%l+)0Cl0bLb!<q36+:rFCFP_jq7:!7bWcZZ#4W]
%S@ugFb6ql7pV(2BXto]oo95]K(XE-5q[6aa*sS6I7b?D>CNR!k;Qp0)FXHEc[2T=JEV6Ua%S.n@lJ7GiR!N9:;BtK"*Q=),h8[nO
%Fq4^85gqfbkhYHHJZspl]o_jfN(-=X:KhkQS=u:.@S!qu$$qluE&g-9%QeHiQ(N7=ZJn3s$fOuA?IJEHh2h?EZh&cd(i&_1cAT8j
%K=t-"??i[/\AP>ErV4U\)_rZ#"^=_L;,'=8l*+E+H'`O<3%HZ;3o-=W&.iB/TVm9Ojb6[C(XSNdJLG@>.keRN0)oQb?;aO<UL(Ds
%%S,+f.kf3k]Dn:a(Q0;$`QlU6M_lrF,KhRq7H<E83-jJ+_('V'?9Zi3B5)cNm#,R/]";>O2Fc.S^]f_[Kl.sk:bWRgN,n%@<=:%t
%i8fTBlHVD8.H"eCB22d%Bmb0cj<YBA$u"hbI:B-;KFRNOEq1tfLSBS4-SM=?+rVi4L@Fa>$=3r!=:TZ>jCR*MYSlWb-#X!W=&.UP
%F_k;2H-pb\s%^ZT*i@Pp,/QebPRAe@DN(Q\%OlZP^gkt%+*J*/ek>Y^\3HLH=6"KspmZE\cV??;@H:u&$ff\RGo:+Bn)fSA%$G!M
%\M3T/Bk`O=*0:A>:hBa^`(6Dh)0sQVCjTYG!:PlZABBAm\hN[fARC_l<TuTdMO[-ingYAF?<9U&+s2YI8/qBL5bg.+i`"9F\hN]L
%7KqYJ;t?[,MHnb:s3(A<Y&q<A<csso1qd>H69@.E0;DKH9.)Y90-_rpk$[3Y0Wh\O;SX<Tc8@j$P"SRoMJT1.q6#?cWL>JV]F5*)
%P##9['`:W-gPh/Z_5rm(I(Y:/Y^4a]GX7J"8/\4r&_;tU)Lmt@U4fOa.c,`PbXb%=$aT_6Y!fpa'iN@+Y+O6VFTrBFY^(5^i<@@6
%q$1Eg`?Fq4E"ZKMe?DbV3-^3qgZ'!\!t!K4Jq4`#*5k<!"MDX(Xj4]9@:C9,pij?hp+H!L+F,/*M:(d8$Q;)'/m4mfQ$\je_uTJ)
%e@V8K*Tu8GQ>+"YmWRV$ntKK-:kI&TZgQi#Mf'*?8U%^p23N.&\]Yoa1kThX)V")i\4]*&)F:lk/L1pSEkYfjM7.fL[gR*g;r$V\
%i=fTd.VIMT0oYl8fe-)T#k'k,0$mbB%6;rkW+#"WB,:`GLi,<!DF8hdE9mXa"-<=GYmV^aGL!E#$kM>U:6Z-FO7D;u_Y[@k+6)q(
%:%oVj>pBkDYM?];V'esm#XGtT"J&[3<AfGGT8@\Vg4:2'YAU\kJXogX'gZeq0<D_r@MUu)DR2dP8TjPK`Q7j!KabaYU3];.MZi2s
%L0`F_i)D,9IEj1T6%A-')kelH,`Gsjdm[7g.(CmO\gpn`_SV#MG%PbM>sO^tYBM>BKb/"N\TCtQZt`G%!eZJ?hjI'&@-uNs89\2B
%h0F*^lo,7m>p]ac")JDUqWec31qKW.!nl+X72PWT[;6W7ARpZnU:Vt:I,WF@<^MRua0LnLc8ueCfs>_5Ep-C^FVB*J/KqN9>/?oU
%:cchT$]-LF8k5u18T_6*1[O9M\eH:4G:(_nNHHo<K2*,UfNE<![")Q)KgcfTNXlWER)*eJK#1Z4,@>h,dA;Q:]p6Si"6>@#1qHI6
%],_U_O_Jp(jgqTG\d8*Q7a)(ELkr5NDpTk8L,?Iskb=C$Yhd[5/oLJ#?cJ^rl^5o,d-%]TZ`*gsp>"aD\5%q)fGnDf(\1h5N2ZPo
%,51E@O:V'?SS1(5kL,)4Y/':CkqTFKd+ECW1$hqE[lJCF2seEh#:puWMcKsKKTKU"V\aAZ%.[XT%\!2GfQ/M#*kiHa>[G7P+Ci`/
%a0FD:HYsg1fQ.p*7L%`&F1%TbXC0@c;N7LfBD,S"i44!gE!Y<oTN,XNV7DO<FCELlT`o8,Zf`M=^cF"O(`rs`]WgSiWCdKf>Sc':
%UuCCFXBU4@]o_DTb1U[n\J.lp(jR_k*==/HjLMW.na'#B$UMc`Fn/cC#dD(JkL)LF8e=:""r%:>8Z0n2g6e>(g@Vpt=7P^K4r9ua
%2%*0OX-q;HY4T7MlG-_2:7nS$plp@p(J+\.RgX]ufi"gOG#VOpp(23_kKh]>JnhX:T1dN7WkFoeQ\(rZ\[jqI;u5?,I4c.[qTb'a
%QUHBU:c/#RSAEg!U!Em+K:CUWI4k,AN&`O=qH4^H\IdtVd>XLc3"<k3ejUt573729j[,UJBdLqN$$="u6j(:DFHJ=f#jT:"9*RBN
%Y0N[J!R3`>d%p^Jf*d3`3K^=rX1:8@8Q,'@ng]t(SG@5)1Y^4NF&<]HVo8CPF[,X/HS2X=8aTq1)>VKV%0t]R#oc55^40S;KiDu&
%m(%tK5\1+G/d2O$>hF*@Xn^i"T$,UX#)k^3/LRBMhX%dD:/]\(HS3#cJTX_[)hJHImZncB/t-F#_jPKX;:N-]$$;<ZV54s*ATNBl
%5^*U]"M,b!!o68=1mgj(TGn")6D;Thm+MlZ/@\.jh&1=&?HZOK[=Nsp_R4Fp>pe1]f/SO<1LpbJ?T<-fm,?EV6^PdI83n,K0)l8S
%oKo9FH81f8:85pBU$fY[%Qm'FR"Zn#>uEO$8J*79Vi#A)mNfB6>aFP:mj(eF72Uk6%Qi*s:8/-4Ye\[><JHa+!b]oW_"P#ZK,4]H
%2H3J9-Yk3`=EKr5B%ksAFFh)7`Sd"M(EZmjJ^0u_7YIHSac])Z0JolR(D^:c)rM\tN@rF>:$ap#/d<K.!P?eD6;2F_T[BS=T-e5n
%.3UV<6DM^>lSMdF%Q)!$=NB_a\r\TmG,EZ`D9<QpdHH`]Cc!qmaNXdN*5Y`h)Vkr/N@pQuA\6^^Qc'9lk(=Hg?&3WJ)3$6O$m,V3
%/l,?sadGVb@X]f)d8_6r@Dob"DLiqYh3CEqLd491S4+78($^jQd3\TU[]S4AN@r,dXR(*K>oIhN`/i(J^n.04FQrT@>IY*;&1"h1
%\8^YLWR2VmRhFUMQfIRlD>k2n!NaZmO2m)C=,ZZK&Eq!`Vmkgd\QuVfPs2Zm/0ieg];!E"4Emf2E95@[iD?CVV#[&i&fo3,e$lA?
%'B`-],+l"UXL`H'>f3jR=`^L;6]<l=S#IgjMsVmW/JW6ebQZ!+q-E%)7<f9h:+)g]#5Gb`k!B=mcj=b*$Tr%JjeA=HX7_/u(O1$r
%9.=!rN\r&XA@XZhS_8]IQ`S*WC!W_uJ[ibiM5R[SatHH!bf@Mn<]27sa]V;U7;lQA>b#=PSm:3/5[(#,[ObGX:6JgB2dAR'jMKb=
%o#D&W\L693Jfbe>K*ZO*l#DX?-%[-Rn99P*UF$*FKG^lQ\<(1=Ec0ZARhl2dDCLIc\l.RS7@YocEKR%c<8C%Qdc&scj%PA8QN:l\
%'pkW&<Ito$5lgc&B22^M4mHXt7FdC#c\eO_"rOuAiBg)NPgSIL,(cMJ%9I$glUlod%'8Pq\BQoYF=Q).$dje;(O-femu7Sh&.Si]
%S-KiG,pqf/"rC]Lk1Yat(H@&T3H.h?$_R5]JVuX=Y!ISr6SNL>s"1Ci.(o',!iD/uRl_C&@_^2PSGa5%ZE3]&S,=%m6nsR?hr5r$
%*a(<6_9/SN&oM=u&O*%sA?paMoK%X![N">EL%_t0Q4;,cla>8<HJ=EQiPKl`>qJYXb1e>+29+B[<S\J2>9FNaEa^F3!ZO)+l?p's
%qa0ORk\`u=O]J^B2VVEXa_mS60J?\?&0b`F<4CfOJ@4N5\%#?lk1_T8X-FDZcRircfJQEFMi+`b6ZPhI"L&W\E=3g%bTimm`EU.Q
%\hMo+aB_`'i"c`h#hqGUD6_%&L#:GfCRj5sa+sg8]e'^+A@Skuig%;]F`Q6b%4>S[/]DB50%@>.JRUd4QB`.O'g&ZPC90*(0>+_E
%IR(\tpc^AM!cV1E,Ye0GEnY+]&=h2b`s?QDV(I^iKt]7pk,Q^6&DC/(5g!`oW.8dLClr/2OtpNW:B]W;R4WCeZX(+X)`Am%C/hlT
%m=Z5=9X]a>+o6.dZ<]#n:RfG6C<.uOCkqHWE2BgV)I<pigLP*"Ok<FJ94'Yp[;I)jL$dr7h@-iV9Gobl[c!`"q7Z=M:+]U&p=cL5
%Tc<E'L&D-sm4bc)1"U$<O1I*uG3'YLi`^uR#&c(ZbdXse$tn)7>,s/HE7Q5nRedJ+/RmT&6s5FfbO$I3Z'KX,E^Nr5eB2dFg2*h!
%e((`>]%&<8/T;h\"BR1&&(2+P<Gg>kP8gN*q$+52;f-"q0f`+5qE6]CM/!c!!IrFOC([DO*P<-OEj.B&%FE@!bA;Z,WKHqQ6WsGK
%%I&^`r8V#=d&Fofh-d5dDui>IM/&Tjb'@`a9Hs]49N)>F*[[2Ze=pClk,acr2QK?\E7@3?/]EVdQNDfIc;9GZTmtqU8$`oBo@"mn
%M3,L$dupW*f./q"ZN<o5:4o2H)UV,h6*"JjZ;"%T;l""SK^[1[TEUqF!ePcKiMD6I.)@Id#ok>;FX(?'&l4`l?!(eQ6-&9SUpR'.
%@ee/B68B(.XpZQCSE^tO,qZZ0k6S4n0_Ji0\.I(4M?e4@KmbH#ebNnWpd.L:6>*&6[LPCB/24#A8M=>U5`db,@`"NiP3YfKEI9+-
%FeSERP!4)mTV3B#5oUUU>/4gP;UZ7L#_k?mQCWYoN,uRKfu\tb>0Q+;[):6Nc8UZT?M's4Ba08ATQEpnM`;pT">faS_"PA-D797Q
%&]?1<Rq.>-a12HP/7Xu9]9:Jad"WG#gp>IQ?ZPSfBtK4/W+QtnXim,FR=SAP>-<b,d&(sESTW4'Vk'C-2?n3QfkE858id?O@>k3L
%S->`@ZB.gAMrUl^lHM:]@4FQ&]AOA@]e$fd<:.JA]?ng*]rN,Ghalna]9CLFmNo7kf.72rZDO5,XA93qSS<892g?X;S][fE1pbAr
%*bUmPAX`"_Za%S^'4ufrEQmF1=?5U[Z`(iW7S^QEAeB[VU6bVhZqA4BAp52,IbEu-9r"&GQL&TH=eG7$E`kXg2=.!sZ8:_a%*I4"
%N>_.N/IR"BZ4=G[.A+"nAVl]ol\8FU9HsuC3NMNH_qo[I[rE\\qL!aqC]=LL[U_gAE_nNtJs@n0P&4?b5nYFdJH-.0%f>S<4ASuM
%bV0NNAWqXap:S"HUF1.ZL[#4j&NulIaM^*7?5^0:*19a/%,;T]SL5>)8!GS4,a,P>PYG,tm!uBuB9B&0Yj;^s8D1:FR'MS>E#d:?
%a%d\_CID;dgT[+f-4k')O?EppO[b/WM6cWXQagc6b0iF[onM[6S7*rP=D>p2RE6!4B"WJ&E(!-]6u&I"ZXdQgE,[4.f[pa#Ca</p
%/^`uk--=$.M:7N:A9kE-=pV,SXAWoZcMI\E;k`mbA!<ZQ*3gJQ(<73<a]0dq&WZ4,;"cjU,d(AiZB;^Gee#..Osk7O#!fLW)+!th
%34&81"f</'p1sk7B'Z0#&?@FZQsEce#6\KA'=%4e2`XKN0cC7j>uaBK[;m-S1K,5UiQ:YH9\h"X>TM7$5Ok8_2c4B)!8D3=8SJI6
%o%h<@"(e-%Ge+,\9SZTu#+AIC1_5IKR8>HVPREQ4B&uYH^5I.qFL7Z:*:aq(.EMfo^Z\kD?q<H_9I&F;3Bd[1$pJY"$8`DVNDFja
%e^P4_VqNi`5\J:t/n(uhl>r%>\b,Kp'F1?mo#\#VV*p8':m<Xi&kYL*E[dPRI>tQuJYk0<R27LQYp@/=%Qnf()/opjZ;eCki'[\Q
%n6@^odhNUi)#bDs<p\TF^fKGD(%s'h#oN%U\W9a!R7O,5ne&G504qYJ_$4VU6a!)=K%c=_R`&=jBB&Fr0I:r<OuuKYF:C&PMU6+L
%jb!5glecf^AWUbSSNpY'i$><;GCkSd8pF7n,FP/9-&KU_8PZNe*m$YsIWT2fnhdlo%okoq=#s!F7D^`u4L85.pK'U=M>5r%7(eDN
%ER,'`Ko?\.qA>i^_@lb\,3!Mbc"NP[C`U*L+'e1QWTGg'mn,LE'NnJ1#j-LlBoOFQHWs%!bfXWH(mKh[#nJ.]!@:#Y?d<jh##&AF
%eFDMj)2Prt6B7%eBd'fJ[SN]QXSB;9W^i70f9g(ao#qg"3AYkp!\m@i`pnml$SG"=8pcG%A4`4^7I$@>!+gDj^lgHuV'l-RMCDI,
%7S$nn'TE,\P;*YPikjjj_?8maMT+\<9Nka7C#D/.`,)=5<[8RqH4ManJ`]R6hG+\BnlWu@(`22gPu]u6`=-j>K/pp\#8!HWE"6N`
%8&."'\47Rce/V/o:>bkH1g[73)'/2TXGnd)$HYiUHE!<d1Xf3!cLBp75o5SE)<.:m'EaX.D/(K@+.7Q[:3O-F.V?iej6(!N+In7X
%ZAHOs62<W&q3h;SAnSVfaPUO,i(r6QOd?I;b9o,LYEK6%]+.]t<%$q$2sdk)J;Z2l+519._7RSGfk5OmX>j?8p'#<0YE-VQR4p3H
%3-&@^"&^)YDiJ1W@sd9QKICH0__dJ(&kf_N_WMBR(47jn/.KO%b?`8h8f#m%"!:`nF/3Pg7nG&<+Te@mkbWj'fU*#%C$BSa@[75V
%LRHAG#R$Ig@R\hT/.f)e`g[eV)4$Y0nY;Eh<duh:a%:Cg6ns[("LI,aGmA.@UsZu)Np^L-$/Nmd=AJqQV&0:r&V;k.`3UDlQWuF"
%mPAb"-K*^XW!s?YEY:,r&+5jbQ3uZ<"A`0[&6D.q%8Os69S=T;o',74!Ztj2Kg>,-]&T\L\2#?d$b%V:8]CWf1>I)RiG'iTjFY]L
%<HX6%E?7RUbZ.=PaAAm9]d92%+upe@iSh"k''>=l,G5]X#uMBRJ3f#7d(f`*A7M37UKi4m5UDK!"\^]7;gW+.750<%,1W.h?\1X7
%,Ael'dbQb/R.1V5FUG`3&t+J#r02:<Zh1O\J[O"=WlHju%n%]=bgN"`f&+CsSg^Hl8n'b2BEQYU-kL)/%f00s7aO.D-3OArN0FD^
%K^p$R-m+5]gTsO)qNV;*?h/=GI]#0*'<od[@$1ab92t>:21^[d#c4Z5=f>hp98Y1nL=F>3YrW19/BuXC-^)E,=lKM-B#^Ld0GKjh
%I:5nVC8f'd]H1A-CF).\"((9$H*T;+\K_iA9OS.'-Bp2XNcjPcNMrR.Fe2ut,2&)0J^-Ys4bl;(r7+D2-Ib4,9/@uI'8jC4BUA@[
%O"A[<!csau$=o@E\[s/RX9Mhcl*/1+,A-WY'sbgj%J4$R*$fa)*4KqMolI[,V_ODACkPCH1\iraPdRKY](Ibl$6<)%n`F5.>ZnQ<
%Fh(2rjBF6A17p?WDR5#Zn2/Ssn8N61A7c0MF-fKTLktfd)%uniCd=C6JsAH,.#H,g6Y_I2&mMpUhO7X9"Y:,tit=4q/_Q7RfKU?l
%OlW)G4:j:8E4od#=$?(-VEup>Eg@<qE:&ZsV37@HWN&R=)Z9`jY=PM<AOHRsaN$s1#E5ppPEh`8C'S?oU:bT[Zg9`@C>u(ClanN:
%**u5j1$I!-Gn^!#4_T57+">%`B8dhUO&;SKQ3:I@FhnJDK3>4'i%htj=[Hg<K;Y*6#1aDELdbd;/Lr$9+ud]p`hV]pg/_cikM#(=
%\]%T;.W`sXPQ3'l5mSCLc#T2d!iuHRf+;'h$^j[^;k!Q[*&HZ8]9Gp0+m+H0jc^[d(fHMg,dRSl,\I:oe0IM0d<HQbM\^pl6+9:o
%q_?<#i?ZjboL0-VlbHa2Ck6h,VhRL]`5.\D7(E@d$-J$t3*,mLp^0C.+OlD7_XsLW&\%tm8cY!"JWp^+^j?A&9"hk/dR;\\qC[Sj
%TXZ5q4eHZO8jWh7f.1.3L([D19.^EI1XIBI?Vh=Z[6t86aa%Gd4eY`u,%\&2&Vh4:dRn!qFH^"O7pu&^jQo>hcnLPBoUD`;8L$fr
%-.**g7cK1CMHZ/D#jet/U^:]?+M07'%Bg+b3PCq:&*W,5P,Mpa85pCDQYZ:Gajl@]77.)JG]pn>/QY57fI3]IF$Gj2#u)e6/'AYW
%1!\NE_sWh,0M%9D>iT@pAX_="jO&U2,+LWc':0UVbgF4-+I8+mE](eA6nbAQ4"lRu!am!c\<]XaKUK-!49rfbd\dVB;I)`&90(OM
%#sK&L(_tqrSjO[1d8`8!2<d'`3:>Ec#AO:!,plspl4]5/#5U!*[iVN;MDtWB"To'b`,_dqK-sMM!`qgO_blI4n&Tu,*VmS[$r[A6
%-9L<k,YJl=>,jejceYE12ZXMP=eJ,&8X(6p2[i\.L_>(u?1.so0DV7cEI+O$"D:+h`-A-d+USm#6#sqt6-r8jY&$.?@d>nSql+OH
%g`@[b%`M`sJ2aJlI!U<P*C>T\%X>j4=3:Q!OlsZCpc?WeGp3VQFG0XOeKds2msZaYS@0Vp6q_b-c67N3&8jlal$hCtc9QWa9+/rI
%E8Npo]rAsS7OLaM!dCrV4FLC-Z8kPp'ZFuBJ7E&[3;M#q,;kK9>=g5d.N+8%NX"V0+\3=('Yqs)"&m[J_>4=PSfT3\jgkWJ1kZ%,
%EtME^J]mRJ;V5:eWo$F!Gt-<d,@[<].0^4j1-q:mRT#H.C'0V-H4D7.M6_dUQjE?lj[+DdG9oE@CKD-Da!^ZY2j-afl8RWRU`:)q
%SJ%@t$ukiU&ElCpmGJT`/M-W4Bd`[d(o%,W.3Volm%tnI^m\4h/GU'D\UC2S>_Uf;BLkH)$X&Vr;So]aOtn='*5JNO_]=$c7)!t4
%!=]B2P[L>";e'l`iBs$l,`H<@5Xc#%o"OlfIGiI_C8:DnNV^PjB9JV^Ys?Z.iZI4g"UMXP>XL+\E4M3dEOO'Bf*iil;o&2@;<Iu)
%bJ(?V<%rB`$/6U>Rg6\?'EnM7jD:hD:?<nG,',b01!_^.L*doeP3rKfGMlk_!fhRZ-+RAhaV-"YWH%"4i*LsI9!Nalg^BssI)l@9
%B7\*AjGQ<p>5K`"+\)Z^.ek!*348?QTh&H*JteqN&KN"dY6;^@knT@lM1X4[IM@Yt*!(n,@fU/)cndZt4>':BX?oJk7-0\UiBeuY
%Krc)01<3#&pXHm1,qeXRi+^L6J/kgn'[e_6M^4YZFgp@s:<b^0qX)4;)2,m_V`!#&!*M&A#>*;%5jCU?UUk#DdL2b1E?N?+*7,%S
%l]r"cVM*WL1@`S1=#-p(TVtV6X9rYi;0/*#r1PAbF+t:tJr^.0!t?G"'I2LqYCJFA2rda:>G.ghk^Zd<A/Hp`B:qCVM2@XH]hn@9
%e<?,S8.H>0iSp"e=A2Hrq)4h5`D@26P8hIiXTOtZ'_>Y*<mS9=ckI:-Eb41K&<hNMI!Dp!5kOYH.i6bWNY19EI)SoR1BW?TdE]^^
%%u3PVJ@o!G%/<EB498TK]Cc[@&:J;;'dXhR73_O$SfA>FO@5NDff+3nMmH7F$/,RWb#530]lq1ZMHQSu6"Q>o*lku%r*1g7OX,j^
%YnU\O0LB(s@H72Q<DZ0k*TmWcBQO[(EaAP[>T?Rmb"YabKNLPdWE9UO7LQ[d;n#Ru?9f$'Vp%X4Xr/Of9]J#4\hs^jOniWlLKOeB
%!jpJQ_bm!QXP?_?^gSUW*7^Hn4MKl9_CR&K>eb!Uk@r;A+YX$/[*C5jWU=J^..PO0FqcD.<tscOI/rrh/F=$S+Aj=;D('DL`$gqn
%R>DSQ5_nu.mcC$3@14c4M;,]%Pg4msSLQ?n,E;'sL_N+(6g_h2)G=CICC5s\GL(<1`X;G&8dGc_PiT+]\o7Y8as%j`h\5H)1FD0e
%nsQq$kET[L,(d]V7Pt3Q=2pf/bYX*fP*lD+"lGPm!Ao*'-ZQ68*oo]ZAsl7oZ#PbB^2[="'PC+JP=t*c$4%6<!Jr]t<"X1Y/gc;C
%8k-0qJS0>hfF04>GkqSCk2gV>qI8cel77a$9ehriE64B(b7HJNAnEeTb9t6K5Sd/K^n>S=#_ge4k*$oBg6Jiu%!cHZanJmg)1M`s
%qf3o.Sh&1j2G0u(#D$!lBp$E&k0<+W%>26f7T'12QBY1)'qt`(V//bdaX!0--Xas"6s!]N]dc8sr<=3q@&kF%i%u*$lObFZg&>uU
%E&d=%r0+Bj#sSiu<6pm7N4/J2Wa@A<!M'`Z9\-*`E+!An!c!0-Za-0g;"9)L/opAX8W\^@,n@FQ@?oUSU/W1;5>"n8);#9?G;:g@
%[N%(?n`>U*MO=ZG,&ZY%$&J'OT_]j,,ZIYXFC1R+W-[Nri@Fpiea,FIiL\(>BptAiH@`XF0\V2,L0.^p"1<Dd4\R=q-=!QrW']1b
%n512:>?ifE_1qn4ddS6AJ2C8r..V*<NG1AJ5:?XHET=M@&ObOb/>d?dQq#Xm\]e7roH^fn'1BSk:@^%PM^os&dcb2..+JhS![iN1
%P*77i//\:Q@kP\.(Iht)g<pfASp9fpp!Qr*rSV0]4VqPAWot6N>Ge2-.o;X,q4;02*/g0YTJ3>%'n?kV4!:+F<L>Bs5)K=KaX:7+
%^kj0c$aatB2$T<<2!tP):'(Z+$!$R,^JG\9\f\p1cEFH*m$ON7NO+M9>&:<lPih6I+[@*m@\5_oVS+)7<Ad^PR@0b[::-V&@Y(RJ
%<-P4"W)DW^oGP`\<'D`fJsLZH>S&%Bd>^D*Qr%bnoH`]1fN]\COm.'lU@69e2#7u,_hLC<_eGf$V#QX^0Hul\WG72a&[i-5<Sk(.
%&4?b;AYNk;-amA9;J?%T="TZgPt3=Y.rr]\j<g^0$>)"")mn\GU9^QZ3jZ@l$DfTnY4el3$fmGA,h/QFK*Kh)#69*!$f#"W<"/u)
%\OU_JV\DhZ]MKf`3g><J9/Wt?./Au2R\i^rI'%fo@5CLd,uk%_U)Ai_:pk"2j@q4o3Kc1ZFs-Q.*ko%]C(N\9<n,#/9Ba!I(Loip
%F2^*]&RS=6=^o=%igf<>8f7Gsj<aIHG#p#Vp&O4j/m9Y0eGphH[sB^Bd_D6gP^1`1<(;M-h'e'RPm,,6UntG=`KFY"P3Tgsci,5<
%Q0p6HaEAl@UdUYAa&U=mF[N`CWa7g[Ij(C6/lsddZ,#0k<hiJi.>>ptaN^_p428B_<;`o')KHQfamGpb'&a,OITXXmA&qaa`Mn<Q
%<2E^S\,8tNJj;+U3)+o=kN\nd]JI*uSS?=M\qQ.\%-+bZ4D])Dp^tH-@$p-3`0V0DiiHWrimc0JBuPd`9;H83;8BQa^*NnO8P[J<
%l9lAr/P4nAQuI`l`;`XK9VmhhXqCahEctl!OIEP@hoYVgAtDsW\u[V\L+7s`46__2?N^-ViZuY&VL"Y^R'0XLctB%`M.\P[hMgg!
%RaDoXL*`QVobFu%jh6kN+\pIt-^:mT!_-Zb<DTMPB)%;75p;-A6Tr[h'mZ)OcqK!eK&ZEH8/>EMEnXmBAYtbl1u!kCf=S2Q*XkW7
%:2j0]HAQq_KrX9GJda/L7pTT%kWDKUgXk(,q?Wn%*:[R`J?'>cH>X(@TaFNL*6TQcYkP"+'b3W:;`BIMkX8XOka`rX0Sl882H!nH
%\?:OFe?(X;Ulos,]jMGT9NTTf4EaPaGSOMaCjh9)p-hsSad*,6+HGM>.,KS91$3%O9r>ACbVEW0):e@A#oJ75Mn+kG%QBnuEs^dM
%`=`N?n?NY>YbsM@k][];jeX.-)GZ-,`ltk(C()+UI!&J_ep>4j/g8]j_)`g`[TNHe0jRAuTH9,u`)*s)D\4B9$"NPuUeGH.0)k3H
%am`d$+6-jq$>4SpM@D,`UBo/r>['`:n3l"Fdo1i.;"dbk0mOB4Q-%-I!HPnQ1SY9n35X+MMY^$ULRpR"6G[5d,Z1i,O^.HSP.H8n
%h14Sn!i(:[Nkrme_<QoL#aBs@.LJ=IQD%9"7gMLmMEiF4Vm@#,<r)HXiCJ,j6s>aa(E,pp91U1\BI2(9K-,K_^JjDTIE=Yq*D;/D
%E`YU[U"%<=6!>H76>YG2Jd)W`T0nCDLor;KP&u4.CcZRX[>EB<JB:M!p#W"0BVabkqQ80t&5H!_=G7-N)Cb6"Wkt)^(>GNBaeu.2
%`T3^sQTI%Gh',F8#@Wk>>*R*/R];O6Rn;P63>?NbN?W3e*l0QL74.Yo!?!2[SMCq!$14#M#D'2l;\VWVq>qcPPWga_L?_>tiM.4Q
%&g3W(S=f#*(+V+js.Bp^_d;[T'biGp4LP*8Y]8*^.Fj5+PXoE<:sbNr9(<-X/Nk6%'p@B1;#;OZ=m^lFqO$<=,!kdnDQE82Uguoi
%5?aFDk,>#U*GoO<iSH\enbeSaX>/`PAFg*QAd)PDEcaW&i[dqXT(j_U[7%[(n3V4e6tesGL1$ac9,>RQGh(43^36L:=6AmC?en*N
%n;IFmj^IH#'<!9TWc=cIjX43:'9G<kY*f]5KPrSn<Dn\0(Y&jm&Tj4\F>4K-WHu@t_]9VYk\*Bqpe\W&oNk\NTch`Z2gXm``f`_Q
%9Uq_n,/GnE]+\7jdLcA3jkYMaT4eI=dE^ZLbKr^5FZXS'2mnaIG-TPTpBQMR[.Z9P@jmrE:AR@%rCM(Tbs^Rs?c(`2-rDKp,gejE
%;MG@MR-..H$M[:oUsXhLMd4A&Z!4CXiZluAABmO%-d)%Y@m)XB_A+YBSoOh(AMSLu[4cK%0]A0?HJq7^@$6eX#S9rmH+,S.GbR,G
%IH#gLUQ\?Nq(jtR\g*Cnbq*ii-?_!f._:Ao4G#'.]+h+$s-tQ1QtjcGLP"Te-7^=gTF@a=.;rlLC8QQAAPS+l+/h.?c]_Trbg^To
%Lr@;BMYFL3B;/n15>ArC`4ig+Q/N^E28q..d:Y]cNPqYVQAeB?jjm>5q3eM:P[9aC)d!\#K6F@VPG"f.,e[0;fdo]=NC&coiH`E:
%Mu(OdjYf[XNfq>FgT^sed'&qd@W<7sV">ORHeLm_<)5&;lqFE]BsY2['l4LS@:%M`ANaP[jD8La`^Fk)/_PiRS4OD:5q\;HFEj1k
%:-sZ=`s<\[p/rku4a'(?Y53OVeBbNJ&>>6#p'38De?%r9dhPMb;8m<aOfsmC^>uSC#?$No9\!<uT<Z<(gdnc/PqZ[q4FM4GE)g;1
%j/L(#QReM>F8_o6KM3i1hL/9Cd2=c1%h;Ca+gNBEO%`p^0?k-E]TbN6(=PR(dH$8.!K15))JZVrpNCCe-qm!#LXK"o*bK!r^`(79
%)QSd;l_3pA0;Wd8(<_oE6BPH=,i^3YJu!EuP\A!*.&/uX/@d1f!Q*<]Rj`7Q-]dKHCEd'ZHstT'SM)XI[7.I)b(*W8B6M[TG\RTr
%1t*/'05:QFeX%9rDhMc598+R?,ZnNb&a+G3#nH/4V+Nj""A=A8W#::kbdA1*!`\K^SiQ%'lMQqt#L=D=,rQ#*-RK'*\B.)kadhpq
%VBeDu>)rDTe$Pj5j?s_ri_oVQMcD8D+'jUFHU`76Vhu$F\JP%HAuZb)QhZeqfg<ireT@(FG[T'07:Mp1+c;(E+!QiNP'ncR"_<l'
%&m7cU-uR%plj-YO2BFB8_e2^Mf2+knLms4FAK^/\KXKkQ-t-^lCpqje\k@aG%fcWS>*Mjn7g_lb-fIra>GB'Zgf$"O%#-J<>nlJe
%;2i/A&?fLAQ2'c(&Q>%g/rcm1\@5-)0I$&nEsgI^%**N4S03!N:*5'9%!cM3;:"a;Q^>%_A<bFj7/=c<K97Ud5q0UIB0GrZ,j#<f
%S1_Uf)Dq-0=G&?4][9+S=%VbWJ<do(B7FPdldtI(e3[P_DPANhFqK[C60+LKKO9SaJjYe_%(V6\CNGMJapk>7+?8*rRpC$:V"&tl
%/?+oZ-(\C40$SWLm&]0.]#0&L:ZjnA46-O8BkSf/K%aYYH^-KjC>$^Q`Zi425JG'oH?,E5;WD[3I`7^`Ttf)`#Dr9jn/Kb>#UN`W
%U?_$!YS3PI.2LWJo_hIl:=3T;)A6aL/Ib?2$q*ZRl`)UeT,NCKlSKjb5?A@$f0MA3abh'Q!%'RBl=;'tGbQ<ook2IkQBI+pP&_m4
%,eG`m-urH:I.>h8EUOeq2Lg%9UI37C_RSJgB8Rt#Jk"FaFm'"NNs9(rrRg&39(,4PNq0?H70Vb_a=Oq!jdMDaeMSMWjUrF>3(T_4
%8huOJU/Da72$G"X@i;eEIO]XqK];8H5!".!#uKY&WMP9\-dJQV3^c6i1D`lf&m<9:V5G_8M`s'cMLq9K%ZP+K+WWGZS=Reh\7?5_
%'`71_6^OZHSaYX7L,K@#0$jbP"EZN@2[n3s`=i"R"<&/t9BfUq6l!WCMttKQ6ARK@?\3',@'^E%[@E8TePJk!VM_*R\PDo_#t3a?
%af-R_QPI%%iZRVHDmgU/(/NmUCu[5^\nBI%l0/t`M_.Ro`M&W"MWqefY\ui/2j>UZBbNLtDHWKCcoG?^I.=q4@<q')nG*S:$mag%
%&]$IEkRor!X@0>3iX!'r$ps)H_>01Y9mE5X:BGZdG@h:.<S$ZX8U@n@*FXoU(nsE,-,+7:Eipe*3>]8n`;.h;T+MrlY+.3G7"c!!
%J1.W&0h#StWML65B1Rm5e==CD&#D_;=.1j+jH<%XQr476&?@a_Q]SGJSZp+IA;F>=i%UL"^.0T<Ti\)NU#Z2td<^pEA$Z>iK[DKa
%R:Jkt`NU]JHBq?309+5((oTk'R0Y@9GbV_r6E14:b1&Giih81>prnbQC:)9On!^4g$tctMk&BfhHA;#%%:)Nt9FR<mY""7oK7Nr.
%7YDrMK6hHC$*kuL,cj9Fp+e?-Fe'X^V3M#hZ-W4]Z@Q,G6k-t!YCVR3@.q`Hd7__U#K7A_@7Ge8_Ugn3XMPP[%lM*7bp_F&Sk3O=
%6D+JjOcD9')bnSR]bp[>d$&]!0f:2C9.[;.d$QLN:8PQqR8")X3i<$V=TlST_46W1:upl8;;KUb)lD4$Q$ctS6=^2*>W26D@L6C$
%d+AYKWDMSoQn\gI0a%WaTjKR/VS[-!GCCr3CnEaGTM;)6?UWbu?'IN+\anl:ZW%MUl0Q4X8sT%1;,7HZQrk(cSc=K`.$]u%C\9Ii
%8><9j>Zf&p@T#\cBb=f@=Gr5+1&Z(4\CJ)lEeo+\(@tk3=<FJ\;Vbk/=_MK=OuVl%OqnK6N\.>(Qhi$*W"R^9)'r[H5b+&_<A2hW
%JP,P_W#Y4o8PA*F@`HA)6VUoE&W>NPPBd;*4"5<O)=nLE'%Tqn*ZP55<GDq8.O3&:m5JFtJbkjLN4n>CL_MZXWpN,V)JSUM/e[e%
%6@KTB35@rO20*#H!sCDM2/3`0r[<4>Z"tqQSi0^tVsup6f.*st%I?>2#G*'+J8uq<+UF^&b:G)`]qh)S$G8Gb;HFfh<$Ja+nd8-m
%8C=%*9eCE>,<S<o8'+.n$uZ/2=,t]3Tn;CCP,O]R@^G9f*@9uW`+UaVld_GiBQai/V1b,.=@1XQ!PKancX_U&T1DB_UK==MN.G&<
%?nn0V7:IKK7E0F8e.rN*qFr[n)9]#l>HF3jR3^3_D9ho%XdV@[;5K6]`RHo$joL(cV.UPk3rK7]Z!4_2,HW=:rLr>\5mAib,_Mr7
%dn7d=0N<u6=X.7G.8_;bT]0_ibo53L822]:.<J`+$(@mOPHWq#lo];=HukC+<3t^>ASqkl\gkEmZ'8q#FsqY*i5SuHBWCh=pj-H6
%;T\<?4J\m,O_:G\^;_X$Kkg*bp+9l#o2Iu2646(T(bA%D\C3)cPmRs).#p-pMTu]=m>J^<Qal.&AO@,(kiE3NPrBqJ!V&rBdef=q
%44:W;Q)T.R>slt=lLpZKHu9(,(2333R4k-'.*s;1\`FI::/3FtA=/?1=/636?fe_NI@;%Q6Sm>6kLKWMC4)jGi_KH^)KdS[r-4g<
%,Xf@Y&e_(6B0L*W*c^Q]!=u.uBPn/O/n%/=,;2Hjlt.#O+]OV,!.U_U_c_sl3..i]+rW6uN+W$/%qZMU."E$ehSS*-49Yk7:mRsO
%3)pR!']u&Oc8=@f`1g(T*(a,E,dBjr-c,XNl(I1O9,Iru8YEY^ir`fB*BHgj"ih@hR;*!sWWB0-!HYWaNK12O\3ZJaQ,MjRO*)`G
%'&?<qd^<7T"/'R/g1O<j:eY`3Dka%\D?0#iTaA\-M$_.]*,/:rP_^bFWgr#:$utrj=q!%fK.Yo.O`6gs9e^pV8VbNXc?4t5j$^G=
%RBDVP=6!7:.0Op`D:Ecm&G4C[c.?]\&k`aLO>iG4\a&U-/9/+!0&jESTgcMPq-5_kU."2c-n/^?Ub)2h^KiPeYhO1![#-Ennq>aZ
%(Dh5sI7*XCN96;O%Z^g&dq4nT194iRM!0jKopAGn@fe8)@MuB_.,?@S-5NXp\\^+e,K(kO@'3V^!*5h7AgXsCZ6E!KYo%TBW;<u)
%E>*H5CbW=^GcR`i\PQkQ/6%\)4K-ui1X"p7@ROJ*KRNuJ+Sln?OMd13j_4ng;P0Oo7H*(aR\kd7:&R\@?CE@j"N<?*,9ep!rH+^V
%:sm20GTjs_fAI?XSk6=6VV7B''pU^I1flD@mG0*beM?1N1]qYKM43pXW%_+h[6[)=Z\^W;7mJ[F;t_X<"&Y5>1TksaAa4?6RMh<J
%o$$G1WA4s3UN>NXeH7.fE#qEO'l_)698A4@P/>Hl/>$Fj="g+L/X-$1?\R`L`<ooiWU[h9jBa%5jr,E2Xq]aoQo#Z?j!bt='dF0V
%oGMJ_I+V$0bSr87"g[Ab1iO^*+K2,-=qR?BDQ]C^B;Y9&b_YC\:N*e8+rMaF1UVukkocZ@F3t$ZFtc<>@o"`V&B'C/?HC_(kg^\U
%3\GV&70++Ofpa;KD^+G3$a@$cAZgCYghbr3VmN0\&3pGP\LB&_P2]*@V*5V^$sR@-bZ]*A__!<9+TVRECFddY,uo,jX,,R:-Wd5O
%M8tlpL.#JmbEt2B4[bESDosRfGmAsKeQIWu9am/c";YO20Uo?1TmC3&<t.eNN"LRTLK_`hb!8eOhPGphH3%]ZK//<3'k:Yu"NLjt
%c(14O@uOiC9N_g;r&Cq=[Q#enQ&+@l4e-aI7,nSY2:PGEK!M<`p@F/#(_:+U!##utPFWh6,Jbl9kQkZLLak<%1:Zs4\OQp<2c+B*
%Wrs[gK]<!r[VThH[!cTPO[Od`:%d</1Vr!:=^4F_p^3W>lr5"QAE`.g\h>>i5iNbVLEdit'+:t?bTAWbZRd^0?15!"a4f(Ck;[ca
%O*H-8$cJX<[X<b<pM$3,qFA''O2jV)K'WTEk%/'#.D>QfLgWlJ?-&KYc-M,$\%mh]d2^k!`Z#cA*/a@'iQIX5;%tE9S9^L&mFQ%6
%_"Z%.'kRpVRJb8Ib8cYD=X\kA;!+'Yb`U+hgnU'R%:kJa/A[>ra#q^Rfa_MP!\QYoN&e*5,nbt?5MSGFaRW$1ioTmC"83ZZgBcq<
%2c9*[!-=qOc9g2S8q+<^*-1iF8<"`%?QQ2u>b,2-Q7BO0dYt2d>n6cWR6!3I3KR(!`uMZQ$8%[2l>Im>A#Q0GC%5/I1m\iR&L9tQ
%alTdEa]3@A>^-FTXiba30LTCJURmh2%[$NG3Dr.Z<`$]",As%FI&!"V[j&m'5g,RT0@!1%3ATn(Tb5KD=&S4HZRjEq>WM3aA8t0k
%O4Ddb%P*SbK@;6L*,7(IXJi4@*$/$)4-Yh5g8-%/,aB`Lq0/M&6p`ZpQu_7B$C*!"]f/sEa>(iBMgL$`0?#X5os%sTQtA,*0O[>5
%V`IQ;K_!Wk3!Ld$ggur?((/e(dEfAM;+c-mK':,gX`STY>WXoj)C[bF`[42J+A]!2e?BY-+U4i)1:\D@l<nWP1ITMe/pXT;,RmD<
%$Uq*+-)\(FW4[-J"#nOn,t#T&RVNDu3fuNtFMT[S3A;A.b-pAnVs5R2a-#PQ`993"3@!q$AK-W!fg(ADWmSm68Ot+YPu-g1;qW(K
%*$p9^e7n!X$/U\3NY:LQ0c2nY`"b22Z1=EK^V\'3%&XHM@,s:%0tsU+,"I#jW(:PEdit<CoaF:7HmTIO?:BuL0n\a+(lf6VR&.su
%o.979as'>q=s9"adgM^sh,Ocpc>+PCT[ZP11Ce]uCc:;<N$&hG+4Ve#fL[Ounm%4VN^01Kk$M0nOJC;L4=j^#Cg_u>a6W4a2>T9F
%KCe_PnF>:c:<_$F:R-N=6]^Db(,k`.(>C9+_;g>Xk&J,T*=(&]LHWP8a19<'MB-ogjYc=JXT#"f*='-.O#Q8^a<d"9UWOR;:$lT7
%nQ>=o%QTONj&MC):tU=ERTP.$Q4DJjj7LWm^KqX6:4nA+iNH)-->L1Nei4BB1uZqdj01mjp_[`cmV6&@Q4XC!6c[>)-pclI>;=RX
%5i[tVTc@\biLmIPR$O+Z=@=@j>j7/H%cEC9#6EE]'VkrDG:FrrNU\WY(oJfDO_I:oAHi04#>tS]j'X9&7JYrIAkGUYil*(p&Puf/
%M[)fk-RB'tFK9J!nO&ILWNfI,F@ZUXOfsnd&Hn>TR?kSh/Aj.Gj,-28i"B52MA%2oMisU7'j=E9%A.-f>;JRrR,U([&a4"$EBK9e
%7K\?#RA1Q?!/e\j_Vo"$%+!)8N_.lm,oj):`*r*Ho<Q6O,E\628fZtYqQ\O@idd;8(`G:PDcHt!6Um(M%UN&OA&Y?+Lc>_m\sKj<
%'F:D*M@bP%7BE"s3b"bmge%tt?5?N9i>)^anDUY:4,k:&a5VVKLPNp9Q-@n>^lp,Q!%21oZ?)aN!Z/AkJ/7-2'c`5IV3m4+)c$6M
%/g$e*L?#DqTS/&P_85np@tr$dg<=<QE0SN#<+7foI&1(E`JV&pG4:Y1:4Q!1$un0O;WPTt_LZY=W'h@8%WenVm7I_HN!X<nnAmQb
%I$G?dRCA2b_I8?12)psR?"dG^%2'/k!:k`$&K[pP\jM.+#*5r"_F&Bn0g[ite4SMn!lCA3<rF165'W0)W^=UU#El19_81+o.(:WM
%k:kb(4'+0s'M8\,aqP7*R^7%"$P&Oh@*'A/#&qDT#5_.@NHZBMSeu09$U((["//r_ko(d8F&c2$i&ou;,nW8E!(PpuHYPF>j1mN5
%\"nRZ*4(9KHYS5:ZbVhQ=e`\pb.]/-*)`/R!!>u!/WgQ=drNC^^#IEm;4j!'P%tKqN%/b&PnF50-^_0%!1p5OV[`\cVgm`VoCu8$
%^[W\b05A+ITO.#GrQT(LNY)?qP)63K;'CFi3m`Gm'8`\A\_jQ_LAc:l7fCV4eR:"Il6?26/<JI?$-Q=IH.ikFbCU)jgD(Xq4)g=c
%LASDf=egE.F:*h-#5cDCMuI\8qY$l\<2b$*5)XcDZ^@u2L#ijL-0s;q%!%^U@"!Ai@a[8*@Ga"Poi(Rkd_8"fOA35SqhCK$BNbjb
%=\C<TVi`J=+C7E`j2=\+M35Mnb.-FXKfMQ?6J+?7q*qlVB2EN=!"$n\D.m@rdgN@ULA?Q,,pl$tI!^P<S$PQ)1tAQb!n8XU+d&PZ
%`[Aq<qTDrI9*qO.:\m-34&B+5,CG8tKP!3Z2\n4>I]DtPiRC25MrD@e5gA=YpBFAuS3<oln%]PJ)V[@#<7)3CN<2bZ=rIN`2oI6a
%fGi*<M>93Z^Go7'=Uj[+=]5/^'hH68q+TMc(e>ipPH7c>HFm&_s+.ohj/\1(c$iQiXUL(0+!sZSU3EOj=:XPS)E_KYJDR!a(QISe
%0*qiD)pTB3:`#QU`fmY+bV*D]@BPNDZ+QW+?5;Q2001^n7e0#V#buqZd1%E9Rp.+_o6_0O8eY\d(b!rMe4AG-WKOpS>kR^nnie=T
%Q_HMV-B6]YEkE^U;X0SkDgM15ah3bKl/'L3LDn8RPF&ia8+K,<_.FV-)]tZ@HB%"1;T9LiO'@?c&35o_cY2)n3'd&SGfpiVXVW<V
%QkkcBs3?iEm8[QhC=.,GDn'fl`\A1`1&\!O$-FY^hW//PMaTkfF:/frMh8T57q1CK%HPcC,(U0`bqG>/--)KM2REM:38SbYZ#C5B
%U#An%juAA[X)Q5438Q&qnnZ;9VUMX`jc8@1QQZAtei;OYfpAg63Slq[b@t:']J2`!@]7<:VQ[F_E4?%p<+@nH[t(=i@:%%hklR.[
%isg2]Nt>((Ggl2NPb/l6)o\Pq22jJ"jf$7#N48T-0j:]:n`H*qW\KIAmspaZnO<hMGBJj')OBXtL%55o/p6N8nYQC'j2@u4DrtE8
%BdN$GW5SllY8D2V3TA,`A%\M$$f_lZS`>CbV^3f0\J=q7<J5S!6o.@&cIJE@!PEEEKCnRoZ`gG!DCY7VA2\lqg;+5tcL44*PUZ83
%7`]u[/h+K'jPs&\R2ijY>$$=T%GhPTS4kGAS'F>f79@Ue8FS5MD3BH+Q*hU>)cq%7etChq#h%bKR,-7O17$U\h96=(gej'abshr0
%>UoG$I(W,TN4CehqDWC[fuCJB6]HfKC!LheC2+nh106G:*S??L7St&,)tsrXZf&Fb1^PJ.d(4Wd9m@;FVO<*r5ARcHfjiN&;rYBB
%Z=dlcRG!TgMG.n7-l-bJ\DYtXh'eSF8&KJUK_..@FgE2e8$ru]c!lE;)6THiL`Dp(>;2%NH.].W\tRcBGZDY(1Nl,."EnZPPdbsN
%Q*bGKM_NT"E8?>cOJa&#S"1guVH$s3DbpGSlXklplM?Llc/9%f;lK8u)+*@[h]a>A)WG/;DO-BQ=Q=PQTpAFe`p75c-lrI"fT!R;
%,!KeXDK2qXX-j%$=](oP1J:*=G,.1(S"^Eh1e-gI?X0]ML$I#'.<iB,G,&$T&d<Hb+Aq;XpIp0nlbm[Upr%SWM;=>U,nh@A+Wj!g
%Q"`jBP1\#XQ)#Q\-mI'^U#n=BfK)X7<7d5f;Ogn*C+'fSQrfC*-kQ6'%GB"e2T,h;Z<PT`$LsFgFD1JFC<1;7r^^.L,.jfbP>A-u
%DB<kXY[&Hbl$G$b)J+*@5@*E-1:p[5PG-.cAoXW4?Vq3.!XitgDEa;IOYp[Y\GZ4:8umii9WYr<fe'r9T&sF'aDQlr<"g+U)uUN[
%og>G/U)).,fSY:pPTukG\s3@<l1Sc:DGc\;8igt=DVsQN;.d:9ZoDYVPqt7EesP9,WX*[cm&$jT!Q6"'Z2$/*\&RdS!@$OH=o'A5
%S0T)?aDRa?307mrDUC#u8VufRLa1p"+hR\42EFS:g!-0E!i\nG@7!M&`J3`VkV!fAWlT)8Gqg/ARjBm#)m]A1WM+@,^rjlH?:/nR
%''UC=`(g>2LkJ9d0F6ebF/IQNh(3/i1IZKI&bK7JaDR5]j/XE:;+rs16[#e(XHSP.Q4b+lWlT'?Pa"pum"U@]c<Ed)L.P6_(KQ+C
%["sleD8>RED/#$LN<PCu&N+0E)Oc(V97bKRr_[-K&m:;o("eLD:GlM7I8E2_M;c%0W,uQ'Ns(<nHQ9+KZ*h]R,mq5`UUh,`PjV)u
%i73+Q?)MQKC"Ts,eNhq9?"\FcR\`J0;bjePW,]Dl;WW"5JY`cRr&320P-DEQktY_g_n0[+R<Oa1=&<CKQ_f;t:+[og+h@^6T^oJt
%kU*DoX8oi*jd(]^j`@1^[ZN&2)qT)e2`u:rDFR+Yc9*-G2)oep$.OpY%0higMc;MlJ1k0)C1M4fQm5JeYnpR$967VFUqYh=X&s6R
%P&b89DA5JWVEiND3b@>pQV?hs.m<oG-;?APPs]SeJ:<51+ubU-N/oe<2q4p>OW0BD[>A/IE<B@1..*>SXi,6.)iYeq<e``d@,*;5
%LcN-PE1LB='uaGmLh<bYi_JifTHJ-NIO03-ng#33]S>CBD^s66.>8^aGgQUAKKI`%DOnVg,iO#T,.J;EKf/uk?AKap2#oRB$gX\[
%\'``2&.H=5!_W2eqR-D+*IO>bPu1_j\#]6PdG$:3Z]V^qZXXkcgFWson91i2C6#osC8qP0dmd.;=8<bW4%hC;^fAR'>'.i&\0KGR
%UIs;W\nGCO[o'q(epuMC3P3dcgF20(A@uctFjP_K\8>'],rVnugI;kd%fcgg`mL:<2e?j<^MBe8Z;aEMT]7;dC69*ER;&.*SF,,$
%;hiuFd8VoJ>BXM&n-AaibVk@?,\23a\dQKS/nL\WU=@.3AfIQJC,O3n9'Fpe0\`\H>?!<2fP<o-DOBfrfi!j9NT6.sIBPuGMag>"
%Ma=fI@dIZYC_MD^)%sQ?Sq581[MrbH'EmPE0ZZ.:BVm5i9?9"U.q>n#ZH_pU-.F'l/.in:'sc(pU"0QJY^;cBQmcMBYk5<`,ceZm
%Z:tcRQ";ho2N,QNWfV)F9Eo3fe>C5_6BJ70D5tP<h.2UaHtIe]6FMH_jFF3a[a><ua/t<fnsF6PD40^Y&>Ps*%P46Z0t(6%(;rs8
%RY^+7cIhiMDW;Sg-kYVH@r*s>2NoU:@N-m6-Ta\3@i,Ogb7NEi$8p>FMV'Om@-:[DnS2qf_T;3ub,L-JXqWBqRn92cGqd/p9#SoT
%L=dh-KDGU9D#<:cq[tq?g$%BGb_;sLfZ"J'cOiT^e&>,r'.[N2hcW3g28hDioghk7`\ui-KQF=?l-,aNWq3XW,:B?:`G7gLkE9:r
%D%%5CjK!B>.Zq62)d]"+,ft_BCC!RXB!'LhV3E#mMV%"(@Y8AfG]9>!9+A(!]dP\$(ge6>SN99]f?Q24TN;-JLaTKI>oIc>@q6E_
%S+/q]@'iS<2U_Lk't-"?6)dF1[PkF7A7F+<[?%9j$lW9<iJWhgBPG8'C"]OlD4HXi3MT1_3j.[dQJQ'N(/dDr6+'Wc1$4kWW<TOd
%Uc*a>e-&d-g.2LfFk_H#o`+D[R0(bl;.XC2V[Y0qF`bXP:-qlf-r-6S2)/1!0PtF/U-k*LZuM]F838OnD2k<]-sk(#U=3aPmDi1`
%U)@E)X&?=`8O4Al6*t&WjKp[sG%?V[22!k*F1M&i;R[)8".*R$BLf%8<U'R$pj5SGYU[rWgX#Y5_e2L%%oK*7_afPk(5$8;aY)':
%V!&&hF*%DPN=]Y%>pqWn(2f4"ZZ33YTP][VND^&adhmHl>>[\!fPA!,$2p\-b`4O``UU6Dc,!YqN4@+n/DDIU10/Rm\l+=+LAqW?
%nJWhqNSrh*PT<tSFlR!W`_999<AE13!@eMA*S[/tP\e!0W-HP72NOtpaq8,o@s^f_RSB1uej-l/+r`k`W"W-AK\,5i2aB;!ZKP.k
%j^TOl>#[2U8'PO:^Sl8@4Ag0CQ&^hjWgO9USQej1@q-H6Z]<&NeKMknZ#d<?3&!5tlu=<gRt_\S^$_g[1K0+i@`(:PPZ9"F4%h.G
%L17E/_jhV[4#[=j'oEH!Nsqc$)$>92;dmu*4?QL=X$O!n9Z;cQZ$ip7rOh6bfX+4Hk,qRd;(Ql:ULFnQjm-jsT+*-VaYYuM%';)L
%W*!l#LjdINfY29$pbaV2S=B)J`+%1":6EW%fKt-c[!O+&!9?R?*iE+V)P/7#S7Ma`,\iXf_p?QGL<.16LG^W+0#?HUM@J-eA>3'N
%G-4#;FX2.5$b.EjUHi4<$H14)]iaH+1O;#S8fW"l9P^D.;gV(\BT7a@-jIfDXs,iqbj&q&m#!*mb/<AP68F?F&"BK.1b!Fse>ai6
%f3'l2WEZ3K\)FReG%"M$YUQ3"H$I8m@^@m02G8]FRTaN#TOBcZ*&[n%,kOcMfPGk+7(qTa>tGK\N@Pb7TK$a]<%<D=%N?To,U#6L
%*&`[A8Y_`C';[0T*=eQ:4$Q^SLJ=J&lq50("*>]KImV%b%=Yl,%\#*fL*[;`pG>drdBFJl_c=6>_e,l!"A6RD8YQMF(p)rsU/nAE
%YUP_>)OD#X;+)Xq*"<i5&t)V7@Il/n.ec?^$&/Wgij12>JOP8&AMkMeO4Ss%]8Mt"e<RprfOAm@:Gj1OoeF1$0BB'_o+dT'"(Dp9
%a7ZA8`$Qm'>cJNp9dlR.peW*AQtR]6j=Gl7FFN3;$H-OBW;,[H1??E3jf\0Y@8#/>?oe\Q_GH5INB5L)2'+Y!Q^56MCa1XFMP`Qr
%&6>sfSJi*0">fn:\r*c_0o_!KZ_rbX)A/HRD8?6'&K@IDLaIkpL,M@4D)ETI&>ZV)6t4W+;.cYAmjOl&Et*sX^7e,#,-_;%<W]OO
%TgYDNJ_8Js)]kQsin2khOo_h5'GZO$M8L*Aco`k!fR/#aSd^A`h3`kEe8X%geji2UHAX9k:3"o;&TC/RLQ,b3PR%bgoqXM\LWu=3
%MH.W(o5$h_MW(f0ji&ZHH.Z[o%>\:=<['FC+\E[U>uM2DIdRqe9kY`EWu0J-Da`qa8X5*;()mjTVa>AQ:a3=e]6,GYc/X'QM+qph
%*?5KE9qu<niJ=?1-]9uc%#Rc[-:a7bZ"]T$<h]f;(8q'e0;7#,%A?\BT\-?`ZZD+`/KWMX;GsdC]OXLNV?STpiWE.ri`%4:Ki50i
%MIMGIULJ:&Re&g&CQ[i>*>KLslp=4]VTt-g/o"@%C7LYtc*5hOOc<,?fIRT3Laj10T0Y6'jbE5^/b-5XZ(Y6\5h?niRlIZD1GVSt
%%nsqNV)Kq`(."@22(UY6;<UAY>\j\8Rf#O`fMod#m8DtRUR2:2a2MWs5F-;o=X*)HX'BJtOUah"`MP[c!n).*X2['J\_*.#Bf7n&
%2VEK%)/*8k=th4qAsJ9[()n'ZHQZ5f)Aek`a8?<&/iJSEo8X`^:a3V[`l2O1qJaupfIZ/D1G6,/%TC+FA()YX3Io)GT-kl1%>t[f
%,H`naMbVr&TUAtU/iIk5A/,ptRo.FU'mC+d,F(*A<A&Ht3"f<XOt.D"eJ6T,fO_%&^QAK:ZBfQ**]ac."m6Bh],.sA8F2GOm'drH
%)]tO`/I03hF?-AmYS1$O3#m+9WbFu@c;`An_ltrI5!#@E#5OT6m*#ZANJ*ioDM?5EJhM9alqE%Il58m3$q?,jk'2^bUL;!o7I27!
%#duIE*<[<FBO'k^.ikQE?O_RG6@j#(!?3@60.ZkM1hPk.!W7)%Qn_D$f-n]t9<Kh,M<#\U_lnn3a!jR3f>r)$%lO*A\XfRtk\J+P
%:uF/#[BZYMq)YlNiAL*^gqTMD2XE<7T;/Wd?3=2mf9+ZnCiZEdY=$LoCqshT\@h/.mlE91(W0N'#_L37_d/%T5H3&5;+M;L@+V)t
%/fO'pAhiH@Y-G,A$^:lBko/[n3>gsV6Gs<hldRoG;6FGP_d$,cR"m!L3\et1)WVg6UF7c-f5R-$?-`f.M>@8(!S</L$67qAf23,u
%G\c*%qS*s)3_o'`Wo?4NCokXbNcbl5UTK[Hd&\,73l0u+9oX?)Q+ldYCKtWpeAPH<=DKu$.b$LZe4cEINO,DFmjU`r//a:eJ?gp_
%j!_#1XeEmW!?[7LNmp#8E7StEPV'46ZUTidc0n8W.33/4dGRq87TU1*^T&i#%A7bfCH=>OJVe!k6kLPaNcef6?OUH3\,f((:(0s$
%K30p&:+->Y*_abmDV[9>!uKGuf'kueVJ$*J!0q9f1k9_MI%_InRK+;jrY/][)\^HZeZl[Ef&5(,AO*u7X$O.erm/sAGae)'ej2<G
%7!3%uC<1LmDA]jO(A5=?VcL][6Hu,gX2,5(Znl<:W9uupA9I)K3@_9PE@CrK<FBr_-E7ugg**)I=,d:7(tCU%!bt>B\E_H3!uS-Y
%F?co4#-2pOp)9tM&U"eBW?Fj,\tU^S3_4Ahej.c:GnCsm3\V'O_c0"u8C@U%l9HX-#H:/nQ+4]0%P2O5%8gD%!cg8CK^-XuQNF0s
%Y$_M1e1oRs$D*];+Gk@Cnp!TiP"_EmSXD*"karZViKdS@8N\mf23_-P,1k2k3UO,$bE8bK9nh`Fe>[&aWcP.L2)I9D[BKJ9;5r*"
%[LT.":_YM#VC'TAEQ]N)1K%co&ugFq@H%[t;J1:e1`Wpfjq#8+eUPcIW)Ll'Td]3AU@7@ql9p1dN^U!5Q4?;Wj23#M2)R0*Y)19&
%S!J\'@sn%ia]Cg-&K=4sKb8G]\Fg+PPD1T^*/@,fFf=;b!N6*a'9#0#^jZH*48^qprt5W,V*p%/&;R/n:FDSMoDj5Ah:E*!*E2(X
%QfMj@P"!1fo!J2%UgZidL71#4%Kn"Pdm)Bh''H;aT*q\j4Uaq.J"iX7%u]eHs&afJ3OLZRTr0-Cni?9JJ`7Yo3Y'A0\B:@s6:0=p
%MOar56o%LfFZQt8fG\iM";+6]`gd5O7*MlmS45fE29H#!CsEOuS;%?;c<\GZL>gXf'pW)fZ%X7"^)h0r>Z$b1NTAW%BQU??bVuT3
%'GBRJKdCFopI-<(#>LtX$`noV;';rG[;^]-b6[_YAia!ANh]8m4AAe.=q*\mku2(cB,]([(t/U;B5*3_#3gcp:lR0".LF"X-5qm/
%!7S*D`g=,3LR1bYYBS?,3%=GM?%Yef\QDg!>+58UBhZn%je#PY[$<\VFD=!*`g':.\m!!D_r3X3fJGLd1cBZc6D[OeaVZP6XQ>s,
%Ui^AN</-'!@l:@=JC4FH;:hU+BuF1H/AC,>0olslf2r*NZWIBNj%6R"84oC/p#TM-J0k`p&SIlUUpJ.HgB*RN0)@Ok^lemE;p=E^
%P(oI*0rUcic4muj#>%!^R;o#C$I^]WREjYM72k,h^1K"*a?i@j3JK?t!nGqi#jL,$4@YD:7E[JnFMRd0fN@0(kLJ(MR"9p5-V6mj
%L:)f6N>antJ@%SjbZZ!$.e,!GNm@8.>:2pR_RFUAkZgnr%NEYXauHJ$UWEmVg,t'Yj/!UVCWu!)'Ska11HJScMaKts()^Z$kj"."
%@!$"H@cKmiC*[k>BNlPCZtO^T1)$P4U-W]B("aAMWTC+\Z(g3U5Z4PG_Q]V55gf5/:\+[YB\9Sghc*9+ras*5;PI+9K$C?XB\:?V
%i`nI.ScZ_:&IhYX"0cQokX<teNY%a`fUX1[>sXG^?'Zrc3`23-,8B0k9W_5&&WLT3P"/Xk.g1/9(mD"0Uk+GH6o9-oZ$%IRE]?#^
%8]cb-M+SBs<q4NrQ9gOPG\EW(,i2,qbT_1VW5G<=oceBlBMb6FBsFD+ku'uLIYieSeD&0/Tm=l2i'556'/HUhqpO;TEh)Tb>\H2;
%4"`?#cUiE_$]Tcs)$&7N;.*3'KgJ;pBj,.9KA0u+c3[u]3JW8O-lO[cG2_alOjI_f4W!j".K4PM;>=Rr^SuEd6&^C+cNa=a`J]b7
%GJ/9#b837p`D\8$r9OBSmI<-mP98C_5?R=HMHg&Fs),Asj1TC0nFXi/_.JK&XuGTuTC0(hr3>#B(I-b-??"P&h]I&3CfJe<_tLo-
%)`um4k--(Y)749ElAs+1nR(<@pH&6B8g1BFWdKb?V;L"?IBBp+l#,sKO/^`Lmn1"I%BSQK$f.?1]:7iO#-H:!kLGqH:&2+]1]G&>
%:&(JL'E0u+-7h:UYgD.ZBn,VJDb>5[6!I1M]G`S.s4H!A0+R^QS&IHA%Z]lP8t39!G(&9:N^jNs=0$bE=]6s,RQ0.GY4)*GrJf+e
%]d$ULg+DaTk;*M/]_M,rXLC]jeR@XmrM&CJQB_RFc`;'\>,O;sfGX)NRd=E_n[t=>+0:I6j,N*-Vb3.BXS8aLlSP#s[G'fo\D[![
%p%N[&DiEGc2/6*uEl5lY\/4m8HL]H#aj-s9(6-I`TA9A]GSYH!a*keX#)?CF28m*)e!i)ElO;P._6?40b,XXTTXDW8E23#4f\YBI
%DD_/WNP<cMc^1KEmbV@$*B0H?J'hIs=?6<`DCp(@>'FRK\I7&[fhq/]2.9CCEma5%pWkhAD%56RI+Wd(k`2P'0\8Q%0g!S'c>nDS
%iu5"mZa8EjSjfulh!?RN43LpZZWo=mB=ULVR?4c1c!UlRF3PVCn]u97S_lKA[@R$Ri:kQ7TUWmk:'72+1u;L*r74k\M[$J![JG/s
%l1Np4EGPFs*XkFHTIs]"Ujr^;rR%RumOoX]XY.';ggK\h2H^VNcZ)NmdY9)Qe)i[Y9nTRM;.k9n0Ufp/heWIcPe$d`T4fE]Gn6W'
%]_OGi]ts43mlSR^>ACe4T=lS_6*5?;UTB$9a(Tt4e_]MkD7#ciW)il0g,7UMCcpT>DSXNJKC_1X2&L;O\(gAZLJ*:!B\`#7q)F-_
%3Oe^-bo=1`a53KH3E$%'9.';HERXZ>s#9boiOD`80)0_%37Km%`d\m`j$2]ZA%WY#qr9'K1gE!=]%:'5WVT$EL5?Ujc?S9[n<SXi
%P6[u1f$X7+:!/meCfZRS[K8;<(-W`dbZ-k1.S[^?]'q4PY<.3\mN*l0:>uo;*d5Rc]:EpTe)j%MAIT,0T:-1u:Zj^oR`tflP_ZY)
%6l5_^KMC/3SmNFK/cboucX4&modgI98bo#T42^FqH?(4+S`[QMFFK:coIXZ]4u4ja,Fd^hPF#(?DfamfRLRti_3LGsO$5*(#/.ua
%Vt6MbL:UOC`\bVN1so3-oFL?82$eCI[Pthq9tmW-4L`6,'IbLi]=iA$U]3_2.AkOkm-.of[km4W[Ms%i([r9i,Re1kN*WY@10_cD
%EuCH!?5I5DRKh^#c"V-QD=Su"B%:W1RQ)/uI"K%>V_BfR]n)\oiR]T`M6o.6dJZd'd)7JF;]XWM^lA8AM=&'^S*6Ya4;/2QBXCZE
%Hl&CIj*V:_Bu=Z5Ll#9!5PH-^QUWh,+JYgM46IQjo<Nr;BkaL$mrs(nSR,s(R?$:r-0NgmKa%auZa]Dm-0Mqq/9aU2^%Op.\'lE`
%D=:3[QF#<uDV)\R2Amm5C#IT#BuK(K4AA4pMn\_+/c/?0cp.K_5>Q2Ks4QIH?kq"5NE\_'nC*R:M2T']XZ&5F?2,_>8MKBsdRtL+
%SB4q!RVY0[q&Fh1B%p?RB;DYIYLh!.Vg"hIh:?PLgS>jkG$aQLpO7&\H/+]aT5!?ZYi/QFRci4s\3Y0oS'Z>Sep0-JfBme9%=I2o
%e*=s%5nb't9%A"[2@U-0K-j*F_)Y,8%E@!\nsM?i1.]+MC.a!&Dm1@nO_Se6"Lj5&MlN&gX'*=MO5:=L[^k'3GCODX/m%_Y>1Glq
%X#A3Dreugr]m]SMkBaFIpUe%s7b`p;l4'TjbdK5@Sg`8+GbR%j&sIC"R3%"=bS0(^l";rP_\6U=P6Nr@65-\c9slKD'*-e*q4]\Y
%BI79UR;cMt7Vh\9pI3c&#%*TANL6)5q/amPF(n$p1X!uYA`en+o0rJqqP%e"K.fi\7SM+I1R5[&rlc0i;V&=:R4l^F!mlYj7;;=4
%->0;>#@E]eYgQ4>:JITa@m[okAAe!Wq%Cue`!hASitn<_%Ao"i\FA_"1)V>Z5-ss&')/RV]$![=j@gk&AkL1gB;Ebqf!VicCWUBu
%CX<6kF`"Ric.9:Z=P$T.7EJ5.RkA]_K9&&teRkl95C6D"$#<HcXNaeRfrFb,?Ic%kTb!dKc!h;%[g$.-^RA[\aoFDj7VA>_l"h7q
%k^qJERSBQ0e*'6pO&#.4YPmX>Bo'e,gU$C>&#6pU`=3gJjBZ+Nnr^!&S^@%Jf\%8b)^djin<TAi-h(;g>l;(_.fSm3naGIemhA!n
%rYjD0);O=p7CGnqh.<qu^<>b8R4,Yi'Tl8(rQWVg[srdChV.VTla4^UN<W[bmWg[,#(;m^kf[[<`]oR[Em[:Mok#YS0=l-&2k4h?
%nE62Vn,960=?,iTV)+Sh/q.X7@!?NC.cd5bq[F1T:X&GkG",0*ENJ-e1Ed.BP)[&0>Ql$ZNBSA\#HW@[<18pIAYRb\C#ZA)LY_LG
%DJ.a8]:#T$XhdO(e7@'W3laP<A0EqX0O&<[FKrTuEW1Kr2M;lVo$959s/P*4g)bU\omBZOkq(9O`cTsbVh&_GZiA>;^XHTjjVNXT
%3:Q>mr7Wrrml="7;e#?hb)@AtS+"S`HZ%)sfmIEjhi"RY^ZYatbiUu!]&&k"pEHa@%=hf\rS^e^5HQf>4kH^+f4`q*DJec"8Lni?
%QaasdR@'8to36PpWbk&:h9qs'S3HgE^<N?%/o^,e*&V"<C:2Bg<I]1<]ts082m(]fhAI+EDJk!GgRrZo05.jK?*s!,W\e8WZ0uK>
%4.ZAA@aXGq.1XDSmD5@N\q==%HtV*b]JCD5qo;kJAu`1qTfSYh_k!dPAu`2*lKfUe3bp!gbk,Q2/hA:X9Q$D-nQ/)c;l/omD7*N!
%2RWS6h;'.pQZTGid]DRkX(dm34A@uT`&^uWP[ul34jb-2Oi-%J<h7WOYHq)BBZ''A(75_O96")2H]ILVj;lTT:?h71K/Vu`-0KK,
%CYljl5P>G(oh5fG0:=7qc<p+9C)0[ZW"t-aQ^QiEVKeLX?=o(]RGqd3;nO)bf1b]i;nOse:/bQST.,k6$D]JlaI4/p-<c$YD;j0s
%WAp>-b/B]3e"h42:,Zp_8UU5#LJ9UL28&]7=g'o9dI&'VHCMiaChah$:&#,Q`l,i0_aS339PJ[5ake#8J])Y"R;67ia;K\G!d;X&
%L$<(5OOHI'C+^D(j#4qL['uZ9*M8Sb3MS7`pt$5.Qe$?6RtKU2WH\=\o[5"f9FVhCZZ,X0(Rf!qlkf35g`TJTk&IFsc!BRpo,Ch,
%g<^ts.P%(E9#%bklARHVL7QSDP@S."rcHQ1TCZ"['@-[YboiRAYBmXp^d\,U;lYkLS^=8&K]\'HV:.ru:8aNCOK3V4H^c*7C!Q2'
%bsq,*>49*BF460h1o?*\FcN1qZUQb`C<obS/bKr:K_.JsO-.ZY(mAp+RHZFYU&^]XJKCRX)eODTR3#k8a-c*GApTF#r?sHb`['b&
%E'bMQ)u5$/c=bUF52.!a2ob7AZU)&lm"/JdC<*j=T1bA+VEqcNbr%b_XLC]jeR@XmrD%j;M%"g*r^HfO'-f^8#A`AfGiLbHBMHg(
%HEXon7NdmumIP't'-L/%J+n5nK`'E"<Ro7T2Z1k:g[CjgqbmY:C:%#Z%0sL>>/G%;eWMAW#L20ma0k(3^k:bfABbu&RRhgYo4u=(
%)`6RZ>m,%A'5@@dL^j3]'L/epL[4iNU9>qI.6'K_PH!Sq1f>PlLoU/b6!c?9Bp4bNF?+_+C<hJlHo5W\"aB]UdY*PIlr@rN+-$`q
%SKscmbb3=UPK'MWAWp_$nE.CJ<Q4!6c'7a^To<pJ8bKj^im1OeSXnjPm;oV?gu#iibt`>de(j:H2`o:/:322[:d<2^&;Xts\S4%J
%9qcp$2qJ&30K[S)NcT\iiu3lnfl:nQS=:P^rnD"%G+AHM*p;PI3mKTtc@d2#DYd:NTPN,7MgqOL1DjqG&)0f:LtR&k)U<C5K7,EL
%[r*<Mc_qK>It!m8^t4G+8k]=/F)Y$Ms-0Ws1I/qgOE%N*)<[cRmM4`]AECM<hJ7%W]$lh:_-VJ`49"hp,Lu3qr+E3iQ<NUFf;NJP
%I/(Q3D[kIkhlI%F3K7&on0W/krHFd!$a8V2&M1FK-*q3`2q4hU7lO_S-U^@im!O'fHkT!H_l`W%B5OF"9G4:(5HdB(4MgAQ?ecR/
%A7ATHc[S>B+%&DJUSrRPV*TSfDBG>QX`c<[Gf9i(SW'>@lU%`IH*ur3SOS2!4d`I2$9(c7X/_.@GX951l([PLCrS:3TooU.SkcKa
%X.dDB;YSrnACt:nDZ?WH]AL]6l"ZfrppAi<6MI:DFns$aq'''hTBJt?8TP\=RQFG;jI$uE[<q1-Q%Wt$SjC^bI*&q,YJFOZDnGS\
%hOrad;Zk39-<Vaca[@qQkas49Xm$gsBVB+n*0d@"(n*KCpR+4o9\Fh[,e6^keZ"!'<'%3keQfA-nQ3#&GPn2k4]\#A`+?#5m#H:5
%4,n7^9[n+65^<4VAAEUSa77`V%EJ:_eCkI>lo#i=O/fT24MNdJWMf&mDiRNrej\I9cR<kZ2TXPUq6p]tZOQJ7I#!Wo5rPA0s1#a^
%&iIb:A:k[ukaB/A2JIF@0A;5L6AEfC,?[frVbEhD4Ok^LWQ^M`Po8O.*)*`o/oK9kCG6?9pk.Skd0W!@PISi-AaR5$?;Q*oe,LE\
%03<1?9DQm\l^h*=pQJm$0RS2p>eAY3`3drIVDK91.X0U'B4Tef#"ZbY#03MI&!qN)c*=M%WC!(^aM`Qag*XW'#&Q49okM&D_,KN,
%GD9&DUau_6m6okk8M32hicK<7BFl=I0l+YZQF]YU72%=Nj0SZfeJYN5LXW'i3QD=#U4)!?HbE!09S@REBJiWOZb`i7C:@rccZqBN
%h=#9pSB,8PRKhGMg@AFr50P(lL=ph_1Oo6;Zc.!.%cJ!)+i1@:mJ^e"8LB-!39JQR`'+c:%r'RY8Y&eXpGgpl?r@JOPHF\SbM,@e
%pXdWY8Nbt%FZl.WEB7edQ@I:$S1t>uV1hFRpL0o5l&m3p/4S$BB7p2Ai\&0_gsko6c??[(rT.DdpM>o*Ab+T6hL>"Pc^DnNGbKi9
%_0W#e38>VC[%=`'mHr3'omF8P]]3]j[cH&:G-BNRQ47-#^)@E+[p!ceD`lWTmBt!DY.!Kb'oLVG^VF4'Qt+tYmp*TU<I1:U`IHfS
%P4S_>Im3nek479DE4cD7pSaHtht@;ip\>UPh3E]NT;,9\_h5@+BKRf"J]u5F`VHXr.c')^^Ydp"ZXR3Cg1bd./ZH%U@ge:+V0-Yq
%IG*>a^%(?Ob8/j-mRHT4iS[YtjGO*=d<e(,au9e]S42HBj-Q<r5r"0Rq5[KE2HIJ?Ie`MAs6$d2(]X>6Pl9J0^"1Z`gNQt>o3]It
%0C`QB^RM_tAkK+kHWM]kEmpt339F*(er06@Ht9jT#5ugFmeF:=SU<.qHV-Mogj\%OD#NtbQJ_GA%W&R['MEO\fY=F];,t*(\,KX$
%7.LH['rQmI(FE;7\f$:62j[$KoWGTW?91H/q?K+3]c=YjB\$WIO'5W!+*CV5lh$ffDP!Pk5CZHD/IoHF8m:)AQXjOmiu`:+-b/\O
%&pnn)r,:`<8VT9/*r199qOr=t]lJ-0/bV7(c2Xc(G_c<.10%LZhVuIc'\BGadFm0mbK,a1[dV#S[TMmEX_/XmXo?]ugImRZ^e<-c
%c^FCR+O*:L5'':.U_-5J3%.71A[!d,*3=VZ)?&PN@Xo8%1-4nJrQhl$rf)==HV#-Q7>laSaH?P0f^ld=B@fQ"&Ogc9ctBIiV?b'[
%5JCq2l04W^.@Q7ILN0T'ANF)5U.\B8BlW./`L:.mRiMGhThg9NC$Cd;9/nilU**"?=M)MtZ67'oMS6Op-b?*Uon2mi/d^]mC$Cg4
%%DrUt7U40,1cIF'0%)neQsN&uT?nD%kNn$)E\Tf)Bbi%8Lkukd@1mS]noT#/</#<koPGabV-KM'@Kd*6kfpka=FG?9TkNFm-RMOZ
%Y_\JsbOOga08pS!X<ZDJMG]"+(i'VISfg7+5U7"$+G+hr,*!WT;3YYEH\,]8k\u>p1JS8hNlsd0jk`SP6TSqViGTSB(\q24^F1C?
%Vo?!4(703!KAqjbYe.SY"Q9`7BKXc=r(JWsane_\^rkb?Ni>"imd:hg.[nVVHH1@,L^T)dYI`b#kAq""Yo!1?0CpFsq%#+a+L:1%
%Y?EOHLum*?A0IKIOe6]*Sp_?uM_9>/BbrRETtal.b"C(Ip9<O7l`%If5J?FUg),IG#,9AGW09l6rc34if5(C8J$NBspL!>(4j>X>
%hKeU<rSu)\7;oYM2`g=Vhl<]PMcO03%omJf9+87XB/D[)L?6]e0kEl$lcjJe*;[5Fk(c"\_"3TS4M/1Ro5i[5ip9on[(fU]N<>5s
%j>>3CPlHP&+1'4QTIGC>U\^4-s#=`T`E@3JIl6]od\EP\(^[6ohL+MU>55&JgE2F>JM>^OUN?)(=1^i1n=BI\baeR85MfmK,F]F[
%^$[LGDF/nQ*$Ve<YVd>k@0TECWo(,7DZ&[n&Jc]ZQ;#ZZ*mE4/$a[8He/(p/dIf.HMOiS1[CD6*m-KbO\D6FoMGNPbT"N@n]JMmr
%IkP^"o#8S_bZacXN/Vj:0L"7,#ip-*@U-j$iOS^O[>07G0-"SRdg,jWW]2%96H76sBBJE!d*\a+*9l_j(S<*mh;j'4XY>UK\NGb,
%>.KtgF+NfArr>h:cVJR"_S&&C>@!g:B3\dJdTi(Prt!pAoBuF$(ULS>H$d:bITKh#f"/J?]lH-^c)GjfjCe<?lG+WKm+Z_1Vmb.X
%\mqo82_31@VgER#B_OR,,aDuS=E"2q=5LYBY,C9QkfS*Nf`OJ:#<c/giEuWZ@cOCn](1T4,5(,r^")7i/!bXtnB/q$?L'oIIuF%`
%/UF[(2V^1YCjrH]MYF<6JXX4&;;1rjp/c<]4oAIDhZ'FeXmaAmCObcT%skb9s/W_/+"0;?$/4+p_8cIl+VZN;a$mIDqJaUb0XgLa
%/MNhGW'h(7nal97pdJcWL&ZAQjtf0^3+r%[+&35f\Feb&jo4J]DscNIcDcp97:lC9C?2%7Ro0.1M=7J;DL]!+p?=EPU2JATCRsuO
%p.9o)W`HlS+WB)WoM6!H.I-R1)kT0h-5#@/=Ok_X./rt$3&.#cdYDGl\r0D<7Pgg]f0/khO%!JeIl&55re8P4KkTT$QG2+g2/af+
%SnY##V*jnKW"#.+HYB\21`r]Ha1PP:*@(<&^X%!rjjDZJ(OpeH#h*>6lY]DB1*1"KV"MuoFDS:-3_aWQo1c=OKil04cTAOO^NVV4
%c_A[.d$bcFAN-C.Dt`Qn-+i_"rk'B@3rODrMVFDo?]b!VVOfiW4mR`?+\"WZClP%t]A'4gMt:Ki?Z]^%#qh>Q+28(epVd[iMB2+O
%]Z4o&gtjSmXO$Akq>^@J?Z)m<UsYR1e?2Tt`EoIKM6ZieEq;8HK$7IA*p'NtE4eAJ%l[]3!:.+Gf(Q?.RW<0)TfX#:E?*!==7oe`
%jZE7XeiPR2;.0lJcX(sS`';5aFZ3O"mXH.aVXi5(MbN?&/&p^XGL#ng/LkXGD\FJKUO2CQc*E[I!SM=N4rl0nm1%&?bM'XI7IXK*
%e6:KH%pCX@UN'pK2TSm*Gi\`Rqm*>"rSe)HfH1nM0\G8E>W6Tg[J)`"U2+rHH_mdbZ1mRE#">ppd6/MM7[eeE1OSZV3:`7e$XI=B
%""q"Y^U6RIA`NaCbJ"g:7\/LVS^sje+61qpAp<$:n+O>&gChD%LqjB\h]M;%*Fp25:2%?-'Fim%oS4O?/pc4hm@8@AQ+'ONS)+&!
%atN35'9hnM1n2GrA:KY(9B/d^p`OCk\5cB;q2t!!_\YLNpUBnOgRZoR_-Zdr=!mQ4aDnU*D*L8K%G':IQ^thghP`=6.TaA'lrC6k
%p:/`.Ej*/hI6[M/1YdV+f>_]3Ie;>/6[%J6h`;_:iq!uTd:T,<';)SXlg>MJ"m=W)MP7F`]_(F'1rMo4hF):3\)512BKbVXf'/`G
%pL:`+])>B>7%<B'\5hJ&rk$bG4`$1;cVcm>1OQPlim1-`eZS>(_+)%lDd9>KXmlb];`rb<Q(Q>:6@NJcI9Lm&]&2i,J9]lfiZf5R
%*\ikB8i,6#EOSs?8pbYJ`M<9>>YM'$WdW(K_cj<Y8TpB8VAia-)a5p4(Y\3%hYs0MKg/sT=nuQTgqL*c8Z4OBO1uLOFR<[a:pm[g
%*VaN-/:?QFnY@"W$b@*:>!D5H+*"Q4Z!4&LG&(T+D`ILg5\^&%NN66"2"&V*MB->JDt@@D*4fSG**.OeK6J"U?L<K&SrDDq4fsr;
%r`gKaok7=lmM62RS4KUP8b.*Y4SFBl\a&7EEpI/1ALG5bXV6`]X7EF,@[o<V3?IOXn=<BO^XK/(WS6nnbFPbEg2+4Ks(j7tM\00I
%&06-`75?r5#h6lD;.#X>./4bnLoQ_(%bBgQ1p<r>J*cQ!F0d[fDYFZt#05VBYgr,`RT+*af"9tup>1WN)R\m:F1B?*@PA>h7JDfc
%4e:(B<8B.XW8jnfX_XL$>j]W)aQg[f\\Sge>c2]UC2Od@f$7[uT5srpZ5V\B<A?hB]ra5aoinW3S"7BtVh7=1l+B)i5S]G]YJYMK
%fkJ?]n%V#pe"i/+[sd_tC1Lqg]:E-q[o5>(['A6;q"'0L.?ugfUD#"D;/'8@J5092^6Q[(n$Vnimr`ZiSJ*'V\%VZQXuLG:qtGr*
%0rg5'J&lUcJ^n;YY0J^(%Ni*eTm!\S@Ge5j8LN<*Qtg,!+Ir/*le&"/X0bqZX53d+i3[eL_nk2DFbUX7NDo9N0k@s\*1\cqWr"D\
%H"VBMf.Pf_/AA%N.CImi_')DJpr^KDgUk1>APGjY^%H8iph=j.XW,bBhmu,8l<>@\fj"FFgh-#>79:u+%CZQ?'A%0P)ssi@aW;K\
%$q<[,9,[cNOYWBkGIAB8EmhB\RTo5In2pG@`RZiBiV_b/]/UXe:)UmeX8AjLFq$Q[!A,d]G1rFV@HXHC6ESNM@_<(S@7uZohgoP,
%;1$b6HZKFPBCSjF/ZKOUp]G0f;IsmAlL7X#@k-ab?TEcZp!q3BEdBhCSi?fA"B=dua5+,S4_^T>C(0f*V`\h#[rKiJa;UQF-O=TY
%NR@_H8(-kq;0*ED'MZJrH^l9V%6'';#5]1:D=.'V:)[858PbLeF<1<lXP<1;#:H^,XB%Er>T(5&Yh49/ZBY-0P2$K.r8Zk4h.$>a
%$E-IP'Y@?_nYjc1eA*9`m@Q3Hq(0pID!_/sl%G(ue/XEkghq5N*jE,12sd++*?dM&Ljdbe4)I'Z*VUIg"L\(rY,A\^muKNQK+/ms
%CW]AOn)-IB?rscdb)b#3j2W5c+HR;XU@"/YI!IR5ohMJEqUF=O:'^`]^+8IXMlgYPl3p4&4h3%qp@e8l+V=<??[A$hfJQ0Cp#Emb
%UI&"^G-kW,&GHF+2QtZu;t6a_lR&YCF@<6b7jmR[lT-NZ\=oEr34(NS9"a0se::2l#(0QP"!4K>>a8E,25Qmg>d[Yp2H*U\ZAtl3
%DnQpGjl/RcAZbClK5/a[9&Z$OCM2i_e3:"HjIQhX9.HRj@J+reoU&TmfO]BLK7-dKBO#;d?Zc>3oNlWo>Fffi<jhSj"Wgd!<P-#F
%CAT60PPS9Td%lAh>X^`kaVFo*oeSg+/o1$b1Md"d>:ctjX[MB^.T$A/<=5!4W7Lo@p6#2'IK.:WlA&940=0Y@m2U4]%CF<WSR*e"
%n8Gr;c"\2X]b#J)Q3Y2!`L$#^7lgFoL8Ki<Ri:54@[9=`'pV(G2N,o;h<MS"jN'L;hHR2kX2Dbk0rf[E$pVEfjd^L!:T<0gUnQ_F
%F2?7poa%SJL%U!YA47kNqK1(+CbTtiR'1VK[:\i2fGG+LgZ'[K5<J<2J$r*ujTOk4)p1o:TqtII/?D8<nI#q!X)mRik6B@4epc-+
%.->Bo5q`GUmYU567Y\$T`r@J'THHF@_S%GU[:5ppgUC9I9qJGH\ml!30aHnuR!fn_g2\`$?<IbsTu5X'M:Y'ad&e1n:[=aM?h)39
%\QuYP^Q*4fk`9)FG8bmS4R0_+5NWOtdGL!GPX/Xs:sU20J)(*2<I?lsF9"dM+^De9g#$*(\%B=NK2(CA^oDM20e[d?EV4u"N(Ud]
%`EDJ+c-u%3Ia_jHMN1%3_:du(P>X>ao!5+.F+76AWfo)<mYo.k0cW&Uh^V^W>'-X$neB?YFi:=hG8D;!VJ8te:7SVWmjG45Vf&P*
%:Vd5s>=D;>2bVO39C4n4C$Be9<8!hYfA^HQh+;Bfe&CmR?*D?c`p;6rKkt!6@8G<ZfZQ>U[?L%uEQkBtU;:;=/38-)Vq!=_pYs;,
%#WF!q[*t\N1ou%ug;0nU`OC<F=b#8pr,2*!X.<]^[>Itj2;[T)e-=>NecQ>[;=!tI:;8Z$s+Zrmm^Fn8Y)7[&cNs;ZXnE#b$<='M
%NcPZ!CDDafDI!,68?T#Lps6d*CTeRoX^[dea=-1daA'.[>3P\A\lNCXhe3`8FuSV$m;Ish\C!dDeYP=$h<ME0\j,0;<d^ZO8BH$=
%g>CQ!$U<o0du%Gf9V/?3/&otcn^`>pnqFZMepdW4,-U0i5EaZn[5%%9SYf\nIDY-p\84CK>2A+p(Fq=CZr,l8W6&/>=+>@eXj/M%
%`No:&ACKGP27TBH.Z3=u\)\$hG+;k)g/3$%D<]HC/7'rhZ^Zo'^D)+fr:8V.GMh3QqG-pC)iqn[cYkG]%j10+gtqIKnTa_b)csa[
%lF,kF?R=So>Y2ZB4obJ5qbNu*DEmsml_j?lrJboA-$YkantYDAcPnHc>i*3RI5QN;rS4gV]/TFQo:p5V>K(+7ml^DTBXJnB(UkK8
%pLO8@e6-#@hRgP-4?*$-p7Z+^g&/+"@(O!sl#upPKCSNQGDjjE2fC86%\AUp*j(EGY2<$hgg=?I^3[-\Z1mp\i\AV\hW+8Rn+KbM
%Dl'YPHi*EOX/3AYa$6t8n+OBh]:W-]c/0Sem9X/6EG9pqb(Is@i\Bf'eR+31H$S`3RrknohtuC+f&Fu"Bd`l$YP#siQ^9Z/-bmsa
%rT<E)EhhWj7n`<[h[bTo?2f!BdH72W(2me,^KOaOq.3o>ieR6iIdrg'j-ApL.i\#&=-e$(%sRFo>RE,k?[R%WQg=69?[oi%eChT[
%s7PD*GOB9`Zp3MVh<QRq:NkgH^3?WK%_H*HEkD5Jn`F<LdPkOj*+&YjJ)SN'j^6DcX7LNVmtAYiOuol)bqJ]J^>?PPn*-BIl0cml
%\nQJ+ZkY2%2]heH5Mc%h/N8t;O'WVcQ[[a^hh9kKmI&E)G4C^nVt[@L][9mKV(["g%6m%e1r&\Hm[%imDWEOf"j;t`-=>V*QNlo^
%hgN36p3*\>jZD>nIfE<nV#/9A0C`3%-?#(9qWOsVMk@.!2g'YbhL+>Yn%O1\I&h\io'.%CIi@<$$%@-F]<Fot(iTB1O!=RCrVl(f
%rR]ja/)NttV&Lr"aPDFiK1EldrkZ3qs8L0#@/6;ZH[;GGp[6nkr:oVA^SZA<idT2i@s^mHC[nZVKm2W/pfHms7'05&ZM9?sjU^_G
%@_)@_8q'ArDCiG(rcij:ldiP[Y-cqjJ$kZFJ,`gRimJ@p00ETFI'L>lf)9ajf6=^5MoRA<5JHt:*Vr^?q:!Iks8)'#k_FlTX32UB
%Hs#Z_9Q&\>g:al,]!QV)0Db2;05:9'F&5%S>PiR;gP+fdY'mpnI!,$bkoK)*R0"3,j1W"lY(-&SrMqd>IZh,%n%9S=Hf<N8nc%Le
%*U)9N:Y<__@JGQ4C9<jhc^-mf=SZ\&dWY-'h/AUmeXu"lNe=sYgg+2<`lPP,f,"\fqh*e,hRV0tCEGoucSmq\IJ+=X;sgU*:ED'7
%GjKM,gqCFGkEj^L>Mm^XG^!Nn'O:V%rEX]4HB0?K0D!KSQ-4MUQZeOYT2r*ZR9M8`CG??K*,r/c>M6q[SM+U,mcC0_?X@$lhH:_m
%G;d0b\WHe)]K,a-?9ISfY20$5%p!T)=O3')/GZ3h[nF\M(1'/[]O!-Ip[dLc-U3&@l?ugC;X_G_kuKNa<WXq!&3W0=I)[g?YJ05V
%=^@&;$Ei99n-^'GA^cN[D/?>W/B@!aEqB*BY!$k*_q-jBeE'oLls3in38WFrm.F]r(1-D+n5XIhDm-blm&f%[4:>1Chb;o[]\M6:
%]"%+_ji-<WP9!piY:aaAr@f\WGH`;bil^R/*nlKX4Q5%=YJSicm<_'*^&MYh4kb1fnGT2C;8(iJKpT""p9KamRs2ESQ2:V(;cX_t
%p?jP^]!Bpn^&,U[;H`:7H?lVum?V4"W@Zl>\%]Utjkd1Zb+7_2Y8GVf`p%[:Jt9;:'s_2Lhg%'4.b='J0B5KN^\;n[m?bjdqJ3h7
%bP^1O963Oe?X=Q7_3<'#r_ND5(=r1d7HL_SN&@^cfps4&gqG>3X?'3srHS(+k=bdGjjs,?J,T??$fU2#^08A"?Lf0h4dj@*mX(!:
%q"MGHqX&5!)cr?>EFnmf.uMB3<EY8F(U5SFnOieKX??m(_lrgqEdPY9aqj)V$[6NlVX_pmQbeHLp/Y#O/h>u.jl/#_"W(&%=a;6;
%$m&Nca1QctqsK>'XFf&L_09o/?Jq:eO't\Xc$6A_`P\UW:j.V<.j)ZU*:+tul%;dnTC./Dp)&!60=lcCCrePHDmDQ6:cbnsIHN]D
%$#Am*pR&Pt4s,MErG*GDIK,4dESsLBA)nj+=*\jFKO%UHOaCnGq'YXn*rY#QQ^C"K2>9oH/Fq6eQb0(V[Jm(_%;Z0f%?G#>"tDiW
%m4-0"Oo<6@0VAsNf0*h#B9;f-]s?1er;<LB4YUGQ+5YIA44$lKbO,-h^8\lmP'aPEm/p-qj`:''5aS+Ep1`u^K9u8Y)%/r.R60gO
%?asZ8L+7\W<Ijg,HZu)EB\;Y;8D`#hg/4mo)s?AIf`n4!(,qS%l/Z'_9JZY5F8efr!?/i,a++%eQO0iI]R'NnIs(bVcE#qEYSC.3
%O*mX.m%2s-<e#Dkj6bAMY0CBZ6dmfS!,d6ca>;#3k21R^rUs.`rJ136NDI;qQG'CEA&RCD`ufN*ZH2\t4RV.7<^6-D<L:15?N!?(
%_AA99r`j>e[I]d[jo"GJYN/><q_*G&rq>)R(TU86r6SSkfjB1l^\3,d%cOiT^['JnF.GgZgX!OhLV#Kp=WJL[p"$m]^+BhpYP2'U
%DS3QgR+qsb<fWLFiqi@hkM"(r;WOPPolr\SqaREgT<m^Gdp5tZ.*f"U!9_&G_3TmoLMlTK<*XTfE9lc3T,7!+&>0A555ser3P71.
%\PRhQ*tL"6:+dk'\q,/@NK]!;m=bE:;gEu:H?6uZqAm;boL[$!+!*(5_C`C"][bLP4F#_k'A(-oQbQg"^+Q!rFa`elq7"rk^Us,U
%9Ml\.7X@I(<KAULrV)LokE[3<9\X.)iS]:4dnd3pJ!dt<4aFI)r;1Dj@:)],)5H;_*-^P,0"ml&fA&K5Yh2UWhstS[4Jk4^*.HG`
%oAp4L/p3%sp>'#Q5;nCKh&&B/qtGE.?b[7;X5EZn0kZlc?gD1m?t$/rJ%`@>qcA:-jYtM<q<u)>of2j6>,USf:XLW6J`*G%?S:aD
%r5J'_NB_fp+n0BPB^d!BJ]1D\Y87G/(L*#k.(=26Gea#&\G&GfK,aF=mEOIYLJRTQG*5T9=7<<i4Ql-qY.fC0mE=%Fr][2lE%0\h
%A:35.lIO]@h0AL8n[fV/`U<9VmPB:Ar?![EI.qIE23-bk_jc^\G4XXtQ[[XqJ)NQDS*N3S4mrdi4PH[qJZ""c7i.5+,BJ!V38F<n
%])D9G2giI_n!cDRhuL:JD<4EO.Q;jk\+jnsg0aLM)rH^jW-sH1mhbOVhqiH>]S_0/lRp7mD<8e8nDB9KY$S_d,:]"^2oPg]`b*!<
%Y$S96I^o6n%b_iHhd(`hT7?IgoujggY-2u+h(\lMiEfZf&#hT2hHYLl]_78D[):qdMj=0;e]m1/h3q'u+Bc4u/Wi)`dq3W&l7#N#
%`g&L!1bMO]K<;!<W1-W^E:`Hin+"Q(9*]@f5T<P1mrr+QS%28RYRkQ`mBOfN5PkL0K%6nd^)/MNqkLnTht#X5cSh+KGOlb3"L%a8
%36m$6/MB9b;DtGBK.lZ=M8DNbD/\j][l_?0mV#ZbHuWr,2tt`RDS"Ds/5eT"T)%aMm+og>pQs_PYJ:%Tr3)%IYIH0#a,RfB%8OXK
%<-1V/#^aqlb5/64\ol,Llh=U)nT>4hZ4-gaIIhQ!XhLE#eb!ahdTLkqI/QDUZ/!1LZZUD%j1>!V6?FORY#l%gA0N,Zo><6Emsam,
%jlK"Eh7&=4lQ>7)^:X)JHf=(elSs,O\Fe]b](jD)***4[fjO7(>(6,;aYcU303P,RX7*23p%m@Bb?qBRIe`L)O3:`rQS%p:YAPmU
%^2ilR7@nN7TQm_iku0;lnpfQMqJ'm1Lo3_][eb$OErB1I<Sd-5^%OW@^7ToReTgF%rM954gKu5d-`\mTT]9*p2f$0VrIt"0m=W#s
%&%CXuYP[tPf%06VfAA_CAA&oiX33^k]QR97CA$TP`FJ>K)nc.FUfst*V9_'f4?l[(:?VT+:Xm#4I^X[&]5hENP@#l)Z+mLYYJ,@f
%421DGl@!c4c(VE7jf$g9T'hDZo1eenK;E3RYJ3(O5h,K^r8MQ:;ZHU!psScK<l@J@PrDe:n/IHpBg4W;43SEQp"Lb&\,,F.]?@l8
%E@E$rLOB-`(X$#u^C6F>s8FK#`cq'&Tn!*ii2D4FDhG=hI'BlB5M`p400I"_o'Q@G`P&9RY4$Q.b5Ca@^5j"TINa-Kq.t=,s5hhS
%:S%%;"'q@F*.IjdO9OM@\1lQ\ILViK+#6TKih&H%Y@"rn2ifFUjo2q=4DL,AT,(I6/Yr28b**p5\%WeiPEo39htQ)rX%Nih[TAgX
%[pM>slCS#h+i!\aiTMa!f07KpIeBYQH?XX>H(ADMrpnt<\)2;9kHhk\#HBP?GYE,>]>j;>N27=P:"q/g?i;U$+7u/m?GE*rG_l=\
%f:VL/ke:)"XI:XaW;++X`lQ3Do<5W0m8n1S5C'oV4SNmfk5=UZ+$WaNpYrqo-3%<=0<+3Uc.cSAGf3nC/b[*9-ht8sCT$e'([LKa
%<:,g'chEbJ^)r?#Dlg.FgqER7V=0<Sq>],pZYn$ji`u*SN8af@%5p[@-F7VU`fdbUK+Z*?aWPER"C[`5X]0N;gFJjS@XYla<i0H0
%F)'2AV5p`>DlkmdQnb@aj8D3Tnbh-Kldni%S^5r2p7!-pJbj-\]Eu:F\#.'VqrKb$Gk[82&#Kl/h`H_QpsTb'nrJ:tp0W=@[6K-6
%7t6!ZKAZXtkm?6b]17AH$GiG)^O?!q5Ld;TFP&Nc$krB;X'T`Ec1c_dX&Sq6rq"Bar7^'-_XrjOgiNAZhgY'mbBq##p?03\oC$+<
%rWgm2qeuJneK83jI.YB>)t=OfWaGQ!/$&^?X5>^EkoYERqR?&8eZA:jps!TXIdQm%]mhF@mE#;'q3UP%AGXcAIPAM0?@2#2roBR+
%6"K&?cfeFKlAsdSn"*i`T6^=)&)V]a5I=3NH2>\*HMu[co=Nn+g\0V)IsM!:YCH';(OX5's-r=Cn+aOE<U#iWq:6@_h6$-pm]Sk&
%OaY%DYr=<s!#NCuqQh4*G<^I<Q%+&U42tGg8T-b=s,[-'f=q7]59)oeddL$)L3(g.^Alo*'n/8EN\CD15Q0N4mOaN+6U,tY\+@#B
%OeiWjd6V;PIc2M>a1m)baTo$KnM8_n^5?iWrK[#pDh%Z]T00FNmr@'pX8HUKr@GYYGPCe-GieFEGl>*9r<4p8cP#S9YQ*qWhYHc4
%?i'I<IXW\A^\R(Klj*9E54c=oSpb5Kcn(a&ro;aOXag<G@h%K0?iS`%A57XIKBJm(S6>U$*d9*^M,s*tPM^:AeV<[`QREbZrSCac
%r:]#rdFReW:L<b,YC4U>j#@"X55k3(ZVT=g/mnY8CTma2m8r^+k`=Wph%q.ucLN&ps7req'4!;!r7[clYjV]@U6AaYrTCreb559p
%s8:tcIJ,1pL9>n$lKo\np<1>Vk4n=ZoD?:Mlh0q3J,1sPoI"R,rh#e[gMME.q4GCtMm%Nr\]stX?b-4$YPmFje4WBsIsC[FLSFC8
%f@S>ts3#aJKZ*<i^@TgWRhGM.o[OI9qSaNu$f^&liQX%5Hf>ZJ(?aW;pd<oq2.c]tDnl8)09+Z"qpE#?s0(+#a>2==?mU3DGj'Ln
%Pa#7ap%imIoU>0l0>I#8K?o?Dhg5"DB7BdTHLg\aW/BUIPM,p,i@j&$^\R]Oa1o=^_gbn^+)\iBqk*ofo?UfrIHIq=^JfXSju:'N
%l=V_hkJrXWVnN&Xcb9#*=+C":Br(>^?VKQSIs>Qlrs-<DC\WP>^](FOmGE75P(3?,fDbEbpHS932ufiqpODmrhk*Kl,73:8IPB[X
%nOF\\[eoK*Du]g]?hX#X=24CTJ,F&/m13QKbKQb8r8I$EhgQ>7H'))C0m/;MOD01OS)[j>pVjmsD1:VA,pV&5IX!rhqt&^YMQ6[Q
%^\Q9@4-/T,IfAqOms_,2oF(]i`c%L1GQ7415PY55[Pr\bj3I\f5PaIarTp;gJ+CL<rf[bN^Q\3[jMNXagU%jm2`qD(hfn.600f9(
%mJ_I)J,R9WrUN`#3VVHs5:Y!%/)JJ(GjsR>1VNKP+5%RHs0j?7^@Tb.^BUTan+Cn^S+#2chu:l9^OF3Ms873SgmkJ<:VLIcf'h([
%?;Id(oC)-.;RKhLr8"FB^A3IiIJMQs?[DaADnNfuoF9[O\R.'1S_B!noV0l#2CMP>[nOhgj4WbUroVgh]DhAL<h_\nds!ucGJu67
%rMr0]hX>oQM>QDDIf6`o^U8RcX1*QMrVq8kAC$J6:O`>-n_UbTrRW3/hKeu_?MO*#?hs:pJ+qO#nOe;k>Hb^1X81^5^@Oc2m#TuT
%h_AEp>AsP4EV85ei2nBqY@##k^/pr^@tA"ckY&[<rS9F4oS)gjDuTANrn]3ic^XV#C4>rob?M\Gr8t%EqoWjVrllPalM]&cA%0X>
%AH(=(o__/HW8G/ace!XFjNVW@p@`ioe::N4o,jTQqt&]mA$Iumnq/UombSR=n=Yi#N;+,GC4GP^n%R?@`8lPHrr?WilT^`6qf&G1
%@*AKm9=h!m5P39LjfP0SjO[abrPO-[l[O3W-_LEIiDBHmS,`-4+/HLL*\[Q`O1tIMDh%^ma&g"ThTp!r^N_h^7q9&j)ul.A&>T9=
%@UJnkqgSP7Q-]I!'4icgrSoQForTlb4+1K6P+AFns7FmKYC555p"nk\s#9hg\,Q>Ep+O19-#I/h3^3M?5C3:as*XNQ7eqO`mB8,G
%T7p1hRr9fYnP;)^$FTG5p"s8,Xm^^`!U,sC@3O_1=5D'ns86/7W$h-:/Fkn&h;b6Vql_tN&Z87];5)b5J,8+-g>N]QF'W>urp%DY
%r:Wp9IerDT+5I#-o9-\'I/'0M3gADQK=t?2pt_Qkr/5KAo\2V1lM&'l`TpUe[+A["fD"E)4-RFU+UYROX*[Q@<41dmFRHVfS,4P!
%F]3Uqs63A;q:T-RYKuOd2u/`.G<XMKfRV8?W8IKlS$YQ5YCCB'p8Oo2gX"ch5b'RU+4CHbrI2K\J,RptqWQ?mk`^45!kLAQIe+iB
%4MUp227KKie8b'ic!o-.+nO=akMPeVH247-?CS.F:Uue)]D'H@:Iea9Gj2eN?Jb'`b,O(?kgK&J5Mc6]o;'U)5B"9^:iBC6SKZ7Y
%+0M3$&,(uqTBqPUr"j:Alfh_6G2Du0dF[iu"VGU+lM\-*/5I_fC#<Ve>33,`Nn!M5q9f4LSpKSl?15^>?M)XXo@';_I/)*PqpV.j
%^AH&__WA=P:>b3+rTK-d?GoLC4mf$"ER*VEs)2o*Gie(EZ-lCeO>l$8[62]TfL`\eV'gQ@Df_?EY)2b/j(^9pPEf4\s">nk)D(KS
%-f6n5nk!`JJ,YNs/sG#LC$io3cXY8@ruZ$\C_D$DLF[@:]_CJ[(MPuPF6sTUPk3APCs?>"7cWH$q-LT_<8-[&>5J01eZtM[EB[R3
%dhf^fOr#-sf3Yh/qG=T[GHBYTE+,FsT'fi**L%@:mlgTs'eJ`dD7.Ckf"rRj'3N;ngC(MB)8i@0*rPV%CHD"Ei]Vb2)_ZKW$eF^Y
%]1.nBk4>e3I/eQfYD1(AX/5Boek+W7<hD!kR=2>A'.M0OJe=!uLAg_J<Qi#8H_c`&l@7&XT@VNW4mFN*e32p*(VXeig&:/-I6]Va
%>cBo3@?Bi0]o8lFjR>=toa'I,Cu7;dI@koD%qSh7-JBeR/]JbTMq(EY3GTfVl?J`tT!i&ijVGHu@aKB`X`Ma6e?Nk+g:I#F)g"#f
%>an1'oBBAcL%jGJOR.D7p2uDOmSU.mpto8.b;qb&_fgoaWiWU4pZILAqc`X3)nj'kaf`71KY:Ti'!Et5-<oEH;4j0619EDq/!YC=
%q6X^[Y`E?3rjkT3]BlG=K8_nOZ=C-9]R-'6`MRR_i01ll1"Wr0Y(L3PC3;],e"l#XGWi>;CGbHRibFJ0]2kCb0e:f-TC+&R1/28G
%>PFb-l)LL5p/@/"buDRU[*3N^A.r+c1:b\W`+FYP!A_N&Fm]R>BfjAW]R:pNB!kVY\gd!)Pg'hRmb-=\kRMs_KjkF2Iio!\)'`HG
%P*YQ6:T!jM+22ICeO[#/>ea;+Yk5%nS!IXfo4HYtXm00DKT0L5ND':]qR=Lfi2a4eO(EoiX?E+(/ah\Ps)4I*DMk9X`:ghZM4JIA
%Zd=c)ZsnM%gLoRH[,?amJrn'm2S/?=@PM:hm$>E!m!X?%T?P%'TiuW7gqE'IfZS<l[a0*R&K_PMdl^7rMgbLD$^jZY-*qG+2)`8D
%5Lsc?PkPIOl#nWK-u<64:KnID1fX5*#3r9=s&mscnV[:5+kf@B\uA%d2%d[lAo(F9J!s&*'%P99cRE\&4^9'e--)h*0L9$)O(RY%
%;g'J[Q$DaUQAj^-O6_q*Hn6/9S[mJ@LW8%J<e3h0]0Hc%hX.I!9rH[GQDZ$'/r3@ubZ1R`(_\WnR[9l0/CU]u[^&9T0KmgDlk20f
%jHh3,GP2\Y4<LlIk34ZW<O4W6@G.ei+q@<00I#dIcb=Y::nKX3P?&LI(>SnZ5'/ldh)-fp5$cpOb&b)+@XGF<7iT`=h1fMe(-uDB
%XRb!bYj'dQ4Apef(WXbsiKn?idV.b4:X>uiA7-KNe7NH1d=Tr,_WjV9oep(aY*[;;lhNY-TD7XXSZ_)=Wh8a@c,tM#7+3(+UUB==
%hEN)\mk+(oDL?E7oZpmWb5]G8h!No&Vk!ebS0Q?>pQWSANl(%SH1C^A5)ULFP[#=/GNICC+gAJn;Q][/8[IR-7U?lM6Sm!-k7(L#
%N8!$F.JiZmM^g\?l'#C6gcn7K'h')oW"s3(G0bqbO6->3]XL$Oj7,.M0CSTsY1Ph%Yn\s4f@bc[I`'>&^@5O2s/Vp4%<!/*ofG=5
%mAs^9A)q[/5IN=#T)OY6l?$0)VgPm-<tfl4I.&YF'CHmNPM*X"XfC2;PO?t4es)q4[B0Ii%fX7B<FZ26mq-t^>t4=3(*cO7hD<)j
%O0>HeP,33>'g"<*]+I0m$k,fgqlO!Q@qi0BgXkg[Gbl#WR&Jh7P;H)MMD<T&54rN+R&2JQQ":k:MdDgSkrngpCsb`h-e:,b;%$kf
%`I5bn>P?NWG)]ADe1mqhrO+E/Y@q[V'=8dWjc#E@XVi.sPb(D%Z&(L1fOre%<7iDikr+7;DZ0sm(b6I[@.:&IotuY-]5OQ`XUJAX
%fa@Ga:bP8.)]]<]YG%5MNKtC0CjD[9)$t@t%A'tW1h1e"ltX!*@kSqKln2IMmY^?IF];j\1!X@Ks)tp:mS3%YcgR\%mTgGSR7ag]
%A(rgcRS5o2/:/QT;OX:P=$=3_jkaE.fotSPfFp>]VGONFG#Phg'Bd4e6&3D)R[>`LM`ic_;4MGWN/<NQVL/j'F=f;?-Ym9PUl#*c
%gh0,;h\>s#G=n*2L/M@F`crAP2LTSh@b.jh,<RRRGAZ.$`[&RQ-F:$dcYQNu$gh&,!Z5jenT4YuX7r-6%[E`\+r7L8=r[B9*nBLN
%g0JC7H!QaI%Xmj52^`N)rM5jo9fbE"fQ;RH$<n0Ih>=H42B"LhrMAL1W+H2i>;(?1<dS3o$Tk].`700nnW4))X4E7N"oO)@e&kI-
%.Pa!`4%K$t;n;Js;irT-"t]\H>*GKS-EinCIHe5\NS@3'[8EA1$#*m&g?Q/#P/(ellXMfClIN5MEStLJ9sqL9(YB5IlJ%M^nOuJQ
%/p+PBepia`B2'sf;4::qNnSDF!AhPDiS2a?CbLbCO6sCio8L^bIWPIbo1q8>_I0RlcnIZ)2ndnP=2cQC#/4qsH68JL-@PIG2^`N)
%s!/s/8!L+e=-p$L%_S@N?HJKSQQLQiliYATrifDcfeI:c]udQ0Y.Y>*W`mg(Gh,8'*j]bA?,m`1U.7pM$tmh=oJ?J)9D</F6[NC"
%AE%E0Q^QPXD5Ls\3I0*L(X3B\i/gh+ki7]'Be=g;T-cHjLd1aofl+$#FRhRVJW(p_9Z_H6dG(ZH"7K@3K[Z_eBeqj*VA7E8qr^0A
%;<+"4Brk9Q88+?ukr(KLP[.4>[`^OrWji!k7Gn9L?ooILAX2)=.hm*9)e)*s0p/WPfn(H7D<fR$?+;geXKIK.%-<V8Ib3p7gOL*#
%d,B&NTl&8kf'9\[=c7)<`W(/ZU7:UtJ>\9ilW0l,ROVdhH!2OEp`hHiD'itd1hSH?KIF*pa&GJfGd9n=)u[1eM@[P+l%nJYqsjY'
%cZd_aD;t7j2;,j8RQs74'Jh\;))mXXB(IM[aNj4/_iVt[8ph+[fZ=F4YH+NmRAo/kb"5iRE(N/R3temRd9bS7(.dl]W5]l<Oe&51
%b=/_GNd+u6#*)6Q*Gqb5*a:oamR*$c>IHsJ;E=Y5EpE-)R'jjCX'\mGL>CDA"s(M?Z_l)h@I)k@"^;WW`,=>c\-9p1HbPr+Q.oc`
%=)31&lHZUUN@`VWF*"mhgpUL%Meu,8*RL@d8U0W0I]V^;n&"\r_(NZ(Ra_YD0i$:tVV/SFo'(JUrm00UJ&69cVW(XlEGfF+P_jc=
%BA]3aQE<cQ8@iO$R0AB.ZBB;HPDQ.pqf/"U@M4Dbm9AF>[,D`))(-FuZVB=r8fsaoffGNZQsJrQ<X!9g?$O3"-AULQhs!%^>Su["
%0Oa4j5J#<Ea9lfjjMZjh>f%!V525E*2_ukZ;+g4.O3Ht7#H+&#+dpsOd5ML]9B+[W.`r>2glnTinBC<?Ceg8-f%@u[bM7L^ZbA/Q
%ST85DY?[8Pe@%&&b)qVdgJ:@Wak_enCher#3GDWTZqRRtZT*&]SfLq-Hj'E*#<;6(ao0HpFo(o>,;@1-7k$G^91R<hI5#C3&0%h@
%qQ_!T5q6#qcrf&edkt.$p`e?%X$0u2:9$b?0HIbu8MTYh=i4GY2`:l3h(/K'aaGt`pdTfD)VHtc@:%dOgRAGeGY`IYDmBf>(>uYW
%%YpJ8S-$#q7VY[Q"is_uBV1@(87T/u<[9HlEp>FYaOR\D:c@pSYo*WKC!Z('gJRH1./9dp$R(on&kXIa]D%BD8J=M@P^q<m>7M8^
%cc83b'.%(J'OsoJ`XKH;Umg[(l#sDQB.Lum#(st-`CCio'UGPs*j=n9o5#V@gRU0_0J%W.=l1L(ZE;Mnh&L/]?#kThXfMC/88K`K
%BuaT8Bi:rjWNss))kMJ1P1_@Vo?"89rk@5J2@U9e>%1omD:%a`UV?CPC.H)2_s[P@,fD6uL>[,M37'>SKUK!?<J3XpOf]!]U>BIM
%Lfn6Lk!Xaq?$!m2c^d+P[a\F4'`+^&[8HQ`1*gs.,ZgLF>'BV7Bd06ao3ci.RKG(I3GFRn!6J"6FAbc2q+8Ht+kt^Ogb-(ta0k6>
%[P_[hQPU[=ZSQfR0[C65Y$CnBX\+.Zf^aJ]fXpjgY;(_Eo_c`-s-N9Y?^:q@-V%pHJ)dN1afiucn!qppT<ifkcDDct;FRBREqGf:
%pHj5R,"h.4\q8>iZq(Li&o&o9cI+b`-?I,QfY?aohCV@1<[d[>Ths5pK`YS#NM?C?djY(922Z_-.-d'eO[#g7dB5?aF_DK^Sjm_c
%7a#bQ^cjMZ\`IeOJ[C<t"3LsU5$_8D?VCkilTNJ@*Qi4>QthH34T!]acR"]i,^DFm%@MLi`)B.5qeF)u<?f>&/!"1]qR59?UUP:!
%6Di^[IoQ8"Uq('iOE<<qQ?kI2:e'E7eWh8K/_NK8Za&P-R=2/8:f%.hm_2ZO&K.*VMP2rh,)4.g,X$^TErpo4VIULeFNV*A?+/A.
%%tHh%Rbc\DPEMtWQn9(/T%mp@*u<7+ZQJWL2mr-bEB\S@7BuigPScm%RU>WLfS<FQK`Q$ESBitG,Lb;qZP0C?Z"(HU^HjCG&s-"B
%+`J]qrh$B3ebRWtF^Et*pJ:>HQ%aZ-#5N@8onG+u<gi?#:=U!_P[u:JW[a(iVW$LfLRD5'-Uh3;>=I7CES]=_E;Q?=\]WB'DBP>J
%SDE\ZUg-6d0)AbfX4rYIqiXmZ)+3*2gCHCF5M=H4Yp$rRZF@kQGFgXCRq4S$0"QM\lu8E?dBC,Q-!LMbQb@/OW15a]4h;%#,'XZA
%&H8mag1I9n8ou91>PN^ddkQP^>)X9fd$NLj!tQ*(1Ad$"U^f/HY#b<r[*qf/iV@$uqUHpgq=78,>2":6H%Uq[iNY/'_6cl'Gt?U`
%b1VC%?5B>D(8MrY16)NPlY8_C5:Vt'(RAhAc]&=Ybnom)Ve2lc7@NiP45LFu0<;XO@<H&B(cdBD&-K7M7Rj,qLe!H`JjTgfH"mL%
%C.lG_p!L74$H]YM)@+6V4ZqG^'F#j-jl22i,mG7Dp7/llDWqL;0&lLsQ<SG!aM=.]bY2>:-^@NYGd^<Q8*)<Us+Y6&gZ?p/#ffJV
%Bnm>KO#&`!a-opG,-]0N)8DYs8a![jS@%>Ad4VjIW^T6P6Y_%)s2#Jf.[$d:&Qpi6^\uj0-+0;tM(FOVU`s^s5J(/t[L\`Fk9)ZB
%(7nb+E1<;NXS&sHQ4_Ra(slaNl(>?%l#lmN6-g;q*Sc^U/6/.uMQ3L?^Mn&5[L&Q]Uac,9>Go$,&Saa[PdtT3b.1t^.:?YtH)gHn
%V/V@">_L?rYXD6.@ks7?NS*e1*G(mV1pjfpA2^a-nBU8i3*XuPQVt7^)?FSSR1jXH]T'#;)HU#/9kk'n8/u8>c%9m1Cj5Ur]Yi6f
%Y3?Y(gW0R^gDQoZh6oRK+$k1<G8/KNEkpmoZ7n\#JU+"r5:oFi![%;Qg8N%29ngru[pL/;F@ae#[tG/8S$7sn/=Y@'-6%YhKpg'g
%A0PQ<[`L[=_EU7T/H$],dZ9Y2(tdXRs&#5)j@t<[ZT'+6p6lJ#f9=\lW$UWoP0q:@ou!R^=8\[;;Ok$n8FkKj,[bl!\M)KD"57me
%K[8+5)EIs`"L%?NlY[>S8P5robn/Sf4dhP,P.MP?[`tPfBRhqFCZY7l";r'2TPCGV%'?Y16jE%6NFSPMGZ*qiq17G)8Nr@m<i7CB
%+\0,C>_>#`M=gJ11/?T[@>cXR]+o-8+(P1V)oL"n,bVbl@-V]XL"+d9NdJAS`IEh]]:8b0Bq6F3HpCjeIamc+*`C;mQ3^2:*Nb#g
%9bCc"CufhHSaguqnHZp=hLru6LWIR4k%_2oSr;S-?cQs^Jdtm2)$;tA'dt(a`><V!9J/=s#*Z#-NLGcl*mSacSDuT!#DlE4QQ=Cq
%FZ_nIq-:fPDn\]T13$h=:(O8`\TMG,nuPSKeY.A19nZVNCa>`q\k;0RT&^2_0@dU[ir>Yi2=IMAmpD<V:T-(WQg%3@PNkj;d$a#b
%BA,#jRIZWge3gd.g=':3]Mk596Y./^m\i`G959=CeLH\,^(.,tK7Wp%PiLG[I$ngm;b)4'=p8@r'8'f4Vt^kAqm`Qk0Vo]=plabq
%aU6M=0Y;\;fRCMjCU(JXj4sJCW_I9Q$dBC6%pL$IJn&5G<*$55k,]O]A(!7Rh^/h'_`?2,R%jSb.<\XB[*b,0q2Lo0V8M9E\lGYe
%QJh06dqE2o&X!F^0j>V#4r@6`7_BG/N#rNbO(G,5RKddT*ej'K+'a/$+'HhDa!!bbaUU"(*HK(88VLJ3oJZ<CbH]3ffQD0)nu6cX
%#<FlTUotWcFM-TlnA$j389HD;=0ZSt[CVSUGB/3/SNK-YSbuA-Ke:f?,GLB,lk`Z-WD\%6A8.EoHtIk:9@bT+Y`QN%<;_<pC&ArM
%j+_kYWPE1/8.FE?H1pt(NLg=DJkmOdSM?#sgci]scP6B7L/V>(Da#.PWOf^_KSSri9ObQY9JmTbM/*JJ(re+g8p0gRFJb3ScdqGQ
%aQ-/h9c7VVBua&7[;[m5[sm]gNSL"lM-g%Y%?e[t`mqdpC-uTJ1Q.23^;;&EP@]J-"\2,Lma!\kR_pc88C\;%'S)B<B&?RBT"_b$
%/hi)aaY":lR5E=4VA@-!Uu>R<p%C.pLTc'm`*13q8?V3<0,J5!o)/@+gU#L#?G5`YcW=Gg-n`A?Eoj"#3TZ!a`R.9`l=(AN;sN?M
%PpB?QN91c+=Kob_N)Dua-bD_gj]TJ3?Df.[Aeb68,3<kU+X9h9E%!r?ZK0%nNQ_%lNR+/!\uRpANGJL>PEF5Fn2.gl1fr1//7\YD
%arEHI)4p1unR!bWNmu-\,D4K/8I?Ka3'WW&iO`p3ChiIMJTp%q_m,p)MR'rrQbNoVO:p.iNNCr_0T?rQ:WC\]/,-JmUQjuN=T,;J
%hS+(Mql'qb7CCTL2!EcWOL6%@TFd[/oRn.ISVf,>q/fs`=m^@V6_]sRL48@_KAEN8F>mI(E?]R"GpX?9m[_ZN3+ShfLcgZ+Qi*Ao
%'"c2?cut::Ph&?(/(^_Gk]g1ECiFI':dFA)NXH.S@mG[PbA#+3)0*Y'`u!j1?Qp+H`'I^.354c8\&TmchP!7Nh"d#_,<"W(1ZilP
%,KS-1cs>Z_fk-t;\.b$IF<_?3d,!J[)F*?]8m/TYYsAP4k03=q2S#Ymq.&?"*:/?A/Si"?BVqBDfdWIQK5smC>N32bW1D'J`5B6l
%/'p>XJcc-?a@##IHU^bukohW"*1d_q0lN4]]p?ut6>%@8>UM]N@k;rDn1iW^88H#CTHlGN/OV0eL#jmVBeR/GP5*Mc<s7XeR1U]8
%Kl0[!Mb3M1lQ;huX1(5nNKo9c)Vtu<m(,em]\WiPc:;kKN*DYH4'gSd]b;a>V+Z,9G2apI)\CMa@Va_%aEtXMme6!Y0De:P"+sTI
%.b^GZT":u6&`9u"-?*#G(Y`jp\3TdNQ2G5"nY>6u=[POpU;Z2>5QT-/kSQ3W2cclGW7#phHVqHTZ2rIZlR<NH?$%@!?tpOTGmI-l
%MFHsEEN-^.j6T>g#ihlth(-GrBG`)@[7+W/OEeZ]r,XGR="/s.5oBgkJT=jK2IVclFM3X9C_5sf95=O"'*An%!#^1<1hNEA/&c.s
%7s(gEU0sPeXKLZfaE1qrfsC?rZu:FN'cAbiWg$7BHi)7]'G+82'^.k/^:?AQC)SBF>\W<P]R"emM#(iEGu0?%$D?P6SW1tK<r*BA
%jFMV8(-gErGKPd>]('SAl&IZq8Q=fj/$Q>Jp7P/fdks!1Ul#'-GhEF/]eaimAGNDel0P7E?b[ZAeRrASjFo!Rc?)Pi"OkCIYgZN)
%>uof.0EiMNk-0pZgXkOHeRMl8ERjF]1Z=/AQ\Q+*G*$,(r=-<eK;@I27D:4mKkscD4_477:6Ls[[l-YZMiBRh8K6m";jen@b70*R
%-<@0tp-ifl,Ah&='M$Zm4I(@L]sJd8(n4,(JMG2oE8;r;Kt<220dBhoo\dWtWi*0c>1ZmGL#Sgl3p+EN&j]APA.cp6+K6ZpbO:f8
%Uj<SE"MVuu\PSR&J=]^6L"&60jj?Rc5WjMWo:V(dTr.VUQ:>rn&5oZt+*ecgd7T\s$5$$d,%m]MC-J3-b=;&I%B^N4Ci4PU+1)XG
%3HohWSnCt]RH`CNSB^#?D]=B1nOc`f87E]37\5Z1?DtQ"l8V\3`'Uk%9(XD!A&T%TkY48];uX1Zf7GR<Q&bH8%l6pOTL'facZ84r
%_`o8bQ>oI>:5gV$lLkdOSgDT4ci=VmW44(aAf"THp,^0X4NZte9obuGnZ@NnE[l(/TnP=Qf5,7?)/q+/Y<!oE'+[t6K8.#*P5$]2
%RTqAh,XOff*.PUMDH2%p]&,d2@3eYIg$Kn>mTR:Vjg]b\WU7bn)P.'sp0@:gkI+tnPYmb0SDT0a=CD#>=ft(DO=][VQO1sYD6R)X
%Oc8N8AV#'\HIc%9nN2(p=7TGd7/+t@<J)ucp$IO6&_Xm\:n_]>Y9EK`U&9V*)L%1l66g?lmJS5AAIi>slXn(p5?g[aNGX8)FXSC"
%R&Y0'bl'L7Xa/&pF,Rnbp;4.XIH2Fib83aIHLZ/89qRV;L4mSM&^VfjfI^[DT3j6Z3UJ:jTrObcP+@IbkmCNT4gb)5<Ir+2LKUjn
%WuZu(GM)G[[DV!;LpnQ[laVfJ#h!h*dE+rFIQ(1@QqFT%+^L2Wp"A?-@-\n12"$4d(I!'.*Z)]tN#5+!\\1qGLuq>7o8)[(\65:B
%r:GK[Y*8M&JuK^lS]^<;S%b/63*g@RNS,bO.P?[aSZ=`PbFu*)*"X[feP>>N9k"5m1$u!)VUnGME/bRXQD`i#gu.np*!99jEQ"%*
%f&rT$FJsdshVT#(U?>h(1%hbNE(G1X"l&\Y<H3=A#.K%bU%E9P?hA/kj4LlgZUi,VoTDO98e!)a(;X$AX;H\)c<@I!,IFb62";iO
%Uj^l'6l'TXJWHY:+WL8!G?V%32;A_Ghrktej&F"Y(@)OJh*]ToaaJR!qci>F2"\G=I[IR6K[`,PJ3%+jB6W,c>rT/QW&hGU^(`B@
%a0^7OflP2)lQ<Pi0-3pWLBU[MormO6Nb<e-Y.jf"V<gft6A_=1e3f@EO+]?@0qH(DjklC`<XSgoC,paq3-$ZXTguFO<p4'SXr$JA
%5j'@VRGZPFcF<LXs0"@NF&A#F%'Ms;MroV$edZ9@",uW@ZuJYO`;#"->TLqOCh1WVKI;]_:-DLo1F]mJ,U$Fr?uQ#Y@1aU!(@98\
%D4;'0R4(/[.50sOnrUN]bX^RGmVY;HBHn8]lV<o0LRcTYjcd/4a>:gDDutmUk*iC#iKL3%I^Fh7`uqrt=)jAj:ZbO7a[VEP91SUC
%PqeY,B"?.4(S]Mkc6RkQE,A(uU"*.j,pLSR/eTc*kr`91R'UqF>-.&c]jP&>2Xc$W:F:Is.VJ>iEcKF0Zot?AP!,#[ERkN*c782R
%9/TXBQ&T=[g;@^%@rDm]RJ=abk_pt3"+E2`#]4;JjJ9\N/:K@/0OK3X8t-8ZW5n:i$-?G3eocU/8WOga64?@"'iE\DPSi.g-p*]5
%P9lFsOfH%8_X[.I*c6ZcFq]!5WEd0b9Z=RAl:XW7B'>2;^JL.Vcr&h"od7X)IG?E5++<\qP+*Lb#B]UVP&'iC8Jedse;HM>QlaUX
%Wj.DGoIp/ZNEFP&`8#>4I.l+W%=aNji=]p(fM,)^XTFfFS,$X%J$brrO*=>HAo&H8\L>JC=/K;L2Ahr04/f#`Ac8]VVFb!Sc#pUW
%0-AFr,@#<5eHB6`&6I%t5*;oA?8'IOE+;niNZ:'t6OSBoW#fT*8o[Z)0MWCgV>*oDLE=9ULpP(h.eSK>H($j`dWR;$S:("_h/FFJ
%o,(2CQb278n]k/FJXFLh3.7]S]S:gVUom$6DP0i&?BW(kiimlX@Iqua32C:$1RMRm@I5Y@g3qhG0c(!24&NE#iSS1d0rL&KpI9t<
%$Qhp/gAs#"&d^#=Nb3pY*WIe=m^s%MfW$T,GQM`XXlL(sq1^s-r1H)0@+6*=3be%*iSkWPP^'WL023/rAO09/=3H*GS:*tRlLj<#
%]CuO%n>2HP?%;fhN/q=,"]dR7.\06t9J+7d8[U^RbY)$Y:XsFB,S=LG`3Ed3LX($I&<gWH0777YVJUul`'f,"K$l=jB#-ou64qCo
%l1HTVJ8q)_`&=F%NlA/3QU0mQ-UE,Z%_ls/&Cm3Q!>%#!&q6<=)$aTapDGA%K[e^EgIjq?M`eN>D!m`X,3pfR\*iUA!-PI^81'Z.
%;P"r%7)TsA:QjAI?G$DX1KXo=J0lcAR$3]9jU=Du`NK%D[!^%o?ICN8okZ"B2V],a2qQ8!;2:lT8ph64=JKp'9W#6rQ6uGD3rB+Y
%`i]!d4g&<&)&Q>XP`(-l>K7fAIE!Wi%`4VfLg):_"i1QLb/H42a)D'?0YFG<[!jh%N!Si*TfAn9X:ROA](9ng'"WE<N/[m%8@=/$
%G6@+1-'GrLh<_u7WP!1W&!2tA-%)K"d0g>Vn7c^peRR#9PCsC4grZT8d)PRaBI$o3-HB;"U3B'oGk<.2YO:c+j(^,K&oO9[aMc78
%;:cFm=`9m;%ua4XjetHhaMKj2incd)d>bWC=c_VnZu@Nme;bq$^"b83r(?#k5\e0XQ7^bO4<@cO\QM[+;W3_C>)^?pc!=H,-6M,]
%:Hc"A<bV5fF6!VYNa-mlVH4Af"J#;Gg`=pHh4s'&-ns6U'XF*M60FAj09U*3_EU$\F-n".%PO]^I3$@J)+Jj4Fd`J&V+mVg<MWr1
%eL!g;HM3K5'+rYuA*ekNMm.n-?4eViHQm)^R3NnEM+")"7k<B$Un@#4'!Fo/^eN'F/,M*L,NAc\C(h%q)5/'9$A^X[\,(L*]lYjt
%cYeKDHYMiYlb7YM`Rnc&\>u!LK_@7HJt?P.i9l+XK%3i+q]cJ`HZr;a`SK1,Kg@\qJ.D68,H(R5`44iAB]EKK;\qGP^hU8Zpe5Zf
%V!_Z:Wk#UNRJFdkQZM"@@Y0]^%?a6gIQZ085[:pIj)_-$Fr]L9[FiE,CEmqmR3`9FT"R:8@mE@h<Ra[%B$JI\YR?RY_bh]cO"<Rg
%Ppi.&DW^$-gX?tQoLf<d,12U;,s*0"#uu:9fq>B>8=/h@?^CV%[2!uCM'ZP[C%o^H!1o0'XpCQU?e_jrQs8GsFR;aJQN01L]:&#g
%,R8V>4*GSm8"?[tK;8o@mo@/EU]:^?mpqU,dqbu=1TnP+efiQ0ZaU<T;OYUL7e,4[GoG5EkN=ur!oL/g`SjsAP?7mrgC^l"A-fB(
%mq$@SPKU\T&(MG.!P_f^-4c-*KpGu\+egLJejjM=-B*_>D%EV";C"E9hjhp_^KQ4p_K]0r(4=l\f(caX_>-O;faaG.b!q7cY7s8\
%@tF<Yd6)m>F!k:BqKdNjYDgF\=c'3P3gg8K=dL74o4=W(ZlOn#9"ilS>s4cd]Q/J'G.B0lp(p8R\C]+7f33%t\1L'UT6:Zb*a*/H
%?4PKIBjQ\1G5l"ERuH--S.6'bH49i=IF"I1K[j2CiU8RjGA+?fn%3o>p@O=f7^b![RWJ;W?Mrg4'iYo?Mq#Xc22<V$U5Z@;@m7g=
%:n'gpF_Tc>5I?cr8Q'm$a_.7%NT]7nO7CF65@<(C:+Ge)7H1A3I/>n.2'2pXZq9tL@'iHt4uZqTGaZl*o?mfB?=qTal;,,6`A?A,
%!gW!`5Kp&s&R+63pD0IbMUJk2W.$]0NF<YuiW]o`rL=A\@fHQ<HJDW"oks_IjF^qI]a>mYLNuI7_]hQ?-m)EIX?F5]iJE=3dsB.,
%71fW$4%-mlj[a%M#O0"6T@_;/_JrZGI*ou1L3PnK1S2/>XA`."7Bj51ZPnqUcQ0GKXaHr*crFO8#0Dum7TIpZZaZiNI-7>u_MgZ(
%5R'd`;GJhl3T@U8_EX9X8G3^cng3oO5[6iC*VlOsC4"h!86Uo-OH^er>[E_s,X#FGl!eXr9YnE(n(CFUSOs[=Ohk\I2sY*,@d%@u
%Y'dZ3cgE[@Gh=2bg1#I#ifZaJNY5nk1C*YoI<a!mfWoas(@\KW.rZm:[\L=IC)n`)%#lY9PJUAT?Esqs!ZB:,/@VNT;B^Q&#Te/4
%"-I6$-dWdRZ&&_g\->&GpK<M,Fq>(W%860Sa@1,[R]/E@)GYt50m9FQgZ*;X=QBXX,ri81jI^Md9jlh`Q_lY/Rg,,BoGB\#(*%7u
%4Da'/#Y9]l<A)JT34]/QT$"9>@<K\4&DN;ee(6bJ40J;Mi[.)_;k;A,\gO+O3rQig=1]4XXm>dGpU,:Z&802ZJn;W!rp*9>?.KPS
%YZ!8M"N++e+A"%Q,!?S*X.$J)=:PUognJ'*ILCB(>`)t>,lGHhDBh9!\2NDmJ1>edq,hs'*u7+j+O)82>Y*O`i:O+$^Nd,@USKo_
%+l>OYSUC.a"etj>495':XU8J,05Qbg#.Oc`Nf#S6CoRS96=i+:b\"%a*-Bep,,fl,/F>`H'p.cXaAck=V[pusaYH/22m8$k3k_b!
%q:b[JJ6])+OBt\46TIguBrHJZ5V,>@_Xn>4?>^;Y=fP@s3rc.)>EVH*dWFXR"4#?&MO[fr+pK(qjgb\"MF=mMPnt4/Jh&naQ.]>-
%P]mfj-2N[#4ob.G;#ncf=V\jVTV<$`#+Xe;4^]l]&aHIW]BUK?j?j#'SONsb[iT[\"#!YufIKR*e4Pa;gDQeR'emrD-/U+RQDN&S
%M/f0uOfdCM'n!J9<FTIc;b@J?,QL3Jag4.,?r2H?SLLLidF;hNU-^2)CF4VT./suRAYk3JFlF@_4Q1JlBJ!8XGB!VN=C=*"#ut>+
%%G<_<*Z4r^YZ)*_AUN"D&#nPCb*<8G&ks5)J5;f5^F:]oOT`</=@=q3]0f7IA-UqTP<.jcP6/IFMpOOc0UeFNOhAbeR-MQ.O:t`@
%$=]*AUn0'/Yb_rZ:hg=SEYeEfd,p^#jB"I;(TWK;81GDYlG!?Zour%>9*!u:2EI,<":E]q8a1fZ8$)8'IT<7P=C$Fn6:+O\E[>+J
%5>Ad\9oU?h'IpI$2$L2^&P["D-u=!KS-0@6P6_@5'Qj%l%F(O:QFm?Phb=iZ5j^hR&FGn&JO*_=Y+0KReR0p%\Toc)<sEep@8Vs:
%_=6cA`h!d2J@Nq-nL?EF.hauC-tUoF'H<q6^m@[<,u&5R6.Rd>Bk6^d4Fa&jkZP;j&@N`r2)_d9!5iea.X]1@]L8`SOEu('00a8Z
%bGW]5T_Q$]L?@CDY\bd:h.@#id7NB2FbG5f/3,WEZq#Y8pWdkLkr^<%3c7H]!_Ro:Y=%K.@SE=`U9BIAk('\DGHl>g_!&&ln#0P+
%pGdhs@/lJ`<Sd3*M!0!mlfda'Rn2@bR28HD*$e<O$=M^4G)d[TW??_u<Q-W<^G(M,(4/"J/VeTrBt-JLo-*qC1h\o^LjRBFLkZ[Q
%7'YY-C.HL&/>EK5MfMY0drW=$pYde`UP<>*KU+ae7M*[O`XY(CYHu3lScao&-94iKTLsVS79Ct/K@U]BF0AhD/gMo*]rV57c0Y43
%:fERee%!$Kld@?6,c&<<2DmtjH+_!BFFYV/.[i,?L;F>l4,$;fFJ(C\X*lDl5\c@QM;@t^30mmW6WP^ldZ?+l"C-Ll*B"K)_K:5t
%2_=Au)gYu%UScGq@YQ]!>[DVg2V&WmH1s:;moJ4.^isS&m$c$1I`UIG,K3Taot#EbFrg+Se2HJ)!?p1'MRMB?7F!(e`,(Y/0fDFC
%fWQI=\M!=_l.tAJZO%adoj?@I$2]FEiDUeoZ`Nmm6I&,[^b)S!,lnteCbUMnmD$f>`V[of%YQ+,4n\$-&D3pl74:bR9J7i'?jX@n
%7*oYK.&@3EFES1EGr#L1L_QlBR9%qWD9i^r'<5GAOas5)hfS1NX*'J0)J\Dk:3iRZ?GH.)l_e7*SdbE*MXa?OTnXX'EtTVVnC&h`
%4LQ"D&J6&3(1q+b+=3kDnkoh>l\tfdjF&*d\^4>;-*9P?%TN3T&e_XmSLApIRDYrtJ`?)LjR`Pud#*&%`#ZQ4N?q:V!QNE&lN6B,
%Mjgm/6R7M]'0L?'eZ?LNp8l;Lb"X]C0@@63'4*r6"Z.uu/W`;Q<:q[2]j@`Fn%_cUeQaD2js0[q^A]MFf)l^(2g&<PbZ3.Gjm)-a
%gXA*m<s$WaX1jQNDr&lme?ZTe:o`.8Ssd$uQlLnal>r2<.:!0V:9O.S23jjr<D?:\O^2_@_fD,l=s?PF&@fnR&nFp*YkS>ME`*70
%oZm[+oLl<-JSHMhV,/52_ftq1BH;%Zq3+&jkC0ir\qcAX,;s/o;]>dgcomU!WF?YL8>1`XVVVTi&5WA&FpU\Il-BYJ$Ob1pFlu7F
%I.;sH2$ZQOh<JT`&uStQXR=!GlpZ3HM:L61g4LU)<Gdj)3*#]$_=LuN!X(cBpDUkN_(0%m>>VdI[ec*NMO@`);;La1We!n48t>Ea
%(L(='A,'67V)n>;?/\g`4$#cdRY'Nj9r)#/YYb:g;X[&_V$cSm1S8XoeoI-L?'q*B03%-DTjOij0+>h\Fi>s$NE:=kTl_KB=&;-b
%'KMin<F@n*!D%]Y[/.=:WS:2XJ.&u-W=4RuGV--=Ub+I+3HnKVDS2r1Z/BU_8Xh\V0K.JE0k:MP&;42N8U#p>JT+2?dZobCJPuuY
%)r\U5Dnq@NmS2YR6BdG7*9<1H>bpGBEn.Rm-f@)Ik(tPs;q+<(p%SOEcFYPl;$-/7cTM+),gY!&UK8tiP',b57-WRT2H03gZE"5R
%quoU`;'5!G3$[#*%,_KAlINs7_:iI&R5i&+V!K[*Ob<?_[&BdL1U7:%^Z`RXW.?ImHpYG4\$mt:F:gdGLW[c#FmNmM<hg0#?E0[%
%9Sb:K(hB5#Igbb/)Oc"?LFW,fiICi0SpRFJ'Lbee3eXZ,<4$;La4Lm;BR<O4[!V6(:q4#\Ro6XMT*,<s=e2gH)@8pc9D.XM41R#s
%#>fi3>1Ihj"Hh@a]T;313Dj9[(.qM_*@+hk:Xm44);aDd3!:$-f-2_5k8on$$Kjfi&D3*03\u]I"]H\kK^=dl6rdtI3f'G>nEMpf
%V0OFDX+mO]Fg?S*lAN5,qLB.oP(B$@crGI.?tmdqcT#.aM_V/%<_eI"Lugd[k.C=JauSuJ2-k%O*?0UK^(%\$b?e28\a586Q0?N"
%C2ihY`gbRr2_SuK?I!`SRdJ]+I^]+qT7/VaiXOTsb*<c69G7>JLcn%d8RiGq]LXla,JeDefO^o+Tf/%"jmFt)K2$#fIJH&/^]WYr
%^]<1VU]uL8TgIS,;KU:W8pBL1,"QeIVN+(O>hC$6&i=g"9"45KmO'reS/*OB@n;/P1_\[`a/\L!XsReaQ>](OLR06(\K[)T7CdC$
%G(s_eQ-CNm_qW[K]h`QiOTiO4O!_/,KYJo6<Irud-3!OiL?b1+il'i2b^e@%'*Nb,Ba\4fRo4P=0_$l3WDsA0>X6&&U]i_eHr3(8
%<r$:`Z:4k[l8pc6]gi[O4tb_FQl=q&.Q\`e;C*<XD#k??8't%Rhm'#t26Q7"4pNn)&Ni0lFMNXj_BFL5P5:?m:NM.0.+U6EPL[Ji
%9TKRt5e=c#f!+i/*7le_2\1of#KPBn8NEr&WZ5*D3UXb)=bUP[X\oTm*#H,r9fecdL`WnA79q<1d/F?,P5_*ocJ-i$>A[mV'c)H^
%@90+oQSu8=53L=k>X_D$>+HjR=H=4M6INrt0rD9g7Q!.V!"?h!ahZ+sh1X1U"eC5=Sj?3srMpUr.'E8c(TfH4(N*QDUY_`I-ft1N
%KnR\:+"TI>F?G0"'`)*rpbn#Jd"Ncd<UT4QDH+p4Y1o//SgfHcO`?S9>u>==\@G!PoAO)OKF59jE\`*RXO>l-@[8:Q3^ko+fl!YY
%W\o+n$B)#QYiWgQ<+K0H2CB+<WpF;gZA?'ZGK]BXFVVa?C=2cYV-0gA?qG3da3D_2_cNSY\^2bma+*Mpl]h!L6DAkT]JN8E'lTKe
%@Z6pB$UGcR]#[kQMY;#s;[pL_-olY`]6$')LNg!<*hMCmo=cOOqk@\JG\EP?&B.46*b?NO\K7QANg(*=E^bVL<Jo<O>"Q2c^;UI$
%#JqP&4oENJ>QG%Q%$?UjUX?GCW+9`!og4A-A1Jn>\:QiVcc)!,ffPFB<XgY7j;WH$,86PoTTD^&?;qP*)D(^!!j5CmoqB0sI-ng'
%MN7KjQC=Zb%gC5:2:lBA<eV\'"Z<;I8<0#4,>G:=$O`r6<_c[lEt=Ud\D.K\;&NZ^>;4VZSnN+,f@prt_I!YuR>IE`a<-+-LP%!e
%#FSO$7E6\U8RiM)(qJFD^TJC6@Y(lBH;Enpai@B]'NI@3&;qpW!a0X9=eA[uEkr>2n-(,APg4dc7+953LCIo_&/jPZL\lqJ5mf;I
%>X[8W?U9Zt@XcD4nWA@\i-"D5a`h5[oFbu,XuWkuAO&*<Ed5(qm#$2uWRMr\3Hnn7+s<*G#_B;ukf<MIKoZeb+En!G;59+.k,Z2h
%HoS%a5+15bQJlAfY#b5n]>1.$&i7WeV5hjeCCUf6L#5-sUc42jqP>m_qei_8g&6]]`C,bBZZM!WTEWGc3p28s`]7V61HrJ6f2JP1
%q(1.2j(/7U9SlZeX5eIMAN>-?7`'ID/\(sD^a(X>;E@Ve!E/P@\)L&L_"puBp_jJ!_Jln1[rg*a]*A0[l-=<m_`b"N.i8+doT^&[
%TJ6GAmm'g390&0R0i1HF#M6r$D3<HOl'sJl`f^'C.P:%cS-DJ9R6Wk^Bsp+/H4rl]=m<kret^Mb)@Ec%4)RifTEO=GKR+8u2Td-k
%@4)<Fp9*`)?XRGVN+I/2aK@_<#c%-`g1E#iolSF7jf,cpTru0kOjmJ2MU'c@`%A(Vn;0ke.Dg:4Tibm#LqrB@SFC[M_8Duo)l^I8
%BS0A1r4b,e;Gu[k_1*n)N-j^N*g$M>Zd?-!I?h;<rCG7"8t8-LXPPLsF**d<37nrlh/6<p-.VFV`GN;.i((CL?,1G2aaT><J0a@6
%6_Z%JKu.*Q+hL?G'LZ/$U]5@8[=^s"jBAq^4;kkbD.r<Q5ScbNnmC<eCj%tBd\a5uPYH_KQrX^o]ouQ>ZCdb\'o+$H9YYWPj'S<Z
%-u_jX*f.EQJZI^<Wq29:F!0l(6D$di7UXb/qpps(m$qb`k<>%a"Q)jpY%"r;89sP'06Inp>\VS<,n#E4hMb2J"]As"Cf.>=SZLL!
%5+2c4.FV[L"$;sW94TJWTW0[A;ca:qFXD;M.%O<A>fXO1LRaS5"\%rJ+XBnC`<DJiPpl)1X&UM&-:+l2`jjbir>Wsc+AkR6/D5]3
%`Fro9F("JD$#uNGH$*D.Jk#M07)XYDeU<X+U[@dq#^6P'.h*/R"D]`2nQ3lB6t'WtbGLC33hm(Tnd$010E0G]rJHigebqVg/+_M3
%OO94;rhOm^!\$1TC:!/O5o*L+E+GNMQPpCeYa't?QX_6VKYKaOVL<Jb'Z^(!-Y.?M`K)Ol&X4O/B9QG<_Q^MI]e?NQn_?oUGlE(9
%ou>$VgL\%X72+,We6%6jWtd[$7kM2/CXR7`"Ct1!YpK!14"%8ZmZOYMYRNG(ZF89.W4uT#.8&ujX;mD)*hoa;OCb_=,g/;9.>6Bg
%#d`m79Lce?Z?7bBS704,W#il'-"*DIifotR0u6mMh=hFDNC;5cC:kB2Kg0+o4&g#7%/P8<8;4-?CGMk;JYg1l<bbu<>4rV*Gfd.E
%/pC@.M+CMRdV]*nO$9=8P.-s6g8`Fc=,Dlb2gPq<1I5K*[/A:T1!P:@q8A(g71qei6]WV(:V5WQ?)/tK(*P+S9FSE_:X^fMl:S;B
%Q])H]/Vcm7Dd&DVG[!a:G7&(4NXI:>;6/%iO!*]"3[rFnJPiN=_bQ5_^:Rp&lQ\=aO,j=E84hL1i+XM_+(Hohb2&D7ac4K\b]%I)
%$=";k9f0*jCR'TUO6G.@^nMIad'NDdC^$r&--C8Yf>nSi8sJF6hm)-W*T'j?q0)$uJlO0TiQoY_&Z%S_3X#W/4d<N/h02.+'C^7.
%MT]H1djP9&]M/u5&pd_<d873]q@BE@AVn5AmGPD:9:+`Q\<R\AQQ,!gNi[P3Hit<1aZA!sh#rk\Z,c(6X)Gl==&W%;0%(#gdP#aG
%e-MHH"+*U;!@+qa-9Vai^#W\L\,WZ?5m=5K0Ljpn+1d(mpsJ:t7BTC8?_^rdj*72o=h?b:lZ[-2fHThp_eU(UTXR`h$72A@ZD_Pa
%$NtIU$Cf^fP]$S78\FL)()LX%EZ%ekMM8*2BmpZb&l_JkRa[O]%THfjTYofH3.[ObZK=3o?uWNrhNAdC\nJ6do.%jb.:`.I(i@jL
%:7'iI`:XP;]UX:7,]3'&kR5Aaa=BbO<`to`DhbLY;C2%4::LAG>i'Z3C8?PZ&j*T]kjI_P6>A;S^aM&WZ$TST?VQPoY-^%R9dn,s
%gOn!jKO279_[!,?-;%?0SD$8)APA3Qg2doGjqK7)Mh.'m4I7`PXJX2W6nIO<gk_R"W,-9"W$%A=,Ct<p?r%Di<Q7G.5o&UFL2_^%
%nF9@6S^\.409h8KZrqOYam/K\T)7VG[#h-i!Z:J<J^06,+#U$>b4cK^9Cc#45q+[eh;fbreLM,Jj4W\CU-d)kc^&\N:mS%h"$Od=
%C,f@iRcSlmeH?$:dOu55^a=OhHNoRH:.me5>J7@#L.Ka[<CK!?PYc%7.RuN4:>4rhE*6jZ*^HWZ!f$s8IqF[&is[hE7e>0-H0:#d
%.blGD9SajF@&4rA8eLnC\`nPB?(!iRniM#T*hD_@,tMhbraYue&E3s;<[%cY8M1t8,Q_P=7WWX2BP:Y,1aV`&#,MSa,\rLl'ZoZ)
%ZFK##"Ik%b`q$OM%uZ%.#'!HNZrc6VJP8=4h37ZB*J2moWr.0[=tPlpSZ)A3f&e3)P<fTcAsqM,:0i=41X#L]NIYq,i/.@lBb$4A
%gT@*K.Zb+I\EAN2;MM:@bXPbh,kq(RSpPZ(.T(U@U,N&-=R2Vn+#1(Djj?o.3CL^fJa/PIoer,!gXH*73BVbB$]eID0i0k[6tQlL
%W'Y7Ih<H4N.&A':jUj5SlZPCZa^c]/7NDr&4cA:6eVuL9Ec^^mC;EbcZKSs8jTC?[%eL62H$XlD.6O%G[+n#a/@8'6@5('HaFqj3
%N/LFl4BmT`MO^DW-)%rNj.O[,DA@&<)AOkVXFO\@.0bmU>n.Uq[N34Gp,@Vc$,tA=<IVX)nXKTQ"bTI2K]"?!;o1ZVpsFJ%]-Q<)
%`c6sR99]!#S)D?`R3U>KPM$Xa($Qe)!@S/:<Hrg4St0AnWq'#TTFbU)TVQ:lZiJh5'9.%UL/hA_ihUI9-+(S4?+o_B[$Yl#o3GHD
%4`6Z'h57,ZpV9:W^=orWF&nPj!8IdKNZg<Agg"uBS08pX0c`<%f7T58'n9RT)ln_GSErCp]1;7@kt"]peA-Kf0Ym3M!cI_4"=#/m
%%cBeM)Z85FMXjVPU0qhGk0S\+V$6/iL(5B@&ZdmRVjj\<<--d5mI#B@K<k_JXYA\,d71s)N8,H!Y_d"_k*0R#-7.=-1k3\1FQ4B6
%$@B9dk\-/89=A.55<>hb*"3%nIbG?d-G0.`9b%n]%"6JYCdqrp&<QVpFKu.H.Z.e.o(#V(#4o+q*bgu47$Y_Z_tC%g!6i0Z2'$S2
%cLm&(5$WaL[/cs<H/5/&:/\0=Y&_Ok':4/;*la0%2MR_M>!<1K=(*Q(N@:<l$uiW7#S&^=eQL<;glk1UMBujB-c6e(ikRqCGZ.s$
%MX1i]SN5,JP>Hu!<A\aS($\lSU1S%]Y=7)1jUBH?$\GuVAJ\Npd.e=WXI%0<(I$B[&l=Ghfn[6+F@^l2T-J3dqIPb(Q2@76UmY[/
%71I-I:#135K`(6s>$X4s;$AZ5*nclX6hRtO_J*n50McLcWKb4\BPLtgJe.!85=9,^=[.l6WWUam-[BhF_%\-5rC'CYbYC/<E@`M<
%>1ZB<81g"nW8P/&<Yr0!#=pS;+R+[31I(e[hCho+bK$BsK-2RC/_%9FJN)+)\Y?DM/6[<d2/^.9&+JP:!_@sN]`KWpj.QJ%fip@E
%OLK[I#7!"BnX<PcV!tGjg_8>D*6j#c!\N)2+VH"GTS3Y(W=Z9<;FBV,(a\V_Lu:npjFa65++Rc6Ee15s^"!E[RBR:G>4reo.Q%+Z
%#CPur.Op&**r&%?:l.(HH4>P.gq9k1L\@d@WMRh)'%=N&9)46U';kCA^_>B]*pVUBMFQGRN`1&XFs(ud/eul-7m!Chf.Qac@2DGN
%lq4O%"XpCsX%OWn`DVcj?>1F]L])9nXu@t(8CMoGiL6W1<=2b0\0qTBYZF^r1][8s$/<E<hLSn8qJn0/eT/G]n<U<8;E>q=PRJZj
%D[KC&jD-;i/5,`CX/ThDSW1idDfD/7"5YJY.$*Za:/[MHYi7qdN1"Y(jeLibV^9_=L/2V]4'P)jZ,t'OF!Z?7eEY.^Ahe?Q:-YNo
%(?,We16sZ=`s@Tg/k&oW4708p8!2hAP"FZle)eGF/M$#m8GS#KI^Ma2*!*F]e1=/)Y)7":8k5UbZtT$;eTBuJ>'>-c%UP"Ih2)--
%*mQ85]BWV_GE=op6BOD\+_QT8r'BbVUHVTt-h[)R@B/eOS.tq+a^j+LhC;GgH77g<f#Xs.GD_glG<*d^p-8ku[h0+r;;LsR"s1XN
%:jDd3QM9+ObGp",Xt?iu#,jj^$4Whq@'"[/IQ21WNNg2nLBBE9)H$=s`Ad5VAW%u!DkSaP/qB*TVNXK/c,CO'.@a$oAUefd,G@lj
%KTKe,Sh2Hd6XaRJ5>407%sLFDn;RT[NIqf4/tV]7=.TOq94+gsp]O/<+8ZS<YYe@.991HmCUi>`36;8HpTmXWlV>Oa$H39=Dl^HZ
%P;oHa1*TpQmLU*P6YXL00aO$D#ULK6C%1oA*\WiP[$!r$Se,O;glW<:NpLIqCV+=Mr-Tt+Hk*nb#+VUX2Q;g=8m:I/A&BLcVla/Z
%Ff3;]b)5ZMj:Go1/t&)5&iao9AHDbLm7agCb5Oq)niVaC#>3ZoR52VEjgg</?Y:3M&*DFK[jpd>*CT^RaAUb_`L^>O+t5t]WFs9I
%aQg9;X&B73<fuI=<PZ,c2uN0?c_=dJ</,WB6'`?]p)5+B6%Jn*Ztt/U&(Vskjl$U/bZ)e'.tb2Z]kVm&ZoC\Cod=Z26TJA9l`Zn=
%mHTE)kck2p'h%W?<PNT^]Ui14J$M3JLDuGu_@tWE2@mlYDOBP]C?f5-4aX'+Vh(i&3#dbC^7G4(=<0";Z8,Z%b5q]&\at"<)T_tN
%da2uOMt=Qr.c[C16F27%f.NZ`@97%\Mue:?BFV,rl?#<f(7ojAjnXR%k17MNj<dJX'Kip4VV<>Jn$16MJk::DNS@<o9[2ch#cF6J
%''Tl#,tK*m^qu3=JNA#r/R3<5Q:UkR`Ndn.`[U4Ene?5,A!`!@A[!0BOd$"0?DT_uV;2.^_n4N#Q-Yp.^AI>PKUKi;%F7^0IYbbf
%@@`G1h3%,TpE&uEi8*]Odl<caEF$eoQ=?p@Y`.3A64QY6-@'QCGaOd"LpN>/7;/F]T&eUtILI!_>!6#[0k/0g)LFjb8EPq7Yc.F]
%nIA?M.^3[hJ+IZ0&h7-TJF2CDa&jUdBSq.8%.0)%V8h:\T4iMA^q&_[bf+*b6r"Pl"G$ag>;*c1hh!I,Lek"KKH4_\9Tuu_N'jT;
%VHlo\\flEA/W\#1!ER"lU:PM1:3.h#J%>!h4ZG06PH8UdlE^R26;7qu22Nj-K?(8:S-d[553[slUdGrUIUH<$%T!4+pVbaaf="Mh
%b6ZI'dX"kb8J^;bAN\g&mg2=FKP[]GQl)F,f-<N('Ftj=Jl*bu8?(!7ag3+E<MN=;*Sk;?.g=d?&#brF_fBP.HGUPH6tD3.C(h6Z
%mr0o3X;jE)/R62GW&A7GFG,f$"u2EGm"uTt:U<Km7gIA3bi3rOB1m9RE[U2MJrR"NX8P=],?JA0ntoKXT2]pVs.SYDeY//53tBjd
%PUefq0A)/G/\Bll1Brrf0ia*X+Xt"08H'H<S9Hg=?=aFpA<O836nVVZg!dK-`-GD7=E^!;g!pD-%S+G"dtKl<4&:U+Lp&qRH^'^V
%N!6I[J"`O*9k*2OBk@.\-AM\dl:XPagP#p_jrJq2IfN\?lFY$AXL"#/I?.pIpZ&<kTJ7p&'of>BIl88PU]<]LBa6(e\'$W8jVf8<
%#/2LJjp7[40S(B-'HNJ0Sj+[XnFrX8A7(J4jkR\_!K>A%`t),DSW]"&4sE=>@;?4^M-=2lAg1[_6glrVE:)cE(g0o]dm3Y`_,S`B
%VDO6,R&ng*^58AkiiBeRZm\6?4nDZ,mW9V\`aOLa]HnAF2,Z+EO9EP#f"IW0So"_29[^X3rNOT[N06^HJ`P1YKZeDM4;r(s'aQV'
%B;tAg?C+'*#dDi92=Rce3)G?"dCGQDCj2P'l)&LK%58Bk%3CYjV!S_4i\>7Gq9ePa=du;TOZ<#WM+s+)P?3O]c5L'/PZAte&.dhF
%6^eL9a_#&`,?9<TClo\;/=u7#/@d]I,5PU>(`kCfgmdd0n!]$.oXj?@Cr9h8P`G1EJh0a=L88-8`t-oZ^+&bI#C<3d<Il8cJYVsQ
%:m6\!Mi\rTQ/2a02f^!T>j7$$OIphPX"5tEdu_0C=J<+^UWJWs<P%LiP@^61QHOBgr:CA+l'tVr5l*!q;V`Fq2QH9qd:u`8:_9pJ
%+ktc3^dmt^9.ol[e_qRRQ'?t9e4nG0Tso9<Zc!DoaZ'u_?JQ>;-;2up==&oEe&6O.$YCfF9a:hm;gBW>jrRhU#B^HAGnW,Rd18s9
%"eRYe3^kNlDoa@>O!Y**,mm;PGTdRH'cs0r,rB09b]*&Hb0>*W(A<mfK;(rsooT)\7_;PW^kk-7$&"$'45B8Z_l?a8U^U5*Pl6Bf
%_t5?Ui3p>f5Fb<6'4k*I;g]i%J5j!g>k>4]VMl-f*<M!.Bh(YU,f0nb<aCnWUl)cfrHHC(n\W]?O#iZ^<aGOkfbunV>p5Ta;+i#]
%\;=CBW%TTk$)9pka6UlF-I/U6dSKtoPKJJ>M)f\IMl+)#8Pu4P5'D>5hl60(&k'X8#,t,$.Y[O\!8q'Ya'qSMCECg%,ffLQEU(e#
%m%5D#qkc#0J`]Vj4d&=]HH%p_A834`&$'(\TJ"6\d?LEm7U9K$bhWkp'9)<77uAl>k9lI\*&'p`?Xm(?ooihoeOYAA;D-/%F/Uk2
%UR7(n&O.fsfIA!d[Q7l`KE$r@;;Uc!D<jK=M7'g,"fYGYGArHs$rO#&'O,j=$"$JbB3XZkm-*:?%]YD,N64^d6U.*Q`iY_aMTp/4
%0T)$h*'M9?q*L&amgo_c_M%Q)"AkhuSCnrebZ;#0I-0B-652;cG(npP^#UB)A[l`M"P(qJCK'$\X_Wb"J<`reC6\[TICbKK3X-LM
%2Wpb^C&K24O)6&ZHB.BdN(N"d!E2kj/Gd:ni=4bh$F]1Ajl@ldU@urL&tXGI]L/HYVr<k\r2)Q3lL[!4`FWJK,<kCsPmApUTr,Wf
%CL!\lJ7>CnI/CVb>s]8"[`d'uEDURT""S?bI!N*0mpBb;=L4*po--3n,L0d`J5H0!_oLrWPrFlkn?N!)2h6C(&5L^0jP"$mK0f:t
%\b)T/MX14>+*8+%]u1CY;m/5QM[Cb$H*0sW"=0lKUejlbpoTR+lo5iKY)::*<b4*F>st,NG;V[BefM%#3M+YC8A2,bh]sU9.I/t:
%.2"G18fMg@X^4sRYh#m!6S`Jq!j:X5'd.[Br`Mjnh=3fCq*+KgerWjSG!Z(p_SL.F4>lM8*neADfnGT!rG_WT-Ti]W!Q'8?R['jO
%QYDmX5'6]7LCHi69!kUhh1f4W%k9VcF4)*7K<LQ[Z#?T]DcCOT,\8[@%3e*!X03T-.ee'JgK3g`)5K/m4aL<Pkq&f-,WLRr2g1'/
%$pDWK5n9?dD\UgX0Ucq\0]_BPkL<7B`'G]?X;lE:d"t3pL@Upn-m/kp_\A%D;f0S#@1?7r,Y0N=d!.$sS_@?SpdYW?!Fl4MaP/2E
%K:(->/VaW^N9'_o+!*m=,D`'Q$?Auhm'bi=<nqZuPtb00p,GSCZY:ar+4$fdH?nNA@BKUE!u&-VUdY6D@#Qe%7LNnLXe_;fP%oh`
%hST+XGM?7%2@Fh5Km#>$)(Gl0@@_Pr)N[G1Z'>BcQjU%+j5sJ@:AG0TSntLjpTA`/:;a>\FEb<&mV;bj>Ojs)UdrMCjSGo?1tmiH
%N<6-B=)OEp`j_o$'l!T7r4eDuUb@p",0E"^lN==h<2DHPRH^dK&%rbaQ0m[X<X?C]c)?b;,cYs,;@.^JX<!<Krc6GHb%U\E%ToI9
%=U%"273B%HS<:-YQZ2Xl"Y,OU3u"FMQ^'VKDV*psk`O:ia[t!bHG_j1-Mem5a?UHJ]V<="Y:FfD:l^Xs:0ZSFGY!YYj78\rRT31"
%eScTK<$DX\7/Wm=&P-]'ESOs@]itIDkN7_jQ7AUlT^C?epETn"1tmS?LR!Qt*?37Q=1UcH%at*BPeGBLKhuKlUWGc"^-NLnY]n$S
%12rK^6Ng<##?YYXkD?gP8J%n"I/"WkS7-,rhB#B;"Pm)(BJE%$Pog^)>T\s.mYctaL"E+d[I,q@oGSGqCu*.2LkQ2+.CV0</>!LB
%UenX76_6L+2XX]>?_O_olPlL<I)$S/qF$/j9hk=^F3AJsmjeX+B_2X(F@/$V,,QMhPe=f,8:*1]c+%iES"M1K^E:dJ;$Q2Kck/q)
%i!q\\#CBPuDk)YOO-BlDQS\iSVFdN?;5FG\325U^=Q.ppJDc(Ga13BZj^&!&+8g`cA>U<fc0JMu0Y-!6#D@'W_^1roC"`/oacche
%)a_ET+f@sS!ScE##^6UjUGGSb1KCp>(%)FKl+g7iFR^V"eSFMk\;mBG94fc]3?U2U1ru^`TE<R*LRkW7aa+_dj)@*I.GlI4GM:)*
%/`Cm$g-%(*?9KN3^<LrYB2e\`drOO]d>K2DGlU?!I^NfJpOlHcpZO/SQBm5[98t1u.*Gg&$<oLVBRk-:-_kE#jIk4XO"R%F:?86T
%it6HnJi<J,gh-*C+9b%VQTt8/\@s+dD^("@XKQe0/,)S>KOa8%D&jNb+a<_[pgHafE>Wmf?qX$kH6Z1XJ+Fb^YFL*265WF7]/BZW
%6+o9uB-30*PZO3@4Q-^8GMEnJ]cAB6/;m)i6Y2HU&^c8uq(0,[D.)V^;eH3*j.D+l'KA&(OYl4=a3f([AQ5C*djnec=7(Ot>A?5T
%4HrphB34O7+XiJ^XQC#re@ISA:l]a)0]7(7^b?XN@sP0:LbZsbYh(K#k"(L^O[ge4[>[Xi)C3Q['bZa%W))j?_P;IR;"#;a/EZKt
%;5+g8OhSL3NcIRrg:^glBBP[(3r"^bf*)fK5p_?iDZkVaYITiqNN#?]OuJK8jJt40(:j*N90E?M_F&s?GDZ_WKtgEtlQ_WMea%Bl
%WeudV%*6$bOK1s^?'3pWVY&,4?gpt,EI5>9ABqHtA%Q28Er)>Sp\$A8(Tc!*f<<5>rDJ.*;)2?fNTFio;V!SF931e')br<WFEP,<
%4RneBJS6XQ>r!B#SYTH.5<Krh'gT-)Ps\K9Ga(KD0g)VC'WXl&Nonr#i3s:mR,Mt+99?c2YOM-]mA&Z#opX6e9jp\OE_\K?Gf`":
%/D0X$SumK35DUeBNN:mKqE&F[8e.3_US[gF;aBcV5eud0KG!J1E^@S[1D*!bT*@WcML?*s/1gN&rC+dGcQ<_'9haaQ0j_L=/-S-/
%QV(Y^FAj<8H%-29('nUN*q:6_VsA*Y1/h4$p]5<g7Wj;$/mg"]%)gkR=91Z96;C)RQr"KRK_Y<1O-W[TeF2]pIJgr/A9Vg'[g^sY
%<(r;:$&$;1dr1O@p4lZ]",$J`-Xf3DV!90NAPBY88U\]!<lp54ocg%p`eV$]'Ma\qFq_)aoo0#3g)ck1M-0"q^_TMrX"%H9I\`5Y
%FXiY=6#YUPEF'@n6hJr61d.P^Lmi<4%A8W@#f=3]0VHq-_Pn<UrY2-40i3A&<%YKk`k[%15HE6Pa:^>]YJRNANH%je#4_?Q?+IPa
%NcR9ORs@+>-=9jYc`/>Q??L@h=`cn[o`@#2L'D71dm6jWL3hI"<#,(PDM.[eSYhV^HGGga9-ra\9;\9s[*VY2_Q>_oG39b@haKaC
%`XY/Z!?Sdcfb"EWaOO!kdSbLdFZS)c'5Um';5qqKRBP&T"H_qh?)A>iUW7u"JI9P__i@a:2l2Y57'b;^NaYA-A+g<\I)@k'VT>'d
%0CZWA0b=8M2fU&],eJ/!h38ipgl\IuJEp3X@`cnj^9'M%4S+/&:&Ck].NS>b48b(T/Cg:YgB`N>Tl5,#4T]2>du<Tkn3FdK^J)G2
%f"71p0d[Ah(NB>'`A!%>Hn-YC?;Ju9FK`f<VPP#6_rhQ0gLGhsG5!&H_EA"7NC)_@#%)It/.)^WHc1+N<iS2^4A;A"&7(Gh/Cj.+
%5&lX*N9(r'?Dmo0+=UCfq]7Wt6Xb8rn(jZ$Asb!^]q4&<7GT-M5-=Hj!Es'dq7$6VSi[caY9eeD8eV:T-*k[H<^8t?A6q:kZh,[.
%#C=MhBTi]I,RkZCV/TmTgk$oGI<GdLGVo$h+7g">U8tm&$ADl5=-K>r:5KA$QY>W'8"qL]D"I1L*s26=Y!Nqld#:;bL8U#K;PQhi
%h_Eh]d>'CVmhfo_-0I\G(Kq,Qc5qsFpJ1B&jVZ)qDp[W7@K*WZF#(/ts,Sm1Vk>QoFr!SoH6,f',gaXa6Xf>5=d.=[dHZDegUh>)
%MD8l(;itB>lnW`0RZnq;"V_71+$kIAY?phG?OipC;n@8&e5ncSck+#D`.jL"mVgq>0;)VmIcp7Uh?a;:#"B^[WL$&*[;fG.T`sD&
%+*W!>8IBQW8nY9Y8IYD`KA<UR4<!8uotME@\'[%]>o^/+Nm/B<eMb^GG;Ui*!<Sn#6:%tkYmm(&J/O?<N]I$L9k\p>:_>lpT*.iL
%h5br]X.^q`aqq'l-hi'7Apul0gBWYQgB"!ma6UNqMA7!p-_R9q-dQ7CAA)u(18,)f4jG4"M.ZT#/EK75*,:a<mS3'DIrC[oN.u3D
%M0*^$MU>D;Y&5Q5fWGO(e;eIZ['+Y78%%>choKR66\mcleOrk!)"%C^4s$fk&a<0l.Sc%jqSPm15:iN(p`!;PGWa:;R9\)3H;SRT
%C//38qb'B>^s;d.i-\[-!n@qqm"NA@WLb\3kIp#;(UMnpBN\'_ZG76tp6D'M,ULFSf*cRLfE4d-bdrRfFoC5[%fGk\")#N])X?!t
%:*tCs3]p%p>1N*QekG$[N9CHq!:=10='WUYC0:1AKpHcGS%#Ao4-uthl:ddF<lg2@3)_G9dcDQ(`ArDSq'*BhhlYSlB2SZR^2Prg
%X-#T;bK5--(5=2<?t)<%/mA)tJ?*Mh"I*FHkaKo4\#BhWmPg^IV1%t3Dt9S:j>,"N=Rhlc]GHA5Pu7[q<);*)PfM(9m,WRB?bIB2
%alq(5GdSA*L2%l:*sjK@WE.G\UO!JG7`M!&1KD:cG^3.%\jILqS*S2GhDo-dRO>'Sn\H-6]T`GfI/RT7f98Ke@GInMjSfi4Qtmsn
%5A:VLC6fcWBQDYMS4PDAmD=fIqWh^+;K_aTX&X(T"Gi[f33iofVKTr_6]EPl,@T%);)04FT_F5*25O3U7_:[\]Wg$-aV?e]l(8^N
%%B)g,gZ1RAI_=o>=#M5RH_\1\&56ba6XUo.(J[+c"jQl$L/[[m$*,-8,PkUo%aGCsEg>.+ai@hY_lYl'.=U0UiNOSB"/f@gG$A>T
%T<-)D`&UsE(/?W+bXW%2VRY@)<P\#oOm?.r\[8*t853Au!$C_"q\T1.U-jWW6rs@4okFlc-j9gq(%tJBp&;OnXQDV$6K-=tT5;fp
%#$u0;#qMMsa;MmpcVdYupq:g>_@5gm(lgeOftA]=43'=61fOh4'HD!ZUgq'_1s36VIc#](b4RtQ^p]l970%E<-(FU`$V+<4Wup=!
%Kq%^=V)EpZ]:!F)KNgt8=4CeE)T,ON4'!P@2Xnmb!/K"-As:m)a^Uc]S(EK[@^_Ju)=,CW:'Pbsi3Q!<SFtFTi)$?8SM9>]oie-%
%"3d+$MZ8Bd;tjU/j[QLZF$1M\Ju;nG_J$I0Q@M]k&qnZDdbc.M`>P:21b##g/`Acti:Zm<-\JoIkfI@1VL6'8[jOYtQ18q$s!R!i
%q5Nk4-TYg&'P]"YmohbY$.'>7HS(8'o_KiT%(SQBf*Cp4n@mh2?\s?7of-H5'63sJo[`1`5.O$VDVD/GpuKFY\_"#"!2T7pm+-#n
%-0%cRK'UV>qEd3QG-2YBp(JCU@H%3^%Mu4Q\NJjoLh:qq)UPWYa`&4G3W`f@S(sJ#7[bS+[sZ!"&Hp1uK.%1fP=m?F-ed0O[!O&[
%-<.9?3faM[aC=X`Pn$.AL,;ukO8r"#]<in<,b5dQPAR>9d?rRukuF0_7[O8+@AENJc\%0Y#-XM2E1EIuW[E$jq,3JNL`$T[W"QJe
%V2C=UK!C3l!9-0e"G#I.3/q,gi88UI$0)"(4a6\LE]&7bTDfOPMo$lAa_=3n70I:M+9rFcVjS1$_)(9]\'^(di.P!b4^/R2e*_b$
%W:n@="Mb0,*YP#Bmf<nT-nJE0RqL^f.])rTl/aXbUSeC"b@UpkLn$0/))83Y>N_mU5](A5NnEr*>8,@fKPMpn.ZS?Yr.Q>4B#:+C
%T!LSnaLAX!=%HkJCEd0Br%*sD7[c:^)f:Z@KmFAYm[n:uS\7<L:loB\b\Y),OK(#14Mr`!0_FY:s4)@shJi%V(Q@NlgaBEi)p_?r
%6?WpE>VtN9;8#"4Gm>*?mHD/?nd^m1dhK1:Zs:mTOTh$2b4iR[0j_;T4V%_M'k'KqB$]TY.^JEW^TC,=,c,PcK\%Q;?_+?bg2rCj
%`bLQj$>OVp;rCHJWNM]t%PBt=6>dhE'RFg<`,]70dTNSrTtK5k(FP<[b1&#jB]=`Xq9W!P<?ND54$/Y''h7"8j=Z=tLTO/*B^U_L
%'<i?U\o`N-<^?Z3;M^AAAui:2m:#L"1c<IQb[`,jb-a?n:0q1#@nfH&Cr4)e;%6oW8gd!!%b@,0VF;Zh<kNd;K)F[_WmjSr?-6b,
%q)uTjiNcWm,a&.MCJH!b*B\:=GUW>3*)+Lh=08K?[7L^[["4U?rJ:8ooaOX-VVjJ.%e=lM\[G,aBN(kF`eTeC,rtq>`JUJ$6*3Q+
%ph'-%1SgV=l-A?1is-Ee!Xd?lL1?ne:_*\0gd"1[%Ec+_]3ehk.bn5qOW85X;":OZQ6E?5,>6AF8ZA0tWHQl)2sY.\X##jD)l;u]
%cQ$LdZYVNp,qQDT/4pIkoW(@:^r5j1TF$(umkq[k&(4.1Wbb-cnW=a7h8p;ZW\0P]Ra++DjT0;YZ?r7ePP3*gk&P#kEc%2`**u"-
%<)[qgdr(*m8AXh'I//Zk!B*>D<i&u+K3W`>iO;>SQnIIk)\jldr.CS<Ge<N6nP-"Je`0_rjM>La[-,DI=l+jo?mj':6^f;4hr*U-
%<J4@dF3/3)Bq*kI@>MD]J4Wd"[_#@ep]*^P\ru1YJ\7sOKuC9?kR'^L"U$*aR]\r83NGJE`^BE$1&@dD))NseZBbO@)60o+;_DTl
%J@)]eBXaKmM-O\t<p?/m,Qol9MJTG7M'9"cAV*abMYN[F]`C.ub"'==Z0;r)JhrWR`)'?P6q-+HJo3KHTFpIKHM%VD&_L&0!If\o
%$2Mj,2HSY4,)29/k.*Ws9jXj%ej.:g"tXOhaV?R,:j0KuMQc/agb^>YFZ=LIf%!0[Xk:K7'LL$O-;i6+^Z^bcl8'i]YGOu]<_<SE
%Pjhl%\+K2`j`$>-QX,!V/`RU3o<Ulf<E!&3m=VPf2d=@D%iff1@7gAc`K(T!i@<)YQ1%HGPD6:LnL]ga3bDDBNBWeS+R9&?Y!SYU
%eF)`aCVne@8X3WRJ:),bUCouqr\O#<#c14;N_?MaLm6?8FY3h'73f2Y(^;iDM.\hKlj^EZ\We9QR_q=1CqQHn$>)aE9H\Y)hde)L
%F]fjY-Hs(sT\j`"0uJpQ!QBWUBUBt/'0Ls4I7\19O#_IpKt^/BLKI&3nDkRVq3BJL[4,;^:8GM`d(pkknN]i",\m)+6jcJ=<9Qh.
%7E"qKs'8\NZDKDNm6>\48OeKZs4I3Ve8ahlTdE./0t+i9H8-XSl+P-7OdYA'n30sj"a,/b/)%$AajWnh8A.VnOC)A`ck+`'=]Br9
%WpuM"*u^MdWAplXMQ,!FTg^3&>,+.ei?I`kJ-TGnRth73eOp)l7jG!S9XI^^JMR[Vj)+FK0NiCHj[c'$Al.1]"VFVp%n^ArH:Y[K
%nZF:jaufM))9[k:c@WW@at0K?)JQ8R%)5ZM<sZj.&>.GB.pW//!\rFUm\EjX3J)Z[YSd-8'OAYX-2%r73jk(!Pg6f.6LN&Gbd1Xg
%8i&a^&AT<Q7$>q.K?&D4W`RUk]3VXnF%cWUemTA5,'t4g@KQ@TjG'Hp6l%2gK<UK:$:CrVLn[Xb(BQ)K)GY$eTrQ!T-6$^&Eo.eO
%&aF^W;HpU%!\Q\gd$'CZp0O'#'I:6Sn%3&uZj<_T?'m/eq8r+[gXgt]-]LMcQW80Y,JKb_)g<Oc:d+C1kTH2pDJ7-<ZDgjF?b@i,
%D]8IU-LXL[eG3ANr"eM<9ju<l-7A^/]JWV)$/EY6'_Q:Q4A3(W-16BEHb$f2+G;"1K1L#@alS&5kP)[j;/cgfo`Gb:b(683)quf3
%2a)u&!(=4l(]Eb-bc5rTVtjaK$)g=S_lf)IPEVsPhbN_Hl>ga!fn"pYYmBjUDc.OQ'_j/GhLnD)N\uVSP$/*RfQ"N&[@`$m9I6nD
%P'uOtCp.1@qog'@<>EICUp2\"EO+o.1ahVS!68C$%deP^.Y*em>f30`rU?1UEbd!08X[gDI>%j0Ai,pN_qfJfPH.VL`ZEdU:TKi_
%`&OSg4c$l#3df,&\0$3Q3aIhDhp6rp2&kr0Q%=/l1K>NU"S0::*<b$:4G;,+DIo)#+Tg/8qh4E6e)+8)DfW#,Jh&5#(`&$Q*C2Vc
%YiuX].FYp>WObH5;P-pW1ReC)]1\a;onh0O6fNE60>ZaV)<ugl(?K31_+h=;[Y^TWOAL!DS*?`%dAr1)81f]FD0Kp/bBsF79YeOa
%'rtc@UcTp$@Sc7u4ce5,.,4D;YccAX55#dRUch)pMY#q9I+6VrijkDRgJNSZ;.:_>OTFc<G2\Dp(7fhkS4_4f;M_q@_>\r<3gUUR
%N[kJ*"o8bCR:V<#GfS5RA2"GE$_sgAb0ARH8S06fptn0JF)F1A\sV%'Ni^H`N4<l"k9L/9aQO7;>7k%";_Wc4%CNcdg+e"&Ek'Hg
%MOrusF_di-72gb6+'Q=;al3//r`E,oCfbHj,[h3<X1*mT'\4cYiB6?n.W4X;2=s'>_-4bD\,.[r.8rbR<SpGJ_@ots`PPS]p*u4'
%_niuHI?4ST5FY-@lMAASdTVnZ"&:I);ujJ`_VC1.mE[RPe"Vo6=am-e.IK0%L=&GYeI05pc]5tCEM<%0.OWV_6qNZ2GOmKY\GV_0
%k@J2TgWQ+5]fNMB3qO@b59+Qm$dq2D%9k/q-L2]%@4"%'NT/l;&i8RiZp*C4r5N\0K-p:;h\9j6W_^85?BP0nE2:gnk*_#"C@$0.
%R-\L^+k.2Y'.aVLYH1+bhG8h'RI9DdL">/+Bn)9A<U2KZ;fgnHcSWf4TGP27Ho$P!\j:'F@T)poDW3)^aUae<KIcc)[hl)I@=tol
%C,uSGMg.%hL3Mq2h4f[(J<YqXJC((O5R7_NqO47)e+n+>a(FKEnQP85%JP8NdO=0%R2]oW8u$@!?fYXU"BZODL&0AFU./`4A1`<J
%e=i=b@p8WQ<R0EP[.Y?fW2c"+4!4OVVm-m\:#9[8l-fU(Je1XP]E2oi>nuGIhG]d0c1%K?p>f.HE#/]b!l$=F7W<ZAa+]SWjZ[LR
%%U&L+37H4Y6iAK0<KV*tOphRjmP;OfL[W"O?r*c.gR=";ZDucMeLO7S\o!#7_-F\GQ5$I)l<DmOUQu&P3)$q,V:76.Sp\TAhcg86
%1Q7"k2M%JP(&9LUCS<S/L_?nGr`Lp7&K/SZP?6f7e8k"nYtR^sMr:C$(fpR$Lrt\OAIikjKZVbS%<tW/gW7IF'[]a2>S/hN'=2Oc
%59_qU$'V*^n^-X`M"J,)dN?;HG+YXG>&OkLh;.-6Ui[3f,-;28%8M-k#Kf<J>T6C/[ID'hUdAPh_>Z)"D,_%]J;Q'S8N2nXOujKH
%ch-70.W'+,&X\!d*_je^1F(pZ;-do1,,-o2mGV_9MejrVil^O]YHj&F&1M#e&$]r2M!29Z/=7T?]S,70.-O")3:;Xc"F>kMgP'f!
%,GCQD:^ahe%4'u.f1j1H@j*eV=%$b:TudFjVu$gA5@W)aeU>9K.'X[P?0$gA,Ag_TfXG-2N@;+88l1MJ2H_Fi>CC4pEH9lrWnU2X
%G),cWc*<beN$U\/$mA`cF>*GMQT4aegeIXa!<?E5FQ$>`aP)O]Y&F;gV`iq"W;WP]N."/m#+$`u7UR7>hU)isaqrt..)iu9N>+Vo
%8jc\/fG`Y1I/>k;Y<`l8T35u)Ph4S!3/KMs@<0W)1"QI6U597)N.ftS<)eI3!`9UnWcA.-_-nFieuPqMDY>sNHL*94&@e8:Sp@F>
%gKKc_957W'B?kBP)T54\c<6N<1E<:"7@7QtRsmT&:FDd!nF/0f!]3Q(NYl+rUb:HG8$AkS_MXH%4tMLt+_2=/TXp[i./jSA6HfKG
%'-J.6iBEBi;%C-']/IS&/CEpPL!EjGRU1gG,?"Q#>]O'YYUu"_TWkn92uf>+7G:<I(pgj\aMJ:B`]uCi'(f'\,p(\IJ4!M%2D8PN
%A(+dtCn[iTHa-ji1g?"B,1CNe6)ujHe?\T.ee__qp(7#`fOQ-KXr\r=0-io%;;@pdSpg2@MRe]p8-3-8e>Xuo%i#hA!(@TU>GN9s
%1Q08Io#t'ciFRRS(=2m[fSEr"ne-]$[`;X%JFD!1gsOjc,t`@Me!A&.WdcQ`D&"I7bT:1YH(uRtbt0qp@])\\.bje4Nfq"&3")U/
%(BnM'G#bAj5[ZL;KrnJbDgH[`&ChD.Hu78L\qkM`<,j309Lj(;8>/`*KjU=>aU\\0Fn:nhPpiX$+PG3Gef9N-'bf<`R)SIrf%1qZ
%Gh#YdjuNslmms$lNLKuMPVIebpgg]ohiu:oJ#3>s`5$1]?u!RBc*Y7na_\C>+#5=jX3p>:2Yi/ib;,TMqce'DKP9,lrDDL4UfO8/
%dhPoh%P;YaC2IBZXGON,5`+b3a'ED#JU9<<:l+R$fDr@V;4,]JKtnZ#i6sRu"X/!7;)H_>?<G.hjZ&KlPCtfhnd[-E76MD:<+^ag
%b8`&]$4OHl++J:?EjZe19g$BboLn=/cl:_F,K)JB6eUgG%eg9*DS*=t"][u>.A@$TB0d@EK1XR1Y07M%BiBgS,^msS(Y$Sc9s$EM
%XTqm"Tr==<NmlL<2cnb#@]t+na8?=(91@Dj&N:JkhQ!YS%lU-bLJXB]&(tTZi"/"HbmnSh2qb(&\r'uADPQL*RqJlV3?3b\Q*6kY
%]?G#eL0B#q1!bZ$O(a%)a:dbalYaO075UGXk_"MM#O)G+pDP)g>Y>4<Sj%i5dpID\F@m;Z$l6A5es7C_9=FTC+.NdS!E\-#_%p!!
%L.)MPS@96I9nB4M'Y:#8lE%+^n:11p43@4(PA`IU7=;fs)t`qqk.<U.NH%_>$l^'<QY"j&B%uS?JnR)\/k8AGGA>&l-71-@0!:(Q
%mQ>6t^oU'=;9<>f.;-dI9ls2b;^OsID@+o]4e4NU0;OiMng2pS!Dg,X.$KQ=Yp;#b7kI?Oa)Rd<m'DXl6r+S=kWE,fTX%KA@SbT]
%>t1]QQV0iaG6-ZoZE`hgL%e"9pW93pSbsd+$s3C+q^Uo9BD!`].6\!,B.E%+Uf?3mKQs?Z=W!Y1>E`X.6Ao0p<[75p%I7&h<9H./
%jQ]>k=+MDs<'e.UaVeJ?/!VF;*5\%11D$Bl;'qql+%5F(s5bG9JUl)j69YQY7H;>\j?'<:rtKH)BnBq$W-r'>`h(eS4%7cuhFU_q
%0+ldGT6^#W,uJ,m2(tHFC@!GG&\:qQOI:2M(<:D*<h:b6md@+GSb6k?;!)W0</Vqf_q!a4;DH"?l652?$h.fI)([6a.,F@uW+er"
%K0)I[2u="dpuamT0T&&sWh*^5>X\7@T%luhiG6i^(3LT$M/nN.0pBEtJ;6cdKOS1ZA3ho.1WC/o"'0E-IrpKg>CD-D2fK3E"4grd
%qj]k?<Q*.`g,]#'8W0P#O=miMJFd]aP\ZF.g&oIg&D_.&%Wan+"%b*]%E(8$<seP#ea^/MPSUQ(2/ig_&()A*M2Er`ltM)OJ)kL)
%J7K-=l:3P^>#npVTA/HP#L1%6[Bfc$-]3%F+D^Sc!]-`V[tum"e-,5?L6W5;[AgW[_a.qecaK,tn%;r%18':aYGhM@&Q)GD*Lm;L
%b^T2lX,9YQ;<uLQ9+16'mj1dLeR0a0jq,X:_Y5'PW=1@!1A[T4I2<KXh4R][QVIn9,SH'4R,__*W,5^1;CNt<Yc,00p#dfcWRD(.
%AdEKc40^.FXlf*+75rg*-bmb`E-9f7T3boHQjcOeP1<!40ibk>[`'Eg'N12m,;#i5\RMSE6Bhac9!n@?blGQLMc6SC\i'BjEnD/6
%l9T*SqOM;(;qYT\Wta0l]'ajBB(WA=hCY,Xi=Ibs*8H1CZl"b&gPgCua[[g3bX25*/OG'6$'VlhJfAPlCnJlf9GLl=Y"Y[t'f].q
%8fP:<Ws41X-5\=Ci1^jfj/P_LJ80I4rI:N0kTg%9pqo\4RcL!=m&k1:YmTd.:-irBm7gYbVU3Q\*-I%3+f7f3WJGib,.IqkBT^<e
%A_UY?EB&uN3<Y[qSMIGE8(F9d/Po9(=rGj+Mf?KtB%1%BB1H!9_;tS]8*^)s<1MI=i+=AfJtqM%9V"M8?p!neN>SbF#\L>"9.I1/
%.XYo0gu4@ddu0uJCCSm5(JpqQ:ofLJQ7TWYl]jf3;_X89d&RRg'aCcA4WjpM$_uhf9f7SKVhH;(r99,!Eg7b\n]Lo3!/;ceRU*^>
%r1J<6/m1WGeGLO*\t2FrlCBUTi@1S6'(fp"amDOhHQae[4Od>X[(X-,4[2*e@s^7gk,r6h[kSodfk"ZL[V5P&kKNa/&Bn)BW#RRM
%",S,J4eaK\auc(G)k--lYs1]jfB"m^s*XqS%g(1Kq&(($Ufu\DOAj?:,SN:>q9C]YP-%0INAP,)8hl3tc9_!"Nfa4A*ad_qBIMk5
%m"=$<CaQulg1/A+>r[3uY+?=WGEF;hKGQjYj"Hho'#gN$X*/'3\oq.E;%4m)lRBBTI;UL-ZTJXT*GWYsodmu/E_9;c]C&7X&?7#2
%O_a,+306t.M?$">oEpG14$Ahi;']Ae1W;ZL<Q>_0[7VXanfObP,/RJ[h.'D1d"Fg^jN[K+"iC)`9>J/V]Cgq#Mcd8\+d3_C8mrcm
%p*'Z)7'$E(jFF2?G[[H4,X=>s9t@1!Mh==0gK[JPEKMdW`qq2)0VB"`#ENN#f.[*4+J,0*%FjRTpdl2BqtWu8?FT;5BuPR5^(P..
%RSq/88oAM`1rIg'%&+Q>'+1?dUld5!Yh629(su'aTD`OTU1cf?-oaB$2/B6h>G[724"B3bj6RUPAl_!JVM<?OT\X2Q`Cjo1j8..d
%0N0F<U%Cs6@FN+4:_Iu8\jYT".4h4#De*iVk+Q_Kq'FuRSV!=3F9E_-NhS^q2"6=^0!1V?+efDrX@e.gs0@7iN$d1B%Lj[KHSj#N
%3^XD!c&E'5+7U<T1aC'2OAj@D7?:u%gMm[Fa5kap:u>gTW"quCQ#dOBmro$RV^L^km7MkMOe"FR8i4*D]7^QkS&J_q7O;LB?@M)L
%>]+c,kXK."O=d[8<X[DD#]bnfP+ufMF?E+@#aH3?*;@6*C4T:H8Xo)YX>aCih-fRYkQl1uEZpiW\t5AI:+&HaAlC,9kp#(HJaHM:
%brI<Y8JAH>9bO2jB]Z3g3&bP;oI6tV.c8e+gbD)?Gnp'G&]n/p2*+uc+cT@OH:>u8i:+27Rs_K[MG'M"hro\i6`H>K+]m$D(6>a(
%ndY_TpBop?4$E0!O5GH]i=CF@J,f&*Ish+j^ULDMYFFIf?U'$cqqK`Ks8)KEfC-KOo%W>GD_I`4q;p5c5QC`VTC#E-?bX8QpA;%#
%hd1d/kHFnS_F;KK+$TVtQToouh>[M@VuH;~>
%AI9_PrivateDataEnd
