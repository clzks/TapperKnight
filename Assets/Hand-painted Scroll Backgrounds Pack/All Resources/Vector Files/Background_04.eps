%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: bg14.eps
%%Creator: Adobe Illustrator(R) 17.0
%%For: Krol
%%CreationDate: 7/31/2016
%%BoundingBox: 0 0 900 481
%%HiResBoundingBox: 0 0 900 480
%%CropBox: 0 0 900 480
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 17.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 17.0.0 x256 R agm 4.7700 ct 5.3328%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.5-c014 79.151739, 2013/04/03-12:12:15        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Web</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2016-07-31T22:46:35+04:00</xmp:CreateDate>
         <xmp:ModifyDate>2016-07-31T22:46:35+04:00</xmp:ModifyDate>
         <xmp:MetadataDate>2016-07-31T22:46:35+04:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>140</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAjAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8APvTz0O3zanenja0708bW&#xA;nenja0708bWnenja0708bWnenja0708bWnenja0708bWnenja0708bWnenja0708bWnenja0708b&#xA;Wnenja0708bWnenja0708bWnenja0708bWnenja0708bWnenja0708bWnenja0708bWnenja0708&#xA;bWnenja0i/SyriZ070seJaXCFNqtT6MHEWVBeLaCu8tP9icHGe5PCO9d9Vtv9/8A/CHBxy7l4R3r&#xA;vqdn/wAtP/CNg8SXd9qeCPe76pZ/8tP/AAjY+JLu+1eCPet+q23+/wD/AIQ4eOXcjhHetNvBXaWo&#xA;/wBU4eM9yOEd6wwpvRq+G2HiKKW+lh4kU70seJad6WPEtO9LHiWm2t3WnJSK7iopXAJJMSGvSw8S&#xA;Kd6WPEtO9LHiWneljxLTvSx4lp3pY8S070seJad6WPEtO9LHiWneljxLTvSx4lp3pY8S070seJad&#xA;6WPEtO9LHiWneljxLTvSx4lpFellXE2U70seJad6WPEtO9LHiWneljxLTvSx4lp3pY8S070seJad&#xA;6WPEtLvSj8T939uDiKaC4Qw92b/gR/zVjxFaDYgt+7t/wI/5qwcRTwhH6X5fn1O4WG1Vzy6ystI1&#xA;A7s2UZ9UMQuTkafSSyyqP7GTaR+X9xaazby3XCe0iPNiKcSQDxBU7/ap2pmsz9qieMiO0i7bTdkS&#xA;hlBlRiGU+YdDh1nTmtXokgIaGUipQgitPmNs1ek1Jwz4g7fWaUZ4cPXoWM3v5aQLZR/VJme7X+9L&#xA;kKrin7Ioaffmzx9sHiPEPS6rL2IBAcJ9XVjeseW/0TJFHePRpV5rwPL2IO3UZsdPrPFBMejqtToz&#xA;hIEuqA+rWH+/W+7+zL+Ofc43DHvb+rad/vx/u/5tx459yeGHe76tp3+/H+7/AJtx459y8MO931bT&#xA;v9+P93/NuPHPuXhh3u+rad/vx/u/5tx459y8MO9o22n9pW+7+zHjn3I4Y97vq1h/v1vu/sw8c+5e&#xA;GPe19XsP9+P939mPHPuXhi19Xsv9+t/wOPHLuRwx72vq9n/vxv8AgcPFLuXhi0be1/343/A/248U&#xA;u5eGPe0YLbs7f8CP64eKSOENejB/O3/Aj/mrHiK0GjDF2Lf8CP64eIooLTEvap+Yph4kUmXqT/77&#xA;X/gcxqHe3WXepP8A77X/AIHGh3rZd6k/++1/4HGh3rZVRFfm3NwLcmBTxMvA8QfCuR4oXV7s+CfD&#xA;xV6e9kWk+Trq+05buSdIHlHKKP0+W3Ysajrmuz9oRhPhAuvN2mm7Klkx8RNXy2Y5cpd29xJBLEok&#xA;iYo9FqKqabZsYGMgCDzdVkjKMjE8wp+pP/vtf+ByVDvY2XepP/vtf+Bxod62XepP/vtf+Bxod62X&#xA;epP/AL7X/gcaHetl3qT/AO+1/wCBxod62VeDUtQgp6KqhHcRrX76VyuWGEuf3tkM848vuRf+J/Mf&#xA;/LS/3ZV+Sw9zf+fz/wA4u/xR5j/5aX+7H8lh7l/P5/5xd/ijzH/y0v8Adj+Sw9y/n8/84u/xR5j/&#xA;AOWl/ux/JYe5fz+f+cVknmHXpP7yYvTpyUH9YyQ0mIcgxlrcx5lDSX97IPjjjNdq+ktfvplgxRHI&#xA;n5tUssjzr5BR9Sf/AH2v/A5Oh3tdl3qT/wC+1/4HGh3rZd6k/wDvtf8AgcaHetl3qT/77X/gcaHe&#xA;tlpp5V+0ij/Y5ru0O09PpI8WWVXyHMn4N2HBPIaiGhcuTQKtf9XNf2f7S6PVT4AZQkeQltf2kfa3&#xA;ZtFlgLoEeS71J/8Afa/8DnQ0O9w7LvUn/wB9r/wONDvWy71J/wDfa/8AA40O9bLvUn/32v8AwOND&#xA;vWy71J/99r/wONDvWy71J/8Afa/8DjQ71su9Sf8A32v/AAONDvWy71J/99r/AMDjQ71spj6d14p9&#xA;xzHuLdRRmlxQC5SS+lAijYMY1QsXoa0PQAHKc0jw1EbuRp4w4gZnYeXNOS/lt9QlneNmhkQUiCFQ&#xA;HruRxp1GYdZhAAHdzzLTHIZEGiOVdUzh13RIYhDFGyRD9gRmm+Y0tNlJsnf3ubDXYIigDXuVF8ya&#xA;YFAUSBRsAIzSmROkn5fNmO0cXn8kKb3y207zNal5Zd3LRFqnxoagZb4eaqvYebR4+mMjIxsnySi8&#xA;sNIllZ7eaaBWNRGYC4Hy3XMvHlyAUQD8XAy4cMjcTKP+agn0z/fdzy/1oXX+Jy4Zu8fa45046S/2&#xA;JUW0+8HSSNv9i/8AFcmMse4/Y1nDLv8Av/Up/U9Q/lH3HJeJBh4U+531PUP5V+44+JBPhT7nfU9Q&#xA;/lX7jj4kF8Kfc76nqH8q/ccfEgvhT7nfU9Q/lX7jj4kF8Kfc76nqH8q/ccfEgvhT7nfU9Q/lX7jj&#xA;4kF8Kfc76nqH8q/ccfEgvhT7nfVNQ/lH3HHxII8Ofc76pqH8o+44+JBfDn3NfVb/APlH/AnHjgvh&#xA;y7nfVb/+Uf8AAnHjgvhy7kPeSzWkfOYqvgCCP15q+1+18WjxcXOZ+kd5/UOrbg08pyrkGPXGsKzl&#xA;gC5P7R2H0Z5Lqs+TUZDkyG5F3cTGAqI2U01UV+OOg8Qa5j+GyGVPtNu5LrjHGwZjslQST7fPPR/Z&#xA;nt3xo+BmP7yPI/zh+sfaHV6zS0eKHIp1HoerG+is5lWF5T9oioC0qTtsdhnVHU4+EyG9NEdHk8QQ&#xA;IolMtb8rtZWf1m2n5hCBKsgHc0qKe+Y+m1vHLhkHM1nZ3hw4om65sf8ATuvFPuOZ9xdVRd6d14p9&#xA;xxuK0XendeKfccbitF3p3Xin3HG4rRd6d14p9xxuK0VTUblLKwuLt91gjaQjx4ioH05jznwglsKu&#xA;lHRXHRgCPpwgrTYAqQDuNyPnhtW6HxwJb+PxP34rZdVx+0fvx2Wy3yk/mP3nGgmy0JJCPhkJG42J&#xA;6jY4KC8R72+cv87fecaC8R72/Um/nP340E8R73epN/OfvxoLxHvd6k385+/GgvEe93qzfznHhC8c&#xA;u9v1Zv5zjwheOXe71Jz+0caC8Um63P8AM334PSm5OAuj0Lffj6V9bfG78W+/G4pqbhHdnu33/wBu&#xA;NxXhn5t+jeeLf8F/bg4orwzU5hNBE80rFY0BZmJ6AfTlebUY8cDORqMRaRjmSwy6uZtWu2kdiLZD&#xA;RFrnk3anaMtTmOQ/Adw/HPzdrhxUKVVghVeIRafIZq7Lk8ISm9iWO4ZV2XYgeFcuibDjzFFfp2oT&#xA;2N1HPExVkYMKeINQcshOUJCUTUhyWMqL2HTfOVreWccywuzEAScCpAagJG5989H7OkNThGQEb8x3&#xA;Hq3z14iaIKvL5hs5IyklrI6NsysFIP0VzPGkkDYIa5doQIoxJHwQ9zqukz2/1d7J1jH2eIQFaeG+&#xA;2WQwZImxJpyarDKPCYGvglUkWk/sC5X5hG/VTMoSydeH7XAlHD04/sUGis/2ZJPkUX/mvLBKXcPn&#xA;+xqMYdCfl+1SZE/ZJPzFP4nJAlrIHRbww2imKfmJrNsmiR2kEoeS+KSAL3gHxcvkWUZr9XlHBQ6o&#xA;yHZkXl25ivtEsrmE8laJVY0p8SDiw/4IZkYpgxBbIiwlGg6sb7zdrMKnlHEkccY67QMyt/w7nKcW&#xA;W8kmMdyWUek38p+7MriZ8JWniJFjJo7glF7kLStPlXHiC8K70m/lP3Y8S8JUb6VbSznupAfTgjaR&#xA;vkgJwSmALUiko8k3El35btp5PilZpjI3ixlY/wAcp007gGEBYTi6ljtbaa5mqIoEaSQgVoqDkfwG&#xA;XSmALZENxvFLCs8bBoXUOkg+yVIqDXwphEgd1pZLcWsQBkkUAio3rUeIpmLqdfhwD95MR/Hczhil&#xA;LkFAarp9aep9PFv6ZrB7TaEmuP8A2Mv1N35TJ3Ihbi1aNpFlXgoqzVAAA8a9M2un1uLMLxyEh5Fp&#xA;njMeYpRtNU0q7cx2t5DO46pHIrH7gcujkieRaxSL4ZO007hja07hja07hja07hja07hja0xXzXqn&#xA;KT6hEfhShnI7nqF+jOF9qO0+KXgR5R3l7+g+H3+5zdNjocSFs0C20YHcVPzO+cRLm7OA2XzTRwpy&#xA;c/IdzgAtSaSWWRpZGdurHLwKccm1mFCM8na2Ytaa2kb/AEe8PFK9A4+wfp6Z1ns5rPBy+Gfpn/uu&#xA;n6vk06nHcb7noXDO+t11O4Y2tLJHij4eowXmwRK92PQfhgMlpfww2tO4Y2tKEN1bTJzRxx9V4N9v&#xA;3kbFWX71OREwVeGXF1PcMjTOWMcaRJXoEQcVAzQk24xNqttqupW0fpwXMkcY6IrED7Yfp/rIDhEi&#xA;EiRCrpF3qceoKLKVkubllRnHU/vFk3/2SA5Vlz+FAzPQNmGMpTAHMvSrj6/aKLyC4dr1VIklc8i1&#xA;RSpB7V7Zw2HtPKNR41+q/s7vc9XPTjg4WG2PnK/s7/SWuSzppQlicV3ZZSQ3XwWlPlnoOHUiQjLp&#xA;+t5aUpQlR/hepaFrX6U0eDUFcLyj5TqCCEYfbB8ACD1zZQnGUbb4ykRbB/NH5gWmpeX7mzt2YTzz&#xA;GMLQ/wBwjBg5J/nApTMXLnjKNBonmsUgfKfn+PRNHksZLd5XRmkgKsFVi1Kq221Otd8hh1AjGiGM&#xA;MpiKdq35m6lqGn3NkbVIkuUMZYOxIVuv4Yz1NiqWWckUjtA1bUrby4NKuKv6nIRxAnksLivBvCu/&#xA;0HOV7R9oJCJxYfjL9A/X8nY6XAeH1fJWZtSfcBI/AE1NPxzkpT4jciSXY1Lpshp7i/hYB369CAtD&#xA;+GIESwMpBab71Y2iuY1licUdSOoyzGZQlxQJiUGQkKkLDG9Z0o6fJHd2bt9Wdv3bAkNG43pX9Wdl&#xA;2T2n444ZbZI/b5un1Wm8M2PpLK/LX5jRxadKmss0k8AHoOgBeUHbieg5Dx/j16bFq6HqaY5Nt0/0&#xA;Pz1oWrXC2qF7a5c0jjmAAc9grAkV9svhqoy25NkZg7Mm+ryfynLuMNvhnuakiaONpGUhUBZjTsN8&#xA;EsgAsr4Z7nLC7KGUVVhUEdCDiMgIsFfDPchNYuhpmmXF9KvwwrVQe7HZR9LEZRq9VHDilM9B/Yyj&#xA;iJNPL4L43RZ5WrOxLSV6kncnPKM/EZGR3vd2PDSMjvLiNOCt8I6bA5jmIKRMhSeR3bk7Fj4nCAgm&#xA;1jMqirEAeJwgWhL7y+5gxxfZ/abxzIx463LIBAxTMslVPGSNgVI7dwcyATEghkQ9X0TzTYajExZh&#xA;G0K2yzsenrXBKhR/shTPSdHro5sYl5D5upnGpEdyYJq+nkz/AL0L9XuVspCf9/PxAUfS9PoPhmV4&#xA;se9iwTz35wY6hbWli4eOzkhu1mU1DSAFgKjqvF1zC1GfcAdGnJM2rx/mo3KZniPD6xGIVFeX1csx&#xA;cnenIKAOvU5L82O7qnxykuseftTu5opYZDGWtmgnUE0BklDuF/2KKuUzzk8u5hLKT1Sh/MWqFDEk&#xA;zLF681wo78514Mf+BJp8zlRyFjxlcnlfWG6xqp8C6/wrmqPa2AdfsbhpJ9ysPJ2snoEP0t/zTlf8&#xA;s4f6X4+LP8lkTXy/5em0zVEub8oFVT6fHkfi8dwM1favacc2Lghe53t2PZ2kMMnFLont5qDzFlT4&#xA;YyKe5znoxp3Ep2wzVdHu57+VrWPmNmcAgdfmRnV9l9oQji4Zmq5Oh7R0sjPiiOaC/RusW5LLBMhI&#xA;KsUDbqwoQSvYjNvHW4TymPm604pjoUG8UsZpIjIfBgR+vL4zEuRtrII5rckqYaJAst6HYVWIc6Ho&#xA;W6L+O+artjUHHgNc5bfrcnSY+Ke/Rm2mqnol+sjE8j3zhJ83fY+SIlniiWrtTwHc5EC2RkAlN1cm&#xA;eStKKNlGXRjTRKVqDMqgsxAA6k5IBilmpah6lpLbx7xNQsx8VNRTNp2ZExzxP43a9RH92bSHO2dG&#xA;4Eggg0I6HFXpmi/mzbWmjW8GoQTXWoRVSSRSoDKPssWJryp12zJjnobubDVgR35s1tvMOlar5dk1&#xA;KCURwSRyKRKQjK4BBVt6VyeSd4yfIuVHJGUbUfJOqJe6HGjsPWtD6D1IrRQCh/4EgfRmH2RnOTAO&#xA;+O34+CYSFJH+a93Iun2Nsh/dTSO8hHSsYAUH/gz92YHtFkkIRj0J+7+1ux08uM5SPmPtMfg/gc5T&#xA;hs030ikvboKKSHp3of15WccWNLjfXR/3Z+AH8MHhxWlF3dzV2LH3NckAAlYzcSvgxp+GSAVRL8bn&#xA;2NAfpydelLc9xPCeMUhRWKuwHdo68T9HI50PY0z4ZHcXU6/aQpNPL+l3eszyfWJn+qtJ6025+OXe&#xA;rfP4uvvg7W7TOAcMfrP2M9BozmNy+n72TXvlbSorf93ApUfaqByp48hvnMQ7Tz8V8Z/Hlyd1LQYq&#xA;rhDBtV082dyyLvGT8JP30zruztd48N/qDoNbpPCO30lCRxSyGkaM58FBJ/DM+UxHmacIAnkjI9E1&#xA;aT7Nq4/1hx/4lTMWWvwR5yH3/c2jBM9HsAVV+yAPlnEvT03iljWoXX1i+nAPwwt6Q/2IFfxJyEwz&#xA;ilNvexy6jIiHkjQo6NUU2JJ261o61ycsZEN+9tMaiqWlxF+m1DbxuPSYjrUjan+yplkB6WjJEEbp&#xA;zLayQxq0nws52TvTxOC3BlAgbqBAIoRUeGEFgh5dM06X+8to2PjxAP3jL4arLHlI/NgcUTzAS24s&#xA;bO1Seaxho8RAmFWII6mlSemOo1GTNECZulxY4xJpCJrUcYJPNCPtcT/tZhHAS5NFttViO/FmPvT+&#xA;pxGEo4VGTU5T9hQvudzkhhHVeFAXN1I6EliztVU+fTL4QAZgKV1JxTj3b9WbbsnTmU+M8o/e4Guy&#xA;1Hh6lB50rqXYq7FVeGaZmghZ2MKSVWMn4QWIqQPE0yrOT4cvcUx5hnnke/ltfNttADWC/RoZk7VQ&#xA;M6NTxB2+ROarsPOYzMf5zs4Ddmfm7zd5U0qJ7O/Rb24Yb2KKrn251+Ffp39s6TNKJHDIcQ7mWTND&#xA;H73ieoXUNxezTW8Atrd3Yw24PIRoTsoO1aZpsnZuGRsCvc4v57ICgJ9U1OCI8LQXLr9kxsFDD3DG&#xA;qn5csxj2LjPKRDmYtZGR3PD8/wAH7Fknmi2SMh0FvcAfDDcsYQT4cyGX7q5D+Q+6X2ftbY5Jk7R4&#xA;o98d/s5qOj+cLXUXaFoxBdKSPR9QOGA7q4ADfRiewq/j+z9rZrOPCOIC49/L5hWfWTd3otbRQ8cJ&#xA;rdT1JVTTZFp1b9WTh2LEc5FoOolCHFIUT9I/T7vvRbO7vWnxHwy+HZmGPOz7y4EtdkPLZWSw1GY1&#xA;W3lev7XFqffl/jYcYq4xHwaDGcjdEs18uSHT7GNDHV+JEik0IatT45xnaWTxc0je3R6bQx4MYCLn&#xA;v5Z5GUtTYVQdga0++mYYhTlGRKWx20F1rcMEqqyuKHkoYAhSQaHMzDklCNxJDj5sYnGiyqHR7OJQ&#xA;tCQP2R8I+4ZCUydy1RwRCJWztV6RL9Ir+vBbMQHc5rq2XrKv3g40njHeptqNoK0YtTrQHGmPixYR&#xA;qE00Op3LxkqJJGcVGxDEkbfTlvCCN26EgRbGbp7q11JYYHklN/DdExDgqrI7xFnGw4g136/eTXOg&#xA;IyhZocJj+lzYy4o2dqI/Sjx9YtrJ29ctcqpcS/ZPI7nhToB28MxyQZctnA1OUAbbWyW015L6zhuZ&#xA;TSRloUANAV2IFfcZWcRBcEyJ3K5tSi/ZVj86DHwihSl1VlRmEYFBXc1/pkvCQTQSvTL+US3EfKrN&#xA;R2rvXlWuT4AQ14jstl022kYsQVrWoU0G+IiG8TKXXqppdJ56yaYq0mkAJeE12dqfaTsaCo+/L8eC&#xA;OTYfX9/7WyPq2H1JdYXuo39480FlL+ijvaMVCPKpUAMzOwCpWp2BYjt45GTR4oRoy9fXy/b9jbKM&#xA;YiifUm+m6XIOEl9GgZa/u43ZhudhyIXp+PXbpmLljDlG2mcx0ZDFeQpGIVgAjGwUbj7iMx/DI5Fq&#xA;O6rdWFpwEt3YcA23N4x+sb5LHqMg2jM/NE9OOZigX0Ty/L9lfTJ7hmH/ABLbMuPaWoj1v4BxzpYH&#xA;opHyjp7Csc8n3q36gMuHbWUc4x+1gdFHvKn/AISii/e/WSfT+KnEfs7+OSn2yZAx4efmx/Jgb2oX&#xA;F3PZ3Vrd27mOeB+cbihoRQ9DmLpchhLiHMNkEcfJNxdE3DXMsrTfvDKyVLFt+RJbeuZh7cP837WP&#xA;8nk72vX8vnNKySHx2UfrOQPbkv5oZDs0qyfl7H+00v8AwSD+ByB7by9BH7f1sh2aPNWH5f2ZFHjL&#xA;g9Qz/wBBlR7YzHuHwZx7PA/tY558/Kyyk8vXF3p0CQahYoZ4mRmq6oKslPEjp75k6HtfJ4oEzcTt&#xA;0djpInGaP0nza/K+bQtT8soHt4La8sG+r3UQiBYkDaTf+cda/tVyPapzY8u0pcMtxuw1emiJ2erL&#xA;Hl06AUiIHyAH4LX9eak8cubjUByXh1KB6jid65ClSyS4FteSK/8AdSnmrdaV64Jw4hs5+GVxSmDz&#xA;BHFfXr3RKhEQKvFgCqOV5rVejc+ldsulpiYx4fx5OZLH6RSd+VUe81YXZUhY1MhDChBYcVUg99/w&#xA;yExwinHnszTKWtoyRjqwHzIxRYYN9au2rRiadaD+mZnBFwaZfp2lmDTR9YPKSf7YPy3H0Zg5J2bD&#xA;s8WERjv1YL5livLG/S3RwV+KTlIKgoKU/XvmbCQlG3X5TLFKgxq41aKTXdOkSIAww3HrLUAfFw6e&#xA;P2My4YwMUvfH9Ll480jgmfOP6WtUvFmu5HhcmJ1UHqOg6UOVxjTrpGza621NraOHgzM0fIGMkhKG&#xA;tNu+5rjW6ASyPQWutWj/AHUVZAxVgPsigBrU9OuV5JCPNtxxMtg1rHOzhdZ0KspCsvfc4x9Q2YZY&#xA;kCkjtr9E1FZRX02HBvke/wB+WiFRaobMk4ttsfi+z7/LK7b6SnzP5Y8xa9p1vbaZbGe1NwjX5Don&#xA;7lDUgcytdzXbwzL0eqxYpkzNHh297maSO5l5bJw1nNDItuYSjiipFxp7AAZh8YO9uKYm6PNN7ny7&#xA;eLaLLHblWqWKswZitBQUG3jlAzC9y5EtOasBS8tW8cuphpBVYRzp71AH68OolUWOmjcvcynVzDPY&#xA;zLwoBG9foFRmHGXqFOfloxLAc2bqFkkpTdeo3PbbFhKVK5F9LbusRch0IU9tx4nI+kHdkeSQ3Vve&#xA;JdW1rcnjNc8xbK7D4vTXk9DXsN8yIyjRI6MY4ZEEgbDmyexuxbWcUUj1lRQp4b9Om/yzDnAmRIZR&#xA;tVOsyj7HP2qxH6sRhZcRXQajrFy5S35uw60LGnzNaYyhGPNnHjlytTkutbMxgZpfVH+6wCTT5b4Q&#xA;IVakTut7Try1A/KSa9D+orcQrgggUrWh8a5j55CwBycvS4+ZPNKvNmmW0esx6nbxiNrmEw3RG3Mx&#xA;lTET7gM4rmRpsxMDA8gbHx5/oTq/pHvSrLXXpBeahFJczCclo4W4xQ9V22Jp0rXCYno1StDWl+Re&#xA;KkakW8jBfS8CdqjwxMLHm24chgUVOthLrtur3CMEgdgvIU5iRONRyoT4VycRIYz7/wBBdlHUgYyR&#xA;3/oKfxX8dlEFHBQ29TUsx+g75QcYLr8mTiNlVttWe6kMNuyvLQn0wKPQCp+E74DjiNyxiL5Ljf3P&#xA;8wH0DD4YVvTPMXlezZ2kumlLgAfunAoCDuN+4yGXFklyDsMWER57pufzB8tkKDcPRRQfu38a+GUf&#xA;k8nc5NpH5lv/AC95gSExXrQPASC5hdqhqbdsuxQnj5hxs+ITrdiUvl3RV1NbmTWtli4JH9Wk6k1L&#xA;V5ZmxzT8PhEevekYv3Phg85Xav8Ao3Qf+rx/07Sf1yu5/wA37XH/ACfm79G6D/1eP+naT+uNz/m/&#xA;av5PzZd5c8yeVdF01bSO6Z5CS00wiccyT8j0G2YuXBlmbpy8OMQFKup+Y/K+qIqC4KyoahjE5+Hu&#xA;OmDHhyY+mzHNjEwl2mjy5aarcX0l68kdxAkBtxGypVWZixFDvuKUIpTvluSU5RAA5FYQiIcJ700j&#xA;8z+UbakRkYiOjLWN9n48Sw27jKThyy3THHEBvTPOvl+z9RBdkRM3JFWKQcfboa9MM9NkO9b+9OOP&#xA;D7kaPOXledw/1jk8ZqrGKSoJFNvhyo6bIOjMkdUQ/nbQnUK1yaD/AIrk/wCacicEz0TxhSTzX5aT&#xA;7E3Hr0icddz+zicGQoBiF3+MPL//AC0n/kXJ/wA04Py8+5eIKKeZfKqFysgDSEs7ek5JJ8arkjiy&#xA;FiBEMb1O+8tzXbtHfekg2EYgcgd+1My4QyVy+1wsmj4jYK+LXNFjgSEamaKKVED164fCld8P2so6&#xA;ShzS+8i0bUNT0+9TVWX6g0jMpgkJYSJxpWu2WxnKESOHn5uRjgIQlE/xV9iZ+von/Lef+RL5TxS7&#xA;vtcf8t5phBrPl2BQI5qFuAmrE7BwoIYUPTlXKZQmW6OMBFaf518rWtUgm9Mmg/un3oKCppglp8p3&#xA;boAR5IxPOegK/MXHxHYkxv8A805UME+5lxhafOPl8kn6yan/AIrf/mnB+Xn3I4gg9Q8w+XLwIkk5&#xA;KKG3EcgYE0oQaZbjxzjyYZAJCihpvM/kuVeLu1agswjcEkDjuae+TGDMFOKJYrNo+iTyvNHq1EkY&#xA;sAbd9qmtOuZHHMfw/a4Z0nmtXQ9IU1/SwPiDbOe9fHHxJd32r+U81J/LekPfm6/S4VTHwEYtpKD4&#xA;qk/ayYzS4OHh697b4I8Pgvra5bPSYXNNaIYDjvbSHYdtzg9Z/h+1q/J31XwQ6RFeR3Y1thNG6uHF&#xA;tJWqn54DGdVw/ayjpKNgskvvMHlG6JdbhopD1KxPTYELtT78phiyx6N+TBGXkwJYXLCooO+bAybb&#xA;XLbySS8UU08adBgMgAi0xjh4R0AoFGY5lZYEoa+SqB/5dj9OW4yyigcuZKkqcePy3yIKhTySqtsr&#xA;GdaGlNyfbITOyCmYFa+2+Y7BDXkPJOY6r1+WWY5VsyiUBl7JWtn9OZa9G2P05CYsIKY5jsFyLyJH&#xA;sTiSq3FWnYIhY9hXCBapUSSST1O5zJbHHY4VTC0j4wgnq2+Y8zZYFXArkENYqltwnGZh71H05kxN&#xA;hsCJtLjkPTc/EOh8cqnCt2JCL41Qt4HfK7YrcVSpx+8Ye5GZQ5Nitaz+m3Bvsn8DkJxtBCPyhgqC&#xA;MMKod+64LpCFubQyCqikg/HLITpkCgfTcGhU+4pl9hnbjE4Owr74OILaJyDFFWDgSMn8w2+jKso2&#xA;YyR2UsVskYdGU9xTCDRVKSgDUKioOZVti5Ld524Kpc9aDCL6IJpFR+Xrl+pjj/1pF/gWyYjJHihF&#xA;2vlx46sbiEs2wAfp94GRnjkWJyBprVYZWT1EkIFG4MGpv3odumY+SJjzQJgqRtm8RkeJlbBfMGta&#xA;jpGpz2hSORWAkt332VuxAO9Nxm402COWAlv5tE9RKJpU8va/JqTPbTqq3CDnGyVAZa7ih7jBqdOI&#xA;bjkzwZ+I0WXwc3iVqGvQ/MZq5UC2lXgUhzUEbd8hIoKkQR2ySUNeFyojQFidyAK7DLcY6sooRYZA&#xA;w5IQK9SCMtJZWs25b9K74qmwpQU6dsxWtdH9sYDyVuSMq1AKjtiCi0HfQP8AC4U+B/hl2OXRnEoe&#xA;G3leVVApU5OUgAklOYoiAwbocxCWslb9X8W2w8S2hholxI7NVQpJoS6+PtU5mCMq5L4oVIdKsp5W&#xA;T6/btKv20jLOw+YAGS8KQY+ME0g02whQK9w0gHhHT9bHIHT31YnIgdR1/wAracpBaWeb/fUZTr7k&#xA;bDLIaK2BzBdb3cV3EJ4kMcb7qhPIgfOgzCz4+GRCcWTijay5tRIOS7P+vIwnTcCl5BBIIoR1GXs2&#xA;sKr434SK3gcBFhBV31zTYtR/R80vo3JCtGJPhVw3Tg3TrtTKxp5mPEBYaeMXSnrmoXGnwRXMYDoJ&#xA;AssZ7qwPft0yGOIkaZEqX1q3u0S5gNUlFSO4PQg5bEEbFnE2Ek1rUZElSGByjIeTMpoQe24zY6bH&#xA;QsuBnycUtuQX23mvVobKWR3WZg6pH6i9Nqn7PGuXnGCWAyG6Qt95o1e7IQyiGJhukQ4/ju345IYw&#xA;EmZKv5Sv/QvHtXPwS7rXxzG1uLihfcuOXDIHv2Zlmmc95D5pumufMF9ITULKY1+UfwD/AIjnT6SH&#xA;DiiPL73X5TcipaDdfVdUiuDusayMw8QI2NMlqIcUCPd96cUqlb0Hyr5kt9TaSEKY5kRXZDShPRuP&#xA;sM0ms0px79HMhlE2RZgs0Fq2o3NlCjW0npyuwHKgO30g5laaN2S05JEHZCjzrrkDKk3FxUA15A09&#xA;qGmZcIxkLCBkKPu/PVxa3jW4idgtPi9UjcivShwQx3G0xy2LQcvn7UJHKi3iI7eqPU/WBkvBFJ8U&#xA;rdP8y3N9dtbXMUCBhWMxRhDUb029sqz4Bw2EeIdk2zXNzsVQV9LVhGOi7n55djHVlEOsEq7P/KKD&#xA;5nHKeiyRuUsUHql4tvbOa78ST7DL9Pj4pBqzyqBeaatql3GGiimeMz1M3BiKg9jTxzocUA4I2Se2&#xA;uZ7adJ4JDHNGeSOpoQcvIB2KgspuNb1S+tka4uXZWAJUHiu48FoMxBAAs+IlDOP3Y9qYRzYhm3la&#xA;8ilsFhDgyxgFk7hfsg/8Lmn10anbk6bkfenDMFUsegFcwgHJSlmLMWPUmpzKAbGsKuxVK/OOkHUN&#xA;FW7iFbmxqTTqY/2h9HX78v0WbgycJ5S+9xdRCxbG9O8y3M2myaVeuZRQNaysfiUqQeBJ6jjWn3Zl&#xA;6rSAHjj8WnFl6FNNCupY/XiQcmZeSL25A0/jmF6RvLk2ZJkR26qeo2y2/Eu5kuHqznsBmVps5yE0&#xA;KiHF4aQUjkWkUf8AMzSH/iI/UcywN0AbpG+oXPrFw1AD8K9qZkCApUcNaERhniH78blT0FMr8K7B&#xA;5KeTLNE/MGznV01QC1dBVZVDMrb0pxAZgc1Wo7NkPo3crHnHVgmoypLqF1LGeSSTSMjeILEg5uMQ&#xA;qIB7nGlzQ6symqmhoRX2IofwyZCEZpOrXGl3LXNuAZShRS24FSDWnfplWbCMgo8mUJmJsMv8n+b9&#xA;SvtSFhfsJfWVjFIFVWDKOVPhAFKA5q9booQhxR2pyMWUk0VTzhq9zZ6nHDKge0ZecTLswJ2YHsdx&#xA;X6cq0sRwthjxEoHWtVjXR7V4jylnH7uTw4ijHI4IkZZVyYQhuhZ9V9OO1llJeWVYwxY7migMxzY4&#xA;8dhjMiKYMvxqw+RyoFWxI0E8c6faQg/diBYpebN4JVlhSVTVXAI+nNNkjwkhvgbCV+atRvNO0Wa6&#xA;tKespVeZHLiGNOVDt9+X6PFGeQCXJGWREbDz6DzhrkcvOSYTgmrJIo3+lQDm8losZFAU40dRIMnh&#xA;8+6dHo7zJGfrwYL9VY9S37Qam6ima6XZ0zkr+HvbjqARfVID5/8AMf1j1fUj9OtfQ9NeHyr9v/hs&#xA;zf5OxVVfFo8eSNu/ONte2LCRWiuCR6idQf8AVP8AXIYtGYS8lzZeOvJi17Os9wZFrxIAFfbM+AoN&#xA;Shk1Ti1vYDaFWPD0gF377dvuzHlA2oXx6jbTH01qGI2qNjiYEKFU3d7p8ttqVqxUoTC/8p35cWHg&#xA;1fwzEzwEti5WnlzDKz5tS9ezS3TjHPT167kMarwHybvmsGHhJtyAd0wwtr6R/wCQXf8Aaj/6dM6H&#xA;/B/6H2Nuzv8AkF3/AGo/+nTH/B/6H2LsuX/lWXE8f0Lx/ap9Up9OA/lv6H+xQaShf+VCchx/wryr&#xA;tT9HVrmQeDrTX+7/AKP2ImL/AJUtU+l/huvfj9Qr+GUH8v14PsSeDrTpP+VLV/ef4br/AJX1D+OT&#xA;h4Nenh+xH7v+j9iz/kCO3/KNf5P+8HTJ/u/6P2L+7/o/YhT/ANC+13/wnXv/AMc3J+nyR+6/o/Y7&#xA;/rHz/v0/+5bj6fJf3X9H7Fy/8qBp8P8AhSnt+jsHo8l/df0fsd/yAH/v1P8AuXY+jyT+7/o/Y7/k&#xA;AP8A36n/AHLsfR5L+7/o/Y7/AJAD/wB+p/3LsfR5L+7/AKP2Iiy/5Uh9ZT6j/hn61v6fofUPU6Gv&#xA;Hjv0rkJ+FXq4a86SPDvalTUf+VMch+kv8Ocv2frP1Gv0c8hHwOnB9jL0+SGb/lQ3pJy/wt6VT6df&#xA;0dxrtyp2+eH9zf8ADfwX0+Tp/wDlQ1V9f/C1afBz/R32favbLI+H0pifD619iK/5A1/37v8A045D&#xA;9z/R+xPo8nf8ga/793/pxx/c/wBH7F9Hki4P+VY+kPQ/Qnpfs8PqnH6KbZVL8te/B/sUjh6U1df8&#xA;qu+ryfW/0H9Wp+99X6pwp/lctsMPy17cF/BTw9aSj/kAP/fqf9y7Mj0eTD93/R+xv/kAf/fq/wDc&#xA;ux9Hkv7v+j9jj/yoLv8A4V/7l2Po8l/d/wBH7Frf9C/ftf4T+n9G4fT5I/df0fsW/wDWPn/fpf8A&#xA;ctx9Pkv7r+j9jv8ArHz/AL9L/uW4+nyX91/R+xv/AKx8/wC/T/7luPp8l/df0fsbT/oX/mvD/CnO&#xA;o40/Rta9qUwHh8l/df0fsRbf8qV+rty/w39XqOdfqHDl2r2rlZ8G9+H7GQ4OlLIP+VH819D/AAzz&#xA;5Dhw+oV5dqU75E+B14PsZenyTD/kF3/aj/6dMj/g/wDQ+xls/wD/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:2c9ba07f-a560-8d41-a64d-5ea3e06ea0eb</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:2c9ba07f-a560-8d41-a64d-5ea3e06ea0eb</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:6ed09eae-da1c-5543-9eee-0568eb96f962</stRef:instanceID>
            <stRef:documentID>xmp.did:6ed09eae-da1c-5543-9eee-0568eb96f962</stRef:documentID>
            <stRef:originalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:6ed09eae-da1c-5543-9eee-0568eb96f962</stEvt:instanceID>
                  <stEvt:when>2016-07-30T12:10:40+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2c9ba07f-a560-8d41-a64d-5ea3e06ea0eb</stEvt:instanceID>
                  <stEvt:when>2016-07-31T22:46:35+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>900.000000</stDim:w>
            <stDim:h>480.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -480 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 480 li
900 480 li
900 0 li
cp
clp
0 364.161 mo
0 364.161 li
0 0 li
900 0 li
0 0 li
0 85.3892 li
900 85.3892 li
900 94.1595 li
0 94.1595 li
0 110.691 li
632.584 110.691 li
628.252 113.987 623.758 118.143 619.202 122.941 cv
0 122.941 li
0 128.659 li
614.003 128.659 li
611.357 131.689 608.707 134.901 606.064 138.261 cv
539.685 136.931 449.175 135.439 377.33 135.439 cv
247.769 135.439 57.5174 140.292 57.5174 140.292 cv
57.5174 140.292 253.531 145.146 377.33 145.146 cv
452.736 145.146 538.93 143.759 602.818 142.467 cv
597.961 148.879 593.173 155.721 588.57 162.737 cv
588.564 162.747 li
588.543 162.779 588.524 162.808 588.503 162.84 cv
588.5 162.844 li
588.489 162.861 588.478 162.878 588.466 162.895 cv
506.029 163.321 402.338 165.785 402.338 165.785 cv
402.338 165.785 505.212 168.159 584.76 168.65 cv
573.125 187.031 562.984 206.06 556.459 221.148 cv
506.597 221.148 li
505.725 218.832 505.231 217.542 505.231 217.542 cv
505.165 221.148 li
442.763 221.148 li
437.065 216.866 430.62 213.947 424.655 213.947 cv
419.611 213.947 414.914 216.032 411.299 221.148 cv
410.323 221.148 li
410.08 210.852 388.133 193.291 372.011 193.291 cv
369.992 193.291 368.066 193.566 366.284 194.165 cv
363.504 195.119 361.205 196.485 359.335 198.161 cv
358.266 198.141 357.151 198.121 355.992 198.101 cv
346.181 192.907 334.957 189.711 323.643 189.711 cv
322.928 189.711 322.218 189.724 321.502 189.75 cv
321.092 189.74 320.681 189.735 320.268 189.735 cv
310.445 189.735 299.959 192.495 290.003 197.025 cv
287.446 196.987 284.861 196.949 282.242 196.911 cv
281.964 194.9 281.797 193.706 281.797 193.706 cv
281.797 193.706 281.197 194.894 280.197 196.882 cv
272.601 196.773 264.772 196.664 256.788 196.559 cv
255.941 195.25 255.109 194.037 254.407 192.953 cv
252.301 189.802 250.916 187.723 250.916 187.723 cv
250.916 187.723 250.663 189.888 250.278 193.177 cv
250.146 194.183 250.037 195.292 249.892 196.47 cv
235.095 196.281 219.873 196.104 204.746 195.956 cv
203.214 179.855 201.828 166.001 201.829 166 cv
201.829 166 li
201.828 166 197.63 179.874 192.898 195.846 cv
171.06 195.654 149.717 195.528 130.472 195.516 cv
129.787 193.215 129.375 191.834 129.375 191.834 cv
129.375 191.834 128.971 193.216 128.298 195.515 cv
127.956 195.515 127.617 195.515 127.276 195.515 cv
109.612 195.515 91.1899 195.591 72.7073 195.72 cv
70.8194 180.481 68.9678 166.357 68.9678 166.357 cv
68.969 166.357 64.0965 180.628 59.0204 195.824 cv
51.1844 195.889 43.3712 195.962 35.6307 196.041 cv
34.2296 191.578 33.2173 188.419 33.2173 188.419 cv
33.2173 188.419 32.4048 189.916 31.126 192.293 cv
29.456 172.683 27.6578 153.182 27.6578 153.182 cv
27.6585 153.182 20.8707 175.534 14.7188 196.273 cv
14.6654 196.273 14.6116 196.274 14.5583 196.275 cv
14.4834 194.614 14.4429 193.235 14.4387 192.267 cv
14.4299 191.279 14.4732 190.717 14.4732 190.717 cv
14.4732 190.717 14.1021 191.232 13.5285 192.162 cv
12.9508 193.09 12.1588 194.429 11.234 196.048 cv
11.1834 196.137 11.1324 196.226 11.081 196.316 cv
8.53424 196.347 6.00588 196.378 3.49151 196.41 cv
3.23947 193.084 3.07497 190.914 3.07497 190.914 cv
3.07497 190.914 1.92952 193.113 .187748 196.452 cv
.125773 196.453 .0619522 196.454 0 196.454 cv
0 200.762 li
0 200.762 li
0 221.148 li
0 248.991 li
0 258.376 li
0 358.219 li
0 364.161 li
565.961 258.376 mo
521.919 258.376 li
521.126 257.365 520.208 256.405 519.136 255.534 cv
518.348 253.299 517.571 251.113 516.812 248.991 cv
549.193 248.991 li
549.194 248.993 549.194 248.994 549.195 248.996 cv
549.197 249.001 549.198 249.004 549.2 249.009 cv
549.201 249.011 549.203 249.016 549.205 249.019 cv
549.207 249.024 549.209 249.029 549.211 249.034 cv
549.212 249.037 549.213 249.04 549.215 249.043 cv
549.216 249.047 549.218 249.051 549.22 249.056 cv
549.221 249.059 549.223 249.062 549.224 249.064 cv
549.226 249.07 549.229 249.075 549.231 249.08 cv
549.232 249.083 549.233 249.085 549.234 249.088 cv
549.237 249.093 549.239 249.098 549.241 249.103 cv
549.242 249.105 549.243 249.107 549.244 249.109 cv
549.246 249.115 549.249 249.12 549.251 249.126 cv
549.253 249.129 549.253 249.13 549.255 249.133 cv
549.257 249.138 549.259 249.143 549.262 249.148 cv
549.263 249.15 549.263 249.152 549.264 249.154 cv
549.267 249.159 549.27 249.165 549.272 249.171 cv
549.274 249.173 549.274 249.174 549.275 249.177 cv
549.278 249.183 549.281 249.188 549.284 249.194 cv
549.284 249.195 549.284 249.196 549.285 249.197 cv
549.288 249.203 549.291 249.209 549.294 249.215 cv
549.295 249.217 549.296 249.219 549.297 249.221 cv
549.299 249.227 549.302 249.233 549.305 249.238 cv
549.306 249.24 li
549.309 249.246 549.312 249.253 549.315 249.259 cv
549.316 249.26 549.317 249.262 549.318 249.264 cv
549.321 249.27 549.325 249.276 549.328 249.283 cv
549.328 249.283 li
549.331 249.288 549.334 249.295 549.337 249.3 cv
549.338 249.301 549.338 249.302 549.339 249.304 cv
549.342 249.309 549.344 249.313 549.347 249.318 cv
549.347 249.319 549.347 249.319 549.348 249.32 cv
549.351 249.326 549.353 249.33 549.356 249.336 cv
549.356 249.337 549.357 249.338 549.357 249.338 cv
549.36 249.344 549.363 249.348 549.366 249.354 cv
549.366 249.355 549.366 249.355 549.367 249.355 cv
549.37 249.361 549.372 249.366 549.375 249.372 cv
549.376 249.372 549.376 249.373 549.376 249.373 cv
551.305 252.93 557.268 255.933 565.961 258.376 cv
489.198 258.376 mo
487.359 258.376 li
487.432 255.371 487.355 251.953 486.14 248.991 cv
504.657 248.991 li
504.616 251.231 li
498.288 251.613 492.2 254.717 489.198 258.376 cv
794.564 221.148 mo
790.657 221.148 li
790.623 220.741 790.604 220.515 790.604 220.514 cv
790.604 220.515 790.37 220.742 789.952 221.148 cv
783.164 221.148 li
783.148 219.126 783.137 217.869 783.137 217.869 cv
783.137 217.869 782.23 219.133 780.782 221.148 cv
769.901 221.148 li
768.792 217.296 768 214.548 767.999 214.549 cv
767.999 214.549 766.768 217.274 765.05 221.148 cv
755.69 221.148 li
755.193 219.319 754.88 218.179 754.88 218.18 cv
754.88 218.18 754.306 219.318 753.387 221.148 cv
744.955 221.148 li
743.913 215.295 743.093 210.847 743.093 210.847 cv
743.095 210.855 741.234 215.293 738.805 221.148 cv
737.294 221.148 li
731.899 205.625 723.24 186.349 713.038 167.875 cv
771.898 167.003 820.05 165.785 820.05 165.785 cv
820.05 165.785 769.371 164.581 710.704 163.711 cv
709.424 161.461 708.127 159.235 706.807 157.027 cv
858.783 157.027 li
858.783 157.027 799.34 154.329 781.809 149.837 cv
779.789 145.089 775.351 141.791 770.197 141.791 cv
766.28 141.791 762.777 143.697 760.433 146.696 cv
758.168 144.919 755.263 143.645 752.015 143.099 cv
752.203 142.061 752.303 140.987 752.303 139.886 cv
752.303 135.488 750.722 131.511 748.173 128.659 cv
900 128.659 li
900 196.454 li
897.818 196.482 895.649 196.51 893.497 196.539 cv
893.543 195.264 893.632 194.19 893.662 193.374 cv
893.721 192.294 893.754 191.681 893.754 191.681 cv
893.754 191.681 li
893.754 191.681 li
893.754 191.681 li
893.754 191.681 893.412 192.256 892.809 193.271 cv
892.334 194.099 891.63 195.22 890.865 196.574 cv
887.146 196.624 883.476 196.675 879.86 196.726 cv
879.633 195.928 879.426 195.165 879.24 194.441 cv
878.923 193.425 878.797 192.492 878.627 191.663 cv
878.468 190.83 878.33 190.106 878.216 189.51 cv
877.989 188.309 877.86 187.628 877.86 187.627 cv
877.86 187.627 877.653 188.312 877.29 189.513 cv
877.108 190.118 876.888 190.854 876.634 191.7 cv
876.392 192.549 876.054 193.516 875.864 194.566 cv
875.7 195.267 875.537 196.011 875.376 196.79 cv
869.913 196.869 864.584 196.948 859.419 197.028 cv
859.285 196.399 859.21 196.051 859.21 196.051 cv
859.21 196.051 859.073 196.402 858.826 197.037 cv
840.181 197.324 823.676 197.609 810.563 197.848 cv
810.414 197.41 810.269 196.986 810.129 196.579 cv
808.934 193.074 808.148 190.773 808.148 190.773 cv
808.148 190.773 807.489 193.665 806.519 197.923 cv
789.071 198.245 778.607 198.467 778.607 198.467 cv
788.452 198.664 797.648 198.847 806.269 199.019 cv
805.507 202.357 804.588 206.383 803.654 210.464 cv
803.195 212.434 802.646 214.397 802.136 216.3 cv
801.256 211.098 800.611 207.283 800.611 207.283 cv
800.611 207.283 797.836 213.664 794.564 221.148 cv
168.788 221.148 mo
146.533 221.148 li
144.402 214.002 142.597 208.128 142.597 208.127 cv
142.597 208.128 140.373 212.298 137.483 217.815 cv
137.158 216.85 136.833 215.884 136.508 214.917 cv
134.899 210.136 133.439 205.365 132.243 201.418 cv
150.873 201.401 170.967 201.288 191.34 201.117 cv
189.951 205.828 188.55 210.609 187.226 215.172 cv
184.328 216.673 181.551 218.432 179.091 220.3 cv
177.11 213.724 175.495 208.505 175.495 208.505 cv
175.495 208.505 172.41 214.246 168.788 221.148 cv
831.129 220.723 mo
831.062 220.506 830.995 220.289 830.926 220.072 cv
829.705 216.264 828.42 212.524 827.672 209.744 cv
826.859 206.936 826.324 205.086 826.324 205.086 cv
826.324 205.086 825.521 206.97 824.301 209.827 cv
823.931 210.662 823.549 211.585 823.158 212.559 cv
822.383 209.241 821.861 207.005 821.861 207.004 cv
821.861 207.004 819.615 212.055 816.857 218.232 cv
816.742 217.801 816.626 217.37 816.508 216.93 cv
815.845 214.562 815.219 212.062 814.447 209.639 cv
813.234 205.884 812.03 202.204 810.99 199.112 cv
828.896 199.467 844.247 199.768 857.724 200.022 cv
857.546 200.539 857.359 201.097 857.164 201.691 cv
856.027 205.106 854.746 209.723 853.249 214.265 cv
852.906 215.334 852.538 216.394 852.154 217.433 cv
851.375 217.721 850.603 218.026 849.84 218.346 cv
849.381 215.248 848.94 212.368 848.687 210.055 cv
848.493 208.547 848.469 207.301 848.389 206.416 cv
848.33 205.532 848.296 205.029 848.296 205.029 cv
848.296 205.029 li
848.295 205.029 847.999 205.506 847.478 206.343 cv
846.976 207.184 846.162 208.395 845.349 209.872 cv
844.072 212.106 842.58 214.964 841.027 217.951 cv
840.291 215.2 839.563 212.649 839.071 210.605 cv
838.733 209.223 838.505 208.072 838.391 207.259 cv
838.273 206.448 838.266 205.975 838.266 205.975 cv
838.266 205.975 838.192 206.086 838.051 206.294 cv
837.905 206.503 837.712 206.815 837.473 207.215 cv
836.999 208.017 836.382 209.182 835.706 210.592 cv
834.376 213.348 832.808 217.043 831.129 220.723 cv
214.743 217.825 mo
213.294 213.458 210.132 211.28 206.122 210.654 cv
205.828 207.451 205.525 204.201 205.222 200.992 cv
220.035 200.85 234.851 200.681 249.228 200.499 cv
248.94 201.993 248.641 203.542 248.34 205.104 cv
248.123 206.187 247.942 207.268 247.699 208.334 cv
247.525 208.986 247.353 209.634 247.182 210.274 cv
244.21 209.652 240.855 209.326 237.448 209.326 cv
227.784 209.326 217.7 211.944 214.743 217.825 cv
122.8 215.866 mo
122.45 214.978 122.098 214.085 121.747 213.194 cv
120.13 209.05 118.625 204.848 117.447 201.745 cv
117.404 201.636 117.361 201.527 117.319 201.42 cv
118.339 201.42 119.373 201.42 120.416 201.42 cv
122.434 201.42 124.487 201.42 126.592 201.42 cv
125.486 205.329 124.178 210.066 123.019 214.934 cv
122.946 215.245 122.873 215.555 122.8 215.866 cv
872.723 214.015 mo
872.375 214.003 872.028 214.009 871.68 214.004 cv
871.617 213.658 871.553 213.304 871.491 212.962 cv
871.293 211.798 871.173 210.657 871.016 209.549 cv
870.665 207.328 870.607 205.273 870.457 203.491 cv
870.369 202.599 870.39 201.79 870.39 201.068 cv
870.39 200.783 870.391 200.512 870.391 200.257 cv
871.85 200.284 873.286 200.31 874.7 200.335 cv
874.154 203.424 873.652 206.833 873.237 210.235 cv
873.065 211.501 872.895 212.765 872.723 214.015 cv
265.531 212.357 mo
265.417 212.119 265.302 211.879 265.186 211.638 cv
264.659 210.55 264.119 209.434 263.573 208.305 cv
262.981 207.181 262.316 206.051 261.688 204.93 cv
260.802 203.388 259.923 201.853 259.073 200.371 cv
265.71 200.283 272.227 200.193 278.577 200.102 cv
277.917 201.415 277.18 202.88 276.392 204.451 cv
273.106 206.506 269.986 208.725 267.114 211.073 cv
266.578 211.497 266.051 211.925 265.531 212.357 cv
863.341 211.337 mo
862.323 207.675 861.257 204.278 860.539 201.594 cv
860.392 201.054 860.256 200.544 860.133 200.067 cv
863.12 200.123 866.015 200.177 868.824 200.229 cv
868.698 200.442 868.567 200.667 868.428 200.903 cv
868.021 201.6 867.539 202.391 867.123 203.266 cv
866.263 205.011 865.135 207.075 864.215 209.319 cv
863.935 209.975 863.637 210.652 863.341 211.337 cv
884.289 210.143 mo
884.2 209.887 884.111 209.628 884.022 209.372 cv
882.899 206.276 881.86 203.237 880.98 200.447 cv
883.648 200.493 886.24 200.538 888.759 200.58 cv
887.326 203.428 885.757 206.746 884.289 210.143 cv
893.935 209.224 mo
893.697 206.165 893.559 203.234 893.501 200.659 cv
895.017 200.684 896.511 200.708 897.979 200.731 cv
897.719 201.233 897.454 201.748 897.183 202.272 cv
896.644 203.342 896.04 204.453 895.508 205.591 cv
895.013 206.734 894.508 207.899 894.002 209.068 cv
893.935 209.224 li
109.951 208.921 mo
109.735 208.516 109.518 208.119 109.301 207.729 cv
109.348 207.868 109.395 208.007 109.442 208.146 cv
107.909 205.499 106.357 203.22 104.785 201.419 cv
107.542 201.42 110.385 201.42 113.319 201.42 cv
113.291 201.486 113.262 201.552 113.233 201.618 cv
112.313 203.675 111.154 206.191 109.951 208.921 cv
4.56086 208.263 mo
4.45407 207.529 4.34614 206.792 4.24138 206.072 cv
4.10845 204.919 4.0582 203.792 3.9656 202.698 cv
3.91734 202.058 3.8701 201.431 3.82412 200.821 cv
5.41719 200.845 6.98359 200.867 8.52805 200.889 cv
7.28937 203.145 5.96101 205.612 4.64242 208.108 cv
4.56086 208.263 li
74.1325 207.412 mo
73.8961 205.434 73.6522 203.417 73.4051 201.392 cv
74.8437 201.395 76.296 201.398 77.7772 201.4 cv
76.7731 203.048 75.5063 205.133 74.1325 207.412 cv
83.4239 206.711 mo
82.6715 204.702 81.9822 202.877 81.4239 201.405 cv
83.6563 201.408 85.9454 201.41 88.2911 201.412 cv
87.3295 202.45 85.5015 204.428 83.4239 206.711 cv
55.9118 205.175 mo
55.3101 203.777 54.7446 202.473 54.2475 201.33 cv
55.2191 201.334 56.1995 201.339 57.1818 201.343 cv
56.7551 202.627 56.3305 203.908 55.9118 205.175 cv
47.0853 204.636 mo
46.3983 203.421 45.7482 202.279 45.1761 201.278 cv
46.5461 201.287 47.9237 201.296 49.3036 201.304 cv
48.6336 202.307 47.8827 203.434 47.0853 204.636 cv
37.962 203.535 mo
37.721 202.753 37.4818 201.979 37.246 201.219 cv
38.1091 201.226 38.9711 201.233 39.833 201.24 cv
39.2574 201.944 38.6266 202.717 37.962 203.535 cv
89.8504 201.928 mo
89.7264 201.737 89.614 201.565 89.5149 201.413 cv
89.765 201.413 90.0177 201.413 90.2692 201.414 cv
90.1291 201.581 89.9902 201.752 89.8504 201.928 cv
282.759 200.68 mo
282.73 200.464 282.701 200.251 282.672 200.043 cv
283.105 200.036 283.529 200.03 283.96 200.024 cv
283.557 200.241 283.16 200.458 282.759 200.68 cv
358.172 199.3 mo
357.888 199.138 357.604 198.978 357.318 198.819 cv
357.771 198.811 358.224 198.803 358.663 198.795 cv
358.496 198.96 358.331 199.13 358.172 199.3 cv
700.943 143.412 mo
699.944 143.057 698.887 142.847 697.792 142.808 cv
697.23 141.974 696.66 141.139 696.094 140.32 cv
696.79 140.302 697.148 140.292 697.148 140.292 cv
697.148 140.292 696.777 140.283 696.055 140.265 cv
693.227 136.175 690.358 132.284 687.475 128.659 cv
728.932 128.659 li
726.383 131.511 724.802 135.488 724.802 139.886 cv
724.802 140.432 724.826 140.971 724.874 141.502 cv
722.875 140.477 720.545 139.886 718.055 139.886 cv
717.268 139.886 716.498 139.949 715.748 140.061 cv
714.727 136.637 711.887 134.172 708.541 134.172 cv
704.336 134.172 700.927 138.063 700.927 142.862 cv
700.927 143.047 700.934 143.23 700.943 143.412 cv
900 122.941 mo
682.716 122.941 li
678.524 118.141 674.333 113.986 670.226 110.691 cv
900 110.691 li
900 122.941 li
false sop
/0 
[/DeviceRGB] /CSA add_res
level3{
gsave
clp
[1.01108e-008 -225.201 225.201 1.01108e-008 450 315.729 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.752941 .972549 1 ]
/C1 [.478431 .839216 1 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.01108e-008 -225.201 225.201 1.01108e-008 450 315.729 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~^q[Y!^:q=q]tM+l]Y(nh]=Y\d]"5G_\[f5[\@B#W\$i`R[^ENN[C!<JZa7!EZEgdAZ*CR<Yct@8YHP.4
Y-+n/Xf\\+XK8J'X/`2"Wi;tsWMlboVl-GjVP^5fV5:#aUnjf]USFTYU8"?TTqS-PTV.pLT:VXGSt2FC
S=H+>S"#n:R[T\5R@0J1R$a8-Q^=#(QBmf$Q'ISuP`q;pPEM)lP*(lhOH>QcO,o?_NfK-ZNK&pVN/W^R
Mi3IMMMd7IM2@%ELkgb@LPCP<L4t>8KS5#3K7ef/JqAT*JUrB&J:N0"It)orIXZ]nI=6KjI!^3eH[:!a
~>
<~q"OOWp\4FVp@e4Rp@e4Rp%A"Np%A"Mo^qeJo^qeIoCMSFoCMPDo()ABo()>@naZ/>naQ&;nF5r:nF,i7
n*f`6mdBN2mdBN2mHs<.mHs<-m-O**m-O*)lg*m&lg*j$lK[["lK[Wul07Hsl0.?pkih6oki_-lkND$k
kN:phk2tggjlPUcjlPUcjQ,C_jQ,C^j5]1[j5]1Zio8tWio8qUiSibSiSi_Qi8EPOi8<GLhr!>Khqm5H
hVR,Gh;-oCh;-oCgt^]?gt^]>gY:K;gY:K:g=k97g=k65g"G'3g"G$1f\"j/f[na,f@SX+f@JO(f%/F'
~>
255 ]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
531.26 291.581 mo
530.232 288.324 529.165 285.016 528.074 281.696 cv
528.181 277.194 527.997 272.648 526.481 267.838 cv
525.557 264.909 524.3 261.412 521.919 258.376 cv
565.961 258.376 li
566.519 258.533 567.083 258.686 567.663 258.838 cv
567.64 259.037 567.617 259.236 567.593 259.434 cv
567.307 262.04 567.125 264.704 567.089 267.198 cv
566.968 267.233 li
549.461 272.764 537.519 281.434 531.26 291.581 cv
487.265 262.775 mo
487.235 261.524 487.319 260.012 487.359 258.376 cv
489.198 258.376 li
488.03 259.801 487.329 261.31 487.265 262.775 cv
level3{
gsave
clp
[1.01108e-008 -225.201 225.201 1.01108e-008 450 315.729 ]ct
/1 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~e,'*mq>\n=s3^ZBd/!^fq#AY7s3:<<c1h7^p]&G2s3(-9b4bkWp&E,+s2Xg4`q9;No`)o%s2=O/`:ErG
o)HSts2":+_"%H>nc-Ans1\"&^$u'8n,L&hs1@_!]'fU/mf0fbs1%Ir\*a4(m/ON[s0_1m[-Rauli49U
s0CqiZ0D:ml2RsOs0(\eY3>nfkl7aIs/Y>_X69M_k5VFCs/>&ZW9+&WjSu+<s.n`UUZDHKj8Ye4s.A<N
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.01108e-008 -225.201 225.201 1.01108e-008 450 315.729 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~daHRlda?IidF$@hdEp7ed*L%acd'h]cHXVYc-4DUbfn;Tbfe2QbK@uMb0%lLb/qcIaiMQEaN)?Aa2Z-=
`l?!:`Pog8`Pod6`5KR2_o'C0_o'@._SX.*_83q&^qd_"^V@Ls^:q=q^:q:o]tM(k]Y(ni]Y(kg]=YYc
]"5J`\[f8\\@B&X\$riU\$riT[^NWP[C*EM[C*EL['[3HZa7!DZEgd@Z*CR=Z*CR<Yct@8YHP.4Y-+q1
Y-+q1Xf\_-XK8M)X/i;%WiE)!WiE)!WMukrW2QYnVl-GjVl-GjVP^5fV59u`USFTZU8"?TTV.sNT:_aJ
~>
<~q>'j^q=sa[q"XXZq"XXZq"XXZq"OOWp\4FVp\+=Sp@e4Rp@e4Rp@e4Rp@\+Op%A"Np%7nKo^qeJo^qeJ
o^qbHoCMSFoCMPDo()ABo()>@naZ/>naZ/>naZ/>naZ,<nF5r:nF5o8n*f`6n*f`6n*f]4mdBN2mdBK0
mHs<.mHs<.mHs<.mHs<-m-O**m-O*)lg*m%lK[["lK[["lK[["lK[[!l07Hsl07Hrkih6okih6okih6o
kih6okND$kkND$kk2tggk2tggk2tggjlPUcjlPUcjQ,C_jQ,C_j5]1[j5]1[j5]1[j5]1[io8tWio8tW
~>
255 ]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
549.193 248.991 mo
516.812 248.991 li
516.084 246.953 515.372 244.974 514.682 243.066 cv
514.682 243.066 li
511.166 233.342 508.224 225.464 506.597 221.148 cv
556.459 221.148 li
550.709 234.444 547.769 244.675 549.089 248.708 cv
549.089 248.708 li
549.095 248.725 549.1 248.741 549.106 248.758 cv
549.106 248.758 549.106 248.759 549.106 248.76 cv
549.112 248.775 549.117 248.791 549.123 248.806 cv
549.123 248.808 549.124 248.809 549.124 248.811 cv
549.127 248.819 549.131 248.829 549.134 248.837 cv
549.134 248.839 549.135 248.84 549.135 248.841 cv
549.137 248.846 549.138 248.85 549.14 248.855 cv
549.141 248.857 549.142 248.859 549.143 248.861 cv
549.145 248.869 549.148 248.875 549.15 248.882 cv
549.151 248.885 549.152 248.888 549.154 248.891 cv
549.155 248.894 549.157 248.899 549.158 248.902 cv
549.159 248.905 549.16 248.909 549.161 248.912 cv
549.164 248.918 549.166 248.922 549.168 248.928 cv
549.169 248.932 549.171 248.935 549.172 248.939 cv
549.174 248.943 549.175 248.946 549.176 248.95 cv
549.178 248.953 549.179 248.957 549.181 248.96 cv
549.182 248.965 549.184 248.969 549.186 248.974 cv
549.188 248.978 549.19 248.983 549.191 248.987 cv
549.192 248.989 549.192 248.989 549.193 248.991 cv
504.657 248.991 mo
486.14 248.991 li
485.46 247.334 484.425 245.819 482.86 244.599 cv
479.602 242.045 476.414 241.145 473.324 241.145 cv
468.352 241.145 463.637 243.476 459.294 244.994 cv
458.574 237.615 451.557 227.758 442.763 221.148 cv
505.165 221.148 li
504.657 248.991 li
759.347 234.955 mo
758.037 229.846 756.574 224.404 755.69 221.148 cv
765.05 221.148 li
763.956 223.614 762.665 226.544 761.368 229.535 cv
760.673 231.352 759.988 233.191 759.347 234.955 cv
747.137 233.703 mo
746.427 229.489 745.642 225.012 744.955 221.148 cv
753.387 221.148 li
751.888 224.136 749.472 228.967 747.137 233.703 cv
773.335 232.414 mo
772.945 231.285 772.549 230.135 772.157 228.985 cv
771.359 226.21 770.572 223.477 769.901 221.148 cv
780.782 221.148 li
780.503 221.537 780.204 221.953 779.887 222.393 cv
778.005 225.045 775.524 228.593 773.335 232.414 cv
164.74 228.933 mo
159.736 225.895 153.627 224.112 147.19 223.358 cv
146.969 222.612 146.749 221.873 146.533 221.148 cv
168.788 221.148 li
167.469 223.663 166.078 226.332 164.74 228.933 cv
791.225 228.841 mo
791.11 226.978 790.993 225.224 790.876 223.803 cv
790.781 222.646 790.704 221.719 790.657 221.148 cv
794.564 221.148 li
794.006 222.424 793.434 223.732 792.859 225.046 cv
792.312 226.311 791.764 227.584 791.225 228.841 cv
783.315 227.59 mo
783.225 225.789 783.194 224.095 783.177 222.649 cv
783.172 222.113 783.168 221.61 783.164 221.148 cv
789.952 221.148 li
788.795 222.274 786.226 224.77 783.315 227.59 cv
737.977 223.146 mo
737.755 222.486 737.528 221.823 737.294 221.148 cv
738.805 221.148 li
738.535 221.798 738.259 222.466 737.977 223.146 cv
410.091 223.044 mo
410.264 222.447 410.339 221.813 410.323 221.148 cv
411.299 221.148 li
410.882 221.739 410.478 222.371 410.091 223.044 cv
level3{
gsave
clp
[1.01108e-008 -225.201 225.201 1.01108e-008 450 315.729 ]ct
/2 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.827451 .980392 1 ]
/C1 [.635294 .886274 1 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.01108e-008 -225.201 225.201 1.01108e-008 450 315.729 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~daHRldaHOjdF$@gd*U.dcd0q`cd'h]cHa_[c-=MXbfn;Tbfe2QbKJ&Nb0%lLaiVZHaiMQEaN2EBa2c6?
`l?$<`Pog8`Pod6`5KU3_o'C0_SX1,_SO()_83t'^qdb$^V@Ou^V7Fr^:q:o]tM+l]Y(ni]Xtef]=YYc
]"5J`\[f8]\@B&Y\@B#W\$riT[^NWQ[C*EM[C!<J['[0GZa7!EZEgdAZE^[>Z*CO;Yct@8YHP.5YHG%2
Y-+n/Xf\_,XK8M)X/i;%X/`2"WiE(uWMukrW2QYnW2HPkVl-DhVP^5fV5:#bV50o_Unjc\USFTYU8"BV
~>
<~q>'j^q>'j^q>'j]q"XXZq"XXZq"XUXp\4FVp\4FVp@e4Rp@e4Rp@e4Qp%A"Np%A"Np%@tLo^qeJo^qeJ
oCMSFoCMSFoCMSEo()ABo()ABo()>@naZ/>naZ/>nF5r:nF5r:nF5r9n*f`6n*f`6n*f]4mdBN2mdBN2
mHs<.mHs<.mHs<-m-O**m-O**m-O'(lg*m&lg*m&lK[["lK[["lK[[!l07Hsl07Hsl07Eqkih6okih6o
kND$kkND$kkND$jk2tggk2tggk2tdejlPUcjlPUcjQ,C_jQ,C_jQ,C^j5]1[j5]1[j5].Yio8tWio8tW
~>
255 ]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
900 85.3892 mo
900 85.3892 li
0 85.3892 li
0 0 li
900 0 li
900 85.3892 li
568.139 67.381 mo
438.578 67.381 248.326 72.2346 248.326 72.2346 cv
248.326 72.2346 444.34 77.0883 568.139 77.0883 cv
709.187 77.0883 887.957 72.2346 887.957 72.2346 cv
887.957 72.2346 697.705 67.381 568.139 67.381 cv
168.08 42.6945 mo
119.944 42.6945 58.9343 45.6471 58.9343 45.6471 cv
58.9343 45.6471 123.863 48.6 168.08 48.6 cv
212.296 48.6 277.224 45.6471 277.224 45.6471 cv
277.224 45.6471 210.33 42.6945 168.08 42.6945 cv
level3{
gsave
clp
[8.34422e-009 185.854 -185.854 8.34422e-009 450 -16.2508 ]ct
/3 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.192157 .662745 1 ]
/C1 [.505882 .847059 1 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.34422e-009 185.854 -185.854 8.34422e-009 450 -16.2508 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~0ekC;1,:U@1G^jE1c7-J2E!HO2`EZT3&ioY3BB2^4$,Mc4?P_h4Zttm5!M7r5<qJ!5s[e'6:+%,6UX=1
6q'O57Rfj;7n6*@84cBE8P2TI91qoO9MA/T9hnGY:/=Y]:f'tc;,L4h;H$Lm;cH^q<E3%"<`W:'='/R,
=]nm1>$>*6>?b?;>[:W@?=$rE?XI/J?smDO@:E\T@q0"YA7T4^AS#IcAnPahBP;'mBk_9rC2.O"CM[g'
D/F-,DJj?1Df9T6E,fl;EH6)?F)uDEFEDYJF`qqOG'A.SG^+IYH$O^^H@(!cH[L3gI=6NmIXZcrIt3'"
~>
<~WMukrWMuntWiE)"X/i;%X/rD(XK8P+Xf\_-Y-+q1Y-5%4YHP.6Yct@9Z*CR=Z*CU?ZEgdBZa7!E['[3I
['[6K[C*EN[^NWQ[^W`T\$rlW\@B&Y\[f8]\[oA`]"5Jb]=Y\e]Y(ni]Y2"l]tM+n^:q=q^V@Ou^V@S"
^qdb%_83t(_8=(+_SX4._o'C0`5KU4`5T^7`Poj:`l?$<a2c6@a2l?CaN2HEaiVZHb0%lLb0%oNbKJ)Q
bfn;Tbg"DWc-=PZcHa_]cd0q`cd:%cd*U1fdF$@hdaHRldaQ[oe'ldqeC<!te^`4#e^`7%f%/F(f@SX+
~>
255 ]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /3 /Gradient get_res exec grestore
}if
np
900 110.691 mo
900 110.691 li
670.226 110.691 li
665.127 106.6 660.159 103.838 655.472 102.811 cv
655.472 102.811 li
655.454 102.807 655.437 102.804 655.419 102.8 cv
655.418 102.8 li
655.399 102.796 655.384 102.792 655.365 102.788 cv
655.364 102.788 li
655.348 102.784 655.328 102.78 655.312 102.777 cv
655.309 102.776 li
655.293 102.773 655.274 102.769 655.258 102.766 cv
655.256 102.765 li
655.219 102.757 655.186 102.751 655.15 102.743 cv
655.148 102.743 li
655.132 102.74 655.112 102.736 655.096 102.733 cv
655.095 102.732 li
655.079 102.729 655.058 102.725 655.042 102.722 cv
655.041 102.722 li
654.771 102.669 654.506 102.622 654.239 102.581 cv
654.239 102.581 li
654.223 102.578 654.208 102.576 654.192 102.573 cv
654.189 102.573 654.186 102.573 654.184 102.572 cv
654.17 102.57 654.153 102.568 654.139 102.566 cv
654.136 102.565 654.134 102.565 654.13 102.564 cv
654.117 102.562 654.102 102.56 654.089 102.558 cv
654.084 102.557 654.08 102.557 654.076 102.556 cv
654.064 102.554 654.047 102.552 654.036 102.55 cv
654.031 102.55 654.026 102.549 654.022 102.548 cv
654.008 102.546 653.998 102.545 653.984 102.543 cv
653.979 102.542 653.973 102.541 653.967 102.541 cv
653.954 102.539 653.945 102.537 653.931 102.536 cv
653.924 102.535 653.92 102.534 653.914 102.533 cv
653.902 102.532 653.889 102.53 653.878 102.528 cv
653.871 102.527 653.866 102.527 653.859 102.526 cv
653.848 102.524 653.836 102.523 653.825 102.521 cv
653.818 102.52 653.812 102.52 653.806 102.519 cv
653.794 102.517 653.784 102.516 653.772 102.514 cv
653.764 102.513 653.759 102.513 653.751 102.512 cv
653.74 102.51 653.73 102.509 653.719 102.508 cv
653.711 102.507 653.705 102.506 653.698 102.505 cv
653.686 102.503 653.677 102.502 653.666 102.501 cv
653.658 102.5 653.65 102.499 653.643 102.498 cv
653.634 102.497 653.621 102.495 653.612 102.494 cv
653.604 102.493 653.597 102.493 653.59 102.492 cv
653.58 102.491 653.568 102.489 653.558 102.488 cv
653.551 102.487 653.543 102.486 653.535 102.485 cv
653.526 102.484 653.514 102.483 653.505 102.482 cv
653.497 102.481 653.49 102.48 653.482 102.479 cv
653.471 102.478 653.463 102.477 653.451 102.476 cv
653.444 102.475 653.436 102.474 653.428 102.473 cv
653.417 102.472 653.409 102.471 653.397 102.47 cv
653.39 102.469 653.383 102.468 653.375 102.467 cv
653.364 102.466 653.355 102.465 653.344 102.464 cv
653.337 102.463 653.328 102.462 653.321 102.462 cv
653.31 102.46 653.302 102.46 653.291 102.458 cv
653.283 102.458 653.275 102.457 653.267 102.456 cv
653.258 102.455 653.246 102.454 653.237 102.453 cv
653.23 102.452 653.221 102.451 653.213 102.451 cv
653.204 102.45 653.193 102.449 653.184 102.448 cv
653.176 102.447 653.167 102.446 653.16 102.446 cv
653.151 102.445 653.139 102.444 653.13 102.443 cv
653.122 102.442 653.114 102.441 653.105 102.44 cv
653.096 102.44 653.086 102.439 653.077 102.438 cv
653.068 102.437 653.061 102.436 653.052 102.436 cv
653.043 102.435 653.033 102.434 653.024 102.433 cv
653.015 102.432 653.006 102.432 652.997 102.431 cv
652.988 102.43 652.979 102.429 652.97 102.428 cv
652.962 102.428 652.952 102.427 652.943 102.426 cv
652.934 102.425 652.926 102.425 652.917 102.424 cv
652.907 102.423 652.898 102.422 652.888 102.422 cv
652.881 102.421 652.871 102.42 652.864 102.42 cv
652.854 102.419 652.846 102.418 652.836 102.418 cv
652.829 102.417 652.817 102.416 652.81 102.416 cv
652.8 102.415 652.79 102.414 652.78 102.413 cv
652.773 102.413 652.764 102.412 652.757 102.412 cv
652.746 102.411 652.734 102.41 652.723 102.409 cv
652.717 102.409 652.71 102.408 652.704 102.408 cv
652.686 102.407 652.668 102.405 652.65 102.404 cv
652.65 102.404 li
652.65 102.404 li
652.318 102.382 651.982 102.371 651.644 102.371 cv
651.628 102.371 651.61 102.371 651.594 102.371 cv
651.592 102.371 651.589 102.371 651.587 102.371 cv
651.571 102.372 651.555 102.372 651.539 102.372 cv
651.536 102.372 651.533 102.372 651.531 102.372 cv
651.515 102.372 651.498 102.372 651.482 102.372 cv
651.477 102.372 li
651.46 102.372 651.445 102.373 651.427 102.373 cv
651.425 102.373 651.427 102.373 651.425 102.373 cv
651.409 102.373 651.392 102.373 651.376 102.374 cv
651.373 102.374 651.369 102.374 651.367 102.374 cv
651.352 102.374 651.333 102.374 651.318 102.375 cv
651.316 102.375 651.315 102.375 651.312 102.375 cv
651.279 102.376 651.243 102.376 651.21 102.377 cv
651.207 102.377 651.207 102.377 651.204 102.377 cv
651.188 102.378 651.171 102.378 651.155 102.379 cv
651.152 102.379 651.149 102.379 651.147 102.379 cv
651.131 102.38 651.113 102.38 651.097 102.381 cv
651.095 102.381 651.097 102.381 651.095 102.381 cv
651.077 102.381 651.061 102.382 651.043 102.383 cv
651.041 102.383 li
651.024 102.383 651.005 102.384 650.989 102.385 cv
650.984 102.385 li
650.968 102.386 650.949 102.386 650.933 102.387 cv
650.928 102.387 li
650.893 102.389 650.858 102.391 650.823 102.392 cv
650.819 102.393 li
650.801 102.394 650.784 102.394 650.766 102.395 cv
650.764 102.396 li
650.709 102.399 650.656 102.402 650.602 102.405 cv
650.599 102.405 650.599 102.405 650.597 102.405 cv
650.579 102.407 650.562 102.408 650.544 102.409 cv
650.543 102.409 li
650.506 102.412 650.469 102.414 650.432 102.417 cv
650.432 102.417 li
650.413 102.418 650.396 102.42 650.377 102.421 cv
650.376 102.421 li
645.017 102.836 638.976 105.828 632.584 110.691 cv
0 110.691 li
0 94.1595 li
900 94.1595 li
900 110.691 li
level3{
gsave
clp
[8.3442e-009 185.854 -185.854 8.3442e-009 450 -16.251 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.3442e-009 185.854 -185.854 8.3442e-009 450 -16.251 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
900 128.659 mo
900 128.659 li
748.173 128.659 li
745.693 125.884 742.298 124.174 738.552 124.174 cv
734.807 124.174 731.412 125.884 728.932 128.659 cv
687.475 128.659 li
685.891 126.668 684.304 124.759 682.716 122.941 cv
900 122.941 li
900 128.659 li
614.003 128.659 mo
0 128.659 li
0 122.941 li
619.202 122.941 li
617.476 124.759 615.741 126.669 614.003 128.659 cv
level3{
gsave
clp
[8.34414e-009 185.853 -185.853 8.34414e-009 450 -16.25 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.34414e-009 185.853 -185.853 8.34414e-009 450 -16.25 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
584.76 168.65 mo
505.212 168.159 402.338 165.785 402.338 165.785 cv
402.338 165.785 506.029 163.321 588.466 162.895 cv
588.462 162.903 588.456 162.911 588.451 162.919 cv
588.443 162.932 588.436 162.942 588.427 162.955 cv
588.413 162.978 588.399 162.998 588.385 163.02 cv
588.376 163.033 588.367 163.048 588.358 163.06 cv
588.345 163.08 588.331 163.102 588.318 163.122 cv
588.307 163.139 588.293 163.16 588.282 163.177 cv
588.277 163.185 588.269 163.197 588.264 163.204 cv
588.239 163.242 588.221 163.271 588.196 163.309 cv
588.195 163.311 li
587.038 165.079 585.89 166.865 584.76 168.65 cv
713.038 167.875 mo
712.269 166.483 711.489 165.092 710.704 163.711 cv
769.371 164.581 820.05 165.785 820.05 165.785 cv
820.05 165.785 771.898 167.003 713.038 167.875 cv
level3{
gsave
clp
[1.01108e-008 -225.201 225.201 1.01108e-008 450 315.729 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.01108e-008 -225.201 225.201 1.01108e-008 450 315.729 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
377.33 145.146 mo
253.531 145.146 57.5174 140.292 57.5174 140.292 cv
57.5174 140.292 247.769 135.439 377.33 135.439 cv
449.175 135.439 539.685 136.931 606.064 138.261 cv
604.981 139.639 603.897 141.044 602.818 142.467 cv
538.93 143.759 452.736 145.146 377.33 145.146 cv
696.094 140.32 mo
696.082 140.302 696.068 140.283 696.055 140.265 cv
696.777 140.283 697.148 140.292 697.148 140.292 cv
697.148 140.292 696.79 140.302 696.094 140.32 cv
level3{
gsave
clp
[1.01108e-008 -225.201 225.201 1.01108e-008 450 315.729 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.01108e-008 -225.201 225.201 1.01108e-008 450 315.729 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
568.139 77.0883 mo
444.34 77.0883 248.326 72.2346 248.326 72.2346 cv
248.326 72.2346 438.578 67.381 568.139 67.381 cv
697.705 67.381 887.957 72.2346 887.957 72.2346 cv
887.957 72.2346 709.187 77.0883 568.139 77.0883 cv
level3{
gsave
clp
[8.34422e-009 185.854 -185.854 8.34422e-009 450 -16.2508 ]ct
/4 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.423529 .784314 1 ]
/C1 [.54902 .858823 1 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.34422e-009 185.854 -185.854 8.34422e-009 450 -16.2508 ]ct
clp
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~CM[g'Ci!p(Ci+$+D/F-,D/O6/DJj?0DJsH3Df9Q4DfBZ7E,]c8E,fl;EH,u<EH6)?EcQ2@EcZ;CF)uDD
F*)MGFEDVHFEM_KF`hhLF`qqOG'8%PG'A.SGB\7TGBe@WG^+IXG^4R[H$O[\H$Xd_H?sm`H@(!cH[C*d
H[L3gI!g<hI!pEkI=6NlI=?WoIXZ`pIXcisIt)rtIt3'"J:N0#J:W9&JUrB'JV&K*JqAT+JqJ].K7ef/
K7no2KS5#3KS>,6KnY57Knb>:L5(G;L51P>LPLY?LPUbBLkpkCLl$tFM2@(GM2I1JMMd:KMMmCNMi3LO
~>
<~a2l?CaN2HDaN2HDaN2KFaiVZHaiVZHaiVZIb0%lLb0%lLb0%lLb0.uObKJ)PbKJ)PbKJ,Rbfn;Tbfn;T
bfn;Tc-=MXc-=MXc-=MXc-FV[cHa_\cHa_\cHa_]cd0q`cd0q`cd0q`d*U.dd*U.dd*U.dd*U1fdF$@h
dF$@hdF$@idaHRldaHRldaHRldaQ[oe'ldpe'ldpe'lgreC<!teC<!teC<!te^`4#e^`4#e^`4#e^i=&
f%/F'f%/F'f%/F(f@SX+f@SX+f@SX+f\"j/f\"j/f\"j/f\"m1g"G'3g"G'3g"G'4g=k97g=k97g=k97
~>
255 ]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /4 /Gradient get_res exec grestore
}if
np
120.416 201.42 mo
119.373 201.42 118.339 201.42 117.319 201.42 cv
116.165 198.503 115.414 196.603 115.414 196.603 cv
115.414 196.603 114.586 198.507 113.319 201.42 cv
110.385 201.42 107.542 201.42 104.785 201.419 cv
102.593 198.909 100.36 197.326 98.0832 196.966 cv
97.9095 196.95 97.7351 196.942 97.5621 196.942 cv
95.0765 196.942 92.6483 198.567 90.2692 201.414 cv
90.0177 201.413 89.765 201.413 89.5149 201.413 cv
89.1924 200.919 89.009 200.639 89.009 200.639 cv
89.009 200.639 88.7477 200.92 88.2911 201.412 cv
85.9454 201.41 83.6563 201.408 81.4239 201.405 cv
80.5704 199.155 80.0229 197.728 80.0229 197.728 cv
80.0229 197.728 79.1432 199.159 77.7772 201.4 cv
76.296 201.398 74.8437 201.395 73.4051 201.392 cv
73.1741 199.5 72.9406 197.603 72.7073 195.72 cv
91.1899 195.591 109.612 195.515 127.276 195.515 cv
127.617 195.515 127.956 195.515 128.298 195.515 cv
128.011 196.497 127.675 197.647 127.3 198.929 cv
127.077 199.713 126.839 200.546 126.592 201.42 cv
124.487 201.42 122.434 201.42 120.416 201.42 cv
132.243 201.418 mo
131.987 200.574 131.744 199.769 131.513 199.008 cv
131.122 197.695 130.771 196.518 130.472 195.516 cv
149.717 195.528 171.06 195.654 192.898 195.846 cv
192.384 197.584 191.863 199.345 191.34 201.117 cv
170.967 201.288 150.873 201.401 132.243 201.418 cv
57.1818 201.343 mo
56.1995 201.339 55.2191 201.334 54.2475 201.33 cv
53.0799 198.646 52.2889 196.855 52.2889 196.855 cv
52.2889 196.855 51.0807 198.643 49.3036 201.304 cv
47.9237 201.296 46.5461 201.287 45.1761 201.278 cv
43.8645 198.984 42.9624 197.431 42.9624 197.431 cv
42.9624 197.431 41.6829 198.977 39.833 201.24 cv
38.9711 201.233 38.1091 201.226 37.246 201.219 cv
36.6772 199.384 36.1293 197.63 35.6307 196.041 cv
43.3712 195.962 51.1844 195.889 59.0204 195.824 cv
58.4077 197.658 57.7922 199.506 57.1818 201.343 cv
205.222 200.992 mo
205.063 199.297 204.904 197.616 204.746 195.956 cv
219.873 196.104 235.095 196.281 249.892 196.47 cv
249.803 197.202 249.699 197.962 249.567 198.741 cv
249.456 199.316 249.343 199.903 249.228 200.499 cv
234.851 200.681 220.035 200.85 205.222 200.992 cv
8.52805 200.889 mo
6.98359 200.867 5.41719 200.845 3.82412 200.821 cv
3.71258 199.341 3.60852 197.96 3.51567 196.729 cv
3.50753 196.621 3.49947 196.515 3.49151 196.41 cv
6.00588 196.378 8.53424 196.347 11.081 196.316 cv
10.3054 197.678 9.44105 199.227 8.52805 200.889 cv
0 200.762 mo
0 200.762 li
0 196.454 li
.0619522 196.454 .125773 196.453 .187748 196.452 cv
.184233 196.459 .18061 196.466 .17709 196.472 cv
.120313 196.582 .0579035 196.704 0 196.816 cv
0 200.762 li
259.073 200.371 mo
258.699 199.718 258.331 199.075 257.97 198.445 cv
257.581 197.798 257.183 197.168 256.788 196.559 cv
264.772 196.664 272.601 196.773 280.197 196.882 cv
279.736 197.798 279.189 198.884 278.577 200.102 cv
272.227 200.193 265.71 200.283 259.073 200.371 cv
282.672 200.043 mo
282.51 198.859 282.365 197.805 282.242 196.911 cv
284.861 196.949 287.446 196.987 290.003 197.025 cv
287.963 197.953 285.946 198.956 283.96 200.024 cv
283.529 200.03 283.105 200.036 282.672 200.043 cv
357.318 198.819 mo
356.879 198.576 356.437 198.336 355.992 198.101 cv
357.151 198.121 358.266 198.141 359.335 198.161 cv
359.104 198.368 358.881 198.578 358.663 198.795 cv
358.224 198.803 357.771 198.811 357.318 198.819 cv
14.5804 196.739 mo
14.5746 196.617 14.5678 196.485 14.5624 196.365 cv
14.561 196.335 14.5597 196.305 14.5583 196.275 cv
14.6116 196.274 14.6654 196.273 14.7188 196.273 cv
14.6726 196.428 14.6265 196.584 14.5804 196.739 cv
level3{
gsave
clp
[1.01108e-008 -225.201 225.201 1.01108e-008 450 315.729 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.01108e-008 -225.201 225.201 1.01108e-008 450 315.729 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
897.979 200.731 mo
896.511 200.708 895.017 200.684 893.501 200.659 cv
893.479 199.659 893.469 198.713 893.469 197.834 cv
893.472 197.383 893.482 196.95 893.497 196.539 cv
895.649 196.51 897.818 196.482 900 196.454 cv
900 196.816 li
899.386 198.005 898.706 199.323 897.979 200.731 cv
888.759 200.58 mo
886.24 200.538 883.648 200.493 880.98 200.447 cv
880.57 199.146 880.194 197.9 879.86 196.726 cv
883.476 196.675 887.146 196.624 890.865 196.574 cv
890.69 196.884 890.512 197.206 890.332 197.54 cv
889.837 198.47 889.308 199.491 888.759 200.58 cv
874.7 200.335 mo
873.286 200.31 871.85 200.284 870.391 200.257 cv
870.392 199.864 870.392 199.509 870.393 199.194 cv
870.395 198.15 870.397 197.558 870.397 197.557 cv
870.397 197.557 870.066 198.118 869.483 199.105 cv
869.29 199.435 869.069 199.811 868.824 200.229 cv
866.015 200.177 863.12 200.123 860.133 200.067 cv
859.877 199.078 859.675 198.235 859.538 197.579 cv
859.494 197.377 859.455 197.193 859.419 197.028 cv
864.584 196.948 869.913 196.869 875.376 196.79 cv
875.146 197.906 874.919 199.095 874.7 200.335 cv
857.724 200.022 mo
844.247 199.768 828.896 199.467 810.99 199.112 cv
810.844 198.679 810.702 198.257 810.563 197.848 cv
823.676 197.609 840.181 197.324 858.826 197.037 cv
858.761 197.201 858.69 197.385 858.611 197.586 cv
858.358 198.227 858.058 199.051 857.724 200.022 cv
806.269 199.019 mo
797.648 198.847 788.452 198.664 778.607 198.467 cv
778.607 198.467 789.071 198.245 806.519 197.923 cv
806.437 198.279 806.354 198.644 806.269 199.019 cv
level3{
gsave
clp
[1.01108e-008 -225.201 225.201 1.01108e-008 450 315.729 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.01108e-008 -225.201 225.201 1.01108e-008 450 315.729 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
168.08 48.6 mo
123.863 48.6 58.9343 45.6471 58.9343 45.6471 cv
58.9343 45.6471 119.944 42.6945 168.08 42.6945 cv
210.33 42.6945 277.224 45.6471 277.224 45.6471 cv
277.224 45.6471 212.296 48.6 168.08 48.6 cv
level3{
gsave
clp
[8.34422e-009 185.854 -185.854 8.34422e-009 450 -16.2508 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.34422e-009 185.854 -185.854 8.34422e-009 450 -16.2508 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
459.788 76.0249 mo
454.788 72.3582 451.826 76.5641 450.836 77.7263 cv
448.741 75.7014 446.022 74.476 443.05 74.476 cv
441.794 74.476 440.584 74.6949 439.447 75.0994 cv
439.457 74.9138 439.464 74.7273 439.464 74.5388 cv
439.464 69.6497 435.991 65.6862 431.707 65.6862 cv
428.298 65.6862 425.405 68.1968 424.364 71.6853 cv
423.6 71.5704 422.816 71.5071 422.014 71.5071 cv
419.478 71.5071 417.104 72.1088 415.068 73.1536 cv
415.116 72.6123 415.141 72.063 415.141 71.5071 cv
415.141 62.6665 408.869 55.4996 401.133 55.4996 cv
393.396 55.4996 387.124 62.6665 387.124 71.5071 cv
387.124 72.6288 387.226 73.7231 387.418 74.7798 cv
384.108 75.3367 381.15 76.6345 378.842 78.4448 cv
376.454 75.3896 372.885 73.4473 368.894 73.4473 cv
363.644 73.4473 359.123 76.8076 357.064 81.6448 cv
339.205 86.2209 314.765 88.9697 314.765 88.9697 cv
503.121 88.9697 li
460.361 85.573 li
460.361 85.573 464.788 79.6915 459.788 76.0249 cv
cp
1 1 1 rgb
f
163.104 116.039 mo
159.113 116.039 155.544 117.981 153.157 121.036 cv
150.849 119.226 147.89 117.928 144.581 117.371 cv
144.773 116.315 144.875 115.22 144.875 114.099 cv
144.875 105.258 138.603 98.0911 130.866 98.0911 cv
123.129 98.0911 116.857 105.258 116.857 114.099 cv
116.857 114.654 116.882 115.204 116.93 115.745 cv
114.894 114.7 112.521 114.099 109.984 114.099 cv
109.182 114.099 108.398 114.162 107.634 114.277 cv
106.593 110.788 103.7 108.278 100.291 108.278 cv
96.0074 108.278 92.5345 112.241 92.5345 117.13 cv
92.5345 117.319 92.5414 117.505 92.5516 117.691 cv
91.4143 117.286 90.2043 117.067 88.9489 117.067 cv
85.976 117.067 83.2578 118.293 81.1625 120.318 cv
80.1726 119.156 78.9584 118.462 77.6413 118.462 cv
74.3256 118.462 71.6376 122.806 71.6376 128.165 cv
71.6376 129.361 71.7781 130.503 72.0234 131.561 cv
253.351 131.561 li
253.351 131.561 192.794 128.812 174.934 124.236 cv
172.875 119.399 168.354 116.039 163.104 116.039 cv
cp
f
64.7291 122.668 mo
64.2623 122.668 63.8178 122.798 63.4086 123.027 cv
63.3304 118.971 60.9893 115.715 58.1061 115.715 cv
55.1735 115.715 52.7962 119.081 52.7962 123.234 cv
52.7962 124.078 52.8989 124.886 53.0799 125.644 cv
52.6971 125.501 52.2972 125.417 51.8827 125.417 cv
49.4512 125.417 45.0313 129.783 39.2076 131.399 cv
67.8916 131.399 li
67.8324 131.141 67.7695 130.884 67.6992 130.633 cv
68.0942 129.815 68.326 128.827 68.326 127.761 cv
68.326 124.949 66.7157 122.668 64.7291 122.668 cv
cp
f
770.197 141.791 mo
766.28 141.791 762.777 143.697 760.433 146.696 cv
758.168 144.919 755.263 143.645 752.015 143.099 cv
752.203 142.061 752.303 140.987 752.303 139.886 cv
752.303 131.208 746.147 124.174 738.552 124.174 cv
730.958 124.174 724.802 131.208 724.802 139.886 cv
724.802 140.432 724.826 140.971 724.874 141.502 cv
722.875 140.477 720.545 139.886 718.055 139.886 cv
717.268 139.886 716.498 139.949 715.748 140.061 cv
714.727 136.637 711.887 134.172 708.541 134.172 cv
704.336 134.172 700.927 138.063 700.927 142.862 cv
700.927 143.047 700.934 143.23 700.943 143.412 cv
699.827 143.015 698.64 142.8 697.407 142.8 cv
694.489 142.8 691.821 144.003 689.764 145.991 cv
688.793 144.85 687.601 144.169 686.308 144.169 cv
683.053 144.169 680.415 148.433 680.415 153.693 cv
680.415 154.868 680.553 155.988 680.793 157.027 cv
858.783 157.027 li
858.783 157.027 799.34 154.329 781.809 149.837 cv
779.789 145.089 775.351 141.791 770.197 141.791 cv
f
673.633 148.298 mo
673.175 148.298 672.739 148.426 672.337 148.65 cv
672.26 144.669 669.962 141.473 667.132 141.473 cv
664.254 141.473 661.92 144.778 661.92 148.854 cv
661.92 149.682 662.021 150.476 662.198 151.219 cv
661.823 151.078 661.43 150.996 661.023 150.996 cv
658.637 150.996 654.298 155.282 648.581 156.869 cv
676.738 156.869 li
676.679 156.615 676.618 156.363 676.549 156.117 cv
676.937 155.314 677.164 154.344 677.164 153.298 cv
677.164 150.536 675.583 148.298 673.633 148.298 cv
f
196.082 410.575 mo
205.529 410.577 214.977 410.574 224.425 410.571 cv
238.596 410.567 252.767 410.563 266.939 410.574 cv
267.009 410.574 li
267.104 410.574 267.273 410.574 267.481 410.574 cv
267.702 410.574 li
356.465 410.589 445.227 410.612 533.988 410.646 cv
534.453 410.826 535.205 411.373 535.017 410.646 cv
534.125 395.578 529.539 311.563 528.011 296.316 cv
527.042 286.645 529.624 277.811 526.481 267.838 cv
524.486 261.516 520.943 252.546 507.888 251.286 cv
498.011 250.322 487.524 256.898 487.265 262.775 cv
487.149 257.939 488.743 249.187 482.86 244.599 cv
474.358 237.935 466.335 242.533 459.294 244.994 cv
457.667 228.322 423.917 199.015 410.091 223.044 cv
413.273 212.033 383.217 188.473 366.284 194.165 cv
348.251 200.348 350.479 223.886 358.542 236.718 cv
357.695 235.806 356.775 235.077 355.796 234.49 cv
355.671 234.358 355.551 234.237 355.424 234.098 cv
353.169 231.665 350.619 227.966 348.609 224.007 cv
346.572 220.06 344.903 215.946 343.653 212.866 cv
342.383 209.778 341.548 207.739 341.548 207.739 cv
341.548 207.739 340.719 209.579 339.46 212.381 cv
338.196 215.186 336.49 218.978 335.207 223.15 cv
334.77 224.539 334.411 225.984 334.129 227.442 cv
333.986 226.867 333.841 226.283 333.694 225.69 cv
333.382 224.47 333.06 223.217 332.737 221.953 cv
332.338 220.68 331.898 219.396 331.475 218.133 cv
331.261 217.503 331.047 216.873 330.834 216.248 cv
330.625 215.626 330.322 214.996 330.073 214.382 cv
329.548 213.161 329.034 211.964 328.538 210.807 cv
328.31 210.236 328.012 209.671 327.716 209.122 cv
327.425 208.575 327.142 208.04 326.866 207.52 cv
326.315 206.496 325.796 205.528 325.317 204.635 cv
324.224 202.865 323.245 201.426 322.6 200.428 cv
321.945 199.436 321.572 198.872 321.572 198.872 cv
321.572 198.872 321.537 199.454 321.475 200.478 cv
321.402 201.496 321.345 202.941 321.179 204.65 cv
321.028 205.498 320.864 206.418 320.689 207.394 cv
320.602 207.874 320.513 208.37 320.421 208.877 cv
320.335 209.379 320.242 209.894 320.074 210.413 cv
319.778 211.444 319.472 212.51 319.16 213.599 cv
318.993 214.138 318.875 214.68 318.665 215.221 cv
318.458 215.761 318.25 216.302 318.042 216.847 cv
317.627 217.92 317.21 218.997 316.797 220.066 cv
316.306 221.115 315.819 222.154 315.345 223.168 cv
315.111 223.669 314.881 224.163 314.654 224.651 cv
314.424 225.135 314.145 225.612 313.902 226.075 cv
313.629 226.587 313.364 227.083 313.106 227.567 cv
310.034 228.645 307.643 230.242 304.133 231.275 cv
300.204 225.404 293.634 217.842 284.77 215.74 cv
283.3 204.426 281.797 193.706 281.797 193.706 cv
281.797 193.705 276.75 203.714 271.499 214.212 cv
270.851 215.523 270.2 216.84 269.556 218.144 cv
269.309 218.617 269.065 219.083 268.82 219.551 cv
268.608 218.987 268.376 218.394 268.07 217.766 cv
267.22 215.913 266.236 213.823 265.186 211.638 cv
264.659 210.55 264.119 209.434 263.573 208.305 cv
262.981 207.181 262.316 206.051 261.688 204.93 cv
260.412 202.708 259.148 200.502 257.97 198.445 cv
256.743 196.408 255.436 194.541 254.407 192.953 cv
252.301 189.802 250.916 187.723 250.916 187.723 cv
250.916 187.723 250.663 189.888 250.278 193.177 cv
250.063 194.809 249.911 196.708 249.567 198.741 cv
249.178 200.758 248.761 202.92 248.34 205.104 cv
248.123 206.187 247.942 207.268 247.699 208.334 cv
247.525 208.986 247.353 209.634 247.182 210.274 cv
235.781 207.885 218.743 209.871 214.743 217.825 cv
213.294 213.458 210.132 211.28 206.122 210.654 cv
204.163 189.348 201.828 166.002 201.829 166 cv
201.83 165.99 193.624 193.113 187.226 215.172 cv
184.328 216.673 181.551 218.432 179.091 220.3 cv
177.11 213.724 175.495 208.505 175.495 208.505 cv
175.496 208.504 169.752 219.191 164.74 228.933 cv
159.736 225.895 153.627 224.112 147.19 223.358 cv
144.787 215.255 142.597 208.128 142.597 208.127 cv
142.597 208.128 140.373 212.298 137.483 217.815 cv
137.158 216.85 136.833 215.884 136.508 214.917 cv
134.555 209.114 132.821 203.326 131.513 199.008 cv
130.224 194.682 129.375 191.834 129.375 191.834 cv
129.375 191.834 128.551 194.649 127.3 198.929 cv
126.079 203.216 124.437 208.977 123.019 214.934 cv
122.946 215.245 122.873 215.555 122.8 215.866 cv
122.45 214.978 122.098 214.085 121.747 213.194 cv
120.13 209.05 118.625 204.848 117.447 201.745 cv
116.221 198.645 115.414 196.603 115.414 196.603 cv
115.414 196.603 114.549 198.593 113.233 201.618 cv
111.882 204.638 110.016 208.648 108.253 212.873 cv
107.866 213.817 107.479 214.762 107.094 215.703 cv
103.934 210.404 100.694 205.189 100.694 205.189 cv
100.694 205.189 98.4493 207.697 95.617 210.931 cv
92.385 205.786 89.009 200.639 89.009 200.639 cv
89.009 200.639 86.4881 203.344 83.4239 206.711 cv
81.5212 201.631 80.0229 197.728 80.0229 197.728 cv
80.0229 197.728 77.3754 202.033 74.1325 207.412 cv
71.8874 188.628 68.9678 166.357 68.9678 166.357 cv
68.9692 166.357 61.8926 187.084 55.9118 205.175 cv
53.8969 200.495 52.2889 196.855 52.2889 196.855 cv
52.2889 196.855 49.9978 200.246 47.0853 204.636 cv
44.8232 200.634 42.9624 197.431 42.9624 197.431 cv
42.9624 197.432 40.7627 200.088 37.962 203.535 cv
35.505 195.557 33.2173 188.419 33.2173 188.419 cv
33.2173 188.419 32.4048 189.916 31.126 192.293 cv
29.456 172.683 27.6578 153.182 27.6578 153.182 cv
27.6585 153.182 20.7684 175.871 14.5804 196.739 cv
14.5746 196.617 14.5678 196.485 14.5624 196.365 cv
14.4849 194.664 14.443 193.252 14.4387 192.267 cv
14.4299 191.279 14.4732 190.717 14.4732 190.717 cv
14.4732 190.717 14.1021 191.232 13.5285 192.162 cv
12.9508 193.09 12.1588 194.429 11.234 196.048 cv
9.38353 199.287 6.99732 203.65 4.64242 208.108 cv
4.56086 208.263 li
4.45407 207.529 4.34614 206.792 4.24138 206.072 cv
4.10845 204.919 4.0582 203.792 3.9656 202.698 cv
3.80023 200.504 3.6468 198.467 3.51567 196.729 cv
3.25003 193.223 3.07497 190.914 3.07497 190.914 cv
3.07497 190.914 1.92479 193.122 .17709 196.472 cv
.120313 196.582 .0579035 196.704 0 196.816 cv
0 410.569 li
13.5005 410.565 27.0011 410.564 40.5016 410.558 cv
92.3618 410.536 144.222 410.564 196.082 410.575 cv
.168627 .580392 .431373 rgb
f
897.183 202.272 mo
896.644 203.342 896.04 204.453 895.508 205.591 cv
895.013 206.734 894.508 207.899 894.002 209.068 cv
893.935 209.224 li
893.605 204.977 893.467 200.975 893.469 197.834 cv
893.48 195.984 893.623 194.453 893.662 193.374 cv
893.721 192.293 893.754 191.68 893.754 191.681 cv
893.754 191.681 893.412 192.256 892.809 193.271 cv
892.225 194.289 891.296 195.748 890.332 197.54 cv
888.542 200.899 886.319 205.446 884.289 210.143 cv
884.2 209.887 884.111 209.628 884.022 209.372 cv
882.021 203.853 880.285 198.518 879.24 194.441 cv
878.923 193.425 878.797 192.492 878.627 191.663 cv
878.468 190.83 878.33 190.106 878.216 189.51 cv
877.989 188.309 877.86 187.628 877.86 187.627 cv
877.86 187.627 877.653 188.312 877.29 189.513 cv
877.108 190.118 876.888 190.854 876.634 191.7 cv
876.392 192.549 876.054 193.516 875.864 194.566 cv
874.88 198.772 873.935 204.513 873.237 210.235 cv
873.065 211.501 872.895 212.765 872.723 214.015 cv
872.375 214.003 872.028 214.009 871.68 214.004 cv
871.617 213.658 871.553 213.304 871.491 212.962 cv
871.293 211.798 871.173 210.657 871.016 209.549 cv
870.665 207.328 870.607 205.273 870.457 203.491 cv
870.369 202.599 870.39 201.79 870.39 201.068 cv
870.391 200.343 870.392 199.712 870.393 199.194 cv
870.395 198.15 870.397 197.558 870.397 197.557 cv
870.397 197.557 870.066 198.118 869.483 199.105 cv
869.191 199.603 868.836 200.207 868.428 200.903 cv
868.021 201.6 867.539 202.391 867.123 203.266 cv
866.263 205.011 865.135 207.075 864.215 209.319 cv
863.935 209.975 863.637 210.652 863.341 211.337 cv
862.323 207.675 861.257 204.278 860.539 201.594 cv
860.086 199.934 859.741 198.551 859.538 197.579 cv
859.329 196.606 859.21 196.051 859.21 196.051 cv
859.21 196.051 858.993 196.608 858.611 197.586 cv
858.224 198.568 857.725 199.981 857.164 201.691 cv
856.027 205.106 854.746 209.723 853.249 214.265 cv
852.906 215.334 852.538 216.394 852.154 217.433 cv
851.375 217.721 850.603 218.026 849.84 218.346 cv
849.381 215.248 848.94 212.368 848.687 210.055 cv
848.493 208.547 848.469 207.301 848.389 206.416 cv
848.33 205.532 848.296 205.029 848.296 205.029 cv
848.296 205.028 847.999 205.505 847.478 206.343 cv
846.976 207.184 846.162 208.395 845.349 209.872 cv
844.072 212.106 842.58 214.964 841.027 217.951 cv
840.291 215.2 839.563 212.649 839.071 210.605 cv
838.733 209.223 838.505 208.072 838.391 207.259 cv
838.273 206.448 838.266 205.975 838.266 205.975 cv
838.266 205.975 838.192 206.086 838.051 206.294 cv
837.905 206.503 837.712 206.815 837.473 207.215 cv
836.999 208.017 836.382 209.182 835.706 210.592 cv
834.376 213.348 832.808 217.043 831.129 220.723 cv
831.062 220.506 830.995 220.289 830.926 220.072 cv
829.705 216.264 828.42 212.524 827.672 209.744 cv
826.859 206.936 826.324 205.086 826.324 205.086 cv
826.324 205.086 825.521 206.97 824.301 209.827 cv
823.931 210.662 823.549 211.585 823.158 212.559 cv
822.383 209.241 821.861 207.005 821.861 207.004 cv
821.861 207.004 819.615 212.055 816.857 218.232 cv
816.742 217.801 816.626 217.37 816.508 216.93 cv
815.845 214.562 815.219 212.062 814.447 209.639 cv
812.881 204.794 811.331 200.072 810.129 196.579 cv
808.934 193.074 808.148 190.773 808.148 190.773 cv
808.148 190.773 805.944 200.454 803.654 210.464 cv
803.195 212.434 802.646 214.397 802.136 216.3 cv
801.256 211.098 800.611 207.283 800.611 207.283 cv
800.611 207.283 796.809 216.024 792.859 225.046 cv
792.312 226.311 791.764 227.584 791.225 228.841 cv
791.11 226.978 790.993 225.224 790.876 223.803 cv
790.712 221.82 790.604 220.515 790.604 220.514 cv
790.604 220.515 787.276 223.752 783.315 227.59 cv
783.225 225.789 783.194 224.095 783.177 222.649 cv
783.153 219.766 783.137 217.869 783.137 217.869 cv
783.137 217.869 781.847 219.667 779.887 222.393 cv
778.005 225.045 775.524 228.593 773.335 232.414 cv
772.945 231.285 772.549 230.135 772.157 228.985 cv
770.038 221.62 768 214.548 767.999 214.549 cv
767.999 214.548 764.704 221.844 761.368 229.535 cv
760.673 231.352 759.988 233.191 759.347 234.955 cv
757.301 226.974 754.88 218.179 754.88 218.18 cv
754.88 218.18 750.902 226.065 747.137 233.703 cv
745.351 223.104 743.093 210.845 743.093 210.847 cv
743.096 210.864 733.632 233.407 729.54 243.919 cv
728.49 244.278 727.464 244.574 726.474 244.777 cv
726.226 243.686 725.961 242.518 725.685 241.301 cv
725.277 239.592 724.889 237.814 724.408 236.031 cv
723.421 232.464 722.494 229.011 721.461 226.479 cv
720.521 223.968 719.903 222.318 719.903 222.318 cv
719.903 222.318 719.185 224.081 718.095 226.755 cv
717.11 229.394 715.348 232.94 713.656 236.487 cv
712.854 238.149 711.968 239.843 711.161 241.454 cv
706.909 241.572 702.108 242.807 698.221 244.064 cv
696.417 239.538 694.997 236.085 694.997 236.084 cv
694.997 236.085 689.719 244.354 684.86 252.128 cv
682.349 254.708 680.226 257.429 676.927 259.971 cv
673.654 256.801 670.247 253.686 670.247 253.686 cv
670.247 253.687 669.012 254.698 667.229 256.172 cv
664.174 248.253 660.288 238.964 660.288 238.969 cv
660.288 238.969 656.292 245.137 652.046 251.781 cv
651.451 250.693 651.071 250.039 651.071 250.039 cv
651.071 250.039 650.197 251.604 648.805 253.948 cv
648.257 254.88 647.624 255.939 646.957 257.085 cv
645.228 256.736 643.745 256.345 642.346 255.971 cv
641.573 254.117 640.775 252.208 639.983 250.314 cv
639.019 247.99 637.915 245.683 636.934 243.565 cv
635.918 241.443 634.84 239.513 633.987 237.875 cv
633.043 236.251 632.192 234.938 631.63 234.021 cv
631.058 233.11 630.734 232.591 630.734 232.592 cv
630.734 232.592 630.646 233.206 630.491 234.286 cv
630.326 235.364 630.136 236.891 629.824 238.728 cv
629.423 240.59 629.031 242.73 628.471 245.053 cv
627.878 247.39 627.296 249.849 626.58 252.381 cv
626.35 253.231 626.116 254.087 625.882 254.942 cv
623.09 255.383 620.787 255.997 618.757 256.74 cv
615.455 250.69 610.914 243.109 610.915 243.114 cv
610.915 243.114 608.68 245.91 605.811 249.526 cv
602.366 239.439 598.331 228.371 598.332 228.374 cv
598.336 228.402 589.782 250.569 585.762 261.807 cv
584.118 260.016 582.407 258.03 580.761 256.004 cv
577.945 252.566 575.212 249.124 573.049 246.64 cv
571.959 245.397 571.056 244.382 570.386 243.688 cv
569.727 242.993 569.353 242.6 569.353 242.599 cv
569.353 242.599 569.32 243.114 569.264 244.021 cv
569.219 244.922 569.097 246.223 568.949 247.782 cv
568.583 250.929 568.093 255.146 567.593 259.434 cv
567.307 262.04 567.125 264.704 567.089 267.198 cv
566.968 267.233 li
545.414 274.042 532.297 285.609 527.832 298.833 cv
526.428 303.016 526.452 307.096 525.612 311.238 cv
524.774 315.479 518.628 410.693 518.62 410.635 cv
518.619 410.633 705.375 410.535 758.488 410.566 cv
805.658 410.591 852.829 410.584 900 410.569 cv
900 196.816 li
899.167 198.43 898.213 200.279 897.183 202.272 cv
f
783.915 271.78 mo
753.156 280.773 503.097 311.779 399.605 284.158 cv
366.977 275.45 520.198 379.205 493.055 396 cv
900 396 li
900 246.678 li
885.654 248.265 871.3 250.472 856.933 253.412 cv
832.363 258.441 808.043 264.725 783.915 271.78 cv
.533333 .8 .27451 rgb
f
556.052 310.438 mo
443.852 287.6 330.764 275.912 217.925 258.16 cv
177.708 251.833 137.572 246.532 97.433 244.416 cv
64.9718 242.704 32.5089 243.082 0 246.678 cv
0 396 li
829.619 396 li
742.324 355.55 649.196 329.398 556.052 310.438 cv
f
0 396 mo
0 396 li
0 316.943 li
13.608 315.991 27.5369 314.878 41.5829 313.646 cv
34.7858 322.442 24.0985 338.42 24.0985 351.934 cv
24.0985 352.176 24.103 352.421 24.1118 352.667 cv
0 352.667 li
0 396 li
299.037 352.667 mo
280.184 352.667 li
280.66 352.275 281.154 351.877 281.645 351.449 cv
284.245 349.182 285.874 345.933 288.007 343.25 cv
287.929 343.248 287.851 343.248 287.772 343.248 cv
287.559 343.248 287.346 343.253 287.133 343.261 cv
286.952 343.269 li
284.122 343.438 281.162 344.437 279.036 346.358 cv
279.528 342.984 279.671 339.569 280.507 336.25 cv
276.671 338.767 273.548 343.441 273.236 348.065 cv
270.997 342.816 266.923 338.555 262.757 334.75 cv
263.35 338.754 264.354 342.748 266.181 346.378 cv
266.717 347.444 267.35 348.376 268.104 349.298 cv
269.471 350.971 267.941 350.459 267.302 352.123 cv
267.227 352.298 267.172 352.48 267.133 352.667 cv
255.561 352.667 li
252.327 346.568 248.741 341.843 242.683 338.015 cv
244.278 337.848 245.727 337.674 246.997 337.508 cv
250.654 337.028 252.843 336.61 252.88 336.61 cv
252.88 336.61 252.88 336.61 252.88 336.61 cv
252.88 336.61 252.88 336.61 252.88 336.61 cv
252.88 336.61 li
252.88 336.61 li
252.88 336.61 li
252.88 336.61 li
252.88 336.61 252.88 336.61 252.88 336.61 cv
251.984 334.7 250.81 332.44 249.528 329.9 cv
247.813 326.507 245.912 322.609 244.161 318.401 cv
242.535 318.572 240.987 318.742 239.778 318.906 cv
239.705 318.916 239.633 318.925 239.562 318.934 cv
238.122 319.118 237.182 319.243 237.178 319.243 cv
237.178 319.243 237.178 319.243 237.178 319.243 cv
237.178 319.243 237.598 319.108 238.299 318.885 cv
238.646 318.775 239.062 318.643 239.529 318.496 cv
239.529 318.496 li
239.529 318.496 li
240.635 318.138 242.054 317.726 243.55 317.307 cv
243.598 317.293 243.646 317.28 243.695 317.266 cv
243.695 317.266 li
243.695 317.266 li
241.091 310.888 238.95 303.861 237.736 297.152 cv
237.736 297.152 li
237.609 297.189 237.482 297.225 237.356 297.261 cv
236.479 297.513 235.626 297.76 234.854 297.974 cv
234.453 298.084 234.071 298.187 233.723 298.275 cv
232.564 298.582 231.795 298.789 231.795 298.79 cv
231.795 298.79 232.445 298.424 233.428 297.881 cv
233.876 297.642 234.384 297.354 234.923 297.044 cv
234.923 297.044 li
235.575 296.669 236.274 296.261 236.979 295.858 cv
237.14 295.763 237.3 295.669 237.461 295.575 cv
237.461 295.575 li
237.461 295.575 li
237.225 294.156 237.029 292.757 236.868 291.387 cv
244.292 290.408 251.719 289.385 258.912 288.169 cv
259.204 288.326 259.472 288.448 259.713 288.534 cv
259.713 288.534 li
262.57 289.665 266.643 290.119 271.266 290.289 cv
271.266 290.289 li
271.266 290.289 li
271.24 290.258 271.215 290.226 271.189 290.194 cv
271.189 290.194 li
271.215 290.226 271.24 290.258 271.266 290.289 cv
271.874 290.311 272.494 290.327 273.12 290.339 cv
273.12 290.339 li
274.19 290.361 275.284 290.37 276.401 290.37 cv
276.785 290.37 277.171 290.369 277.56 290.367 cv
277.915 290.369 278.27 290.37 278.629 290.37 cv
280.408 290.37 282.237 290.347 284.108 290.309 cv
286.881 291.612 289.961 292.497 293.431 292.762 cv
293.432 292.762 293.433 292.762 293.433 292.762 cv
293.926 292.762 295.759 296.47 296.163 297.03 cv
297.305 298.692 298.682 300.313 300.301 301.82 cv
301.767 303.184 303.411 304.476 305.241 305.648 cv
306.634 306.536 306.507 306.46 305.673 307.492 cv
305.251 308.013 304.847 308.541 304.463 309.074 cv
299.686 315.626 297.56 323.071 297.643 330.651 cv
295.652 331.084 293.887 331.98 292.47 333.452 cv
287.572 338.541 293.163 347.343 299.037 352.667 cv
250.633 352.667 mo
243.527 352.667 li
242.413 349.039 240.737 343.621 239.607 340.924 cv
239.231 340.086 238.841 339.245 238.441 338.403 cv
239.826 338.294 241.139 338.173 242.367 338.047 cv
244.478 343.743 246.881 348.679 250.633 352.667 cv
236.492 352.667 mo
215.126 352.667 li
215.165 352.369 215.185 352.075 215.185 351.785 cv
215.185 342.634 195.128 329.197 195.128 329.197 cv
195.128 329.197 175.07 341.823 175.07 351.785 cv
175.07 352.073 175.092 352.367 175.135 352.667 cv
173.025 352.667 li
176.571 347.185 178.752 339.523 179.182 333.837 cv
179.773 326.032 175.522 321.01 170.304 321.01 cv
167.258 321.01 163.883 322.721 160.948 326.59 cv
161.897 322.98 162.503 314.496 158.01 313.064 cv
157.572 312.925 157.128 312.859 156.682 312.859 cv
152.533 312.859 148.137 318.48 146.279 322.405 cv
147.739 317.701 148.045 309.653 146.608 302.759 cv
173.561 299.603 198.855 296.401 220.774 293.509 cv
222.129 293.325 223.491 293.142 224.857 292.961 cv
223.648 296.157 222.57 299.396 221.626 302.669 cv
222.541 303.017 223.421 303.319 224.145 303.555 cv
224.677 303.728 225.128 303.85 225.442 303.946 cv
225.757 304.038 225.936 304.091 225.936 304.091 cv
225.936 304.091 225.746 304.083 225.41 304.069 cv
225.075 304.051 224.588 304.042 224.006 304.002 cv
223.248 303.95 222.313 303.876 221.314 303.768 cv
219.214 311.301 217.819 319.011 217.152 326.795 cv
216.945 329.217 216.808 331.645 216.742 334.078 cv
216.686 334.418 216.652 334.755 216.719 335.069 cv
216.715 335.295 216.711 335.522 216.708 335.747 cv
216.708 335.747 216.708 335.747 216.708 335.747 cv
216.708 335.767 216.708 335.786 216.708 335.806 cv
216.707 335.821 216.707 335.836 216.707 335.852 cv
216.707 335.882 216.706 335.912 216.706 335.942 cv
216.705 335.982 216.705 336.022 216.705 336.063 cv
216.704 336.067 216.704 336.072 216.704 336.076 cv
216.696 336.834 216.695 337.592 216.7 338.35 cv
216.7 338.35 li
216.7 338.35 li
219.496 338.647 222.278 338.8 224.984 338.853 cv
225.742 338.868 226.493 338.875 227.238 338.875 cv
228.926 338.875 230.575 338.839 232.169 338.779 cv
233.017 338.745 233.848 338.704 234.662 338.658 cv
234.789 339.59 234.887 340.519 234.974 341.446 cv
234.974 341.446 li
235.148 343.961 235.794 349.051 236.492 352.667 cv
76.5417 352.667 mo
70.0407 352.667 li
70.0488 352.421 70.0529 352.177 70.0529 351.934 cv
70.0529 338.942 58.3448 321.604 51.6436 312.745 cv
57.8827 312.175 64.1334 311.585 70.3806 310.976 cv
71.0872 311.499 71.8287 311.995 72.6007 312.462 cv
73.887 313.258 75.2642 313.967 76.7293 314.586 cv
75.2831 315.886 73.9419 317.7 74.4139 319.616 cv
73.0387 319.03 71.491 318.813 70.0072 318.75 cv
70.1969 321.141 70.8194 322.816 71.9516 323.959 cv
69.4049 329.467 71.0571 345.274 76.5417 352.667 cv
425.781 346.481 mo
426.335 341.495 424.851 336.688 420.981 336.688 cv
419.792 336.688 418.379 337.142 416.729 338.183 cv
421.863 327.505 418.698 305.026 404.145 304.543 cv
403.947 304.537 403.751 304.533 403.557 304.533 cv
386.553 304.533 381.435 329.394 382.674 342.207 cv
381.468 339.552 380.333 339.004 378.889 339.004 cv
378.382 339.004 377.837 339.071 377.238 339.139 cv
376.638 339.206 375.984 339.274 375.259 339.274 cv
374.971 339.274 374.673 339.263 374.362 339.238 cv
374.295 339.232 374.226 339.229 374.158 339.229 cv
371.74 339.229 368.701 342.558 368.701 342.558 cv
368.701 342.558 363.833 328.117 351.562 328.117 cv
349.714 328.117 347.699 328.444 345.507 329.197 cv
339.88 331.131 327.754 338.971 330.201 345.73 cv
326.65 340.911 316.332 333.679 306.892 331.201 cv
305.959 324.835 306.533 318.416 309.369 312.45 cv
310.322 310.429 311.542 308.453 313.08 306.583 cv
313.824 305.677 314.643 304.795 315.538 303.945 cv
315.745 303.754 316.496 303.71 317.31 303.71 cv
317.661 303.71 318.024 303.718 318.359 303.727 cv
318.696 303.735 319.006 303.743 319.25 303.743 cv
319.368 303.743 319.47 303.741 319.553 303.736 cv
325.795 303.446 331.774 301.994 336.504 299.187 cv
337.121 299.242 337.728 299.268 338.322 299.268 cv
344.548 299.268 349.544 296.369 353.173 292.868 cv
403.1 298.312 452.867 306.774 503.419 316.784 cv
503.292 323.746 li
503.233 324.267 503.196 324.784 503.265 325.266 cv
503.246 326.303 li
503.246 326.303 503.246 326.303 503.246 326.303 cv
503.173 330.285 li
503.173 330.285 li
503.353 330.315 503.534 330.344 503.714 330.373 cv
496.074 332.018 488.444 333.641 480.81 335.247 cv
477.065 326.798 472.023 319.582 472.023 319.582 cv
472.023 319.582 465.066 328.94 461.426 339.287 cv
457.69 340.058 453.957 340.825 450.221 341.588 cv
448.016 339.516 445.582 338.704 443.071 338.704 cv
437.07 338.704 430.626 343.34 425.781 346.481 cv
252.88 336.61 mo
252.88 336.61 li
252.88 336.61 252.88 336.61 252.88 336.61 cv
252.88 336.61 252.88 336.61 252.88 336.61 cv
252.88 336.61 252.88 336.61 252.88 336.61 cv
92.2633 332.569 mo
91.2927 327.319 85.1529 320.675 79.5268 319.733 cv
79.8464 318.208 79.3706 316.775 78.6281 315.32 cv
80.1211 315.845 81.6947 316.284 83.3479 316.632 cv
86.4585 317.314 89.7874 317.67 93.2619 317.67 cv
94.9016 317.67 96.5732 317.591 98.27 317.429 cv
98.5519 317.394 98.8319 317.358 99.1111 317.32 cv
99.0306 319.795 98.9117 322.257 98.7497 324.683 cv
95.871 326.129 93.4264 328.839 92.2633 332.569 cv
121.037 331.292 mo
119.974 329.884 118.483 328.888 116.98 328.888 cv
115.824 328.888 114.662 329.476 113.68 330.916 cv
111.6 325.79 107.669 323.484 103.69 323.484 cv
103.568 323.484 103.447 323.486 103.325 323.491 cv
103.277 321.236 103.194 318.958 103.081 316.673 cv
110.391 315.266 116.64 312.83 121.683 309.535 cv
120.252 317.068 120.176 325.297 121.037 331.292 cv
145.539 324.31 mo
145.693 323.759 145.947 323.108 146.279 322.405 cv
146.058 323.12 145.812 323.766 145.539 324.31 cv
308.376 304.509 mo
301.253 300.738 296.864 295.545 294.299 290.023 cv
296.408 289.958 298.545 289.893 300.702 289.839 cv
305.041 289.769 309.418 289.736 313.777 289.736 cv
313.876 289.736 313.974 289.736 314.073 289.736 cv
314.553 289.744 315.033 289.753 315.513 289.764 cv
315.633 289.761 315.753 289.759 315.873 289.757 cv
315.72 291.331 315.888 292.902 316.542 294.383 cv
316.773 294.902 317.085 295.412 317.482 295.888 cv
318.097 296.626 318.72 296.562 317.733 297.249 cv
316.62 298.021 315.505 298.792 314.412 299.573 cv
312.224 301.139 310.157 302.75 308.376 304.509 cv
319.312 301.56 mo
318.964 301.56 318.616 301.556 318.267 301.549 cv
322.504 298.039 327.121 294.565 330.322 290.594 cv
334.528 290.971 338.732 291.372 342.934 291.795 cv
342.647 292.183 342.342 292.567 342.018 292.944 cv
340.424 294.799 338.357 296.49 335.858 297.852 cv
331.135 300.432 325.279 301.56 319.312 301.56 cv
339.116 298.158 mo
338.792 298.158 338.466 298.15 338.135 298.134 cv
340.715 296.312 342.631 294.172 344 291.902 cv
346.916 292.198 349.829 292.504 352.743 292.821 cv
349.213 295.791 344.675 298.158 339.116 298.158 cv
319.746 295.844 mo
317.579 294.259 316.812 292.04 316.764 289.743 cv
316.796 289.742 316.827 289.742 316.858 289.742 cv
318.11 289.746 319.356 289.753 320.602 289.762 cv
322.589 289.924 324.564 290.089 326.55 290.261 cv
324.592 292.237 322.266 294.072 319.746 295.844 cv
292.142 291.717 mo
289.85 291.717 287.5 291.159 285.254 290.284 cv
287.652 290.229 290.113 290.154 292.622 290.076 cv
292.808 290.61 293.012 291.142 293.233 291.673 cv
292.871 291.702 292.507 291.717 292.142 291.717 cv
.45098 .701961 .262745 rgb
f
900 352.667 mo
895.702 352.667 li
895.733 352.064 895.692 351.459 895.577 350.873 cv
895.54 350.698 li
895.381 349.961 895.204 349.228 895.007 348.5 cv
893.287 349.366 891.265 350.834 890.479 352.667 cv
869.432 352.667 li
873.41 346.918 866.376 337.587 858.923 334.716 cv
854.056 332.842 849.827 332.038 845.984 332.038 cv
837.2 332.038 830.432 336.24 822.661 341.461 cv
817.973 336.947 811.016 334.523 803.866 334.076 cv
803.892 331.696 803.876 329.275 803.824 326.839 cv
809.273 326.177 814.375 323.918 818.868 320.414 cv
843.059 320.283 870.795 318.985 900 316.943 cv
900 352.667 li
738.954 352.667 mo
730.48 352.667 li
730.471 350.352 730.339 347.995 730.122 345.513 cv
730.111 345.389 730.096 345.222 730.096 345.222 cv
730.096 345.222 730.102 345.279 730.116 345.436 cv
730.116 345.436 li
730.116 345.436 li
730.08 345.041 730.044 344.645 730.007 344.25 cv
728.786 345.773 727.686 347.407 726.871 349.186 cv
726.936 347.287 726.785 345.377 726.507 343.5 cv
724.257 345.353 722.021 347.733 721.144 350.573 cv
721.246 348.8 720.697 347.153 720.742 345.391 cv
720.798 343.156 720.174 340.863 719.507 338.75 cv
717.917 340.386 716.39 342.299 715.542 344.439 cv
715.198 343.375 714.845 342.315 714.507 341.25 cv
713.138 342.49 712.048 344.067 711.423 345.809 cv
709.958 342.158 707.144 339.272 704.007 337 cv
704.277 338.325 704.618 339.641 704.818 340.978 cv
705.136 342.451 705.346 343.945 705.659 345.419 cv
705.182 346.261 704.753 347.148 704.424 348.063 cv
699.98 346.671 695.526 345.303 691.068 343.961 cv
691.349 341.612 691.402 339.147 691.292 336.705 cv
692.012 327.897 691.144 319.115 688.483 310.722 cv
703.044 308.483 717.408 305.488 732.116 300.895 cv
731.793 306.281 736.378 310.378 744.886 313.395 cv
742.514 315.267 740.432 317.798 738.794 321.084 cv
735.151 328.391 731.422 344.077 738.954 352.667 cv
715.735 351.671 mo
715.707 351.662 715.677 351.652 715.65 351.643 cv
715.671 351.586 715.693 351.529 715.714 351.471 cv
715.721 351.538 715.727 351.604 715.735 351.671 cv
778.551 343.278 mo
779.034 342.652 779.57 342.062 780.14 341.497 cv
779.653 342.094 779.131 342.688 778.551 343.278 cv
780.14 341.497 mo
786.454 333.753 784.982 325.536 779.808 319.312 cv
780.141 319.337 780.481 319.361 780.817 319.385 cv
786.008 323.817 792.093 326.546 798.628 326.98 cv
798.63 326.98 798.63 326.98 798.631 326.98 cv
798.648 326.981 798.668 326.983 798.685 326.984 cv
798.686 326.984 798.687 326.984 798.689 326.984 cv
798.704 326.985 798.724 326.986 798.74 326.987 cv
798.742 326.987 798.745 326.988 798.747 326.988 cv
798.763 326.989 798.781 326.99 798.797 326.991 cv
798.8 326.991 798.802 326.991 798.805 326.991 cv
798.821 326.992 798.837 326.993 798.852 326.994 cv
798.857 326.994 798.86 326.994 798.864 326.995 cv
798.879 326.996 798.895 326.996 798.909 326.997 cv
798.914 326.998 798.918 326.998 798.922 326.998 cv
798.937 326.999 798.951 327 798.965 327 cv
798.971 327.001 798.976 327.001 798.981 327.001 cv
798.995 327.002 799.009 327.003 799.022 327.003 cv
799.028 327.004 799.033 327.004 799.039 327.004 cv
799.053 327.005 799.065 327.006 799.079 327.006 cv
799.086 327.007 799.092 327.007 799.099 327.007 cv
799.111 327.008 799.124 327.009 799.136 327.009 cv
799.143 327.009 799.15 327.01 799.157 327.01 cv
799.168 327.011 799.182 327.011 799.193 327.012 cv
799.201 327.012 799.208 327.013 799.216 327.013 cv
799.227 327.013 799.24 327.014 799.251 327.014 cv
799.258 327.015 799.267 327.015 799.274 327.015 cv
799.286 327.016 799.296 327.016 799.308 327.017 cv
799.317 327.017 799.325 327.018 799.334 327.018 cv
799.344 327.018 799.356 327.019 799.365 327.019 cv
799.374 327.02 799.383 327.02 799.392 327.02 cv
799.402 327.021 799.414 327.021 799.423 327.021 cv
799.432 327.022 799.442 327.022 799.451 327.022 cv
799.461 327.023 799.471 327.023 799.481 327.024 cv
799.49 327.024 799.501 327.024 799.51 327.025 cv
799.519 327.025 799.529 327.025 799.539 327.026 cv
799.548 327.026 799.559 327.026 799.569 327.027 cv
799.577 327.027 799.589 327.027 799.597 327.027 cv
799.607 327.028 799.617 327.028 799.626 327.028 cv
799.636 327.029 799.646 327.029 799.655 327.029 cv
799.666 327.03 799.676 327.03 799.687 327.03 cv
799.695 327.03 799.704 327.031 799.713 327.031 cv
799.724 327.031 799.734 327.031 799.746 327.032 cv
799.754 327.032 799.762 327.032 799.771 327.032 cv
799.782 327.033 799.795 327.033 799.806 327.033 cv
799.814 327.033 799.822 327.034 799.829 327.034 cv
799.841 327.034 799.853 327.034 799.865 327.035 cv
799.873 327.035 799.88 327.035 799.887 327.035 cv
799.9 327.035 799.913 327.036 799.925 327.036 cv
799.932 327.036 799.939 327.036 799.945 327.036 cv
799.958 327.036 799.97 327.037 799.983 327.037 cv
799.99 327.037 799.997 327.037 800.004 327.037 cv
800.017 327.037 800.029 327.038 800.042 327.038 cv
800.049 327.038 800.055 327.038 800.063 327.038 cv
800.076 327.038 800.089 327.039 800.102 327.039 cv
800.108 327.039 800.115 327.039 800.121 327.039 cv
800.135 327.039 800.15 327.039 800.164 327.039 cv
800.169 327.04 800.174 327.04 800.179 327.04 cv
800.194 327.04 800.208 327.04 800.223 327.04 cv
800.228 327.04 800.233 327.04 800.238 327.04 cv
800.252 327.04 800.266 327.04 800.279 327.041 cv
800.284 327.041 800.292 327.041 800.297 327.041 cv
800.31 327.041 800.324 327.041 800.338 327.041 cv
800.344 327.041 800.349 327.041 800.356 327.041 cv
800.372 327.041 800.389 327.041 800.406 327.041 cv
800.408 327.041 800.412 327.041 800.414 327.041 cv
800.433 327.041 800.453 327.041 800.473 327.041 cv
800.473 327.041 li
800.473 327.041 800.473 327.041 800.473 327.041 cv
800.668 327.041 800.862 327.039 801.056 327.035 cv
800.979 329.389 800.869 331.721 800.724 334.006 cv
792.785 334.147 784.984 336.696 780.14 341.497 cv
658.538 334.633 mo
640.079 329.593 621.523 324.943 602.938 320.63 cv
625.461 317.598 645.894 315.934 665.485 313.726 cv
660.429 318.523 657.068 326.441 658.538 334.633 cv
f
715.857 352.667 mo
715.235 352.667 li
715.381 352.329 715.519 351.988 715.65 351.643 cv
715.677 351.652 715.707 351.662 715.735 351.671 cv
715.77 352.003 715.811 352.335 715.857 352.667 cv
704.205 352.667 mo
688.43 352.667 li
689.86 350.221 690.681 347.201 691.068 343.961 cv
695.526 345.303 699.98 346.671 704.424 348.063 cv
704.363 348.232 704.306 348.401 704.252 348.571 cv
703.797 350.02 703.815 351.409 704.205 352.667 cv
601.436 352.667 mo
528.01 352.667 li
527.801 347.149 527.354 340.275 526.722 336.05 cv
555.138 328.179 580.111 323.703 602.938 320.63 cv
621.523 324.943 640.079 329.593 658.538 334.633 cv
658.949 336.921 659.737 339.228 660.97 341.497 cv
661.35 342.062 661.707 342.652 662.03 343.278 cv
661.642 342.688 661.294 342.094 660.97 341.497 cv
657.645 336.556 652.23 334 646.778 334 cv
641.456 334 636.101 336.434 632.62 341.461 cv
627.439 336.24 622.925 332.038 617.069 332.038 cv
614.507 332.038 611.688 332.842 608.443 334.716 cv
603.473 337.587 598.784 346.918 601.436 352.667 cv
521.275 352.667 mo
484.641 352.667 li
484.734 351.854 484.784 351.057 484.784 350.284 cv
484.784 349.997 484.777 349.707 484.763 349.414 cv
497.702 344.768 509.978 340.832 521.672 337.474 cv
521.567 341.538 521.381 347.674 521.275 352.667 cv
f
0 306.394 mo
0 255.905 li
23.374 252.743 47.6945 250.941 69.4018 250.838 cv
68.2357 254.381 67.0768 257.918 65.9222 261.388 cv
65.9685 260.982 66.0206 260.575 66.0785 260.165 cv
65.2726 262.692 64.5021 265.209 63.7935 267.71 cv
63.7935 267.71 li
59.821 278.604 58.97 288.176 60.8366 295.947 cv
61.0097 296.79 61.2172 297.612 61.4603 298.413 cv
41.8414 301.798 20.5268 304.528 0 306.394 cv
135.717 275.692 mo
135.087 272.299 134.017 268.769 132.487 265.13 cv
132.487 265.13 li
131.781 262.928 131.018 260.709 130.218 258.476 cv
133.958 260.129 136.762 262.067 138.444 264.308 cv
141.368 268.202 140.141 272.023 135.717 275.692 cv
.713725 .87451 .360784 rgb
f
844.865 309.197 mo
839.156 309.197 833.821 309.073 828.954 308.815 cv
834.006 300.436 837.03 289.782 837.03 278.182 cv
837.03 275.081 836.814 272.048 836.4 269.107 cv
854.267 263.575 876.654 259.063 900 255.905 cv
900 306.394 li
880.141 308.2 861.017 309.197 844.865 309.197 cv
f
140.352 291.186 mo
140.331 291.172 140.31 291.159 140.288 291.146 cv
140.699 288.868 140.874 286.474 141.007 283.75 cv
140.067 284.32 139.126 285.009 138.389 285.826 cv
137.042 287.12 136.164 288.546 135.65 290.051 cv
135.647 290.051 135.644 290.052 135.64 290.052 cv
136.146 287.77 136.404 285.38 136.404 282.896 cv
136.403 282.451 136.395 282.006 136.379 281.555 cv
137.339 280.822 138.276 280.131 139.172 279.526 cv
142.597 277.237 147.266 274.883 150.901 272.291 cv
151.75 271.621 152.665 271.021 153.376 270.395 cv
154.083 269.767 154.801 269.216 155.31 268.7 cv
156.37 267.638 157.007 267 157.007 267 cv
157.007 267 156.978 267.912 156.829 269.51 cv
156.744 270.305 156.526 271.216 156.301 272.29 cv
156.056 273.352 155.644 274.466 155.22 275.709 cv
154.234 278.061 152.895 280.713 151.126 282.962 cv
150.287 284.144 149.302 285.158 148.344 286.152 cv
147.359 287.106 146.328 287.934 145.325 288.644 cv
143.814 289.66 142.12 290.507 140.352 291.186 cv
.717647 .87451 .364706 rgb
f
611.99 312.703 mo
593.875 312.703 573.763 311.403 557.204 310.046 cv
555.419 309.9 553.676 309.756 551.978 309.614 cv
546.567 308.526 541.158 307.464 535.743 306.424 cv
535.697 306.265 535.652 306.105 535.606 305.945 cv
541.667 305.517 549.381 305.026 557.954 304.555 cv
578.386 303.459 603.606 302.24 623.013 301.515 cv
638.392 300.952 655.189 300.376 670.54 299.239 cv
671.65 301.684 672.556 304.171 673.272 306.686 cv
656.889 309.873 638.802 311.96 623.413 312.508 cv
619.735 312.643 615.911 312.703 611.99 312.703 cv
f
551.978 309.614 mo
546.077 309.122 540.744 308.664 536.268 308.274 cv
536.096 307.662 535.921 307.046 535.743 306.424 cv
541.158 307.464 546.567 308.526 551.978 309.614 cv
f
685.889 303.92 mo
685.013 301.969 684.03 300.042 682.939 298.151 cv
685.229 297.913 687.462 297.656 689.625 297.38 cv
692.061 297.081 694.41 296.793 696.656 296.518 cv
697.219 296.45 697.776 296.383 698.326 296.317 cv
698.871 296.229 699.41 296.143 699.942 296.058 cv
701.007 295.889 702.045 295.724 703.053 295.564 cv
707.085 294.908 710.687 294.448 713.612 293.803 cv
719.524 292.669 723.007 292 723.007 292 cv
723.007 292 719.474 293.349 713.574 295.602 cv
712.833 295.881 712.054 296.174 711.241 296.481 cv
710.417 296.75 709.557 297.03 708.664 297.321 cv
706.873 297.899 704.949 298.52 702.912 299.177 cv
698.845 300.573 694.221 301.692 689.299 303.049 cv
688.181 303.345 687.043 303.636 685.889 303.92 cv
f
699.572 260.51 mo
700.669 257.873 701.528 255.212 702.191 252.547 cv
699.654 252.547 li
695.423 264.419 687.061 275.92 671.959 283.915 cv
668.712 280.708 664.942 277.77 660.952 274.915 cv
658.96 273.489 656.927 272.084 654.896 270.677 cv
653.097 269.424 654.233 269.541 655.355 268.195 cv
656.078 267.327 656.647 266.397 657.069 265.451 cv
658.883 261.345 658.647 256.859 657.419 252.547 cv
656.319 252.547 li
657.246 258.177 656.573 264.206 651.226 268.114 cv
644.424 263.333 638.394 258.296 634.177 252.547 cv
627.892 252.547 li
633.246 262.417 644.142 270.414 653.924 278.517 cv
642.391 278.769 630.961 276.757 621.847 271.776 cv
617.291 269.293 613.522 266.21 610.616 262.827 cv
609.204 261.184 607.989 259.475 606.941 257.729 cv
606.169 256.454 605.174 252.751 603.341 252.663 cv
605.472 259.758 609.939 266.812 617.695 272.291 cv
602.857 273.027 591.85 264.514 584.588 256.218 cv
591.647 265.686 603.914 275.702 620.668 274.21 cv
629.294 279.329 640.197 281.976 651.579 282.506 cv
652.045 282.533 652.846 282.51 653.753 282.488 cv
655.788 282.439 658.358 282.389 658.899 282.886 cv
660.531 284.438 662.025 286.045 663.382 287.697 cv
666.187 291.108 668.411 294.71 670.148 298.395 cv
676.588 311.944 676.633 326.775 672.934 341.103 cv
672.061 344.524 670.784 347.918 669.486 351.311 cv
668.757 352.948 666.126 355.016 669.795 355.311 cv
675.549 355.758 681.33 356.08 687.136 356.273 cv
694.585 334.534 692.999 311.311 679.093 292.24 cv
678.394 291.267 677.658 290.305 676.888 289.355 cv
675.367 287.473 675.136 287.612 677.675 285.993 cv
681.013 283.855 684.01 281.5 686.682 279.013 cv
689.635 276.265 692.146 273.308 694.229 270.278 cv
694.966 269.256 698.316 262.48 699.21 262.495 cv
709.638 261.7 718.135 257.83 725.373 252.547 cv
724.576 252.547 li
717.325 257.251 708.125 261.203 699.572 260.51 cv
.207843 .133333 .215686 rgb
f
652.65 102.404 mo
615.737 99.9564 541.671 234.595 549.328 249.283 cv
561.242 272.134 738.952 272.13 743.031 249.283 cv
747.112 226.435 689.564 104.852 652.65 102.404 cv
.470588 .733333 .129412 rgb
f
588.195 163.311 mo
588.196 163.309 li
588.195 163.311 li
588.264 163.204 mo
588.269 163.197 588.277 163.185 588.282 163.177 cv
588.276 163.186 588.27 163.195 588.264 163.204 cv
588.318 163.122 mo
588.331 163.102 588.345 163.08 588.358 163.06 cv
588.344 163.082 588.332 163.101 588.318 163.122 cv
588.385 163.02 mo
588.399 162.998 588.413 162.978 588.427 162.955 cv
588.413 162.976 588.399 162.999 588.385 163.02 cv
level3{
gsave
clp
[1.01108e-008 -225.201 225.201 1.01108e-008 450 315.729 ]ct
/5 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~iV``6qu>UOs53_Rhu!H1qZ#CJs5!MNh>.*+q>]4Fs4dALgA1d&q#B%Bs4R2If_GL!q#At?s46rEf(T-p
pA`\:s4$cBeFijjp&EM5s3gQ>dIdIdo`*>2s3UB;d.@:`oDd,-s3C69c1Ct[o)Hu)s31$5bOPVUnc-c$
s2sj2amf>PnGgT!s2a^0a7'&Kn,LDqs2FF+`U<cEmf15ns247(_sRK@m/Orhs2"(%_!M*:li4cds1dn"
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.01108e-008 -225.201 225.201 1.01108e-008 450 315.729 ]ct
clp
/5 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~i8EPOi8<GLhr!>Khqm5HhVR,GhVI#Dh;$f@gt^]?gt^]?gtUT<gY1B8g=k97g=b04g"G'3g"=s0f\"j/
f\"g-f@SX+f@SU)f%/C%e^`4#e^`4#e^`1!eC;sre'ldpe'landaHRldaHOjdF$=fd*U.dd*U.dd*U+b
cd0q`cd0q_cHa_[c-=MXc-=MWbfn;Tbfn;Tbfn;SbKJ)Ob0%lLb0%lKaiVZHaiVZGaN2HDaN2HCa2c6@
a2c6@`l?$<`l?$<`Pog8`5KU4`5KU4_o'C0_o'C0_SX1,_SX1,_83t(_83t(^qdb$^V@Ou^V@Ou^V@Ou
~>
<~qtp9fqtg0cqYL'bqYL'bqYL'bqYBs_q>'j^q=sa[q"XXZq"XXZq"XXZq"XXZq"XXZq"OOWp\4FVp\4FV
p\4FVp\4FVp\4CTp@e4Rp@e1Pp%A"Np%A"Np%A"Np%@tLo^qeJo^qbHoCMSFoCMSFoCMSFoCMSFoCMPD
o()ABo()ABo()ABo()ABo()ABo()AAnaZ/=nF5r:nF5r:nF5r:nF5r9n*f`6n*f`6n*f`6n*f`6n*f`6
n*f`6mdBN2mdBN2mHs<.mHs<.mHs<.mHs<.mHs<.m-O**m-O**lg*m&lg*m&lg*m&lg*m&lK[["lK[["
~>
255 ]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /5 /Gradient get_res exec grestore
}if
np
588.466 162.895 mo
588.478 162.878 588.489 162.861 588.5 162.844 cv
588.489 162.861 588.478 162.878 588.466 162.895 cv
588.466 162.895 li
level3{
gsave
clp
[1.01108e-008 -225.201 225.201 1.01108e-008 450 315.729 ]ct
/6 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~eGB3oq>\n=s3^ZBdJ<ghq#A\8s3CE>c1q=`p]&J3s3(-9bP(tYp&E/+s2aj4a7TDPo`)r&s2FU0`:O#I
oDc`!s2+@,_=@Q@nc-Dos1e('^@;0:n,L)is1Ie"]C,^1mf0lds1.Os\F'=*m/OQ\s0h7n[Hmk"li4<V
s0CqiZK_Col2S$Qs01bfYNZ"hkl7dJs/bA_XQKP`k5VIDs/G,[WTF/YjSu1>s/"fVUZDHLj8Yh5s.JBO
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.01108e-008 -225.201 225.201 1.01108e-008 450 315.729 ]ct
clp
/6 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~e'ldpe'c[mda?IidEp7ed*U.dd*L%acd'h]cHXVYc-4DUbfn;Tbfe2QbK@uMb0%lLb/qcIaiMQEaN)?A
a2c3>`l?$<`l?!:`Pod6`5KR2_o'C0_o'@._SX.*_83q&^qd_"^V@Ou^V@Ls^:q:o]tM+m]tM(k]Y(kg
]=Y\d]"5J`\[f8]\[f8\\@B&X\$riT[^NWQ[^NWP[C*EL['[3HZa7!DZEgd@Z*CR=Z*CR<Yct@9Yct@8
YHP.5Y-+q1Xf\_-XK8M)X/i;%X/i;%WiE)!WMukrW2QYnW2QYnVl-GjVl-DgUnjc\U8"BVTqS0RTV.sN
~>
<~q>'j^q=sa[q"XXZq"XXZq"XXZq"OOWp\4FVp\4FVp\4FVp\+=Sp@e4Rp@\+Op%A"Np%7nKo^h\GoCMSF
oCMSFoCMSFoCMPDo()ABo()ABo()ABo()>@naZ/>naZ,<nF5r:nF5o8n*f`6n*f`6n*f]4mdBN2mdBK0
mHs<.mHs<.mHs<.mHs<-m-O**m-O*)lg*m%lK[["lK[["lK[["lK[[!l07Hsl07Hrkih6okih6okih6o
kih6okND$kkND$kk2tggjlPUcjlPUcjlPUcjlPUcjQ,C_jQ,C_j5]1[j5]1[j5]1[j5]1[io8tWio8tW
~>
255 ]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /6 /Gradient get_res exec grestore
}if
np
588.451 162.919 mo
588.456 162.911 588.462 162.903 588.466 162.895 cv
588.466 162.895 li
588.461 162.904 588.457 162.91 588.451 162.919 cv
level3{
gsave
clp
[1.01108e-008 -225.201 225.201 1.01108e-008 450 315.729 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.01108e-008 -225.201 225.201 1.01108e-008 450 315.729 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
588.503 162.84 mo
588.524 162.808 588.543 162.779 588.564 162.747 cv
588.542 162.781 588.525 162.806 588.503 162.84 cv
588.57 162.737 mo
593.173 155.721 597.961 148.879 602.818 142.467 cv
602.819 142.467 li
597.962 148.879 593.173 155.722 588.57 162.737 cv
606.065 138.261 mo
606.064 138.261 li
608.707 134.901 611.357 131.689 614.003 128.659 cv
614.004 128.659 li
611.359 131.687 608.706 134.903 606.065 138.261 cv
619.202 122.941 mo
619.202 122.941 li
623.758 118.143 628.252 113.987 632.584 110.691 cv
632.584 110.691 li
628.253 113.986 623.758 118.143 619.202 122.941 cv
level3{
gsave
clp
[1.01108e-008 -225.201 225.201 1.01108e-008 450 315.729 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.01108e-008 -225.201 225.201 1.01108e-008 450 315.729 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
632.584 110.691 mo
632.584 110.691 li
638.976 105.828 645.017 102.836 650.376 102.421 cv
645.015 102.834 638.979 105.825 632.584 110.691 cv
level3{
gsave
clp
[8.3442e-009 185.854 -185.854 8.3442e-009 450 -16.251 ]ct
/7 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~5f<Uf_uE-Bs$am+7`><t`W&TMs%LH49um9/a8]#Ws&-r<<6>/@ao>Gas&mME>0HqObl;"ns'O"M@Eng^
cMqJ$s(9RVB@$Tmd/Rn.s)$0`DpeT(df4@9s)ZZhG16J8eGjdCs*</pI+J=Hf)L6Ns+/f%K@p3Wf`-ZX
s+oA.M;%ueg]*5es,Yq7OPKkuh#EPms-;F?QJVY/huB/&s-qpGS`'O>iW#V1s.\KPUZ2<Mj8Z(<s/>#Y
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.3442e-009 185.854 -185.854 8.3442e-009 450 -16.251 ]ct
clp
/7 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~5<qJ!5X@_(6UX=16q'O577Ka:7n?3C8kVfM92&#Q9MJ5U9hnJ[:f1(e;,U:j;cH^r<E<.$<``@)=BSd0
=]np4>[1Q??!UcC?=$uG?smDO@U`hWA7T7_AS#IcAnG[hBPD3rC2.O"Ci!s*DJjB2Df9T6EH-#>EcQ5B
FEM_LG'8%QGB\7UG^+IYH@(!dI!pElIXZ`qIt3'#JV&K+K7ef0KS5#4KnbA=LkpkDM2@(HMMmCON/`jY
O,o?_OH>QcOcbcgP*;,pQ'IW"QBml(R$a;0R[T\6S"#q<SXl=BStDXJTqS0RU8"BVUSFW\V5:&eVl-Gj
~>
<~_SX1,_SX1,_Sa:/_o'C0_o0L3`5KU4`5T^7`Q#p;`l?$<`l?$<`lH-?a2l?CaN2HDaN2HDaN;QGai_cK
b0%oNbKJ)PbKJ)PbKJ,Rbfn>Vc-=MXc-=MXc-=PZcHab^cd0q`cd0tbd*U.dd*U1fdF$@hdF$CjdaHRl
daHRme'ldpe'ldqeC<!ue^`4#e^`4#e^`4$f%/F(f@SX+f@SX+f@SX,f\"j0g"G'4g=k97g=k97g=k98
gY:K;gY:K;gY:K;gt^]?h;-oChVR,GhVR,GhVR,Ghr!>Ki8EPOi8EPOi8EPOiSibSio8tWio8tWj5]1[
~>
255 ]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /7 /Gradient get_res exec grestore
}if
np
614.004 128.659 mo
614.003 128.659 li
615.741 126.669 617.476 124.759 619.202 122.941 cv
619.202 122.941 li
617.475 124.76 615.743 126.668 614.004 128.659 cv
level3{
gsave
clp
[8.34414e-009 185.853 -185.853 8.34414e-009 450 -16.25 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.34414e-009 185.853 -185.853 8.34414e-009 450 -16.25 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
602.818 142.467 mo
603.897 141.044 604.981 139.639 606.064 138.261 cv
606.065 138.261 li
604.98 139.639 603.898 141.043 602.819 142.467 cv
602.818 142.467 li
level3{
gsave
clp
[1.01108e-008 -225.201 225.201 1.01108e-008 450 315.729 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.01108e-008 -225.201 225.201 1.01108e-008 450 315.729 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
655.472 102.811 mo
655.472 102.811 li
655.472 102.811 li
655.419 102.8 mo
655.418 102.8 li
655.419 102.8 li
655.365 102.788 mo
655.364 102.788 li
655.365 102.788 li
655.312 102.777 mo
655.309 102.776 655.312 102.777 655.309 102.776 cv
655.312 102.777 li
655.258 102.766 mo
655.256 102.765 li
655.258 102.766 li
655.15 102.743 mo
655.148 102.743 li
655.15 102.743 li
655.096 102.733 mo
655.093 102.732 655.097 102.733 655.095 102.732 cv
655.096 102.733 li
655.042 102.722 mo
655.041 102.722 li
655.042 102.722 li
654.239 102.581 mo
654.239 102.581 li
654.239 102.581 li
654.192 102.573 mo
654.189 102.573 654.186 102.573 654.184 102.572 cv
654.186 102.573 654.189 102.573 654.192 102.573 cv
654.139 102.566 mo
654.135 102.565 654.135 102.565 654.13 102.564 cv
654.134 102.565 654.136 102.565 654.139 102.566 cv
654.089 102.558 mo
654.084 102.557 654.08 102.557 654.076 102.556 cv
654.08 102.557 654.084 102.557 654.089 102.558 cv
654.036 102.55 mo
654.031 102.55 654.027 102.549 654.022 102.548 cv
654.026 102.549 654.031 102.55 654.036 102.55 cv
653.984 102.543 mo
653.98 102.542 653.972 102.541 653.967 102.541 cv
653.973 102.541 653.979 102.542 653.984 102.543 cv
653.931 102.536 mo
653.926 102.535 653.918 102.534 653.914 102.533 cv
653.92 102.534 653.924 102.535 653.931 102.536 cv
653.878 102.528 mo
653.871 102.527 653.866 102.527 653.859 102.526 cv
653.866 102.527 653.871 102.527 653.878 102.528 cv
653.825 102.521 mo
653.818 102.52 653.813 102.52 653.806 102.519 cv
653.812 102.52 653.818 102.52 653.825 102.521 cv
653.772 102.514 mo
653.765 102.513 653.758 102.513 653.751 102.512 cv
653.759 102.513 653.764 102.513 653.772 102.514 cv
653.719 102.508 mo
653.712 102.507 653.704 102.506 653.698 102.505 cv
653.705 102.506 653.711 102.507 653.719 102.508 cv
653.666 102.501 mo
653.659 102.5 653.65 102.499 653.643 102.498 cv
653.65 102.499 653.658 102.5 653.666 102.501 cv
653.612 102.494 mo
653.603 102.493 653.599 102.493 653.59 102.492 cv
653.597 102.493 653.604 102.493 653.612 102.494 cv
653.558 102.488 mo
653.549 102.487 653.544 102.486 653.535 102.485 cv
653.543 102.486 653.551 102.487 653.558 102.488 cv
653.505 102.482 mo
653.498 102.481 653.489 102.48 653.482 102.479 cv
653.49 102.48 653.497 102.481 653.505 102.482 cv
653.451 102.476 mo
653.445 102.475 653.435 102.474 653.428 102.473 cv
653.436 102.474 653.444 102.475 653.451 102.476 cv
653.397 102.47 mo
653.391 102.469 653.382 102.468 653.375 102.467 cv
653.383 102.468 653.39 102.469 653.397 102.47 cv
653.344 102.464 mo
653.337 102.463 653.328 102.462 653.321 102.462 cv
653.328 102.462 653.337 102.463 653.344 102.464 cv
653.291 102.458 mo
653.284 102.458 653.274 102.457 653.267 102.456 cv
653.275 102.457 653.283 102.458 653.291 102.458 cv
653.237 102.453 mo
653.228 102.452 653.222 102.452 653.213 102.451 cv
653.221 102.451 653.23 102.452 653.237 102.453 cv
653.184 102.448 mo
653.175 102.447 653.169 102.446 653.16 102.446 cv
653.167 102.446 653.176 102.447 653.184 102.448 cv
653.13 102.443 mo
653.121 102.442 653.114 102.441 653.105 102.44 cv
653.114 102.441 653.122 102.442 653.13 102.443 cv
653.077 102.438 mo
653.068 102.437 653.061 102.436 653.052 102.436 cv
653.061 102.436 653.068 102.437 653.077 102.438 cv
653.024 102.433 mo
653.015 102.432 653.006 102.432 652.997 102.431 cv
653.006 102.432 653.015 102.432 653.024 102.433 cv
652.97 102.428 mo
652.961 102.428 652.952 102.427 652.943 102.426 cv
652.952 102.427 652.962 102.428 652.97 102.428 cv
652.917 102.424 mo
652.908 102.423 652.897 102.422 652.888 102.422 cv
652.898 102.422 652.907 102.423 652.917 102.424 cv
650.377 102.421 mo
650.396 102.42 650.413 102.418 650.432 102.417 cv
650.413 102.418 650.396 102.42 650.377 102.421 cv
652.864 102.42 mo
652.852 102.419 652.847 102.418 652.836 102.418 cv
652.846 102.418 652.854 102.419 652.864 102.42 cv
650.432 102.417 mo
650.469 102.414 650.506 102.412 650.543 102.409 cv
650.508 102.411 650.467 102.414 650.432 102.417 cv
652.81 102.416 mo
652.799 102.415 652.792 102.414 652.78 102.413 cv
652.79 102.414 652.8 102.415 652.81 102.416 cv
652.757 102.412 mo
652.746 102.411 652.735 102.41 652.723 102.409 cv
652.734 102.41 652.746 102.411 652.757 102.412 cv
650.544 102.409 mo
650.562 102.408 650.579 102.407 650.597 102.405 cv
650.578 102.407 650.563 102.408 650.544 102.409 cv
652.704 102.408 mo
652.686 102.407 652.668 102.406 652.65 102.404 cv
652.668 102.405 652.686 102.407 652.704 102.408 cv
650.602 102.405 mo
650.656 102.402 650.709 102.399 650.764 102.396 cv
650.71 102.398 650.655 102.402 650.602 102.405 cv
652.65 102.404 mo
652.319 102.382 651.981 102.371 651.644 102.371 cv
651.628 102.371 651.61 102.371 651.594 102.371 cv
651.61 102.371 651.628 102.371 651.644 102.371 cv
651.982 102.371 652.318 102.382 652.65 102.404 cv
650.766 102.395 mo
650.784 102.394 650.801 102.394 650.819 102.393 cv
650.801 102.394 650.785 102.394 650.766 102.395 cv
650.823 102.392 mo
650.858 102.391 650.893 102.389 650.928 102.387 cv
650.891 102.389 650.86 102.391 650.823 102.392 cv
650.933 102.387 mo
650.949 102.386 650.968 102.386 650.984 102.385 cv
650.965 102.386 650.951 102.386 650.933 102.387 cv
650.989 102.385 mo
651.005 102.384 651.024 102.383 651.041 102.383 cv
651.022 102.383 651.007 102.384 650.989 102.385 cv
651.043 102.383 mo
651.061 102.382 651.077 102.381 651.095 102.381 cv
651.079 102.381 651.059 102.382 651.043 102.383 cv
651.097 102.381 mo
651.113 102.38 651.131 102.38 651.147 102.379 cv
651.131 102.38 651.113 102.38 651.097 102.381 cv
651.155 102.379 mo
651.171 102.378 651.188 102.378 651.204 102.377 cv
651.188 102.378 651.171 102.378 651.155 102.379 cv
651.21 102.377 mo
651.243 102.376 651.279 102.376 651.312 102.375 cv
651.278 102.376 651.244 102.376 651.21 102.377 cv
651.318 102.375 mo
651.333 102.374 651.352 102.374 651.367 102.374 cv
651.351 102.374 651.334 102.374 651.318 102.375 cv
651.376 102.374 mo
651.392 102.373 651.409 102.373 651.425 102.373 cv
651.409 102.373 651.392 102.373 651.376 102.374 cv
651.427 102.373 mo
651.445 102.373 651.46 102.372 651.477 102.372 cv
651.461 102.372 651.443 102.373 651.427 102.373 cv
651.482 102.372 mo
651.498 102.372 651.515 102.372 651.531 102.372 cv
651.512 102.372 651.5 102.372 651.482 102.372 cv
651.539 102.372 mo
651.555 102.372 651.571 102.372 651.587 102.371 cv
651.571 102.372 651.555 102.372 651.539 102.372 cv
level3{
gsave
clp
[8.3442e-009 185.854 -185.854 8.3442e-009 450 -16.251 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.3442e-009 185.854 -185.854 8.3442e-009 450 -16.251 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
573.295 187.795 mo
577.885 179.684 582.912 171.391 588.195 163.311 cv
588.196 163.309 li
588.219 163.274 588.242 163.239 588.264 163.204 cv
588.27 163.195 588.276 163.186 588.282 163.177 cv
588.295 163.157 588.305 163.142 588.318 163.122 cv
588.332 163.101 588.344 163.082 588.358 163.06 cv
588.367 163.048 588.377 163.033 588.385 163.02 cv
588.399 162.999 588.413 162.976 588.427 162.955 cv
588.435 162.943 588.443 162.931 588.451 162.919 cv
588.457 162.91 588.461 162.904 588.466 162.895 cv
588.478 162.878 588.489 162.861 588.5 162.844 cv
588.503 162.84 li
588.525 162.806 588.542 162.781 588.564 162.747 cv
588.565 162.744 588.569 162.739 588.57 162.737 cv
593.173 155.722 597.962 148.879 602.819 142.467 cv
603.898 141.043 604.98 139.639 606.065 138.261 cv
608.706 134.903 611.359 131.687 614.004 128.659 cv
615.743 126.668 617.475 124.76 619.202 122.941 cv
623.758 118.143 628.253 113.986 632.584 110.691 cv
638.979 105.825 645.015 102.834 650.376 102.421 cv
650.377 102.421 li
650.396 102.42 650.413 102.418 650.432 102.417 cv
650.432 102.417 li
650.467 102.414 650.508 102.411 650.543 102.409 cv
650.544 102.409 li
650.563 102.408 650.578 102.407 650.597 102.405 cv
650.598 102.405 650.6 102.405 650.602 102.405 cv
650.655 102.402 650.71 102.398 650.764 102.396 cv
650.766 102.395 li
650.785 102.394 650.801 102.394 650.819 102.393 cv
650.821 102.393 650.821 102.393 650.823 102.392 cv
650.86 102.391 650.891 102.389 650.928 102.387 cv
650.93 102.387 650.931 102.387 650.933 102.387 cv
650.951 102.386 650.965 102.386 650.984 102.385 cv
650.987 102.385 650.986 102.385 650.989 102.385 cv
651.007 102.384 651.022 102.383 651.041 102.383 cv
651.042 102.383 651.042 102.383 651.043 102.383 cv
651.059 102.382 651.079 102.381 651.095 102.381 cv
651.097 102.381 li
651.113 102.38 651.131 102.38 651.147 102.379 cv
651.15 102.379 651.152 102.379 651.155 102.379 cv
651.171 102.378 651.188 102.378 651.204 102.377 cv
651.207 102.377 651.207 102.377 651.21 102.377 cv
651.244 102.376 651.278 102.376 651.312 102.375 cv
651.315 102.375 651.316 102.375 651.318 102.375 cv
651.334 102.374 651.351 102.374 651.367 102.374 cv
651.371 102.374 651.372 102.374 651.376 102.374 cv
651.392 102.373 651.409 102.373 651.425 102.373 cv
651.427 102.373 li
651.443 102.373 651.461 102.372 651.477 102.372 cv
651.479 102.372 651.48 102.372 651.482 102.372 cv
651.5 102.372 651.512 102.372 651.531 102.372 cv
651.533 102.372 651.536 102.372 651.539 102.372 cv
651.555 102.372 651.571 102.372 651.587 102.371 cv
651.59 102.371 651.592 102.371 651.594 102.371 cv
651.61 102.371 651.628 102.371 651.644 102.371 cv
651.981 102.371 652.319 102.382 652.65 102.404 cv
652.65 102.404 li
652.65 102.404 li
652.668 102.406 652.686 102.407 652.704 102.408 cv
652.71 102.408 652.717 102.409 652.723 102.409 cv
652.735 102.41 652.746 102.411 652.757 102.412 cv
652.766 102.412 652.771 102.413 652.78 102.413 cv
652.792 102.414 652.799 102.415 652.81 102.416 cv
652.818 102.416 652.828 102.417 652.836 102.418 cv
652.847 102.418 652.852 102.419 652.864 102.42 cv
652.871 102.42 652.88 102.421 652.888 102.422 cv
652.897 102.422 652.908 102.423 652.917 102.424 cv
652.926 102.425 652.934 102.425 652.943 102.426 cv
652.952 102.427 652.961 102.428 652.97 102.428 cv
652.979 102.429 652.988 102.43 652.997 102.431 cv
653.006 102.432 653.015 102.432 653.024 102.433 cv
653.034 102.434 653.042 102.435 653.052 102.436 cv
653.061 102.436 653.068 102.437 653.077 102.438 cv
653.086 102.439 653.096 102.44 653.105 102.44 cv
653.114 102.441 653.121 102.442 653.13 102.443 cv
653.14 102.444 653.15 102.445 653.16 102.446 cv
653.169 102.446 653.175 102.447 653.184 102.448 cv
653.194 102.449 653.203 102.45 653.213 102.451 cv
653.222 102.452 653.228 102.452 653.237 102.453 cv
653.247 102.454 653.257 102.455 653.267 102.456 cv
653.274 102.457 653.284 102.458 653.291 102.458 cv
653.302 102.46 653.31 102.46 653.321 102.462 cv
653.328 102.462 653.337 102.463 653.344 102.464 cv
653.355 102.465 653.364 102.466 653.375 102.467 cv
653.382 102.468 653.391 102.469 653.397 102.47 cv
653.407 102.471 653.418 102.472 653.428 102.473 cv
653.435 102.474 653.445 102.475 653.451 102.476 cv
653.461 102.477 653.472 102.478 653.482 102.479 cv
653.489 102.48 653.498 102.481 653.505 102.482 cv
653.515 102.483 653.526 102.484 653.535 102.485 cv
653.544 102.486 653.549 102.487 653.558 102.488 cv
653.57 102.489 653.578 102.49 653.59 102.492 cv
653.599 102.493 653.603 102.493 653.612 102.494 cv
653.622 102.496 653.633 102.497 653.643 102.498 cv
653.65 102.499 653.659 102.5 653.666 102.501 cv
653.676 102.502 653.688 102.504 653.698 102.505 cv
653.704 102.506 653.712 102.507 653.719 102.508 cv
653.729 102.509 653.741 102.51 653.751 102.512 cv
653.758 102.513 653.765 102.513 653.772 102.514 cv
653.783 102.516 653.795 102.517 653.806 102.519 cv
653.813 102.52 653.818 102.52 653.825 102.521 cv
653.836 102.523 653.848 102.524 653.859 102.526 cv
653.866 102.527 653.871 102.527 653.878 102.528 cv
653.889 102.53 653.903 102.532 653.914 102.533 cv
653.918 102.534 653.926 102.535 653.931 102.536 cv
653.943 102.537 653.955 102.539 653.967 102.541 cv
653.972 102.541 653.98 102.542 653.984 102.543 cv
653.996 102.545 654.01 102.547 654.022 102.548 cv
654.027 102.549 654.031 102.55 654.036 102.55 cv
654.049 102.552 654.062 102.554 654.076 102.556 cv
654.08 102.557 654.084 102.557 654.089 102.558 cv
654.102 102.56 654.117 102.562 654.13 102.564 cv
654.135 102.565 654.135 102.565 654.139 102.566 cv
654.155 102.568 654.168 102.57 654.184 102.572 cv
654.186 102.573 654.189 102.573 654.192 102.573 cv
654.207 102.576 654.223 102.578 654.239 102.581 cv
654.239 102.581 li
654.505 102.622 654.772 102.669 655.041 102.722 cv
655.042 102.722 li
655.06 102.725 655.077 102.729 655.095 102.732 cv
655.097 102.733 655.093 102.732 655.096 102.733 cv
655.114 102.736 655.131 102.74 655.148 102.743 cv
655.15 102.743 li
655.185 102.751 655.22 102.758 655.256 102.765 cv
655.258 102.766 li
655.276 102.769 655.292 102.773 655.309 102.776 cv
655.312 102.777 655.309 102.776 655.312 102.777 cv
655.329 102.781 655.346 102.784 655.364 102.788 cv
655.365 102.788 li
655.383 102.792 655.4 102.796 655.418 102.8 cv
655.419 102.8 li
655.437 102.804 655.454 102.807 655.472 102.811 cv
655.472 102.811 li
672.929 106.635 694.323 134.573 711.619 165.332 cv
711.619 165.332 li
711.618 165.363 711.617 165.394 711.615 165.425 cv
711.615 165.429 711.615 165.434 711.614 165.439 cv
711.613 165.469 711.611 165.5 711.61 165.531 cv
711.61 165.533 711.61 165.535 711.609 165.537 cv
711.606 165.602 711.603 165.667 711.599 165.732 cv
711.599 165.733 711.599 165.734 711.599 165.735 cv
711.555 166.571 711.493 167.408 711.413 168.247 cv
711.413 168.247 711.413 168.247 711.413 168.247 cv
711.407 168.313 711.4 168.378 711.394 168.443 cv
711.393 168.446 711.393 168.449 711.393 168.452 cv
711.39 168.484 711.387 168.515 711.384 168.546 cv
711.383 168.549 711.383 168.553 711.383 168.556 cv
711.38 168.585 711.377 168.613 711.374 168.642 cv
711.373 168.646 711.373 168.65 711.373 168.654 cv
711.37 168.683 711.367 168.712 711.364 168.741 cv
711.363 168.748 711.362 168.755 711.362 168.762 cv
711.358 168.791 711.355 168.821 711.352 168.85 cv
711.352 168.852 711.352 168.854 711.352 168.856 cv
711.349 168.883 711.346 168.91 711.343 168.937 cv
711.342 168.946 711.341 168.955 711.34 168.964 cv
711.337 168.991 711.334 169.017 711.331 169.044 cv
711.33 169.054 711.329 169.063 711.328 169.073 cv
711.326 169.092 711.324 169.111 711.322 169.131 cv
711.321 169.142 711.319 169.154 711.318 169.166 cv
711.315 169.19 711.313 169.213 711.31 169.237 cv
711.309 169.251 711.307 169.264 711.305 169.278 cv
711.304 169.293 711.302 169.307 711.3 169.322 cv
711.298 169.346 711.295 169.37 711.292 169.394 cv
711.291 169.405 711.29 169.416 711.288 169.427 cv
711.286 169.445 711.284 169.462 711.282 169.479 cv
711.282 169.481 711.282 169.484 711.282 169.486 cv
711.277 169.523 711.273 169.561 711.268 169.599 cv
711.268 169.604 711.267 169.609 711.266 169.614 cv
711.117 170.873 710.927 172.135 710.693 173.4 cv
695.543 149.496 677.386 125.902 650.281 125.9 cv
650.279 125.9 650.275 125.9 650.273 125.9 cv
650.273 125.9 li
650.273 125.9 li
650.271 125.9 li
646.053 125.9 641.625 126.47 636.953 127.7 cv
636.953 127.7 li
607.495 135.236 591.265 163.475 573.295 187.795 cv
.615686 .811765 .168627 rgb
f
636.953 127.7 mo
607.495 135.236 591.265 163.475 573.295 187.795 cv
569.977 193.658 566.888 199.423 564.099 204.94 cv
566.748 209.701 570.034 214.188 574.121 218.275 cv
580.649 224.803 589.625 228.883 598.601 230.515 cv
641.849 239.491 697.336 223.171 709.576 178.292 cv
710.022 176.656 710.393 175.025 710.693 173.4 cv
693.186 145.777 671.657 118.567 636.953 127.7 cv
.470588 .733333 .129412 rgb
f
693.161 264.56 mo
693.275 259.826 693.575 255.112 693.575 250.45 cv
693.575 246.432 693.351 242.453 692.591 238.533 cv
695.421 247.19 699.648 255.226 703.425 263.461 cv
700.132 263.869 696.703 264.236 693.161 264.56 cv
.364706 .556863 .121569 rgb
f
692.591 238.533 mo
691.908 236.444 691.302 234.32 690.808 232.147 cv
691.599 234.255 692.174 236.385 692.591 238.533 cv
f
565.059 258.114 mo
564.1 257.834 563.17 257.548 562.283 257.254 cv
564.744 248.155 567.801 239.176 570.857 230.515 cv
567.826 239.229 565.678 248.647 565.059 258.114 cv
f
594.456 263.541 mo
594.454 263.541 594.454 263.541 594.453 263.54 cv
594.457 263.541 594.451 263.54 594.456 263.541 cv
594.355 263.529 mo
594.35 263.528 594.345 263.528 594.34 263.527 cv
594.344 263.528 594.35 263.528 594.355 263.529 cv
594.274 263.519 mo
594.251 263.517 594.227 263.514 594.205 263.511 cv
594.224 263.514 594.254 263.517 594.274 263.519 cv
594.182 263.509 mo
593.384 263.415 592.589 263.318 591.804 263.22 cv
591.804 263.22 li
592.592 263.319 593.381 263.414 594.182 263.509 cv
.145098 .486274 .415686 rgb
f
591.804 263.22 mo
591.495 263.181 591.189 263.142 590.882 263.103 cv
590.882 263.103 li
591.187 263.142 591.497 263.181 591.804 263.22 cv
591.804 263.22 li
.176471 .113725 .207843 rgb
f
575.178 260.566 mo
574.236 260.376 573.313 260.181 572.412 259.981 cv
573.317 260.181 574.233 260.375 575.178 260.565 cv
575.178 260.566 575.178 260.566 575.178 260.566 cv
742.875 249.908 mo
742.875 249.907 li
742.875 249.908 742.875 249.908 742.875 249.908 cv
742.881 249.889 mo
742.882 249.886 li
742.882 249.887 742.881 249.888 742.881 249.889 cv
742.887 249.869 mo
742.888 249.866 li
742.888 249.867 742.888 249.868 742.887 249.869 cv
742.9 249.827 mo
742.901 249.825 742.901 249.824 742.901 249.823 cv
742.901 249.824 742.901 249.825 742.9 249.827 cv
742.906 249.807 mo
742.907 249.806 742.907 249.804 742.908 249.802 cv
742.907 249.804 742.907 249.806 742.906 249.807 cv
742.912 249.789 mo
742.913 249.786 742.913 249.785 742.914 249.782 cv
742.913 249.785 742.912 249.787 742.912 249.789 cv
742.919 249.764 mo
742.92 249.762 742.92 249.761 742.921 249.758 cv
742.92 249.76 742.919 249.762 742.919 249.764 cv
742.924 249.745 mo
742.925 249.743 742.926 249.74 742.927 249.737 cv
742.926 249.74 742.925 249.743 742.924 249.745 cv
742.93 249.726 mo
742.93 249.724 742.931 249.721 742.932 249.718 cv
742.931 249.721 742.93 249.724 742.93 249.726 cv
742.935 249.708 mo
742.936 249.705 742.937 249.702 742.937 249.699 cv
742.937 249.702 742.936 249.705 742.935 249.708 cv
742.942 249.682 mo
742.943 249.679 742.944 249.676 742.944 249.673 cv
742.944 249.676 742.943 249.679 742.942 249.682 cv
742.947 249.663 mo
742.948 249.659 742.949 249.657 742.95 249.653 cv
742.949 249.656 742.948 249.66 742.947 249.663 cv
742.952 249.645 mo
742.953 249.641 742.954 249.638 742.955 249.634 cv
742.954 249.638 742.953 249.641 742.952 249.645 cv
742.956 249.628 mo
742.96 249.614 742.963 249.602 742.966 249.588 cv
742.963 249.601 742.96 249.614 742.956 249.628 cv
742.968 249.581 mo
742.969 249.577 742.97 249.573 742.971 249.569 cv
742.97 249.573 742.969 249.577 742.968 249.581 cv
742.973 249.562 mo
742.974 249.558 742.974 249.555 742.975 249.551 cv
742.974 249.555 742.974 249.559 742.973 249.562 cv
742.977 249.544 mo
742.979 249.535 742.981 249.527 742.983 249.517 cv
742.981 249.526 742.979 249.535 742.977 249.544 cv
742.984 249.516 mo
742.985 249.512 742.985 249.508 742.986 249.504 cv
742.985 249.508 742.985 249.512 742.984 249.516 cv
742.988 249.498 mo
742.989 249.494 742.99 249.49 742.99 249.486 cv
742.99 249.49 742.989 249.494 742.988 249.498 cv
742.992 249.479 mo
742.993 249.475 742.994 249.472 742.995 249.467 cv
742.994 249.471 742.993 249.475 742.992 249.479 cv
742.996 249.462 mo
742.998 249.453 743 249.443 743.002 249.435 cv
743 249.444 742.998 249.453 742.996 249.462 cv
743.002 249.433 mo
743.003 249.429 743.004 249.426 743.004 249.422 cv
743.004 249.425 743.003 249.429 743.002 249.433 cv
743.006 249.413 mo
743.007 249.411 743.008 249.406 743.008 249.403 cv
743.008 249.406 743.007 249.41 743.006 249.413 cv
743.01 249.395 mo
743.011 249.391 743.011 249.388 743.012 249.384 cv
743.011 249.388 743.011 249.391 743.01 249.395 cv
743.014 249.376 mo
743.015 249.37 743.016 249.365 743.017 249.359 cv
743.016 249.365 743.015 249.37 743.014 249.376 cv
.145098 .486274 .415686 rgb
f
549.376 249.373 mo
549.376 249.373 549.376 249.372 549.375 249.372 cv
549.376 249.373 549.375 249.372 549.376 249.373 cv
549.367 249.355 mo
549.366 249.355 549.366 249.355 549.366 249.354 cv
549.367 249.355 li
level3{
gsave
clp
[1.01108e-008 -225.201 225.201 1.01108e-008 450 315.729 ]ct
/8 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~UsSh1ch=*Zp7]e*U!EA(cM!jTp79J%SB^bsbk@OMp6s1uREP;kb4_.Cp6EbnQ-&`aanCq>p6*MjOiR0W
a7bS6p5[/dNQ(UM`V,5.p56f^MT#4F_tJo(p4pNYKu3P:_=iPup4L0SK#%)2^\32mp4'jNI_PN(^@lrf
p3XLHHG&rs]_6T^p3=4CGImKk](U6Vp2de<Ek1ma\FspPp2IM7Dn#FX[e=RHp2%/1CUNkN[.\4@p1Ui,
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.01108e-008 -225.201 225.201 1.01108e-008 450 315.729 ]ct
clp
/8 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~USFTZUS=KWU7n9STqJ'OTV.sMT:VXGSt2FCSXc4?S=?";S!oe7R[T\6R[KS3R@'A/R$X/*QBd`#Q'@Mt
Pa%DsPa%AqPEV/mP*1riOcb`eOH>NaO,o<]NfK*YNK&mUN/W[QMi3IMMMd7IM2@(GM2@%ELkphALPLV=
KnY56KS5#2K7ef/K7ef.JqAT*JUrB&J:N0"It)rsIXZ`oI=6NkI!g<gH[C*cH?sm_H$O[[G^+IWGB\7T
GB\7TG'8%PF`heJF)uDDEcQ2@EH,u<EH,u<E,]c8Df9Q4DJj?0D/F-,Ci!p(CMR^$C2.KuBk_9qBP;'m
~>
<~cd0q`cd'h]cHa_\cHXVYc-=MXc-=MXc-=MXc-4DUbfn;Tbfe2QbKJ)PbK@uMb0%lLb/qcIaiMQEaN2HD
aN2HDaN2HDaN2EBa2c6@a2c3>`l?$<`l?!:`Pog8`Pod6`5KU4`5KR2_o'C0_o'C0_o'@._SX1,_SX.*
_83t(_83t'^qdb$^qdb#^V@Ou^V@Ot^:q=q^:q=q^:q=p]tM+m]tM+l]Y(ni]Y(nh]=Y\e]=Y\d]"5Ja
]"5Ja\[f8]\[f8]\@B&Y\@B&Y\@B&Y\$riU\$riU[^NWQ[^NWQ[C*EM[C*EM['[3I['[3IZa7!EZa7!E
~>
245 ]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /8 /Gradient get_res exec grestore
}if
np
743.019 249.348 mo
743.02 249.345 743.02 249.343 743.021 249.34 cv
743.02 249.343 743.02 249.345 743.019 249.348 cv
.145098 .486274 .415686 rgb
f
549.357 249.338 mo
549.357 249.338 549.356 249.337 549.356 249.336 cv
549.357 249.338 li
level3{
gsave
clp
[1.01108e-008 -225.201 225.201 1.01108e-008 450 315.729 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.01108e-008 -225.201 225.201 1.01108e-008 450 315.729 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
743.023 249.329 mo
743.023 249.326 743.024 249.323 743.025 249.321 cv
743.024 249.323 743.023 249.326 743.023 249.329 cv
.145098 .486274 .415686 rgb
f
549.348 249.32 mo
549.347 249.319 549.347 249.319 549.347 249.318 cv
549.348 249.32 li
level3{
gsave
clp
[1.01108e-008 -225.201 225.201 1.01108e-008 450 315.729 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.01108e-008 -225.201 225.201 1.01108e-008 450 315.729 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
743.027 249.308 mo
743.027 249.307 743.028 249.303 743.028 249.302 cv
743.028 249.304 743.027 249.306 743.027 249.308 cv
.145098 .486274 .415686 rgb
f
549.339 249.304 mo
549.338 249.302 549.338 249.301 549.337 249.3 cv
549.338 249.302 549.338 249.302 549.339 249.304 cv
level3{
gsave
clp
[1.01108e-008 -225.201 225.201 1.01108e-008 450 315.729 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.01108e-008 -225.201 225.201 1.01108e-008 450 315.729 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
549.328 249.283 mo
549.328 249.283 li
549.325 249.276 549.321 249.27 549.318 249.264 cv
549.321 249.27 549.325 249.276 549.328 249.283 cv
549.328 249.283 li
549.315 249.259 mo
549.312 249.253 549.309 249.246 549.306 249.24 cv
549.309 249.247 549.312 249.252 549.315 249.259 cv
level3{
gsave
clp
[1.01108e-008 -225.201 225.201 1.01108e-008 450 315.729 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.01108e-008 -225.201 225.201 1.01108e-008 450 315.729 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
743.037 249.249 mo
743.038 249.243 743.04 249.236 743.041 249.23 cv
743.04 249.236 743.039 249.243 743.037 249.249 cv
.145098 .486274 .415686 rgb
f
549.305 249.238 mo
549.302 249.233 549.299 249.227 549.297 249.221 cv
549.3 249.227 549.302 249.232 549.305 249.238 cv
549.294 249.215 mo
549.291 249.209 549.288 249.203 549.285 249.197 cv
549.287 249.202 549.291 249.209 549.294 249.215 cv
level3{
gsave
clp
[1.01108e-008 -225.201 225.201 1.01108e-008 450 315.729 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.01108e-008 -225.201 225.201 1.01108e-008 450 315.729 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
743.043 249.215 mo
743.045 249.208 743.046 249.201 743.047 249.194 cv
743.046 249.202 743.045 249.208 743.043 249.215 cv
.145098 .486274 .415686 rgb
f
549.284 249.194 mo
549.281 249.188 549.278 249.183 549.275 249.177 cv
549.278 249.183 549.281 249.189 549.284 249.194 cv
level3{
gsave
clp
[1.01108e-008 -225.201 225.201 1.01108e-008 450 315.729 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.01108e-008 -225.201 225.201 1.01108e-008 450 315.729 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
743.049 249.181 mo
743.05 249.174 743.051 249.169 743.052 249.162 cv
743.051 249.168 743.05 249.174 743.049 249.181 cv
.145098 .486274 .415686 rgb
f
549.272 249.171 mo
549.27 249.165 549.267 249.159 549.264 249.154 cv
549.267 249.159 549.27 249.165 549.272 249.171 cv
549.262 249.148 mo
549.259 249.143 549.257 249.138 549.255 249.133 cv
549.257 249.138 549.26 249.144 549.262 249.148 cv
level3{
gsave
clp
[1.01108e-008 -225.201 225.201 1.01108e-008 450 315.729 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.01108e-008 -225.201 225.201 1.01108e-008 450 315.729 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
743.055 249.146 mo
743.056 249.139 743.057 249.135 743.058 249.127 cv
743.057 249.133 743.056 249.14 743.055 249.146 cv
.145098 .486274 .415686 rgb
f
549.251 249.126 mo
549.249 249.12 549.246 249.115 549.244 249.109 cv
549.246 249.115 549.249 249.12 549.251 249.126 cv
level3{
gsave
clp
[1.01108e-008 -225.201 225.201 1.01108e-008 450 315.729 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.01108e-008 -225.201 225.201 1.01108e-008 450 315.729 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
743.061 249.111 mo
743.062 249.104 743.062 249.101 743.063 249.093 cv
743.063 249.099 743.062 249.106 743.061 249.111 cv
.145098 .486274 .415686 rgb
f
549.241 249.103 mo
549.239 249.098 549.237 249.093 549.234 249.088 cv
549.236 249.093 549.239 249.098 549.241 249.103 cv
549.231 249.08 mo
549.229 249.075 549.226 249.07 549.224 249.064 cv
549.226 249.069 549.229 249.076 549.231 249.08 cv
level3{
gsave
clp
[1.01108e-008 -225.201 225.201 1.01108e-008 450 315.729 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.01108e-008 -225.201 225.201 1.01108e-008 450 315.729 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
743.066 249.077 mo
743.067 249.071 743.068 249.062 743.069 249.057 cv
743.068 249.064 743.067 249.069 743.066 249.077 cv
.145098 .486274 .415686 rgb
f
549.22 249.056 mo
549.218 249.051 549.216 249.047 549.215 249.043 cv
549.217 249.047 549.218 249.051 549.22 249.056 cv
level3{
gsave
clp
[1.01108e-008 -225.201 225.201 1.01108e-008 450 315.729 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.01108e-008 -225.201 225.201 1.01108e-008 450 315.729 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
743.072 249.042 mo
743.072 249.037 743.074 249.027 743.075 249.022 cv
743.074 249.028 743.073 249.036 743.072 249.042 cv
.145098 .486274 .415686 rgb
f
549.211 249.034 mo
549.209 249.029 549.207 249.024 549.205 249.019 cv
549.207 249.024 549.209 249.029 549.211 249.034 cv
549.2 249.009 mo
549.198 249.004 549.197 249.001 549.195 248.996 cv
549.197 249 549.199 249.005 549.2 249.009 cv
level3{
gsave
clp
[1.01108e-008 -225.201 225.201 1.01108e-008 450 315.729 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.01108e-008 -225.201 225.201 1.01108e-008 450 315.729 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
743.077 249.007 mo
743.078 249 743.079 248.993 743.08 248.986 cv
743.079 248.993 743.078 249.001 743.077 249.007 cv
.145098 .486274 .415686 rgb
f
549.191 248.987 mo
549.19 248.983 549.188 248.978 549.186 248.974 cv
549.188 248.978 549.19 248.983 549.191 248.987 cv
level3{
gsave
clp
[1.01108e-008 -225.201 225.201 1.01108e-008 450 315.729 ]ct
/9 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~[*nZSdIsoop9W0?ZI/BNd.X]jp92g9YKupFch=Kep8uX6Xj6XAcM"<ap8ZF3WQk.9c1\*[p8?..Vp"e3
bP%gVp8,t+UrrD+b4_UPp7f\&Tum#%anDFMp7TM#T?-_taS)1Gp797tSB(>m`qGn@p7'%pR`4ug`V,\;
p6`elQc/T``:fJ7p6ESiQ,E<[_tK;2p6*;dP/?pT_=iu,p5d#_O21IM^\3]&p5Qi\N5,(F^\3T#p56TX
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.01108e-008 -225.201 225.201 1.01108e-008 450 315.729 ]ct
clp
/9 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~Za7!EZa-mBZEgdAZEgdAZE^[>Z*:I:Yck76YHG%2Y-+q1Y-"h.XfSV*XK8M)XK8M)XK/D&X/`2"Wi;ts
WMuhpW2QYnW2QVlVl-DhVP^5fVP^5fVP^2dV59u`Unjc\USFQXU8"BVU8"?TTqS-PTV.sNTV.sNTV.pL
T:_aISt;OESXl=AS=H+>S=H+=S"#n9R[T\6R[T\6R[T\5R@0J1R$a8-Q^=&*Q^=&)QBmi%Q'IW!Pa%Ds
Pa%DsPa%DsPEV2oP*1ukOcbcgOcbcgOH>QcO,o?_NfK-[NfK-[NfK-[NK&pWN/W^SMi3LOMi3LOMMd:K
~>
<~dF$@hdEp7ed*U.dd*U.dd*U.dd*L%acd0q`cd'h]cHa_\cHa_\cHa_\cHXVYc-=MXc-=MXc-=MXc-=MX
c-=JVbfn;Tbfn8RbKJ)PbKJ&Nb0%lLb0%lLb0%lLb0%iJaiVZHaiVWFaN2HDaN2HDaN2HDaN2HDaN2EB
a2c6@a2c6@a2c6@a2c6?`l?$<`l?$;`Pog7`5KU4`5KU4`5KU4`5KU3_o'C0_o'C0_o'C0_o'C0_o'C0
_o'C0_SX1,_SX1,_83t(_83t(_83t(^qdb$^qdb$^V@Ou^V@Ou^:q=q^:q=q^:q=q^:q=q^:q=q^:q=q
~>
245 ]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /9 /Gradient get_res exec grestore
}if
np
743.082 248.972 mo
743.083 248.965 743.084 248.959 743.085 248.952 cv
743.084 248.958 743.083 248.966 743.082 248.972 cv
.145098 .486274 .415686 rgb
f
549.181 248.96 mo
549.179 248.957 549.178 248.953 549.176 248.95 cv
549.178 248.953 549.179 248.957 549.181 248.96 cv
549.172 248.939 mo
549.171 248.935 549.169 248.932 549.168 248.928 cv
549.169 248.931 549.171 248.936 549.172 248.939 cv
level3{
gsave
clp
[1.01108e-008 -225.201 225.201 1.01108e-008 450 315.729 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.01108e-008 -225.201 225.201 1.01108e-008 450 315.729 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
743.087 248.937 mo
743.089 248.93 743.089 248.924 743.09 248.916 cv
743.089 248.924 743.089 248.929 743.087 248.937 cv
.145098 .486274 .415686 rgb
f
549.161 248.912 mo
549.16 248.909 549.159 248.905 549.158 248.902 cv
549.159 248.905 549.16 248.909 549.161 248.912 cv
level3{
gsave
clp
[1.01108e-008 -225.201 225.201 1.01108e-008 450 315.729 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.01108e-008 -225.201 225.201 1.01108e-008 450 315.729 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
743.093 248.901 mo
743.094 248.894 743.094 248.888 743.095 248.881 cv
743.094 248.888 743.094 248.895 743.093 248.901 cv
.145098 .486274 .415686 rgb
f
549.154 248.891 mo
549.152 248.888 549.151 248.885 549.15 248.882 cv
549.151 248.885 549.152 248.888 549.154 248.891 cv
level3{
gsave
clp
[1.01108e-008 -225.201 225.201 1.01108e-008 450 315.729 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.01108e-008 -225.201 225.201 1.01108e-008 450 315.729 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
743.098 248.866 mo
743.099 248.859 743.099 248.852 743.1 248.845 cv
743.1 248.852 743.099 248.859 743.098 248.866 cv
.145098 .486274 .415686 rgb
f
549.143 248.861 mo
549.142 248.859 549.141 248.857 549.14 248.855 cv
549.141 248.857 549.142 248.859 549.143 248.861 cv
549.135 248.841 mo
549.135 248.84 549.134 248.839 549.134 248.837 cv
549.134 248.838 549.135 248.84 549.135 248.841 cv
level3{
gsave
clp
[1.01108e-008 -225.201 225.201 1.01108e-008 450 315.729 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.01108e-008 -225.201 225.201 1.01108e-008 450 315.729 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
743.102 248.83 mo
743.103 248.823 743.104 248.816 743.105 248.809 cv
743.104 248.816 743.103 248.824 743.102 248.83 cv
.145098 .486274 .415686 rgb
f
549.124 248.811 mo
549.124 248.809 549.123 248.808 549.123 248.806 cv
549.123 248.808 549.124 248.809 549.124 248.811 cv
level3{
gsave
clp
[1.01108e-008 -225.201 225.201 1.01108e-008 450 315.729 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.01108e-008 -225.201 225.201 1.01108e-008 450 315.729 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
743.107 248.795 mo
743.108 248.788 743.109 248.78 743.11 248.772 cv
743.109 248.78 743.108 248.787 743.107 248.795 cv
.145098 .486274 .415686 rgb
f
549.106 248.76 mo
549.106 248.759 549.106 248.758 549.106 248.758 cv
549.106 248.76 li
level3{
gsave
clp
[1.01108e-008 -225.201 225.201 1.01108e-008 450 315.729 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.01108e-008 -225.201 225.201 1.01108e-008 450 315.729 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
743.112 248.759 mo
743.113 248.752 743.114 248.744 743.115 248.737 cv
743.114 248.745 743.113 248.752 743.112 248.759 cv
743.117 248.723 mo
743.118 248.714 743.118 248.709 743.12 248.7 cv
743.119 248.708 743.118 248.715 743.117 248.723 cv
.145098 .486274 .415686 rgb
f
743.121 248.687 mo
743.122 248.678 743.123 248.673 743.124 248.664 cv
743.123 248.672 743.122 248.68 743.121 248.687 cv
743.126 248.651 mo
743.127 248.642 743.127 248.636 743.128 248.627 cv
743.128 248.635 743.127 248.643 743.126 248.651 cv
743.13 248.615 mo
743.131 248.606 743.132 248.6 743.133 248.591 cv
743.132 248.599 743.131 248.606 743.13 248.615 cv
743.134 248.578 mo
743.135 248.571 743.136 248.561 743.137 248.553 cv
743.136 248.562 743.135 248.57 743.134 248.578 cv
743.138 248.542 mo
743.139 248.533 743.14 248.526 743.141 248.517 cv
743.14 248.525 743.139 248.534 743.138 248.542 cv
743.143 248.505 mo
743.143 248.497 743.144 248.488 743.145 248.48 cv
743.144 248.489 743.143 248.496 743.143 248.505 cv
743.147 248.468 mo
743.147 248.461 743.148 248.451 743.149 248.443 cv
743.148 248.452 743.147 248.46 743.147 248.468 cv
743.15 248.431 mo
743.151 248.424 743.152 248.413 743.153 248.405 cv
743.152 248.414 743.151 248.423 743.15 248.431 cv
743.154 248.395 mo
743.155 248.387 743.156 248.376 743.157 248.368 cv
743.156 248.377 743.155 248.386 743.154 248.395 cv
743.158 248.357 mo
743.159 248.348 743.16 248.34 743.161 248.33 cv
743.16 248.339 743.159 248.349 743.158 248.357 cv
743.162 248.32 mo
743.163 248.311 743.163 248.302 743.164 248.293 cv
743.163 248.303 743.163 248.311 743.162 248.32 cv
743.165 248.283 mo
743.166 248.274 743.167 248.263 743.168 248.254 cv
743.167 248.264 743.166 248.274 743.165 248.283 cv
743.168 248.25 mo
743.169 248.239 743.17 248.227 743.171 248.216 cv
743.17 248.228 743.169 248.239 743.168 248.25 cv
743.172 248.212 mo
743.174 248.189 743.176 248.164 743.178 248.14 cv
743.176 248.165 743.174 248.188 743.172 248.212 cv
743.178 248.14 mo
743.191 247.988 743.201 247.836 743.21 247.678 cv
743.201 247.835 743.191 247.989 743.178 248.14 cv
743.21 247.675 mo
743.211 247.662 743.211 247.649 743.212 247.636 cv
743.211 247.649 743.211 247.662 743.21 247.675 cv
743.212 247.636 mo
743.213 247.624 743.213 247.611 743.214 247.6 cv
743.213 247.612 743.213 247.624 743.212 247.636 cv
743.214 247.595 mo
743.215 247.583 743.215 247.571 743.216 247.559 cv
743.215 247.571 743.215 247.583 743.214 247.595 cv
743.216 247.555 mo
743.217 247.543 743.217 247.533 743.218 247.521 cv
743.217 247.533 743.217 247.544 743.216 247.555 cv
743.218 247.514 mo
743.218 247.504 743.219 247.489 743.219 247.479 cv
743.219 247.49 743.219 247.502 743.218 247.514 cv
743.22 247.475 mo
743.22 247.463 743.221 247.451 743.221 247.439 cv
743.221 247.451 743.22 247.463 743.22 247.475 cv
743.221 247.434 mo
743.222 247.422 743.222 247.411 743.223 247.399 cv
743.222 247.41 743.222 247.422 743.221 247.434 cv
743.223 247.393 mo
743.223 247.381 743.224 247.371 743.224 247.36 cv
743.224 247.371 743.223 247.382 743.223 247.393 cv
743.225 247.351 mo
743.225 247.341 743.225 247.327 743.226 247.317 cv
743.225 247.329 743.225 247.34 743.225 247.351 cv
743.226 247.312 mo
743.226 247.3 743.227 247.289 743.227 247.277 cv
743.227 247.289 743.226 247.3 743.226 247.312 cv
743.227 247.27 mo
743.228 247.26 743.228 247.246 743.228 247.235 cv
743.228 247.247 743.228 247.259 743.227 247.27 cv
743.229 247.229 mo
743.229 247.219 743.229 247.206 743.229 247.195 cv
743.229 247.207 743.229 247.218 743.229 247.229 cv
743.23 247.186 mo
743.23 247.176 743.23 247.163 743.231 247.153 cv
743.23 247.165 743.23 247.175 743.23 247.186 cv
743.231 247.147 mo
743.231 247.135 743.231 247.123 743.232 247.111 cv
743.231 247.123 743.231 247.135 743.231 247.147 cv
743.232 247.105 mo
743.232 247.093 743.232 247.082 743.233 247.07 cv
743.232 247.081 743.232 247.093 743.232 247.105 cv
743.233 247.063 mo
743.233 247.053 743.233 247.039 743.233 247.029 cv
743.233 247.04 743.233 247.052 743.233 247.063 cv
743.234 247.019 mo
743.234 247.007 743.234 246.999 743.234 246.986 cv
743.234 246.997 743.234 247.009 743.234 247.019 cv
743.234 246.979 mo
743.234 246.967 743.235 246.956 743.235 246.944 cv
743.235 246.955 743.234 246.967 743.234 246.979 cv
743.235 246.938 mo
743.235 246.926 743.235 246.913 743.235 246.901 cv
743.235 246.914 743.235 246.926 743.235 246.938 cv
743.235 246.898 mo
743.236 246.885 743.236 246.872 743.236 246.859 cv
743.236 246.872 743.236 246.885 743.235 246.898 cv
743.236 246.854 mo
743.236 246.841 743.236 246.828 743.236 246.816 cv
743.236 246.829 743.236 246.841 743.236 246.854 cv
743.236 246.815 mo
743.238 246.66 743.237 246.505 743.235 246.345 cv
743.237 246.504 743.238 246.661 743.236 246.815 cv
743.235 246.342 mo
743.235 246.329 743.235 246.316 743.235 246.303 cv
743.235 246.316 743.235 246.329 743.235 246.342 cv
743.235 246.298 mo
743.234 246.285 743.234 246.275 743.234 246.262 cv
743.234 246.274 743.234 246.286 743.235 246.298 cv
743.234 246.253 mo
743.234 246.242 743.234 246.232 743.233 246.221 cv
743.234 246.232 743.234 246.243 743.234 246.253 cv
743.233 246.208 mo
743.233 246.198 743.233 246.19 743.233 246.181 cv
743.233 246.189 743.233 246.199 743.233 246.208 cv
743.232 246.162 mo
743.232 246.153 743.232 246.145 743.232 246.136 cv
743.232 246.144 743.232 246.154 743.232 246.162 cv
743.231 246.118 mo
743.231 246.109 743.231 246.097 743.231 246.088 cv
743.231 246.098 743.231 246.107 743.231 246.118 cv
743.23 246.074 mo
743.23 246.065 743.23 246.053 743.23 246.044 cv
743.23 246.053 743.23 246.064 743.23 246.074 cv
743.229 246.028 mo
743.229 246.018 743.229 246.01 743.229 246.001 cv
743.229 246.01 743.229 246.019 743.229 246.028 cv
743.228 245.982 mo
743.228 245.972 743.228 245.966 743.227 245.956 cv
743.228 245.965 743.228 245.973 743.228 245.982 cv
743.227 245.936 mo
743.226 245.927 743.226 245.92 743.226 245.911 cv
743.226 245.919 743.226 245.927 743.227 245.936 cv
743.225 245.891 mo
743.225 245.881 743.225 245.875 743.225 245.866 cv
743.225 245.873 743.225 245.883 743.225 245.891 cv
743.224 245.844 mo
743.224 245.836 743.223 245.829 743.223 245.821 cv
743.223 245.828 743.224 245.837 743.224 245.844 cv
743.222 245.798 mo
743.222 245.79 743.222 245.782 743.221 245.775 cv
743.222 245.782 743.222 245.79 743.222 245.798 cv
743.221 245.752 mo
743.22 245.744 743.22 245.736 743.22 245.729 cv
743.22 245.736 743.22 245.744 743.221 245.752 cv
743.219 245.706 mo
743.219 245.698 743.218 245.689 743.218 245.682 cv
743.218 245.69 743.219 245.698 743.219 245.706 cv
743.217 245.659 mo
743.217 245.651 743.216 245.645 743.216 245.637 cv
743.216 245.644 743.217 245.652 743.217 245.659 cv
743.215 245.611 mo
743.215 245.605 743.214 245.597 743.214 245.591 cv
743.215 245.598 743.215 245.604 743.215 245.611 cv
743.213 245.563 mo
743.213 245.557 743.213 245.551 743.212 245.545 cv
743.213 245.551 743.213 245.557 743.213 245.563 cv
743.211 245.515 mo
743.211 245.51 743.21 245.505 743.21 245.499 cv
743.21 245.505 743.211 245.51 743.211 245.515 cv
743.209 245.466 mo
743.208 245.462 743.208 245.457 743.208 245.453 cv
743.208 245.458 743.208 245.461 743.209 245.466 cv
743.206 245.419 mo
743.206 245.416 743.206 245.409 743.206 245.405 cv
743.206 245.41 743.206 245.414 743.206 245.419 cv
743.204 245.373 mo
743.204 245.369 743.203 245.361 743.203 245.357 cv
743.204 245.363 743.204 245.367 743.204 245.373 cv
743.202 245.327 mo
743.201 245.321 743.201 245.315 743.201 245.31 cv
743.201 245.316 743.201 245.321 743.202 245.327 cv
743.199 245.274 mo
743.199 245.272 743.198 245.266 743.198 245.264 cv
743.199 245.268 743.199 245.27 743.199 245.274 cv
743.196 245.222 mo
743.196 245.22 743.196 245.219 743.196 245.217 cv
743.196 245.218 743.196 245.221 743.196 245.222 cv
743.193 245.17 mo
743.193 245.169 li
743.193 245.17 li
743.19 245.123 mo
743.19 245.121 li
743.19 245.122 743.19 245.122 743.19 245.123 cv
f
649.114 266.42 mo
630.087 266.42 610.89 265.46 594.456 263.541 cv
594.451 263.54 594.457 263.541 594.453 263.54 cv
594.42 263.537 594.387 263.533 594.355 263.529 cv
594.35 263.528 594.344 263.528 594.34 263.527 cv
594.317 263.525 594.296 263.522 594.274 263.519 cv
594.254 263.517 594.224 263.514 594.205 263.511 cv
594.197 263.51 594.19 263.51 594.182 263.509 cv
593.381 263.414 592.592 263.319 591.804 263.22 cv
591.497 263.181 591.187 263.142 590.882 263.103 cv
590.963 259.06 591.049 255.012 591.049 250.967 cv
591.05 245.767 590.911 240.574 590.441 235.411 cv
583.995 243.065 578.746 251.517 575.178 260.566 cv
574.233 260.375 573.317 260.181 572.412 259.981 cv
569.78 259.398 567.323 258.776 565.059 258.114 cv
565.678 248.647 567.826 239.229 570.857 230.515 cv
570.857 230.515 li
570.857 230.515 li
567.801 239.176 564.744 248.155 562.283 257.254 cv
562.283 257.254 li
562.283 257.254 li
555.589 255.031 551.019 252.404 549.376 249.373 cv
549.375 249.372 549.376 249.373 549.375 249.372 cv
549.372 249.366 549.369 249.361 549.367 249.355 cv
549.366 249.354 li
549.363 249.349 549.36 249.344 549.357 249.338 cv
549.356 249.336 li
549.353 249.33 549.35 249.325 549.348 249.32 cv
549.347 249.318 li
549.344 249.313 549.341 249.308 549.339 249.304 cv
549.338 249.302 549.338 249.302 549.337 249.3 cv
549.334 249.294 549.331 249.288 549.328 249.283 cv
549.328 249.283 li
549.325 249.276 549.321 249.27 549.318 249.264 cv
549.317 249.262 549.316 249.26 549.315 249.259 cv
549.312 249.252 549.309 249.247 549.306 249.24 cv
549.306 249.239 549.306 249.239 549.305 249.238 cv
549.302 249.232 549.3 249.227 549.297 249.221 cv
549.296 249.219 549.295 249.217 549.294 249.215 cv
549.291 249.209 549.287 249.202 549.285 249.197 cv
549.284 249.196 549.284 249.195 549.284 249.194 cv
549.281 249.189 549.278 249.183 549.275 249.177 cv
549.274 249.175 549.273 249.173 549.272 249.171 cv
549.27 249.165 549.267 249.159 549.264 249.154 cv
549.263 249.152 549.263 249.15 549.262 249.148 cv
549.26 249.144 549.257 249.138 549.255 249.133 cv
549.254 249.131 549.252 249.128 549.251 249.126 cv
549.249 249.12 549.246 249.115 549.244 249.109 cv
549.243 249.107 549.242 249.105 549.241 249.103 cv
549.239 249.098 549.236 249.093 549.234 249.088 cv
549.233 249.085 549.232 249.083 549.231 249.08 cv
549.229 249.076 549.226 249.069 549.224 249.064 cv
549.223 249.062 549.221 249.059 549.22 249.056 cv
549.218 249.051 549.217 249.047 549.215 249.043 cv
549.213 249.04 549.212 249.037 549.211 249.034 cv
549.209 249.029 549.207 249.024 549.205 249.019 cv
549.203 249.016 549.202 249.012 549.2 249.009 cv
549.199 249.005 549.197 249 549.195 248.996 cv
549.194 248.993 549.193 248.99 549.191 248.987 cv
549.19 248.983 549.188 248.978 549.186 248.974 cv
549.184 248.969 549.182 248.965 549.181 248.96 cv
549.179 248.957 549.178 248.953 549.176 248.95 cv
549.175 248.946 549.174 248.943 549.172 248.939 cv
549.171 248.936 549.169 248.931 549.168 248.928 cv
549.166 248.923 549.164 248.917 549.161 248.912 cv
549.16 248.909 549.159 248.905 549.158 248.902 cv
549.156 248.899 549.155 248.894 549.154 248.891 cv
549.152 248.888 549.151 248.885 549.15 248.882 cv
549.148 248.875 549.145 248.868 549.143 248.861 cv
549.142 248.859 549.141 248.857 549.14 248.855 cv
549.138 248.85 549.137 248.846 549.135 248.841 cv
549.135 248.84 549.134 248.838 549.134 248.837 cv
549.13 248.828 549.128 248.82 549.124 248.811 cv
549.124 248.809 549.123 248.808 549.123 248.806 cv
549.117 248.791 549.112 248.775 549.106 248.76 cv
549.106 248.758 li
549.1 248.741 549.095 248.725 549.089 248.708 cv
549.089 248.708 li
547.271 243.153 553.541 225.825 564.099 204.94 cv
566.748 209.701 570.034 214.188 574.121 218.275 cv
580.649 224.803 589.625 228.883 598.601 230.515 cv
598.601 230.515 li
598.63 230.521 598.662 230.528 598.691 230.534 cv
606.254 232.097 614.178 232.886 622.191 232.886 cv
622.193 232.886 li
622.193 232.886 li
622.193 232.886 li
622.196 232.886 622.203 232.886 622.205 232.886 cv
659.812 232.884 699.098 215.467 709.426 178.832 cv
709.427 178.827 709.429 178.821 709.431 178.815 cv
709.459 178.714 709.488 178.61 709.516 178.509 cv
709.518 178.504 709.517 178.505 709.519 178.5 cv
709.538 178.431 709.557 178.36 709.576 178.292 cv
709.576 178.292 li
709.576 178.292 li
709.584 178.262 709.592 178.232 709.6 178.202 cv
709.603 178.19 709.607 178.178 709.61 178.166 cv
709.615 178.148 709.62 178.13 709.624 178.113 cv
709.628 178.099 709.632 178.085 709.636 178.071 cv
709.641 178.053 709.645 178.034 709.65 178.016 cv
709.656 177.993 709.663 177.97 709.669 177.947 cv
709.673 177.932 709.677 177.917 709.681 177.902 cv
709.685 177.885 709.69 177.867 709.695 177.849 cv
709.698 177.838 709.701 177.827 709.704 177.816 cv
709.709 177.797 709.714 177.777 709.719 177.758 cv
709.72 177.752 709.722 177.746 709.724 177.74 cv
709.742 177.67 709.76 177.6 709.778 177.53 cv
709.779 177.527 709.78 177.524 709.781 177.521 cv
710.466 174.871 710.955 172.235 711.266 169.614 cv
711.267 169.609 711.268 169.604 711.268 169.599 cv
711.273 169.561 711.277 169.523 711.282 169.486 cv
711.282 169.484 711.282 169.482 711.282 169.479 cv
711.284 169.462 711.286 169.445 711.288 169.427 cv
711.29 169.416 711.291 169.405 711.292 169.394 cv
711.295 169.37 711.298 169.346 711.3 169.322 cv
711.302 169.307 711.304 169.293 711.305 169.278 cv
711.307 169.264 711.309 169.251 711.31 169.237 cv
711.313 169.213 711.315 169.19 711.318 169.166 cv
711.319 169.154 711.321 169.142 711.322 169.131 cv
711.324 169.111 711.326 169.092 711.328 169.073 cv
711.329 169.063 711.33 169.053 711.331 169.044 cv
711.334 169.017 711.337 168.991 711.34 168.964 cv
711.341 168.955 711.342 168.946 711.343 168.937 cv
711.346 168.91 711.349 168.883 711.352 168.856 cv
711.352 168.854 711.352 168.852 711.352 168.85 cv
711.355 168.821 711.358 168.791 711.362 168.762 cv
711.362 168.755 711.363 168.748 711.364 168.741 cv
711.367 168.712 711.37 168.683 711.373 168.654 cv
711.373 168.65 711.373 168.646 711.374 168.642 cv
711.377 168.613 711.38 168.585 711.383 168.556 cv
711.383 168.553 711.383 168.549 711.384 168.546 cv
711.387 168.515 711.39 168.483 711.393 168.452 cv
711.393 168.449 711.393 168.446 711.394 168.443 cv
711.4 168.378 711.407 168.312 711.413 168.247 cv
711.413 168.247 li
711.493 167.408 711.555 166.571 711.599 165.735 cv
711.599 165.734 711.599 165.733 711.599 165.732 cv
711.603 165.667 711.606 165.602 711.609 165.537 cv
711.61 165.535 711.61 165.533 711.61 165.531 cv
711.611 165.5 711.613 165.469 711.614 165.439 cv
711.615 165.434 711.615 165.429 711.615 165.425 cv
711.616 165.394 711.618 165.363 711.619 165.332 cv
711.619 165.332 li
729.043 196.32 742.307 230.172 743.19 245.121 cv
743.19 245.123 li
743.191 245.138 743.192 245.154 743.193 245.169 cv
743.193 245.17 li
743.194 245.186 743.195 245.201 743.196 245.217 cv
743.196 245.219 743.196 245.22 743.196 245.222 cv
743.197 245.236 743.198 245.25 743.198 245.264 cv
743.198 245.266 743.199 245.272 743.199 245.274 cv
743.2 245.285 743.2 245.298 743.201 245.31 cv
743.201 245.315 743.201 245.321 743.202 245.327 cv
743.202 245.337 743.203 245.347 743.203 245.357 cv
743.203 245.361 743.204 245.369 743.204 245.373 cv
743.205 245.383 743.205 245.395 743.206 245.405 cv
743.206 245.409 743.206 245.416 743.206 245.419 cv
743.207 245.43 743.208 245.442 743.208 245.453 cv
743.208 245.457 743.208 245.462 743.209 245.466 cv
743.209 245.477 743.21 245.488 743.21 245.499 cv
743.21 245.505 743.211 245.51 743.211 245.515 cv
743.211 245.525 743.212 245.535 743.212 245.545 cv
743.213 245.551 743.213 245.557 743.213 245.563 cv
743.213 245.572 743.214 245.582 743.214 245.591 cv
743.214 245.597 743.215 245.605 743.215 245.611 cv
743.215 245.62 743.216 245.628 743.216 245.637 cv
743.216 245.645 743.217 245.651 743.217 245.659 cv
743.217 245.667 743.218 245.674 743.218 245.682 cv
743.218 245.689 743.219 245.698 743.219 245.706 cv
743.219 245.714 743.219 245.721 743.22 245.729 cv
743.22 245.736 743.22 245.744 743.221 245.752 cv
743.221 245.76 743.221 245.767 743.221 245.775 cv
743.222 245.782 743.222 245.79 743.222 245.798 cv
743.223 245.806 743.223 245.813 743.223 245.821 cv
743.223 245.829 743.224 245.836 743.224 245.844 cv
743.224 245.851 743.224 245.858 743.225 245.866 cv
743.225 245.875 743.225 245.881 743.225 245.891 cv
743.226 245.897 743.226 245.904 743.226 245.911 cv
743.226 245.92 743.226 245.927 743.227 245.936 cv
743.227 245.943 743.227 245.95 743.227 245.956 cv
743.228 245.966 743.228 245.972 743.228 245.982 cv
743.228 245.988 743.228 245.994 743.229 246.001 cv
743.229 246.01 743.229 246.018 743.229 246.028 cv
743.229 246.034 743.229 246.038 743.23 246.044 cv
743.23 246.053 743.23 246.065 743.23 246.074 cv
743.23 246.079 743.231 246.083 743.231 246.088 cv
743.231 246.097 743.231 246.109 743.231 246.118 cv
743.232 246.124 743.232 246.13 743.232 246.136 cv
743.232 246.145 743.232 246.153 743.232 246.162 cv
743.232 246.169 743.233 246.174 743.233 246.181 cv
743.233 246.19 743.233 246.198 743.233 246.208 cv
743.233 246.212 743.233 246.217 743.233 246.221 cv
743.234 246.232 743.234 246.242 743.234 246.253 cv
743.234 246.256 743.234 246.259 743.234 246.262 cv
743.234 246.275 743.234 246.285 743.235 246.298 cv
743.235 246.3 743.235 246.301 743.235 246.303 cv
743.235 246.316 743.235 246.329 743.235 246.342 cv
743.235 246.343 743.235 246.344 743.235 246.345 cv
743.237 246.505 743.238 246.66 743.236 246.815 cv
743.236 246.816 li
743.236 246.828 743.236 246.841 743.236 246.854 cv
743.236 246.856 743.236 246.857 743.236 246.859 cv
743.236 246.872 743.236 246.885 743.235 246.898 cv
743.235 246.898 743.235 246.9 743.235 246.901 cv
743.235 246.913 743.235 246.926 743.235 246.938 cv
743.235 246.94 743.235 246.942 743.235 246.944 cv
743.235 246.956 743.234 246.967 743.234 246.979 cv
743.234 246.982 743.234 246.984 743.234 246.986 cv
743.234 246.999 743.234 247.007 743.234 247.019 cv
743.234 247.023 743.233 247.025 743.233 247.029 cv
743.233 247.039 743.233 247.053 743.233 247.063 cv
743.233 247.065 743.233 247.068 743.233 247.07 cv
743.232 247.082 743.232 247.093 743.232 247.105 cv
743.232 247.108 743.232 247.109 743.232 247.111 cv
743.231 247.123 743.231 247.135 743.231 247.147 cv
743.231 247.148 743.231 247.151 743.231 247.153 cv
743.23 247.163 743.23 247.176 743.23 247.186 cv
743.23 247.189 743.23 247.193 743.229 247.195 cv
743.229 247.206 743.229 247.219 743.229 247.229 cv
743.228 247.232 743.228 247.233 743.228 247.235 cv
743.228 247.246 743.228 247.26 743.227 247.27 cv
743.227 247.272 743.227 247.275 743.227 247.277 cv
743.227 247.289 743.226 247.3 743.226 247.312 cv
743.226 247.314 743.226 247.315 743.226 247.317 cv
743.225 247.327 743.225 247.341 743.225 247.351 cv
743.224 247.354 743.224 247.357 743.224 247.36 cv
743.224 247.371 743.223 247.381 743.223 247.393 cv
743.223 247.395 743.223 247.397 743.223 247.399 cv
743.222 247.411 743.222 247.422 743.221 247.434 cv
743.221 247.435 743.221 247.437 743.221 247.439 cv
743.221 247.451 743.22 247.463 743.22 247.475 cv
743.22 247.476 743.22 247.477 743.219 247.479 cv
743.219 247.489 743.218 247.504 743.218 247.514 cv
743.218 247.516 743.218 247.519 743.218 247.521 cv
743.217 247.533 743.217 247.543 743.216 247.555 cv
743.216 247.557 743.216 247.558 743.216 247.559 cv
743.215 247.571 743.215 247.583 743.214 247.595 cv
743.214 247.596 743.214 247.598 743.214 247.6 cv
743.213 247.611 743.213 247.624 743.212 247.636 cv
743.212 247.636 li
743.211 247.649 743.211 247.662 743.21 247.675 cv
743.21 247.676 743.21 247.677 743.21 247.678 cv
743.201 247.836 743.191 247.988 743.178 248.14 cv
743.178 248.14 li
743.176 248.164 743.174 248.189 743.172 248.212 cv
743.172 248.214 743.171 248.215 743.171 248.216 cv
743.17 248.227 743.169 248.239 743.168 248.25 cv
743.168 248.251 743.168 248.253 743.168 248.254 cv
743.167 248.263 743.166 248.274 743.165 248.283 cv
743.165 248.286 743.165 248.29 743.164 248.293 cv
743.163 248.302 743.163 248.311 743.162 248.32 cv
743.161 248.324 743.161 248.327 743.161 248.33 cv
743.16 248.34 743.159 248.348 743.158 248.357 cv
743.158 248.361 743.157 248.364 743.157 248.368 cv
743.156 248.376 743.155 248.387 743.154 248.395 cv
743.154 248.398 743.154 248.402 743.153 248.405 cv
743.152 248.413 743.151 248.424 743.15 248.431 cv
743.15 248.435 743.15 248.439 743.149 248.443 cv
743.148 248.451 743.147 248.461 743.147 248.468 cv
743.146 248.472 743.146 248.476 743.145 248.48 cv
743.144 248.488 743.143 248.497 743.143 248.505 cv
743.142 248.509 743.142 248.513 743.141 248.517 cv
743.14 248.526 743.139 248.533 743.138 248.542 cv
743.138 248.546 743.138 248.549 743.137 248.553 cv
743.136 248.561 743.135 248.571 743.134 248.578 cv
743.134 248.582 743.133 248.587 743.133 248.591 cv
743.132 248.6 743.131 248.606 743.13 248.615 cv
743.13 248.619 743.129 248.623 743.128 248.627 cv
743.127 248.636 743.127 248.642 743.126 248.651 cv
743.125 248.656 743.125 248.659 743.124 248.664 cv
743.123 248.673 743.122 248.678 743.121 248.687 cv
743.121 248.691 743.12 248.696 743.12 248.7 cv
743.118 248.709 743.118 248.714 743.117 248.723 cv
743.116 248.728 743.115 248.732 743.115 248.737 cv
743.114 248.744 743.113 248.752 743.112 248.759 cv
743.111 248.764 743.111 248.768 743.11 248.772 cv
743.109 248.78 743.108 248.788 743.107 248.795 cv
743.107 248.8 743.106 248.804 743.105 248.809 cv
743.104 248.816 743.103 248.823 743.102 248.83 cv
743.102 248.836 743.101 248.84 743.1 248.845 cv
743.099 248.852 743.099 248.859 743.098 248.866 cv
743.097 248.871 743.096 248.876 743.095 248.881 cv
743.094 248.888 743.094 248.894 743.093 248.901 cv
743.092 248.906 743.091 248.912 743.09 248.916 cv
743.089 248.924 743.089 248.93 743.087 248.937 cv
743.087 248.941 743.086 248.947 743.085 248.952 cv
743.084 248.959 743.083 248.965 743.082 248.972 cv
743.081 248.977 743.081 248.981 743.08 248.986 cv
743.079 248.993 743.078 249 743.077 249.007 cv
743.076 249.013 743.076 249.016 743.075 249.022 cv
743.074 249.027 743.072 249.037 743.072 249.042 cv
743.071 249.047 743.07 249.052 743.069 249.057 cv
743.068 249.062 743.067 249.071 743.066 249.077 cv
743.065 249.082 743.064 249.088 743.063 249.093 cv
743.062 249.101 743.062 249.104 743.061 249.111 cv
743.06 249.117 743.059 249.122 743.058 249.127 cv
743.057 249.135 743.056 249.139 743.055 249.146 cv
743.054 249.151 743.053 249.157 743.052 249.162 cv
743.051 249.169 743.05 249.174 743.049 249.181 cv
743.048 249.185 743.048 249.19 743.047 249.194 cv
743.046 249.201 743.045 249.208 743.043 249.215 cv
743.042 249.22 743.042 249.225 743.041 249.23 cv
743.04 249.236 743.038 249.243 743.037 249.249 cv
743.035 249.26 743.034 249.271 743.031 249.283 cv
743.031 249.283 li
743.031 249.283 li
743.03 249.289 743.029 249.295 743.028 249.302 cv
743.028 249.303 743.027 249.307 743.027 249.308 cv
743.026 249.313 743.025 249.316 743.025 249.321 cv
743.024 249.323 743.023 249.326 743.023 249.329 cv
743.022 249.333 743.022 249.336 743.021 249.34 cv
743.02 249.343 743.02 249.345 743.019 249.348 cv
743.019 249.352 743.018 249.355 743.017 249.359 cv
743.016 249.365 743.015 249.37 743.014 249.376 cv
743.013 249.379 743.013 249.381 743.012 249.384 cv
743.011 249.388 743.011 249.391 743.01 249.395 cv
743.01 249.397 743.009 249.4 743.008 249.403 cv
743.008 249.406 743.007 249.411 743.006 249.413 cv
743.006 249.416 743.005 249.419 743.004 249.422 cv
743.004 249.426 743.003 249.429 743.002 249.433 cv
743.002 249.433 743.002 249.434 743.002 249.435 cv
743 249.443 742.998 249.453 742.996 249.462 cv
742.995 249.464 742.995 249.465 742.995 249.467 cv
742.994 249.472 742.993 249.475 742.992 249.479 cv
742.992 249.481 742.991 249.484 742.99 249.486 cv
742.99 249.49 742.989 249.494 742.988 249.498 cv
742.987 249.5 742.987 249.502 742.986 249.504 cv
742.985 249.508 742.985 249.512 742.984 249.516 cv
742.984 249.516 742.983 249.517 742.983 249.517 cv
742.981 249.527 742.979 249.535 742.977 249.544 cv
742.976 249.547 742.976 249.549 742.975 249.551 cv
742.974 249.555 742.974 249.558 742.973 249.562 cv
742.972 249.565 742.971 249.567 742.971 249.569 cv
742.97 249.573 742.969 249.577 742.968 249.581 cv
742.968 249.583 742.967 249.585 742.966 249.588 cv
742.963 249.602 742.96 249.614 742.956 249.628 cv
742.956 249.63 742.955 249.632 742.955 249.634 cv
742.954 249.638 742.953 249.641 742.952 249.645 cv
742.951 249.648 742.95 249.65 742.95 249.653 cv
742.949 249.657 742.948 249.659 742.947 249.663 cv
742.946 249.667 742.945 249.67 742.944 249.673 cv
742.944 249.676 742.943 249.679 742.942 249.682 cv
742.94 249.687 742.939 249.693 742.937 249.699 cv
742.937 249.702 742.936 249.705 742.935 249.708 cv
742.934 249.711 742.933 249.715 742.932 249.718 cv
742.931 249.721 742.93 249.724 742.93 249.726 cv
742.929 249.73 742.928 249.734 742.927 249.737 cv
742.926 249.74 742.925 249.743 742.924 249.745 cv
742.923 249.75 742.922 249.754 742.921 249.758 cv
742.92 249.761 742.92 249.762 742.919 249.764 cv
742.917 249.77 742.915 249.776 742.914 249.782 cv
742.913 249.785 742.913 249.786 742.912 249.789 cv
742.91 249.793 742.909 249.798 742.908 249.802 cv
742.907 249.804 742.907 249.806 742.906 249.807 cv
742.905 249.812 742.903 249.818 742.901 249.823 cv
742.901 249.824 742.901 249.825 742.9 249.827 cv
742.896 249.84 742.892 249.853 742.888 249.866 cv
742.887 249.869 li
742.886 249.875 742.884 249.881 742.882 249.886 cv
742.881 249.889 li
742.879 249.895 742.877 249.901 742.875 249.907 cv
742.875 249.908 li
741.802 253.228 736.992 256.046 729.551 258.364 cv
724.674 241.054 716.993 224.427 707.944 208.483 cv
707.944 208.483 li
707.944 208.483 li
711.682 217.517 712.804 226.908 712.808 236.429 cv
712.812 245.029 711.903 253.735 711.186 262.38 cv
708.701 262.769 706.107 263.129 703.425 263.461 cv
703.425 263.461 li
703.425 263.461 li
699.648 255.226 695.421 247.19 692.591 238.533 cv
692.591 238.533 li
692.591 238.533 li
693.351 242.453 693.575 246.432 693.575 250.45 cv
693.575 255.112 693.275 259.826 693.161 264.56 cv
693.161 264.56 li
693.161 264.56 li
679.594 265.8 664.41 266.42 649.114 266.42 cv
692.591 238.533 mo
692.591 238.533 li
692.174 236.385 691.599 234.255 690.808 232.147 cv
690.808 232.147 li
690.808 232.147 li
691.302 234.32 691.908 236.444 692.591 238.533 cv
692.591 238.533 li
.4 .615686 .12549 rgb
f
711.266 169.614 mo
711.267 169.609 711.268 169.604 711.268 169.599 cv
711.268 169.604 711.267 169.609 711.266 169.614 cv
711.282 169.486 mo
711.282 169.484 711.282 169.481 711.282 169.479 cv
711.282 169.482 711.282 169.484 711.282 169.486 cv
711.288 169.427 mo
711.29 169.416 711.291 169.405 711.292 169.394 cv
711.291 169.405 711.29 169.416 711.288 169.427 cv
711.3 169.322 mo
711.302 169.307 711.304 169.293 711.305 169.278 cv
711.304 169.293 711.302 169.307 711.3 169.322 cv
711.31 169.237 mo
711.313 169.213 711.315 169.19 711.318 169.166 cv
711.315 169.19 711.313 169.213 711.31 169.237 cv
711.322 169.131 mo
711.324 169.111 711.326 169.092 711.328 169.073 cv
711.326 169.092 711.324 169.111 711.322 169.131 cv
711.331 169.044 mo
711.334 169.017 711.337 168.991 711.34 168.964 cv
711.337 168.991 711.334 169.017 711.331 169.044 cv
711.343 168.937 mo
711.346 168.91 711.349 168.883 711.352 168.856 cv
711.349 168.883 711.346 168.91 711.343 168.937 cv
711.352 168.85 mo
711.355 168.821 711.358 168.791 711.362 168.762 cv
711.358 168.791 711.355 168.821 711.352 168.85 cv
711.364 168.741 mo
711.367 168.712 711.37 168.683 711.373 168.654 cv
711.37 168.683 711.367 168.712 711.364 168.741 cv
711.374 168.642 mo
711.377 168.613 711.38 168.585 711.383 168.556 cv
711.38 168.585 711.377 168.613 711.374 168.642 cv
711.384 168.546 mo
711.387 168.515 711.39 168.484 711.393 168.452 cv
711.39 168.483 711.387 168.515 711.384 168.546 cv
711.394 168.443 mo
711.4 168.378 711.407 168.313 711.413 168.247 cv
711.407 168.312 711.4 168.378 711.394 168.443 cv
711.413 168.247 mo
711.493 167.408 711.555 166.571 711.599 165.735 cv
711.555 166.571 711.493 167.408 711.413 168.247 cv
711.599 165.732 mo
711.603 165.667 711.606 165.602 711.609 165.537 cv
711.606 165.602 711.603 165.667 711.599 165.732 cv
711.61 165.531 mo
711.611 165.5 711.613 165.469 711.614 165.439 cv
711.613 165.469 711.611 165.5 711.61 165.531 cv
711.615 165.425 mo
711.617 165.394 711.618 165.363 711.619 165.332 cv
711.618 165.363 711.616 165.394 711.615 165.425 cv
.52549 .682353 .160784 rgb
f
622.193 232.886 mo
622.191 232.886 li
622.193 232.886 li
622.193 232.886 li
622.205 232.886 mo
659.81 232.881 699.099 215.464 709.426 178.832 cv
699.098 215.467 659.812 232.884 622.205 232.886 cv
598.691 230.534 mo
598.662 230.528 598.63 230.521 598.601 230.515 cv
598.63 230.521 598.662 230.528 598.691 230.534 cv
709.431 178.815 mo
709.459 178.714 709.488 178.61 709.516 178.509 cv
709.488 178.61 709.459 178.714 709.431 178.815 cv
709.519 178.5 mo
709.538 178.431 709.557 178.36 709.576 178.292 cv
709.557 178.36 709.538 178.431 709.519 178.5 cv
709.576 178.292 mo
709.584 178.262 709.592 178.232 709.6 178.202 cv
709.592 178.232 709.584 178.262 709.576 178.292 cv
709.61 178.166 mo
709.615 178.148 709.62 178.13 709.624 178.113 cv
709.62 178.13 709.615 178.148 709.61 178.166 cv
709.636 178.071 mo
709.641 178.052 709.645 178.034 709.65 178.016 cv
709.645 178.034 709.641 178.053 709.636 178.071 cv
709.669 177.947 mo
709.673 177.932 709.677 177.917 709.681 177.902 cv
709.677 177.917 709.673 177.932 709.669 177.947 cv
709.695 177.849 mo
709.698 177.838 709.701 177.827 709.704 177.816 cv
709.701 177.827 709.698 177.838 709.695 177.849 cv
709.719 177.758 mo
709.72 177.752 709.722 177.746 709.724 177.74 cv
709.722 177.746 709.72 177.752 709.719 177.758 cv
709.778 177.53 mo
709.779 177.527 709.78 177.524 709.781 177.521 cv
709.78 177.524 709.779 177.527 709.778 177.53 cv
.4 .615686 .12549 rgb
f
590.681 263.077 mo
585.11 262.356 579.901 261.519 575.178 260.566 cv
575.178 260.566 li
579.898 261.518 585.114 262.356 590.681 263.077 cv
590.681 263.077 li
.133333 .439216 .407843 rgb
f
590.882 263.103 mo
590.815 263.094 590.748 263.085 590.681 263.077 cv
590.681 263.077 li
590.747 263.085 590.815 263.094 590.882 263.103 cv
590.882 263.103 590.882 263.103 590.882 263.103 cv
590.882 263.103 li
590.882 263.103 li
.160784 .101961 .203922 rgb
f
590.882 263.103 mo
590.815 263.094 590.747 263.085 590.681 263.077 cv
585.114 262.356 579.898 261.518 575.178 260.565 cv
578.746 251.517 583.995 243.065 590.441 235.411 cv
590.911 240.574 591.05 245.767 591.049 250.967 cv
591.049 255.012 590.963 259.06 590.882 263.103 cv
.364706 .556863 .121569 rgb
f
590.882 263.103 mo
590.882 263.103 li
590.963 259.06 591.049 255.012 591.049 250.967 cv
591.049 255.012 590.963 259.06 590.882 263.103 cv
.313725 .466667 .117647 rgb
f
711.186 262.38 mo
711.903 253.735 712.812 245.029 712.808 236.429 cv
712.804 226.908 711.682 217.517 707.944 208.483 cv
716.993 224.427 724.674 241.054 729.551 258.364 cv
724.52 259.931 718.286 261.27 711.186 262.38 cv
.364706 .556863 .121569 rgb
f
608.038 204.795 mo
601.577 204.795 596.322 201.719 595.126 192.767 cv
593.041 177.163 606.736 156.65 619.284 148.035 cv
623.989 144.804 630.433 142.794 636.546 142.794 cv
644.699 142.794 652.261 146.374 654.302 155.408 cv
657.965 171.625 645.867 186.528 633.464 195.116 cv
627.284 199.396 616.6 204.796 608.038 204.795 cv
.615686 .811765 .168627 rgb
f
338.135 298.134 mo
342.389 295.129 344.839 291.261 346.007 287.37 cv
345.001 287.418 344.456 289.449 344.033 290.148 cv
343.458 291.105 342.792 292.043 342.018 292.944 cv
340.424 294.799 338.357 296.49 335.858 297.852 cv
330.86 300.583 324.591 301.687 318.267 301.549 cv
323.631 297.104 329.607 292.719 332.543 287.306 cv
329.096 287.306 li
326.784 290.459 323.477 293.221 319.746 295.844 cv
316.814 293.7 316.445 290.394 316.953 287.306 cv
316.35 287.306 li
315.677 289.671 315.547 292.131 316.542 294.383 cv
316.773 294.902 317.085 295.412 317.482 295.888 cv
318.097 296.626 318.72 296.562 317.733 297.249 cv
316.62 298.021 315.505 298.792 314.412 299.573 cv
312.224 301.139 310.157 302.75 308.376 304.509 cv
300.094 300.124 295.508 293.817 293.188 287.306 cv
291.796 287.306 li
292.16 288.768 292.631 290.227 293.233 291.673 cv
288.542 292.053 283.497 289.886 279.52 287.306 cv
279.083 287.306 li
283.053 290.203 287.712 292.326 293.431 292.762 cv
293.922 292.754 295.758 296.47 296.163 297.03 cv
297.305 298.692 298.682 300.313 300.301 301.82 cv
301.767 303.184 303.411 304.476 305.241 305.648 cv
306.634 306.536 306.507 306.46 305.673 307.492 cv
305.251 308.013 304.847 308.541 304.463 309.074 cv
296.837 319.533 295.967 332.269 300.053 344.191 cv
303.237 344.085 306.407 343.909 309.563 343.663 cv
311.575 343.502 310.132 342.368 309.732 341.47 cv
309.021 339.609 308.32 337.748 307.841 335.872 cv
305.813 328.014 305.837 319.881 309.369 312.45 cv
310.322 310.429 311.542 308.453 313.08 306.583 cv
313.824 305.677 314.643 304.795 315.538 303.945 cv
315.835 303.672 317.244 303.699 318.359 303.727 cv
318.857 303.739 319.297 303.751 319.553 303.736 cv
325.795 303.446 331.774 301.994 336.504 299.187 cv
345.693 300.005 352.42 294.512 356.291 289.319 cv
352.309 293.869 346.272 298.538 338.135 298.134 cv
.207843 .133333 .215686 rgb
f
321.502 189.75 mo
290.548 189.01 252.455 216.406 245.073 240.472 cv
234.252 265.178 254.142 286.554 259.713 288.534 cv
267.883 290.887 280.229 290.463 293.826 290.038 cv
300.855 289.819 308.219 289.599 315.513 289.764 cv
321.384 289.648 327.212 289.781 332.79 289.914 cv
347.557 290.267 360.581 290.619 368.08 286.363 cv
375.746 280.856 394.249 257.333 387.011 234.18 cv
382.357 211.231 351.961 188.653 321.502 189.75 cv
.470588 .733333 .129412 rgb
f
265.619 212.541 mo
265.59 212.48 265.56 212.419 265.531 212.357 cv
266.051 211.925 266.578 211.497 267.114 211.073 cv
269.986 208.725 273.106 206.506 276.392 204.451 cv
276.376 204.482 276.36 204.513 276.345 204.544 cv
272.556 207.012 268.954 209.7 265.619 212.541 cv
level3{
gsave
clp
[1.01108e-008 -225.201 225.201 1.01108e-008 450 315.729 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.01108e-008 -225.201 225.201 1.01108e-008 450 315.729 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
243.403 245.028 mo
246.175 234.01 253.754 222.151 265.531 212.357 cv
265.56 212.419 265.59 212.48 265.619 212.541 cv
255.573 221.101 247.965 231.042 245.073 240.472 cv
244.402 242.005 243.849 243.525 243.403 245.028 cv
386.58 232.329 mo
383.718 221.437 375.19 210.768 363.764 202.83 cv
375.314 210.633 383.994 221.153 386.662 232.229 cv
386.662 232.229 li
386.65 232.245 386.637 232.26 386.624 232.276 cv
386.618 232.284 386.611 232.292 386.604 232.301 cv
386.601 232.305 386.597 232.309 386.594 232.313 cv
386.59 232.318 386.585 232.324 386.58 232.329 cv
276.345 204.544 mo
276.36 204.513 276.376 204.482 276.392 204.451 cv
277.199 203.946 278.016 203.451 278.842 202.966 cv
278.003 203.481 277.168 204.008 276.345 204.544 cv
.219608 .705882 .568627 rgb
f
242.235 253.068 mo
242.319 250.47 242.712 247.775 243.403 245.028 cv
243.849 243.525 244.402 242.005 245.073 240.472 cv
247.965 231.042 255.573 221.101 265.619 212.541 cv
268.954 209.7 272.556 207.012 276.345 204.544 cv
277.168 204.008 278.003 203.481 278.842 202.966 cv
292.507 194.95 308.568 189.784 321.502 189.75 cv
321.924 189.741 322.342 189.737 322.765 189.737 cv
337.197 189.737 351.977 194.869 363.764 202.83 cv
375.19 210.768 383.718 221.437 386.58 232.329 cv
385.32 233.868 383.868 235.387 382.233 236.889 cv
382.233 236.889 li
378.661 227.254 371.385 217.449 357.336 211.043 cv
357.336 211.043 li
348.229 206.83 336.165 204.1 322.107 204.1 cv
314.892 204.1 307.152 204.82 299.018 206.426 cv
258.071 214.775 246.738 236.256 242.235 253.068 cv
.615686 .811765 .168627 rgb
f
357.336 211.043 mo
343.554 204.667 323 201.69 299.018 206.426 cv
258.071 214.776 246.738 236.256 242.235 253.068 cv
242.018 256.949 242.363 260.652 243.122 264.084 cv
247.955 265.786 252.932 267.302 258.007 268.61 cv
266.144 270.683 273.979 271.499 280.65 271.336 cv
297.222 271.265 311.285 269.102 327.879 264.315 cv
344.056 259.457 362.763 251.975 379.021 239.635 cv
380.158 238.726 381.229 237.811 382.233 236.889 cv
378.661 227.254 371.385 217.449 357.336 211.043 cv
.470588 .733333 .129412 rgb
f
338.164 290.036 mo
337.426 290.027 336.684 290.016 335.938 290.005 cv
335.938 290.005 li
335.941 290 335.944 289.994 335.946 289.989 cv
336.691 290.006 337.431 290.022 338.164 290.036 cv
.415686 .603922 .258824 rgb
f
341.039 290.065 mo
340.088 290.058 339.13 290.048 338.164 290.036 cv
337.431 290.022 336.691 290.006 335.946 289.989 cv
338.572 284.811 341.704 279.726 343.275 274.624 cv
343.326 274.459 343.375 274.295 343.422 274.13 cv
343.068 276.692 342.814 279.194 342.508 281.67 cv
342.159 284.485 341.744 287.267 341.039 290.065 cv
341.039 290.065 li
.364706 .556863 .121569 rgb
f
343.422 274.13 mo
343.422 274.13 li
343.516 273.469 343.617 272.804 343.731 272.134 cv
343.844 271.465 343.97 270.79 344.112 270.11 cv
344.048 271.418 343.809 272.724 343.451 274.027 cv
343.444 274.051 343.437 274.075 343.431 274.098 cv
343.428 274.109 343.425 274.119 343.422 274.13 cv
f
273.12 290.339 mo
272.494 290.327 271.874 290.311 271.266 290.289 cv
271.24 290.258 271.215 290.226 271.189 290.194 cv
271.803 290.227 272.425 290.255 273.058 290.278 cv
273.078 290.298 273.099 290.319 273.12 290.339 cv
.352941 .533333 .247059 rgb
f
273.058 290.278 mo
272.425 290.255 271.803 290.227 271.189 290.194 cv
271.123 290.113 271.056 290.032 270.991 289.95 cv
267.18 285.239 264.163 280.367 261.837 275.512 cv
264.25 280.487 268.18 285.503 273.058 290.278 cv
.364706 .556863 .121569 rgb
f
374.238 280.561 mo
374.203 280.556 374.156 280.549 374.121 280.545 cv
377.087 277.094 380.288 272.546 382.929 267.301 cv
380.359 272.553 377.228 277.094 374.238 280.561 cv
388.295 239.889 mo
388.028 237.99 387.607 236.084 387.011 234.18 cv
386.886 233.562 386.743 232.946 386.58 232.329 cv
386.585 232.324 386.59 232.318 386.594 232.313 cv
386.597 232.309 386.601 232.305 386.604 232.301 cv
386.611 232.292 386.617 232.284 386.624 232.276 cv
386.637 232.26 386.649 232.245 386.662 232.229 cv
386.662 232.229 li
387.478 234.791 388.008 237.351 388.295 239.889 cv
.145098 .486274 .415686 rgb
f
335.938 290.005 mo
334.264 289.965 332.572 289.929 330.865 289.897 cv
330.871 289.888 330.878 289.879 330.885 289.87 cv
331.523 289.884 332.158 289.899 332.79 289.914 cv
333.851 289.94 334.904 289.965 335.946 289.989 cv
335.944 289.994 335.941 290 335.938 290.005 cv
335.938 290.005 li
335.938 290.005 li
335.938 290.005 li
326.966 289.833 mo
324.86 289.802 322.737 289.779 320.602 289.762 cv
320.427 289.748 320.25 289.734 320.075 289.72 cv
320.125 289.72 320.175 289.72 320.224 289.72 cv
322.505 289.72 324.771 289.747 327.009 289.788 cv
326.995 289.803 326.98 289.818 326.966 289.833 cv
355.79 289.658 mo
355.792 289.655 355.794 289.651 355.796 289.648 cv
355.872 289.64 355.946 289.633 356.021 289.625 cv
356.017 289.63 356.013 289.634 356.009 289.639 cv
355.936 289.645 355.863 289.652 355.79 289.658 cv
356.053 289.634 mo
356.057 289.63 356.06 289.625 356.064 289.62 cv
360.851 289.115 364.947 288.141 368.08 286.363 cv
369.718 285.186 371.85 283.187 374.121 280.545 cv
374.156 280.549 374.203 280.556 374.238 280.561 cv
372.01 283.143 369.86 285.128 368.08 286.363 cv
365.475 288.241 361.116 289.169 356.053 289.634 cv
257.508 287.266 mo
253.958 284.764 249.067 279.422 245.763 272.023 cv
249.191 279.364 254.162 284.823 257.508 287.266 cv
.454902 .670588 .262745 rgb
f
276.401 290.37 mo
275.284 290.37 274.19 290.361 273.12 290.339 cv
273.12 290.339 li
273.12 290.339 li
273.099 290.319 273.078 290.298 273.058 290.278 cv
274.513 290.331 276.017 290.359 277.56 290.367 cv
277.171 290.369 276.785 290.37 276.401 290.37 cv
271.266 290.289 mo
266.643 290.119 262.57 289.665 259.713 288.534 cv
259.713 288.534 li
259.713 288.534 li
262.945 289.465 266.831 289.961 271.189 290.194 cv
271.215 290.226 271.24 290.258 271.266 290.289 cv
300.702 289.839 mo
303.829 289.761 306.996 289.706 310.168 289.706 cv
311.47 289.706 312.772 289.716 314.073 289.736 cv
313.974 289.736 313.876 289.736 313.777 289.736 cv
309.418 289.736 305.041 289.769 300.702 289.839 cv
320.602 289.762 mo
319.356 289.753 318.11 289.746 316.858 289.742 cv
317.933 289.727 319.006 289.72 320.075 289.72 cv
320.25 289.734 320.427 289.748 320.602 289.762 cv
.384314 .588235 .254902 rgb
f
330.865 289.897 mo
329.573 289.873 328.273 289.852 326.966 289.833 cv
326.98 289.818 326.995 289.803 327.009 289.788 cv
328.311 289.812 329.604 289.84 330.885 289.87 cv
330.878 289.879 330.871 289.888 330.865 289.897 cv
356.009 289.639 mo
356.013 289.634 356.017 289.63 356.021 289.625 cv
356.035 289.623 356.05 289.622 356.064 289.62 cv
356.06 289.625 356.057 289.63 356.053 289.634 cv
356.038 289.636 356.023 289.637 356.009 289.639 cv
.176471 .113725 .207843 rgb
f
277.56 290.367 mo
276.017 290.359 274.513 290.331 273.058 290.278 cv
268.18 285.503 264.25 280.487 261.837 275.512 cv
264.163 280.367 267.18 285.239 270.991 289.95 cv
271.056 290.032 271.123 290.113 271.189 290.194 cv
266.831 289.961 262.945 289.465 259.713 288.534 cv
259.713 288.534 li
259.073 288.269 258.326 287.843 257.508 287.266 cv
254.162 284.823 249.191 279.364 245.763 272.023 cv
244.676 269.59 243.761 266.935 243.122 264.084 cv
247.955 265.786 252.932 267.302 258.007 268.61 cv
265.475 270.512 272.688 271.356 278.98 271.356 cv
279.544 271.356 280.101 271.349 280.65 271.336 cv
280.65 271.336 li
297.222 271.265 311.285 269.102 327.879 264.315 cv
343.045 259.761 360.435 252.9 375.945 241.893 cv
376.979 241.159 378.004 240.407 379.021 239.635 cv
382.011 237.245 384.547 234.812 386.58 232.329 cv
386.743 232.946 386.886 233.562 387.011 234.18 cv
387.607 236.084 388.028 237.99 388.295 239.889 cv
389.415 249.796 386.815 259.359 382.929 267.301 cv
380.288 272.546 377.087 277.094 374.121 280.545 cv
371.85 283.187 369.718 285.186 368.08 286.363 cv
364.947 288.141 360.851 289.115 356.064 289.62 cv
356.05 289.622 356.035 289.623 356.021 289.625 cv
355.946 289.633 355.872 289.64 355.796 289.648 cv
358.413 285.767 360.535 281.847 362.114 277.91 cv
364.84 271.113 365.951 264.266 365.205 257.483 cv
365.159 257.899 365.099 258.314 365.027 258.728 cv
363.163 269.482 352.916 279.715 345.079 290.072 cv
345.079 290.072 li
344.615 290.074 344.149 290.076 343.68 290.076 cv
342.808 290.076 341.927 290.072 341.039 290.065 cv
341.039 290.065 li
341.744 287.267 342.16 284.485 342.508 281.67 cv
342.814 279.194 343.068 276.692 343.422 274.13 cv
343.425 274.119 343.428 274.109 343.431 274.098 cv
343.437 274.075 343.444 274.051 343.451 274.027 cv
343.809 272.724 344.049 271.418 344.112 270.11 cv
344.112 270.11 li
344.112 270.11 li
343.969 270.79 343.844 271.465 343.731 272.134 cv
343.617 272.804 343.516 273.469 343.422 274.13 cv
343.422 274.13 li
343.422 274.13 li
343.422 274.13 li
343.422 274.13 li
343.422 274.13 li
343.375 274.295 343.326 274.459 343.275 274.624 cv
341.704 279.726 338.572 284.811 335.946 289.989 cv
334.904 289.965 333.851 289.94 332.79 289.914 cv
332.158 289.899 331.523 289.884 330.885 289.87 cv
329.604 289.84 328.311 289.812 327.009 289.788 cv
324.771 289.747 322.505 289.72 320.224 289.72 cv
320.175 289.72 320.125 289.72 320.075 289.72 cv
319.006 289.72 317.933 289.727 316.858 289.742 cv
315.932 289.738 315.002 289.736 314.073 289.736 cv
312.772 289.716 311.47 289.706 310.168 289.706 cv
306.996 289.706 303.829 289.761 300.702 289.839 cv
296.377 289.909 292.088 290.016 287.893 290.166 cv
286.155 287.632 284.444 285.086 282.658 282.56 cv
280.872 280.034 279.01 277.527 276.97 275.072 cv
276.97 275.072 li
275.734 280.101 276.634 285.261 279.318 290.351 cv
279.318 290.351 li
278.727 290.358 278.141 290.364 277.56 290.367 cv
.4 .615686 .12549 rgb
f
386.594 232.313 mo
386.597 232.309 386.601 232.305 386.604 232.301 cv
386.601 232.305 386.597 232.309 386.594 232.313 cv
386.624 232.276 mo
386.637 232.26 386.65 232.245 386.662 232.229 cv
386.649 232.245 386.637 232.26 386.624 232.276 cv
.188235 .592157 .54902 rgb
f
280.65 271.336 mo
297.221 271.265 311.285 269.102 327.878 264.315 cv
343.045 259.761 360.435 252.9 375.945 241.893 cv
360.435 252.9 343.045 259.761 327.879 264.315 cv
311.285 269.102 297.222 271.265 280.65 271.336 cv
.4 .615686 .12549 rgb
f
341.039 290.065 mo
341.744 287.267 342.159 284.485 342.508 281.67 cv
342.16 284.485 341.744 287.267 341.039 290.065 cv
343.275 274.624 mo
343.326 274.459 343.375 274.295 343.422 274.13 cv
343.422 274.13 li
343.375 274.295 343.326 274.459 343.275 274.624 cv
.309804 .466667 .117647 rgb
f
343.422 274.13 mo
343.422 274.13 li
343.422 274.13 li
343.422 274.13 li
343.431 274.098 mo
343.437 274.075 343.444 274.051 343.451 274.027 cv
343.444 274.051 343.437 274.075 343.431 274.098 cv
343.731 272.134 mo
343.844 271.465 343.969 270.79 344.112 270.11 cv
344.112 270.11 li
343.97 270.79 343.844 271.465 343.731 272.134 cv
f
273.058 290.278 mo
273.058 290.278 li
268.18 285.503 264.25 280.487 261.837 275.512 cv
264.163 280.367 267.18 285.239 270.991 289.95 cv
267.18 285.239 264.163 280.367 261.837 275.512 cv
264.25 280.487 268.18 285.503 273.058 290.278 cv
f
279.318 290.351 mo
279.318 290.351 li
279.318 290.351 li
279.318 290.351 li
276.634 285.261 275.734 280.101 276.97 275.072 cv
276.97 275.072 li
279.01 277.527 280.872 280.034 282.658 282.56 cv
284.444 285.086 286.155 287.632 287.893 290.166 cv
284.961 290.244 282.087 290.317 279.318 290.351 cv
.364706 .556863 .121569 rgb
f
282.658 282.56 mo
280.872 280.034 279.01 277.527 276.97 275.072 cv
279.01 277.527 280.872 280.034 282.658 282.56 cv
.313725 .466667 .117647 rgb
f
355.03 289.721 mo
355.287 289.698 355.543 289.674 355.796 289.648 cv
355.794 289.651 355.792 289.655 355.79 289.658 cv
355.79 289.658 li
355.79 289.658 li
355.538 289.68 355.285 289.701 355.03 289.721 cv
.415686 .603922 .258824 rgb
f
345.079 290.072 mo
345.079 290.072 li
352.916 279.715 363.163 269.482 365.027 258.728 cv
365.099 258.314 365.159 257.899 365.205 257.483 cv
365.951 264.266 364.84 271.113 362.114 277.91 cv
360.534 281.847 358.413 285.767 355.796 289.648 cv
355.543 289.674 355.287 289.698 355.03 289.721 cv
351.933 289.964 348.579 290.053 345.079 290.072 cv
.364706 .556863 .121569 rgb
f
345.079 290.072 mo
352.916 279.715 363.163 269.482 365.027 258.728 cv
363.163 269.482 352.916 279.715 345.079 290.072 cv
.313725 .466667 .117647 rgb
f
355.796 289.648 mo
358.413 285.767 360.534 281.847 362.114 277.91 cv
360.535 281.847 358.413 285.767 355.796 289.648 cv
355.796 289.648 li
f
276.563 255.865 mo
272.257 255.864 268.184 254.507 264.815 250.861 cv
256.667 242.775 264.007 228.194 278.619 220.984 cv
284.85 217.597 295.389 215.364 304.569 215.364 cv
313.094 215.364 320.447 217.292 322.077 222.01 cv
325.359 231.835 311.29 241.097 301.101 247.197 cv
294.387 250.626 285.023 255.865 276.563 255.865 cv
.615686 .811765 .168627 rgb
f
519.181 308.788 mo
520.37 315.539 521.252 322.245 521.667 329.092 cv
521.764 331.265 521.764 333.426 521.717 335.583 cv
521.601 340.894 521.192 353.173 521.195 358.5 cv
523.511 358.536 525.828 358.571 528.144 358.607 cv
528.144 353.024 527.542 340.418 526.526 334.862 cv
524.895 325.941 522.193 317.148 519.181 308.788 cv
.380392 .145098 .0941176 rgb
f
521.717 335.583 mo
521.736 334.707 521.748 333.83 521.748 332.952 cv
521.748 332.295 521.742 331.637 521.728 330.978 cv
523.089 330.876 524.404 330.747 525.666 330.599 cv
525.978 332.016 526.266 333.437 526.526 334.862 cv
524.923 335.12 523.32 335.372 521.717 335.583 cv
.345098 .117647 .0862745 rgb
f
532.655 296.053 mo
530.838 296.599 529.116 297.116 527.776 297.567 cv
526.041 298.128 524.898 298.497 524.898 298.497 cv
524.898 298.497 525.921 297.867 527.473 296.91 cv
528.725 296.119 530.353 295.169 532.071 294.17 cv
528.781 283.601 525.011 272.376 521.356 261.87 cv
520.244 262.652 519.161 263.415 518.192 264.068 cv
517.752 264.365 517.332 264.641 516.948 264.882 cv
515.675 265.708 514.836 266.252 514.836 266.252 cv
514.836 266.252 515.485 265.492 516.47 264.338 cv
516.922 263.827 517.429 263.216 517.966 262.556 cv
516.982 256.032 515.856 249.529 514.682 243.066 cv
509.28 228.125 505.231 217.542 505.231 217.542 cv
504.184 274.885 li
505.348 275.205 506.452 275.467 507.356 275.665 cv
508.02 275.811 508.576 275.897 508.964 275.973 cv
509.354 276.045 509.576 276.086 509.576 276.086 cv
509.576 276.086 509.354 276.117 508.962 276.172 cv
508.569 276.222 508.005 276.317 507.322 276.388 cv
506.433 276.481 505.334 276.576 504.152 276.634 cv
503.496 312.568 li
503.173 330.285 li
508.694 331.205 514.157 331.369 519.141 331.136 cv
531.499 330.559 540.907 327.541 540.907 327.541 cv
540.299 324.101 539.389 320.074 538.252 315.637 cv
536.733 309.709 534.809 303.047 532.655 296.053 cv
.372549 .72549 .227451 rgb
f
517.966 262.556 mo
518.616 261.758 519.31 260.887 520.016 260.011 cv
520.175 259.808 520.335 259.604 520.494 259.4 cv
518.472 253.62 516.5 248.096 514.682 243.066 cv
515.856 249.529 516.982 256.032 517.966 262.556 cv
.34902 .67451 .207843 rgb
f
517.966 262.556 mo
517.966 262.556 li
516.982 256.032 515.856 249.529 514.682 243.066 cv
516.5 248.096 518.472 253.62 520.494 259.4 cv
520.335 259.604 520.175 259.808 520.016 260.011 cv
519.31 260.887 518.616 261.758 517.966 262.556 cv
.298039 .560784 .2 rgb
f
515.129 331.231 mo
511.458 331.231 507.603 330.987 503.714 330.373 cv
503.534 330.344 503.353 330.315 503.173 330.285 cv
503.173 330.285 li
503.246 326.303 li
503.444 326.385 503.643 326.465 503.843 326.544 cv
503.854 326.556 503.865 326.567 503.876 326.579 cv
505.36 328.107 509.468 328.325 511.484 328.66 cv
512.527 328.833 513.576 328.964 514.629 329.052 cv
515.797 329.154 516.969 329.205 518.142 329.205 cv
519.58 329.205 521.019 329.128 522.448 328.975 cv
525.595 328.655 528.712 327.92 531.687 326.842 cv
531.775 326.81 531.934 326.75 532.146 326.666 cv
532.638 326.478 533.129 326.28 533.612 326.071 cv
536.117 325.025 540.059 323.243 539.907 322.553 cv
539.907 322.553 li
539.907 322.553 li
540.296 324.322 540.633 325.994 540.906 327.541 cv
540.906 327.541 532.22 330.328 520.575 331.058 cv
520.102 331.088 519.624 331.114 519.141 331.136 cv
517.834 331.197 516.494 331.231 515.129 331.231 cv
.345098 .662745 .223529 rgb
f
503.265 325.266 mo
503.196 324.784 503.233 324.267 503.292 323.746 cv
503.265 325.266 li
.384314 .580392 .254902 rgb
f
524.93 298.487 mo
525.127 298.423 526.21 298.073 527.776 297.567 cv
528.928 297.179 530.361 296.743 531.895 296.282 cv
530.361 296.743 528.928 297.179 527.776 297.567 cv
526.21 298.073 525.127 298.423 524.93 298.487 cv
.454902 .662745 .266667 rgb
f
531.26 291.581 mo
530.232 288.324 529.165 285.017 528.074 281.696 cv
528.074 281.696 li
529.165 285.016 530.232 288.324 531.26 291.581 cv
531.26 291.581 li
level3{
gsave
clp
[1.01108e-008 -225.201 225.201 1.01108e-008 450 315.729 ]ct
/10 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~[*SNRcM4`kpp/3?Z-N-LcM4Whpohs;YKcjFc1nEcpoVd8XN^I@bP8-]po;O4WQP"8b4qpWpnu7/Voe_2
anVaTpnc+-Ur`>+aS;ONpnGh(TuZr%`qZ4Hpn5V$T>gSs`V?"Cpmo@uSAb2l`;#h>pmT+qR`"og_t]V9
pmAqnQbiH__>';3pm&\jPed'Y_"a,/pl`GfP/-jT^\Eo*plE/aO1tCM^%dW$pl)o]MnSnB]_I>rpkZQW
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.01108e-008 -225.201 225.201 1.01108e-008 450 315.729 ]ct
clp
/10 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~Za7!EZa-mBZEgdAZE^[>Z*:I:Yct@9Yck76YHG%2Y-+q1Y-"h.XfSV*XK8M)XK/D&X/i;%X/`2"Wi;ts
WMuhpW2QYnW2QVlVl-DhVP^5fVP^2dV5:#bV59u`Unjc\USFQXU8"BVU8"?TTqS-PTV.sNTV.pLT:_aJ
T:_aISt;OESXl=AS=H+>S=H+=S"#n9R[T\6R[T\5R@0J2R@0J1R$a8-Q^=&*Q^=&)QBmi%Q'IW!Pa%Ds
Pa%DsPEV2oPEV2oP*1ukOcbcgOcbcgOH>QcO,o?_NfK-[NfK-[NfK-[NK&mUMi3LOMMd7ILkpkCLkpkC
~>
<~cHa_\cHXVYc-=MXc-=MXc-=MXc-=MXc-=MXc-4DUbfn;Tbfn;Tbfn;Tbfe2QbKJ)PbK@uMb0%lLb0%lL
b0%iJaiVZHaiVWFaN2HDaN2HDaN2HDaN2HDaN2HDaN2EBa2c6@a2c3>`l?$<`l?$<`l?!:`Pog8`Pod6
`5KU4`5KU4`5KU4`5KU3_o'C0_o'C0_o'C/_SX1,_SX1,_SX1,_SX1+_83t(_83t'^qdb$^qdb$^qdb$
^qdb$^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^:q=q^:q=q]tM+m]tM+m]Y(ni]Y(ni]Y(ni]Y(ni]=Y\e]=Y\e
~>
247 ]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /10 /Gradient get_res exec grestore
}if
np
528.074 281.696 mo
525.883 275.029 523.597 268.314 521.356 261.87 cv
523.597 268.314 525.883 275.029 528.074 281.696 cv
528.074 281.696 li
.145098 .482353 .419608 rgb
f
532.071 294.17 mo
531.804 293.311 531.533 292.448 531.26 291.581 cv
531.26 291.581 li
531.533 292.448 531.804 293.311 532.071 294.17 cv
f
518.192 264.068 mo
519.161 263.415 520.244 262.651 521.356 261.87 cv
520.244 262.652 519.161 263.415 518.192 264.068 cv
f
518.095 329.197 mo
516.938 329.197 515.782 329.15 514.629 329.052 cv
510.925 328.729 507.276 327.893 503.843 326.544 cv
503.499 326.173 503.331 325.736 503.265 325.266 cv
503.292 323.746 li
503.349 323.249 503.427 322.748 503.455 322.274 cv
503.642 319.064 503.427 315.862 503.501 312.654 cv
507.268 313.783 511.477 315.277 515.464 315.277 cv
515.518 315.277 515.574 315.276 515.629 315.276 cv
525.209 315.176 521.357 295.592 521.033 290.281 cv
520.497 281.505 519.475 272.764 518.192 264.068 cv
518.192 264.068 li
519.161 263.415 520.244 262.652 521.356 261.87 cv
521.356 261.87 li
521.356 261.87 li
523.597 268.314 525.883 275.029 528.074 281.696 cv
529.165 285.017 530.232 288.324 531.26 291.581 cv
531.533 292.448 531.804 293.311 532.071 294.17 cv
532.071 294.17 li
531.883 294.279 531.696 294.388 531.511 294.496 cv
530.001 295.375 528.588 296.205 527.473 296.91 cv
526.121 297.743 525.171 298.329 524.948 298.466 cv
524.915 298.487 524.898 298.497 524.898 298.497 cv
524.898 298.497 li
524.898 298.497 li
524.898 298.497 524.909 298.494 524.93 298.487 cv
525.127 298.423 526.21 298.073 527.776 297.567 cv
528.928 297.179 530.361 296.743 531.895 296.282 cv
532.146 296.206 532.399 296.13 532.655 296.053 cv
534.809 303.047 536.733 309.709 538.252 315.637 cv
538.877 318.078 539.431 320.39 539.907 322.553 cv
537.938 323.944 535.825 325.116 533.612 326.071 cv
533.018 326.319 532.505 326.525 532.146 326.666 cv
529.042 327.85 525.77 328.619 522.448 328.975 cv
522.417 328.978 522.388 328.981 522.357 328.984 cv
520.942 329.125 519.518 329.197 518.095 329.197 cv
.317647 .6 .219608 rgb
f
514.629 329.052 mo
513.576 328.964 512.527 328.833 511.484 328.66 cv
509.468 328.325 505.36 328.107 503.876 326.579 cv
503.865 326.567 503.854 326.556 503.843 326.544 cv
507.276 327.893 510.925 328.729 514.629 329.052 cv
522.448 328.975 mo
525.77 328.619 529.042 327.85 532.146 326.666 cv
531.934 326.75 531.775 326.81 531.687 326.842 cv
528.712 327.92 525.595 328.655 522.448 328.975 cv
533.612 326.071 mo
535.825 325.116 537.938 323.944 539.907 322.553 cv
539.907 322.553 li
540.059 323.243 536.117 325.025 533.612 326.071 cv
.294118 .54902 .215686 rgb
f
231.736 325.103 mo
232.725 329.288 233.708 333.38 234.492 337.522 cv
234.707 338.836 234.853 340.143 234.974 341.446 cv
235.196 344.658 236.188 352.074 237.076 355.25 cv
239.438 355.08 241.8 354.906 244.163 354.734 cv
243.169 351.527 240.983 344.208 239.607 340.924 cv
237.258 335.683 234.369 330.365 231.736 325.103 cv
.380392 .145098 .0941176 rgb
f
234.974 341.446 mo
234.887 340.519 234.789 339.59 234.662 338.658 cv
234.662 338.658 li
234.789 339.59 234.888 340.519 234.974 341.446 cv
234.974 341.446 li
234.974 341.446 li
.407843 .572549 .243137 rgb
f
234.974 341.446 mo
234.974 341.446 li
234.888 340.519 234.789 339.59 234.662 338.658 cv
235.971 338.585 237.234 338.499 238.441 338.403 cv
238.841 339.245 239.231 340.086 239.607 340.924 cv
238.066 341.106 236.522 341.287 234.974 341.446 cv
.345098 .117647 .0862745 rgb
f
244.161 318.401 mo
242.535 318.572 240.987 318.742 239.778 318.906 cv
238.213 319.105 237.178 319.243 237.178 319.243 cv
237.177 319.243 238.115 318.941 239.529 318.496 cv
240.67 318.126 242.146 317.7 243.695 317.266 cv
241.091 310.888 238.95 303.861 237.736 297.152 cv
236.726 297.44 235.738 297.73 234.854 297.974 cv
234.453 298.084 234.071 298.187 233.723 298.275 cv
232.564 298.582 231.795 298.789 231.795 298.79 cv
231.795 298.79 232.445 298.424 233.428 297.881 cv
233.876 297.642 234.384 297.354 234.923 297.044 cv
235.229 293.031 235.68 289.02 236.358 285.05 cv
235.944 275.355 237.342 268.481 237.286 268.488 cv
230.337 279.145 225.086 290.676 221.626 302.669 cv
222.541 303.017 223.421 303.319 224.145 303.555 cv
224.677 303.728 225.128 303.85 225.442 303.946 cv
225.757 304.038 225.936 304.091 225.936 304.091 cv
225.936 304.091 225.746 304.083 225.41 304.069 cv
225.075 304.051 224.588 304.042 224.006 304.002 cv
223.248 303.95 222.313 303.876 221.314 303.768 cv
219.214 311.301 217.819 319.011 217.152 326.795 cv
216.824 330.633 216.672 334.489 216.7 338.35 cv
222.054 338.919 227.362 338.96 232.169 338.779 cv
244.113 338.294 252.89 336.594 252.88 336.61 cv
251.984 334.7 250.81 332.44 249.528 329.9 cv
247.813 326.507 245.912 322.609 244.161 318.401 cv
.317647 .67451 .164706 rgb
f
234.923 297.044 mo
235.575 296.67 236.273 296.261 236.979 295.858 cv
237.14 295.763 237.3 295.669 237.461 295.575 cv
236.847 291.876 236.498 288.308 236.358 285.05 cv
235.68 289.02 235.228 293.031 234.923 297.044 cv
.34902 .67451 .207843 rgb
f
234.923 297.044 mo
235.228 293.031 235.68 289.02 236.358 285.05 cv
236.498 288.308 236.847 291.876 237.461 295.575 cv
237.3 295.669 237.14 295.763 236.979 295.858 cv
236.273 296.261 235.575 296.67 234.923 297.044 cv
.298039 .560784 .2 rgb
f
227.238 338.875 mo
226.493 338.875 225.742 338.868 224.984 338.853 cv
225.741 338.868 226.492 338.875 227.236 338.875 cv
228.924 338.875 230.574 338.839 232.169 338.779 cv
233.017 338.745 233.848 338.704 234.662 338.658 cv
234.662 338.658 li
233.848 338.704 233.017 338.745 232.169 338.779 cv
230.575 338.839 228.926 338.875 227.238 338.875 cv
238.441 338.403 mo
238.441 338.403 li
239.826 338.294 241.139 338.173 242.367 338.047 cv
242.367 338.047 li
241.139 338.173 239.826 338.294 238.441 338.403 cv
242.683 338.015 mo
242.683 338.015 li
244.278 337.848 245.727 337.674 246.997 337.508 cv
245.727 337.674 244.278 337.848 242.683 338.015 cv
252.88 336.61 mo
252.88 336.61 252.88 336.61 252.88 336.61 cv
252.88 336.61 li
252.88 336.61 252.88 336.61 252.88 336.61 cv
252.88 336.61 252.88 336.61 252.88 336.61 cv
216.704 336.076 mo
216.704 336.072 216.704 336.067 216.705 336.063 cv
216.704 336.067 216.704 336.072 216.704 336.076 cv
216.706 335.942 mo
216.706 335.912 216.707 335.882 216.707 335.852 cv
216.707 335.882 216.706 335.912 216.706 335.942 cv
216.708 335.806 mo
216.708 335.786 216.708 335.767 216.708 335.747 cv
216.708 335.747 li
216.708 335.767 216.708 335.786 216.708 335.806 cv
.415686 .639216 .258824 rgb
f
238.441 338.403 mo
238.441 338.403 li
238.441 338.403 li
238.441 338.403 li
238.441 338.403 li
.352941 .133333 .0941176 rgb
f
234.662 338.658 mo
234.662 338.658 li
235.971 338.585 237.234 338.498 238.441 338.403 cv
238.441 338.403 li
237.234 338.499 235.971 338.585 234.662 338.658 cv
.317647 .105882 .0862745 rgb
f
227.236 338.875 mo
226.492 338.875 225.741 338.868 224.984 338.853 cv
222.279 338.8 219.495 338.647 216.7 338.35 cv
216.7 338.35 li
216.7 338.35 li
216.695 337.592 216.696 336.834 216.704 336.076 cv
216.704 336.072 216.704 336.067 216.705 336.063 cv
216.705 336.022 216.705 335.982 216.706 335.942 cv
216.706 335.912 216.707 335.882 216.707 335.852 cv
216.707 335.836 216.707 335.821 216.708 335.806 cv
216.708 335.786 216.708 335.767 216.708 335.747 cv
216.898 335.801 217.09 335.854 217.281 335.906 cv
217.292 335.914 217.304 335.922 217.315 335.93 cv
218.754 336.933 222.717 337.066 224.668 337.275 cv
225.87 337.404 227.081 337.492 228.295 337.543 cv
229.175 337.582 230.056 337.601 230.937 337.601 cv
232.483 337.601 234.027 337.542 235.552 337.427 cv
238.455 337.217 241.3 336.785 243.979 336.192 cv
244.027 336.18 244.097 336.164 244.186 336.142 cv
244.73 336.018 245.268 335.886 245.797 335.747 cv
248.11 335.166 251.693 334.202 251.517 333.827 cv
252.016 334.82 252.478 335.752 252.88 336.61 cv
252.88 336.61 252.88 336.61 252.88 336.61 cv
252.88 336.61 li
252.88 336.61 li
252.842 336.61 250.654 337.028 246.997 337.508 cv
245.727 337.674 244.278 337.848 242.683 338.015 cv
242.542 337.926 242.4 337.838 242.257 337.75 cv
242.294 337.85 242.33 337.948 242.367 338.047 cv
241.139 338.173 239.826 338.294 238.441 338.403 cv
238.441 338.403 li
237.234 338.498 235.971 338.585 234.662 338.658 cv
234.662 338.658 li
233.848 338.704 233.017 338.745 232.169 338.779 cv
230.574 338.839 228.924 338.875 227.236 338.875 cv
.294118 .615686 .160784 rgb
f
252.88 336.61 mo
252.88 336.61 li
252.88 336.61 252.88 336.61 252.88 336.61 cv
f
216.719 335.069 mo
216.652 334.755 216.686 334.418 216.742 334.078 cv
216.733 334.409 216.726 334.739 216.719 335.069 cv
237.178 319.243 mo
237.178 319.243 li
237.182 319.243 238.122 319.118 239.562 318.934 cv
238.122 319.118 237.182 319.243 237.178 319.243 cv
237.178 319.243 mo
237.178 319.243 li
237.178 319.243 237.598 319.108 238.299 318.885 cv
237.598 319.108 237.178 319.243 237.178 319.243 cv
237.356 297.261 mo
237.482 297.225 237.609 297.189 237.736 297.152 cv
237.609 297.189 237.482 297.225 237.356 297.261 cv
.384314 .580392 .254902 rgb
f
230.866 337.596 mo
230.009 337.596 229.151 337.579 228.295 337.543 cv
224.518 337.376 220.776 336.847 217.281 335.906 cv
216.948 335.662 216.786 335.377 216.719 335.069 cv
216.726 334.739 216.733 334.409 216.742 334.078 cv
216.797 333.754 216.872 333.428 216.901 333.119 cv
217.094 331.029 216.96 328.936 217.153 326.852 cv
220.647 327.75 224.615 328.854 228.388 328.955 cv
228.469 328.957 228.548 328.958 228.627 328.958 cv
237.125 328.957 233.821 317.249 234.193 314.002 cv
234.342 308.671 234.475 303.322 234.854 297.974 cv
235.626 297.761 236.479 297.513 237.356 297.261 cv
237.482 297.225 237.609 297.189 237.736 297.152 cv
237.736 297.152 li
238.949 303.861 241.091 310.888 243.695 317.266 cv
243.646 317.28 243.598 317.293 243.55 317.307 cv
242.054 317.726 240.634 318.138 239.529 318.496 cv
239.529 318.496 li
239.529 318.496 li
239.062 318.643 238.646 318.775 238.299 318.885 cv
237.598 319.108 237.178 319.243 237.178 319.243 cv
237.178 319.243 li
237.178 319.243 li
237.178 319.243 237.178 319.243 237.178 319.243 cv
237.178 319.243 li
237.178 319.243 li
237.182 319.243 238.122 319.118 239.562 318.934 cv
239.633 318.925 239.705 318.916 239.778 318.906 cv
240.987 318.742 242.535 318.572 244.161 318.401 cv
245.912 322.609 247.813 326.507 249.528 329.899 cv
250.234 331.297 250.903 332.607 251.515 333.823 cv
249.764 334.565 247.841 335.21 245.797 335.747 cv
245.097 335.923 244.514 336.064 244.186 336.142 cv
241.453 336.767 238.536 337.203 235.552 337.427 cv
235.418 337.437 235.284 337.446 235.151 337.455 cv
233.732 337.547 232.301 337.596 230.866 337.596 cv
251.517 333.827 mo
251.516 333.826 251.515 333.824 251.515 333.823 cv
251.515 333.824 251.516 333.826 251.517 333.827 cv
.270588 .560784 .160784 rgb
f
228.295 337.543 mo
227.081 337.492 225.87 337.404 224.668 337.275 cv
222.717 337.066 218.754 336.933 217.315 335.93 cv
217.304 335.922 217.292 335.914 217.281 335.906 cv
220.776 336.847 224.518 337.376 228.295 337.543 cv
235.552 337.427 mo
238.536 337.203 241.453 336.767 244.186 336.142 cv
244.097 336.164 244.027 336.18 243.979 336.192 cv
241.3 336.785 238.455 337.217 235.552 337.427 cv
245.797 335.747 mo
247.841 335.21 249.764 334.565 251.515 333.823 cv
251.515 333.823 li
251.515 333.823 li
251.515 333.824 251.516 333.826 251.517 333.827 cv
251.693 334.202 248.11 335.166 245.797 335.747 cv
.25098 .509804 .156863 rgb
f
341.335 319.629 mo
342.315 319.779 340.349 319.471 341.335 319.629 cv
cp
.764706 .858824 .309804 rgb
f
341.335 319.629 mo
337.606 319.034 338.67 324.424 341.911 325.033 cv
344.195 325.465 344.149 324.685 344.237 322.421 cv
344.311 320.52 343.06 319.894 341.335 319.629 cv
cp
f
351.007 316.25 mo
346.154 318.359 346.569 322.264 348.757 326.25 cv
352.456 323.435 352.535 320.993 351.211 316.889 cv
351.143 316.676 351.075 316.463 351.007 316.25 cv
cp
f
351.211 316.889 mo
351.337 317.28 351.086 316.496 351.211 316.889 cv
cp
f
17.0072 334.5 mo
17.5246 339.447 17.7706 344.607 19.1089 349.409 cv
17.7861 347.661 15.759 346.538 13.7572 345.75 cv
13.5007 351.258 15.1107 354.357 20.0072 357 cv
20.1578 355.831 20.2336 354.647 20.1974 353.468 cv
20.6072 354.88 20.8889 356.327 21.2572 357.75 cv
24.4686 351.072 25.2073 343.72 20.1045 337.725 cv
19.2353 336.522 18.1012 335.495 17.0072 334.5 cv
cp
f
20.1045 337.725 mo
21.7889 339.704 19.3543 336.687 20.1045 337.725 cv
cp
f
31.8993 346.996 mo
33.0461 346.627 31.205 347.218 31.8993 346.996 cv
cp
f
31.8993 346.996 mo
31.157 347.225 30.455 347.543 29.7931 347.95 cv
30.0013 345.334 29.475 342.607 29.2572 340 cv
23.6201 344.337 23.1293 350.786 27.0072 356.5 cv
28.0669 353.766 28.4367 354.739 31.1193 353.558 cv
34.0727 352.259 34.1743 349.373 34.0072 346.5 cv
33.2932 346.608 32.587 346.774 31.8993 346.996 cv
cp
f
256.391 354.268 mo
256.135 353.76 256.021 353.54 255.985 353.478 cv
256.12 353.741 256.256 354.001 256.391 354.268 cv
cp
f
255.985 353.478 mo
252.563 346.841 248.846 341.791 242.257 337.75 cv
245.587 346.816 249.602 353.982 258.507 358.5 cv
257.81 357.086 257.03 355.711 256.391 354.268 cv
256.634 354.818 256.424 354.407 256.224 353.997 cv
256.074 353.69 255.93 353.383 255.985 353.478 cv
f
255.985 353.478 mo
255.856 353.256 256.817 355.229 256.391 354.268 cv
256.256 354.001 256.12 353.741 255.985 353.478 cv
cp
f
260.822 348.107 mo
260.24 346.145 259.052 344.382 258.257 342.5 cv
253.637 347.072 256.365 351.212 258.507 356 cv
259.064 355.371 259.549 354.663 259.906 353.902 cv
260.209 355.144 260.698 356.353 261.257 357.5 cv
264.97 353.37 265.78 350.109 264.257 344.75 cv
262.96 345.679 261.726 346.783 260.822 348.107 cv
cp
f
286.952 343.269 mo
287.03 343.262 li
286.78 343.276 286.839 343.274 286.952 343.269 cv
cp
f
287.133 343.261 mo
287.232 343.256 287.267 343.253 287.03 343.262 cv
287.133 343.261 li
cp
f
286.952 343.269 mo
287.133 343.261 li
287.03 343.262 li
286.952 343.269 li
cp
f
286.952 343.269 mo
284.122 343.438 281.162 344.437 279.036 346.358 cv
279.528 342.984 279.671 339.569 280.507 336.25 cv
276.671 338.767 273.548 343.441 273.236 348.065 cv
270.997 342.816 266.923 338.555 262.757 334.75 cv
263.35 338.754 264.354 342.748 266.181 346.378 cv
266.717 347.444 267.35 348.376 268.104 349.298 cv
269.471 350.971 267.941 350.459 267.302 352.123 cv
266.657 353.632 267.487 355.628 267.257 357.25 cv
269.287 357.295 272.058 355.874 272.532 353.757 cv
274.366 355.27 275.105 357.104 276.757 358.75 cv
276.466 355.101 279.104 353.664 281.645 351.449 cv
284.245 349.182 285.874 345.933 288.007 343.25 cv
287.716 343.244 287.424 343.25 287.133 343.261 cv
286.952 343.269 li
f
238.757 348.75 mo
239.894 350.185 240.855 352.309 242.383 353.331 cv
243.825 354.462 246.267 354.695 248.007 355.25 cv
248.041 354.432 247.996 353.562 247.799 352.765 cv
247.003 348.298 242.575 346.95 238.757 348.75 cv
cp
f
247.799 352.765 mo
247.967 353.445 247.548 351.358 247.799 352.765 cv
cp
f
595.011 352.718 mo
593.822 348.632 592.194 344.97 589.021 342.034 cv
587.123 340.277 584.939 338.721 582.543 337.721 cv
582.221 337.584 576.72 336.147 577.007 337.75 cv
581.07 337.139 585.913 346.659 588.293 349.268 cv
585.108 350.964 585.205 353.783 585.757 357 cv
588.03 356.302 590.856 355.112 591.109 352.443 cv
592.797 354.404 594.517 356.337 596.507 358 cv
596.029 356.438 595.607 354.86 595.173 353.285 cv
595.237 353.519 595.095 353.019 595.011 352.718 cv
cp
f
595.173 353.285 mo
595.157 353.224 595.126 353.112 595.076 352.931 cv
595.109 353.049 595.141 353.168 595.173 353.285 cv
cp
f
595.011 352.718 mo
595.076 352.931 li
594.911 352.355 594.941 352.467 595.011 352.718 cv
cp
f
595.076 352.931 mo
595.011 352.718 li
595.095 353.019 595.237 353.519 595.173 353.285 cv
595.141 353.168 595.109 353.049 595.076 352.931 cv
cp
f
598.276 341.655 mo
597.882 340.92 597.461 340.199 597.007 339.5 cv
593.658 344.306 593.812 349.384 598.757 353 cv
599.626 348.825 600.415 346.005 598.485 342.061 cv
598.419 341.935 598.337 341.776 598.276 341.655 cv
cp
f
598.276 341.655 mo
598.394 341.869 li
598.122 341.351 598.163 341.435 598.276 341.655 cv
cp
f
598.485 342.061 mo
598.61 342.301 598.671 342.415 598.394 341.869 cv
598.485 342.061 li
cp
f
598.276 341.655 mo
598.337 341.776 598.419 341.935 598.485 342.061 cv
598.394 341.869 li
598.276 341.655 li
cp
f
601.757 354.25 mo
602.908 352.423 604.818 350.665 605.449 348.591 cv
606.197 346.447 605.747 343.651 605.257 341.5 cv
600.599 344.577 598.233 349.168 601.757 354.25 cv
cp
f
571.836 346.97 mo
571.931 347.086 li
571.846 346.966 571.823 346.942 571.836 346.97 cv
cp
f
571.836 346.97 mo
570.287 344.887 567.662 343.729 565.257 343 cv
566.007 348.79 568.214 351.868 573.257 354.75 cv
573.403 352.302 573.286 349.578 572.08 347.372 cv
571.982 347.22 571.857 347.017 571.836 346.97 cv
cp
f
572.08 347.372 mo
572.22 347.589 572.301 347.699 571.931 347.086 cv
571.987 347.178 572.028 347.277 572.08 347.372 cv
cp
f
571.836 346.97 mo
571.857 347.017 571.982 347.22 572.08 347.372 cv
572.028 347.277 571.987 347.178 571.931 347.086 cv
571.836 346.97 li
cp
f
580.159 341.532 mo
580.174 341.374 580.196 341.111 580.161 341.462 cv
580.159 341.532 li
cp
f
580.159 341.532 mo
580.149 341.643 580.142 341.703 580.161 341.462 cv
580.193 341.142 580.225 340.821 580.257 340.5 cv
573.053 344.329 575.416 351.895 578.007 357.75 cv
579.133 355.711 579.896 353.433 580.372 351.157 cv
581.05 347.914 579.918 344.784 580.159 341.532 cv
cp
f
730.122 345.513 mo
730.135 345.658 730.144 345.745 730.116 345.436 cv
730.122 345.513 li
cp
f
730.122 345.513 mo
730.116 345.436 li
730.077 345.011 730.104 345.317 730.122 345.513 cv
cp
f
730.116 345.436 mo
730.08 345.041 730.044 344.645 730.007 344.25 cv
728.786 345.773 727.686 347.407 726.871 349.186 cv
726.936 347.287 726.785 345.377 726.507 343.5 cv
724.257 345.353 722.021 347.733 721.144 350.573 cv
721.246 348.8 720.697 347.153 720.742 345.391 cv
720.798 343.156 720.174 340.863 719.507 338.75 cv
717.917 340.386 716.39 342.299 715.542 344.439 cv
715.198 343.375 714.845 342.315 714.507 341.25 cv
713.138 342.49 712.048 344.067 711.423 345.809 cv
709.958 342.158 707.144 339.272 704.007 337 cv
704.277 338.325 704.618 339.641 704.818 340.978 cv
705.136 342.451 705.346 343.945 705.659 345.419 cv
705.095 346.416 704.597 347.476 704.252 348.571 cv
703.038 352.432 705.192 355.875 708.757 357.5 cv
708.848 356.174 709.04 354.864 709.232 353.549 cv
710.102 354.985 711.028 356.387 712.007 357.75 cv
712.253 356.228 712.382 354.688 712.43 353.148 cv
712.841 353.949 713.284 354.734 713.757 355.5 cv
714.543 354.227 715.197 352.875 715.714 351.471 cv
715.983 354.158 716.637 356.822 717.007 359.5 cv
718.767 357.604 720.105 355.372 720.767 352.857 cv
720.643 354.812 720.652 356.795 720.757 358.75 cv
722.562 357.432 724.218 355.897 725.436 354.011 cv
724.887 358.13 726.836 362.369 729.007 365.75 cv
730.666 358.728 730.745 352.636 730.122 345.513 cv
730.104 345.317 730.077 345.011 730.116 345.436 cv
f
690.257 343.5 mo
691.737 346.499 693.728 349.564 696.216 351.823 cv
698.657 354.016 701.672 355.4 704.007 357.75 cv
704.068 356.449 703.894 355.153 703.545 353.899 cv
701.777 347.459 696.225 345.005 690.257 343.5 cv
cp
f
703.545 353.899 mo
703.85 354.992 702.947 351.718 703.545 353.899 cv
cp
f
868.233 333.832 mo
870.377 335.637 867.162 332.919 868.233 333.832 cv
cp
f
868.233 333.832 mo
866.992 332.773 865.663 331.827 864.257 331 cv
865.849 335.047 867.096 339.252 868.849 343.23 cv
870.59 347.184 872.836 350.802 874.007 355 cv
877.02 347.261 874.464 339.079 868.233 333.832 cv
cp
f
878.826 341.669 mo
878.192 340.714 877.626 339.716 877.007 338.75 cv
874.334 345.89 877.139 350.875 881.007 356.75 cv
882.692 351.272 881.883 346.922 879.121 342.174 cv
878.973 341.947 878.485 341.156 878.826 341.669 cv
cp
f
879.121 342.174 mo
879.205 342.304 879.18 342.253 878.826 341.669 cv
878.929 341.839 879.023 342.006 879.121 342.174 cv
cp
f
879.121 342.174 mo
879.023 342.006 878.929 341.839 878.826 341.669 cv
878.485 341.156 878.973 341.947 879.121 342.174 cv
cp
f
886.757 344 mo
882.147 347.636 881.938 351.862 884.757 356.75 cv
886.981 353.982 888.745 351.18 887.776 347.558 cv
887.489 346.355 887.167 345.168 886.757 344 cv
cp
f
887.776 347.558 mo
887.874 347.926 887.69 347.198 887.776 347.558 cv
cp
f
895.54 350.698 mo
895.567 350.806 li
895.447 350.246 895.484 350.428 895.54 350.698 cv
cp
f
895.577 350.873 mo
895.639 351.165 895.689 351.399 895.567 350.806 cv
895.577 350.873 li
cp
f
895.54 350.698 mo
895.381 349.961 895.204 349.228 895.007 348.5 cv
893.255 349.383 891.188 350.889 890.435 352.771 cv
889.709 354.597 890.617 356.644 890.007 358.5 cv
894.232 358.73 896.275 354.431 895.577 350.873 cv
895.54 350.698 li
f
895.54 350.698 mo
895.577 350.873 li
895.567 350.806 li
895.54 350.698 li
cp
f
867.735 347.496 mo
869.081 348.13 866.396 346.842 867.735 347.496 cv
cp
f
867.735 347.496 mo
866.934 347.105 866.105 346.772 865.257 346.5 cv
865.326 348.68 865.509 351.388 866.722 353.277 cv
867.825 355.132 870.144 356.348 871.757 357.75 cv
873.231 353.466 871.883 349.448 867.735 347.496 cv
cp
f
858.923 334.716 mo
842.93 328.557 833.831 333.956 822.661 341.461 cv
812.092 331.284 789.993 331.732 780.14 341.497 cv
779.653 342.094 779.131 342.688 778.551 343.278 cv
779.034 342.652 779.57 342.062 780.14 341.497 cv
798.191 319.358 752.615 293.36 738.794 321.084 cv
734.487 329.723 730.059 350.078 744.268 356.564 cv
862.756 356.564 li
877.526 352.992 868.577 338.435 858.923 334.716 cv
.266667 .541176 .129412 rgb
f
780.14 341.497 mo
779.57 342.062 779.034 342.652 778.551 343.278 cv
779.131 342.688 779.653 342.094 780.14 341.497 cv
cp
.764706 .858824 .309804 rgb
f
146.279 322.405 mo
145.947 323.108 145.693 323.759 145.539 324.31 cv
145.812 323.766 146.058 323.12 146.279 322.405 cv
cp
f
138.389 285.826 mo
139.031 285.113 136.957 287.201 138.389 285.826 cv
cp
.266667 .541176 .129412 rgb
f
160.948 326.59 mo
161.897 322.98 162.503 314.496 158.01 313.064 cv
153.509 311.63 148.337 318.057 146.279 322.405 cv
146.058 323.12 145.812 323.766 145.539 324.31 cv
145.693 323.759 145.947 323.108 146.279 322.405 cv
148.823 314.208 147.861 295.864 140.288 291.146 cv
140.699 288.868 140.874 286.474 141.007 283.75 cv
140.067 284.32 139.126 285.009 138.389 285.826 cv
137.042 287.12 136.164 288.546 135.65 290.051 cv
133.855 290.192 132.245 290.777 130.805 291.716 cv
129.61 289.303 127.787 287.229 125.757 285.25 cv
125.025 289.244 125.425 292.594 127.039 295.431 cv
120.848 304.056 119.556 320.98 121.037 331.292 cv
119.156 328.802 115.94 327.602 113.68 330.916 cv
109.1 319.629 95.5521 322.02 92.2633 332.569 cv
91.2927 327.319 85.1529 320.675 79.5268 319.733 cv
79.9603 317.665 78.9309 315.767 77.7572 313.75 cv
76.0244 315.029 73.8295 317.244 74.4139 319.616 cv
73.0387 319.03 71.491 318.813 70.0072 318.75 cv
70.1969 321.141 70.8194 322.816 71.9516 323.959 cv
68.4535 331.525 72.8751 358.52 84.2731 356.451 cv
169.964 356.451 li
175.308 351.335 178.639 341.012 179.182 333.837 cv
180.118 321.475 168.908 316.096 160.948 326.59 cv
f
800.473 229.322 mo
780.283 229.322 763.916 251.197 763.916 278.182 cv
763.916 305.166 780.283 327.041 800.473 327.041 cv
820.663 327.041 837.03 305.166 837.03 278.182 cv
837.03 251.197 820.663 229.322 800.473 229.322 cv
.603922 .737255 .192157 rgb
f
763.942 280.032 mo
763.942 280.03 763.942 280.028 763.942 280.026 cv
763.942 280.028 763.942 280.03 763.942 280.032 cv
763.94 279.953 mo
763.939 279.951 763.939 279.948 763.939 279.946 cv
763.939 279.947 763.94 279.951 763.94 279.953 cv
763.938 279.875 mo
763.937 279.872 763.937 279.868 763.937 279.864 cv
763.937 279.868 763.937 279.872 763.938 279.875 cv
763.936 279.797 mo
763.935 279.792 763.935 279.788 763.935 279.784 cv
763.935 279.789 763.935 279.792 763.936 279.797 cv
763.934 279.718 mo
763.934 279.713 763.933 279.708 763.933 279.703 cv
763.933 279.708 763.934 279.713 763.934 279.718 cv
763.932 279.639 mo
763.932 279.634 763.932 279.628 763.932 279.623 cv
763.932 279.628 763.932 279.634 763.932 279.639 cv
763.93 279.559 mo
763.93 279.554 763.93 279.548 763.93 279.543 cv
763.93 279.55 763.93 279.553 763.93 279.559 cv
763.929 279.48 mo
763.929 279.474 763.928 279.468 763.928 279.462 cv
763.928 279.469 763.929 279.474 763.929 279.48 cv
763.927 279.404 mo
763.927 279.397 763.927 279.389 763.927 279.381 cv
763.927 279.389 763.927 279.396 763.927 279.404 cv
763.926 279.325 mo
763.926 279.317 763.926 279.31 763.925 279.301 cv
763.926 279.309 763.926 279.317 763.926 279.325 cv
763.924 279.246 mo
763.924 279.238 763.924 279.23 763.924 279.221 cv
763.924 279.23 763.924 279.238 763.924 279.246 cv
763.923 279.168 mo
763.923 279.158 763.923 279.15 763.923 279.141 cv
763.923 279.15 763.923 279.158 763.923 279.168 cv
763.922 279.089 mo
763.922 279.079 763.922 279.071 763.922 279.061 cv
763.922 279.071 763.922 279.079 763.922 279.089 cv
763.921 279.007 mo
763.921 278.999 763.921 278.99 763.921 278.982 cv
763.921 278.99 763.921 278.999 763.921 279.007 cv
763.92 278.928 mo
763.92 278.919 763.92 278.911 763.92 278.902 cv
763.92 278.91 763.92 278.92 763.92 278.928 cv
763.919 278.849 mo
763.919 278.84 763.919 278.831 763.919 278.821 cv
763.919 278.83 763.919 278.841 763.919 278.849 cv
763.919 278.771 mo
763.919 278.761 763.918 278.751 763.918 278.741 cv
763.918 278.751 763.919 278.761 763.919 278.771 cv
763.918 278.691 mo
763.918 278.681 763.918 278.671 763.918 278.661 cv
763.918 278.671 763.918 278.681 763.918 278.691 cv
763.917 278.611 mo
763.917 278.602 763.917 278.591 763.917 278.582 cv
763.917 278.592 763.917 278.601 763.917 278.611 cv
763.917 278.529 mo
763.917 278.519 763.917 278.511 763.917 278.502 cv
763.917 278.51 763.917 278.52 763.917 278.529 cv
763.917 278.445 mo
763.916 278.437 763.916 278.43 763.916 278.422 cv
763.916 278.429 763.916 278.438 763.917 278.445 cv
763.916 278.366 mo
763.916 278.358 763.916 278.35 763.916 278.342 cv
763.916 278.35 763.916 278.358 763.916 278.366 cv
763.916 278.29 mo
763.916 278.28 763.916 278.271 763.916 278.262 cv
763.916 278.271 763.916 278.28 763.916 278.29 cv
763.916 278.091 mo
763.916 278.083 763.916 278.075 763.916 278.067 cv
763.916 278.075 763.916 278.083 763.916 278.091 cv
763.916 277.997 mo
763.916 277.99 763.916 277.983 763.916 277.975 cv
763.916 277.984 763.916 277.989 763.916 277.997 cv
763.917 277.897 mo
763.917 277.893 763.917 277.889 763.917 277.885 cv
763.917 277.888 763.917 277.893 763.917 277.897 cv
.447059 .67451 .266667 rgb
f
801.089 323.409 mo
801.088 323.409 801.087 323.409 801.086 323.409 cv
798.701 323.409 796.261 323.144 793.805 322.591 cv
793.768 322.583 793.733 322.575 793.696 322.567 cv
793.685 322.564 793.673 322.561 793.662 322.559 cv
793.628 322.551 793.594 322.543 793.56 322.535 cv
793.56 322.535 li
786.539 321.131 780.322 317.779 775.034 313.267 cv
768.487 304.786 764.305 293.062 763.942 280.032 cv
763.942 280.03 763.942 280.028 763.942 280.026 cv
763.941 280.002 763.94 279.977 763.94 279.953 cv
763.94 279.951 763.939 279.947 763.939 279.946 cv
763.939 279.922 763.938 279.899 763.938 279.875 cv
763.937 279.872 763.937 279.868 763.937 279.864 cv
763.937 279.842 763.936 279.819 763.936 279.797 cv
763.935 279.792 763.935 279.789 763.935 279.784 cv
763.935 279.762 763.934 279.74 763.934 279.718 cv
763.934 279.713 763.933 279.708 763.933 279.703 cv
763.933 279.682 763.932 279.661 763.932 279.639 cv
763.932 279.634 763.932 279.628 763.932 279.623 cv
763.931 279.601 763.931 279.581 763.93 279.559 cv
763.93 279.553 763.93 279.55 763.93 279.543 cv
763.929 279.522 763.929 279.501 763.929 279.48 cv
763.929 279.474 763.928 279.469 763.928 279.462 cv
763.928 279.442 763.928 279.425 763.927 279.404 cv
763.927 279.396 763.927 279.389 763.927 279.381 cv
763.926 279.363 763.926 279.343 763.926 279.325 cv
763.926 279.317 763.926 279.309 763.925 279.301 cv
763.925 279.283 763.925 279.264 763.924 279.246 cv
763.924 279.238 763.924 279.23 763.924 279.221 cv
763.924 279.204 763.924 279.185 763.923 279.168 cv
763.923 279.158 763.923 279.15 763.923 279.141 cv
763.923 279.124 763.922 279.106 763.922 279.089 cv
763.922 279.079 763.922 279.071 763.922 279.061 cv
763.922 279.044 763.921 279.024 763.921 279.007 cv
763.921 278.999 763.921 278.99 763.921 278.982 cv
763.921 278.964 763.92 278.946 763.92 278.928 cv
763.92 278.92 763.92 278.91 763.92 278.902 cv
763.92 278.884 763.919 278.866 763.919 278.849 cv
763.919 278.841 763.919 278.83 763.919 278.821 cv
763.919 278.805 763.919 278.788 763.919 278.771 cv
763.919 278.761 763.918 278.751 763.918 278.741 cv
763.918 278.725 763.918 278.708 763.918 278.691 cv
763.918 278.681 763.918 278.671 763.918 278.661 cv
763.918 278.645 763.917 278.628 763.917 278.611 cv
763.917 278.601 763.917 278.592 763.917 278.582 cv
763.917 278.564 763.917 278.546 763.917 278.529 cv
763.917 278.52 763.917 278.51 763.917 278.502 cv
763.917 278.483 763.917 278.464 763.917 278.445 cv
763.916 278.438 763.916 278.429 763.916 278.422 cv
763.916 278.404 763.916 278.384 763.916 278.366 cv
763.916 278.358 763.916 278.35 763.916 278.342 cv
763.916 278.325 763.916 278.306 763.916 278.29 cv
763.916 278.28 763.916 278.271 763.916 278.262 cv
763.916 278.235 763.916 278.209 763.916 278.182 cv
763.916 278.182 li
763.916 278.152 763.916 278.122 763.916 278.091 cv
763.916 278.083 763.916 278.075 763.916 278.067 cv
763.916 278.044 763.916 278.02 763.916 277.997 cv
763.916 277.989 763.916 277.984 763.916 277.975 cv
763.916 277.949 763.917 277.923 763.917 277.897 cv
763.917 277.893 763.917 277.888 763.917 277.885 cv
763.926 275.899 764.024 273.941 764.205 272.018 cv
765.742 277.356 768.122 282.589 770.36 287.384 cv
774.539 296.206 782.549 303.034 791.659 304.832 cv
791.148 305.002 790.662 305.131 790.24 305.225 cv
789.791 305.325 789.414 305.391 789.148 305.425 cv
788.883 305.462 788.732 305.482 788.732 305.482 cv
788.732 305.482 788.884 305.48 789.153 305.476 cv
789.421 305.474 789.806 305.454 790.27 305.408 cv
790.916 305.344 791.719 305.218 792.558 304.992 cv
793.818 305.193 795.097 305.298 796.388 305.298 cv
797.081 305.298 797.778 305.268 798.477 305.206 cv
799.04 305.573 799.61 305.889 800.167 306.147 cv
800.453 306.278 800.735 306.392 801.011 306.493 cv
801.093 309.2 801.152 311.987 801.178 314.812 cv
801.185 315.518 801.189 316.227 801.191 316.937 cv
801.194 317.815 801.194 318.695 801.19 319.576 cv
801.185 320.853 801.171 322.132 801.148 323.409 cv
801.132 323.409 801.115 323.409 801.099 323.409 cv
801.095 323.409 801.092 323.409 801.089 323.409 cv
803.724 323.301 mo
803.679 322.041 803.626 320.781 803.563 319.525 cv
803.515 318.52 803.46 317.52 803.402 316.522 cv
804.639 316.153 805.927 315.56 807.125 314.756 cv
807.823 314.304 808.48 313.77 809.122 313.216 cv
809.751 312.648 810.356 312.048 810.917 311.417 cv
811.277 311.013 811.615 310.598 811.942 310.18 cv
812.191 309.862 812.43 309.542 812.659 309.22 cv
813.548 307.973 814.296 306.71 814.895 305.536 cv
815.357 305.706 815.905 305.819 816.457 305.819 cv
816.593 305.819 816.73 305.812 816.866 305.797 cv
817.698 305.728 818.437 305.345 818.866 304.961 cv
818.982 304.876 819.064 304.768 819.146 304.688 cv
819.337 304.458 li
819.434 304.327 819.489 304.252 819.489 304.252 cv
819.489 304.252 819.42 304.314 819.299 304.424 cv
819.184 304.536 818.994 304.673 818.759 304.81 cv
818.359 305.044 817.783 305.222 817.185 305.222 cv
817.077 305.222 816.968 305.216 816.859 305.204 cv
816.279 305.153 815.73 304.942 815.308 304.692 cv
815.456 304.377 815.594 304.07 815.72 303.775 cv
816.197 302.66 816.513 301.705 816.709 301.034 cv
816.812 300.7 816.876 300.433 816.923 300.252 cv
816.969 300.071 816.994 299.975 816.994 299.975 cv
816.994 299.975 816.96 300.069 816.897 300.244 cv
816.834 300.42 816.746 300.678 816.612 301 cv
816.356 301.648 815.957 302.562 815.385 303.615 cv
815.242 303.879 815.088 304.153 814.924 304.433 cv
814.756 304.719 814.576 305.013 814.387 305.312 cv
814.024 305.883 813.624 306.473 813.185 307.067 cv
812.898 307.455 812.588 307.843 812.269 308.229 cv
811.863 307.114 811.493 305.803 811.248 304.473 cv
810.973 303.071 810.812 301.663 810.71 300.491 cv
814.903 297.478 818.257 293.529 820.626 288.791 cv
828.008 272.621 827.305 253.992 819.22 238.174 cv
818.696 237.102 818.141 236.036 817.557 234.979 cv
825.62 240.686 831.891 250.309 834.959 261.951 cv
834.959 261.951 li
834.959 261.951 li
835.783 266.536 836.215 271.18 836.215 275.81 cv
836.217 286.09 834.094 296.302 829.413 305.663 cv
829.397 305.696 829.381 305.73 829.365 305.763 cv
824.468 315.74 814.801 322.385 803.724 323.301 cv
803.282 314.541 mo
803.118 311.97 802.929 309.434 802.724 306.965 cv
802.66 306.196 802.594 305.436 802.528 304.681 cv
802.523 304.62 802.517 304.56 802.512 304.499 cv
803.747 304.173 804.984 303.743 806.214 303.202 cv
807.709 302.455 809.126 301.609 810.459 300.67 cv
810.464 301.818 810.509 303.18 810.661 304.561 cv
810.818 306.147 811.152 307.749 811.553 309.06 cv
811.082 309.585 810.588 310.1 810.067 310.589 cv
809.482 311.138 808.863 311.649 808.233 312.124 cv
807.592 312.582 806.949 313.018 806.286 313.367 cv
805.272 313.925 804.243 314.308 803.282 314.541 cv
.505882 .619608 .184314 rgb
f
800.473 327.041 mo
800.453 327.041 800.433 327.041 800.414 327.041 cv
800.434 327.041 800.453 327.041 800.473 327.041 cv
800.473 327.041 800.473 327.041 800.473 327.041 cv
800.406 327.041 mo
800.389 327.041 800.372 327.041 800.356 327.041 cv
800.373 327.041 800.389 327.041 800.406 327.041 cv
800.338 327.041 mo
800.324 327.041 800.31 327.041 800.297 327.041 cv
800.31 327.041 800.324 327.041 800.338 327.041 cv
800.279 327.041 mo
800.266 327.04 800.252 327.04 800.238 327.04 cv
800.253 327.04 800.265 327.04 800.279 327.041 cv
800.223 327.04 mo
800.208 327.04 800.194 327.04 800.179 327.04 cv
800.194 327.04 800.208 327.04 800.223 327.04 cv
800.164 327.039 mo
800.15 327.039 800.135 327.039 800.121 327.039 cv
800.134 327.039 800.151 327.039 800.164 327.039 cv
800.102 327.039 mo
800.089 327.039 800.076 327.038 800.063 327.038 cv
800.076 327.038 800.089 327.039 800.102 327.039 cv
800.042 327.038 mo
800.029 327.038 800.017 327.037 800.004 327.037 cv
800.016 327.037 800.029 327.038 800.042 327.038 cv
799.983 327.037 mo
799.97 327.037 799.958 327.036 799.945 327.036 cv
799.958 327.036 799.971 327.037 799.983 327.037 cv
799.925 327.036 mo
799.913 327.036 799.9 327.035 799.887 327.035 cv
799.901 327.035 799.912 327.036 799.925 327.036 cv
799.865 327.035 mo
799.853 327.034 799.841 327.034 799.829 327.034 cv
799.841 327.034 799.853 327.034 799.865 327.035 cv
799.806 327.033 mo
799.795 327.033 799.782 327.033 799.771 327.032 cv
799.782 327.033 799.795 327.033 799.806 327.033 cv
799.746 327.032 mo
799.734 327.031 799.724 327.031 799.713 327.031 cv
799.724 327.031 799.735 327.031 799.746 327.032 cv
799.687 327.03 mo
799.676 327.03 799.666 327.03 799.655 327.029 cv
799.666 327.03 799.676 327.03 799.687 327.03 cv
799.626 327.028 mo
799.617 327.028 799.607 327.028 799.597 327.027 cv
799.607 327.028 799.617 327.028 799.626 327.028 cv
799.569 327.027 mo
799.559 327.026 799.548 327.026 799.539 327.026 cv
799.549 327.026 799.559 327.026 799.569 327.027 cv
799.51 327.025 mo
799.501 327.024 799.49 327.024 799.481 327.024 cv
799.491 327.024 799.5 327.024 799.51 327.025 cv
799.451 327.022 mo
799.442 327.022 799.432 327.022 799.423 327.021 cv
799.433 327.022 799.441 327.022 799.451 327.022 cv
799.392 327.02 mo
799.383 327.02 799.374 327.02 799.365 327.019 cv
799.375 327.02 799.382 327.02 799.392 327.02 cv
799.334 327.018 mo
799.325 327.018 799.317 327.017 799.308 327.017 cv
799.316 327.017 799.326 327.018 799.334 327.018 cv
799.274 327.015 mo
799.267 327.015 799.258 327.015 799.251 327.014 cv
799.258 327.015 799.267 327.015 799.274 327.015 cv
799.216 327.013 mo
799.208 327.013 799.201 327.012 799.193 327.012 cv
799.202 327.012 799.208 327.012 799.216 327.013 cv
799.157 327.01 mo
799.15 327.01 799.143 327.009 799.136 327.009 cv
799.144 327.009 799.15 327.01 799.157 327.01 cv
799.099 327.007 mo
799.092 327.007 799.086 327.007 799.079 327.006 cv
799.086 327.007 799.092 327.007 799.099 327.007 cv
799.039 327.004 mo
799.033 327.004 799.028 327.004 799.022 327.003 cv
799.027 327.004 799.034 327.004 799.039 327.004 cv
798.981 327.001 mo
798.976 327.001 798.971 327.001 798.965 327 cv
798.972 327.001 798.975 327.001 798.981 327.001 cv
798.922 326.998 mo
798.918 326.998 798.914 326.998 798.909 326.997 cv
798.913 326.997 798.918 326.998 798.922 326.998 cv
798.864 326.995 mo
798.86 326.994 798.857 326.994 798.852 326.994 cv
798.857 326.994 798.859 326.994 798.864 326.995 cv
798.805 326.991 mo
798.802 326.991 798.8 326.991 798.797 326.991 cv
798.799 326.991 798.802 326.991 798.805 326.991 cv
798.747 326.988 mo
798.745 326.988 798.742 326.987 798.74 326.987 cv
798.743 326.987 798.744 326.988 798.747 326.988 cv
798.689 326.984 mo
798.687 326.984 798.686 326.984 798.685 326.984 cv
798.687 326.984 798.686 326.984 798.689 326.984 cv
798.631 326.98 mo
798.63 326.98 798.63 326.98 798.628 326.98 cv
798.63 326.98 798.63 326.98 798.631 326.98 cv
.411765 .647059 .258824 rgb
f
800.473 327.041 mo
800.453 327.041 800.434 327.041 800.414 327.041 cv
800.411 327.041 800.409 327.041 800.406 327.041 cv
800.389 327.041 800.373 327.041 800.356 327.041 cv
800.349 327.041 800.344 327.041 800.338 327.041 cv
800.324 327.041 800.31 327.041 800.297 327.041 cv
800.291 327.041 800.285 327.041 800.279 327.041 cv
800.265 327.04 800.253 327.04 800.238 327.04 cv
800.233 327.04 800.228 327.04 800.223 327.04 cv
800.208 327.04 800.194 327.04 800.179 327.04 cv
800.174 327.04 800.17 327.04 800.164 327.039 cv
800.151 327.039 800.134 327.039 800.121 327.039 cv
800.115 327.039 800.108 327.039 800.102 327.039 cv
800.089 327.039 800.076 327.038 800.063 327.038 cv
800.056 327.038 800.048 327.038 800.042 327.038 cv
800.029 327.038 800.016 327.037 800.004 327.037 cv
799.997 327.037 799.99 327.037 799.983 327.037 cv
799.971 327.037 799.958 327.036 799.945 327.036 cv
799.939 327.036 799.932 327.036 799.925 327.036 cv
799.912 327.036 799.901 327.035 799.887 327.035 cv
799.88 327.035 799.872 327.035 799.865 327.035 cv
799.853 327.034 799.841 327.034 799.829 327.034 cv
799.821 327.034 799.814 327.033 799.806 327.033 cv
799.795 327.033 799.782 327.033 799.771 327.032 cv
799.763 327.032 799.754 327.032 799.746 327.032 cv
799.735 327.031 799.724 327.031 799.713 327.031 cv
799.704 327.031 799.695 327.03 799.687 327.03 cv
799.676 327.03 799.666 327.03 799.655 327.029 cv
799.646 327.029 799.636 327.029 799.626 327.028 cv
799.617 327.028 799.607 327.028 799.597 327.027 cv
799.588 327.027 799.578 327.027 799.569 327.027 cv
799.559 327.026 799.549 327.026 799.539 327.026 cv
799.529 327.025 799.52 327.025 799.51 327.025 cv
799.5 327.024 799.491 327.024 799.481 327.024 cv
799.471 327.023 799.461 327.023 799.451 327.022 cv
799.441 327.022 799.433 327.022 799.423 327.021 cv
799.413 327.021 799.403 327.021 799.392 327.02 cv
799.382 327.02 799.375 327.02 799.365 327.019 cv
799.355 327.019 799.345 327.018 799.334 327.018 cv
799.326 327.018 799.316 327.017 799.308 327.017 cv
799.297 327.016 799.286 327.016 799.274 327.015 cv
799.267 327.015 799.258 327.015 799.251 327.014 cv
799.239 327.014 799.228 327.013 799.216 327.013 cv
799.208 327.012 799.202 327.012 799.193 327.012 cv
799.181 327.011 799.169 327.011 799.157 327.01 cv
799.15 327.01 799.144 327.009 799.136 327.009 cv
799.124 327.009 799.111 327.008 799.099 327.007 cv
799.092 327.007 799.086 327.007 799.079 327.006 cv
799.066 327.006 799.052 327.005 799.039 327.004 cv
799.034 327.004 799.027 327.004 799.022 327.003 cv
799.009 327.003 798.995 327.002 798.981 327.001 cv
798.975 327.001 798.972 327.001 798.965 327 cv
798.951 327 798.936 326.999 798.922 326.998 cv
798.918 326.998 798.913 326.997 798.909 326.997 cv
798.894 326.996 798.879 326.996 798.864 326.995 cv
798.859 326.994 798.857 326.994 798.852 326.994 cv
798.837 326.993 798.82 326.992 798.805 326.991 cv
798.802 326.991 798.799 326.991 798.797 326.991 cv
798.781 326.99 798.764 326.989 798.747 326.988 cv
798.744 326.988 798.743 326.987 798.74 326.987 cv
798.723 326.986 798.705 326.985 798.689 326.984 cv
798.686 326.984 798.687 326.984 798.685 326.984 cv
798.667 326.983 798.649 326.981 798.631 326.98 cv
798.63 326.98 798.63 326.98 798.628 326.98 cv
789.472 326.372 781.203 321.259 775.034 313.267 cv
780.322 317.779 786.539 321.131 793.56 322.535 cv
793.56 322.535 li
793.594 322.543 793.628 322.551 793.662 322.559 cv
793.673 322.561 793.685 322.564 793.696 322.567 cv
793.733 322.575 793.768 322.583 793.805 322.591 cv
796.262 323.144 798.7 323.409 801.086 323.409 cv
801.087 323.409 801.088 323.409 801.089 323.409 cv
801.089 323.409 li
801.089 323.409 li
801.092 323.409 801.095 323.409 801.099 323.409 cv
801.115 323.409 801.132 323.409 801.148 323.409 cv
801.126 324.62 801.095 325.831 801.056 327.035 cv
800.862 327.039 800.667 327.041 800.473 327.041 cv
.552941 .678431 .188235 rgb
f
803.824 326.839 mo
803.799 325.662 803.766 324.481 803.724 323.301 cv
814.802 322.386 824.468 315.741 829.365 305.763 cv
829.381 305.73 829.397 305.696 829.413 305.663 cv
834.094 296.302 836.217 286.09 836.215 275.81 cv
836.215 271.18 835.783 266.536 834.959 261.951 cv
836.297 267.029 837.029 272.491 837.029 278.182 cv
837.029 303.656 822.443 324.577 803.824 326.839 cv
f
803.724 323.301 mo
803.724 323.301 li
814.801 322.385 824.468 315.74 829.365 305.763 cv
824.468 315.741 814.802 322.386 803.724 323.301 cv
836.215 275.81 mo
836.215 271.18 835.783 266.536 834.959 261.951 cv
834.959 261.951 li
835.783 266.536 836.215 271.18 836.215 275.81 cv
.462745 .568627 .180392 rgb
f
818.759 304.81 mo
818.287 305.086 817.569 305.284 816.859 305.204 cv
816.279 305.153 815.73 304.942 815.308 304.692 cv
815.456 304.377 815.594 304.07 815.72 303.775 cv
816.197 302.66 816.513 301.705 816.709 301.034 cv
816.812 300.7 816.876 300.433 816.923 300.252 cv
816.969 300.071 816.994 299.975 816.994 299.975 cv
816.994 299.975 816.96 300.069 816.897 300.244 cv
816.834 300.42 816.746 300.678 816.612 301 cv
816.356 301.648 815.957 302.562 815.385 303.615 cv
815.242 303.879 815.088 304.153 814.924 304.433 cv
814.756 304.719 814.576 305.013 814.387 305.312 cv
814.024 305.883 813.624 306.473 813.185 307.067 cv
812.898 307.455 812.588 307.843 812.269 308.229 cv
811.863 307.114 811.493 305.803 811.248 304.473 cv
810.91 302.749 810.744 301.015 810.649 299.723 cv
810.556 298.429 810.525 297.573 810.525 297.573 cv
810.525 297.573 810.482 298.428 810.464 299.729 cv
810.447 301.029 810.465 302.78 810.661 304.561 cv
810.818 306.147 811.152 307.749 811.553 309.06 cv
811.082 309.585 810.588 310.1 810.067 310.589 cv
809.482 311.138 808.863 311.649 808.233 312.124 cv
807.592 312.582 806.949 313.018 806.286 313.367 cv
805.272 313.925 804.243 314.308 803.282 314.541 cv
803.118 311.97 802.929 309.434 802.724 306.965 cv
802.66 306.196 802.594 305.436 802.528 304.681 cv
802.031 299.056 801.467 293.846 800.965 289.459 cv
800.484 285.423 800.087 282.076 799.808 279.738 cv
799.525 277.401 799.364 276.073 799.364 276.073 cv
799.364 276.073 799.706 281.414 800.226 289.523 cv
800.262 290.139 800.299 290.775 800.336 291.422 cv
800.223 291.385 li
800.118 291.349 800.009 291.292 799.885 291.241 cv
799.41 291.004 798.841 290.55 798.397 289.965 cv
797.939 289.393 797.59 288.732 797.354 288.231 cv
797.12 287.727 796.992 287.38 796.992 287.38 cv
796.992 287.38 797.048 287.744 797.179 288.292 cv
797.313 288.839 797.528 289.575 797.896 290.284 cv
798.246 290.999 798.792 291.666 799.347 292.086 cv
799.491 292.183 799.622 292.281 799.752 292.354 cv
799.885 292.424 800.005 292.487 800.108 292.54 cv
800.23 292.589 800.329 292.626 800.405 292.654 cv
800.602 296.191 800.794 300.131 800.939 304.297 cv
800.916 304.29 li
799.96 303.957 798.897 303.434 797.86 302.708 cv
797.683 302.585 797.508 302.451 797.333 302.319 cv
797.051 302.107 796.773 301.885 796.498 301.651 cv
795.936 301.172 795.388 300.656 794.868 300.11 cv
794.822 300.06 li
795.141 299.376 795.362 298.563 795.443 297.768 cv
795.572 296.72 795.531 295.703 795.494 294.951 cv
795.452 294.2 795.411 293.707 795.411 293.707 cv
795.411 293.707 795.37 294.2 795.308 294.948 cv
795.235 295.692 795.125 296.694 794.86 297.656 cv
794.704 298.279 794.46 298.868 794.179 299.358 cv
792.62 297.589 791.346 295.671 790.453 294.151 cv
789.939 293.281 789.548 292.537 789.282 292.013 cv
789.015 291.49 788.873 291.188 788.873 291.188 cv
788.873 291.188 788.981 291.504 789.189 292.055 cv
789.396 292.606 789.704 293.391 790.123 294.321 cv
790.882 296.009 792.009 298.183 793.506 300.257 cv
793.657 300.465 793.807 300.674 793.965 300.881 cv
794.154 301.116 li
794.581 301.66 795.034 302.188 795.512 302.69 cv
794.929 303.203 794.208 303.709 793.419 304.097 cv
792.322 304.666 791.137 305.026 790.24 305.225 cv
789.791 305.325 789.414 305.391 789.148 305.425 cv
788.883 305.462 788.732 305.482 788.732 305.482 cv
788.732 305.482 788.884 305.48 789.153 305.476 cv
789.421 305.474 789.806 305.454 790.27 305.408 cv
791.195 305.316 792.442 305.098 793.656 304.64 cv
794.561 304.322 795.43 303.849 796.15 303.337 cv
796.385 303.561 796.622 303.781 796.864 303.989 cv
797.918 304.904 799.067 305.637 800.167 306.147 cv
800.453 306.278 800.735 306.392 801.011 306.493 cv
801.093 309.2 801.152 311.987 801.178 314.812 cv
801.185 315.518 801.189 316.227 801.191 316.937 cv
801.194 317.815 801.194 318.695 801.19 319.576 cv
801.149 330.626 800.426 341.863 798.818 350.459 cv
798.037 354.759 797.066 358.388 796.144 361.051 cv
796.031 361.385 795.923 361.706 795.819 362.014 cv
795.701 362.313 795.589 362.6 795.481 362.873 cv
795.263 363.415 795.088 363.914 794.899 364.332 cv
794.519 365.164 794.25 365.767 794.104 366.107 cv
798.405 368.119 li
798.571 367.736 798.859 367.047 799.25 366.093 cv
799.445 365.615 799.617 365.062 799.834 364.451 cv
799.94 364.145 800.05 363.824 800.166 363.488 cv
800.265 363.149 800.367 362.795 800.475 362.427 cv
801.349 359.484 802.189 355.585 802.776 351.078 cv
803.996 342.061 804.115 330.648 803.563 319.525 cv
803.515 318.52 803.46 317.52 803.402 316.522 cv
804.639 316.153 805.927 315.56 807.125 314.756 cv
807.823 314.304 808.48 313.77 809.122 313.216 cv
809.751 312.648 810.356 312.048 810.917 311.417 cv
811.277 311.013 811.615 310.598 811.942 310.18 cv
812.191 309.862 812.43 309.542 812.659 309.22 cv
813.548 307.973 814.296 306.71 814.895 305.536 cv
815.472 305.748 816.181 305.872 816.866 305.797 cv
817.698 305.728 818.437 305.345 818.866 304.961 cv
818.982 304.876 819.064 304.768 819.146 304.688 cv
819.337 304.458 li
819.434 304.327 819.489 304.252 819.489 304.252 cv
819.489 304.252 819.42 304.314 819.299 304.424 cv
819.184 304.536 818.994 304.673 818.759 304.81 cv
.360784 .145098 .156863 rgb
f
781.604 266.951 mo
775.109 266.95 773.969 260.009 776.517 253.301 cv
779.083 246.549 783.688 238.36 791.201 236.444 cv
791.749 236.305 792.313 236.198 792.893 236.128 cv
793.307 236.078 793.724 236.054 794.144 236.054 cv
799.824 236.054 805.679 240.557 804.575 246.938 cv
803.002 256.034 793.926 263.657 785.46 266.292 cv
784.008 266.744 782.727 266.951 781.604 266.951 cv
.756863 .835294 .25098 rgb
f
810.245 253.641 mo
810.242 253.641 810.273 253.554 810.312 253.449 cv
810.312 253.449 li
810.372 253.32 li
810.282 253.555 810.247 253.641 810.245 253.641 cv
f
810.372 253.32 mo
810.405 253.198 li
810.405 253.198 li
810.435 253.118 810.458 253.06 810.46 253.06 cv
810.462 253.06 810.439 253.13 810.372 253.32 cv
f
810.312 253.449 mo
810.405 253.198 li
810.372 253.32 li
810.312 253.449 li
f
802.582 259.498 mo
803.806 256.478 804.099 253.184 805.411 250.219 cv
806.486 248.003 807.658 245.92 808.44 243.563 cv
810.449 246.219 811.483 249.953 810.405 253.198 cv
810.405 253.198 li
810.312 253.449 li
810.312 253.449 li
809.023 256.627 805.912 258.894 802.582 259.498 cv
f
98.0832 196.966 mo
85.5506 195.816 74.4881 236.413 63.7935 267.71 cv
52.2576 299.344 67.0433 319.835 98.27 317.429 cv
129.477 313.566 143.977 292.45 132.487 265.13 cv
121.835 238.109 110.638 198.951 98.0832 196.966 cv
.603922 .737255 .192157 rgb
f
65.4999 306.028 mo
65.3987 305.958 65.2985 305.888 65.1989 305.818 cv
63.5143 303.595 62.2833 301.125 61.4603 298.413 cv
61.4853 298.409 61.5107 298.404 61.5358 298.4 cv
62.4728 301.223 63.8023 303.775 65.4999 306.028 cv
.447059 .67451 .266667 rgb
f
61.4603 298.413 mo
61.2172 297.612 61.0097 296.79 60.8366 295.947 cv
61.0381 296.785 61.2714 297.604 61.5358 298.4 cv
61.5107 298.404 61.4853 298.409 61.4603 298.413 cv
63.7935 267.71 mo
64.5021 265.209 65.2726 262.692 66.0785 260.165 cv
66.0206 260.575 65.9685 260.982 65.9222 261.388 cv
65.2111 263.525 64.5011 265.639 63.7935 267.71 cv
.596078 .737255 .34902 rgb
f
125.683 246.403 mo
125.617 246.397 125.554 246.392 125.488 246.386 cv
124.479 243.617 123.462 240.834 122.44 238.079 cv
123.515 240.85 124.595 243.64 125.683 246.403 cv
.141176 .490196 .415686 rgb
f
129.494 257.299 mo
128.169 253.745 126.834 250.077 125.488 246.386 cv
125.554 246.392 125.617 246.397 125.683 246.403 cv
125.722 246.502 125.76 246.599 125.799 246.697 cv
125.799 246.697 li
125.799 246.697 li
125.966 247.176 126.133 247.651 126.299 248.125 cv
127.405 251.272 128.489 254.326 129.494 257.299 cv
.447059 .67451 .266667 rgb
f
109.922 208.988 mo
109.762 208.703 109.603 208.423 109.442 208.146 cv
109.395 208.007 109.348 207.868 109.301 207.729 cv
109.518 208.119 109.735 208.516 109.951 208.921 cv
109.941 208.944 109.932 208.966 109.922 208.988 cv
level3{
gsave
clp
[1.01108e-008 -225.201 225.201 1.01108e-008 450 315.729 ]ct
/11 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~U!`S,d.X*Yp7BV(S^7#"cM!aQp6s;#REkMnc1[LKp6NqrQH]&fbP%.Bp6*SlOid<ZanCh;p5d;gNl^pR
aS(S5p5?ubMT5@H`qG5-p4pT[LW&n@_tJf%p4U?WK#@;6_Y/Ptp41!QJ&1i-_"N2kp3j^LI(o<#^@lid
p3==FGeNfp^%QW^p3"%AFM%6f]Cp9Vp2RY:E4P[\\FsgMp27D6D7K:U\+XUHp1^u/Bt!_K[J"7@p1C]*
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.01108e-008 -225.201 225.201 1.01108e-008 450 315.729 ]ct
clp
/11 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~TV.sNTV%jKT:VXGSt2FCSXc4?S=?";S!oe7R[KS3R@'A/R$X/+Q^3r'QBd`#Q'IW"Q'@MsPEM)lP*(lh
Ocb`eOH>QcOH>NaO,o<]NfK*YNK&mUN/W[QMi3IMMMd7IM2@%ELkphALPLV=L5(G;L5(D9KnY25KS4u1
JqAT*JUrB'JUrB&J:N0"It)rsIXZ`oI=6NkI!g<hI!g<gH[:!`H$O[[G^+IWGB\7TGB\7SG'8%OF`hhK
FEDVHF)uDDEcQ2@EH,u<E,]c8Df9Q4DJj?0D/F-,D/F-,Ci!p(CMR^$C2.HsBP;'mBP;'mB4kjiAnGXe
~>
<~d*U.dd*L%acd0q`cd'h]cHa_\cHXVYc-=MXc-=MXc-=MXc-4DUbfn;Tbfe2QbKJ)PbK@uMb/qcIaiVZH
aiVWFaN2HDaN2EBa2c6@a2c6@a2c6@a2c3>`l?$<`l?!:`Pog8`Pod6`5KR2_o'C0_o'@._SX1,_SX1,
_SX1,_SX1+_83t(_83t'^qdb$^qdb#^V@Ot^:q=q^:q=p]tM+m]tM+m]tM+m]tM+l]Y(ni]Y(nh]=Y\e
]=Y\e]"5Ja]"5Ja\[f8]\@B&Y\@B&Y\$riU\$riU\$riU\$riU[^NWQ[^NWQ[C*EM[C*EM['[3I['[3I
~>
245 ]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /11 /Gradient get_res exec grestore
}if
np
111.365 211.67 mo
110.886 210.742 110.405 209.848 109.922 208.988 cv
109.932 208.966 109.941 208.944 109.951 208.921 cv
110.423 209.805 110.895 210.723 111.365 211.67 cv
.141176 .490196 .415686 rgb
f
93.4685 313.089 mo
91.8491 313.089 90.2142 313.03 88.5744 312.909 cv
78.9888 312.396 71.0366 309.828 65.4999 306.028 cv
63.8023 303.775 62.4728 301.223 61.5358 298.4 cv
61.2714 297.604 61.0381 296.785 60.8366 295.947 cv
59.2579 288.256 60.5416 278.815 63.7935 267.71 cv
63.7935 267.71 li
64.5011 265.639 65.2111 263.525 65.9222 261.388 cv
65.3423 266.462 65.6501 271.215 66.4149 275.771 cv
67.3686 284.692 76.1013 290.594 87.1787 291.22 cv
86.5271 291.522 85.9079 291.773 85.3721 291.971 cv
84.8046 292.181 84.3281 292.337 83.995 292.432 cv
83.6614 292.53 83.4717 292.587 83.4717 292.587 cv
83.4717 292.587 83.6616 292.553 83.9957 292.495 cv
84.3303 292.439 84.8116 292.338 85.3935 292.193 cv
86.2078 291.991 87.2269 291.688 88.2948 291.265 cv
88.5779 291.271 88.8615 291.275 89.1473 291.275 cv
91.2651 291.275 93.4526 291.086 95.6764 290.694 cv
96.3926 291.094 97.1234 291.431 97.8417 291.701 cv
98.2046 291.835 98.5635 291.95 98.9148 292.048 cv
99.036 295.376 99.1345 298.801 99.1912 302.277 cv
99.2054 303.146 99.2169 304.019 99.2253 304.893 cv
99.2358 305.974 99.2435 307.055 99.244 308.142 cv
99.2478 309.705 99.2389 311.274 99.216 312.84 cv
97.3281 313.005 95.4083 313.089 93.4685 313.089 cv
102.839 312.422 mo
102.74 310.889 102.631 309.356 102.512 307.828 cv
102.418 306.601 102.316 305.38 102.213 304.162 cv
103.875 303.597 105.587 302.777 107.137 301.732 cv
108.042 301.145 108.876 300.468 109.68 299.776 cv
110.466 299.068 111.207 298.33 111.878 297.565 cv
112.309 297.075 112.705 296.574 113.084 296.073 cv
113.372 295.692 113.645 295.311 113.903 294.928 cv
114.903 293.446 115.691 291.968 116.284 290.603 cv
116.949 290.857 117.742 291.034 118.499 291.034 cv
118.577 291.034 118.655 291.032 118.733 291.028 cv
119.741 291.002 120.579 290.614 121.034 290.205 cv
121.161 290.115 121.242 289.997 121.328 289.911 cv
121.518 289.661 li
121.613 289.518 121.667 289.436 121.667 289.436 cv
121.666 289.436 121.595 289.501 121.468 289.617 cv
121.349 289.737 121.143 289.878 120.882 290.018 cv
120.488 290.229 119.914 290.379 119.282 290.379 cv
119.074 290.379 118.859 290.363 118.643 290.327 cv
117.929 290.226 117.231 289.943 116.685 289.623 cv
116.826 289.257 116.955 288.901 117.069 288.561 cv
117.503 287.27 117.747 286.168 117.886 285.393 cv
117.962 285.007 118 284.698 118.029 284.489 cv
118.058 284.282 118.073 284.17 118.073 284.17 cv
118.073 284.17 118.073 284.17 118.073 284.17 cv
118.073 284.17 li
118.073 284.17 118.073 284.17 118.073 284.17 cv
118.073 284.17 118.047 284.277 117.998 284.478 cv
117.948 284.679 117.881 284.976 117.767 285.345 cv
117.553 286.087 117.202 287.136 116.644 288.349 cv
116.504 288.654 116.351 288.97 116.185 289.293 cv
116.015 289.625 115.83 289.965 115.632 290.312 cv
115.254 290.976 114.824 291.666 114.34 292.364 cv
114.022 292.819 113.673 293.278 113.308 293.736 cv
112.685 292.394 112.099 290.814 111.676 289.211 cv
111.21 287.521 110.892 285.823 110.669 284.408 cv
115.448 280.888 118.717 276.635 120.349 271.586 cv
125.054 254.489 117.821 234.419 110.779 212.149 cv
110.34 210.819 109.893 209.483 109.442 208.146 cv
109.603 208.423 109.762 208.703 109.922 208.988 cv
110.405 209.848 110.886 210.742 111.365 211.67 cv
115.075 219.148 118.73 228.516 122.44 238.079 cv
123.462 240.834 124.479 243.617 125.488 246.386 cv
126.834 250.077 128.169 253.745 129.494 257.299 cv
132.565 266.383 134.905 274.714 134.905 282.623 cv
134.905 285.992 134.48 289.285 133.506 292.527 cv
133.506 292.527 li
133.506 292.527 li
131.068 302.418 118.62 310.028 103.31 312.352 cv
103.153 312.376 102.996 312.399 102.839 312.422 cv
102.001 301.743 mo
101.718 298.603 101.414 295.506 101.102 292.49 cv
101.005 291.55 100.907 290.621 100.809 289.699 cv
100.8 289.613 100.791 289.528 100.782 289.443 cv
102.307 288.963 103.837 288.385 105.359 287.704 cv
107.18 286.747 108.856 285.719 110.382 284.618 cv
110.484 286.002 110.652 287.645 110.958 289.309 cv
111.288 291.222 111.848 293.151 112.481 294.728 cv
111.93 295.357 111.342 295.98 110.709 296.578 cv
109.999 297.249 109.232 297.886 108.439 298.484 cv
107.631 299.064 106.809 299.625 105.95 300.089 cv
104.637 300.828 103.279 301.374 102.001 301.743 cv
.505882 .619608 .184314 rgb
f
93.2619 317.67 mo
89.7874 317.67 86.4585 317.314 83.3479 316.632 cv
86.4364 317.284 89.8007 317.62 93.4204 317.62 cv
94.9894 317.62 96.6061 317.557 98.27 317.429 cv
98.5519 317.394 98.8319 317.358 99.1111 317.32 cv
99.1111 317.32 li
98.8319 317.358 98.5519 317.394 98.27 317.429 cv
96.5732 317.591 94.9016 317.67 93.2619 317.67 cv
.411765 .647059 .258824 rgb
f
70.3806 310.976 mo
68.3574 309.478 66.6119 307.751 65.1989 305.818 cv
65.2985 305.888 65.3988 305.958 65.5 306.028 cv
66.898 307.883 68.546 309.535 70.4319 310.971 cv
70.4128 310.973 70.3997 310.974 70.3806 310.976 cv
.490196 .737255 .270588 rgb
f
72.6007 312.462 mo
71.8287 311.995 71.0872 311.499 70.3806 310.976 cv
70.3997 310.974 70.4128 310.973 70.4319 310.971 cv
71.1235 311.498 71.8458 311.994 72.6007 312.462 cv
.411765 .647059 .258824 rgb
f
93.4204 317.62 mo
89.8007 317.62 86.4364 317.284 83.3479 316.632 cv
79.3538 315.757 75.7201 314.346 72.6007 312.462 cv
71.8458 311.994 71.1235 311.498 70.4319 310.971 cv
68.546 309.535 66.898 307.883 65.5 306.028 cv
71.0367 309.829 78.9888 312.396 88.5744 312.909 cv
90.2155 313.03 91.8485 313.089 93.4691 313.089 cv
95.4089 313.089 97.3281 313.005 99.216 312.84 cv
99.1941 314.336 99.1595 315.83 99.1111 317.32 cv
98.8319 317.358 98.5519 317.394 98.27 317.429 cv
96.6061 317.557 94.9894 317.62 93.4204 317.62 cv
.552941 .678431 .188235 rgb
f
103.081 316.673 mo
103.081 316.673 li
110.391 315.266 116.64 312.83 121.683 309.535 cv
121.683 309.535 li
116.64 312.83 110.391 315.266 103.081 316.673 cv
.411765 .647059 .258824 rgb
f
135.64 290.052 mo
136.146 287.77 136.404 285.38 136.404 282.896 cv
136.404 285.38 136.146 287.77 135.64 290.052 cv
135.64 290.052 li
.658823 .803922 .356863 rgb
f
121.683 309.535 mo
121.683 309.535 li
124.73 307.544 127.336 305.239 129.472 302.657 cv
129.472 302.658 li
127.336 305.239 124.73 307.544 121.683 309.535 cv
132.68 297.942 mo
134.027 295.489 135.02 292.851 135.64 290.052 cv
135.64 290.052 li
135.02 292.851 134.027 295.489 132.68 297.942 cv
132.68 297.942 li
.243137 .498039 .12549 rgb
f
130.218 258.476 mo
130.104 258.426 129.994 258.378 129.879 258.328 cv
129.75 257.986 129.623 257.644 129.494 257.299 cv
128.489 254.326 127.405 251.272 126.299 248.125 cv
126.133 247.651 125.966 247.176 125.799 246.697 cv
127.316 250.651 128.823 254.584 130.218 258.476 cv
.490196 .737255 .270588 rgb
f
132.487 265.13 mo
131.622 262.935 130.752 260.657 129.879 258.328 cv
129.994 258.378 130.104 258.426 130.218 258.476 cv
131.018 260.709 131.781 262.928 132.487 265.13 cv
.654902 .803922 .352941 rgb
f
103.081 316.673 mo
103.011 315.257 102.929 313.84 102.839 312.422 cv
102.997 312.399 103.152 312.376 103.31 312.352 cv
118.622 310.029 131.068 302.419 133.506 292.527 cv
133.506 292.527 li
133.506 292.527 li
134.48 289.285 134.905 285.992 134.905 282.623 cv
134.905 274.714 132.565 266.383 129.494 257.299 cv
129.623 257.644 129.75 257.986 129.879 258.328 cv
130.752 260.657 131.622 262.935 132.487 265.13 cv
132.487 265.13 li
135.135 271.427 136.403 277.393 136.404 282.896 cv
136.404 285.38 136.146 287.77 135.64 290.052 cv
135.02 292.851 134.027 295.489 132.68 297.942 cv
131.521 298.831 130.407 300.63 129.472 302.657 cv
127.336 305.239 124.73 307.544 121.683 309.535 cv
116.64 312.83 110.391 315.266 103.081 316.673 cv
.552941 .678431 .188235 rgb
f
103.31 312.352 mo
118.62 310.028 131.068 302.418 133.506 292.527 cv
131.068 302.419 118.622 310.029 103.31 312.352 cv
133.506 292.527 mo
134.48 289.285 134.905 285.992 134.905 282.623 cv
134.905 285.992 134.48 289.285 133.506 292.527 cv
.462745 .568627 .180392 rgb
f
120.882 290.018 mo
120.358 290.298 119.518 290.472 118.643 290.327 cv
117.929 290.226 117.231 289.943 116.685 289.623 cv
116.826 289.257 116.955 288.901 117.069 288.561 cv
117.503 287.27 117.747 286.168 117.886 285.393 cv
117.962 285.007 118 284.698 118.029 284.489 cv
118.058 284.281 118.073 284.169 118.073 284.17 cv
118.073 284.17 118.048 284.276 117.998 284.478 cv
117.948 284.679 117.881 284.976 117.767 285.345 cv
117.553 286.087 117.202 287.136 116.644 288.349 cv
116.504 288.654 116.351 288.97 116.185 289.293 cv
116.015 289.625 115.83 289.965 115.632 290.312 cv
115.254 290.976 114.824 291.666 114.34 292.364 cv
114.022 292.819 113.673 293.278 113.308 293.736 cv
112.685 292.394 112.099 290.814 111.676 289.211 cv
111.102 287.132 110.753 285.04 110.529 283.48 cv
110.308 281.919 110.199 280.886 110.199 280.886 cv
110.199 280.886 110.22 281.914 110.308 283.482 cv
110.398 285.049 110.563 287.161 110.958 289.309 cv
111.288 291.222 111.848 293.151 112.481 294.728 cv
111.93 295.357 111.342 295.98 110.709 296.578 cv
109.999 297.249 109.232 297.886 108.439 298.484 cv
107.631 299.064 106.809 299.625 105.95 300.089 cv
104.637 300.828 103.279 301.374 102.001 301.743 cv
101.718 298.603 101.414 295.506 101.102 292.49 cv
101.005 291.55 100.907 290.621 100.809 289.699 cv
100.078 282.825 99.3485 276.447 98.7548 271.071 cv
98.1875 266.125 97.7644 262.017 97.4796 259.146 cv
97.1901 256.276 97.0387 254.643 97.0378 254.643 cv
97.0418 254.642 97.3322 261.225 97.918 271.194 cv
97.9593 271.95 98.0016 272.733 98.0444 273.528 cv
97.9149 273.49 li
97.7943 273.452 97.6693 273.391 97.5276 273.336 cv
96.983 273.077 96.335 272.56 95.8394 271.876 cv
95.3277 271.208 94.9485 270.424 94.6966 269.825 cv
94.4463 269.223 94.3136 268.806 94.3136 268.806 cv
94.3136 268.806 94.3652 269.252 94.4988 269.918 cv
94.6358 270.582 94.8597 271.472 95.2646 272.315 cv
95.6485 273.167 96.2659 273.944 96.9044 274.419 cv
97.0693 274.526 97.2205 274.638 97.3705 274.719 cv
97.524 274.795 97.6623 274.864 97.7822 274.923 cv
97.923 274.974 98.0377 275.014 98.1262 275.043 cv
98.3581 279.389 98.6043 284.231 98.8116 289.349 cv
98.7819 289.343 li
97.5817 289.014 96.2537 288.473 94.9825 287.692 cv
94.7653 287.56 94.5513 287.415 94.3375 287.271 cv
93.995 287.042 93.6577 286.801 93.327 286.545 cv
92.6497 286.021 91.9986 285.453 91.3909 284.848 cv
91.3378 284.792 li
91.7559 283.9 92.0545 282.861 92.1824 281.864 cv
92.3773 280.547 92.3663 279.291 92.3523 278.363 cv
92.3318 277.436 92.3039 276.829 92.3039 276.829 cv
92.3039 276.829 92.2374 277.444 92.1349 278.382 cv
92.0191 279.314 91.8485 280.572 91.4903 281.803 cv
91.2763 282.598 90.9554 283.363 90.592 284.013 cv
88.797 282.043 87.4384 279.876 86.532 278.146 cv
86.0104 277.156 85.6319 276.305 85.3789 275.705 cv
85.125 275.106 84.995 274.757 84.995 274.757 cv
84.995 274.757 85.0851 275.13 85.2696 275.775 cv
85.4535 276.42 85.7328 277.339 86.1382 278.418 cv
86.8713 280.379 88.0282 282.882 89.7307 285.23 cv
89.9019 285.467 90.0733 285.703 90.2556 285.936 cv
90.4742 286.2 li
90.9694 286.812 91.5031 287.403 92.0738 287.962 cv
91.333 288.677 90.4145 289.41 89.4096 290.016 cv
88.0125 290.896 86.5056 291.553 85.3721 291.971 cv
84.8046 292.181 84.3281 292.337 83.995 292.432 cv
83.6614 292.53 83.4717 292.587 83.4717 292.587 cv
83.4717 292.587 83.6616 292.553 83.9957 292.495 cv
84.3303 292.439 84.8116 292.338 85.3935 292.193 cv
86.5552 291.904 88.1332 291.412 89.6759 290.655 cv
90.8243 290.117 91.9305 289.408 92.8428 288.679 cv
93.1262 288.926 93.4153 289.168 93.7129 289.396 cv
95.003 290.399 96.4461 291.176 97.8417 291.701 cv
98.2046 291.835 98.5635 291.95 98.9148 292.048 cv
99.036 295.376 99.1345 298.801 99.1912 302.277 cv
99.2054 303.146 99.2169 304.019 99.2253 304.893 cv
99.2358 305.974 99.2435 307.055 99.244 308.142 cv
99.2773 321.751 98.3459 335.676 95.6174 346.601 cv
94.2962 352.06 92.5754 356.747 90.9013 360.24 cv
90.6965 360.678 90.4985 361.097 90.3086 361.501 cv
90.0943 361.896 89.8884 362.276 89.6919 362.637 cv
89.2918 363.355 88.9666 364.011 88.619 364.57 cv
87.9201 365.684 87.417 366.49 87.143 366.943 cv
89.6322 367.471 92.1441 367.995 94.6788 368.515 cv
94.9789 368.005 95.4998 367.091 96.1958 365.829 cv
96.5412 365.198 96.8472 364.478 97.2277 363.679 cv
97.4122 363.28 97.6053 362.86 97.8065 362.422 cv
97.9782 361.983 98.1564 361.525 98.3407 361.05 cv
99.8482 357.242 101.218 352.283 102.082 346.647 cv
103.889 335.361 103.569 321.412 102.512 307.828 cv
102.418 306.601 102.316 305.38 102.213 304.162 cv
103.875 303.597 105.587 302.777 107.137 301.732 cv
108.042 301.145 108.876 300.468 109.68 299.776 cv
110.466 299.068 111.207 298.33 111.878 297.565 cv
112.309 297.075 112.705 296.574 113.084 296.073 cv
113.372 295.692 113.645 295.311 113.903 294.928 cv
114.903 293.446 115.691 291.968 116.284 290.603 cv
117.018 290.883 117.907 291.069 118.733 291.028 cv
119.741 291.002 120.579 290.614 121.034 290.205 cv
121.161 290.115 121.242 289.997 121.328 289.911 cv
121.518 289.661 li
121.613 289.518 121.667 289.436 121.667 289.436 cv
121.667 289.435 121.595 289.501 121.468 289.617 cv
121.349 289.737 121.143 289.878 120.882 290.018 cv
.360784 .145098 .156863 rgb
f
79.2168 246.752 mo
75.4851 246.751 76.5973 239.777 79.3959 231.311 cv
82.6029 221.995 86.621 209.733 91.6971 206.198 cv
92.0754 205.945 92.4625 205.742 92.8595 205.592 cv
93.2705 205.423 93.6911 205.343 94.1154 205.343 cv
97.8417 205.343 101.815 211.561 101.333 218.938 cv
100.696 229.743 92.3244 238.923 84.2751 244.512 cv
82.0437 246.062 80.3908 246.752 79.2168 246.752 cv
.756863 .835294 .25098 rgb
f
106.253 227.889 mo
106.251 227.889 106.268 227.791 106.291 227.67 cv
106.291 227.67 li
106.291 227.67 li
106.33 227.527 li
106.276 227.793 106.255 227.889 106.253 227.889 cv
f
106.33 227.527 mo
106.346 227.385 li
106.346 227.385 li
106.346 227.385 li
106.363 227.295 106.377 227.229 106.378 227.229 cv
106.38 227.229 106.368 227.31 106.33 227.527 cv
f
106.291 227.67 mo
106.291 227.67 li
106.3 227.623 106.309 227.573 106.319 227.524 cv
106.328 227.476 106.337 227.428 106.346 227.385 cv
106.33 227.527 li
106.291 227.67 li
f
100.013 234.201 mo
101.03 230.543 101.182 226.525 102.123 223.034 cv
102.898 220.441 103.682 218.084 104.099 215.374 cv
105.747 218.976 106.931 223.695 106.346 227.385 cv
106.346 227.385 li
106.346 227.385 li
106.337 227.428 106.328 227.476 106.319 227.524 cv
106.309 227.573 106.3 227.623 106.291 227.67 cv
106.291 227.67 li
106.291 227.67 li
106.291 227.67 li
105.533 231.251 102.977 233.555 100.013 234.201 cv
f
24.0985 351.934 mo
24.0985 353.987 24.4215 356.182 24.9862 358.455 cv
69.2188 358.455 li
69.7501 356.205 70.0529 354.014 70.0529 351.934 cv
70.0529 333.732 47.0756 307.005 47.0756 307.005 cv
47.0756 307.005 24.0985 332.119 24.0985 351.934 cv
.764706 .858824 .309804 rgb
f
36.1631 346.454 mo
36.1631 346.454 36.0471 345.973 35.8849 345.145 cv
35.726 344.318 35.4771 343.127 35.4696 341.764 cv
35.2554 339.002 35.8448 335.52 36.9769 332.993 cv
38.1668 330.491 40.4288 327.886 42.4922 326.151 cv
43.4781 325.24 44.4656 324.569 45.1364 324.07 cv
45.8215 323.593 46.2361 323.304 46.2361 323.304 cv
46.2361 323.304 46.0732 323.799 45.8058 324.61 cv
45.5417 325.421 45.1132 326.505 44.7223 327.763 cv
43.821 330.228 42.9665 333.229 41.965 335.31 cv
41.6669 335.904 41.4085 336.527 41.0665 337.132 cv
40.7316 337.739 40.3585 338.343 40.0548 338.962 cv
39.7275 339.575 39.3782 340.179 39.0232 340.765 cv
38.7104 341.366 38.4083 341.948 38.1251 342.493 cv
37.4857 343.585 37.0907 344.586 36.7318 345.301 cv
36.3758 346.023 36.1631 346.454 36.1631 346.454 cv
.878431 .92549 .462745 rgb
f
195.128 329.197 mo
195.128 329.197 175.07 341.823 175.07 351.785 cv
175.07 353.085 175.517 354.499 176.272 355.963 cv
214.05 355.963 li
214.765 354.517 215.185 353.106 215.185 351.785 cv
215.185 342.634 195.128 329.197 195.128 329.197 cv
.764706 .858824 .309804 rgb
f
188.781 342.529 mo
185.31 342.529 188.24 336.768 191.956 336.299 cv
192.318 336.254 192.631 336.232 192.9 336.232 cv
197.49 336.232 189.211 342.503 189.211 342.503 cv
189.058 342.521 188.915 342.529 188.781 342.529 cv
.839216 .901961 .407843 rgb
f
459.263 350.284 mo
459.263 352.051 459.547 353.973 460.028 355.963 cv
484.061 355.963 li
484.516 353.997 484.784 352.079 484.784 350.284 cv
484.784 337.846 472.023 319.582 472.023 319.582 cv
472.023 319.582 459.263 336.744 459.263 350.284 cv
.34902 .67451 .207843 rgb
f
467.986 337.704 mo
465.777 337.704 467.642 329.873 470.005 329.236 cv
470.256 329.168 470.482 329.137 470.686 329.137 cv
473.86 329.137 471.471 336.873 468.259 337.668 cv
468.162 337.692 468.071 337.704 467.986 337.704 cv
.454902 .768627 .27451 rgb
f
0 480 mo
900 480 li
0 480 li
.764706 .858824 .309804 rgb
f
0 480 mo
900 480 li
900 352.667 li
0 352.667 li
0 480 li
f
0 480 mo
900 480 li
0 480 li
.478431 .627451 .180392 rgb
f
0 480 mo
900 480 li
900 358.318 li
0 358.318 li
0 480 li
f
67.8967 480 mo
0 480 li
0 387.128 li
5.7703 387.257 11.9313 387.487 18.4329 387.801 cv
22.828 379.738 28.1443 372.596 34.0072 366 cv
34.0072 373.506 32.8369 381.013 31.5304 388.52 cv
36.5207 388.823 41.6801 389.167 46.9976 389.547 cv
44.7478 392.099 42.4218 394.585 40.0073 397 cv
40.0073 397 li
40.0073 397 li
49.8975 424.316 58.4733 452.293 67.8967 480 cv
.423529 .521569 .176471 rgb
f
46.9976 389.547 mo
41.6801 389.167 36.5207 388.823 31.5304 388.52 cv
32.8369 381.013 34.0072 373.506 34.0072 366 cv
28.1443 372.596 22.828 379.738 18.4329 387.801 cv
11.9313 387.487 5.7703 387.257 0 387.128 cv
0 358.318 li
69.7972 358.318 li
62.9152 369.325 55.5069 379.896 46.9976 389.547 cv
.4 .47451 .172549 rgb
f
120.695 480 mo
67.8967 480 li
58.4733 452.293 49.8975 424.316 40.0073 397 cv
42.4218 394.585 44.7478 392.099 46.9976 389.547 cv
54.4453 390.08 62.2034 390.684 70.2422 391.348 cv
72.4143 385.315 74.5939 379.274 77.0072 373 cv
77.0072 379.29 77.3253 385.645 77.9744 391.998 cv
87.1108 392.779 96.5816 393.629 106.345 394.533 cv
112.057 409.845 118.297 425.001 125.007 440 cv
123.297 453.4 121.917 466.717 120.695 480 cv
.47451 .615686 .180392 rgb
f
106.345 394.533 mo
96.5816 393.629 87.1108 392.779 77.9744 391.998 cv
77.3253 385.645 77.0072 379.29 77.0072 373 cv
74.5939 379.274 72.4143 385.315 70.2422 391.348 cv
62.2034 390.684 54.4453 390.08 46.9976 389.547 cv
55.5069 379.896 62.9152 369.325 69.7972 358.318 cv
93.9405 358.318 li
93.9405 358.318 li
97.7333 370.485 101.877 382.556 106.345 394.533 cv
.447059 .564706 .176471 rgb
f
67.8967 480 mo
67.8967 480 li
67.8967 480 li
.886274 .831372 .968627 rgb
f
120.695 480 mo
67.8967 480 li
120.695 480 li
.977701 .966936 .993849 rgb
f
122.244 480 mo
120.695 480 li
121.917 466.717 123.297 453.4 125.007 440 cv
125.007 440 li
118.297 425.001 112.057 409.845 106.345 394.533 cv
116.133 395.44 126.214 396.4 136.541 397.398 cv
140.042 386.224 144.578 375.316 150.007 365 cv
151.65 376.907 154.82 388.305 158.596 399.546 cv
175.298 401.181 192.539 402.881 210.15 404.584 cv
209.247 407.11 208.361 409.641 207.493 412.18 cv
191.078 412.283 177.113 414.76 159.954 418.639 cv
159.954 418.639 li
159.932 418.682 li
159.932 418.682 li
155.776 426.758 151.349 434.762 146.655 442.695 cv
146.639 442.721 146.622 442.75 146.607 442.776 cv
146.579 442.823 146.551 442.871 146.522 442.919 cv
146.485 442.981 146.448 443.044 146.411 443.107 cv
146.403 443.12 146.394 443.135 146.386 443.149 cv
138.997 455.603 130.947 467.883 122.244 480 cv
.423529 .521569 .176471 rgb
f
210.15 404.584 mo
192.539 402.881 175.298 401.181 158.596 399.546 cv
154.82 388.305 151.65 376.907 150.007 365 cv
144.578 375.316 140.042 386.224 136.541 397.398 cv
126.214 396.4 116.133 395.44 106.345 394.533 cv
101.877 382.556 97.7333 370.485 93.9405 358.318 cv
93.9405 358.318 li
212.5 358.318 li
212.5 358.318 li
215.209 363.763 218.317 369.018 222.007 374 cv
217.812 384.068 213.838 394.271 210.15 404.584 cv
.4 .47451 .172549 rgb
f
283.766 480 mo
264.342 480 li
264.342 480 li
258.023 465.768 251.705 451.537 245.386 437.304 cv
244.301 434.862 243.216 432.417 242.131 429.975 cv
240.16 425.536 238.19 421.098 236.219 416.658 cv
236.219 416.658 li
236.219 416.658 li
236.219 416.658 li
236.219 416.658 li
236.219 416.658 li
235.822 415.763 235.424 414.868 235.027 413.973 cv
235.027 413.973 li
225.175 412.739 216.566 412.177 208.561 412.177 cv
208.204 412.177 207.848 412.178 207.493 412.18 cv
208.361 409.641 209.247 407.11 210.15 404.584 cv
220.593 405.594 231.167 406.605 241.835 407.605 cv
242.639 397.011 243.651 386.299 243.007 376 cv
247.056 386.931 251.266 397.864 255.377 408.861 cv
267.378 409.964 279.479 411.044 291.632 412.084 cv
287.647 434.49 285.025 457.219 283.766 480 cv
.47451 .615686 .180392 rgb
f
291.632 412.084 mo
279.479 411.044 267.378 409.964 255.377 408.861 cv
251.266 397.864 247.056 386.931 243.007 376 cv
243.651 386.299 242.639 397.011 241.835 407.605 cv
231.167 406.605 220.593 405.594 210.15 404.584 cv
213.838 394.271 217.812 384.068 222.007 374 cv
222.007 374 li
222.007 374 li
218.317 369.018 215.209 363.763 212.5 358.318 cv
259.426 358.318 li
259.426 358.318 li
268.876 376.461 279.051 394.099 292.007 410 cv
291.881 410.695 291.756 411.389 291.632 412.084 cv
.447059 .564706 .176471 rgb
f
283.766 480 mo
264.342 480 li
264.342 480 li
283.766 480 li
.977701 .966936 .993849 rgb
f
371.134 480 mo
283.766 480 li
285.025 457.219 287.647 434.49 291.632 412.084 cv
300.98 412.885 310.358 413.661 319.744 414.407 cv
319.744 414.407 li
319.744 414.407 li
316.714 400.958 315.659 387.179 311.007 374 cv
317.39 388.362 325.189 401.876 333.047 415.443 cv
337.012 415.744 340.977 416.039 344.94 416.327 cv
353.504 437.601 362.136 458.842 371.134 480 cv
.423529 .521569 .176471 rgb
f
344.94 416.327 mo
340.977 416.039 337.012 415.744 333.047 415.443 cv
325.189 401.876 317.39 388.362 311.007 374 cv
315.659 387.179 316.714 400.958 319.744 414.407 cv
310.358 413.661 300.98 412.885 291.632 412.084 cv
291.756 411.389 291.881 410.695 292.007 410 cv
292.007 410 li
279.051 394.099 268.876 376.461 259.426 358.318 cv
259.426 358.318 li
321.55 358.318 li
321.55 358.318 li
329.44 377.656 337.162 397.005 344.94 416.327 cv
.4 .47451 .172549 rgb
f
399.41 480 mo
371.134 480 li
362.136 458.842 353.504 437.601 344.94 416.327 cv
357.348 417.228 369.735 418.06 382.053 418.806 cv
382.236 403.251 383.175 387.302 388.007 372 cv
393.111 387.31 393.789 403.662 395.62 419.594 cv
408.306 420.296 420.897 420.897 433.334 421.375 cv
433.229 421.646 433.123 421.917 433.017 422.187 cv
424.958 422.66 416.933 423.425 408.944 424.51 cv
408.944 424.51 li
408.938 424.545 li
408.938 424.545 li
408.785 425.434 li
408.785 425.434 li
408.785 425.434 li
399.41 480 li
.47451 .615686 .180392 rgb
f
433.334 421.375 mo
420.897 420.897 408.306 420.296 395.62 419.594 cv
393.789 403.662 393.111 387.31 388.007 372 cv
383.175 387.302 382.236 403.251 382.053 418.806 cv
369.735 418.06 357.348 417.228 344.94 416.327 cv
337.162 397.005 329.44 377.656 321.55 358.318 cv
456.976 358.318 li
449.795 379.58 441.522 400.404 433.334 421.375 cv
.447059 .564706 .176471 rgb
f
371.134 480 mo
371.134 480 li
371.134 480 li
.886274 .831372 .968627 rgb
f
399.41 480 mo
371.134 480 li
399.41 480 li
.977701 .966936 .993849 rgb
f
619.738 480 mo
584.619 480 li
592.39 460.355 600.709 440.968 610.007 422 cv
610.007 422 li
610.007 422 li
609.457 420.348 608.898 418.696 608.336 417.043 cv
619.385 416.02 630.497 414.892 641.628 413.691 cv
634.795 435.93 627.173 457.944 619.738 480 cv
.423529 .521569 .176471 rgb
f
608.336 417.043 mo
601.774 397.772 594.603 378.439 591.537 358.318 cv
611.396 358.318 li
611.396 358.318 li
622.315 372.379 634.297 385.693 646.007 399 cv
644.592 403.91 643.13 408.806 641.628 413.691 cv
630.497 414.892 619.385 416.02 608.336 417.043 cv
.4 .47451 .172549 rgb
f
584.619 480 mo
544.269 480 li
525.366 427.788 li
519.987 426.919 514.615 426.13 509.247 425.428 cv
508.977 424.48 508.705 423.533 508.431 422.587 cv
514.053 422.528 519.609 422.43 525.096 422.29 cv
536.307 422.004 547.718 421.498 559.27 420.818 cv
557.739 406.212 554.082 391.606 551.007 377 cv
557.667 392.317 566.987 405.861 576.31 419.697 cv
586.901 418.932 597.588 418.038 608.336 417.043 cv
608.898 418.696 609.457 420.348 610.007 422 cv
600.709 440.968 592.39 460.355 584.619 480 cv
.47451 .615686 .180392 rgb
f
508.431 422.587 mo
506.721 416.692 504.915 410.83 503.007 405 cv
510.094 390.181 516.34 374.529 520.697 358.318 cv
520.697 358.318 li
520.697 358.318 li
591.537 358.318 li
594.603 378.439 601.774 397.772 608.336 417.043 cv
597.588 418.038 586.901 418.932 576.31 419.697 cv
566.987 405.861 557.667 392.317 551.007 377 cv
554.082 391.606 557.739 406.212 559.27 420.818 cv
547.718 421.498 536.307 422.004 525.096 422.29 cv
519.609 422.43 514.053 422.528 508.431 422.587 cv
.447059 .564706 .176471 rgb
f
584.619 480 mo
544.269 480 li
584.619 480 li
.977701 .966936 .993849 rgb
f
683.343 480 mo
662.005 480 li
674.582 462.452 687.503 445.164 700.317 427.753 cv
695.062 445.438 689.404 462.838 683.343 480 cv
706.099 416.502 mo
706.18 413.041 706.228 409.579 706.242 406.12 cv
714.681 405.079 723.085 404.032 731.433 402.993 cv
729.323 392.46 726.855 382.097 721.007 373 cv
728.213 382.608 735.655 392.213 743.545 401.488 cv
750.793 400.59 757.991 399.704 765.127 398.839 cv
767.719 401.741 770.368 404.598 773.076 407.404 cv
750.667 410.145 728.473 413.413 706.099 416.502 cv
.423529 .521569 .176471 rgb
f
706.242 406.12 mo
706.245 405.428 706.247 404.736 706.247 404.044 cv
706.249 388.739 705.577 373.467 704.055 358.318 cv
734.209 358.318 li
734.209 358.318 li
743.514 372.518 753.771 386.121 765.127 398.839 cv
757.991 399.704 750.793 400.59 743.545 401.488 cv
735.655 392.213 728.213 382.608 721.007 373 cv
726.855 382.097 729.323 392.46 731.433 402.993 cv
723.085 404.032 714.681 405.079 706.242 406.12 cv
.4 .47451 .172549 rgb
f
856.772 480 mo
832.303 480 li
830.265 464.702 828.227 449.403 826.189 434.104 cv
824.908 424.487 823.627 414.87 822.346 405.252 cv
822.346 405.252 li
822.346 405.252 li
822.346 405.252 li
822.346 405.252 li
822.346 405.252 li
822.227 404.358 822.108 403.462 821.988 402.567 cv
821.988 402.567 li
805.476 403.73 789.219 405.43 773.076 407.404 cv
770.368 404.598 767.719 401.741 765.127 398.839 cv
778.381 397.233 791.42 395.701 804.171 394.301 cv
796.178 385.978 788.295 377.288 780.007 369 cv
794.481 376.551 809.745 383.71 824.058 392.214 cv
831.571 391.463 838.962 390.774 846.213 390.159 cv
856.243 400.514 866.754 410.505 878.007 420 cv
870.83 439.936 863.505 459.874 856.772 480 cv
.47451 .615686 .180392 rgb
f
765.127 398.839 mo
753.771 386.121 743.514 372.518 734.209 358.318 cv
817.464 358.318 li
817.464 358.318 li
826.743 369.206 836.24 379.862 846.213 390.159 cv
838.962 390.774 831.571 391.463 824.058 392.214 cv
809.745 383.71 794.481 376.551 780.007 369 cv
788.295 377.288 796.178 385.978 804.171 394.301 cv
791.42 395.701 778.381 397.233 765.127 398.839 cv
.447059 .564706 .176471 rgb
f
856.772 480 mo
832.303 480 li
832.303 480 li
856.772 480 li
.977701 .966936 .993849 rgb
f
900 480 mo
856.772 480 li
856.772 480 li
900 480 li
900 387.113 li
900 387.113 li
900 358.318 li
900 480 li
.886274 .831372 .968627 rgb
f
900 480 mo
856.772 480 li
863.505 459.874 870.83 439.936 878.007 420 cv
878.007 420 li
866.754 410.505 856.243 400.514 846.213 390.159 cv
855.379 389.382 864.321 388.724 873.001 388.213 cv
869.539 382.059 866.359 375.759 865.007 369 cv
869.776 375.503 875.297 381.63 880.917 387.788 cv
887.442 387.468 893.812 387.237 900 387.113 cv
900 480 li
.423529 .521569 .176471 rgb
f
846.213 390.159 mo
836.24 379.862 826.743 369.206 817.464 358.318 cv
817.464 358.318 li
900 358.318 li
900 387.113 li
893.812 387.237 887.442 387.468 880.917 387.788 cv
875.297 381.63 869.776 375.503 865.007 369 cv
866.359 375.759 869.539 382.059 873.001 388.213 cv
864.321 388.724 855.379 389.382 846.213 390.159 cv
.4 .47451 .172549 rgb
f
662.005 480 mo
619.738 480 li
627.173 457.944 634.795 435.93 641.628 413.691 cv
648.104 412.992 654.588 412.269 661.068 411.527 cv
659.492 397.049 658.007 382.771 658.007 368 cv
662.956 382.229 670.966 395.693 677.777 409.575 cv
687.294 408.444 696.79 407.286 706.242 406.12 cv
706.228 409.579 706.18 413.041 706.099 416.502 cv
705.23 416.622 704.362 416.742 703.491 416.861 cv
703.491 416.861 li
703.491 416.861 li
703.479 416.903 li
703.479 416.903 li
703.378 417.259 703.276 417.615 703.174 417.971 cv
703.174 417.971 li
703.174 417.971 li
702.235 421.241 701.282 424.502 700.317 427.753 cv
687.503 445.164 674.582 462.452 662.005 480 cv
.47451 .615686 .180392 rgb
f
641.628 413.691 mo
643.13 408.806 644.592 403.91 646.007 399 cv
646.007 399 li
646.007 399 li
634.297 385.693 622.315 372.379 611.396 358.318 cv
704.055 358.318 li
705.577 373.467 706.249 388.739 706.247 404.044 cv
706.247 404.736 706.245 405.428 706.242 406.12 cv
696.79 407.286 687.294 408.444 677.777 409.575 cv
670.966 395.693 662.956 382.229 658.007 368 cv
658.007 382.771 659.492 397.049 661.068 411.527 cv
654.588 412.269 648.104 412.992 641.628 413.691 cv
.447059 .564706 .176471 rgb
f
662.005 480 mo
662.004 480 li
619.738 480 li
619.738 480 li
662.005 480 li
.977701 .966936 .993849 rgb
f
509.247 425.428 mo
499.815 424.194 490.399 423.229 481.014 422.576 cv
485.868 422.627 490.688 422.653 495.464 422.653 cv
499.822 422.653 504.144 422.631 508.431 422.587 cv
508.705 423.533 508.977 424.48 509.247 425.428 cv
479.273 422.459 mo
476.003 422.245 472.731 422.069 469.468 421.933 cv
473.352 407.247 477.21 392.391 482.007 378 cv
481.056 392.737 479.431 407.699 479.273 422.459 cv
433.017 422.187 mo
433.123 421.917 433.229 421.646 433.334 421.375 cv
436.708 421.505 440.07 421.626 443.421 421.737 cv
439.947 421.835 436.48 421.984 433.017 422.187 cv
.423529 .521569 .176471 rgb
f
495.464 422.653 mo
490.688 422.653 485.868 422.627 481.014 422.576 cv
480.434 422.536 479.854 422.497 479.273 422.459 cv
479.431 407.699 481.056 392.737 482.007 378 cv
477.21 392.391 473.352 407.247 469.468 421.933 cv
464.137 421.711 458.82 421.596 453.511 421.596 cv
450.143 421.596 446.779 421.643 443.421 421.737 cv
440.07 421.626 436.708 421.505 433.334 421.375 cv
441.522 400.404 449.795 379.58 456.976 358.318 cv
520.697 358.318 li
516.34 374.529 510.094 390.181 503.007 405 cv
503.007 405 li
504.915 410.83 506.721 416.692 508.431 422.587 cv
504.144 422.631 499.822 422.653 495.464 422.653 cv
.4 .47451 .172549 rgb
f
425.781 346.481 mo
426.505 339.963 423.747 333.751 416.729 338.183 cv
421.863 327.505 418.698 305.026 404.145 304.543 cv
386.672 303.963 381.421 329.248 382.674 342.207 cv
381.045 338.62 379.546 338.879 377.238 339.139 cv
376.4 339.233 375.457 339.327 374.362 339.238 cv
371.915 339.038 368.701 342.558 368.701 342.558 cv
368.701 342.558 362.257 323.441 345.507 329.197 cv
339.88 331.131 327.754 338.971 330.201 345.73 cv
324.514 338.011 301.468 324.103 292.47 333.452 cv
285.94 340.236 298.055 353.622 304.626 356.564 cv
452.626 356.564 li
454.196 354.886 454.518 346.635 451.458 342.916 cv
443.889 333.712 433.04 341.775 425.781 346.481 cv
.764706 .858824 .309804 rgb
f
662.03 343.278 mo
661.707 342.651 661.35 342.062 660.97 341.497 cv
661.294 342.094 661.642 342.688 662.03 343.278 cv
cp
f
660.97 341.497 mo
661.35 342.062 661.707 342.652 662.03 343.278 cv
661.642 342.688 661.294 342.094 660.97 341.497 cv
654.4 331.732 639.666 331.284 632.62 341.461 cv
625.172 333.956 619.106 328.557 608.443 334.716 cv
602.006 338.435 596.039 352.992 605.887 356.564 cv
684.887 356.564 li
694.361 350.078 691.409 329.723 688.537 321.084 cv
679.322 293.36 648.935 319.358 660.97 341.497 cv
f
129.323 315.62 mo
127.753 315.62 127.019 313.964 126.926 311.509 cv
126.869 310.004 127.923 306.017 129.472 302.658 cv
130.699 301.175 131.771 299.6 132.68 297.942 cv
133.169 297.568 133.666 297.355 134.16 297.355 cv
135.02 297.355 135.873 297.999 136.666 299.557 cv
138.699 303.552 135.316 312.279 131.791 314.657 cv
130.807 315.321 129.99 315.62 129.323 315.62 cv
.34902 .67451 .168627 rgb
f
129.472 302.658 mo
129.472 302.657 li
130.699 301.175 131.77 299.6 132.68 297.942 cv
132.68 297.942 li
131.771 299.6 130.699 301.175 129.472 302.658 cv
.317647 .643137 .164706 rgb
f
129.472 302.657 mo
130.407 300.63 131.521 298.831 132.68 297.942 cv
131.77 299.6 130.699 301.175 129.472 302.657 cv
.694118 .772549 .247059 rgb
f
77.9743 339.865 mo
77.4312 339.865 76.8302 339.629 76.183 339.073 cv
71.7735 335.286 75.0776 325.196 80.1296 325.196 cv
81.3917 325.196 82.763 325.825 84.1503 327.341 cv
85.4449 328.755 86.8639 332.508 86.0616 334.427 cv
85.6789 335.342 83.8241 336.216 82.4881 336.216 cv
81.6682 336.216 81.0436 335.887 81.0749 335.035 cv
80.9971 337.152 79.818 339.865 77.9743 339.865 cv
.34902 .67451 .168627 rgb
f
109.007 335.823 mo
108.46 335.823 107.811 335.586 107.176 335.348 cv
106.542 335.111 105.921 334.873 105.43 334.873 cv
105.418 334.873 105.405 334.873 105.393 334.874 cv
104.6 334.893 103.872 335.254 103.182 335.646 cv
103.299 333.331 103.358 330.96 103.369 328.546 cv
103.921 328.44 104.482 328.384 105.037 328.384 cv
106.764 328.384 108.422 328.929 109.468 330.197 cv
110.577 331.543 111.508 334.709 109.612 335.691 cv
109.432 335.785 109.228 335.824 109.007 335.823 cv
f
100.753 336.667 mo
100.086 336.667 99.4274 336.279 98.7463 335.143 cv
96.8137 331.92 99.8762 329.222 103.369 328.546 cv
103.358 330.96 103.299 333.331 103.182 335.646 cv
102.329 336.132 101.536 336.667 100.753 336.667 cv
.470588 .188235 .203922 rgb
f
151.02 328.936 mo
150.996 328.936 150.972 328.936 150.948 328.935 cv
144.322 328.7 150.121 317.675 154.191 317.52 cv
154.257 317.517 154.322 317.516 154.386 317.516 cv
157.427 317.516 157.581 320.371 156.477 323.226 cv
155.372 326.081 153.011 328.936 151.02 328.936 cv
.34902 .67451 .168627 rgb
f
393.596 326.879 mo
392.595 326.879 391.706 326.384 391.007 324.847 cv
387.654 317.48 395.249 311.656 401.436 311.656 cv
405.155 311.656 408.366 313.762 408.382 318.902 cv
408.389 321.193 408.004 325.118 405.644 326.331 cv
405.12 326.6 404.657 326.707 404.232 326.707 cv
402.805 326.707 401.791 325.513 400.227 325.284 cv
400.049 325.258 399.87 325.246 399.691 325.246 cv
398.645 325.246 397.575 325.654 396.54 326.062 cv
395.505 326.471 394.504 326.879 393.596 326.879 cv
.839216 .901961 .407843 rgb
f
345.263 346.825 mo
336.241 346.824 337.844 332.855 346.404 331.546 cv
346.952 331.462 347.472 331.422 347.964 331.422 cv
356.923 331.422 356.552 344.65 347.491 346.575 cv
346.686 346.745 345.945 346.825 345.263 346.825 cv
f
299.793 343.778 mo
299.116 343.778 298.442 343.441 297.736 342.48 cv
295.993 340.104 296.729 334.707 299.556 333.527 cv
300.148 333.28 300.891 333.166 301.716 333.166 cv
305.274 333.166 310.353 335.278 311.384 337.882 cv
312.819 341.507 310.995 342.149 308.736 342.149 cv
308.115 342.149 307.462 342.101 306.834 342.052 cv
306.207 342.004 305.605 341.956 305.087 341.956 cv
305.035 341.956 304.984 341.956 304.934 341.957 cv
302.923 341.998 301.35 343.778 299.793 343.778 cv
f
436.858 348.338 mo
436.098 348.338 435.152 348.067 434.183 347.465 cv
433.944 347.317 433.727 347.141 433.538 346.935 cv
431.56 344.779 432.653 343.653 434.296 343.653 cv
435.302 343.653 436.515 344.075 437.355 344.941 cv
439.333 346.979 438.562 348.338 436.858 348.338 cv
f
611.677 346.677 mo
607.798 346.677 606.153 342.1 608.155 339.086 cv
609.34 337.303 611.203 336.679 613.152 336.679 cv
614.42 336.679 615.725 336.943 616.903 337.324 cv
625.537 340.12 617.701 346.265 612.036 346.664 cv
611.914 346.673 611.795 346.677 611.677 346.677 cv
f
643.439 346.492 mo
641.159 346.492 638.933 345.805 637.854 344.165 cv
634.391 338.901 642.736 338.827 645.674 338.667 cv
649.34 340.667 li
652.499 343.901 647.867 346.493 643.439 346.492 cv
f
670.347 330.699 mo
668.249 330.699 667.44 328.149 667.058 326.242 cv
665.574 318.825 671.349 314.786 676.153 314.786 cv
679.884 314.786 683.029 317.225 681.724 322.415 cv
680.921 325.612 679.832 325.772 678.357 325.772 cv
678.275 325.772 678.191 325.772 678.107 325.771 cv
678.022 325.771 677.935 325.77 677.848 325.77 cv
676.997 325.77 676.028 325.818 674.924 326.379 cv
673.305 327.201 672.916 330.197 670.993 330.624 cv
670.765 330.675 670.55 330.699 670.347 330.699 cv
f
747.672 331.102 mo
746.715 331.102 745.814 330.566 745.031 329.158 cv
741.851 323.444 748.617 315.073 753.999 313.867 cv
755.07 313.627 756.338 313.487 757.657 313.487 cv
762.406 313.487 767.808 315.302 767.014 320.78 cv
766.115 326.992 759.757 324.337 755.916 325.791 cv
753.666 326.644 750.434 331.102 747.672 331.102 cv
.34902 .67451 .168627 rgb
f
789.701 348.217 mo
788.997 348.217 788.242 348.088 787.478 347.797 cv
787.372 347.756 787.267 347.711 787.165 347.662 cv
782.833 345.579 785.11 342.05 788.529 342.05 cv
789.309 342.05 790.149 342.234 790.983 342.661 cv
795.47 344.954 793.238 348.218 789.701 348.217 cv
f
837.465 344.544 mo
835.155 344.544 833.062 344.102 832.513 342.573 cv
830.963 338.256 838.458 334.735 844.424 334.735 cv
847.534 334.735 850.229 335.692 851.012 337.99 cv
852.504 342.371 847.168 343.311 844.22 343.779 cv
842.982 343.975 840.085 344.544 837.465 344.544 cv
f
408.944 424.51 mo
399.41 480 li
544.269 480 li
525.366 427.788 li
486.11 421.449 447.094 419.329 408.944 424.51 cv
.282353 .482353 .176471 rgb
f
408.785 425.434 mo
408.785 425.434 li
408.785 425.434 li
408.938 424.545 li
408.938 424.545 408.938 424.545 408.938 424.545 cv
408.785 425.434 li
.662745 .752941 .34902 rgb
f
470.9 436.274 mo
470.85 436.267 470.8 436.259 470.75 436.252 cv
470.722 436.248 470.693 436.244 470.665 436.24 cv
470.652 436.238 470.641 436.237 470.629 436.235 cv
466.685 435.676 462.725 435.196 458.76 434.736 cv
458.759 434.737 458.759 434.737 458.759 434.738 cv
458.759 434.738 li
458.759 434.737 458.759 434.737 458.76 434.736 cv
455.36 434.341 451.955 433.96 448.554 433.559 cv
448.554 433.562 448.554 433.565 448.555 433.567 cv
448.555 433.567 li
448.554 433.565 448.554 433.562 448.554 433.559 cv
445.905 433.247 443.259 432.923 440.621 432.568 cv
440.621 432.568 li
431.494 431.341 422.49 429.745 413.882 427.118 cv
413.88 427.124 413.879 427.131 413.877 427.137 cv
413.877 427.137 li
413.879 427.131 413.88 427.124 413.882 427.118 cv
412.165 426.595 410.462 426.045 408.785 425.434 cv
408.938 424.545 li
417.448 424.015 425.971 423.77 434.491 423.77 cv
462.481 423.77 490.507 426.412 518.499 430.273 cv
516.527 430.517 514.557 430.773 512.582 431.035 cv
511.36 431.197 510.137 431.361 508.914 431.528 cv
508.914 431.529 508.914 431.529 508.914 431.53 cv
508.914 431.53 li
508.914 431.529 508.914 431.529 508.914 431.528 cv
504.202 432.169 499.471 432.835 494.701 433.483 cv
494.701 433.483 li
490.772 434.016 486.814 434.526 482.822 435 cv
482.824 435.007 482.826 435.014 482.828 435.021 cv
482.828 435.021 li
482.826 435.014 482.824 435.007 482.822 435 cv
479.28 435.422 475.715 435.82 472.112 436.154 cv
472.112 436.154 li
471.707 436.191 471.306 436.237 470.9 436.274 cv
470.9 436.274 li
525.714 429.433 mo
525.716 429.433 525.719 429.433 525.721 429.432 cv
525.719 429.432 525.716 429.433 525.714 429.433 cv
.537255 .666667 .34902 rgb
f
408.938 424.545 mo
408.944 424.51 li
408.938 424.545 li
408.938 424.545 408.938 424.545 408.938 424.545 cv
.615686 .733333 .235294 rgb
f
518.512 430.275 mo
518.507 430.274 518.503 430.273 518.499 430.273 cv
520.903 429.975 523.308 429.692 525.714 429.433 cv
523.511 429.671 521.312 429.93 519.113 430.2 cv
518.912 430.225 518.711 430.25 518.511 430.275 cv
525.721 429.432 mo
525.741 429.43 525.76 429.428 525.78 429.426 cv
525.775 429.427 525.77 429.427 525.765 429.428 cv
525.75 429.429 525.736 429.431 525.721 429.432 cv
.364706 .627451 .231373 rgb
f
518.499 430.273 mo
490.507 426.412 462.481 423.77 434.491 423.77 cv
425.971 423.77 417.448 424.015 408.938 424.545 cv
408.944 424.51 li
423.684 422.508 438.55 421.596 453.511 421.596 cv
477.275 421.596 501.276 423.898 525.366 427.788 cv
525.952 429.407 li
525.952 429.407 li
525.895 429.414 525.837 429.42 525.78 429.426 cv
525.76 429.428 525.741 429.43 525.721 429.432 cv
525.719 429.433 525.716 429.433 525.714 429.433 cv
523.308 429.692 520.903 429.975 518.499 430.273 cv
.67451 .768627 .458824 rgb
f
500.82 475.637 mo
492.596 461.408 486.587 447.816 482.828 435.021 cv
486.819 434.546 490.774 434.027 494.702 433.493 cv
496.321 446.488 498.204 460.499 500.82 475.637 cv
.239216 .403922 .172549 rgb
f
482.828 435.021 mo
482.826 435.014 482.824 435.007 482.822 435 cv
486.814 434.526 490.772 434.016 494.701 433.483 cv
494.701 433.483 li
494.701 433.483 li
494.701 433.486 494.702 433.49 494.702 433.493 cv
490.774 434.027 486.819 434.546 482.828 435.021 cv
.454902 .556863 .337255 rgb
f
540.012 480 mo
526.98 480 li
520.665 462.328 514.815 446.225 508.914 431.53 cv
510.137 431.363 511.361 431.198 512.582 431.035 cv
514.56 430.773 516.536 430.519 518.511 430.275 cv
518.512 430.275 518.512 430.275 518.512 430.275 cv
518.712 430.25 518.912 430.225 519.113 430.2 cv
519.585 430.143 520.056 430.085 520.528 430.029 cv
520.528 430.029 li
520.528 430.029 li
526.168 445.18 532.803 461.734 540.012 480 cv
.239216 .403922 .172549 rgb
f
508.914 431.53 mo
508.914 431.529 508.914 431.529 508.914 431.528 cv
510.137 431.361 511.36 431.197 512.582 431.035 cv
511.361 431.198 510.137 431.363 508.914 431.53 cv
.454902 .556863 .337255 rgb
f
518.512 430.275 mo
518.512 430.275 li
518.711 430.25 518.912 430.225 519.113 430.2 cv
518.912 430.225 518.712 430.25 518.512 430.275 cv
.309804 .52549 .223529 rgb
f
544.269 480 mo
540.012 480 li
532.803 461.734 526.168 445.18 520.528 430.029 cv
522.273 429.819 524.017 429.616 525.765 429.428 cv
525.827 429.421 525.89 429.414 525.952 429.407 cv
525.952 429.407 li
544.269 480 li
.364706 .627451 .231373 rgb
f
525.765 429.428 mo
525.77 429.427 525.775 429.427 525.78 429.426 cv
525.837 429.42 525.895 429.414 525.952 429.407 cv
525.952 429.407 li
525.89 429.414 525.827 429.421 525.765 429.428 cv
.470588 .741176 .301961 rgb
f
525.78 429.426 mo
525.837 429.42 525.895 429.414 525.952 429.407 cv
525.895 429.414 525.837 429.42 525.78 429.426 cv
.772549 .839216 .6 rgb
f
526.98 480 mo
470.674 480 li
470.792 471.723 470.922 463.737 471.104 456.045 cv
471.325 448.999 471.681 442.407 472.111 436.164 cv
475.719 435.83 479.288 435.443 482.828 435.021 cv
486.587 447.816 492.596 461.408 500.82 475.637 cv
500.82 475.637 li
500.82 475.637 li
498.204 460.499 496.321 446.488 494.702 433.493 cv
499.47 432.844 504.2 432.174 508.914 431.53 cv
514.815 446.225 520.665 462.328 526.98 480 cv
.258824 .443137 .172549 rgb
f
472.111 436.164 mo
472.112 436.16 472.112 436.157 472.112 436.154 cv
472.112 436.154 li
472.112 436.154 li
475.715 435.82 479.28 435.422 482.822 435 cv
482.824 435.007 482.826 435.014 482.828 435.021 cv
479.288 435.443 475.719 435.83 472.111 436.164 cv
494.702 433.493 mo
494.702 433.49 494.701 433.486 494.701 433.483 cv
499.471 432.835 504.202 432.169 508.914 431.528 cv
508.914 431.529 508.914 431.529 508.914 431.53 cv
504.2 432.174 499.47 432.844 494.702 433.493 cv
.494118 .611765 .345098 rgb
f
403.95 480 mo
399.41 480 li
408.785 425.434 li
410.467 426.047 412.165 426.613 413.877 427.137 cv
410.092 442.915 406.837 460.429 403.95 480 cv
.364706 .627451 .231373 rgb
f
413.877 427.137 mo
412.165 426.613 410.467 426.047 408.785 425.434 cv
408.785 425.434 li
410.462 426.045 412.165 426.595 413.882 427.118 cv
413.88 427.124 413.879 427.131 413.877 427.137 cv
.67451 .768627 .458824 rgb
f
426.543 480 mo
420.181 480 li
421.227 469.543 422.245 459.666 423.319 450.328 cv
424.789 459.627 425.802 469.509 426.543 480 cv
.239216 .403922 .172549 rgb
f
440.567 480 mo
426.543 480 li
425.802 469.509 424.789 459.627 423.319 450.328 cv
422.245 459.666 421.227 469.543 420.181 480 cv
403.95 480 li
406.837 460.429 410.092 442.915 413.877 427.137 cv
422.509 429.777 431.503 431.356 440.621 432.579 cv
440.667 436.546 440.683 440.624 440.683 444.817 cv
440.683 455.751 440.57 467.461 440.567 480 cv
.258824 .443137 .172549 rgb
f
440.621 432.579 mo
431.503 431.356 422.509 429.777 413.877 427.137 cv
413.879 427.131 413.88 427.124 413.882 427.118 cv
422.49 429.745 431.494 431.341 440.621 432.568 cv
440.621 432.568 li
440.621 432.568 li
440.621 432.571 440.621 432.575 440.621 432.579 cv
.494118 .611765 .345098 rgb
f
453.702 480 mo
452.171 480 li
450.953 463.177 449.787 447.751 448.555 433.567 cv
451.952 433.966 455.358 434.344 458.759 434.738 cv
456.464 448.514 454.359 463.436 453.702 480 cv
.364706 .627451 .231373 rgb
f
458.759 434.738 mo
455.358 434.344 451.952 433.966 448.555 433.567 cv
448.554 433.565 448.554 433.562 448.554 433.559 cv
451.955 433.96 455.36 434.341 458.76 434.736 cv
458.759 434.737 458.759 434.737 458.759 434.738 cv
.67451 .768627 .458824 rgb
f
452.171 480 mo
440.567 480 li
440.57 467.461 440.683 455.751 440.683 444.817 cv
440.683 440.624 440.667 436.546 440.621 432.579 cv
443.258 432.932 445.902 433.256 448.555 433.567 cv
449.787 447.751 450.953 463.177 452.171 480 cv
.239216 .403922 .172549 rgb
f
448.555 433.567 mo
445.902 433.256 443.258 432.932 440.621 432.579 cv
440.621 432.575 440.621 432.571 440.621 432.568 cv
443.259 432.923 445.905 433.247 448.554 433.559 cv
448.554 433.562 448.554 433.565 448.555 433.567 cv
.454902 .556863 .337255 rgb
f
470.674 480 mo
453.702 480 li
454.359 463.436 456.464 448.514 458.759 434.738 cv
462.727 435.197 466.691 435.677 470.629 436.235 cv
470.641 436.237 470.653 436.238 470.665 436.24 cv
470.693 436.244 470.722 436.248 470.75 436.252 cv
470.8 436.259 470.85 436.267 470.9 436.274 cv
470.9 436.274 li
471.304 436.238 471.708 436.201 472.111 436.164 cv
471.681 442.407 471.325 448.999 471.104 456.045 cv
470.922 463.737 470.792 471.723 470.674 480 cv
.239216 .403922 .172549 rgb
f
470.9 436.274 mo
471.306 436.237 471.707 436.191 472.112 436.154 cv
472.112 436.157 472.112 436.16 472.111 436.164 cv
471.708 436.201 471.304 436.238 470.9 436.274 cv
470.75 436.252 mo
470.722 436.248 470.693 436.244 470.665 436.24 cv
470.693 436.244 470.722 436.248 470.75 436.252 cv
470.629 436.235 mo
466.691 435.677 462.727 435.197 458.759 434.738 cv
458.759 434.737 458.759 434.737 458.76 434.736 cv
462.725 435.196 466.685 435.676 470.629 436.235 cv
.454902 .556863 .337255 rgb
f
703.491 416.861 mo
697.36 438.306 690.65 459.327 683.349 480 cv
832.303 480 li
828.865 454.189 825.427 428.378 821.988 402.567 cv
781.664 405.406 742.878 411.453 703.491 416.861 cv
.172549 .431373 .180392 rgb
f
703.174 417.971 mo
703.174 417.971 li
703.174 417.971 li
703.276 417.615 703.378 417.259 703.479 416.903 cv
703.479 416.903 703.479 416.903 703.479 416.903 cv
703.378 417.259 703.276 417.615 703.174 417.971 cv
.662745 .752941 .34902 rgb
f
764.071 428.264 mo
764.071 428.264 li
760.016 427.991 755.944 427.79 751.876 427.564 cv
751.876 427.564 li
751.876 427.564 li
748.464 427.376 745.056 427.17 741.665 426.904 cv
741.665 426.904 li
740.318 426.798 738.973 426.682 737.632 426.554 cv
734.916 426.291 732.219 425.978 729.553 425.593 cv
722.008 424.495 714.694 422.792 707.919 420.072 cv
707.916 420.082 707.912 420.092 707.909 420.102 cv
707.909 420.102 li
707.912 420.092 707.916 420.082 707.919 420.072 cv
706.307 419.426 704.718 418.739 703.174 417.971 cv
703.276 417.615 703.378 417.259 703.479 416.903 cv
740.315 414.922 776.929 412.026 814.457 409.186 cv
811.07 410.845 807.671 412.465 804.256 414.027 cv
804.256 414.027 li
804.256 414.027 li
799.261 416.311 794.228 418.464 789.152 420.427 cv
789.152 420.427 li
789.152 420.427 li
784.994 422.035 780.804 423.504 776.586 424.825 cv
776.587 424.836 776.588 424.849 776.589 424.86 cv
776.589 424.86 li
776.588 424.849 776.587 424.836 776.586 424.825 cv
772.859 425.992 769.111 427.052 765.339 427.953 cv
765.339 427.953 li
764.916 428.054 764.495 428.166 764.071 428.264 cv
764.071 428.264 li
703.491 416.861 mo
703.491 416.861 li
703.491 416.861 li
742.878 411.453 781.664 405.406 821.988 402.567 cv
821.988 402.567 li
821.988 402.567 li
821.988 402.567 li
781.664 405.406 742.878 411.453 703.491 416.861 cv
703.491 416.861 li
815.051 408.895 mo
817.208 407.834 819.361 406.756 821.511 405.673 cv
819.874 406.498 818.238 407.321 816.597 408.132 cv
816.597 408.132 li
816.082 408.387 815.567 408.641 815.051 408.895 cv
.466667 .635294 .34902 rgb
f
703.479 416.903 mo
703.491 416.861 li
703.487 416.875 703.483 416.889 703.479 416.903 cv
703.479 416.903 703.479 416.903 703.479 416.903 cv
.615686 .733333 .231373 rgb
f
703.479 416.903 mo
703.483 416.889 703.487 416.875 703.491 416.861 cv
703.491 416.861 li
703.487 416.875 703.484 416.889 703.479 416.903 cv
703.479 416.903 703.479 416.903 703.479 416.903 cv
.764706 .827451 .45098 rgb
f
822.346 405.253 mo
822.227 404.358 822.108 403.462 821.988 402.567 cv
822.108 403.462 822.227 404.358 822.346 405.252 cv
822.346 405.252 li
822.346 405.252 li
822.346 405.252 li
f
703.479 416.903 mo
703.484 416.889 703.487 416.875 703.491 416.861 cv
703.491 416.861 li
742.878 411.453 781.664 405.406 821.988 402.567 cv
821.988 402.567 li
822.108 403.462 822.227 404.358 822.346 405.253 cv
822.068 405.393 821.789 405.533 821.511 405.673 cv
819.361 406.756 817.208 407.834 815.051 408.895 cv
814.853 408.992 814.655 409.089 814.457 409.186 cv
776.929 412.026 740.315 414.922 703.479 416.903 cv
.603922 .745098 .45098 rgb
f
787.914 474.449 mo
781.9 457.961 778.234 441.593 776.589 424.86 cv
780.806 423.536 784.994 422.049 789.151 420.437 cv
788.902 429.601 788.63 438.672 788.401 447.667 cv
788.172 456.665 787.987 465.587 787.914 474.449 cv
.14902 .360784 .172549 rgb
f
776.589 424.86 mo
776.588 424.849 776.587 424.836 776.586 424.825 cv
780.804 423.504 784.994 422.035 789.152 420.427 cv
789.152 420.427 li
789.152 420.43 789.152 420.434 789.151 420.437 cv
784.994 422.049 780.806 423.536 776.589 424.86 cv
.4 .533333 .337255 rgb
f
827.905 480 mo
814.239 480 li
812.371 466.821 810.507 453.695 808.522 440.635 cv
807.17 431.735 805.761 422.866 804.257 414.03 cv
808.393 412.141 812.505 410.165 816.598 408.137 cv
819.922 431.947 823.944 455.914 827.905 480 cv
.14902 .360784 .172549 rgb
f
804.257 414.03 mo
804.257 414.029 804.256 414.028 804.256 414.027 cv
804.256 414.027 li
807.671 412.465 811.07 410.845 814.457 409.186 cv
814.457 409.186 814.457 409.186 814.457 409.186 cv
814.655 409.089 814.853 408.992 815.051 408.895 cv
815.567 408.641 816.082 408.387 816.597 408.132 cv
816.597 408.132 li
816.597 408.132 li
816.598 408.134 816.598 408.135 816.598 408.137 cv
812.505 410.165 808.393 412.141 804.257 414.03 cv
.4 .533333 .337255 rgb
f
814.457 409.186 mo
814.655 409.089 814.853 408.992 815.051 408.895 cv
814.853 408.992 814.655 409.089 814.457 409.186 cv
814.457 409.186 li
.517647 .623529 .435294 rgb
f
826.189 434.104 mo
824.908 424.487 823.627 414.87 822.346 405.253 cv
822.346 405.252 822.346 405.252 822.346 405.252 cv
822.346 405.252 li
823.627 414.87 824.908 424.487 826.189 434.104 cv
.615686 .733333 .231373 rgb
f
832.303 480 mo
827.905 480 li
823.945 455.914 819.922 431.947 816.598 408.137 cv
818.518 407.186 820.435 406.223 822.346 405.252 cv
823.627 414.87 824.908 424.487 826.189 434.104 cv
828.227 449.403 830.265 464.701 832.303 480 cv
.223529 .560784 .231373 rgb
f
816.598 408.137 mo
816.598 408.135 816.598 408.134 816.597 408.132 cv
818.238 407.321 819.874 406.498 821.511 405.673 cv
821.789 405.533 822.068 405.393 822.346 405.252 cv
822.346 405.253 822.346 405.253 822.346 405.253 cv
820.435 406.223 818.518 407.186 816.598 408.137 cv
.603922 .745098 .45098 rgb
f
821.511 405.673 mo
821.789 405.533 822.068 405.393 822.346 405.252 cv
822.346 405.253 822.346 405.253 822.346 405.253 cv
822.068 405.393 821.789 405.533 821.511 405.673 cv
.721569 .823529 .584314 rgb
f
827.905 480 mo
827.905 480 li
823.944 455.914 819.922 431.947 816.598 408.137 cv
816.598 408.137 li
819.922 431.947 823.945 455.914 827.905 480 cv
.192157 .470588 .223529 rgb
f
814.238 480 mo
756.153 480 li
757.776 471.139 759.341 462.107 760.9 452.889 cv
762.363 444.496 763.859 436.225 765.336 427.97 cv
769.115 427.074 772.863 426.03 776.589 424.86 cv
778.234 441.594 781.899 457.961 787.914 474.449 cv
787.988 465.587 788.172 456.665 788.401 447.667 cv
788.63 438.672 788.903 429.601 789.151 420.437 cv
794.227 418.47 799.258 416.314 804.257 414.03 cv
805.761 422.866 807.169 431.735 808.522 440.635 cv
810.507 453.695 812.371 466.821 814.238 480 cv
.160784 .396078 .176471 rgb
f
765.336 427.97 mo
765.337 427.964 765.338 427.959 765.339 427.953 cv
765.339 427.953 li
765.339 427.953 li
769.111 427.052 772.859 425.992 776.586 424.825 cv
776.587 424.836 776.588 424.849 776.589 424.86 cv
772.863 426.03 769.115 427.074 765.336 427.97 cv
789.151 420.437 mo
789.152 420.434 789.152 420.43 789.152 420.427 cv
789.152 420.427 li
794.228 418.464 799.261 416.311 804.256 414.027 cv
804.256 414.027 li
804.256 414.028 804.257 414.029 804.257 414.03 cv
799.258 416.314 794.227 418.47 789.151 420.437 cv
.431373 .584314 .341176 rgb
f
788.401 447.667 mo
788.63 438.672 788.902 429.601 789.151 420.437 cv
789.151 420.437 li
788.903 429.601 788.63 438.672 788.401 447.667 cv
.137255 .329412 .168627 rgb
f
808.522 440.635 mo
807.169 431.735 805.761 422.866 804.257 414.03 cv
804.257 414.03 li
805.761 422.866 807.17 431.735 808.522 440.635 cv
f
683.349 480 mo
683.343 480 li
689.404 462.838 695.062 445.438 700.317 427.753 cv
700.317 427.752 li
695.064 445.437 689.409 462.839 683.349 480 cv
.54902 .666667 .227451 rgb
f
700.317 427.753 mo
701.282 424.502 702.235 421.241 703.174 417.971 cv
703.174 417.971 li
703.174 417.971 li
702.235 421.241 701.283 424.502 700.317 427.752 cv
700.317 427.753 li
.615686 .733333 .231373 rgb
f
688.157 480 mo
683.349 480 li
683.349 480 li
689.409 462.839 695.064 445.437 700.317 427.752 cv
700.317 427.752 li
701.283 424.502 702.235 421.241 703.174 417.971 cv
704.721 418.746 706.301 419.454 707.909 420.102 cv
700.936 440.369 694.362 460.249 688.157 480 cv
.223529 .560784 .231373 rgb
f
707.909 420.102 mo
706.301 419.454 704.721 418.746 703.174 417.971 cv
703.174 417.971 li
704.718 418.739 706.307 419.426 707.919 420.072 cv
707.916 420.082 707.912 420.092 707.909 420.102 cv
.603922 .745098 .45098 rgb
f
711.936 480 mo
704.78 480 li
707.751 468.959 710.609 457.818 713.507 446.586 cv
713.562 457.537 712.959 468.507 711.982 479.478 cv
711.967 479.652 711.951 479.826 711.936 480 cv
.14902 .360784 .172549 rgb
f
725.691 480 mo
711.936 480 li
711.951 479.826 711.967 479.652 711.982 479.478 cv
712.959 468.507 713.562 457.537 713.507 446.586 cv
710.609 457.818 707.751 468.959 704.78 480 cv
688.157 480 li
694.362 460.249 700.936 440.369 707.909 420.102 cv
714.699 422.838 722.001 424.504 729.553 425.593 cv
730.956 425.797 732.367 425.981 733.784 426.146 cv
733.741 426.5 733.698 426.855 733.655 427.209 cv
731.474 444.998 728.527 462.555 725.691 480 cv
725.691 480 li
.160784 .396078 .176471 rgb
f
729.553 425.593 mo
722.001 424.504 714.699 422.838 707.909 420.102 cv
707.912 420.092 707.916 420.082 707.919 420.072 cv
714.694 422.792 722.008 424.495 729.553 425.593 cv
.431373 .584314 .341176 rgb
f
704.78 480 mo
704.78 480 li
707.751 468.959 710.609 457.818 713.507 446.586 cv
713.562 457.537 712.959 468.507 711.982 479.478 cv
712.959 468.507 713.562 457.537 713.507 446.586 cv
710.609 457.818 707.751 468.959 704.78 480 cv
.137255 .329412 .168627 rgb
f
738.881 480 mo
737.564 480 li
739.135 462.408 740.537 444.702 741.665 426.909 cv
745.054 427.18 748.462 427.391 751.871 427.583 cv
747.225 445.595 742.326 462.747 738.881 480 cv
738.881 480 li
.223529 .560784 .231373 rgb
f
751.871 427.583 mo
748.462 427.391 745.054 427.18 741.665 426.909 cv
741.665 426.908 741.665 426.905 741.665 426.904 cv
741.665 426.904 li
741.665 426.904 li
745.056 427.17 748.464 427.376 751.876 427.564 cv
751.876 427.564 li
751.874 427.571 751.873 427.577 751.871 427.583 cv
.603922 .745098 .45098 rgb
f
737.564 480 mo
725.691 480 li
725.691 480 li
728.527 462.555 731.474 444.998 733.655 427.209 cv
733.698 426.855 733.741 426.5 733.784 426.146 cv
735.062 426.295 736.345 426.43 737.632 426.554 cv
738.971 426.683 740.318 426.801 741.665 426.909 cv
740.537 444.702 739.134 462.408 737.564 480 cv
.14902 .360784 .172549 rgb
f
741.665 426.909 mo
740.318 426.801 738.971 426.683 737.632 426.554 cv
738.973 426.682 740.318 426.798 741.665 426.904 cv
741.665 426.905 741.665 426.908 741.665 426.909 cv
.4 .533333 .337255 rgb
f
725.691 480 mo
728.527 462.555 731.474 444.998 733.655 427.209 cv
731.474 444.998 728.527 462.555 725.691 480 cv
.137255 .333333 .168627 rgb
f
737.564 480 mo
737.564 480 li
739.134 462.408 740.537 444.702 741.665 426.909 cv
741.665 426.909 li
740.537 444.702 739.135 462.408 737.564 480 cv
.192157 .470588 .223529 rgb
f
756.153 480 mo
738.881 480 li
738.881 480 li
742.326 462.747 747.225 445.595 751.871 427.583 cv
755.951 427.813 760.03 428.016 764.071 428.264 cv
764.071 428.264 li
764.071 428.264 li
764.492 428.168 764.915 428.069 765.336 427.97 cv
763.859 436.225 762.362 444.497 760.9 452.889 cv
759.341 462.107 757.776 471.139 756.153 480 cv
.14902 .360784 .172549 rgb
f
764.071 428.264 mo
764.495 428.166 764.916 428.054 765.339 427.953 cv
765.338 427.959 765.337 427.964 765.336 427.97 cv
764.915 428.069 764.492 428.168 764.071 428.264 cv
764.071 428.264 mo
760.03 428.016 755.951 427.813 751.871 427.583 cv
751.873 427.577 751.874 427.571 751.876 427.564 cv
751.876 427.564 li
755.944 427.79 760.016 427.991 764.071 428.264 cv
.4 .533333 .337255 rgb
f
756.153 480 mo
756.153 480 li
757.776 471.139 759.341 462.107 760.9 452.889 cv
762.362 444.497 763.859 436.225 765.336 427.97 cv
765.336 427.97 li
763.859 436.225 762.363 444.496 760.9 452.889 cv
759.341 462.107 757.776 471.139 756.153 480 cv
.137255 .333333 .168627 rgb
f
738.881 480 mo
742.326 462.747 747.225 445.595 751.871 427.583 cv
751.871 427.583 li
747.225 445.595 742.326 462.747 738.881 480 cv
.192157 .470588 .223529 rgb
f
159.954 418.639 mo
149.188 439.566 136.606 460.006 122.245 480 cv
264.342 480 li
254.57 457.991 244.799 435.982 235.027 413.973 cv
204.398 410.136 185.796 412.797 159.954 418.639 cv
.172549 .431373 .180392 rgb
f
198.119 432.737 mo
198.119 432.737 li
195.178 432.132 192.289 431.627 189.45 431.131 cv
189.449 431.134 189.448 431.138 189.448 431.141 cv
189.448 431.141 li
189.448 431.138 189.449 431.134 189.45 431.131 cv
187.069 430.714 184.724 430.302 182.429 429.851 cv
182.429 429.851 li
180.64 429.5 178.881 429.124 177.165 428.702 cv
177.165 428.702 li
177.165 428.702 li
171.229 427.245 165.75 425.204 161.657 421.896 cv
161.657 421.896 li
161.657 421.896 li
161.481 421.753 161.307 421.609 161.136 421.463 cv
160.518 420.931 159.929 420.366 159.373 419.765 cv
159.56 419.404 159.746 419.043 159.932 418.682 cv
170.625 417.624 180.689 417.078 191.227 417.078 cv
203.401 417.078 216.209 417.806 231.367 419.314 cv
229.274 420.449 227.156 421.575 225 422.673 cv
225.001 422.674 225.002 422.677 225.002 422.678 cv
225.002 422.678 li
225.002 422.677 225.001 422.674 225 422.673 cv
221.847 424.279 218.607 425.812 215.259 427.215 cv
215.259 427.215 li
212.517 428.364 209.698 429.41 206.813 430.344 cv
206.813 430.344 li
206.813 430.344 li
204.263 431.168 201.661 431.912 199.01 432.523 cv
199.01 432.529 199.009 432.535 199.009 432.541 cv
199.009 432.541 li
199.009 432.535 199.01 432.529 199.01 432.523 cv
198.713 432.592 198.417 432.672 198.119 432.737 cv
198.119 432.737 li
215.261 427.224 mo
215.26 427.221 215.26 427.218 215.259 427.215 cv
215.26 427.218 215.26 427.221 215.261 427.224 cv
215.261 427.224 li
231.553 419.213 mo
232.924 418.468 234.283 417.717 235.641 416.974 cv
234.659 417.512 233.676 418.056 232.688 418.595 cv
232.688 418.595 li
232.31 418.802 231.932 419.008 231.553 419.213 cv
.466667 .635294 .34902 rgb
f
159.932 418.682 mo
159.954 418.639 li
159.947 418.653 159.939 418.668 159.932 418.682 cv
159.932 418.682 159.932 418.682 159.932 418.682 cv
.54902 .666667 .227451 rgb
f
159.932 418.682 mo
159.939 418.668 159.947 418.653 159.954 418.639 cv
159.954 418.639 li
159.947 418.654 159.94 418.668 159.932 418.682 cv
159.932 418.682 159.932 418.682 159.932 418.682 cv
.223529 .560784 .231373 rgb
f
236.219 416.658 mo
235.821 415.763 235.424 414.868 235.027 413.973 cv
235.424 414.868 235.822 415.763 236.219 416.658 cv
236.219 416.658 li
236.219 416.658 li
236.219 416.658 li
.764706 .827451 .45098 rgb
f
231.367 419.314 mo
216.209 417.806 203.401 417.078 191.227 417.078 cv
180.689 417.078 170.625 417.624 159.932 418.682 cv
159.94 418.668 159.947 418.654 159.954 418.639 cv
159.954 418.639 li
177.484 414.676 191.681 412.177 208.561 412.177 cv
216.566 412.177 225.175 412.739 235.027 413.973 cv
235.027 413.973 li
235.424 414.868 235.821 415.763 236.219 416.658 cv
236.026 416.763 235.834 416.868 235.641 416.974 cv
234.283 417.717 232.924 418.468 231.553 419.213 cv
231.491 419.247 231.429 419.281 231.367 419.314 cv
.603922 .745098 .45098 rgb
f
223.71 480 mo
223.153 480 li
215.897 464.942 211.156 450.049 207.812 435.035 cv
207.467 433.486 207.137 431.934 206.82 430.382 cv
209.706 429.444 212.517 428.379 215.261 427.224 cv
216.87 436.144 218.323 444.991 219.703 453.779 cv
221.084 462.571 222.392 471.306 223.71 480 cv
.14902 .360784 .172549 rgb
f
206.82 430.382 mo
206.818 430.369 206.815 430.357 206.813 430.344 cv
206.813 430.344 li
209.698 429.41 212.517 428.364 215.259 427.215 cv
215.259 427.215 li
215.259 427.215 li
215.259 427.215 li
215.26 427.218 215.26 427.221 215.261 427.224 cv
212.517 428.379 209.706 429.444 206.82 430.382 cv
.4 .533333 .337255 rgb
f
259.902 480 mo
247.334 480 li
239.876 460.806 232.557 441.7 225.002 422.678 cv
227.616 421.352 230.177 419.981 232.691 418.605 cv
241.198 438.966 250.463 459.449 259.902 480 cv
.14902 .360784 .172549 rgb
f
225.002 422.678 mo
225.002 422.677 225.001 422.674 225 422.673 cv
227.156 421.575 229.274 420.449 231.367 419.314 cv
231.367 419.314 231.367 419.314 231.367 419.314 cv
231.429 419.281 231.491 419.247 231.553 419.213 cv
231.932 419.008 232.31 418.802 232.688 418.595 cv
232.688 418.595 li
232.688 418.595 li
232.689 418.599 232.69 418.601 232.691 418.605 cv
230.177 419.981 227.616 421.352 225.002 422.678 cv
.4 .533333 .337255 rgb
f
231.367 419.314 mo
231.367 419.314 li
231.429 419.281 231.491 419.247 231.553 419.213 cv
231.491 419.247 231.429 419.281 231.367 419.314 cv
.517647 .623529 .435294 rgb
f
264.342 480 mo
258.023 465.768 251.705 451.537 245.386 437.304 cv
251.705 451.537 258.023 465.768 264.342 480 cv
242.131 429.975 mo
240.16 425.535 238.19 421.098 236.219 416.658 cv
236.219 416.658 236.219 416.658 236.219 416.658 cv
236.219 416.658 li
238.19 421.098 240.16 425.536 242.131 429.975 cv
.615686 .733333 .231373 rgb
f
264.342 480 mo
259.903 480 li
250.463 459.449 241.198 438.965 232.691 418.605 cv
233.877 417.956 235.052 417.306 236.219 416.658 cv
238.19 421.098 240.16 425.535 242.131 429.975 cv
243.216 432.417 244.301 434.862 245.386 437.304 cv
251.705 451.537 258.023 465.768 264.342 480 cv
264.342 480 li
.223529 .560784 .231373 rgb
f
232.691 418.605 mo
232.69 418.601 232.689 418.599 232.688 418.595 cv
233.676 418.056 234.659 417.512 235.641 416.974 cv
235.834 416.868 236.026 416.763 236.219 416.658 cv
236.219 416.658 236.219 416.658 236.219 416.658 cv
235.052 417.306 233.877 417.956 232.691 418.605 cv
.603922 .745098 .45098 rgb
f
235.641 416.974 mo
235.834 416.868 236.026 416.763 236.219 416.658 cv
236.219 416.658 236.219 416.658 236.219 416.658 cv
236.026 416.763 235.834 416.868 235.641 416.974 cv
.721569 .823529 .584314 rgb
f
259.903 480 mo
259.902 480 li
250.463 459.449 241.198 438.966 232.691 418.605 cv
232.691 418.605 li
241.198 438.965 250.463 459.449 259.903 480 cv
.192157 .470588 .223529 rgb
f
247.334 480 mo
223.71 480 li
222.392 471.306 221.084 462.571 219.703 453.779 cv
218.323 444.991 216.87 436.144 215.261 427.224 cv
218.601 425.819 221.841 424.281 225.002 422.678 cv
232.556 441.7 239.875 460.806 247.334 480 cv
.160784 .396078 .176471 rgb
f
215.261 427.224 mo
215.26 427.221 215.26 427.218 215.259 427.215 cv
215.259 427.215 li
218.607 425.812 221.847 424.279 225 422.673 cv
225.001 422.674 225.002 422.677 225.002 422.678 cv
221.841 424.281 218.601 425.819 215.261 427.224 cv
.431373 .584314 .341176 rgb
f
223.71 480 mo
223.71 480 li
222.392 471.306 221.084 462.571 219.703 453.779 cv
221.084 462.571 222.392 471.306 223.71 480 cv
.137255 .329412 .168627 rgb
f
223.153 480 mo
194.37 480 li
195.426 472.667 196.321 465.23 197.066 457.671 cv
197.7 451.305 198.235 445.018 198.644 438.766 cv
198.78 436.688 198.902 434.613 199.009 432.541 cv
201.677 431.937 204.278 431.209 206.82 430.382 cv
207.137 431.934 207.467 433.486 207.812 435.035 cv
211.155 450.049 215.896 464.942 223.153 480 cv
.160784 .396078 .176471 rgb
f
199.009 432.541 mo
199.009 432.535 199.01 432.529 199.01 432.523 cv
201.661 431.912 204.263 431.168 206.813 430.344 cv
206.813 430.344 li
206.815 430.357 206.818 430.369 206.82 430.382 cv
204.278 431.209 201.677 431.937 199.009 432.541 cv
.431373 .584314 .341176 rgb
f
207.812 435.035 mo
207.467 433.486 207.137 431.934 206.82 430.382 cv
206.82 430.382 li
207.137 431.934 207.467 433.486 207.812 435.035 cv
.137255 .329412 .168627 rgb
f
122.245 480 mo
122.244 480 li
130.947 467.883 138.997 455.603 146.386 443.149 cv
138.998 455.602 130.948 467.883 122.245 480 cv
146.411 443.107 mo
146.448 443.044 146.485 442.981 146.522 442.919 cv
146.485 442.981 146.448 443.044 146.411 443.107 cv
146.607 442.776 mo
146.622 442.75 146.639 442.721 146.655 442.695 cv
146.638 442.723 146.623 442.748 146.607 442.776 cv
.54902 .666667 .227451 rgb
f
127.179 480 mo
122.245 480 li
122.245 480 li
130.948 467.883 138.998 455.602 146.386 443.149 cv
146.394 443.135 146.403 443.12 146.411 443.107 cv
146.448 443.044 146.485 442.981 146.522 442.919 cv
146.551 442.871 146.579 442.824 146.607 442.776 cv
146.623 442.748 146.638 442.723 146.655 442.695 cv
151.14 435.116 155.38 427.474 159.373 419.765 cv
159.917 420.371 160.51 420.93 161.136 421.463 cv
161.308 421.611 161.48 421.755 161.656 421.898 cv
151.357 441.635 139.623 460.918 127.179 480 cv
127.179 480 li
.223529 .560784 .231373 rgb
f
161.656 421.898 mo
161.48 421.755 161.308 421.611 161.136 421.463 cv
161.307 421.609 161.481 421.753 161.657 421.896 cv
161.657 421.896 li
161.657 421.896 li
.603922 .745098 .45098 rgb
f
150.768 480 mo
144.081 480 li
149.218 469.762 154.008 459.425 158.586 449.005 cv
156.41 459.338 153.747 469.673 150.768 480 cv
.14902 .360784 .172549 rgb
f
164.613 480 mo
150.768 480 li
153.747 469.673 156.41 459.338 158.586 449.005 cv
158.586 449.005 li
158.586 449.005 li
154.008 459.425 149.218 469.762 144.081 480 cv
127.179 480 li
127.179 480 li
139.623 460.918 151.357 441.636 161.657 421.896 cv
165.791 425.245 171.176 427.237 177.164 428.706 cv
174.037 446.008 169.495 463.06 164.613 480 cv
.160784 .396078 .176471 rgb
f
177.164 428.706 mo
171.176 427.237 165.791 425.245 161.656 421.898 cv
161.657 421.896 161.657 421.896 161.657 421.896 cv
161.657 421.896 li
165.75 425.204 171.229 427.245 177.165 428.702 cv
177.165 428.702 li
177.165 428.704 177.164 428.705 177.164 428.706 cv
.431373 .584314 .341176 rgb
f
127.179 480 mo
139.623 460.918 151.357 441.635 161.657 421.896 cv
161.656 421.898 161.656 421.898 161.656 421.898 cv
151.357 441.636 139.623 460.918 127.179 480 cv
.207843 .513725 .227451 rgb
f
177.742 480 mo
175.98 480 li
178.507 463.382 180.666 446.662 182.428 429.857 cv
184.723 430.309 187.073 430.724 189.448 431.141 cv
186.517 447.851 181.953 463.879 177.742 480 cv
.223529 .560784 .231373 rgb
f
189.448 431.141 mo
187.073 430.724 184.723 430.309 182.428 429.857 cv
182.428 429.855 182.428 429.853 182.429 429.851 cv
182.429 429.851 li
182.429 429.851 li
184.724 430.302 187.069 430.714 189.45 431.131 cv
189.449 431.134 189.448 431.138 189.448 431.141 cv
.603922 .745098 .45098 rgb
f
175.98 480 mo
164.613 480 li
169.495 463.06 174.037 446.008 177.164 428.706 cv
178.874 429.126 180.634 429.503 182.428 429.857 cv
180.666 446.662 178.507 463.382 175.98 480 cv
.14902 .360784 .172549 rgb
f
182.428 429.857 mo
180.634 429.503 178.874 429.126 177.164 428.706 cv
177.164 428.705 177.165 428.704 177.165 428.702 cv
177.165 428.702 li
178.881 429.124 180.64 429.5 182.429 429.851 cv
182.428 429.853 182.428 429.855 182.428 429.857 cv
.4 .533333 .337255 rgb
f
164.613 480 mo
164.613 480 li
169.495 463.06 174.037 446.008 177.164 428.706 cv
177.164 428.706 li
174.037 446.008 169.495 463.06 164.613 480 cv
.137255 .333333 .168627 rgb
f
175.98 480 mo
175.98 480 li
178.507 463.382 180.666 446.662 182.428 429.857 cv
182.428 429.857 li
180.666 446.662 178.507 463.382 175.98 480 cv
.192157 .470588 .223529 rgb
f
194.37 480 mo
177.742 480 li
181.953 463.879 186.517 447.851 189.448 431.141 cv
192.321 431.645 195.23 432.153 198.119 432.737 cv
198.119 432.737 li
198.119 432.737 li
198.416 432.674 198.713 432.608 199.009 432.541 cv
198.902 434.613 198.78 436.688 198.644 438.766 cv
198.235 445.018 197.7 451.305 197.066 457.671 cv
196.321 465.23 195.426 472.667 194.37 480 cv
.14902 .360784 .172549 rgb
f
198.119 432.737 mo
198.417 432.672 198.713 432.592 199.01 432.523 cv
199.01 432.529 199.009 432.535 199.009 432.541 cv
198.713 432.608 198.416 432.674 198.119 432.737 cv
198.119 432.737 mo
195.23 432.153 192.321 431.645 189.448 431.141 cv
189.448 431.138 189.449 431.134 189.45 431.131 cv
192.289 431.627 195.178 432.132 198.119 432.737 cv
.4 .533333 .337255 rgb
f
194.37 480 mo
194.37 480 li
195.426 472.667 196.321 465.23 197.066 457.671 cv
197.7 451.305 198.235 445.018 198.644 438.766 cv
198.235 445.018 197.7 451.305 197.066 457.671 cv
196.321 465.23 195.426 472.667 194.37 480 cv
.137255 .333333 .168627 rgb
f
586.738 480 mo
811.743 480 li
811.743 480 li
586.738 480 li
586.738 480 li
cp
.0431373 .266667 .133333 rgb
f
772.842 479.201 mo
773.866 469.992 769.969 461.217 760.054 467.479 cv
767.307 452.392 762.837 420.635 742.276 419.953 cv
717.591 419.134 710.172 454.854 711.943 473.162 cv
708.808 466.258 706.013 469.442 700.201 468.968 cv
696.743 468.685 695.25 474.147 692.203 473.658 cv
689.212 473.179 689.511 469.735 686.799 468.664 cv
673.045 463.23 668.935 453.205 651.996 459.723 cv
644.15 462.741 634.355 468.592 637.812 478.14 cv
629.777 467.235 597.219 447.586 584.507 460.794 cv
579.692 465.797 582.059 473.34 586.738 480 cv
811.743 480 li
811.22 477.772 810.377 475.694 809.118 474.164 cv
798.425 461.162 783.099 472.552 772.842 479.201 cv
cp
f
197.968 480 mo
386.078 480 li
386.078 480 li
197.968 480 li
197.968 480 li
cp
f
354.422 467.324 mo
355.909 461.668 356.908 449.124 351.357 444.899 cv
351.202 443.993 350.985 443.074 350.753 442.207 cv
350.11 439.861 349.285 438 349.285 438 cv
349.285 438 347.535 438.889 345.597 440.286 cv
344.947 440.748 344.279 441.287 343.646 441.876 cv
343.064 440.514 342.311 439.172 341.566 438.006 cv
340.075 435.663 338.618 434 338.618 434 cv
338.618 434 337.33 435.796 336.069 438.184 cv
334.808 440.58 333.576 443.544 333.703 446.108 cv
333.713 447.533 334.253 449.207 334.992 450.846 cv
332.447 453.797 330.322 457.164 328.965 460.022 cv
334.105 443.37 330.96 402.749 310.939 403.821 cv
306.548 404.056 302.782 405.804 299.577 408.647 cv
299.306 408.385 299.029 408.125 298.734 407.874 cv
298.38 407.575 298.019 407.278 297.633 407 cv
297.231 406.733 296.819 406.474 296.401 406.226 cv
295.564 405.73 294.712 405.27 293.859 404.867 cv
292.967 404.499 292.091 404.176 291.265 403.899 cv
289.646 403.306 288.072 403.076 287.007 402.893 cv
285.93 402.724 285.285 402.667 285.285 402.667 cv
285.285 402.667 285.523 403.249 285.923 404.228 cv
286.308 405.205 286.935 406.41 287.5 407.91 cv
287.799 408.639 288.124 409.391 288.475 410.134 cv
288.817 410.889 289.133 411.703 289.509 412.448 cv
290.283 413.915 291.014 415.453 292.02 416.606 cv
292.262 416.919 292.546 417.231 292.848 417.541 cv
284.417 433.335 282.764 459.162 285.101 475.473 cv
281.833 471.161 276.255 469.089 272.337 474.837 cv
264.383 455.236 240.856 459.389 235.144 477.708 cv
232.61 464.002 209.793 444.803 200.214 462.033 cv
198.235 465.593 197.502 472.345 197.968 480 cv
386.078 480 li
386.086 479.909 li
387.711 458.441 368.244 449.101 354.422 467.324 cv
cp
f
430.35 480 mo
445.793 480 li
445.793 480 li
430.35 480 li
430.35 480 li
cp
.317647 .560784 .0666667 rgb
f
439.807 458.419 mo
437.431 454.518 434.407 450.902 431.274 448.206 cv
428.148 445.487 425.01 443.705 422.725 442.702 cv
422.148 442.454 421.638 442.232 421.184 442.055 cv
420.72 441.898 420.323 441.763 419.999 441.653 cv
419.358 441.446 419.007 441.333 419.007 441.333 cv
419.007 441.333 419.197 441.639 419.546 442.199 cv
419.899 442.745 420.395 443.54 420.937 444.562 cv
422.048 446.58 423.339 449.44 424.35 452.704 cv
425.398 455.955 426.119 459.652 426.764 463.293 cv
427.381 466.961 427.906 470.613 428.659 473.879 cv
429.098 475.8 429.69 477.866 430.35 480 cv
445.793 480 li
445.778 476.68 445.454 473.329 444.739 470.18 cv
443.89 466.473 442.161 462.321 439.807 458.419 cv
cp
f
410.533 480 mo
430.004 480 li
430.004 480 li
410.533 480 li
410.533 480 li
cp
.152941 .258824 .027451 rgb
f
425.967 473.374 mo
424.176 471.178 421.64 469.169 418.92 467.432 cv
416.191 465.718 413.267 464.27 410.612 463.124 cv
407.949 461.968 405.562 461.058 403.818 460.398 cv
402.066 459.734 401.007 459.333 401.007 459.333 cv
401.007 459.333 401.316 460.4 401.932 462.158 cv
402.561 463.89 403.522 466.294 404.712 468.893 cv
405.912 471.498 407.276 474.309 408.739 476.928 cv
409.32 477.998 409.922 479.019 410.533 480 cv
430.004 480 li
429.618 479.151 429.201 478.318 428.769 477.494 cv
427.911 476.037 427.013 474.579 425.967 473.374 cv
cp
f
436.237 480 mo
451.984 480 li
451.984 480 li
436.237 480 li
436.237 480 li
cp
f
453.312 462.362 mo
452.935 457.348 452.341 453.333 452.341 453.333 cv
452.341 453.333 449.197 455.584 445.665 459.252 cv
442.125 462.892 438.26 468.09 436.845 473.41 cv
436.323 475.338 436.158 477.623 436.237 480 cv
451.984 480 li
452.301 479.201 452.587 478.408 452.795 477.636 cv
453.928 473.344 453.671 467.392 453.312 462.362 cv
cp
f
462.266 480 mo
477.432 480 li
477.432 480 li
462.266 480 li
462.266 480 li
cp
.0431373 .266667 .133333 rgb
f
474.383 464.642 mo
473.967 463.018 473.674 462 473.674 462 cv
473.674 462 472.982 462.7 471.894 463.965 cv
470.823 465.229 469.397 467.069 467.944 469.261 cv
465.849 472.431 463.704 476.246 462.266 480 cv
477.432 480 li
477.193 476.911 476.623 473.8 475.998 471.075 cv
475.418 468.527 474.819 466.276 474.383 464.642 cv
cp
f
835.864 480 mo
854.47 480 li
854.47 480 li
835.864 480 li
835.864 480 li
cp
.152941 .258824 .027451 rgb
f
833.853 452.681 mo
831.523 450.139 829.469 447.821 828.013 446.112 cv
826.551 444.375 825.674 443.333 825.674 443.333 cv
825.674 443.333 825.577 444.617 825.535 446.836 cv
825.521 449.042 825.652 452.175 826.196 455.77 cv
827.201 462.974 830.154 471.933 834.726 478.483 cv
835.079 478.989 835.464 479.495 835.864 480 cv
854.47 480 li
852.516 476.04 850.428 472.147 848.248 469.028 cv
844.462 463.621 838.519 457.798 833.853 452.681 cv
cp
f
851.72 480 mo
867.712 480 li
867.712 480 li
851.72 480 li
851.72 480 li
cp
.211765 .368627 .0431373 rgb
f
867.899 475.072 mo
867.755 474.057 867.526 473.002 867.329 471.958 cv
867.105 470.903 866.818 469.822 866.496 468.741 cv
866.215 467.677 865.963 466.635 865.666 465.609 cv
865.026 463.543 864.623 461.698 864.268 460.296 cv
863.897 458.862 863.674 458 863.674 458 cv
863.674 458 862.976 458.464 861.863 459.358 cv
860.774 460.254 859.133 461.583 857.72 463.365 cv
856.98 464.249 856.218 465.23 855.475 466.289 cv
854.807 467.348 854.177 468.481 853.599 469.661 cv
853.31 470.25 853.038 470.851 852.785 471.46 cv
852.57 472.064 852.376 472.674 852.206 473.286 cv
851.868 474.51 851.624 475.744 851.521 476.944 cv
851.476 477.91 851.558 478.942 851.72 480 cv
867.712 480 li
867.854 479.297 867.963 478.607 867.99 477.955 cv
868.072 477.049 868.035 476.083 867.899 475.072 cv
cp
f
110.204 480 mo
129.142 480 li
129.142 480 li
110.204 480 li
110.204 480 li
cp
f
128.193 464.2 mo
127.141 459.948 125.214 455.22 122.46 450.785 cv
121.174 448.552 119.567 446.426 118.03 444.41 cv
117.264 443.401 116.373 442.462 115.562 441.539 cv
114.713 440.629 113.963 439.72 113.073 438.922 cv
109.701 435.636 106.399 433.201 103.961 431.648 cv
101.469 430.13 99.9739 429.333 99.9739 429.333 cv
99.9739 429.333 100.411 430.94 101.14 433.619 cv
101.824 436.259 102.628 439.906 103.277 443.947 cv
103.482 444.931 103.584 446.002 103.731 447.057 cv
103.876 448.099 104.024 449.165 104.174 450.247 cv
104.366 452.453 104.718 454.583 104.896 456.796 cv
105.438 461.117 105.821 465.437 106.761 469.163 cv
107.489 472.547 108.8 476.201 110.204 480 cv
129.142 480 li
129.154 479.821 129.174 479.644 129.184 479.465 cv
129.587 474.367 129.252 469.051 128.193 464.2 cv
cp
f
84.4639 480 mo
109.377 480 li
109.377 480 li
84.4638 480 li
84.4639 480 li
cp
.0431373 .266667 .133333 rgb
f
103.806 469.413 mo
103.08 468.362 102.296 467.305 101.467 466.249 cv
100.64 465.19 99.7714 464.129 98.7933 463.131 cv
96.8566 461.121 94.8582 459.078 92.6622 457.232 cv
90.4442 455.405 88.2292 453.608 85.9521 452.012 cv
83.6448 450.442 81.38 448.98 79.2316 447.659 cv
74.7893 445.154 70.8947 443.139 67.9522 441.933 cv
65.0581 440.675 63.3072 440 63.3072 440 cv
63.3072 440 64.0828 441.646 65.4439 444.297 cv
66.1078 445.638 66.9854 447.159 67.8581 448.975 cv
68.7455 450.777 69.746 452.752 70.8419 454.821 cv
71.9083 456.918 72.9875 459.184 74.1897 461.432 cv
74.8033 462.545 75.3735 463.719 75.9598 464.892 cv
76.5508 466.061 77.1611 467.227 77.7907 468.381 cv
79.9148 472.399 82.1322 476.36 84.4638 480 cv
109.377 480 li
108.886 478.75 108.316 477.587 107.762 476.409 cv
106.536 473.912 105.302 471.485 103.806 469.413 cv
cp
f
127.958 480 mo
149.441 480 li
149.441 480 li
127.958 480 li
127.958 480 li
cp
.317647 .560784 .0666667 rgb
f
156.142 463.695 mo
157.301 461.017 157.974 459.333 157.974 459.333 cv
157.974 459.333 156.41 459.96 153.805 461.167 cv
151.223 462.394 147.639 464.263 143.705 466.804 cv
138.524 470.082 132.801 474.671 127.958 480 cv
149.441 480 li
150.235 478.063 151.012 476.153 151.745 474.326 cv
153.506 470.069 155.044 466.35 156.142 463.695 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 /5 /6 /7 /8 /9 
/10 /11 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 17.0.0
%%For: (Krol) ()
%%Title: (bg14.eps)
%%CreationDate: 7/31/2016 10:46 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6D6G#$FY3AoJH!IX-%M1@3pCsop'_#lSAUP[5o^heEc2/uKtpNl_g=gMTVuB`^OGl[qk^lr6V=^S"dt5#EPuLr]=P&TC=do;
%He"beg$P9t?@VY=p$ZeUr80`RCmQg?9UC1^0&,Q]rRmhAf9a7$na5?m[[V-g%]A-tH2cX#(U)`plKt)(0>@DYm`j@%hL>@nbMDWZ
%]tXF(g$e!/SmD?!(LM[jk2.f#?U&o:^Z:h2J(),ZGkq#jLGs-Y4aVD;2]IJ494%N,ho\sI!<,ahq!r?0M<HlOhS#+#Og]Pm?iTfd
%nWnD\*'a=u?bcBlbAZ:OIJ3*jS(I]#cZ/66^ZjJEDdIh_9`IBsqtVP[nMC!]bPd@V55Xd6GC%TY3_TJKma!P"ikJ`Iq$eV,nu=<$
%8j#!noN.J)nDfF[s')BarYtj.0BH+)5/6sE4mnI*KYC`,PCLl$6$dVT8:JR6`#JXO(U(RKqUrIsr*HdJ2sp0)Y5$?5LS$-TJ1'LX
%Auh7O=rB94?fp!Yp3p`N@:ua(r8M'j^A,10?iKALB4&>sCZ"^)gNUDXq>\Mp_k<)'@cCaEp[sHRs7#mH4*bPod&s#"(N7$6n[3IZ
%?2j?d1OdtD+8Ps(N5'l9p3/1Ha`)Y!olp0<5JPFes6]9hHhFkoIfBIZ0%isJq9=iLJ,eZGnNjp'?!_B5[\Pj1>Z08GAX>&`heL<'
%:$qEZ]j3IH-G8l"cgrY)LVJ66nol`os1HI_D0</sqU]XmI^KCDaHrn+O1i&kL]?c@5C6MsqR^r)?Mi3Lr8l`f%RYZVq8I8kkGPMu
%\pO#Uhr%`:]Tke^>/pToDgl@!\pj/+Ul"QSZ*$pmjkmb6$XUP:_k2GPGPZ7Lb?o\rSc%MT^O>_02h1Gq[r4J1lt9,.HLoH90)t=X
%o65-0b#eQ,o#lO^TCV$g00eJR]_q`_B@!C`q&SYR4F?nKTDq0/da,BU0)Dbl/UtomIuF>Ubk3_]79uu!<;Q7[^V9L>br:E46h9U:
%=-rsdm-Q_Re+g,\IeNWkgC+$)gA]ins!n'>9O?CeIE=[Q=W'6Wa@kM]4QkuFhfHZnT0DO@ceeVY.+f?>^\Tilf:Q+TYJQ?7ni+=5
%p!7QjIeiB3B^dF,^OP=n]mK;Coe0\<A%qp0gOHd3rL5`QY8<l[fKZL!r:Z[fo,m*AEUs!E+TM3Y\+.(C?[r%FGAj+%o.Mbh^T[V1
%r-R5_"4r"O.!j1Jrk:Ics!_jZpko)Bp[LQAoW+=Qr&ug:^\=8Ur7eQ%ci6G`b<Naip@dU++..u]]YAmj>#sD$Dn^Som`#$/DdIho
%lg423IsL_s`&RAIE9:oEI45QBE<5joMpFW2QeU-4"lc`C55XWAX=lfQr9PM3^OGlK2#m#<,Sj1<QJO9]'i(4olLW@$l1<7#O3^%;
%P+O![[O9i/YWnE5?B2Yr<fSR)^<_5oI;a.*3QdrT89/P<6&qj`gs8&BDW_Znp,PA;C^rK%Ci\$.jN'.!Z-@,JN2P]BNk99mT#e1s
%e:Bi4Zr,p5,Kl4h2R`V3TD&/2p\AHO`@!83j]2k:#\gZh;<92PQ'<BO\BhY[/k^EXLseh\UZRk8:-%JhDs8G$Vl/cSNa(bbPKuJ2
%A#5;klD_p';G&rd.;]UM;`X9SqsAReX-&#TfX`%sNk,rcf^'B'pnSl/&'p_;QKP<Fag2J&k.Nm>kJ*404=q(dP?VY`6ERA5l2$V\
%r1r3#]6[hVed&`WC:TU1>ALp3-?$=UBt*K4h7'<L5oq:C(JCsF_,BR)n,5hmm<A-HT(WD7K1Xp1Oa#O?m1+Ef]=dZ<H2%(('cs/4
%akuHKr<`JYb&R1:?B1q(4PWQlDrk!TB"[hAH*gedrGB<77W.=?b7MK9piCY+0?7!O*q&*sIJt*jnm/tncJD-Jmb43oet(T"L5HDB
%41WVlm2c2]bOJPlLO4="p[Wn'o=_f0H[,qlm9[AUiGq0YV"21knn2=d^?+#'DWLK4bB(l'7c)c3o2*Z>3juKG9Gaa*^(2iJ<VGMr
%Em=!\\482`VCEs(H'<DKg2h"](2=o=QsFgHbo_$FmW<fjB"lUXO.Yh4"1,[IcZU1ai\d5qj86jVLIU>O,P$.SmMqMDj3gH[HcN"E
%:7j31?o#-e9elQANues0-_4!pr(iA_e'O.l;c4*>1"l(er&Hmlh0/Z<j8**%poTMK?,li)3RD:p'U]h1'Z>XJQ?sLt[k`_^;1mn#
%J'sq<-\]-3p$/+6e'C67NN1]325t?<>LfCD4f`9lf:(3W5%C:6+64Lbn1pIQ<K87.<1t_O#H4j33Ul3<%SSWO:eY`)H)PUpp8NG"
%Vt/M)s6Q_4ihnOCSn9uN9gSm;5KJE!nHVu-di8\rMhF2JkGEXTpWq.=jKlm#X(0_D0[liPnE8Xi4$WQ[SXipGm)I_+ZXm8TGj3Id
%H*=_o+1]r#IIm%@]^TECk[TCMr#mTa[_7/#Md.<r*Tf%GB]_]"Z7\9PL&2uC=-7WAaLZOFWqWL:J0M%$Q^.&@<lV$m3ssT5aZ9Bc
%ZQ1iM<#JUia(:!HG%5+pRFAX>I!$cG((\^Jo?-(Yb$e;dRNc6B-D-6&;'.QNLQ#k#,%P6Aap>bK@4).YQIA5pU<"m!4M&`DS@H`n
%Gs^g!$O$_QL?jK9RYUhB9/3O`/G"QcjjA<p*],F>9KVr-r6MJdZKbl+e)T;FVl/Rk&$CTO8FJcRLu_&rH1+TpE4#3[/Y49eUQ4m'
%6X'E7^Wf"2O;:([m/:E(C%7tDqtT2I/UloB^KMO%EVZ\@FB,BsMdG)T,-IVBDT+kf&D`L<]/6dtGF=82Z=#eNXm;;@/>?!POPcOn
%JOKTTie_CfYp0m?&6]XoX9[Ghe2OOMc;oSm!+@mXX]i2LQY$%.b9AeUFAW?=,gB1*R6D6(V1TCal/"92FjihYU`)jJeC%7A;gqD%
%oT-@mWlAE7>o`T^4H8C;&*gMR1u%8fGIEP&StgbmBTEX<7qo5Xn/*6qb]QI7o+*tWmm$#sI+%&M>Q!\Ldc)YRoDaje^IP'SMFMk`
%IA3%MPQ?5G[RpmBjU(=>#I.>conduEZ<G.\&MGH0"%Ve_Sr*<cb9P\954[Aor]Z>$3lQMYpQg;"X12IRN-qRIH#h=a1pnFiQDIr]
%@EM0bW1FSq6XO8TARp*6NjG=f593NA*Rlu^8"I$4LU9kV^i?3%A5%B@7f";,'Sj'j4ob@K*8dsmri"jQ/cL+)Gg\"4nB^j;kb/(f
%->7@ldc9WBAniJPTh\N:BhPa8;n#cUDS&RdpgWupiA.0j6enFaN)[CEPg)#MWp(@[1!<-N1QB@I:)_&Z*l<B+#d/sb_@VL:];NA9
%BS[_aTFufC!#HYZ/e)MloGk6nT]`a.,Y.7qPgL<2[77>/#Lq$>&(+d^]2Vk2Q=9rj;=ooa+mKup.'>:PcMKPC"_O?.G[L41D98/q
%ca>m9UZZakL<feA[<6ik,F1%_gqW#sqYgRobjRR1_nF58IFO<<UrABUO-.qQ3i'`U55.9?M\/='Gdr75Q,R])["n46Sj#9MQVYB>
%A8!_%e,@2_]aPK@])$igchH2M_qk:IXUOeMmF8agQP^Z0A8nGbh&-qq9Fqe%_ugS\e6&A5!g-^W]Sa]/4T]kes&nti/..I<BuX[r
%[R>0_7Iqdr-/hOI+u=\jbjV8,6u@`,aJ'8)":2sf\o2'NE9]QJl&1B^7"aDnV+/S$=]4"IA&M/1#l]im#u'1rjpi"\BU2i$,5kF$
%)9!deq?4'*KHLjpA-eg4AP?9p"hWl5-DSn>qMmLG('f+)r5gpc3PhCD?%t0l_ieIHlJY[b_^qs*gn^BYd'W]J1]Fl(d1/Z0*9D9I
%s%2O<(@g;LnW=kVE'4*Uj'GcIqi<r/53@qB5O,llKX9NV8;eR<mXLfD+!1EW;?!@grhNEjUes<UMgs/'J'o`pdO9Un.%dY2djUf\
%h[][Qr;V6D5;M[lEh-nlbbaa&i%Ieo+XCR)`kNdSh-C!A4d^aqdiL:>!-b>]C$B4Ch%mK0')S([h'Df;.J9R9<_oW#s-m@OUlC];
%-#Y^gn)JN7otU;[-Y,OLIP`Bbb9+M5ADdd:!Daj(K,uQBEK61:rQl-9ZMR/4h&gf.9,\[/s7sCQc(chR[mYU:-*Cee1s7bB7F<YB
%0J03_&:sJ47^FN$A5GrEJ[ZC7\rYn9p$j-4-(hsi%JifFnM(t+nTE,amI\BXSG-GFSiHF1cN1=IhYe+ud@GZM#C2hui2:t-(&+!>
%-9\jb$?Hgc<XJ@i#1NEJkF@f>ku2`L-k3"#U4'K(3g##nm#Z%cmTY.d?f%^!5"U).H5^Wf[?39lL6T-'N'(K@>O$r$6k*$+h)Qi8
%5!6n.I^.`%8,(rj^5jA>,0PA;L(pmL?B5Z^&h,>aY<;pS"8gZ"ZZjIKDoo^Lbc.4tGl`#ECRt_mC-/3sf@>>`r:+PRq5K4$4%fVh
%#6/TnlsCUthacIWVK=^PqPfn0:M;e51R_`)_c2*]ms<5U%H5iN*`^,T$>n5,^Oi:=+e[DogGp53Qk'DZncd+n?>C.@FF"/+B;>&s
%OifN2p#NKYN&YmL>:nNr%6je/5jo9\-hp_aVPYY\*DZ'2HK_-#>1\2VHg__hIGXG/P.O62rY(;E]pktJ_u1?uhsRKUI_Rf^`[j.`
%"p!IJH.V%*b56je\BAqn\c5,YlV?WI81RK4CN'N:\:JT#G8Y6l7\(BNiqV?QBA6u[2AqcO>Wd#qUg$be/4N,pd$(<K#VSdQ(a329
%R5!AIATlCafldGJIfNM&KBWVlp&D#[I@+g"71LTQGHcUK!^,TE+Ur\IJHSim-oUk]'k$S<M*(h\O0HS'$AMS4-hu76!/nGmg\RSG
%^"0W9d'a<_H@V6o+&psh^Z,H'$D7dC+:AN3!b/U0nO$LY>-BRjR=:&=OCLR7(,Y&+!;6EaqC@?u+4A:9a7Fs>e&`\65MDkI"K>l+
%Z:kli-AV&W'J<&^,Q7M(.Gr8N09Wn;i>/;)G:$[Z<(/Q!SrNiE(&hY2-NZLNp3HZFZ<sdY%-cO\,]q3pc=H^I0kca_VI=`3T&H%a
%%)*.)==QZdM'8"Z$sMHcl03ZXe"$p30(U78^.[3UqlXjASWLp_.1P.GW3'%=Hi??!DkAs7eUB'Pq.+>GNDJ@u0;9A`V_hg&bM/4>
%.t9!^W4cG4)3EbI(Uhrec(7io53"#+e'.8&*<k]l##"P8NN@Aop)Z/4W#E5s8qm4XBe)80a4@0^Go&,V^?7/19;k$?CHp`$]VipC
%#7BsYrgOX]*kViD*'FWF?2"5/ms2[,GuK&CQX&k$-M-Ga;nnHWgtCZ0'E-6ArYtk6Sc3U-Lk#?9rr,.Dn,H=^s!Ia'jVO85qB+JR
%X3Z(AYAo0OaW%t,K(RIh/q83\qfD`'Z&/2^cOHPWjibDdo(Lo<bNGODGkUk*Q_/%-lS!26]_NIV*VL,[eC*&(DkB2m?h-BPAb"lc
%8Q5,niJRXUs"F6I(Z/pWpY+k=>0TeWk7q?PgQLbX%+csbBklnXO<6"glK!p9<No7:/sh'8VJVm]A4c#t'8,r*6kaBWTtVr>B9n9)
%D85>@[U$gR^-QOO8H2W%LduhkVYI3oh'CC4Qfl"t[Mr)_jjLHY+C$hJ:!J)ml@'thWf*P-Ua#!RE[/.OqfVe\2G1[tq:EIF#B,sl
%:!;Muk:)%4a7\I^FEt187_M)f@I?s$EjmZFOer"SZ9As*V9O<8dZ(P4]1f#pMXj2"q\6`,qm_cB5@(:2%MLDf+s4:*#]c?i\^&@:
%HE$iIYhMg:Q]lTsFJKl?&t["d-r'?;?^5NIlV-j0\MqnpUM4*::42Lh29l)_RXEfFrORHaVii[B#Q>GK<Q3Fs8:.[DGrMkH\):MX
%Pp`_u:>sHGO`"&iG[k=ACi/f;PufDmRL%tGHI"?d&-Q]jS\09uC0o>mcID5N>T46caREsB>mHr??[h`&="kfEi?ZV-"g(`YTe:@a
%][9uaI^e$KqCMX%9"L-,1?Q0\?W"I=Y+M2je#Rj]=ib,FPqOX;Y05)ZM=inII4=p6kZH[g?Y)uQ]j)nuSHrc/QF9@H?%uQ%CNO.3
%$#'g:o27L2dOkW0<r(\N"`o3H=U(e*jS%]r_*mt=Rujm'X+GFKj*#I4.@2u=<CI*58,((c!;/DKd_3_*J9>XLN(,gWp4g\q22q+l
%3QLH7X)n2F^](m6FdomooB+Rp.cUr"3t@f%jg?kbd#lNgZ,LW#8b-u8I(2.-k#+@L_4Q1O)![4)0]"ldYnglgM%uT5I9a"2/=pIE
%k.QS*Y.D#%?IHIuXX!;?L^K7&p$+*13l&[EOC;BE"QFD3&]eeT19=bhhbM1\R.uHcWnr"Yj8urc?0BX`P;>$e1mDmXN.StG9OQKJ
%A&W0]i6fnOs&RbOiZI[is5=Jj6iQ4P=Yd^:na,(iY<YEb9?6p*r5CHp_=-6.oD:2ur0E8%YrS=URiPI%s7kJ9Yjf_)BmkV>,a3?<
%YXN*X%aghLEC<N\gl<nFGY57Iq2/+KfL@Wd#3JdjZ+Qkdp1,S-D'P7KP`+b95",i,dCq^F3@;$!oo17p3-j*VX4PHMeV9MN++i=o
%d-FpdQEje`Z*5%,Ui$gl8;Z<9,^O0YN]Wd["'SLUVES3T`1W^f8sbD>iWP'D:[#^po'"mldKD?!jL'N$.EhT'V=Wt'(!?b1/W%?G
%ipO<K93@D=qq+^1LFc67YB01_Ml<gm,Qr:oou8Eq)`LLHbM1]l(<=\._lR0?'PI4t7lsdX]:KX:K<Q';`c,t:kUem`T/K5S[aEeO
%;,qA*C@N,1+%2mi&BqH2<YRC"$50j\l4e;$1Z'X>X/N)$,-W\W)ab#Ar$KUM/4FgC/\*pu7#PP@jJi9XQ:0&#nJ_*N$h9Gb;Ps;^
%A?"Ht]b'eQY/=^GjF-Bh5\,kaE"s'/ij+KI,[R>R6s%J!`.G>afiKhhN])"0RF6j!UI\EE]N?lk+cu;n]MMHW>H*(B88FO'b9DeY
%&+A,h8\qDgl]1;6hTFki#a8ka>KFM4-?j]WQD3DA^88`LEj/shAPn11_tN!6j(/a((#pRE$q*f0)KC>ab:[k8Hu4-<QY:$i-.fm!
%joW.i+).;-cQ)=WFmXMEV9>'@5(W8tYX$00+#JrC%5)@Y0.(%0L?_L%>T>)F1c3GW!LsNkLGcJ8enO\14"R+>`s$WJ]?[85#1;q`
%C.R^Z-:;4tcNJE^4]S$6NudUmp$V;^c#;'tp^-)%P(D(OVRD(>X=k1r#JPVQY9]uK&tL]!0V:%U="dKS[*Xn;.W]pVA?jN*K5QGF
%f&Yl7a;4sT-=`4\Pj"T1Q8F_RlT#+E6Jsl>B(E9=.T*sIiX:AF_uVnO"""cSVrKiafV_^GeZKR<C(;d:U7,R48FSu9&X/iEM!`YD
%Y5/<1(b\IH!F=a6&;t63KGdji*T%-;(U7%\+NZYeH7C1d.9I:^kkfLs4Q^=bEe1#RFHD=QZ)?`N\sTLoaFJpK`\(XC2u-E.42cqf
%(D=HI5HrAL_D*W8C57?c+8Md5/5%`X2d&o:lU##ifhCGqRdqf_.e?&Lo0a&2'r1B=J]TMhDrAKL5HM12#&/];KFjT>M,<V3k)k%G
%;;l<4E^"$65tB6Qq0\?4[I9buPg:^u>uib,A`<^VRm+X\@"#\h_\_9f9t8_mX([>uAkJCN[+eCd604\+T;*fV8RedNM,1HQbjlBm
%3j]V'];JpP@X/ujUs#G`0k\*lUVff#@[G*``JMunB^E=.lXcl_YGlJkD_7I/O7,1M#.KN0bn`A^06WPaYd]fabe0A(dtAQZD77W]
%0ps-js0V3/'"bO+A5W$?'4jJ4:ogY%OIYbXicr+L/@ofVf>DrsH,FhODK;.ck>u;q]OeU^$,-LJGK&Tu.?VR)-lA7&#VB%2J`F+$
%oa=8W+gCi,pVEcU,3&hH:si+J?H)k:@'e]3.o,[@pP,jJpB-`<Ns]jB$f)Ao3X2sarPYCcGSZg-<^r.#<iTWBM$nM;BYgth")O$K
%QF\.nRQR5H1KVS#4U8@@g0P@8Y^dL2.IZF3Xi*bek`A_2Ms;!;d6h*cr>X[M,GYK/Q3TH>Zr4'2!2i>oTRKP"GMj&bC.<UH;acP$
%(%Ed^BOOckHJ]s?jX2&-=jX+T@\pHp(./l]SeU^rP[uVo]q==fOH(b?K#b47G49_lVB&QjkBIbA1LFAiZt*blob-dGbVZgWVf7qq
%aG-nXd4A-&ZZ@F#0M?j1E(6I/=\ofD>JVk)UQf(JQ6j,5+7']a&lX5"8e[=<KLr)S":o%bqN:;EV`7^To4%s0n.)oVAu#[;jSh*Z
%.%LHC8T)e0k(0TZUK;9.)'5@4@h.Ks+=k8a*dbi1YgdPh3p(F`,W7UeodPoT7?*V<a0F^NZ@pD[ni53qWV1S)PCY_lWol?B83I02
%_(d[3/4>aYdm^/g(=onKk;jt6Cl2>e2r]EfE+qlq"r6NMPfdofMIja?Xg>YfhTg8qcK\Z9W-XJ8/ZFGsTJqcG)'5OcK2k$%0e6%n
%/Eg=](_3H\HK3P9$]^pW-++$.C<0j`l[HlN<]jBPjc:GL>kROb;j".'&O[06O=/9!XV.,dW=flf<:<pu,/k]5^5OYBr1j@%BWBWG
%Qjjk.b+55<p'h<0H1>T]*2++*Q=>E/'1A*So"oD\#V!/UDW_=\\`kr9"]HI)oak53!62_WD=fXfr.h6D3A'RUJpkZ[,5bhH9TuU=
%3G%FgQ)#H+%2m*>F(\$\5F=?b`m4Yp+",&Y`2q2C..NZ#3!_5sNOWH:&1bmi?qW&n;uDKPd:FX_1A'nZppaE6I7`cG,"D^hFIee]
%`],fO^\s0)8DhsqfYk/1XCgCLnIrq@>[eNGK>i\J:Ysa!?N,U9;C!Am0$AiRYHiUrH`5mdm>(:*#&(gDIP>_Fl]Juh`1O-u@RK-I
%cho*",&&[Vjos<XnJ+1VjLIJnM1t]Nj<'[(=e*s`rkT$UCFWqXVZ5R:bM&OhrXZT$%i5O;XBgUKRV)W*`l[dra8q0P+[\L7esL-,
%1!$kcDeV3q\9MISNg0e_ALP%NPk9#.W2]22`(Z/.6nXQb(^tp^1(Z0p)*&\[#1@C+2':7taM:f$d?+r51g'Z%=[%qM4.Mb\#JtMH
%FXnOHJebK.c%_JqPU0-&jXJ$!2-2uq8d[>Jd8D5'R2&-a2=KR>5remk`c1[j+C=)/6Rd=nOP\EGIX5a**.6-u@`CfR:ira?9>5:h
%E\K;'1XjJVo#_/nV[!gd?,Ob4K4o05Bd3,#Llg'BM%$)ZJ7@G^*%=d=3Q&t'B8R[;L:U(&r`PBq5mRtLF-[B2-^pur-A9ECjeZ<*
%:X]h%$?6ENfrHXnP[thb"]*De>/EHl&hbNnFQ)1HAciQ<fl+L_0kCWu+;X@YEea(C)-r:"L#ea]4Id6!+,sS#ni_gsq:>*>WEj'F
%&`hmnN#Z+uZ4;r&;L'lSV[h<mQ4lBf'GA%>3I-E6h-aWo[c#o9I(6!ZcIp*X>!.2>FPY.?,Z^6[4j2Rp6mI,1A)3reLjp5E'2.b*
%3B=UUE02%3VF36c-/l[TM_\h@Hjs6P7H[a*GHc2u_ZOp8D9O<gJ/(dBXqQp:UcSQne$+9[;eW-r0up,-qPCK4nZHos<Y-HAL_`It
%UTQfSV[>OC7-<3H=L\n$Ul,l>6=:dQi&tKe(*l'tKj8)9c;^]cSLBA0_KT7%/]i046VAsNTeX"pX.h(aWe\3tjLKb>52A9G3tQ6l
%lKJi36_>VmNU.:5`&U>IGd;d9:JrF@YZ8WL4\M?aGX=[T.S\0T2)"V*2"ZY8]9&8#*+U4q50,ibSQkdWBpn7JS28^]7*e,2cAHY,
%P]7OO98q3NNk&l*H!@W$Fad%,:02(qdXZVW\e8NCc@%"?@u^.4EX9r^lZJf^UK:Ym@Q-FtY.5<(6kG?oaC[Q\DsDpqmeUm/F<K;K
%mcdN5^4o)j[5"jIcOd_O)6la,4>BMH_Dun5:bUfajR>:jT8Ch'LZaNH#(pe@f/&#7mWq>Rd!\MS`<V!f-eB%2jE>K=&Y"E)FN;j[
%TDVG#L>.Qh3C7$19JS\4O=3/8SHtdGMPl@Gj7Tt7q=oZX-Z[`p3-+^RQe5S4`dntVFCu59@7("\FY_5Fs(7gh>[Ks1+ZXh!#I1gt
%X"efIf3M1dkBad`@e;2i]C,!?PMn_U1gc^qD@ctA^A?BF(`J7!a6H7@Xr[m]gBOu3,S?Y]SFphFbQ-]9=(<DY]7scLnW#;W_H=0"
%=g^ZBott'@'%),#Y/Z=GKkThaY<QH54C\HeXR>&%)6@.p3$\=Q<&)b^aG%J'bk-NiV`WH-(pI3M8(e!H,,9ip1W9*1;V`hb9'31G
%)dG10@5IJlEdNNF"1"&O1W:!0@3:(\d\*EmM<bmD=.V@u=$6\qJABj%IP^5n`Y69bb.Mi_LeW^!@F,m1=PfF+F+b,4mNM9j68"Tr
%\Od+Ukh'NYQQabE[mulMn=eh`b$$Qf]e;>WSm]`5PNE3C(>E3_$V2UprsNDd'5!?9p?VuaWO\_)Nla-n!o$ROJ=o;jCh#pcItIcQ
%0If3-/.Xr@Y3A!ejUoVX4*7((:8NVfNSH^T47I>j5:](+8NXr!jPpjBfQGDo.3Me<(Y)A'qRsfgV8+e=&1s%=1Jf;j0=^a&YVB&j
%EHF/n,FWUgaour]]?mCnnA)*$XD@.5@m2HPLF8#Oip!5?lYc]TL1G0%2\9XV%YeMMJI`ln^*Z9(9V7^I?50c9/UIg/j(if@HP*oa
%l\am?nq*?<#cG&Y^.\cQ%MgRi[P0%jFN5M*li^Q4RYI1OmVX"\aI./.XqSkD5fm;M_%E[aNr<KUN[lh@V7L%i6Ik9/M+j^V6S@mW
%DPp[0:E$fQ%T=^*_D(/pdN/Uq6(h)I\,5d>?hC4:Z`^kbFN-:s2->]H"Mm]H;M9+uZ2NmN5qhbRi<X*uGPa54OQ`UqOB^Qu:fZMX
%*:4\t!_DJtZpbO#ePDnQ)EP<?I$3I<\5JU882grqDHY.[i-jn+OuB]sR1[X*AZ2\N=fN8)B0ZJF6IfP`+nhdrEdHMU+@s)A$j4Kl
%cSelI&,XE$#/_+a4`lNX]2r'C=ah^8/n2k#GkSp3b-Q'_W9g?RCi[T)+&K')6s7^eYpoQUNc@B%2Uk[%bFodVU(Fn?pG7Y3(_7B0
%`kt;Vf=a:W"_ITes+ZZ^V<l`tGh3KVi&Am8+[FF1L1S[<cO5R12Njet%O]E[c0a"_8F3L!WJQC6^oK2cG7eLoGBJaJlArDLN%RM.
%f6ofp#PgK/_n%De,dE`?c=/?_Lm)l1C01Z^'Tp9fM;ee,BRl*;Klrt<K8@.C[R/t4[7`jq;i.IUD[_.-=>>8#qe_e>+3i,8SaqLV
%F`Y4t`-`rB4n((NnI4qR>[]WC/l@Qd%56*a7oVBF27UTs&`P,Cf"7<r[G:Xoll`RFg8,t<0EpY$ckt1DV&f#>P3;h[p3:RdFMSlB
%gt0Gj-qHpB7;Ib[j/K^',Gk\b*ZB(b\Ihk3lOG=VZ2XT_4Ep+f[GHrl'$`3BNJ5=>)TIGe/MOIK'<TCqY.1G;/8=&RkGPG"GtX2Z
%qND'j!nE:LUr\^K#.nA.P@n_?m>bbX2^G[KmZ+59R?8&"^cPd)VPF:`%W$G1N-H<&4c@]Q1f/Q/@btOd_NkPQ45QB;?6/ZuF%_Do
%P(DI-DQ1<%e2qLk<rG&F*D3g-f<BJkO+==I]d"5XTsu/YUA$3?"qSa]kg5lon*l'h3^F*0kGf#:D;`f/niYbn<eeMK#&QT3jV#=B
%3)h5r2ZT,F[cCb?cjKE7\g6X_<m1$Gka"/Mh9QVDrgs;uch(HP]^$1\lGOk/(h,7dp4Z0NM+'f@_1"Ak5jk\P&D/T%aq2b5hm[Vd
%Zo'BS]l#lk@I&0J3%l=;g:H_86/*Q->[\Vn=;EjI!@/g(]1XbFW?iZZkQ54Pa`<slb.0lKdmOmFmHJS!6*u"\g2_c%1K5-d#jDB6
%[T^Q#Wr)=P/hqFoT.NfskE!V(Fn@&?I0A%<'8m.f;e5rg3<h"I1]Xk['e2DJ%=kd,W&"&*!2^j3*MPRp2UXd0?KD221"/\Z"4haX
%r.i7/!I:$ul/XmnR+`<6Fjp]DmSps@M?KS_Q[p2X!_E!b/)oK:HjEoL9@=EdLeC)dG0lQ<>ZCh*/J2Y-<<=<ubK6aeeqjn9cbf_r
%9B$PC0Y0rJDMXGK,([r`<9^GS!+;S9T%Al'O;cN^S/2JSj&(PBcfsZ1.64mm?6fN@!0JC$,XCgp+DBbG!bd%n0i97tkQF76<[E:b
%OA_OJ9E8i;=C^-lZ8r#2pO++J"L+?b+Wc^$a,t$?d,SmgPb#Iu&rTBfMN'm]Zfh4Z<58Yl?AS#VVca&9Tr!k'/a^[l-hjOP/V(_/
%Yrj0TG,[^\3\d3j)S>G$_.dl\4E,*o72;eSqa2>,!145>i>a-1=<Y#hLl`3R&<4M87hf@eeKf=;Jbos*=olF4Z&kLE)WH"SBIp`6
%h:KPkE$RT$d\maE?XclM^q'Xs?Yj-:loGr-59ur/#kD=MH6'e9Ce<urc[?(f3*E=p27?Z^em2!Z3ZoIs:5gfM@upK_"%Ml0.2t66
%ik0.O&91Q,&<OE#*&p=FU3%M#ED\e/OLRj6SKVuM4V3^b-m&^g>gs:S0l^&U&>6P3+:(f6QOoZAED](7R(0(=#Y\K6!7.#l0,"U^
%>SIeR,VDhP+lX\s(nHItJj@6papF)a\>Ub\7,07?E(!r1'V#_S;,Imd33O_96sPrjS,dP+;rDm[0.I5eS<jt\d;WDn&9'T^/-n)&
%QPQ+-E*c`[=?%rd#Ul3E(S$V,;-jf1\>V%d-sRH'S=jgu?k?/EW%_?<GHW_\6fG]!+HUP>AIqDB-o3h-iM+U?ODn'1&4j=OZh$<d
%>JoKnO`1Q1_:JbB*rn7'!&t)>U/56gkHtGnXX,t/dgfhSYXN&QEq>cld;\VpL\%5BhU\HnT%=4!o?V*[K@hko%eFn/>8.10^i3.,
%YYMO)JjVmK3?lo^@Y:ne[LD9+DKuB&`Il-4n`\BIFWWj/Z`\Btid@I_4MDM=6n=!1BPm#Zm2kM[M)R5I72N0:jDd:Z<*1UJfN(Q0
%VCO?o@[UbpnW[_29SC;hO%.$53^7P*^tX1be&)=a;4dYBobK^0;KW*N."YN%ihXObM"ujDeF^Xq7K"",%a'r&YfAl43"]q=0?;(!
%@X!7gO[9]tXU%*IemJ`ij'>AgQcA()M:%#jm(0C@\,%=s<hq7TU$bPm]3DU7N,T\L7=`.nEXpkf?&5p,i6We4aZ5>QSB)&Vedm`l
%M;?^H^5I3(;#R[<'?Smpp%H#/`9uoO[ncQJXN%F?HI,]8RVdW[$BsZ'Po+Gm:j.2$7dcFICpB9`m7UoZ!Q8X5j,!o#Vdj3[Z+J$8
%(ZO*S>4ffGZ^Z_sl>O;Y+3dSBoZ<Q4mcC@8S(D1gF@`H`dtjH=FX77OMdb<JAMo9h;)447X*['%ecb='F<^Jm*E8bmKuEBt0r>N2
%`Ed=(1qOjuWIdqOp2#33Ti]spFZ5@7oZ)1Wf?-io6@sll..l&T(r3_W2<BNp;Ye<WgU^^*`4Nr-5[3sB]]h-.BPU3+VNIu=nNc"V
%>uk/8oB(5/Vb*Jlo5"pR-Un?8Xm;SXA:kSY(ib>LK`Hb*VnPi,FZi)!9)P3.JMT(3s.UjKhpsHc'8P6+E=sa%juBa-!kVNYr[O2t
%?(&:uG(u<\YIfd(I=+/@8`QMHSa2jfF2(k+lQ%9:On&p[]X"YTZBcQ`NmV&f"&/19"f?HeFc>?;?n%s6'&$.fm!a,K9/0,5X.gb2
%-lD>k58-Gj=<B%go*>#EY5@rl9h;G.S,"XAIN>L#'uMrr<a_/SUOp[qA[O_1M9rn.6GrK5-uYW3Q`qRdEe3%&oUAI.@b_JG9rm8\
%\"!]+PJa`GM=LMkfQB\KOm-la6?CTu3":%!ARD"IM!,t@%<o"Q?,8`^cne$K3<Wrp,/[L:iNu<XH&%\jijZ9F6_)i#bA)s_U,!8R
%FGX;gcaHT-DFJ'e*W;rgAE_N\Ucp5h/k_WBR=X][@+\':!`enK8E'\l#n-H-)TVG'mF$H".jT;an0UkgA.>1MX"b1<VKo\N$1,fZ
%\2_g,5FT1Kk"dcu)<fc;2i7>aAcT)'XGkST#9$JCf+[k"_&?O$EmU2lqSpcdlLDg;Jk`;NOP!k!;A3\C(990PLj*/9GBHK)$[o[1
%@WWb3]C+u4>D.Q1.[oiWq"Ij&l#^ZrDF$o28Q?3JK0"KRbS[>)[MUBLE<[bg6Xq:ERmt%\`U`<8O1-#@#tq/H?![$VT3!+QSS1/g
%D-_:+]tlq;6LMl.^4!lrk&b@I'=8\i2Zg*$fe)%:7[a_;%0.<ul4^=IU/khX<&Z"_)];0Te33;@(j8&O\n,'$dMNA?%G";4N!%J`
%6&S$bpCYd.8=*TuSf>LL-C#UsNU-quG:,4+!oTR.[p[oii\J]oE]5-4l#7];gi>W]BQ,5@2]j>rg`<m0`(>tKmK'[ufb]Tom+@Au
%//1#pD(*(2L`<$u6]Dt>4"8N3/J'iq5_rO66/2GAjir&'Qtq@08))fRglK2IUR:44%%MRP,D(86/Z9/rbqTa=Ct-q#8,2J&oE9bA
%/fjM=e*'Q[ck7=le4XP<ld_)jZIf&8kjA%FITekD2>!hs5EGmAE<m;!7X"hO:=/A>4*5fSMiR^Yj>M$"r-\]c,Jst-jLB&(n?Qr?
%"kt@G&67a&"b<*P*>q@a[p<nf=DZ1`]Z:as>Gh>DdO:FtO96P3fI5po`bLj8BNkK(m0]8p/P%eHdK!N4,!3]u\]/-sHXBnACes$j
%C[bc#<Om!ERpu8##Whril2kBqCZP]82?X6gc/*AHYCVPGq`R<M0iCNt(\/J'i-02!2+ARdM,1qQ0hiZ*mM[a7OX,]fPG5Rp/(CsT
%T9dQ/CnPPHY'HIGY3.LT$$)TX56/18+kLLK3op/-E.+N&TXu[;f*QH1UkY$ZRFD7B4ZlD]6<dq&e*;k?:f"=ge]ndIU!HAH&F%`,
%Tr?TANbIa'.MJu*[WW_bDY5*&^=M!Qd!A8()Jr@E!)KAg@9d<D`Q2V%c%9'@qV7.VK]!9CG,[j']qI\cg[3;EC3q9DY(sGt*qaAm
%]<E@R!-*I1Oua9q;_TB=l"K<ZN@a[SW^^eWc,3[dpgAD:4"`MOS!VWDd,'c`V;l/X3-@?HT+jHY7]sA3H4B^&Ou8i(e4XQ7B=uT5
%KM;R@duJrm2'A>&@`E+^ZT>.\&00ZQ95:]oeW:rLfDU^8lLe8.>!0;RFPX^^Fi9u8Va#a1?0Gs7R4l_#l%!FMa2kH1!`"[5e'cl.
%9h_7_*AH+h3'ipue=b+7OFa+cG"9Vq4HuK!4n2"EHM4$8+#<b^>iI,%jUsW`&r"&VG*sR$AK@CQegj-7;XCBD-(SH0-9&TF'S7",
%0r0h\N.r<!)>?5/.G&XOGWiYtosg38Zqp;BZ$scH4T/MD#($.B.r4D@O4buGP2ETIO9k)$YiHG9U1ICfFRDBtb,`W?'m$eT5H!n#
%%(#keDB%ZGoG]=md-89UlVE>s!WVlG`quUq-N7:0%UtZ&PgW$Yc&+[5?n+t.kmB34B2oh$4Ya/t/c5bQ@1<Qb85U<,l>]c.5Tktq
%L&bG[;8Ac$&<Iu9Y]DWl[7V:o))a]B^:48Q_Pmc%rD&^.Uc#`XDrekeb=dBg2o*djpm%om@c&tO^cg&gbT2L`0h&>6[`8Jc3^f(O
%0*8t#@\K#gom,4[Bl3A*d!C9Z,S3TPZ]&/n-*Q/S?%(*O1tHLJ/>41cM/sh-i*;MYp.^j-]bM/)m!Jn#7"X$AA?A:MGEN8FPUh%:
%NoJcV?<HKqP/a]R5g2nQ'VeEY9,h%M.:3Sg$oddjAi3UV4dK9`Im*:iO-I/<=4<%@oE,L9[,>ZAiEt[]LF%WE"d1*_,-!.f.8EN?
%O]sZ]3\/aJR-ULMhS+1a@V.JJ10ohr%UIqu=Jl68Q'D<(r32<hcu,Z(5$1VSP-CUaNfOgR$pl"E?!?Jf-0te@/KWY<OGhY,\%D'5
%Al2&7:-BB[?IW:onsS-HF7\tL5jZLWOgq;WTOk>86.UglN-l%uTYlWC\eS]u<l5D`%0$%c!H`8prPE,@X[\fq?Y>"0WlWK&&hNP)
%Uu6*%*m<iA7Rl$-,Y`c/C/16\Pk93&!7T)&-T7PSdo=LU]GX/*c91d;[1`?C9Z0%1,q4:uNWPrlYp#]6-:hr^5444ZfC#1tU'-],
%,e7!*\:RU\jQ%fTi=IHTfE86fNrl^`BDIQI%Y8Jd<dOoH41")=1<,u=q=<LUP0"Y*>1V8eg*-AfX74%Ekk_n\DAT;$:1.HMGb7N^
%mIG@G[5rI&@l?[Lg?tSpF9?b\\/SBa.tYR,3Q]r_[44uVrV/Q*h$Q*LiXgZkr!<W^<,DQ!Mua!3Sdr/!HteZP"i^sbQL,7MQ^YX#
%,-lh7JgE">R_!=S&G257*c$Rn8*,Ji;]U2M>g\-8ph:[qoVlK>X.G(<Whc0(9D/bsV'n)<S'F#"$GI(g"T)0,1oO"DmdX%1/#7s-
%fO\NcmYAt4!#m@*IdZ*DlNesNn3ul(4+&bNZUWCXs$2#)fN!]2pQFBO$lu%#/aS<u6"RhR(kP!b5Hs]_O?l3jak$Qp,9r^1BHl@q
%asTMC&0*@X7V-'T*gF9V;8u1==qMj`!8<F\7^,l9U,"X)=-O#In]bfMXY[.<1JkLPJG5#('UTmPQ_^$5/:uf;U<3M:+*U/,E[`e8
%Fe:e1E!B0ZpW=?E0Jqr^!HnKNg4"uP3q>"L7F>SMiA.Jp\k:&J'u@VfRN#HgjhG!]LCc%2"ml1cP@c.4CC7a'/%'++I-2rNB4=<d
%2+KK3!0#`YqE%g<G.\Gc>hW@ED"&\sIi5l"NAF"'AX-+"p0G?2&h,2!MgjDiZuN0n`+MJ<,K\lJU@t<r/Bis!g6dCgUB!q">%b"F
%:1^mG!D?MRG2$n3Gt.-sFb-at),g.4FitosTo1q-SWakj_^$Zr!c]]UXWh=V2;4\";HEP+8F)ag!`@9<A,BNkL?XUd(?D5e'l=()
%US@Of.IWre5'+2-i&nRHBC[p36XQn<AO:?o_HN_+\WcuL;X+Vs2H1,3Z_nr('MGI0m5e*j'5Q"&eIho[N;tT\#HAeP`hs08],RF/
%Y+LHn!]V!cZ.XYW&6nQ<l$r7MNKXW`afZ.AW&;dDUggo8p%'gS*=B$!hfK!QQ-G8O%6F@T>=O#'<@O5?f["&@>;W!6Mb[-*!j&$J
%7nSC`00KY^R7P.$KXtJ@GjI$5%VBhRiV1hT(acB['b+A61mUTi+HJ#H/We)Si=i*K93!O04_E+5&LJ\Y[PPL].4Dgr9enYQWOQgR
%7XYuMD),s!KJW6]H9*7C<onK!8u:fVC#+unP*Hn7A]#=9?l*+h&?dRSXBG`?I#`iQV\9`@;UbEc:<NEIEPDuVH#cVjE'CGbe+_\1
%PB@IjTNMkU6NRpQD;"5B`u+#kS+6Cj)<9@^J9C[Ti33OB<+;[c2tQjR>B5HCnhFl#N_6Ge:X:U7=>k$J@Fnq5\b%8,5o@GrK^(1-
%[8Wr:L8=?%dfaD^5WEpuGKN@`72,hiWJM9)eP0>@\;W*Z/5H_K?j`Qb#pS:"3ik;Ne*`Wm90*ft:hWObL'Z4f5l<B!MV!M!\X--6
%!7L=9f?haka0;J3XR8TmUgY'1'Bn7_IWH6_e&7?H=N7;*VXk+%97WchaZYDiOC66Cc5>aOXSfl'Ed`$F.F<tFj5sPjM^kh%WC[03
%R>+>SU]Q]GUQc0V?<jsL@TD<("p3/>nEhJIcC5qQL0t585FJ(n2LSgu!qEqQ*4rN0OVS,3)L>"_VO3ko4B>-UD;)QL)X^crNu:eF
%qYs[<Qe'A]7gpgo.(C!G@3Cr_H7;5L]\5`/:C\d*l*GV8VBD)A!q"'d6c"_j$$H?J3t,Z0VYJ.O%\sMQ>!,H.Wo$p06TWJO,\Xr6
%gBe:2'O7WjVS?t5Rs>_rR@E6aJ0j-^/lB8m;T(KW`fhcM)R")jYpB.dXG3"G:Br)P8uX/_`46l''%F"i$lGBG9,V%C5"an/l"u?c
%\-#6N"Ti9R0Z<.I^>S=8lbMe9`o&cE2p)p*;3V7jreKo+F&6?(Bn.@co]4R4C0F3=Xkjd[7[T%nXXlZSZKX48CtK$:7.-O5Nu>qC
%"%,(g43Te5dik%+4gI++]jMm;e":ru4n.q[5m3BLT_'Yr18;RJ^/p<\nM?nilnEu'ZIN?$<m?]gU_a9sRF^:@7"sXHIddL0e^Xa=
%DUTm@*b!foUo<[>kQgi`.^#PIO[3De<`KXsM'=U2E+'I3Sc!h,f+DLkS1U15P@Lr_<rjGSiq;<:`(D.g0sn.-BUR9C.`r[LQ^0d>
%JjH#"FABMX.U(("0Q(u.$^!IQV/J`SE<_"s=Q#NHE@JtB)5=o-Q$**JIQG1f4>"]1gS*b-q.PMFU-V%r^0sVJ!dom!c<4DLbG2=U
%O;/Pk(CZ^ZPuo(hLAF_VbH?I\LOb<ZA,p@@=WiXc<dgn-RFR(OeQ$6.aJ+VH%iue7?(F%^_qBNpHc/(hj!;,KZ5Uj=Ta=?iNOl2,
%<I$35)KpW]2S#LLc=h0.GTX5ii-Bo?Lm<POcD]i%L=KE&7RH[cD,1o?`A/BI'5!7/f2qX/;,Ya-'O[6Er<FRP'#12POJZ`um2PUY
%`"+$Z/Lclqa8:IaPt_o9"3:I5.ecG`A;bjW/$a,25@7$3I_Ee'-J=ZcU;f%K4ne0B(:O*+gR6L3]&Wn]4,/Ic\N4D*b>cY+.m<ir
%aqU:Fe1u%KmcD%IMTBF7H;eJoo%^PjXK@#i0%tqTPO@"`[]Cu$@utj_5"Dmo)`N)Y'XIt1+_jX7bdM3Y_bG2M)H^a&SB!=i4thfg
%:bGq?JfAF-g8+e(mq/$tV$JOaTh"<[(1ol.A_TEr\&C"(CdPD>[je4ck$Am4A&nHNJSQG"F?d]G;'W!.CLB0$/58!g)\Q>lJ7c8^
%HI8N0U-1-C6WL9fC/ic_0FNr5ZsCN*3pK#a1r]R_c&i2b7faPZ6SB2QV_r^X5Z=u/[chhjLr@K*fHBER2%-<#c-3U2L$+Vq+p)Z8
%W5DPC(im)(_M%GsV8+q5;V/"nF-!l2RS8UJJO#DsN"BIu>=aqI\1eO6=4Xp]Qr,`4R%#ETLISeD8eO/-kuoo":lVHnni>:MmK=DY
%1r!f8.G#fg$T;B)Zsa*:ginlK9aL\PrsN%mA\ZltbdM>h>9jIc7]e!hX?&ui/4Zq+CGkhLUc5ulqYn:fBK#a*Kp0.%>$UJc1C<L[
%]7,ee%;?^Ci&%G_>gYESU)]7C!8`\I]>IUpY2TmU*Gn4i$iHZ&#!Kb\:`X&WndZL?>62BnXS'l(!`;H9hjpRPp3ThX5JG1VhT/#>
%+<4A2BSCHgkrX@pN&,`^?_[id#fL6IAipc!a[C>O31/03c^M![5H4>d%+H6#522rC-]Dh%brbZJgf`UXO:^q_U%XRt5r9"uPdFo,
%@iaIODkd;0=k)@?kFeL_TakV^i(^L#gTIsVWeI;Y]Mjn%o89qNA-h&!K,cJT,m@Fa0P%3O!%N67#4iVsnLSP$aou-Fk"].1o6;pG
%U#kXIl&Rtm1@\5$Hci"YFQdZ(c<)f^%1lZ-*;aW)g(otf)T/TU5FP'lO>O"ABts+jB,opgR9Mp7_DU7E5`Oosqh6a=^a^)#+(2."
%95i^JSF3IaU2QE)cQS0LROq[p/?Tua,d<E9T*_;4GPZlq4a4jWo-YUqs.7EmW`a0\C[a)E_!oSslXmB&84sXi11Ea-";n5[3.uR2
%*HQC)mYE;IDg[I6R`9Xk66`h91m)@jQ;[39+Ejaddbesh\Eb7O$\;jbLip!D:4oRd*,gV2L?G;t3rF']R*UD$?H>oYAEB_W&+Y!^
%)n$PG_<dqrD[82*,\2OCaR:t1?6T`#E723$\NgMW&;1KQ)%\cEK:+K,WX)KfmrsbkYH./\OiQQEdQI<8D7UEIdbCpo,BMerPq]HL
%HJ#U'&H*J8q>4as:GR]^G-EfjVsn'oAlX8j!.j$o-4kHiO9b%Ra/VAEkaLA5>6#_T;,NdG-apI!cBg7\PnZsejr+?(Eu+jOX"kI7
%`\\%/WDggKP1fo!F]X5^pipoH0\`WI'h!.VV=kZ>8G1*'V3ug-a#pq*VaksQ9#DY1Bq.O!Lqs=`Ts9_dkGChM-mpC^fY3J_Y%e/D
%2uY;LE7oGB$6a;G\NrnX_pBj6:7c,30nLc!,K9d>#t`HQ@ZD)hn-@,Y\[0>j^qifs:9X(=46$H($F-B,Ym833"Q[jEB&6t>BWTn#
%C[n7#Ae`RI\jK"a21O%W_QELt3j)TsP[;p`)ls`EPH?Z'(,7YLDX(i%Z@;:b82($F"&Y[k1crf&KroI=(PY$pE\E,n5eG9M@:$rB
%RDWPd=:JB;)p"f=!]:q4IUXa24Uk'oGThL1@u"k>_ggTqh]arc.9;54"[b_D;8Y(.[oUcmV8.!k7hB^g5Tr?ZKd1A0cH]m2%i"SJ
%FhnkZga;>7_2CoM]kMYjBj;Iq!\AHee'+M[-B+Qa\f6BaGLi&4Dg7!+/mO\V$Nr^TQYCG%B[6ZD^jqID[Pq=<pK2(E.[",&WS+Bb
%@&(<AY8=CZC)_^+W]rL!OeP*9T$t(7/'ePG?8lE>')*DL)C4a8/UH\4`eHq:nM7>M,1N+L/F$uO<(+6JSmg6o%Y<u'/JA]SflaBY
%?P#CXJuF@tN2_h0[D[kj&qHC%#uEdR63/,@Nq(U^#qK%WTQs#n!!?p9Qo/SH1B`Y.[qtQh@Jtje/CM:=o=ru,Qt+ad*nREfO%IK8
%>dhTf5X'1gbQd<T$)B.eguXuuhJ&/g"r?@pSI`bu;1Y0)^"oQjVihct"p$;N]Tk`j:m`YA-D-VJG==]HTd>="JO-L^0&s6tn@EYE
%Cl/K@^R+pfE!X]0P(k!Sa,VR<#-*b/TA8?qo1aV?r8R3e,Pq^j&(WLJV&3o%2[^B4*>^gKT!jLg5MLa4Ohl.8=A.7^2bbQZj"%-D
%f7Xf,qqB-(gHlG97CmmY^m1u@R.]*.UMFT<ZRfSF*3/?8'2;\EK?Z,3S(b(57VAI4o"*eak3f/u'pp2D`jP'/TtCR>*13k^<!FY[
%<.t[\/u?HFG#A9k^L_Bb!?7msIj;S@'faY$HXRqO#!<:>@]Tu#B8ll,-H9dskUhIB6St8QgXmnHSJ1`QB:(^_8F;AR[N[3V%G45O
%M'b2Icals:@V%%=es9%ZgUZPbJs/10Run^/!^^9AQA5YU_lI2]9VZM#8T4iCQq6ir0<,tHbc.o*m+N57RcK"ETo/mSh"V'3ms/;4
%<M#cGYmGAhE$%`Jmi]VA?5kjY!W7f2c+u6<k-iB/VJ#GJEM"*cnT[]Rm"@[i'\:7hilGE7?k$ai[YU?g3m)m7_d#W8ZYW"d3U@%X
%-JkoL4@6(c^M]K)hb)Z77:bu?&ETU>l$4ndmPmTUR6>b&&\Xga>J;eg%9O1Gjnu!`T2G2/b.XN1D-'%,0.iO`qMG7ROm>ImMHS#%
%+b^+'NN<b0j!/J)9dA#@rF*HC(PK9=c$+a!";I#k'o$AMWM60o4-Pq77.8"H.Vc!U8h)@_<`/lblb7<gZ,D?0`FH.h:2MhW3f0hu
%HGssW#Z4W^S^p_mZ>'LZgqsEOYk;1%%S&C<M]kM;R"lgEJ2;`,#pDqe]5&5&HsrEf^P.@He;S6ecV.?k'd_UrbT*up82*)\&qJRR
%](.8gZGPKQe[W<H0Id4l?149S`+?<eZ:0-`TR-bA!b2q?NFsqbp=uDT"iQ5P2NgA(VW^sa:;Bk#`igUc1'Mh%n[="nA^/O(8/*G&
%:7X\Fi6OPU?%G)4)-tIVLY#!rpuE(k#-,OXE[YZlA8&BG&5kGDAKin!;W%k?%W7`D?C)6<BBW)+Tem*G:k`m-DAlB]Vq_SK`Z&J*
%i,;?X2[.WVQ3ZtF2esjn65ki96bH4I0RHa=!k!qS`ZTTHBAPLaUWXZMK)(^Vc(>$[MBSJ$JgnfrM>Uj9LI`J^d!p;$`%V3SM3!Bc
%iKtm\<Gau,k-<dW1")tn%[P=?;PbhHPle*(7Gi2l`WR&@/tpR@An&;(aT+6OhZgS6jPP9N?FUJW!p[IAFVqKa;9_OodBL\8VWQG>
%J3dtOF7C=fQGbWCMDra3K_h<L7#e9$"$!P[I2qC3M^]YP(pBh[11Fb?MF>m[1%;_&.SWm5ih&NG9]X0io1f,%9t)jHRi4E1a)NOn
%g:^_`3:l?!fqm=[(/gMFJD)`ELpS08b62uh]ab\t-c"`"b6UppF;b6@CZ'QEU`9Lk\r$=n1U[b3@C;if2PT#8jH08-$[W?$"R!C>
%D^o&pmL=RNLBaJ`SldOoO9!3!M#DiSb=]4kP<l8nfN"TCS6cmTeW\^uG$WM:2)rpmcPEdBD*M;r[DeFJDR6AJ&8.3u8A,-K8[8@n
%`m>8k1Gs@=c33UfHrIR>1t(&9>sn+4l'qk4gqkFnF:\aQpE.-Vk5iSj`Y;*l[PNtiD`f@gB34gL^ZcdBi"L^9aR!b\9!t(n^Y'BJ
%A#`DH+PrtW9ejB/Fq&P\WG.3JD@oRu&[.:pJJ_%sMa7hL'k(Q4XJq).Ea]._gHa`scp8L2&24(o6,]-L^dCC!:_b,V!IY0Z1UgaS
%inaIb0+XT=#%D(k_".m=?b&g(!#Dm=ke:cT:<O?)Gsn][rWM(&@UNGO0YlCk8=.4\eD]FbG4NcK"aL;b.W?0))/`m:A5.Ps6]]#$
%fW[F/knYN+Rss$U+@=/>!2NkmEm^g2"qEO#T`F#$5$(,sg?Mk)URQWSg;G"22<W#aYk3O_,n%<ef0;5ie;@j1H#d$N[O;<S3tXN\
%<$0@HGaXZ!Go2)&he%Fi7qUb<f=eBClt9Z*@%?<4s7tb0J+N*qbLaM@r9X.Nan+]Q^&%DkGL(7!Fe+rhPQGp#>""W!K3'[+S3krb
%ef%"VO:7dV)aZLLfadKqL>](Kl-6.0-/IuT,V:=3Q2NDQ[W7J@EtG>"e(TJ7>gp'$&4!&gk7TR2]&I/LGmMf.j7H0_bOT%H9>Bom
%3qYL13<_i<cR\hZZ9,N68W"3m3j@]7fTH9/n.%B7fG)Q7%1cqq",L;i\`ps<0u6&<Yi]SC/P+;&'hG:._V`fLY,N<@cVLSG),\8$
%lo.c4cnJl@Ett.U,/B>`,h`J@\RlqIE=*EJK^Z!(BCD''SXII>+\;<DM:KFb[C12uoC8X=X*Pf6eHc]d@nFMpDm%+2]:r=!ZYB>q
%]Z#]$%$,6mGsUn.0j>KYc)NN"j(/D<Au7I%61,$Z!?+4[=+k'sE8oh"eNn*'"2OTXG2G+eK+h_]UXP-(h[Igp1s=O2aMTpSAD2uX
%h-Kfk*@8drfn)47ISFUZLF$Ok&dfDM=l[(G/)u?5%2d.XMfqS,eRU52FS^.hWAC?('lu0Z#nmmsBfM+0P5,X=Bf,+m>@V4JeimuU
%5YuX#K`GJ@m/YtsD'c[7TE?)U`p15Ka!QB=0I-<`6HDb;7ar$)R.Y>H,(L'nY,[SKF$KbARLhh<ITiTPJB#:+PHa$j9./;Dk)s/\
%,c!?a_:m$/r1MEYoHZ]FJ9&tJlRk0^X"4T/Xc'=_rsraeqV6`u#L?57,^g2o8SZA[G2<92%M4>ML3%p!!#PoVeGpF7YFD8-5a0TB
%gi"YX#]*9FHB>1:&jEE?5&gLq+cs6Q*dD/6:K/dED7V!;9T2np",HqsLDbcjB@R$`\#[Jc<u(]C_;nNpeMS$`M#f\I@=TK>(Pg$u
%`"Gk`>B#$ZZja__S=:SW!*09-p8%Z*>6jRke*re^ZJT+Ud]U'[9PBPUoS"G%Cf$gp^*Ln3VaDmB^g&I,V2V!HRXuoA+bQ+h=,`,E
%B@>Hi5EM:sOQMB@^bjDHM:BQe45gh(%l1(o5VWgj,/Ok3Ol^Cu2Y7F^m#ehCi8MNX7-^s'<ou,Ia8Fai95dhQE6M,V!0-1.i`#Dh
%A=X=*Bu;l6RL<%7Tl]:<I<)0;%*@X_!*Ce>Ill]QGQ+SLKR[K31&AGGXB4Z1Tn;&WgE*O#g:'c#bd/6r>q`:W<,7lo;_h^!=k&gO
%3`:S@^a(CY,6<Zi4dA%nWO/5-V@DB>'$[@(`TTZaOLR&#!#2149RW>O>HqE@Htu/+DH1+00]QiA@Rg^bfsjNp[W4YN*4COb/tag&
%XO6hQbaIV3;5Sut>G`UT\X18jOV!rG6lbS$2PpU!L0=)cBJJcU2RU"pr=E2'?1ZlT_2)#[$RP.PR2TG-j8eo&lnPH^G26r%8:0&N
%=Di4j]p<cJ%qpe+OUig]KTI%:HfJ9)*V$l7VOP"GJ3(/<io!FtWM,sp4\o',Xs=c3eO(KD`V`ViMSm$gNe9p,e5-c#IF*P0*5Z\_
%'<[2#`3.=^4_qntWT0'\)I]H_Z-H7(F))$:X0AX__Th;VL;1*3h#o7<VXT$r%K$!b(`V*n.[cC6O4`WhYg^PH8p;umPG\+t-pFr_
%5J8S_\cJ*m=dCnCdg3O=4j5\]j;T/-;8tb3#kY04[],n_'kd_eOHA9B4=G's!Zg$_;\su:3s22D*SDA?.L!1WM\ZN'<%tR3SPhk?
%FWH*ElT4X;]Qk5G:UFq-hMtSEl3.joaaE-OTeTSDm^0G[,cA<XDP!>fB`9&u&&_<mU93MS12pF%jHAAYV1UiNBaXu27Y(nZ],"O)
%<F+fe77g)B6s*?*^pr>/F;mj,;&Da>(3oFq42f)Wf+02!J8_ccE[ooig"rWQ):l;a&okop!0Gg%=RdMKHan-F;C&2H2)PNL>F>U:
%,FHT4-%hUS",mIs`]W69McbSAU9RBJ.hHTN'ogsKg\I&G'<?A])Wh-u$0o)&hG4X,Z:>3*#;gM=Mnf=%(adH8B=gMXj'Ys,C:+lp
%#X7RSqa3%I0r6P3)e4_WMY?Rn,"g]nrICR:p?@0TdQT4$a')1fbO^=6J8G?VY5>.`Z$Bjh<Jn`)2MD?4:q8fa`b"0k*WL!<ZKVlF
%f1ug76.pE%o..,dY<&3!,AXe;=g8aab.)/]7VjYQ=`rfgXIkuT'_EFX7ZF?b3h^UY#4a+fU@aU";%Km!TuWfi,N/dt4AN9qO>=tD
%[>'P?Reg0r;e8>?dqD;/6?uR*CW-&Ajh'3V>:jHn=r#N:GQ.+hJqnQ3ZpGIoQXW6^k1ek6P^MteRGZ%'"">tUKE2eLE/)rBQl7V\
%HbBK@JG5>1I>TNLi_eTA"<#iSi@n;q`e$Lm`p3Au<A+,m=s;&\-mSH>]4tqOE=*UPA)X=%NJ<Ta"ZdW-->qRh>(s/oG\MUcUTp1Z
%a"rh'!7l4m/IRapW+EGqlu(o7&.iE(Eb5HD+UFR00m%ZQ"m^9]hU)HTQ>^<14QZooC_7GeO(W0#We$sV31P9=b5Qs;`#*;k\SAI`
%/&hVFZ4,dCY(2cq("CJK7:[N".t`i)LcgGlbE"]p)k(C"p_1h^1O9MBC1t.M1CuCDOU1l(#+oW=(<+?nm*fMt\?&kV_m?R`0mLmd
%dOa&*`\G\uS.60%GUR=<@NYdZ=P<oZE]Xh#=:N]YB5(Xn0cRcbFZV'/&DcFhQ,H*amAo]cSIPB(o+eh['ie\]\1.&*fPFTVVgtLP
%AI^$'ObV",(4V5-\Cc*2+U*Ob%BkL<%+4&.iHDX5Fn)[\_nN&tlkX^HC7F7/._*tZS>'G@J-f&h!fKnln)CagSWsXL3^lGk7NMWn
%aQKjb*X`!=]g:F%i:p&^d_p8:1S?M.>$2-'"t"cKhZO)sWrY$Z-g>l/=/+8Z1Q53i3i9"?AY+G\o8T7r/4>q1Y=\E3C8,J<hMq%&
%j73;>MZQX)!<iMa9X_-V$AK<5*m6Z'O;QLd]Bq>EN+$NYW)L-D8G#Y94PBCIPOB0V*F6Qlor8oD6f77>Y/;4_bbQ](9:L#ub\W!D
%b2eD6!pprnQ<]rGFi62gMQ",6c/Y@;Bg5d#Ln@Fjb"^p.e!RglL%S9XN3H'p\;[p%e7I$\L7j].f08#uao2ru"]3VSO(TTg\Fa=1
%@8Lr>c`UDMY#qGZ44n07fqr!a[KLF#'8-Tnab9.-XQs1Mhauf8/9%E;)@%H?c6,Z;*eSHC[,,''KO-aM7qeH",4aT[&W&7l6%8X*
%'`C]*UA,jm1!Fc`jdTbX\QpDdC%jA46t%[d7tDuc[R`FEC&>-dU=HVdo9lDJ^W75>/GHdXcGH5Dj:<\ZT`0jIJ<sgum"S!#<f5#+
%,P7@q7KG=Tg'N!-&pSA$LA@:nUC_?i=GE5[^%dq6@\Xg)Q;=$)l]ItePRq?Y"gadQ1F]ld1#f+5nGm6AA#\/2ic9V'GuNm3S@3>C
%P='U-lbu5q*?\r;SPJ"!YU]q9oQiH8"i:,(q3W=s(+5Khgd(rlXD.Qi;ZN;*T'b0>gCP7`9"2@54AF#XEPIX%^oeW6P^sN.4r1iJ
%'&`3+?#bi45uW-q\-1b(=h'ucB/^AGM6=Dd>?4d`YoeKUP[ZE->>\VllIl[d=SPT$Od,Yr>B_S2JCK[Hlm$tC*-/Lq34-#*Wm"j:
%P)9'_J]s+F&)qG2(O)@_%)rFM&0k,Y#070UJK,=g(s#r<&=u:OB3Jolm[-uN9j@@;?+!Kl\ci*d`b?a\E?/CDUmTB-Ur25c+kC4:
%XiGMj]a487"r9U@>$P4\I`)Reed9&t%=/lf_)c6DD%Nah[(CA`$%Nsu'Zg.8IK4`\UN+&2DFlS4)"Q]uUY;GQ[fFOaP&N<c\_/ul
%d/RN[Y*UVQ1IIAVp?b"k$g_EUOei%[7M,/h'/$LA-B"d8Tf_Gtf!H,kc(4*8PqFd[1!Br\'9TUM[bXY(HtaM1$:(Q##gRT&oT7UU
%T(qedQ"@s;0SeV$aB5apimSJ5TGpaupXBg8<qXmG)HJN5Eu#l(7;f*ZkFd%$1lBu/b5HNF<_U"S.hhn9Sg5S*fcQrl)(]0i[-!(.
%+\i.rL^jn$L5bALgf2RZJb\Js#P8Tk+:XA!b$/b"R8m1s,UK0[@#QsdYAQ_B?_EY"HD74+7T@9(W:GK+BZh:LXSQ<\eHhC#^B3\,
%\QVcJ;qlJq'M&QFJ/Wt4ViIC@`r-+_W60M*=SN]\,:PFie5C<XBI.KWf9*,-(_[62C3Cmi%U2!,IoPeHiWe=nU<%.n@5:&`EGedL
%M%E\Xc%7^_!KF8,VRoWAR/Ou/=el"af)EQ`:d69jrZ`;A+)O'j[?0fEJ;i.hr42D@kH7g,:4J4q1)Ugfm)N\h"K.G*A,fN:Cu!(8
%Bn9GJ;BNe0T4J5u0jIos'0>Y<Hnb=Y-f/>uO@a_2[)_s$VfgR#r'k,HM=m5PWCan0)-S(VEBFs&]O*B7"'Q$#Z4e9(Q4#*lnf9Xh
%bV4GUFN;1GVcn]>(tG@M,")]-WJ9.gP8taAV")FTT>3i"eT!01Z$Tq@Y"lq%9ZJ9!Vb,l9a455#B;T0NqNPrbJKVISGXs,ADRRub
%LlMK@<E^R+3G'2DVT!V80T^%&,L%qe+fP;JQ=K=g2!Z>G-9<9q.un+i!D$e]'ZWq)6A+3`^\\bZ0noM=fT"9PSo'T/2Zp^`\W*it
%%s^9rg).'=_DIua)oJpZcA<dPZ"$sifXMn#GOQMp/X\],)T,W)D/gJ(8,044TJXYD]qm5GA$4s2?[TjE=%d9'f#+B(RF$1<Iu*Y5
%UH!/XD:'4gJ<H$NRkZI'9u.a90m8m4W@fg`;)S&hU,%IK]dZI[)Z*5[PHkFU0f&dMe=UuE;,KAr'*1RdjS+]24_HLhmki<0`jgbW
%hb%=9G#<To%)t!0:hObl0V2Q+U<[,)8WB0CV_?&r@tpN+MZG(jDk4P.-,Q$1:0u-Z&Nok:nmYlPFoN>Slp1Cimm19]O>gZ*%e9fJ
%hNC_S&)B#CHb`-$"M]f+S0p(rY##ns0#m2^_2`RQ@h0ep]T:R]k]Tg\=@,;r@`q?g>g,VV<Al5e@[54W"N(de^l\12/DF.eSZ%H,
%DAI4H9cUrB%i=ogo9m')SchZnS[KA'(IThmKGHu_^ri0<Mg(D8#@fK:-a=tgY]ucEo/cFW6\r;7FN(ko6I&Vjk<L7^Z=9I,5R_%*
%`L$k![`bI+TRFc=*ghiZU/T$fME-DFPEi$_M^_?\'2:2`@c<5*96&^OdFVNYS'dju8;`n1'qM-;j:8])Etj8]!EcrI7<,Z4RPPYQ
%j;E/^L1:);PYH6s(*YO9g&U:`-@3DMTI5Io!B^>&:/%+Z1kV=.COX^2M%O/d>2r"FbS&s-SXC>A.F_]d:;'iIa,-.mDH_MR]YpJ)
%)d9:->R"mHq`M1t,@OE6iKtMj]Ehe-1R"4$4d>D]7<>!'cl%\.=TQ67$&NFt*o[hTEA>/kFMnH3"1;WT`3?`i-Jo-DJX'54He_*B
%(+#k&^,G(ReC3@"=N"k?B-LeaIK4hm1rNeSBWOK,8AE#FN\&-0dpRU!#3;0t<!#.qIU&-1hcD[T1Mj*J&E?Mrr&86HQAohLa?Rmh
%OF=AJZ`';1Cs"r#j>l"V,Pa$Nn]TR;HPfcMqR0LjWOnP*1\!.Y<&)+GB=MsIfu#HEr(a'*+IU5!jda6`D3^EG,iCUS<KE*V8H+5Z
%_[2)YCJjc!7"Xt#82lK:6*+/52CtF9=hgJC(n3`*/NR0B_oTC+88tS;&/f]H%]cQ)+>(BcBGab\N(rIQL5o^%`+Xnqn+[_IQJn\D
%&'cngKH1JFV\j;O$$f8S_[pjOR@_96,ds4M(g<c-ab=/sOe:16Kn1Pgr,?CZ&CZ/rjMWU.r$Rc6&dneF#q2_C$<PuKi^>:jSAeN]
%<>_).UCj>K.brf5SN2Bi@L40H;[Uun^sa3s0K;<X\W;E\5g>R_K2@qoT</9h0Re)N444Gu?0Qd-9fQpEdCFpM9ke5e@;MHiZ#)nG
%87KKDEus:L!7qmD0QMA?\_0!!]5e5]4)c#%*1L@X3J>"A6()O6Sf:/(0aM\;$"^k\&=1^:Z4SAom^a#9I5(-j[9g*CDp#s6jM=k_
%)Vi/uAlI%*_8^.)be\NmFn#ZS<.?:H?s6+7#AGm=Rmf8(e=+$BBAl5r%,tWq)o3AMKLkKg0R-ZjVDDS`@DA?c(e$\I\:V'G#Ytg]
%EiSo5:)2!:8mY3-#^#B\%n+6$F]@i5G@cjERUH/D@L74OP6C=m)_h+qn?:8@3`#rl1Mlt'o,X>D3.;tFJR.L3^o23=]>4tn6gd>P
%]JGUSK,YY,"#+DY)L/#=Xg<3p0*;OBeA*"dJXV30GU(;3bVM+1k,WN*)`R7&\?3'g)EI<,!od2)jM31!--X?=JRO>!&_+T)9Xf1W
%"pUnL_"^A-/E;Jr0mJ96O-_A#@-k5/V-jJ`LbQ"m=Fm/'(g&f'!cu]_BoOPE%.)c,#U!Qr`k]V0.BkRmV8WbR).B.9![Dqgk*Zeu
%0l"Y.S.HO)*dBN]#7PGPL9D720GYY<Oj4.>('YOHH$p7@:o0\mJ@"Y%AQ6IHpa3D"U&a[%QKsA5(_)`gJd3.7DWPFb!,BuUd?+SL
%L)UuUS-9b5>4LAd6jHO$_4;5EYR@!'\8[qr'GS?1.jQ`-5iDa$_Q\"]?m$2W*1d*Gs%^GZ,QD\e#b0<C(9;G!p0Zn\M4cn/i/t#Y
%fb!3C"b?ZAArZX'Pesg%Nm,8B:S<9/p_OhZoc;?BgCQrl`CJop)Z+(PRJ/lVs8)0tnS\\mppX\rW-e%5?CSLK%RrS7LsM*g^Uhh7
%8AY1mL`\BYHMV!a9C0PO(I@tgJA!/RaGGCd*XVY4p_S:VEP4LKs&,AGj'@5S.!m66WtYL[Q:JB27JmOT`bm?BFsUD#YqOs@8nOMn
%]YA,62j3nRn#t0J)JbcgBSc<%rJL?9<:FJe_>B-@$Nk\"qb&EnOieF-0?)`GbB\U-QT=o:rT.C4m8p[0b4]&^UA\X.kM-m@0E3KS
%5:qo"N#LMM([Wl>?lUFeqo]L<5.VEp0/?PM2/KY7GZPhCol\tq*<JKIS7mD?U!%khrfUk/,Sn]%bO#CT-9@3h^UV0tgh+o8J+6&K
%.K>q2Q]6Ubj37@hZI9.AlRu+=g%JLu$l3heHbNtfjeXN.E&LDHK>ZSLIj%D4nO(.h9=A(`BV`BKMe\d8=aq;rm-T]&Q\dbo=2t*[
%n<$UG)scrFs5etp-e;YO<0S/g^Yka.Be7D6lqYP*4Ycq&b#FcBrpmGQ(>gb`\gI=1D1dl,qIS#HMb&fp(EMItF/JijGFK8kp:D[u
%;%0a;j<V+6jN."P=QF(m0W*VQEArg?(Vb$/=%'e:53HDNSRsV\aY0tIA&%$u7K%PuBi4d`2Q,NRlnNm`"@g,"pgpZ#Q57Lo59D7`
%Ca)q;np-u)h6eTY#_!?jA%obbIdnAq3CeO*aA>=coY,!iArs:pOp)R4jWh<S+rXkT611e)GtW#<QA.d*`&#"YQ!1Y6*-G1/nc6lT
%m(RjO;!99M?cMRI<-!.h$5eCQGDZHHa<u.<c2Z9*m(Sp]EAHEd.3,S<T%JJ]f\?qQfmR"7KL/RLpI//\ieSA\06a>8>*,Y]@MEun
%g)7LUh[9erO7^/N_SS!Q?Y8[;lum\^#ai1_dJH8qXMA+Wh1r;Z3k[0MbW[$2I>Q`!XTuNmGB\TjE.2/-'DPXAIUC'7K#tib?[3P_
%6B0k]AP8>Z#_!qncf##A$Mi3#L2(F=dW4@AKojl?oD;F9&>A^m;?2LO7.:RYY2$ucn>lF?.%r;N@BfJcFO5m&(K+9D42GhZGAAWn
%n4Ne(mtp")V/m0%?T,jf94RaNJF*.\L0s@W!Jf2CI^L^02=8QUbIq>j63A%AYAU5gC,#Qp+!N?%cL@=EOf>FpMrC!fmsV")peB:0
%Q]:!k^H'#h'Yfm`*"9T>(XJO?:pTo^`;_3>?Nl659m7.?_JPie/W:smY@>8UH"QiJrR\?T4p@ur'*XgdcLHfR!OB>.3IW,H`>F$F
%nI(1*?^pLc?WXs_EVu]dJ&3U_fp:eee]@mC0GA[YMI1I)NA7@+j^Lpl_C9qB!O;Xp7.Eod(0;+*ec[%SDI@5g^N^WK)`O9(IK@kU
%l=+8u`>EC([)MO(R^lO5L0k]&d1g\W?gbV)M.0uiV=C]m"rnJ/PGdAliKo^9pimE,4Z<0J/ckSqk4=Gg=*Z)i$\i":?<R&Y1]6Ml
%R/P7u9.>V#1]4!?]dVtq)1Eae_KB>_AHI?2`JQG7CdpAP%)4:Uouuo`qiPgK)1FS=[Lr_X=?O%>:].rNoX3)!hj8'*P_-Oa)JX!e
%G#A0(h-$>568/i,I2Ke=L[s-@RGSgtc%pVBT#1ttZMO]F$mY@7m`SlB22oaU*n"EB7Wo8j6<ftIIJ\hR!]_9VOn0K(06S+CB&g\m
%99S)@]*pqpmYb^ZqX5Z2DodmgGM;WSI(eIBKmS/Uoc6c%e8^X+9fo8Vs#s?WL<LK_jnT/./B6m82r/uU^umdRAN6=Ngf3r,SM,HP
%V4Q=eE=q#JA+Q7GF`B1o\`lXKEVU+!i5hmFLOjuHaVPX"a:+SpI*(YW9CV`I[h9`;Jq\G.dLIW??O/CSS\u>Z0kd)p(I<&(r#R;7
%a(EFjU[T;422sEe1+]$GRD9W,4Zp@JpL4K(K\ZBMLN!*0V!eI==')+j%10pJW]eFMHWFPPOh6r8AN=?\)qU/\d[5BtVUT^+]7=@B
%GHCEP]Y2Ci+sX7t^#0k4mF$j!Q^C:mo,;<r1<-oMTlTi:F"L1P^"iLN'tDE=gW`N7_Ho>0=RT%5]mLZ9RMfCL2m:W^H:bpW&CciD
%QdosjSAs+&RQ)FTN2h(ZEa\0lh+Na+f67qd@Wi\d0A&E!huHL?E2%QOhZ^k<ReK4u$SWJ>*C"89j5g]_A/%D:m7>U)/;Lk/oAXCq
%D6ia(:.&'Pk]n?,Q&V.&]Kl39IdcX9TGrVh4d#?1DIR*oPa`KG.lZn#l=p9HAEF>h&bCT+Vj"&++RsPU::.[GEU>_90AJVESCS5_
%A;QtWIq7Yp<4<[jQl(B&D$DLD]bN1"7oiqo:3!%8[mN&Df,-"kcQKk"Od-`@*CIfkapX+a.utpu.cEhVj.A;ViHE$eG"u@-e#$bl
%I5L;KBe6ir?ii5Udl5&GNTPq4*o^!M'F0S;k2]MM,L></Kn/I63I*(3Ad:h$?CGSUGiRj2&HrSVkN%&%W8*(9o2B]#10B=+L_D-h
%V9C,%-a/9ond#S/#3K"tHK=-ug]ao"kN!q-#+J[hhS&4,3)T7@lh(1IOuGKsY@U.UN@ZJ*8m^<j;_9"fnkt"YXq<ka)V2!fkb3!G
%3$kcJn!*<#laEFVC?!1Qb6Sm'V_dm!`W4o@)0m)F_-1kgj:0Sd(jS+a%Fh&p!jmfH3'/nd*i7Q``aAf')0s>e!TeH5j<_s_.cIGV
%GE<P"NF:gI.Zh<8)0q'd,^(=_j>R1#cH(o>8]U)6aGUrOGc+<YM_Zf'?#0BlpR=4mnH)kDF["7GL.r'Ci+0KZ;H5<>>\(L+W:ZL1
%NAnY[cGiKXGI0E^!)Z9>4bY;iSS$rp%^)XC5-aW5,hPXOC%YEo1D+FZ3aN#s;EFF>,20s"8Yb;L7Fk5V+9db/G!sgSMi8Gu<-;(.
%%O>UT$7]ADmE]f"ie=IqH:DoQX>[+8G^,"gM\?OQ:j0oE(^i!G@UB3bi<;g_$h]@/GM'>e:;K#R5g:ktGS/%`Cue""4"T%Lr4<sr
%k*CUK[p*\;7)'+m-dn4rrGK*;TsO3N'l'8LGI^9R:bPGSgDSO]hVE(;`Y7`W2uXpQqS`Xb#lQaK/fq^i#2tJ^Qhsi/BkNsJXAMbL
%.!M^X]hXNu"9e'9#^<P-,XP;P[gOD-QEU(,iJh<(45DN:!c1EhCqKHO,Q:*>$PX#dqp)SWF;Ama::1IEfQu]57=ck]gJ5*0:gY+\
%]>3FAj$$?,6AX9b1[G1\K=HmSjT=IP4F+!s^/`F535'4Y4\$%7aFhep[k:;;#u`baODZ4-B@]LO%3aIr@U5(=i'u"mgMCq=Vq"4)
%&7"3.X"K'm7F%pfCsd6#>s(\5EkY'f"7V>LSl+bs_)[H_(H)X\'oHn$ZNtNs?i&>CW!a+Bj4=$J;,mu2XqRAoSh'kMiPODoAo]Y4
%5aKNqG9kXk&8Kh-FBMPLf:^Oq"rkCm,Ejarg8tO@mVX1ikL%7e^JXLa1,6!N?u'H&?^G`,d7(/NaKA8h\u8u;A[1Ie7],Ap]">qD
%:E6se9'@u!=E[TfH,nnoHWJF)%UD])DITfF-)<FnHZ81(PRd<Y7&%l,dLg8:&m_U9%/W&A/d7(&*D(?SA).OhTG,9mFr"@!/Ki\c
%@aTn/j+B]TB!C'ATPt\&a;:INFD7FgDl'_]!4a:6NUA%7D?\!C0obU=\ZR`H/jd:A&[ObT,3%q-)t\u16Q2L5FAY]8fktJ,(Us8W
%?cJ^rl^5mVdH@fUZ`*gsp>"IQE1I]0YrThV:ZT&i),^"a7-rZ^+Wp']/(&I7c_V(H>_1AedUQ_uTX!Z8@b@fiDK4SiDV0^Z%Tku8
%(9Iju#U.%"O"]S*)!&52*&R75fQ/M#*kj#q>[G7P+Ci`/a0FD:HZ&aFZ0*m4N"!A*kA!0OfRl>R8Muf7*8,BNJ`kU8_]a8oJl\F*
%Qf^';d"soPL)."McCTq>!:-j/@([A]o#.-CV^a"6F'3=3OG8t^Z>K\Hp-bKF.;-8Tk>FQ^A)t2MF=<Y=Olt.V`3VON/d*&ueB)bT
%+MdupSkJgb-p\!$),M1>-_3GfC1D"=C=24m?,aEsqHSu"egre/Y%BlhI\tF;;$ZgSEr'$8_l"4H\O[?0h447]ad,g>YbScB["jIl
%3.J(X(K?kUr`k%-;!mBB\J,b>bLQ!bS'q$Pl#W!Fds#^%\KhMmJYLQTiXEPu'7DM&);O$(l#W6tAB]=CU7Y`/+X[=s0Ua_[*iHj,
%^q/_4]#_d.Yabu@+g#8m-%R]DQY8WDK.^%k$pgF$FNFLfhpiTd+eY7d%([,QiHet[,puU@E&C]e,tSIC>[GCTT-Ji'C1c3\IkJlq
%l'+/WY3lOE@aAUD/ZCm,,U8qlWo9WJ-XgLU_"UXk\WH+$N'0+^'WCB7SkB+$0dl["81Qm6Zfgm9^&_`iA]m[0Tbi&.P*=C<cCTs_
%944=>kD%p5T=^mgTSqqMhf*2_6kjbrB*)?aF_RhoC"XIK-dZ.N,Cs`'SNo,r-k0dO&a76M4Ak;t41d-M>o$ZiO7!Ff9Wr"ZrE@!&
%9&\JaLG"d+n8"O]QPhO]RSOp7*;8l9ae?meDPWqa6^Rf[:\7&L96r=[dS?O[A>/G*l4,pC6^WQ4&m\BmDFkEd6`5fZBC7%VS6VBC
%540[oBgikq/q.u>(S*r1Jmj5,<N6HV1Bl'u97cJ?9*R$V2JoB6-;W2lY-I1G#L'Q_ZfhI9a,7\hM_73'_?-8sQ])2;2j,JF/n&Eq
%PtrsB`&>CkFrFYRJ"##4)I3b<D?G'Zd=mtKc9\3u#sM)1kYa``hMF^g/_4XCWZ5]&s07U9BlkM,9^G<F9A>[[>,0IkM:cKRn;s+C
%-ols_N\n<j$lWD(=1dj;X'ZJmN11?LBQPEKiFOjW&28JC1qGe<@4+P`?&JHWS46S*fS1"(._>k98=),j/eNYf$93qrO=Sg&6).*D
%LMU2$0,e,NLKW<t1qGO-p&dN3-NJLBUsZ%%ZRt-R+GCrc%DdlgG=deF#htU=::_F#O)4E[^^FP0(3r"P%(]W4T7T<E`]h'nkKiOq
%D9hda?"4bgT%auS*osk1m=I-<XpBe<jXLGte<9$'cCM[TjcMNHOr*q5c!](eZfW0lourjd/KJ<%\_'SEfj8JZWGJPa,A/V_k/d!0
%B.h&:LitfsD)T2]M(of5fRQ_aMcemqK.[u5"B_d%Cq7?VCKa?PEq*?i;G*75hl&=mETN@+(d%+&<A"jW(d@J3[Rp:O.@9iI=ObKj
%">i,sl)j.YCk4YqfmtLep`Y`"WNn+f.Xrhf/Y*i`*uT*-D]nl9"M*<OD_&Yb$aN'O\^0oX`UFMVNXPVD_RNGV!WbUrB6%6JZ!o^P
%DR%FoJfD057:i$hEQ_+I/;\A/Ud\8=7h!i)g]le0Md(B-eefni6Z%/V;Hs>*kT_00E=qrDM\-b*2nD1'P,91+m)4Ye+TYM2LPq&r
%L,LqpNMYuS1>HJL/a'uf[P=ISiAP&!%SXCJb:n6\7(@bd+<]f/\?IA93DVKA#eMkDAh:I-)=37`(H&MfR84O,aOB;j"M"45-4]4R
%`AJKd-iR>cFL#b)a.c;pf@bqchZ?fDPob+2hkH;_7WIj#]EHM)MhWEXR<2fQjm42.Vc8sU(,2:cBCOc$UHCN`hKIYZ_-(]i[b=;k
%]9+P43,c@.7B&Ru)[3OeG[%8Lqo!^e,[se,9SGf@j/,kJmhTnM.,>Qm/I=Jd*c/=1[[(s>gL_#@'A"ghLfl^f/bhA7XZ=i^mZ`\+
%2N76BAHgA#$_%NINRQ[W,-5+5g_(\0CkZlaJd2JNa=(rr(,3Ht%(?dgf+]I>"[aWRp<IS\/Fdc?[roP+VmjW``.<m((-`CA33h5t
%Q,$LEEnf"O-Xif&`Fo`Ve@)<,@Qg6IPnZS#40^APX=tAb]XBA?5eqjD4tmlVE)p0g:&?nkg1E,PSC87g&_qJ#>Ppr+qS[':X#b_r
%BNo<R.A(IP!kP,47>AcRb)D<C&VTI\[_soEG36)IfSF@E;>#[O'3:nbfcp!?kei8!G%]KV>"#f!6Z0_M4*9qH1Q?8#n9V=k-<jE.
%`-*V:qSZgCFTX'@CaVaE@^)D6b.&Y""nr/Amu>)*C<;(4f1s9n?#eIGlmJ`ILOjT,\MdZ?e=!kU/)Nl/f,?1uG\[Up^8A#D328+W
%>$Y9_ZPFG1e?:iI&bFiiPdM@;g`F<LCPhd7=+mtMXW6N)c*hp[>qKic><T=C!XI.DE7Mi"+?cDseTS&P\Y?*hDbt4'eMbD[P7uKH
%hc'-7W)g_KnFqm?(4f*4_-<$S)bYh6!*r:+bk<u\)L6hdPkEqdO<0h0TAKF!:*&K^##d+($Q)3*<9q1sc;TX3)BkbDRTat00X7.E
%()>j`B:Yj,=Ztc$UD=2O=1kJO.54li%(5jnoUhKEd4>Iir3XOI,384b[,brcoup1cXME;;dibT@7Wd']d&L3^Cf/[,'WG4BiHt/Z
%BRqP@JDf:VG\J<@8heG2!l'r]\e21NM'pHG:9:gYTOW+d;HhQR0mmR\+dn*Rf85Z6:A#$cP*T@SEs1)GR!PuSS-Wg@`Ig21_EJ_"
%l?ou<qa<s?6>*&6[LPCB/24#A8P`Tu5`db,@`"NiP3YfKnbYjFlU'd.-%54:K8+P+"`9c3BE=m18khr$+W0>Q>':BZ1=#-uAHs0[
%Bec)5cjiG+38Z9AHI7XOU_slLJC6IV/E2K@'?o*A!ScqO\(Tc571cY9Cm#qOrm![ZB,S&2g6m=(JMt_+kFS6QqiZ$H:>8M@6p8^9
%C#,>*Q5NfdX6$A&$uO]o]X,nOjKu77rkIfjB6tRfd]UpZpU^&_^hZT/'r]5?aiq&$-&]'>>F&i^"A)]<5Qd[srq\Fs;cPt:N5JrS
%"CR`_n#k=,$/O((]#%aA(s&Y^REil7F;CBTMu[A5!bi#mU`jC@G9AC#OuUWO5BO]o*/>`WbMr/MW#\EH2;E"SAsHli)e$HP@^'"T
%^%cT<2%)ZJ+JrcZl]XS3,L'hH)Q\R'1SJMCb\V0P*i$q71/2iSPeP57#rB@s)7+Q87SXk2(9oj(_J)Z]/9I!/e,o?16tmKG[_,+q
%0:SAL;t7/])LDl>CK%qOQ\A)1W#Z!nS,(Kb%N1a*8qsC?A\hFkFjN`ho#XP-/A7n/r!6==U_0X*N%.KmLk[,fkE("$e?3k':;&E%
%=.jc/B_WTF[O@5.ef%@C;&utFasN]KRVKXD/#XY'b<fX[-Ha5G85gKiH-i]+Aa+$KC3l74\;`fJ.#:80+]]u5_UDiNWYHpTpO(L1
%U2+b'YnUTB.2-;?5Lc1mm[:m''jVHOM8%8uNRbk]Tk%SA6NFBRAEgNj]5s5_$c=;d56d;4_+JJdW0XY[[4sc3%g5R[g&m:.NWO4=
%EYqq!>=9i?V8u+cZMQr@j!^#!Eb3<]lCM*Fa<F9O]X\p\c15BJfq[QNb"!88joj@q&S.<3M`*i%\r^Cp>qm?2L`oI1egK>8.*9GA
%(l3?8*Pp7JAJiZcD=iK/b9JcbQUl.>8;I/^Eu*Y$YtY47Vm.MD+hYsA)]oQSJO8>[*`t-;;HXrP::\_6-urlcYp<7#4H>nr/!]ua
%g?Hu3IR8%qA(7;"+&Mp1CFOlZq$8[6I"UMT*:PZW^qhPJ9]S#ol1n:W9*Ci$_h8,_1"3Xc_8`M$6+Z.*ca-LhLuuc+[jm^W1$V#$
%_TYP!$2r#CF>ieLc2n0<`WTp\\Eq8!";<icbU$i9.=fN<l-=em&KJT-acK1t<.&0MB/!PpEu+g\M5O>*Var(@[$Ti;<eY*/OlFGP
%kQ8DafcC>:UpU]CJgLh>6gAG"A!rsGa&g'@gu1os35O!"d#]YBX6GoXhF"Gqe")dj[cMW5M8=b,W)h[[*aU8R8VrL=IR]PI(+1Ii
%`Bnhq"0)(CRB=Z]jC15N"fYhm/9M^7_o2)hC'id)!So$\H]&O,.Ybr+1W1(b:.XY[Hn#Irn5G.!^POeBBr8.XkXL#?[<&.4],\L7
%g!!?)=bS&eo@9WoQMBlb+Y>H"VjUph,&/DdJ7JhJ"IXWth_?!&I<eZ0LY$/]o$Rn+2F=9pbQ?H]OVY7^j-$A_:"!9VP$,j^;dAM0
%goUn$0R4MU-[IAS,S;Km.=.+&BdsjsDajbli;j$Rb2ehZlq]%,9G&*bJL+,L"q45G6tD,^T19.tPlE-IQTm6>Gt"N[pLk5HR@7?B
%BLM&I`1.($.uAO58_hBs+kL1.LjN3,m9g\ccijpA(cNF"FBZRBS@K[Af-')pFZ`TD0^UoLk>TcQZ(bcN^b`2QZ@j\Q,73\4AerZc
%7nG_YQZ!"44S!$=K,.8l==U\WTd5+uq@,F;iC^):.AMrrQ^NGE,'(gQ(./8eoAJ\F!d'm%iMIcJPG*RmIFgno/sJ#]ct'gb,)knM
%7#=j5Uj(\$cb]Z7c7jWZQOO)d$C>CtiUsG7A@^>/[$A?h&dN$c[(tV@IE`0kD&g;JL'`n-Og>XoR$eH55Yas'iEce^2`P%2`H\^G
%&8s.E.AJ@q9^<.8D!B3,Wjs,rRH0).KQ<iS#(g;o.NkUb_srRd)LroA1,gBg=Q55R<S+NAa9!2s@R+I+@`HBJ?><U@`CLsreQ!1"
%1hI?DN^)VGYfVtr"7J7]S"V*L4#^V3!HaZ;%.$@fd_$7>DVSQ=fs&!4\.tK`GFtTf6l=*=a:peIB;Si^N*?oWAMleZ"\CR2*HNtJ
%MO_bcQU;(,KK0eL_#rn]TBb@WPft]6W`UV`pZ'>6hl2@2WLT(Y4ss@\0abjE(aUk;0j,VdWD`DTE"\&hJDc3<_ZEGt7fna%:4OWY
%;.'A.-%\Aa%t'IuH"r=Zp#Q4>4Ot9%adc/oRC*aF#Vq38D^Ki<%N185V(bJbdnF8k\"(qsm'9/m)OBkkdT+N>bLQgI;X:>(b7m&M
%OlS;kF(/:%'=2qXR*I+:iNSsa7#.L%Ug5tD=!\_MkFe1R#a@#@%V--nCFGm(*"$W10"'nE*lNKKf-U3_ii#Vf3qItq*ZQb/\LZ56
%0!6C_[c1nmN_qDXVViCk-XXmY,`Jra:K*fT&i4-V$T+=jK.=c8>d!aR4WUJp'!LhOFA8s(pfn5PWS?RWekG1c<"(O9)4[-l_D""$
%TiX+GMUL""JgH:b8$W7Y';>(=!jV;t.j^T[qj]4^TEJ"<mQR:LdVD%P7,nQs@DXOV9eto"Q<:F2A:^Yr)P`=[ff)mO)FH@.K9:,7
%gm)p8`gPH)j[u,a:a3+U-F(nXgMg*BVIo,E_u)!+:sHqJKDBLui<n)r10'NV\T#Z<cG[6;&t["i9G>4Z[98Z\.9t,'.a9([hNMSC
%oI$sGAWd="nq<\^0$b!+,n`gdkq[L!C:P.b3)GQ,eEF;L7h/u-E3McoHUdKiaL&kXP%e1o`5@rL]bJOj7Y&Ca4-l.(Eh9/..eRNJ
%$Y7!rPtIAT"n3`Y06nWn`mRU_HBP9KR+[>edd>>clX[#PQP-IiSg\T'.D<Zm6SIUsjI>e7nTfSZ"Fm$uE]?9QJbE:\E(SXb1XlhF
%WVV1hoT!GgV-+4u@[\3;9@P("M,C^_LieO0/5mLKSkEd%Q#W@1Rigf/>7mjY6-iC0SEL)!BH/tS@K$V<$34C"A/Qq/1,2L;lC2h<
%O>lT*.a`s;'+1%$EjT:H8LBSD%`"3s(%bCf)!OKLBuhi/%%7=T(?t8-0R&578GCOK/JP;hF!7aki]WhN"u-br;p#a7$4J4/+,]&[
%l%e7K$lO[o2kg]/UEW1c&kjeV7-XqR6KA.8,uc;cma=`A>r1`W+C9ZZN_K1p^4e'D-*1@TFN#.j83JW6+@saBP5otr7?#_/*V^uE
%PnitF7QHBkag+;S@e<8CNKqjbFs.rYg!>kg)neMS5jH^7RYiJP,]/i804YuX+*&cE8Hp<AfA_r?THSjP\jSEg.d6!dEl'r3QS1t*
%P1:dS?+aIGfs;r*2a.ob"Xr?_"^eWA"[QRlTMEi39S+NHSQr<K=/a%sD^,_'>Hu!e6#(@uPGsj^C7C;T%gIo1idad/C2>Ro"(-U]
%6GCUm&C2!&P[<^h1i`nQEOat2*i0K]aqF7b&3ELV5$U^&($R@4<:_F2;!;=eHtRa8L"o.!m3'rThk9#>@ga<U"Z2O4Gj28)49?Gb
%^C8tFUhVC="EY@e,SUm7Tl(:17)9.6'g3$s4_D>Os.OPq%kB>-)8)F)P[fh,<Es:<rb+H=QV-$96pP@8%Ws$oG,3tK<.,l]nF^n:
%([SotK9!n7S\>]+&IB'0R4<k<9Xk8J'b^d;03Plll-,!df=:7H_O5CjN/T_1H[u1RW;?#J!K)"*,t^2U$.E0/#964)'0G4>0PBO)
%/C;`UqCbm55]OI6WI/a?M@^CPi=S&)kj_$M&YZ#tEB?,^iScC@0GhNQ"82Ab()IgY+>!uVaj0JLBf4#p/7D?h^U4'%M0\+A:FhFS
%36#b\U"H>T3$(."Pc'9Z;0Z">2a\!I9rA3](USI6Qjf5F(1>T&(5U7)<8e$6a8\\=HU4TZ.fncM<=b%EJZbgd1c38V@9.,<;(ART
%82BBhPgCc"&pdq0e16akq&S:VoXqA58N7`_i9T8k-69,DJ@gn`:dB4sBI5FKdC2E7#?A-`9-gmKgg?kJi0.T."urN6CmD;qK$XO6
%;@0Vh>=@WIM.1H>@On)p#urNe8JXi'a#Zl9P]1RAU\54BjIHt[l2_&F-ob(UQ'tF,c)HC-AVQC&QH]IG.=B56iYV9=6^+L/dOR3?
%&"fFb@KOIL5q@eAO=M"fjA'Y'\R<57;A."&/mhsAL_NPak=7q2#;e+2dXkB5b]+tGLKnX:r'jKs"@SBYWLc)7UEkcAjT*7^f<?*\
%FHf>-(Sol<K,"_QlFE/?IX*58QmeiOOnXHS"\L2^ntC"UPS3R2$^dFf*l!gj#'F\JUKiQo&aZLTF3rmqc9$_(F^591L.4RQJC)%D
%#Z%9u8<P8+;A8h&.,&VC,a+,fS4Q&njB1o]/-3'a,tSZ5=42d1V,S59?GOZ&.fnO+pD0()]FTRk3U[&j`)9H'a.+cF>fPCOMI/D%
%haH\;'=26]%a1Bn<1a5&`Mak(6&PiE"*KUgQ@2=XKL3\0+MVq^.mU7A3ZOM"B(*j[1XfXO\<;B:3q]a-UnL3$?0_$:P,-;>7`Ys$
%*\7aWLlbGlHoo%DcLB\L7gX!_QBn6I@_%Y1\GVkJp(Sf"B'T%UdJm*?;CWkN:csGi9+#)^3@3b@G\S!]8R,#.'W8;JA.hb`H\koh
%j7Y`:>a3?qJK$sMp4;bm`OZ,ucVLZJ=Ec_oLkkO96RBtc'J`0?(C*,D&nqC;@R2d--V<n4A52LC59rMdWSLR=E530Ei88m%6tARr
%BdRBJkZoab6E)>G(YgN6V'>Td!>?noJX-G(=[mWUq^V)V[HL#A/=ORVN+p*6H*N$^lPEPe*?fNp)_e#60d+Y^m:UBX5Rf2%79pR9
%$'D#m2:*3mh!.Sh690;l4^ag9*soGhPdE3*gBd#o*(WN\T4&aP'gN,Q;WeQ\H(M6\9<eSSSQp27B<q(&P2chSS5=2'VR`:r6)01M
%&3/#tZacpEVa7&q1J?J"W!lp.P]QR"e5*EX7rX#IM8Zcp`&SL+==.Z-:-8OtdR1R3HR=G$\D/BJo7g1)%pF(T`))FM[O31q!<!A7
%',PF8H',3X.$iaRbH2[5fUjZ;-nnP^b<kF0!E^h0F=;T6]U-j0ODi6Rg8^]FSf*@j%Z;1S"F+2iGFgQW+Y$&q%_rd+;t^CAkQRKp
%Yss)%&':;P.V6T=28]1/Bn]BR1"f;STpI/M7#2$mg@S31b^I$h'ZqpDd=MOnm>5=/Uu^P"(JpNdbK]7/Xd?&k.#Kn$=<bU.=#)Bq
%bTNCCaj;T2&0D!W4CnVI\qM=B<Yq-!K#D>(^="^rR>E9JA$KSB%>=,lNL4sn6k@ouWQ#n\@f</m)Io3pULQ1jlB3&SrKC>]4uHAs
%#)nkR.7GSI=N[.a)9WXuGp2m]!3,T0C`%c+Jm<rW9Yd`"Pd"`ra&0_4]E@b$`c<C'0W7l4?PY?Lh?0d,\_mU451hVnT74S,V+h5o
%q1[&8H<NYS#>2MI\P"57*hnoZi"C`DE[QZ@H"d.);)r5r.u<!&]GT=Bb[AAU-V>h")FTFlV'dT4_?YVVM_pPm8R9\kEOqq1OaDhd
%r9mUkpRm1d*il)N?=)k"l=RhF'CH`IF\N:ok*blrW>q=FWTKl]AOjX.FZaJ[\Y'0Hp5;JZF&W4h<,nYRVl_nTiK4&3&4FHrhb$9J
%JM46p^9(i_=U4%DDe[R^cr*XNrQ[CE^JHJaKEt2FO("b^5ElGD!:EHSSj9Pgn.Uel&2RQ.Pne"+@ha1IaVWK#A+fJHO$3/@K`.pF
%?aOX;P!Z68AM3(kQM#8L?K-USTRKrB6BLYdGck"S]%Hd+!\bmlBMeaWK![)Uc4/;@:tF+*(OS:N*-<K+brbhi=WH[T(i)+G_S36a
%MIJKh.Y_]C[0BNtX'^M[Gqb/)m[0F9I[jKi9UTL)L?^hIHK'ecXqFUfR6%'7M:9mc+QlYuUsKBNii-ubJ>>[o!i9<l_9LGmW&%h&
%Oj$7khdMAU0141O>JL[er^76oL!l(^:VO]%?p^]i*BlpE2Z-O"cTX]-*MesWU8=I6I_eRKq3,'k:gR3ITl@3V+fg]oP^4dG`@,QL
%OrK>%NiMEhjuOrUekEU-X0O==7s^=pM^AoP:fAA7m%GtLF2_'8&;]Hic-`+\0Q$DJM<O5$&lp[9`!2pr7j;W8/nsg_p-j\[-p<eo
%%BPCu.#L@AVD42l[:JDjc90g3i1kPleu#H5"N=PA%t?.(ml"L2&addWj+'OF4]Q'M&J'b?Xrf'#m!Fn^e=YB!R98/FQs7(6Td3S>
%N""S.^&1M&C(=2)9b1,>%:XLU*9($8'J#92d`N:tL)ijc"&h>ZQge"d[jWKUQ0=ADBc\9r0fRSkl"6o@n^.;iGcnP]`Iu85G<]5i
%6;=9j.VBtbX,cTFm`JAr]>A=(<B);6QT@`l,B3Ng*Oh%P@mq*0qH[!a@X[/)2cU4ec1p3R!Eu"oQR_UPjJmC#2%/U`3aOM!f:ql@
%c,J[4&5.U`So59L;KRc%Nd6I[0C,MN(Fh&"VE%$FdlRAl&/Z]R0f,aA<SY#.Km-qA'hT&;6WGh*6GC!&"Mi+3Kn2O)dSbNAhijLS
%;T\..`\\R5*-1GB2^Wn]kdQA3,^Z$GAI;n\B$il9KpF$V`O'nHZCbl$?R-JSM"9%shu]2<:4e3[8ai6I`YJq!N<*$BS`6$q03/=3
%.!?-o1cn^u=XHBi"[WNQe))l_CrOM1IjLGL>#*I]-R)mc]4-(?,`+Ru;>KH&l;\OuRZe%5XMc-%M4LC4/7iX)A#JN8ON)=ZP;*0B
%:13=s.0PAT1i[RfO5.P-RmL(6&91G#*,;,[D3^i>N\nTqG$<NhI8T"8(,f("g=VQ\iYhB?7CY*Y5st7r5tU'9FK)S=0q-i5;;!=$
%)A%EYP1-(K&)tNpQYeUJg+kJ-L^dloe+4hm#];3U3hACfE6?EOJ3+Q?-q(qq7eFQhk(oei9ph65MBljp-+XsMgIeD!F=ct4=b0cB
%/^q4_9LB'NN%!FinMeI0,t3H435uRuiTe'ETP,U0ajZG/Tm=3DZ\p-IMj8dNO&7BsiB\kMYX"6n3*UH@+_AG&D,X,(#s(?)8&`L/
%8H`!>-W:2iq+f1n.U:m;9@#*Q2_c:ulI61FQP#BK`K!H/a[\qf%\@bEQ6urs!r=q^0;AZN.s`C9%T98SoRpA%;UHL.&</+?OcZ*Y
%8p"7ugM;NgfhE&m8Wm@m/>4U<JK1DL82gs+n0S*0WRpbgqg`c>*R;`3%CLje1LgZ(M$sZpE>Js#0N<H1*TA9SZ5?6_!Q))*`$O"^
%;BGlc2bhegPE)E#RKr&c9".&F3LO@l/nA^maOdBu?fG1(LZ0SOW[\aILMgDccm3gn,iKbs;(??Y,$Sc]8kNtJJWo4mbcN^Z[%2FE
%a(Q0Tcsm8jPa$@6<59fe=4//nc9=p!&1-TLJ4NN5]L3[<-Okcj?D'rAB^0PcU,uP[`!$'l68/mrZ'/-`bTQH*o(Tu?8U%%2,IUDm
%R9`0G>Il?(+!e8dJ2gV$G1T"HQZQcG'5$K=Ng#>'abRI0_JbR"'p8K/@2bQ/MR%E4WL8Edo5M_@:SP,6N+7so-]j]1I'q,E$,q_,
%7'V!rUEnG(nWq$"d2`gm%=oIMM;g-j*67&=8&tM\V352R[kE/P'*Z0-$8@g%WBX1OSj99pM>EO1AAq;/nl3,218kf!`Um/%-$EWp
%.o\sa:#=:::n4EJ!=o]bA5&_m'g:JBnYX`]AQ=M;6poeo\L/7f'(mquI_LXA]C>5`>iA7AoGa*?$U0!5*Jd-GK2X?h)o^=o`9#e(
%6E8bY;D6lK+K!T@bNt:`Gih*P'8?'+br%EnN?<NSK9)]oX]1ENs0t]>(5u^o1MJ;r1Js9(%rO%@,u;Kt]p=J8<"kBS$]Uc,c_$6j
%bhNS-[)@74!J$KXi+:KR^h(?899SLm'-2Wq<k9J?:t=X_c:m2RhPBe##C;D*/ue!ZgbS2U9ZAoq`6"D!\Wj&V)N++lW]9HFP`#K^
%W[)#Q.:XA*P,k%QN'r:RS0"T@TrFuY"u_c-.>iPHicmR]Eq(h^_aPa^)iH0%dqYM3Nf!`l!E0[/lIo6mF$S:j\*-5P!I6L7QhFN:
%-68@U9>0IX`_KHY@BONV7A((C\)L)5RW=Va;E8?q,`+>b7C%^3(#L\0-R4o2,b6ne&lW\g)Se\SDFTQ'AO)@*BDCk.'B)kQYpck5
%WFD^Kek/oG8L0"8=\k=UN-UVnTc"a^aaLX-(Qrec;1&MW6pfA]@1kX.'uD":F>VZ`W=\dU!NETooArk7f9/CP7f(g\^!oueWio0!
%/;Ze1YG"D!7R$X2bM!t-2+fQ&CC,I0%``W8bplc2Le741`Ke;?JPhH**a`3UBWB>MPGSsJV#Yl:8U3^:ckno*4ACUPP#sq(JH`\C
%9Dn?Yo#Op,#8p!p1F<>XG'Rc"d:1nc[@s9J%4N;i6]HDZR7.*k*7no+0$^SSc?m9idPY5[:V$m%C139aRj\Q*b*>hu&Kd^*qHUAf
%U4`aW:Qo[j_!RaVU3!MpFQ)hF=\!VK]EHe$dC(M,B#U=o71\CW/ND*N;c(3,#p`PYG&Y)+T&D::M?&fIM;:XkkC"[:TMLe%nYd!M
%%2,@H'OifK<l>;@Xd=@rU_Ba!>H/Z*GG(2Q*:0;b*%9_l&%s60b(lFK!$u>>k!MklMGB<J<M51AkuTH;X^$6q)2dbui>%q66K$p2
%i6.RgC<0Z>;Z^P=.K<Gt<GLNE<J)$CJ]`Zp+r5T_7(u:eV)/pK<?=\A+]Y;I)0<).=GbdWXBZ7-3?_Wp&M52E+uYd=SDt44P"20u
%R;K4^;VULi'l#o4"Pd]g6K&t7.-[@W9Bg8L&he<%c."Hb`X$Z`S?#.7neOR)K)Jd1]@0/A?.->AWi"e40%n-ua<SnX<2VMlgNdai
%fTA4C#bj$6Toh`+_ol@mcGG`A6E:[Z'=SE?VS!,0!2#kUfHZNG)gHG8!9\+De15#<`k_.7'.I04Z(hA$!lLQ,SLL[JYHq+7J]50V
%U,^do0TH=!Db^jm,t\OT<T5^n.KZ`s3LVBUUf)g&Cj0]=`OV/O""(=L<]6:hFre+Mj+XbEL.CM=!sUr[qZ,uE'6L+FQ*:R0LH4g'
%g0CUg-f5f"!;$3b&hiOlA`?7?^KpULB82->;L9E0l;,367/nBoE3Y;#Wuo2RE#toZBTpj<1YFfXP6#AgU]Ik[XOo3<,mg]S^A*+k
%&?`4cN:d-T4Wmu7iE.?UEi9#+eA/&IKo"cGJtUYd/MC=#.N1n$RIlU-_XO5>AX2c(?UMlICT,n`kt-mF0tRbPIKQ,iP#r&0ATu_!
%(F23`N",DhK>/nL)\G'P]7q(9OQRgokj"LM;Qa!NK[?#XA2)paJ]94^6l(\Q=Y/&:F=</\i+Dhbkd:tZX/l$Zpj"/NNH_1a'(VVR
%QY,Lo!I<!r5cI@d*LE+aU+e1qg]T&5C:6)YT(.MVe.ctI.LY3m8`We9X1&UFRR2/2PE-X9,Xf4/(T\1peJR0t:m2\gkU-pTA/Htr
%CKV3K&/-VW-\DdMepMiOY+^Ek67CE*3hBA>.I!3LMK\)BiV+T/KkDa1Q9\_Vi6I75[+i7HDVSAWKaY/Fa$f-_8`utK>Gs0_/1D<h
%?=#(XpJ/N<#mK*\Q6<"ujE.tEEM>b^E!>gOqa-&!YnOso5C>/HKZ?Rck?srUkU<bM`=e(Rj9dRHR3)Uq6WuD,F\Y.-eFD@_22G47
%_\4E^iJMf30hu57&quVG\oGg%ScIqYk["nb9@%uTA-BJa_Yb&Z1/n@M^]q^kNTI"&9$!SI-#-A"$>2Pe(+EU)`pf'_,)K]",qMEb
%hLJp!_NoA^)P`E<@^1I$>[mLMTj3=YQ&^W_"5H?272h01('G7>_rPEm,r$+ORY:!05&n7m2Y1@M('.qiY^GGek+2jX(.9ZOk7EQ,
%dQHGD3uY-H3`j%2VOfN0h-QMe_,KS9c9F.-+k8A'A/;Zn-0bp@qL9@pL8YXJ]mV3JU;W8"##3an`#R9LJp`ha!\hPVk?H"3@V$00
%":MmI.U%DV.r.R,2('CY;]p`2!P/YGoB`[g7m&o`r(8f@Gf+bQRGeI'(,/-;d_p#[24+#Gn:*c#if1n+N*n9C_!40p_Y?*UmOi'/
%0bET>$:JG;#YtSE7Y3mfVi+#e6a(Er?;jhoJZ/s<%FB.Kd)1bfI,R>#-etObM8s&E*!jIo&B'<PaV:0NY>sKUTd6mklI:>BJJrtL
%Gt3'UqRkn3S&<HJ7;Sd+"4Jc#dR-Je+m`TG<Ub,0,A*TJ:*QdicQjWi^(PBn+eOQ^)9&LBL^@KA4pK!u_]e&@j(?CVndSgIH_k2"
%TYa9CPEBCLTlE]a\1:-S1ak>lYU3Z@=6u\S>Sh":J0=u6;MnGe9Qp^kdA*@T\/-GCNO+K[(M=.6IF1G6INqPK&W#kNe>6d$:Cp'!
%91aAI#ddR10eB;_,[[t:J2ISsDk\u[Q?+6JcpXh@$Ya=N\NdSpd$"b29o.d/'>`;AH.`W<bT,037EkV'pkcqpX[IKhA<i\)pInno
%]J;@K"0ihjJn+r*Pmi<gHq#`pUs/LpC=Xg&mefU]D$X$re99"c33=AnHg3Ptbe8u)$j@Us'/_MW"oMUc8eZjbQ4$?[?7(KQU2P4>
%W-],O[:laFCKdIc2;FH0<f1>m@7paqP,LO-"d4<Y'h+'fR49rr?@d[HE,l\MNI2HYdfiTQ3'c[d`M@#qX%$p1@\RIt87T%fj--ib
%npj/o2Du7Jk7F'e#[Wjh=e+^J)be4gi@^+sSqQ`kQIc<YXQ5KPQ6K*T.<i[+0bS#VG_)_[M<';HY7WU,>QZ4i[)f)jBh9R`Wd[aX
%L<HgmaK=sV5pfLSR_+fp/R7M>peJe+U7p;7jM?HfDrm[li^;YiNM/uk\#8bXSdIrYNI(F>X%X8._1UFMR#0$c!?he%"?g1t$uP!!
%^Vj)$1`2lFdc;l=4++FhqMJY>QKOMB9e<!)0D&?&N&V$[5LE$j>6=1_j%`UOo$qjl6!(&?CLZhE&]@hF_2Dp>FOHpLRi(7Q9COu&
%\TF$D2Sr^]/i\6DgD]d"Au#p]>fWC>"15&tPnJp8p#Bf:Z)$mLH,c!Yq3jlGR!tY&XQb#K[8R2jU_]Z7.5\Sg&Ts,H&BV5I=hKGb
%8R__uM4P/h2(mkW[1\@1bigaLoufLc;,j4h<lB4jG;Je(&F;\cQJ1@u7G(M*KD%:RFQX9p6LAb<;>lZr*[RB\lR/N]Re&.?+J:*5
%l=,baN*1Ak..J)n=6O7r+W.0_XO7<sd0;Nj^5CkR@1H6LT4^@=Oml"c47PqpC-`;Z^-QJ*8^TjZ[E6.>OqP>,YR?.3'H8>F'K^?2
%8WcgnVU28^K#9C_eH9P@]G(d_FSeMDEI'LYlpW6A11rZ",oVaVjZ[:f63^\S;phBPjC,Johap/]98bZ7WrYgD4etC#<.a53]Ap07
%fikqBkFRACjZ;OFblEY7Tm*0*PY$tBe5uZn_:ZYCb6?6BZ@pC7DXUh8fF@H^dBbQr91h9.)MChS=c1>&L2eE340$e?2K=Z^\9s*D
%^e18AX'D&pXIeM\b>aK5P;%X"@T<M4M9;6SfI"au1a0eHd#"O_hd48rckWn'h"os2T(:u0Pl\3f4c8g'C3RuTRhpqoEPW:a$06[$
%?W]W)6XH+W'uWanHD2..GF**6(-XVK.j]LUW^%43j)C!6bfKG*JMKS]%o;5>%,5$>;lFsgeV]`/?X?c4hAFXF`JCpGRlj]oN3C\=
%]X];&_V_'(8B'*`"m*rThNT&^\S+[iU\#'b8M8;uipDu0c^AN[9JXaHZTFu*3:r3UQ0VB[Qu'Wb&A_D_&VDVT(</oQ2l!U)NY,X3
%FE4c_l;N*GVK3J&G\Ntn$U9`"M7B!iKXeWlHj='-@#U/EE-,->1hb<MYRU24-P\FU_"8GaVCU'0OT9s*Q6L$3Gd=ljAf@8/c=8RR
%RSuA_ja)epS7'Rj*knG&KR1j2#KYZ9&BTko\bJN',JnaM?R)4FG@9[Fgm&QW:eYM?QB8k<Ug#Ief'\g6me(Y-Kh%`_MXj"4)%>Z)
%XCt7a/('[Z<"Ld#Sb4[PdCfstUeHIF!*lY.7$j-;fsRt,Fs!5ZTcPI#=/$QFM1$pbg)0Mp7FJjuYLMVR%%:..)1"1q7'[G-O@d<*
%`h%tNNPSjW/>4ae!*1(S*Hrt85tQEi(/!iqTW&FD.%XCsKp<2h/+b]C@]GAAL@$^,24X3s^k1>#XE7MfJqs&=iiNcO-ZIU46[]6_
%U,(BI/)FYrN)9UL8.87:K"-dCY99J_N3OM*fYGVeda-tq+e7@R\P9.<OE;%kqlAJW\H1+OSZ,*l$1]q'F19HuK+DO5)-u5PI$V!8
%F[VFeRnMtZOH9R$F"A>lGgoD<\=,1&bhUIK\--oe_[[Z%=/VYMkWqAkq3<TEHa;Ar&`VZFGqS;&iRU16&%)_L&&ap'NU`q=l8p2A
%XaG46DiQZh(t.1@-gF*@B\sYF?pJc]c3&hTBAQ'ST[[rC@BR%GUR;5A06^Kb3<Wm`1M\O_7&FRi#]`1u>H0DJ1<4Bq:<GGU3<HGg
%4/s:l5]^KuN&_6Tps_"[]Zuj7*%Ll*qpZe41WbN@gYWLnDiec[Qp][t`N'$`O]j^PAKNAsjd'o-iQEH'JiJ.'UgA+bH?iYnnFB++
%W]G;`n;h,FeBm;B69uZ6kjg./A6,_FM:@T[N\76K;rQ,/8t\Y8-uC8sa0m9qalRL#'tC\%e*4[[M=HXQ?A:O0ioB)j"gM2r%9nk&
%ESC#D>#*t4+?KWVB/[I`/",M?X;?OZ/E^A3SQF+B4>1^9\4;Y"-*9:1=2R)#4H9hFUTAL7[3W)QZH@039U4s@6@*@4Nr5&>Sg`^X
%J]\W4afK!pOiJkLSil`'<+R;p.*!t.#qik)_mn==MPX^La]u`:%8i_^1oV/2;kr=hTH%s<Bs(YgCbJ1@k<_Zfl.H?:'3hilac1?.
%i8eUJm$J]\*%?G$V;>.g;B1H/SE@oRG$(\qa`5N93D[3H\Rpp[/9ri^XZD]:c9@rm`pjSp4:d\c%:a1V3N273ngr/la+36dBI#(^
%P"2+DQXh+,SnA\2k@iq8[,[Hh1id11+]bX5,F9Z!OU+uSZ1gq'CG^'r&2I1^Oo$JM3uU+OR.nX/j=CjDfW<*8F&)]A,KDO/.L^rl
%j2An2U)Jq0nVs4dSV9aqE'Di/'KPcQ8<A'274uOfW`NRf8jm0T.bE"QYh(@_*5uWG7*\IZF96Ve-1j7%J]NC?-Ul9>jLMVMLoW=`
%;!<@-UQAt5W?B9'4U*kIH(LFR>noVb;N(%KCe_3d)1ER/_]..ij%'U(e$m06Esk#`5O1F3$@WFISf:kcaQ$E>V[s#m,C5cuq&4Gs
%9P5F?$p,Nn-C60)gdRR]W8k/ZP:C\pj:XZ5T]7/]87%<+F$)@gT-;6b`Uc.O3!tUG=lM\T#Eib0"cceJ=Q>Ci4-TYi<STPC,//fH
%6;a5Nn^^h&;"W4i;e(g)%`RC:W,]>JGtD+-+@$AV/'FRgNPfSO87)IY8#h5_S8j47`p.&;@`DggM0sB@031)`58"t>>TZe()W]bS
%R!:R0]-q-YVW^FF);USr"@O8$"YbshTaV[tMo1u4+]4+5LM01CH&XEt,\<L1,YZUfcEY?L8WKXe<kZp)):1gd7M\K*:aTdXrX,k<
%_\e=_%RGV<BFQIeLl<uZEl(jj5n,YuN[\kj"Bf5lj2=?YY9CmT4<>=K'[C6L?@2l(%dOLXO-MI_.i18o@;hHN\5!]m]gp;i$58Ig
%<cTU.QilTn;Bq##<mG,efPnK''eBh43Dqh]8J.!uTB79U.'VoAg7D.aKRt[?*8VC7Ek:LkJ`^u'0n=LO;!!I:+K325a/8;^H?^Ef
%"&^-\*a;Z#@tt.^SgXT/KPefUM380Mi&1[@L^R4%3)5]I1/`!Ll-$VbKG#5a[u,eN)@crVj7eNN*_0s$X!,AX.W\OFi@+2\E^:Ej
%egB(d93O:U/qGdrfp#$is2GBN_F^C5<E(s%`Nlp&.6K@4Y^sY9hrsZ3:3^=+3edrr/M>Q2@'4UFD8eA'3#i%A$T:J!Uortm&KViQ
%^.&A=c2#<aiCHfrELR:@B?j]RLFDuV6*@0o%1aLNZ:5'(a(:t"VMq%_GaIf&al#uD-&a<P0R.9Vb#L&R?ikm*D]g"7"d^.o4-;AV
%FXVKDUbsarGYS^$DP<tDN"jN:;*fg*KGTtCnAGAFKa7%FeZb&9fBD"Q#&\G)%L2@#&\?6h=.3ZV!r",?Q6:-;@K$iI3+]Kc4uc9[
%&Td](8&%H?7Uf#n0u,TF]HpTN&E'-f`_$;WY3)68!8O+DNW78`:C7'@TCfjrmIl*W[6+(@X!p%u$k,ZRWo?L%r2o6L#Q@IDVS;,?
%]7LspgQ`]M4',F;Z+R&oo[C*2?IL/N=&%dj8,OtI._ot(BY<fL7D9].gP0:!p79Y]+DMe\)eUc!_\qdpUXiA;hPL*#mNKkb_YP%6
%6PPcdDiZWo@<R=sm1G1Hk7iVuhh'BSg!`Rj#0B.hi>V)&@S3A/28j&XZ.tp?Xu(ZR%J>\o4&$tiqT^PMMOP=B&/>R]lNlYmiC9D)
%]mTr-1m>>@Kb7*6]TsJu)\SC&&.S6u&^G=?(*V.+Vr@tYUO7hbNf"dJ/2QKC?[XLPTL(d*l\P!pBap*l*<m.Fi;hb;bf'CXb4gWh
%$c+ELpC79_NuQmo3-B67XMVXQ913H0mm'f?41$pR/BqpD&B*B9ZX@0Z3"I:slTkL0=>aVHX>aZ]nc)Q2%>3e!BeNs=M;1h2<ZUJm
%8hKrGrYga!2PrG18YrjN."Zi60J/.<TuLJ#TJpWTLf"8#LSeE8Si=;-(d)[qD_s^bBZ_/f_YQ('KR&?`/fr%'G#!<_PW-8=\:>I=
%)hB/k"u8S*QqV=6NTA@U8Q[E9N4!&d=BA<DH'b@"nr@eAdi6C*Qlo^ml<'E1Auj)EQ@)?)?\5rTiQ!587e3F',6K!%,]?@_l4tA]
%)\iOGBd@VEG])e(OuH#O?XQ!6)=BfO8DZP*ET>s_aW'7l=)>?PQmcBH5i2E#;d-P0J`3Xudt,0jar)&::isbMT*chlUBGk+O!-%e
%"aSQK<(JPIng5B6JL`U>2iELq16=H0<19$kD`ZRu#$g25e$6p04_TS)9+@?M38UaR.9khWUR90,*QOXE[pG:\N]13t";"_rGgg;4
%[P$ZdqrB<+H-,Tr#aL4>)TS>]g)@ie&hm7Di@s*iRSnfa,u:<E=>l*sgnd,"3"=nBa(J;!C)Ck'M_`m<hK5$X,$-MUi]G1o[491c
%=#-eq0]'MG?5gg&,uiaO1#?SGW](X7"&un^YoC]P%TJB#Y>W$$J(^]aW!f76'=b\a]V4JD,JT9/L0?3g98IeP':,8VW*n[ejGR%N
%hRO9D*5O^<DgDZX`dNlq]CX7\Y/7fMbbL?Spt]Tg2l&LL)\GoDe0c(VpC4X.oPThQ6]#>on8;oF$2QT*2`u+9Xb:OP$OmhV-$LTM
%]4eQC#0p3!En"u3`Go+7G!dEDNrrm8;rbr$An-!?2`u(M2.ecd*I)V(fYd4K1(>r"eqE8E`!']kgEmFg(/Cbfe$5sQKga$fiEUM5
%2bFrVA\;p98+b)Ylc.C!Pc-q7p?=Em8VigI&i0HfiOWT];'SellP@X7V57a83t`tt\XB*m^m3i0?c.#]=<\dqf?FrVf+ci]Jj:@,
%8mF<5)3/:<DE]7bE,KL.1oBACX,cM#@U%hl%G/kW%=o)C\J\9$lBtZ#\f!0<80>`l,6C6(DRaS-P(]9)H/62#!?A;4);;(U2dSFq
%2^D.lb3NXFNC/,POH=45KCQNU6>Bthf1h$(3_^HpS,&b&$oD?Np+D3sX9#rP`KmZ=$LD@nM)*@-%DCJXlGRRt5!740Z!2Tq[:0iM
%6YiLQm1S'2;@uP9fZf"9S^6(I#o]r[];aa&pH^*K90SY8I!C<l"MIg4.1&UU2c!G:L=DlP6na=aj+(S(.,e'06Zu+BAc\s+<7G;^
%6$B"gkk?rF2j;u-+(30-3B&A)>L(ZjjZBFb]-[>!@4dB'VER[;Td%*obV?tXM<q,.\R9-9fhMKgR3Tl@Ar039.^PV`O]m3&/XQkr
%^`g>c:e!q*OPSpemn5(2.NUCNqDr/rq!rd#K@M-W.6^X(@*if`>:e87Km&AX6j$mK%Sfi\KSnto%WnN$T0^(X<>$hH`'M"`Q]FV(
%h+lAWR,(`ed-t1JG,)#\bSdaVZ6BG`GMpI&b5gB;ZPs.*LbEE*O)T-&E*+<rM7V_4WZeuCZ^`BhZ5Y$KL`_E=p>afh3#,s_K>n1m
%2@5*E+h8=,ZC@T'A.Y^a]7&k]@*!5OcnoR[mc14"b)$0M1Zs#mfaUTMF1;iE"\9dL*bE22R#B1V?:/nBQjM%Pfo8MKCX"$7;8S<r
%NpK4iiB.V'bn@9V.^E8NBQU:!]CA]q3ZYLF-;lmC)6k,-7EJh;"a8?=9%(*J]5tBV3>OOh5fQ4AR,)Iip0fNV7SESJM;:a65tY-b
%2bH6`Hu\mH!GNp9lV=2&OhEji,\ldfYjTH\-EEF\kc0[.:,Gn\,B\W?kG`Wq\hU!hk<;iIFd$p<j^i.l)U1r9h6*Ejkq5Voe"$Z.
%1/.5m?t2dFhC>BaNE$GVW[VT;6+U>fNR;$t$DKViUkFKd#)IoSf.*G_[.:F&k_>C-,3"j5N<7d&Wd&Dda*lk7gmP\j)4`k\FS+2C
%go2Sr1H%0/30GmldG+`9E1*_g\]J<@7"rZfA:ZDYiO4pGMQa*j\PYo?V,=d#&8@L579A];NS@_o\Po^(r1fZ:eSJ:sac-Au):jW!
%5i+4ZdX^+LZ][ap5jm,KEeVOCA6kq:>ACV[bFr`/DD563nkasYZW&+1oG55bJmhXnG>TKO[2Ol`Z1ENu\=rbaghk2tE$XumL7>oV
%9_5.rDV3o:&"jL%<"HT`"uha!kBVpB:+R17#i'YJL)e_DgjC]TS&X>T=*$Y]r&+m1h,ijq"pf>?D2)%[C!#57hPWb[].D5shG2=U
%AXmVH5h*U(WVWYUmWPV0+rj;r5o!YdCXh`&d3nur/a$iq+h-Ej87.E-EEhY$GmW7q!V][uDJ/+u;WDVhPfo3Z[Lq+W$\mWK5o#a=
%\12>7;)CB8(i1-]DjoRJ[I*srTsi-B-#J9pPA$sb7^-I$D5qTaF2LckAfF6=c00#tNTn8$j@:oY.$g'Yl1O6m'Uu[uJR412(TWp?
%PR=A>0\\"L@uJ6@ZOUnN_/*Vb't(P[[W?"Q3Qa7?8!<SZ$J@$M.?Q7fg#e3tQOU5p#XW,olnWkk67:N*ODRl,R$YT2g\d_4VW]WU
%g\e.3buVnD`s7r-K5@k^FJMpX2Nrhu.n%5AAK"sNOR;)Vdu'?jr^t6i23:e'eKETt(@/"f[RDtiUa8p.)Fk*"Y!TRr&u0Z76+6<O
%obe+i"qHh!VT.7X+(uY'1:GA9Z8&e!Y%p@_MBY$aI+$$eAdMZQ3t5mJRbKl5gGc^'@r.o.S/[Elbn/W'Wg&<VZrER^%'be#-s/#f
%CdT]%;"#lC]9Il;B*H;U\WmFF_m_%l)Ig<VXGC^?H)B]>&DJTF0=Mj/S&>a##7Rm)PCN!nkcA<iLU/ZNSf2&W6WcKA'X:@K6V0tQ
%Li%NP!Su9;gBcCU4j=huLg(P<]nW==HX<buf7o?VR%b:u%5FAGMUAgd>XXaYd^?&Bic8p]D(:Yn'=t=i/E*#)9%TA,H6aqGS+hdL
%VCgcCJM&T5]JfGWbYVbrD1$Qm*$&BJc]!K_!Gj!PaMN(6bfPg+@<cY/(\r[10'V(\o+P-Vg2I1k-H4WkaP)c5=ejJ1VA:k!A8R&S
%7WP6"!RITRYB%$j4qcq8.UD8JU;pD_MZHpN!MK_J:,U"X@qqn[]]P=0!4#H8<$?!$+V<7B")?<b_c(+R7*e8dSTUM^Y\;P6),E=#
%9nf9#D1^9U>[>4RRF-m%8]oK$I4?B,`!j%2Ncq.A/Jj4<T1-.0;^mT9M#FDId=s"PFc6OPL=)+3ar&ip3UYE/g18Fhiep@`2?4.j
%Q49K-V4pth"17%U-)&/T3/;E:j1c%q*LT,[NLgS$-%]8.Sdd'Z9])&.+3;aT&TBWpPQc0&h!A.Q5mGTR_2<fP2.ea=,m[1SnDS1P
%"eB)*iJo5VQRX[NedrP9bDnFbF6,1:2X@S`QZ1&Kfnnud*@`$-0AOK]Uhhl>O#'UUD!BK0PDpD88Te%PAB+nQ0MHY+H^[g;nOB53
%0h^7`[MgVcN00+e.91%>AYN9/n`kpH#lUJm:mDW!O!EE[g$m1Z7s1)XNHf59_5JD4O"L=)d]rC3c.Q)X2@?Eq1,sGp3R*PCD9U3b
%)EV#U&4aaceILQRfI3uEQ!eDH>!2JhU[$&s+c_HimkdsDQ!!B([<*7C`Qep6C/jQT'_#*N2G?7hL_=>/n24!q3G\6U7.IGb`F^h>
%*sT^XaX6`QQ@iYq-:+'37`@j%fThDQ9a$fd_a/Z.R+s%;i.*SiZFlrAYu)_=/]2&p^.%#4Yh3u6b+fT-9cH&\,/[jt"[^W)Q+R0[
%(F=?s@^0WlQK3%O$1+%X=XjqH1)ClR#88*.Yh6JhK0(J>=9F_C<ghUNqLmC]fXWWmNeiYrJH[M74'2&`SVPJRi@l^#fXW`=NH.b\
%-&nQT)E+9+,ZhU8i,CHPX5U95QFn[XS*(.#+JLu7T'Fb"`*lTFRV5r=ag@p_Q2]To_rf^-@7eA6HlhG/$!3#/dV.8a&UnD.Yq:N]
%h,JCH$tPLI1W<e/kp[5;MSjT`2&nNW<60^OYVB"S!-U><LgZ?ulr7uW-k7P_C2-M.W^(\dCeF*m<&GXRKfZLi%>PD>KgbnH%@]6M
%l"W1o^0DM@1i2'u84c=hAeYYTjXL_/V6UX\%@\Z#-GX#nU?@G<Yti368/c/H67>>9NEgK\Cm7J$7Lb-t_fVj4'3Q\")An:VZFgAW
%'fqT0Gh>,b#8Zb\>)lE\%c^uUaVd=nGhCNdpr^:3UB]"F>XAjT9dh%6UDa]5THJ6R<Zj;oFHYWNJ_4G+M8YUa"CfjUKtf,LRg#MF
%Y7o$>(Ftf`b/8rc<PO1N/:7gm2'+[@8@R,ofS!L5mL$4Y_!!8:qV4><\S?>'6u3L[kXXnf`l?%U+u[`<16QB?CoXlH#HU=0Lo)Ab
%(_ReA#Z7tZOOum]b(:7_9g;+8Q+"B$KJ(M,,e!K&-=MbL(9CUE`9)adEE36P;`AW>F@(mq?dD=K`9'or/35'e>F\"NYf'uAm:gf#
%*&_nK')GJC@A?pH)<pB7[U;)6@C&A;'ic53MA8u43,I00hG>1MD_<P@'o1&?&\0EH_oA#ZVb#oXQN]5hG,8;tfQ`&tD%(M\23dpI
%=0OQUM1i$@?u*CeYq%,#,'I+*6u8G%`Ml+ZfP^',RFj?Wk7o7#_#\Xs0I/Q9RXp2<QN!L-k#a>d2Q`Df9`i;2@?OfN)AHDGo$b7)
%@P]io8h#C%ZOY=,2(H%Z>c1.b`@gbF)&8VZYUk]n:pGjUQ(/R]`MP)A.2n/&c.QdU#M#nEU5*qlC_X)]*>P&)1M44s;6d*?@X9oL
%@^AH\3l,:35b'$u=DWEja`Ngf^+Zq5f8@P%?9nWuCKPE4`$3II.,dBE'f2*2Yh3%\A_,D9f^qV+&!_.>+`(oa&*78!&OWouNJid*
%*oJ%TRjIu7`l2PHUgL3DZ$Ai#'H%^Vl50guc`O;fgJm?F;\l7`gpl!Io.amNENs5oOG''&/p:B6>\rhZ9Ef*7Cj$fi0@[Ma.+ZU(
%C4JX-pj*eoRs!r4<T@PpR,?,tfRc.Xr=Y&`O3$Af(7TcEN'K<Q2LLOpei59?D*rkdC+6^Ge<,qp?sIM;2<Rup25H73dNDT$fX^!4
%>cCB!A>iI/:kN5DV98a'rZfTic7sV22"2<O44s".go;U(6h[hCE^X_kCf7V[&3J;$W6W:U<;kfqfSQW**=Y)/=ecJEc;a])JCYY"
%?_Xb\)h9dYFsaa7.[LIUfO;!?%Bc[?YVS'P.0c:%,n>lc%<!&fO&R:T`[#^=D"sZCXY[,%T[%pB"?$Sj\u>gKR%V*njBpB'Q%qm!
%f0Nlc4JcD[+P/0TZ90IsGG#G\-<;+a+CSV%f*OUigcOYAQEHsc&[+KOccF_XU2o>\ck;&a^t3Q*JjS1qfCXNP_NK3S<)m6p?AGf-
%SP$O)/X*LAYA*"eZ6R$Jcl?:!GE!^N.^';**@h&a7_;,579"nFLZZ-\Y\TWFR+Jsi\je5I*gEI9QoF)6TL0"t2pA@%j'5*bP1:"_
%:$#e)QB^^R4B$$WCRC-V]L6#BAVP:i,?uV]#?V49-[I1[HtutW7D.T]EF\;6C38c$[Ekh0qq/3Z)V[=(4fj[P7_1snAl.drT:7Yp
%hCV_'`cJ;&X`7/NA#3S8m1?3mlVp_;Ff%%ANiKjl(r`gl,h<"=b.*D*Zj*ml.`V^?0W$g-haG@b_d-*IbUUjU/P\.;.h/@tW/3rq
%:IQ++7;2Y"ZE,p6cB53me=[!mRUHjuJCHU1M.M)iN4%[M(r\Nj5[b+2bq(lK*'ea&/H`V-isZB%:d\@&#F1dQ&Zc"4VSU^]f!4e"
%CA_fJCnUZ(I!'7!0V_^ik)*Aq=/1u\q8TQAeV<ob6W`;^^11:Njno_@Ob'PVduh4MghL$Bo2_Dc%H@aPIg3"Z1PjN*R+7nA$e:Bi
%ThFIF`+m5e#iJ[5eY/D0C;=S>Hno"c$=mXGiue]-.B2:+6d$!JZtdtd\/H3cg;2KYXD1/U8K=U^,_bN@Y,(>*dHOj;<<qYTBUnA'
%4=CV:%H/O'O$K]IPscUf)?j+"$DTYd]W!bVFWh(4iRAI>,9'tsW/eE?*T^5?>UM%HC'K88ir.'\'jXEeFm=*]\eq,j?;uY`@Q>b)
%f[/,E>*4YH6W<0TbPEe\VN*JJRKHKdR_c#LV2j*Qi3:_Fmb:4-<YsINPZgCNZkT!u3"s:`LSW3dPrVI4#,6g.1CQgFks<[8e>A^"
%!i&fr/]XS\/c13qVuqslX.uU,"njng[JEud&2fFXa#MSubZMA%-F[kr%RQ0FiG0]G$)'h)*75HieA:(o,E,;7Y)%*<.LFUuMH:"T
%%STVOr\O`S'tir'dtn#s,SZLV(!]/dSrPt)BPu0AltLTL2tV2cQ%NG,Vr^Gb"\6Y_io?2V-$^DDg6al3N''i7<6n1,Y82O=X<R<k
%.$=FaL7UR]Z@Dd^!LDltcK'_ONmu57aO:?NF5Z:B0L+MGG8^ep@<3oA)XJ$W33C]pfYV*5ctO%Z.*3<I)JB[:_^][F"f^'$%nNrc
%5:CIh-=AlY)/gFJ;p/3@HL\ohHE?sh\A<2S<JiVr=.>o2Z)0>7XPQiGS8T+-V!6YNNC4dDND_C5#+A#4Y]eR6"m.E^ctf$5>bO-;
%16(c[;%[P#r'7)SNA6u<32^7['<%Ft,rus?%rO`l_K;e'$s/m21o^XO]7Lr.g.EAl3n:q#6)3D7bd2C#/e-uQ;%[MVk%ghK5tdPo
%<lrcjlG1iIq#hR:3]6,9%4_mClc<J_fVm6NkfF0s7Y)jqXN7]5F2j<iWVKI1&h]0oYZ_-$"8G;jPObL]CF-7\MNc%B8i0mb$'`_E
%'uZ(Zc%7&eERN@'Hgq]:1r)VON=(lp,/\:+9U`NUj7imQ)LtL9T.<MPDPkFHL5IrhpduPPm;QXVO`i-H_anE$Hg;A[KQ$[T\^Vf2
%)2[JmdO5B#@p^FUF49Uq5oLFhcZmh<miu:ON?=]m;eKPD'%WU!,s<0t*h#!%n7VgM!_kIdEN#kTX!g"idmIrB*1[Dnc>fV#4e4TL
%1]o2eYYL0)0:ZbJ'H2st@\BnZU[q;%P3^?U>bN\Y)4auBO:e7g2_'C+R9>E,(S.Ofbe]uiH)T2diQ98:Qpuu<]o?!!@mHrXVm=="
%L8+fATiMN<H<pV@e&OYsO)Uh%a.e#]1"#cc&Q;;Y:-AtCY<nsl+1$cEiDb+1">`G&9Pk3RXq@BA<NeJNFCJ[&L5:!V2+D[jWfZF4
%=]18VN"[tS:,PErZ5lIWAR2AKk[e-qY)8>G0%LW^i-!#mR5E(Fi"RF_*uZLV8R,B:6fV8Q3R6TWEI*gn.h+1jeErq>LQ9oC`3H"%
%FcrQ>MMA!$),9oQ)EL`601UcZ0i*H%(_9B_XBP!aG8n\E^0boSm:bjrcoaE<kn,I'%bbFn=J&*75nOe<*N>rNSI#aCQb>I.N*56^
%')JP?[.;UuY=h;N?^UIjgjcI$hk`j%qmHF3hMDCj$JmudoNr:c3\K:^eh&I\md(]bWVl=js*Jq)hgA4Kgj&d:^"Y&TornD-mJ`+>
%^AZm:-dN"O*WE\-UbdJ2gUd+!I]m,VGcQ)*@<_<^g_m@o7F)Cs8*b!YFaMl\Nq?o0])AQl/q:fhNW2-)nAf<u]RH^J0rgLfC\J=H
%em>8d]/MpM?GF0,eVZ;iMDloo3PTdIa*S8!U\-7?0hn,-B7jgo3S@.%UHoRm\@a.>4aOlm44n>`pWmbMGIp.F;!G8(1YDW%ZSc&1
%*;6k"G?c2Zf(YFfm;VIh[bi*d)DnTtqe!139\Ppp4reG]p,`/ScM>-u=.S(tmcKil$Q$JNr2+;=8"K<]kL[VGj\;&+,P<^jEVN`#
%2f@7c*VPrg?rlg'RaW?pN4\,Pe$c/HP=DYJWnZhrR@(D9QdrV(r)WJ$pRcA`gV5U\<4-ba`TFNDpWn0Uo,#NoX7I*db'Tc:r=_;O
%])C*l?u:N`XihVlh>[5p(`[XPmI=T:TIja*bA,DDi,H3VGrTU^lufe+I%j);kgJY;b$b6W0^=[f9p`WY/L[]jrrTZ24$0RVo:t(D
%2J7K'S"qB)b>Bm\+6EJ>8%G1!]9!PMcN`4Qll>.+-mIed\bTCr05b$I20=;5S)@F+5Kh<tEq?WmUn6\BffI;6C<i'6j_b5XE11Rn
%Lrhm-/U)[0oJZEsgOnBJ[Xi<7cT;ShZI*oD[I[U(SLkc$Rap\ioqaToLSq9Ads*PX3In\sfoZ=W[LYm'DS*Z2qR;o0\[fQ;fl")>
%DI;CdfVAsN[\iFbgm\L04/:*rN+"Q&;ngol2D'"K3BtnjcLN#E@<hB\%=3ZcS_s0:5I]-cbs-PLFG!ccZ:7t!2ilAFE2UD"g":$u
%CJ_/0A[Q;qd+N_oGhR\;Y6UD<Z>2/PMJm^kCCaJNrR&.2Dt7n.?ZKlJo9qUWm>llc^N6(QQBt;0J`E'b(&r4KO2Gt4<_W:6\2_ts
%C;t`A1ugfe/n;O2FSk)GbqrZas16h7d&Hk0jbB`KH7jI#S9W5mm)]>cBBs7/M5KCYF"o2cUoaV+[Y56i$$4W-JP&ipUaCNolZL6$
%g>,\]`G&Sog;E?'Dne)G@bR?PV6%KVk<kF6pYcb*>Eel4Re!]6L1mm-6eJ1DiT7IUmK2mmp\^iSXVXi::Wiukg)9=%d$%BWm53^+
%BCgKJV/J*_nsOk#SCeg2QFqS`I@H'pCGokDKI\pH*kbnu%!p+7:?OhN%!D0ONEM(lBVM>noFL=B1^J:H[^Wl(9tmW-]X5TT$n3[7
%]=iA$U]4:B.;%#+m-.o&YW(bTFrP8)'6jq"&r&,J`[:&1ba5TX>fPoaf>K4HZN.YL2%'o!9tnQqXBLTM';o>l:U(`&$jO^i2NUia
%I_G<@86]"2h;@8q:!GFOe$8i\grTM^f`$``7&OVVR;tPYUQp/r?$J8'o/2o4%AucBVIi^)fQ6sg)U[JqN1't>>]/':b6GtaQ+_@U
%hs#!"HC_0M3f;sa>ZU`f)Ai`5hS/$:>k2d=g)V4+g0:-H:4N2KI5$pjc@3C8>m"$[FI[GbJR@$)&_")V1_Bm<IH0j$p7Kp@J,6R&
%T&3ZLZcUV1.UMZa[t8#GVe7RoPJ+\I2E8!:r0#DPQujhB,n3&`oIP,Z2P6%XNh3W2[aWS@BrB_O2=oJb:%YOA)%QA0["Hm]Wu^Ta
%n*N>8gN)R8D;60jS8(snZC2IdB[1c7g5a[oXCh+9rD'tUDgZP.h0M+qio44BH>296_-pg"j<uam7#A+`ptA,"ZR/-GWHVK>kn!V"
%(?@AOboND72Gn<g[IRldCY7Un]0XWK\%C\gDiNK4Wa8`,)G"kuVV/kZYn?0.Y?q6,:DW>HGJDO=]D5OA_$kkI[V!Ai-(=p2PU9aH
%H;66%@h>/WU.g`!G&&uu;._e%@$<6#2=&mg]:q+_YYCZA8gAn!9"(<?pI/f'<_pF_b18-=U,6T&e?$e7H]DH*,9!(Tk.W6b?^/)S
%b!4GnASW'/;49=NH8_@_oL8<5^*qI9^2;,C;,.gU-GgRqaiBg@V="tD;5V0%1Q=RUNE2#fq3KJ=cYMT73<'V4(rDeMGi:TK.=U7(
%U\Cg"OM(V7g;dp_^RF@=VhL9iP@U(!,qiVe1,E:h0!_W+o6%0$(X1L=q78Ikf;<"_>8n>(F)c'*`3g(=l?lU$YA4+(<Ga@ic'5Fj
%?e+;>g-9m`X'125Iq1KrBjBF3FM[ulP+=')i-ZGKHlAjQC"/d`k0n!-NK-c/(Yq;:]beBUTC6D9)Y7mn_K._r!j<=tE0-9-IG)\3
%Y#9I9f=ta,IrK.mr7&Pe>5m?nC\_u?hd3AY^UqJ"MuUIpr6Y:U>U/ENQ]Dm72B-b)d/j"pk;QtPkUnYZ7d9WU4$29tl+)(Te*!CQ
%*j7I?FHsG(e[.@/AW!-6k=HQk5iTt_M+3uZ;HQ`+E;qkeE$tGP9TAfG9P,iGHJ$Z"9b`d5)aDt>(lSgtkP8P=K^_nrI86=FdqTk<
%\GJtA6EjpoDCS_=#$Rc4Vs+5_*s._)A:L#IF_m@'D!bYT]XQc92q`)GC-cY)OZkT>FWW5Uco"r3:,C,Fg(7!PG<!hhYh"PJ1+*$K
%PPhUFIa[rB$a/[AnkJ;0IQ(oor]:L0bIRRqDZ?72q_,]</AQg\\)Gr1gO(YO&tKW(mn@?cR+m#O2W%/Cf%fCL\+re)epYsMqROjp
%.Wi@FS*qW*!=aQdUVl%cYs3(^V*3G1?e/oFmdBE]2G#DSn]P.sQ;#OqnF<WoPA4=KDmqLc(T5T.PAbO/M@"0kN2*996ETrm[Hc(5
%Y;c7Tr20.u]6iS4_Q>C$GoO-YkQMFiV+KDOAkGE;+8bKoYg_jo/Jao&h;WD/h&Y;LXZP`h`cm3/mCS!Z]76ig@'2P[%+X#n)=CaP
%2HQHo<G2=CeQF-UA$/&.FC?V4?ukT*MSC(0SLSb8D6(o"[&O"rmf)2?[%r>^O_-I(=\Z6Vj_<ud-J#$iVQ@r1mYT6YW>tX2XQka6
%#G%u+6Q=<OYeZ32>Dg>PhfEVK,k$6fF%V5N"ggkA0=e_O>k80&rGbYiWu#MYH-'=]EqtS/<O7M@7C=i!^W[EGF2c=-nM41YbS;d`
%\`2^Q]B5!;\`0I]GFAQ]r`k"2=!1f<75jeR1Y!D>=UWQI9uYN(;'mpfRARq*EOoQl:#`K,*B)=#eSt(\Z<hbQU>7t4oeqfQfZZ)t
%Rd_3WN/>Yi_k](8Ai)TkFDm2G5[q<tbV_6sjIF(D"Zte8_DE,lj=F,pRS1[#\BT"3mHk]la/A$GcKRt\s##H$V2`1^p>G[jlCIqZ
%]ek^!;Zk%j4IlB@L$!Y?q]m5N)^L<r5&JiL\L[VuGpB@])]E6kAYi%(l$%;?SM>lHYd</)P"a-MT.O7BF+1-=iYg[h)5PaP<A/M4
%R'\M&U[%(=$#TB2BR]/N3Ic_MFddRc\Vc`]\+rmbk5=)lDWJO.oe*:"\,<a%A"(J:QRGH`CIAi0p(Crj;NEP&8H2'L(s-$D0b&o+
%\K55n"lO2$oGC<V0\9gYob_a5`a"QZf43%m8"&ZtVEp8o'ABtPa9QO15+@8tg!6h82/`/[%D#8C(Z`/K43$+U;OXsM$d&WkT`HWS
%ZT[TT%m.NIG5>E;AEY92-i!j=NVM9NClH!dXjcp82*D30^$>;0JP9gd0<9(eJ40@RrTD-4nlqki<@_G1n@JgA^I_Z'B*pKFBW^&-
%%ecC!K[h]U,r8(&R_sbQCX3.!K,,A9bo%%\8:6'5CW2e_2!5';!]R'72#\$(#5qPZT3$fcc,3l8f@-f8S/qIJb],rfW=c!q<I:tn
%YIUC7aiSe9*53=KB1a/XRP\Tmh7]76@Ifu&at<JgBn<tHUm%>g'H2)ApcPftg<9l[JiC<AG^QX(14D9KnI7U[rYJl<A]gqBZeVg6
%DLRoKgR#JHBl8BgS"Jj*Vn)V;mW]E1Vn!!5nbb4&$`CNQF:[sY)P@i-a1;"cmOrH_K2FTmcHVDkoAeVU]?JN\F8snQ>Wc62\OOi3
%P2k=LIg-C)bo/>48%LX3_=m<$h.2/*TBBhF4P):>GLF6K"5.rpQ+6b`gPc?N:-DZf(AO8LZNC)<Cb;+Y1?O+GaT?!XN\\1ILoZ](
%pWdBS^%L?%98WoYmB,gOcT@+c];+ng]d?otX`mpCY$pn[M-o*X[c>,*%5)]?X^g9`jXg8s3&))Mj;\a_\2#;8Au7N:RF=Yb?)skk
%7%!CiGn#-77YemPp/Yg9X5-G^W)^U66.S07m%c:PNE\.q/)&$.,$^/%TtsT*^>6r)58q",c%B%YQQEhLJm0V_W9LliX*n-QqL,PE
%i-Pt]XJ3S6ZhCD6j,RHmE)2q0h13b;"X$dm!6*FO'n8)?GZX0:g4TkRm+(M'FS?:b))bdF9,=.#]3OQk1p\glr$u--/+4.Ba`D06
%Ju#pbAON-55r6-N:9#RMj7<>(hXO5kXaLZP8pf=#57Rnrc@m0=?8Bbld9J#eb=)@mR:ntNn5KcaZf[oCS&3OrWOX\SRHDZ[$'F:4
%S5uQa+].F/L/i<6p>iDf^$bYa]6gP73K;3aHe9A-m<9K1"IQ4NXF]m9Tuhi^E/EVW8K1FrM5dm+Rd;r&L6&@B+hYHGbc%H*FDm16
%#1fSgNYdqjjr<B/KD\r-bP;?&);elN2ot.QrZAU.:88#=Snr@DKq?teB[`8[E7.4o$o33B)9I1W4CoFBjI%@jb[d$HREPq$j^=h]
%G&b+u>_B"X_]KXqO3[7JR`8q,,&?qkHU7HZ:]GLa^KenV/`f3dXF""<dSG&"_=6\lF)A4LM-6Zbb\/uk9^]8dccEUR$]p<O%?=!n
%&!qN)bH\:XWC!(`aM`Qag8;[R#&Q49okLo@_)(7aGC`]?Zn)F1m6okk8M32licK<7BFl=I2/C(JQF^du78kj9j0O-Bdi#<4LU3fI
%\\nYud_>4\^"K2#VF!?^Zl1@cg#1IV[9L&mQb8cg+830M:?=5d97q%(D0`6d+(c&H_sF[aR6US,g%(t#L[^+POPj3XG(6mJ,a6(J
%Nqj&EYtp))6Wu?W;Wl9g4YCn=R$L+oFK7Uho!['6rAF1Y)G`=/>u.>/S5,Q3j^7Wa(JKF&Aa,?G]jL)D]4=G`Mc'-GfqAA>\-m:0
%\$UOnZeOkKJ,.^r4ZhS?RJccQG?Fe;F(R0V?>+&"Yh<_B%hD0WXf(Q8HabeI4WePXms*]M/bsOch<T3-AOG(LY6KX9m8i"'(b`8I
%HgU@j03Sb[$H6f4?f3SNbUII`G:qe;$[SG``IHfSP4S_>Im3kdk479TE4c52pSaHt?hXf?p\>UPh6j*9T;,9\rPOV(BKRf"J]u5F
%`VHXr.c'5bJ(WX2ZXR3EfkYg//ZH%Y@ge:+X`\NQI+cNL^%L?SbEgnXmT/_DiS[)dm#(rEd<e(,au>A4S42HBj-Q==5r"2(q5[KE
%2HIJ?^AIM/s6$d2(]X?../U^>H`a3J\*pu\p:lJ,?fK,cJ%'EIb`l-_pT@NajeboFE6P*.m2,0Kpr%?X%/S_6h=52R3r<Bnp7-Ro
%]D]6*g%smN/\g[_*S>8C.$j)BYlBD<79/0<hYIUo'$1[^=.CVo6C;:\lW,"fhEi9[dC[s1HKbJOl6#CipN#WGU05[Y4DJ1!G19[l
%Xj_d6]mYHLrqJWVZoI]`-u!r7?BU#QO+5*ITA[]s8aPPAn\:J6-Q22[H0"j*lauj:p<)&o[+t!>\,W?iiZ8#Va])t[H&FJJ;-^I$
%7q_-!0-`\bg:ed^gN'Rn[@VMS[/*:rCbIeX"#!B,4_MT,K/=,#q^a!aO@CWmj.I6cQ,1%RFKkV\BCq,.L]Lh0alpg$oKUp,pc%n<
%lm6A5(+fmA+A2d[@aFf>S6Ze"7hj4-6D(ZCR3!&`r:I/^B;]O.UhDYi+3)::QK`>pM_7T+UrA1W(2J@RDK>[@N'7O`Au//K/E,5`
%Lk6cB@dOdmbCU9]./)Z[TBMGIeIU(a\g1MdAu/;/1^l/k)f[TNdbNo:Kh1sR@X82tHq%I2+1!3kbJjB7VcfD*+XU5,LIoPjaOAZW
%;AI2KdC4h&Q#^a8MA7O!UGr5$@J/$%KVF<QSX;+]_]hjm/B=Y!]eE2tZ]8Sr.7ObI@B;IkH@l'R!Kg(/J-b01LcBBB6rB7Ymg4k+
%TYhq]br@.?3%b_]P^@$p&*^H\L;.:R9_,IdIo/h^:Q$#L/["FL#K7SNX7#DI&VMP(d!28Sq2n^hZh9gcJ<e<]SPjI$h*!1_<A^16
%ooA_7#o=<K??O<%cGpXW@k[>^?KOfpnfM0L5\/2(?aX(o$-T4Ua[/#r,!Y83]_EtF(L?[=dk57j;Lc0GPa.upm:!tNel-]UIsTf4
%[4qkm%7H[m;(%\KrRL?"T\'0Ara`^pm_@I-HCA1Z^%:ahjtABG(VS:th<;MTI(QDA/m<Np5?,$60/;,US^HYG)cf$*`KVB+Y;ad5
%E9ucaRigsd,L8H^oBbc=bqEp$MmH(0dJd1g2%D_iP1)OS;uS$8I*=K5Ju/OBN9X?%ro:)J(MC^ps4+dZ994rc@jJ,[HLni1CZ2$p
%mr1+\#JrgjO3Yl5?gS?b_KY\i0QZY8rUBoX)VM4EmreA-EXN5EiXi*NK:UEb!]+4"<rJ?'G2kf"NNb)CZ=JjDp0bVC:X%N6:gZ=Z
%8(YMk.!BUZf((/BZ*QM-j)Vcd.6am&H1F#*o$RLes1Q('bEnRq12GiU0J_)P_"_RF,EUNFM/a.-L$.=-f,jq]^2TJ<9cs-PW8`&,
%#T7\RT=L`C;+I6ZE2'BD>^W9QFc6:e[DF0r(\/t(C?8b;/HieSrrYB34?pr%#l!mTCit#0S8irp8./Qur',;Lgq2b<?-M.@jmBtB
%pg&#&gZ\&IoZH8h2lG@9OItd4Vuoh3Z#ANbSD%-Sk`34)hl\qKT't5*U>>,LP>n"@@^GlW?[M[U\=SS5U+>,L_&iC>5NoZS&-)L@
%(L&9[d^;#-'WF;UmB&:e>I!hdL"BYfpKA)cs'*5+C!hk#ZJhs3(\;-b;S7Kr%+O(G:=A9+[_J9[lg`:Fp\liED1,3/h"Yr?F3qh,
%ra43@qFKjb:XI[q%^llA$__7A4YF>=b59poJ?b(uCOlLT5p^:(KV)'7_(R9"0DrTN2BV04V`Dq-H%0G1_j0uJY4bBSIqoQbGL)7j
%-n=84F!CqGgPkEI:462\G5L#_Zd5Nm(3PNfh<9fiYtl9[=1.nLM.g^Tcp'biV5VubCjkN;Rm`KZ@T>YTT_RD+illY1/+8sUlRkM8
%)pO<g?h_u54r/jS_pN_5rtd9q'@Fs\/U_hlCYh\5^!K=M98D`%;&_86p<[9BBg,GpNd7sN5"=u/I\5;^b+kNb-\$K8KP<4,Fgksq
%)36O6de[QH3jmXfSL-@dq'K-b,$+3go?M4-n(mC&ZY8qN[,sc`lrN.bG:qR6Dt3"D[-RYYFY7Q5Sj"=bnP)/hC3qiDj$J]Ndb,L&
%+*MkS%i4?O*5?/r,RH)c&g+js?2%lc'#b>>&b!!^)7R'_)=&N[9`@8kbbs3q-ttO#.^eS@Fh-,gCh#$1Y1u,LU*)8DLIZWj4WJAM
%g;E=/(;TdKTX?lJ\>Gd#H0C9B8K<NUkuI]5B))r9WV)9F?;qbog2kU^,4SJ!Eo$-6W;E4,Xf4GUfHLuTk)-Elcs<lh=,VqTf\;(9
%p#n\gHb8WU=[;]8UCTl<7L+S9dB[r!>7nN6*jq:Da+Msdp1W5!Q47lbQQGsObJ%fY6bbU4%h?WK#7M(QNn;N[#OR/hYiqPS_d;SB
%EpEV7UHqbZ;fkfjWfa/#nH.U[3fa+`bX,Cae:9(:rbq2O7bN%$p9H?+SPa%p>Gq.oo>eAK[bVt52nQckfXA`&'I*#JcO\&$70ctN
%Z4gCp4%2LI/,eGI[>UW"7XO<(Ep`8Cc?Ar$^[fR[b/EAQ3mD8V"?AT;cdK>P00TX\0lBu*7"42XiqS4'gATjFp26f$@W50BcBS_7
%&oq5o7bc6"H\9Rdmq(\?YW&SAJBHEG"p`[oX$,mYG2-jT=PjX<lO4;sh6jMWQ63e``K6X8laP0j\G6!@HaK2SjijW=ostCIGes4L
%O()ei(,%g31(Ec9Zo?Ceh]0'Z!a8A\^NFkcgqB(-]l(U6)U[\-3c,TkZN"faH=+)#`FgV@h\eU]*V&<VpM*e(a^D1*_`+aKY1@iO
%o-k_tK??t+$:1pPN]o!W>!MBHCd>Z$%.Opf?Vd'28YqjBrj^]4HDNbcU#JZB0eT>%=k15tn:%-7Zm<9+@,$[CbRL0\`=!].BQ&B&
%XMXG2Z)mmY5&K1[VBf+[Vl/F1A%Hii];Sn:n;_n*@hue!bBQpD_^/TH*j)%+d8.:)^"D^M4M/:LE%kPlIA!tFg;[-p2B)<*[`+8J
%E3Obt094kmFq-%;rm<fb'!HJr@o(,3Un1W0,(CaH:3nasG5$oKAO.S@q]pI"&>"26oiuW_9tBr$d^$2dV:Gr#p/QCi?89`oeJo)0
%cM1/5Vr-aoO&Tul[FNPt0l=@'Rt%kILW,(O6AUXcTH]ep0a)6$lD-)VC(u&U#Xm38^C3":\28-(3.L5\:ij6)lL+A,L^'d7F0O-\
%Fdc9GO#FW1rV"'q,9!uU?$![#]j`Z+qF1.=+[)CH*)t`If;R/u\?0P1p0@"+oYg%4m=i@f%UA1>&8LVIgXb4hpn)U,4g>paE`Fh\
%XhChqS^#om]A&mmmAGS'U?T<PAO$un<3O2^le-R$MXS<lYh,\6WOI<Ee7rN+]=XV<n[ER#Cp\?3g\UN#\LEfPqP,ho78[c(#_5ZR
%4h[-"Qg_<mWpb(R`P"&KHa(-^@A,Z$(&R`nM_V5kS:AUo1P+(edB:bK":h'2[\7lLBOTf$Y"<9]]9m>C6m/#oWghY:c`;.a/?@V+
%cJZ?]>Jn:nH$+iVYDmVl#;Kbq4WL"IAub_\ApJ$6f%2P/>V*VPmjYZuj2!HAr:J.L7bbPhEFhj<:;-=LHh_#kjK0BN0&O6+jm$'B
%eCcq^n\TJ<S4-L/*=R,rrA3&De/KEG]#c"b1^liBF%[DN`/ufYk]_1fH?.TF5?c_+6L[)6:;td?VW%I>9)CRbNQrEX`N/m7g3*of
%Gl]KHNqV2]SRL]_hEn?i(h1,c?"$B%]\eidkt-6N*sW0DNb@lRcRl.38,+<AiDO6-V!@GOePds_*a^p\SFk@SMK4#)qjobKnH;hZ
%%B&$hf0*oC.V]A%7cumNE3OK9K#ekbLM$m17?,^R!CtT,n546?oc-]DOaETC:^smhUB^T2X6go#\'>mp;FsZIDKMHIAusbTpBP?7
%Jui!7]j)MiI(7sX['l.mH'6qi(AuYBUA\R"X9tmRMA5qf)=aNK:t39)h!L^k&G[m)Kl$/Vq;I9mXOJ5KpY9Y.`ZB*'NAp3po,Su9
%Mhlf0'K^4pWZCgPC]q0B-a'ATgE2G:X+MuFphS#HWpek2\n"mN.a!hDNoR#Z+s;s]a.hCr^3k2_l1N?$2Ytc`-r($GZb@sT%?%?%
%39goCE':f_K_G-7C`sA_9OE+.f%;i-GP1"4k+b7DX*1jWeI_H[V)GO-m8NPPr9G]1%s14AV+51`2X<CRkd[=V=us)K]1T`r$IjSV
%WWmiR;Ze)AqcoCg)`=I`G?VCUjYg%;>dBBgI;ck9NTK_.NFf6[o:p'I-;*7)(E41S/^utf]B#Omqb&E2hdQ2(Vt??UC=m*Da.n&`
%I:ul#^0c!^kk&2'L-(rHgfCiTnc^(<KN5Y!X_R_HKp2@5:XGo6Tj1#J_V#\*IJ!t49J1,OZjU[LcW_s(]ra]d[jk5YNE$=N*iRZg
%8G82B/UdZ<lMCBUUG&t5=m[2NC^mbpW1@6DL%):XrU">=:;%3a^fC]TpViKepd[@?dY=WV;k"]`d:/D.";R1fO1'tmh;.>,IH8=0
%g"or;$L>UGIPIjO*t1BH4Qi5X>#2-R`2'*bUiXAoSb38geYUNA4(Lcm>l&Qh+)EZRiKUNf`jKFH>M9u*2V[7>m6<]#r-ttHHK>:p
%ZQ%%^3hrNG4tNd'rUC7-8#p^rjQ?`q;V$<Hh^[c*d6TDi^$_<RYssJM;o\ht(8)d6GJ_$ChR-gg^"Ber5#7cONk/-olmW2'$^c>]
%%GGhR1gX=FN1o:d`0o4D8'n@U[En05P@*ju;n62BEO^jD1?ad+U3@N(GWb94G<b1$*7<Z(3g;p;*Dt.SH@O`N?<)A7RWJO!E?ST%
%g,n*Im'jU?;1hU'aM=ftgF4e#SoOF^'oYbuVo;g(<R'"Ze:,kX)N'Pb$c0gEfoo;mGkSG>_/k*,euH&0=RD'e>qm<V>i.#4e66sf
%NUe(6\95`j@<We6rhaF-N6[s!R."[hqWDas-VqP_4'P-KK/ZHN'.`GPnS.62c;`J&^t7RV%Gb0&?.6d`XBi$O(<5Z!`eA56*+@1A
%@+`X`s0]3%)fa*$(8AWS<@g09#NsVg5POa%AdC=?mBk?8Xu*5,VV8kgPf:+\e(K-)mJLkmp8bl94LL&HZSgV*[+#<..b4\1WDW!U
%]hZ="CB'$Vf'^"$lFmi.R[t,\d9>oLIMAe[nJp^1[a6K>F54;#mu^jV]CDMG_q%+.i*+)XgQ>@Wf8uKiK!itmbB9r0JA9be*pddk
%0A>;%%re;G:9.$17(^ubbB8<OdB315`K68MHuum+LDPEh?_nLL]U:lbT3$uH_r@d'466im8$0].#=MlOS:2`g7;H\k4ZH6L<r7Qp
%V/b1;MRC%3(GAg&XD"BKY>LLgcEI649O"&l[#/GbdFkD3UMFg;/QEM.a_o'<3:/];gpNpDd`0G)7p3K.*+u_us*c9jo(ghF2t"Ai
%s7tLEG;gV!=.eAR?5u/ahn-5Ls5`_H-TA5W^=$jON'9nKrG!q[oZlI*%j*on^:a'ua3UA1%M-%sosN^lG/]N::H`X'qTJ0l:%,F-
%]0@lP?bCUS@'hoi3k/HXB(>;Q:PMp9nT]?RX)FR\hMXE6/)C(5[T41[52SNsX=)c[(Cs2@f<<t$Is<qZrT2jUoY[f#9Da>hUSUI"
%j1QBBP"uV?=/4*u/H=/qr(Z^KeK+,Kk)"<Z/BrCefAF7>ETu#r_X#[C>-3#3h;Z*YlgGVXN#),*XPUU1\:3i(p.k,pp=K/e`R;E1
%oBo>agfs,nG@tQ6DnNBBrnuCSjQESE>Q0gn([leJq&?kAn^=1tT6>]&'`Yc@lft848"V?ib's/&C#ddBI<g\<g=qD%A+F!0h:Poc
%MSH^1Z5:3hHZ/.@GkK)IZ^X2:=Bt\"g\$iWiUmGZ++LkGGAF8X!WVHA=PJ,,-]du7g[0+8rTr]/h4Ga,0DDVsq>%/ON?8[tSnq[1
%'b0qIna>GNY]ri^p[u/;V>f'/q`!q-]mDiss7(Os9lH)9_PQ5B,QGc=42/>gf';;Cl_<RjcTCB\d+c:`?+JcD5-k4\rj>rh43P>0
%`P/_<q^5G\=!$2poZc+749i<'p!MOTdg,-[i27Og?>mTl'5W-oNq[tK^JZoQ6#up&I$V7`S)g&&]'@-&LG+fp3^@%j5OnYqT0?Po
%h7e)UrKA0b%.T\f5Q&I3YY+F&DtDkI,5uTB_>6=nf=a+Y?VC?_Rqk73h1G*J8&Yc5cF`W)_:m.Aoul1gHD<Fnn(lh!jk3H-RdQ/n
%q`S;Hm4h&3ji?d(hNb;&?b?=N[5noCi_PkAhm9qQjmL;?q'#QFC['C70/lpUDL_WN>.ab/B?SEZ\)67"Y'g!2ddrac(TTV:h-UtJ
%I<T>5Gg(4#rN#\@Tg'gW5HMQmDnKD:^0>ot^A?$BpFG',P1t2)p93hcYO#NgM`uOXF.0hu*g@2Z2LaK^HKk6hlX-j!I^/jZoT&UP
%9E>QQn\N($2nj[qr`,EZ+N`>qG@-@0^%CU[q!`OgNc]08-gY>j2uLU3[8G/@k:7Z#XSoAOAN0D[hNt;"qN$OXa2,H]n#`c/A*!L2
%)p<m3Vk`.MhRV0tCEGouc^0!R6hV0s;sgU*:ED.%J*_73gq.QFpZM3b4'sWlH1tYD&:F$$:\WpEl91:M^<A\)f<-0BZ*K_/r31A)
%ahi?a?Aj*urIBgN`nE<Tl=)K[p9,6kqt,f3h7^3nH?\]0QV6QR_4.4WiPem3f<q+Jqr-82S"'4FT-aNaq0Jl^bgNPigGb#/k!?_m
%r8d_c-bV16<pDjG52@Y7cW]61&#6&CLX5b7qA1f2GLopV++bFB*rZS&7+nrA?!BDVCTDHdSD8GiRVU6$s4-G)I-U"aT+A(Xs"`Hf
%?gdSo&!gPhIJ6laO0<K3)]Ys8*'=V[YMMn/0"p&nqn0H*h::WJ`fiPk3kneQq>@:hGi-?//;\/G^\c/So\p0a^O$]u0CI]s%dX)>
%X..MnS#(&,ClR`QXtID8osU4cd^sX_X'<+fi%\es_.2rjnqUuch=Z+*rG.[preHilgXU0jp6NkLm<b=XCY/"SqPN%nNr4b8I;PMB
%(,+=n3*%4"q8V5\URblmhYK'8p()LgQSs;A]V<1'90Y)dqeB]9W:KQG@QesVFkQfRnGUeTiN&pTQ'JVO'd`a8_lZ"%jc`[llL"'/
%IJJ8eT>'+6^#j84o^,P$oom_Q0XOpZLFZ.9nZN2Sj+mV^YHrN;9E4.^PqQFrKCXoZ0kF?#j3M;<M^uH'IjQ+1JoC/EIC\.)Y_'/l
%\_GQG>O-!NC\;9.reH+`<4U&lpiEifN-iBPe9Y0P803Bgf'fm-?N5Sgi\%:iF^FR.>_AC<-H0KI;J@pn.t-s<doRs0bIa%#iB<4p
%P.gM8Vt*W-^C>OK]:9\n70PU1bHa'0T._T5g#'L?NU)6,G,]i4]d'-[6_OFd:ADR'`Q't/-1!@,&c/Q@3?,i<WqXS_[]B=iGB8go
%Gf!*)T%ob>kC47mC&Z<3;P%(l;oT#"K%#IpWFH$qT=B'0j5n5YiXZmQa8>2:1m^#>HK9P.C/fY2;SO9@ZE=`,CSr1e.D+\:r>o=s
%?Y@>@>))a5Vm:>'q_4\d:KIA"&'D`3qWNm7';iuZpPLWZ1*T)N5M.I$qd-qIcQ4q0F`o&!Ca8>CeW>c3F7`po;*Ko-9=f69/RKim
%s2B'Y90N@p_UlhXrD8geY:mS8rH3U<nak&,iZ,09<;2H$WF,"`]2."-Ies#6ohV_D?s?"I16V]UI9+EFWui,7I/<6u9)#7XMecN=
%I_@4X>=HPfa"L1PmSmb[)fKuV_.g$#io-r@mb[g"99BNf4Sn'XEmq([a1P1a?[mMV?eIMgq8;LL?iR]BD:8"PcI0o8lLVuST8&gH
%DL7<=If1u[GdP!Pbj2sWGO+Gb_9lV.s8._``Bj1i_:mJb=1=N[S&)5LdF)CYgg0;P?i-i;\L9^+50V3a;<dGfm!7]7=-Y=oo.(<d
%H#J,8,@]E4)giG:Qe`S8IerWU-+k&tW'Zf2J,!@\0+CZ/'VPHG_b5WGMi!((T\`#qjBu7T+oh2.4MbRAL#H,0*PT5X6,f_i*\UI/
%/\A$qe]]$rGi#kBf2k2>I_D8!?9I2)c/ijZhd0[hk/t:j7:iP=km:Wq4fWJn5=iLp=FKg7g+I^^#7kpJIY+Eq=6]&-P?1E'^\t_\
%p;JkR0j;<5BkIq?dK`?ah9CS-bIqH\/^FX?A'3iJnQ5*??[__.8uJ%hhqWk\A#oCVc1/](IrFKFNP!TEqL,!+Ee_.!\LocNQSs/J
%2i>e&J+^9WIec*.r:Z=ZO0c$mGDcCr&=oR9#_)R<l,qkDTA1mPq#,OY!q-n^"ts@!=T7g^7WD7MYnO[)EX1c^T9_\EpHL*VE+@b:
%Zb>8fn>RJ\:=@8TqRs9Y(Yi<Eoq1)Hs)`[kIu*>,>fl^r).,<e]DXW\\"5]groV1/Z$Ul5s%HemnG=_/h`TY<N?c"4nE-'6]6SAG
%90XD6^@7^6/G(!DSp,oZ*c9BtaO<BIUPm1&Oh&1c*:A4oh0JkZ90V=;pZ:5'E<'86G4LngQ((!&=T3%q3aDCVS)95iWI9Q25:tu@
%^V8fYGSU1gcs;g`g=jfjiP-Ia[=8(4Ro-G4]dXFV2n/\'G4fm(rV[P)m%LQ?ik<U/qMT:+\T.;fhMmM4YoDi?E4B!#l=6iSYAUI+
%*a\kL8)!KQo?#\gWTn)9m;C1GEKD_Wjd&H.c$;**/G56?:ZKTe?lBiZ`PKhlGLT?cI^o(EV>#6%f9ISiCnM69h"R:6MTsqREEEK(
%?h[[aNh:`O'>aM]hnL!]IJpjo/`6-uf?^m,\+fK`2?^5^]/\)cl)h+9or2b&[g&He=:g1;B\VD!O7.1>^=pu;qWc&ejkdjI^UWMt
%T<_#X(jY8MDmOY'mshq>[Wqc,:DSFcroom+_Y2dK/(WY>ZR\IWjH$MMmB1<_rh3P_Cq+r/jUkk/n0bgZT[Gbp%lW_M\Pu;lKkm6e
%T:Tu80-ljq=F55*=PLFGrO<PIbJ,Kl_Ddn(#Q"Afe&?Z@IX?51d=1iWEr>dGKr&^j^Xuh<q<A.o*Y5G:I$ZI8n@+0Q!Ceu7qmTWK
%]mXoA'$*^H.G!d2)^i=Jp?LpU)scrW^&%]m:=3Xr^$N(pX,jH4EK)/<\I)0GfY-jL(`E.an*YS3Z$4&`ULIGU3Ej%74kZh&GPGJL
%n!AN-I/V`CllQ,$prp@B,i^9<0/9-[<suKP^O?*<pZV"^H[643j\i;ZoTu,>45J5tH!8:82j`)s^]3Tq8WBe$Mf0;j\bg:6p;aLS
%]tU(%gUd:[8<pfXT>((c^"])j]6Cl&2[;SB`A/>.9,mEt]8-:Dl^ss/05e$T2O6NI'mn-Q4V;VH9YPk`nndF\QU_79g-17`]IcP:
%?XFRUHL]UEfVl:M(5a/^"0sHE-RX:sKjpd*SL!s]J,SZhC@=`!$HW&eJ,8f$eX_\l#:nV[Ihij\4*nWjJ+.,jdQlg$_:X)ufK.*G
%mbIN&T&3]JHL^Fo5ufJfGIr'9EHiuu`!X2fPePn$[^q\&I!b79cM6[e0$Sk`If?@/"b-;sBs@@03]aB,A=O@Q5CY4k^Nck6+'"'<
%KDS5bdO<4%/?QTh9(SC6-f;,qHo&Vd/ZXW?moQ-aY:RBA?!gaiIJME+p\dTTq<\\c-WaH^rla<e=-))$pK#>"f.#;4:]J+Qk=oT5
%0fp5dV^h<<ZhJ(fQ5.HRn,"!?hdK_@8?/e[IAVZDTE$,A=[iH9Y_AN4W2!1Ai"!NWc[OpKO3"`\Y-k9gO#>423I\1j;0/n.9k7ck
%s+n2U)70.QVYr8VqR>@3hRU5sGQ1`NpteM*HMmI)N:4I*IIl(b^A[J6[u*c%=$OO?s/,>-+2@C+cTZaBe$C.r:B//.YMB-<K*O&Y
%lX0\eV_cTRrngrY$a5!V0L@^rF8ORUAE(?$f^?Y(>O^1(^A7Z`^Ak7IgqTuS/+WOt5CMYdpHSK7Q#HT_[9$^[r_$UIgGnc[^V9X@
%a5:Tt9_7B_loP$mHW$NNSXqX2=2/Q4gfrZ`jhnS,B(k0QiT%8>q#+!;nZ2,,q6b_OiJW3_iqn4Tjhj=_mIgnE0"XW'pH69cT>1*h
%_s`o'A$kVB1kpSYelAp*^@_"]ro(rc:VVD@Hf+YiDb]\&h*&6.IeMVGVr.IHCX7G/K6K"7rr[!*o2gD<_YY/_T76aa7QcB]b1E53
%I^[">q]/V$^A#[7I[j^sArV<7:G9HOS\KRBr(q:uaSu%oRqE+SI.E9kqKLf!YJ/L-r:!EK7_8..4f+jds&sm;l6Z+WfA?;teOT":
%qt,NqkHCu=='lk1rR#Dh&+BMP97MET_rmW^)-d%]cDUW\F/DnW^\cTC^0^/DIHrE`r4.jS4mnBEH.i9Yq<a6XgMq].j-Pf(h:LL?
%f)!qelD&S'em<XlotUEI5Q$L*UZcj`VXM4qi^X>?DO'8Js71g:IW2_\Fq+E0jc@E>?]q5t!RXYQ@XRQA7)r*;p#*_(rcXar\Zb!_
%Y<RNLr6\#aq:-.%rY_W)?0/hHof'o!?Tm$0j!VJ=_b2*MqR=C"^.>KkGj-T*IcKn#I,i7srEq-PJ,8dom!JJd54b%@++9j__CV7-
%rnD4lcC_cKU^$DAf73@Gbis%qq"Q@H1$eh"rD#emU)!UIjS,^ag2K7I$q942n%AMi++NtL[YF68Gh-rnq2q5g++D<qrS$YH:YTMW
%?[q7X(I!04q/Z`<a^=r0dgmR6q6(>/p!r^c>qfXcc6r(_4$e_eA6/a$gmcX)MZr^Uhu(A.^\'qW])/JYIehAM]*Z^\d>R&J^O,XM
%q7TT':*BMOCX;t;_9X1"[i^+jmGEBY/!"Pu5C*8+e)0ueA#YfXd,09Dg\[`:e!K38rpm\-)a`QY]f1H>\g`2[5/.!SVn`2bPCiSU
%?[Ln(B5a;Lbi0VT*.L]KVl#FQoX3:Wr1,S>:Hs9nKE%C"].@Ho"BNC#N/-93VPLloUR-H+N>HGMIeU72msRYfqWahO^[TF5k(DDA
%TITX_R*=urO+7%IrR1unoUihqMkA8ah1r0ur;FB[n-)Li0>.(sS)sTMIe^es^2Srk5PZ4Dg2"J&b,[1Eq\O1?7QTE(qN8P_f1.1[
%htrUC_]Sm>V4W.bhRP"sJ,SsT5C*7k?[1[f5:FPM?[VZ&f;.^:!W:]!j/l[;qCum"T76=h^V'-Lf"^^k2a72$5P4FBokUb"RImo%
%^@oEZO+JfVZK`^4[Wi.Ip.<mVs7V_]s3$>\$a0hp?mGKd_su1drqlhtqHpu/re!:nkdNbNi6bcdb.mr0^V0QmKCmahIfA3M5IS9$
%qoa3_5C_a$huCs!YPm`&TDfl7a&ch74o"dkDcLYoq1]t@`U>nZiAVjkA%Vd7F"_t>S)8X7P&pAHo)8Jg\)J9Cj508(bk0W`5IE@r
%pWFoChYd$6?\?haH0MH?a'3c2\,Q$Z+5a<E5CVdeS!0-:eN7qerT3h8V;m8ZrQCTR<U9>K='p4<Q*:/FRu^nN`k+H_q5*nHn+1m5
%q#dtNWBKK;:L!e26)".gC-'qhO'_\Q%pp^PqR^rSM0s58DgoOjMVnF1[t"A%TDs_(qor4BpuU+6?%;jkX7-)dpMZPfH1:6ekC;%>
%rpdc'0nddjYPlL?J,H_;s8MCM^\Xlnhd6<0o?[GFI/Nq%^Fk0;8N6@4V@3=c[BCKMJ*FXJ+1s[bpMt\[4?-i%5J7#UhnA[5/"_3k
%s7M/^rpIOg"oXro?SA5P+$BMEf8/=3q`!F/e%`QdMa+lO`A;[!rK,6Q]7V.hm5N1W%tFW=#7k/:r^RLVGsVs"nsf[L`Rg^YiQIFu
%q7$+4n`R5)\E?0H-Q2FZCt/1DDr,fJh207#T7.;^iq3iCl/'^MpQjSfZD>\6_0u@-[pK%+YQ"<VQTkE:5QBJR^O#;aR7$KdYPd=N
%5<S?<\:=FCmsk635CWPYrEDL9q_pF&hnBl;UG6#pN?9-"Lsc6o[kI["\Y$Wdl\iOQ>c=L-IeiY<J+WDFVsis/Yd<uQ-a,`1cKk1&
%Dh$k%?WqB_qX7cp^O$2Yg;`hI55j71?[D&4O8dEQs53;Cdja63PNmGb@pp*:\TpVD/+7-N4]u.XV]VN<oSdcS&b>jtcHuR:h'#-+
%a@B[$5PoLt-AA&k`"e(f=W1']])CaB+.l.eI#coc(WaKYI/Kn'55G*CUHa6S<\V`rlG!;gT5NjhEh3J^Q?`2R?[qe(++="5huE24
%O+-uS769htf?a<M4OMI8b;;Uq2ZImM<(0q_hF6V?rS(F5.F4L=Rf,a/qSmIQl$kjoVf1#T2fF)FQ*:9p.n0F1pKsU7Wh03d4mc02
%IVFkXI4B6V5^u?I*;04)q>^%^s6J-4"/5`qa0<V^c\'[3D<f0QH%YOh<sT%\`;e0m03r@;f^&,c:+ggok"YB+gR`"7VRc&QQZKd`
%7r%`7m<B[_qe0`R,Hl.ZF,aqsRVut5rTo["g@Ts0r91olQ'\->/*j]^H2)<*\/Y*Hp(X6>:q='&%uPd!Vc?kY?`6]O/!l5l7W6"K
%:]BPQj8/>c(NQ(UCE;I-KbNG;Kq*$ZSRm<0M>o\br52p#q])k"IC@lc=#p6I'EA%,[_+_Po>('I*@5EBD:A)nZ3dujHi>/@2eK+I
%kGhY&=JOd9G0JV2#;_?Z46juOcV0YKGPmlDna\Jbj$Dtr[ND>.\a9o*1-T";qHi_+@5#m2e'M-V-,0Cdk79e(Sbd1FdfpPX@ahHa
%Aq0Y4Q#SOtFBYMNQJ4<7<R+\1=R1.]j,'VDqE$>pj*+t/o!hr(4E#RNl#*=UiJeKohl`D+2dZFFh;cgfX'BR9/M5PRjP+k-CLSRO
%R+oS"n!:!(>FXfc^JlH6*c6r796KW7?@Ko?m$6l1=6f1bDN+PV\`[m[rm&'%IT"D>,N"eBkZuh8FNrB>hH!<,e2j;KgJMRrl,GJm
%j`Eugm%=:/36H(uC,r'7I+[N*Id^P]aKc*n:"4PPm22AnS5\e+>40B@\_Ie#%.@KHp$HPclZ:DK^/Sk-[\^fAlZ&Cqc7D8!`gaqX
%]ht9@\:.r*\E/%IUG1b^Lh1'SZ*/^L4SpuTEBF$aZr?iEQ"Cha4b*0@Rq+aMX3$C9ar0kmFT8HX3%`!al17HX_6R?5UXsM:QgoH7
%Er7'N]]<r8FQD1]WgKP^4!%td$uH?lZn64)pW:AJ*C['7DUTU(N]?43?#ABqQoMu1%(gUcNbM,9h/@.frK]$gNRt>$'Cg*RpK",_
%:#]V^hS+.bI88':UENRoj>Cjk+1dGQL08U,N7/_^ORfp+US!`d,.$/J$(6#^g8=Qg3FNdm+EZ&s\$ao84nMtO3/f;lY45\S#>D6X
%@P[p2o;;9:EC\-,Nmjn%UdpA`g:+W(:=LeXq8]*[<u^iI:9rWP-t,54_KJ-a`XO6=IPZ`#l=8oP,FcYI;<,A]G1lLslS\tT(*l(@
%MVToZ5PXaJfO6N%C5E0h&D5Hp,0:[3Fq`76.MK)g,:APoNc,9F4rG$;[dJt)%SaA^qX2tljfnoU@I.K=ARBE0h6."$IP%C-gM3g0
%,$k]F+*guTM=ik]R^Pn=&#=rNJR"O0M-Xm_1c]KKs/*5H4&'YDA$$]&e7PafRL>IE]2"(99r;D@a:c*#N3.#5j_)+k8%l#OG,cRJ
%UV^"sGf4C>%LZq-oT8J-A=8Eb9=8YrR;VE$VLI3?R]=\"PiSjRbG:=d-0\nQa<mJ($*DFNYAG3PFL>sAS\ildP?ndd1@)pr7^2tK
%ND8=g4/dGX>228PL.7Gi1tfBTC_[DUZ_=6fFORNP8E2Sf*@J:(H9sImBVt2#;`[=N`QEB=^1Ze1LGiR*QL"r?WXIEhZJ-e9(g</5
%l=]AXT$^FC&_rApoor#bV]>XViV\%lBU?B&VIhT&g*ttl2k0#78B$66fC(-]@TfREkQ9F*],ttY_rL0_mO2^T4<rQig#`A_;jW"@
%NEhVp2K.L51$j45aGZ>Z=#!&kG4=niZ,(JaNB_chp-fWpAnJoP-E0h1G]?9eq0Rq+@UHQ*cr[GPiu!t6V@mPQK>L0km9r.*)WrpM
%WXkQ\BKp&H_9qYnAnph>J'`El+8iiY0fb`[@Q'??5Z-n?gHFkKM!^g+Rl_g<8k7_Y;c[!>`G)66C!=3UNjq3eT5>`lIf)omL3L/T
%9SGVh$HPMF@4KM>2;'=b$BlcG[l$lV1mk=b&"$LF'L1l>o3WjPPqd$nBJCe>"[VTgq^#03g>ir6.Dr%'H^0$'dm$uW-Q?b02<m(@
%bdo=N8Cc#_Ci%!,ornZqosh8*mq0ZD]9!L4E@P2uLoO0pj8qR!/UmFnim,.09..mX(XIr/]3c8JJAu?)+j)QWgI\0o(,/O25rKF,
%N.X.DD:8"&cb>K7)-^#Hb5"Q(U?-^i6.;me%$=FH^.u_!dt;1gKn%Z1g9sUr)g"bPcB9p6O9"9Alisd>+6]erob5H]CNoeuN-""$
%kYGXu]*[k/B*:<.h"87':,G+BkV7o,..(\NPa8mZA/a31QRP&=B5cs^R`nq?a!E,=q?7+uDRL1s^1[a\NILk+nP(hI;S(X+&(!+k
%BC-D0TuEG?D&TrHb8R.b)j:`3c0FatQITlZNcBA8Z1"+I.2#9tO4bC()?ReRB_NpbUT0XPN4A4.g[?'"KK?_WI+mL`KX)jpZ<O7"
%`(2V(9PGu#6p(<YR+X?"iY+*cLEpb$'/GZ.$&[P25I1TWC83)IBJF9,Kqu)&a8_#bE-i<3A'En1l[?p]2e)21!B8D4T1M\I)4"4f
%b0]YENmC'K0k-!W@;Ci60X8'`CakC&8Jh"Aj4eZFZ&tCn1Ae)B5K7nnp/rEbK\mfh^;q5`hAsiNNt'GAF3Rg]BqjS+(AAZOnM5u'
%&T]dnZB:[0llbelBm&)X2;'j>(,QU]-OLY;8k;!mbga1uB_+!rg"9-QJG?pgZ\82'OdG=&pkBGT%W3uTdO\JQT$99-+tYiG#Yu5#
%?A^BmP-&?rk[_B<CpDoaD"?PF^eZ:/f,^u6d$bB0,a!<)kmN5jFR=r'"/hdPL\*TNSdkS14=,D6eI2F>"'l[h@F=IA(fQgT"NBft
%j]BZf?WUQgMLoJ'1Q3hXf<"LWD3.ScRSum^G(2B]E&K1,O8V/9&gTGUP]N")cjWA3S=8eG9S<lp<N==ae_+tNqmO1Y,4VgQL^B;m
%&&NHZ](^8YUpKOH;(J\uP_#(<b`(4kG:*jQWYJM`Mj4KEBPdEtWR/)r-MX%*o)?Y5'6plbTD0tC\'KBh5uWuWG!lsE$sd]of`r!4
%)4sXOZ[!%gb@Fc8KP7%do/G5BG+#l$fb?Vri2kk"5'tReR(GmfC?c\U2UM_pr7*kYVM'@kUuH0A*3dUeV!>R/@O_+.Fe#/Y]f$%s
%WAiWiJmNQ3prHn?4O0#Q<ph;S:mTc]&gMVH@2-7*b!aK_Ch`Sug7;Q8;;inOXJ2Q7#R.*YXk?FNmDfg?ST$0K8RZE_J\"E6Si4kp
%d_,krY"cSk3ApP%N>#=OB\u\S]A9h08AV]WOr!I-89V&<->9Wb%TfKt]eStQ9fSQf]Id-=\T&pa%'mLh<^Vb)$,Tj3r;R1.JDbKl
%0k#lnH_>H?O?XB]QP(OG+B,UnEHr\-bO6RT*'9^(e8@5$.+1Fb$e#,E11!LHlKnj[CBC3q*jTqTh$.EicZJOoP0&r7>DnMBPOfZK
%Fl`+/c:b&?Bl8"1[L@8SF4/"GmTag&23!#&&,4A'YD$Y[e^d/]Ic0RMaXR"^_d?<,NG>QBoT<=)",t(,k9,KXYXs5O_:F%)5A48e
%?&(h*EdsMu@OesBBBsNXn?oPPTT!sW)c#cf)f=(7?\p&g%$E%]9;GUb";o6;Mme,_'URsS0"BV/Y+m;>?mYaIk9TlPUdCVNNHrd_
%[Kl2ST(gmt$HHCX;KdI0`?n>JdY*6iJ[,4%m3j(/23$O#_R(E[QL%`U1J$M7m#SUYpR!BN3.qq$V^B-brPI6mM.Te#P:e2spN+R^
%?1'8[l-1^''!\]c5qW)+0#o(l,M<CAgje<hGm!UN%qaKqpIKG(H:Ed9><@hsFB'a;Qg[ek_=9L7Ze2G3IX78(?7SM"Lk0Y9D(C;Z
%Fp,p'<,#G]lKuTO?^r*:4!c<QR]Yg>ga/&B1tmDffDVl:=8$OJ7;MJ5e?``QYS>q_7n,e_Q\sdf(UdlcL!Z-h-<h3@0c3U9X'M;%
%*.$'BXrDs4'c6Rr//;tpIi"f>2O*TrR/t4;gaq*@\RFXQ*R`.GS$Kjda*2]NW%<oT6cD?),H)s_m3`bo-YqBd+D&(mZIGW2Sunu*
%KmqFNB`\d0>GSPnB&r!h01Or)6lKTPD6=hlMm^u8I%-hCCPu5QWJXA+,2]N`+hp=_$)r.#E[A6Lf6ZV#`@l(kd,$Y1g9ags3KsHR
%1YEVOU6umf52H?$Sk<rDIa`q1'^W,YI'CGVi(Q'ulCcW>6Dh\Si@<,h9.er<eZP_mfr,Y$=c;!/T\M@1L0RPQh8@*cnIQU9d4G0p
%XmHso)SBU1)Q@-[5g_1?r)M5FLV?rlq`,fWfj0[pf*EX+K6[,mA,&&4L^Lh22BK/V&U-XPNS)gq)abD:NTCAb(r94Mfp[llmh1jp
%!t0H@bg=oNkJ%=^Jq>N+^iI`L9%iSiMcOT'-!ARsX+qV[aJ-i\WLl_me*Z;+<TCmaXpHS)=2%N27%$X*^/F%;/3]@VR7BOdKRaME
%A(.^MYrSeo+2Bk[7WcRbm:c(f[bU,oKBO9)8I6&9b>`7PmO1G3FM5kgA,HO&5S9.L/>@7>3;crm)^"mVAbpH,51X5,l5C]@<si[D
%[irhKA]N]C\YGPYKBY\A-aoFT/8FTTc>[(Jc:@2.p8/l**hpi13AE!9Nfs(nJJ[37*?C[Oj!<6e,B+&86gra\Eh0q[KH[!ZmDt-j
%aR1#/OD56HVWV;TjOL47iBIuWO:JgPZ:R@:2Z#?n\ueYg\FSEf!jr._j2<I2Q8preFSsqu_be>p,l9NEn?Pj#.@<K<ci/N\>c&G(
%+RE3Xhjie%8G_1RjD`R,@%kU(3/UGsg;)K;O\4&'9fFSO3:UYBWfP$rlmo\NgF9#>Dj`oV6DN\2rJS)keHLp%2Dtab4)^9iVO7m_
%npgLgc!u2>n0\1.fM7e.6""`*q/]PJRD.rb8.gViC^X#TUbl\E3T,dDkjOu.*-85q1aV1RPW3)?d%6-)DoDac_]!kr#h$1p@,*V&
%fTN$5rkQ8GkGjb<8/"s"]PD.::3nYT6P#XTY>2qj$0<"83_Pk4p4J_X<grVY`Io^u7-'Ft[[@]6+NB*3egZE0[2IOh3;[5q7'/Pm
%c^0bTHR[OT_cZZFG4R8_%T=PC?q.<_jHRPa%FX4pTCZ([nomr9`-;!Ic():pA<WN,YDCDi/qEkl>NE@^;Y8Ei`'R(Un(K&hX(5]l
%KiF_`Ag?VfaF?W]p(_7"VL/$7r8#Gfe2dR")OKP2ZUJ?EPoD$&@^6A2%jl:u,b+&C7OhXL+oVrsOP[CKjV?9'Ocr6a>uDY:#<@W[
%3-oa?_a1<UU?.:(JD@q9\<*bE6@h4[PXg]=&,06;FemqK5,9h\k%3Pl,WH-T#f(0G\ZpK%:K;56/g=Pg'.h:grFBk^9`o#aFS'NH
%4*i0NF&Pq%0gqK&)gp;;5iN3tjZJf*2UQ0^OIT%f>=,2()a_^H=h(<$Q(,U&](cP&:-;%XYapk#0"6kW!p/nTQ(tUWQ/b2P6>Q#&
%L=VCt5I^-.5Vg5+I]VJ.Kld_F#@=mJ[K<&l&Hc@04V[p$,i*;6JD9-+f<:3D[q"d._F`_efbOf'g8<hQf@d=^#.`L9*%+U'pcbE]
%/n\&9qLi,Sad@@b4??<U:j'B,0AE^"?sB6l7^tG#"@iL!/sOiko#haoD07gWK!:`VE`%"8]D')W&@ott<S2??"7ZoT"_7S.0[n0H
%7EJoU)(,f70&0rap-9e_)jAXT?08@%g6Zb!4@b&/MVTo8)%&\,R6PleP5W#A[+H>Il(t0!kf.&:%oV`=M\4?K/Ekp<nj,"gjTFp+
%>RTI65kkTc,8^n7?O#4/8*m$&l"I-A<WOXiO9\uur6Rmt9:?H>Au_HrXE'lC/;MK]5A8Jn`m&@`?6n:O&bl0APoTaHSG!n3%DFYL
%,$m-u[9ph.-_#dAS:aa:k*I1YJoJ/@:BL*AVNH_SC,4I\L4f8gTD1e50Df(?C4+4T3O=)DSLB[21e;JI%\G=PNu)mP7U&`5Y@gAq
%fKP`=G`rghQF;Shk&)R?2=X8KnqO?"R%t$'4!NJkA1\.VfU6&9>Qk:$*q/*"3*':!,MUGe#3EF7U%[-d5]$elgf,=OGqkbP+YH4m
%UP-t+XH9gk&3]Z)l]B^30fo,Iq<MQRldF^A&P#PgZ69kbRe7@RSUKCc=RS3ngZlt;P0B0(,fRAs*jiJ=D-b67Op\@D&s@!M)tL./
%;k%!O,&VAnRS\snT3*>"RNh=N?npOFA=BOU=pplGJ^?(TZ<c(q#tC%?<.ld4FBCL`MSEqCX@n_/g'NNaL,S,-`q'Pl^Ir6ama*-g
%ih@19C9?I8f-HaA2nDG#Eu\9c-7eT5=+!)YZpk9BL0lpCQc3g@k](d8bh'Q97u"oE#Kc,<DEJE;_M0k!9e%8b2ZW4=J9*t0jWp/7
%U^bC!]DC;fj5sZs0bLt'<<uN!Ql0@H4j+JE1H(B/KKuS)'-&%A'%;kFRncn0"h<lTU7%`Z?-8S[H%k<t??r\kT:Z!`_cN?>%jdlb
%4h9jKjSX3:Zhf)=&GhKiAq`=@5f)Qjh#pnK`OlH,_nQ)*U-YehKiKt@WBu],<TDdQGha&*0&W\F[],/+*rrNNbN9Ep<<UMb=-D=Q
%86V5G$Y;s9,8!6r8bk0]Zchu0(:\MC9_`Y=i:"1GhA'Y,:)R1g1:ir(3h]sASOddS,Ca`kh<DoXRKn?k)'dpC;bRVb1b9/B-UaK5
%)TF6L(4N,onskSD9_^mPHo(R41Vgn<R\%<a_N:Q,ES]PD?LmqgBo(dRmsdt,Q5\"rCk,r(RO7'p,+qjhO2]djRQ/p\g=K`PSQ:O;
%EU8$bX@,+TKSe9]i^grBhL+;tQ&?a-gBTB@'(U'b^F=#r5cWh_l6.lc$&u=&7!?L\_o3j!58L/;`QH7h>Fg3V/X/>kWjs_51,9&l
%%5q\sM?ji/U8&WZ31p7A%rQ`9%#F>JLWJ;n?q%>9@@HV'P6?2gj"oJk##5(F*@XGY`V0gq#\F_ra*XYp[Z@+):6]GX_TLZbI21Hb
%WZmZF>*J34ID=qfk,"PN+0<B1*h5L8qZ!P8Ot7#)7^`L*?$;J^j'Qc`,3memlFL8l83cNqONeL]7O'<9H<Y@/L#ArYigX3!-nZOc
%Ol:B>gp0!OM4JF\WTeB^b)!%-5@F&UEPnNr:k@u3<X>RH`?RASV:DiOiIS49'3Gghkstm(Y*_4R%jT)lc^@HV+gtFgV+i!rhKB.T
%ZZ0C=iJd!D%<S=pBl*1g%M]T?5!nJe?cHr+ZSb0Li.aAS72+W1o[8[L!0>K3CIYe8i\gj.F_p^c?OZFhOZ&EE,l`h%L><P$L]6!=
%^d.iUh,%fYh>$*"r)u.uJ_qJj^qQQM"jsgj;t<K6ceeb)1<VLt9Z(F*ZEgAKE@;=ZZC>LI0*p?<M4/[*AqJ-s3Rm6Yf\FRdWLHHd
%L*`Vt(lOlF`%NLYrYQfoRTWJ("YF0g-2*h_HX^8#1Xtc*<glQL3-6kHS6;aAneu<0.c@[%C9AVNq:icD[(WX\7+=SR[3%8R5Bb-r
%4m/mHF"B_kP="\5O"?/H<WLH?.I]"_\/uD;nK7'?,R[f1h!^95ij3-dTQnP--24lROObIl9eM=j<T$;h4^\`l?qR['i8XRqgqlZ>
%p17+fUb=[^":6ahcDKqACHeqYV`on.pJiTRSS$ZWVF&sa3Vgo7ejHJ*J.aa;"j7qdOA(iDqmN97699,o4/NG\<18br)@(J\APB^S
%ZS!US0A(3l/:\^]Wn;KB'dQm^S:0W?\!`8%E_+h?@b.)@h6@29B6W/8C@*g;mr\Ih#2DDi#p0hVS7LO2?0#X+%Nq'(nk?-,2N`Mh
%PO&Ju5YC#>WVVE@`!>q;WROa\4kK["QGkpsg$"H*.#Eln0WW[+*ulY>MUY:Y]0LU0NR'M"D+84BU`^[0Uf&GU2S&[1h57ieM@U5f
%b1\378?@@6ZoH&7#))&W3-h@dnuq&fDdd;dMFB^[*U_oZj653gN1C`ao`:.RT?V%IRgQlI$=Gg4->=*L=SCOG)Cp[t.odK@>P%#]
%b@(QaQ;77JNmM+!4mjQW:mCJ!N297d+hSi`VFtH^NmpFBR)on%E-V<%]t\hH2-dmZgr>b/)c@,J<+*_Yh^q"PV`_5YX=sjEs6"KB
%6injk:Tl3DV.a(i\$Fo@G/NB8M9@u_HM1g+b`lYI=?JS:nS^/[F&J'i_=J:/6irK2c#0\*)h&*\W,clg6\bbNadEh2>Nt,2cgX:,
%m4j6fa;Mn5f7m)S[;?O7-B[`UninpE-`-1@[;hhpli(c,=dFK\O/.iX4'R,G%Y2S5-qN&-D+Q87eZBCF'USM9`llGMqf<CL#Sd`2
%'`O5+_>ffoHj$!KR^SelO(4=Zn]cN-4A?K)&Ku[NbT>Lc$Y\O.W(3@=S-2ZWVs:N),=ZM!P1MV_&5U5sdh/V&@ELGG+u#[t9&:)a
%CEQ8JMVmIcTD<OgQO'iQK]-a72`9U7$XY-S,]o:EB=V5`2Lt,aCrg*ulnq@"WUcesjlAIm5XOapK:R>p:pX!Ld3<V(&3$EI;2sur
%==C.c%p-`O@c88V!tRgS;Du0:j:[#r"#FB:8=t$cDP.T7.U3l%!?9T8a4bYM@]>"e+Ec@Qn:6UE$lP_dG4ILAG>\4F9BD:f<$ESU
%Pc4%0D:?A#D+)UF^b.4imQ_/)f,m,QZ5^:mQZJ6^V^dj]>l'0d3;SI#-_WsVi22T6&+-t[Y5CmcA1L;oG][tXJigr.r6iLS1tMAu
%R-e]8`Ped[]*o(L.#@M*]=5;"B#+dX6KWJU#O*(>$e<.sUfkcY/S/^/aS[fAOr?-&5*W@]/(D#9lrUMdC"Bhh*C/mQ"Ml"r_>ia1
%RT/!q"-='b7t;@9=:/d&'5R7H@RKaA,+0pDr+_=n7s>hE+J-]MgNu>%ec[%i13\[8TgV\(\jm:5aY[@3HOpV'>u\dkY2o&6bO#[c
%YeO,fYK,K1:U"9p$!_['_upoC@S^sEIbtbsSD9N$\BBk8#U&:5iI%.>gtL\FD"_.MjN:3`k)i$+)qFIO1Fm5pPk@K+"&a+L$D>5t
%.h<U]`t"N;4@uh>@RVVaK2i/P;UQ>i5XchR#;)=ajFdl?&3"gNHtD_KG`!=W[\5jN5h2qIq^D/(RO=7kJ[@+1r<IJXVl,G0QPLGE
%YC&Tg5IOqL'G*FZL$QuUNT$U(nt:`0F[o^aT#B@"#M-,d+QYHSB<_iA]E0<)+U=:h-+D!E:DJ\`/V,OG'RI=W+n&l)b$0Pl39"3$
%&,!R:Cjnha.EP.1(BV<\6k*eI".)!,LilJGp<F:?JgK%m;Oj%'FkL8('3i%c?*02?$RlgWkFAO5UA@DuV._Lc_3oP5*9tKLRZ`""
%"8>n0!'!4S%.'E@_rZ>dViV%@g$6C)!>NVu5je6VM3oa6LQFV;%4D.VJU(RTMA;B"?"fUVdB6,?V+7`s+do2Y3"(1e5_mPW,/6G[
%FL^PNIe[O^mMj&MO<!5-j[#U`*c9,gH%9nN*D5ZQM08TL6".=U)!lrZE-flq]"lN0/)Eu%*YS=8+8q>:S!pC_5auU_+r+b]i<b+;
%4ZM@\!]`V'/f8!:K(FV<'.]uH']S/OV[]UmaPc2WO"C=:;90Yq:fdjiTX-Z`DKr&\ZdYu.'kp+@'Ab',%UgOO1-HQaV"%<(\npK?
%*Jg34FX%)OU#E<b;EL"'Qf(FbkmHKne_!B^'m=)MS?/h]iMse&[7uk>N=hMCaZ2U(Eo7d]?oJ^o,#8^T1K1J%qZ0tFSbNV*DR-5c
%]UYp=n0D`DFISNSGh4PU@hte2*pY5-f8G!?\]?pQSr6)hLXIS;B`Y1LKY/biV^?/>;a/<L*Pf!RMQ$nJ56P)O['%ArCV7h"_2rHr
%[f_;GK-11MP27n.@h*eUKWoVE!bql;JB-?b[KdapQlZC$UAPAF@K(uAiF>uX_`>YrBGOjC8u?PbWt=j%U=dOU_<L$BF;'m^V)^(\
%1K#:4-fCq]jn?Ok.F^:aXc=-g4a%*]9+%lk+;<Q'9MPf#&1<:lTtA]4P>fS4,k\O+;knV]-Q*jMJ[0co/GgTLMN9g1)EMEG$9S<5
%DgEVni(dqqNKaHFQ*TAi(t(Xq&tl%&d<)C50XuQBBrP*W.\"JP4ChfEb,6YW_W+DXg<h/269qFe$ZFYa%ET<oJn(33#bpAdLG;WK
%![Z]HOc*9X>5K'YO.YrM"sh?50beR/P/Rukd6O`m&q+>.2b.a*JSdVW:*=L9?QGquhjuEEMSV9[DJGe9(^Ro^,;#J4$HKFLf6/.&
%I"=+"c\-'cJFq6`*0X$;VUck]@Yj)8_m[diM:fFBT6A"2#u2Oi1m;Ld(T]o4CU?\#n<B!:/:e6i5-Pik8D?]O]PdH8'^U=\G&25(
%BYC%#i]"@&ksD6$K-N_Oi&):+SrS6GA?Ct21-O^U*<SKR+\(^,N>56D'a`'bK3bV-HMFn1S3+Y`1<3VlN.F_4aMVH/j0B8\LGVZJ
%[Nn@C5Ws^-OO<.MTRJ9%8l5aul)<,^Z[g85&R+EErMR2o]X!!?R-Lp["TGaq5kZ0!!lkp@#%1VGZPP9ce-cR&3@$R#9a;Fb+G4(>
%3Q5'"@OS$k!ZGkcfn)fB;:5_G[ZekfV!K1OK%T^#G;GZN(HGEUl8es5V`QiKn>-cK2XQ)T^[&W#0o'HjqkfQ:W8\S3UdC8mQf+8&
%\>h<cW<X^fFmoXIC.G)3AOaO4F6fK3(2^to'mu3NZ$D\oa;_W_8@BbO]?J15N+Q*:Rkaku:-hLT_D`b$J-5os"_e./\7YuFJo>Kf
%(c1F'@l#2>YChOKD-]j$GdU9H]LbD'_I_H^;FG*76&?R_-afVC3!K<:g/N)r#^a1]Ob>DT=(\np<T>j_fIVBhDoY#;Zuqb>ij*;l
%:?2l(2ZXno1cEIjldX9[/""_=.!6M>;j7NMTTtTE#9TP/gZ2P),HXJ7^.j3V/dK2c*[Kq^k=iTd7pqc(c>*YSic5(g@#G=<0;b%c
%DmZ3a+&MG\YN;s>_Nt3%"U&1@;t6t2pO+3pg>oo2.]:JH5pZuINQZHra$aki"WiQL.ert4<'i#Vg(plXI%9XDUtiGJTk!qe5F<J6
%%ksX.)^GqR<`G1?jcu->&Ln;Kh%^@+Gr-*Z/5n#jWO_S!PLPQ1dr7r@5+r-h:[b%KM+>Z",LN[9=m>/o>]k_f8I':4Kms6-rm9Oc
%4D<FPJ$&^C,D^J:'pb\;east!#MIdYGjCC3@;A])^`uYeY8Z/;31_rF2j=>?'C^;.V890Zlc(9f5*4-5*u(D+PVOIWlgRT=>Wg/%
%DU"8K%%%fk72*=FmaN=W6CkE'X*Sb%R]-!fK5-anYX;ED2>0;2a^ihT:%()2,!@XjK=*3s=&eSrr.?=?p4Li(<lKqk!Rca9eWCP2
%V)f5Ale]P>=V^Qpq+3S_iCn^>AVB[&W<=H;(,T<3r@HDX<?RL1o7,7H\e1%-H(c:\Y,,[SX:bS-7DFRlF6JER)<J=+CkSf5Yh4Si
%As"<DpH?R172gb5c*YN!g6sddOqIo@LpA<AlX-&h`D(>*E9W&dUD0Os(huWM("]Qa,s4_NrdD_u>u?]&pBhHZ\R#BSMmKFnZ]Ase
%G6#.^Y'_OgA(k4k_.bo6'7*[-->.6t08cV\T_MV,[oJh2U[&ttc5)F#3?nE`O`K;`8?$"XZ*V"gM'%9,V"ncZ.!@qZjKN31ng'c$
%'NgNal]H*`X)Q(lE)7,(Cumbt+)?`uX]*nn'*_'m&/(S(A29i'>D7k^df0PkSr;;!b)lXs%"#Wr's["gZV1nN$_Tc<-+([^7+7C_
%a91Ujpi&5#T26MiGUb[3j9PcC%Ke6QC,SWr]7B8G337D8&=U,F<n+V"42#4bZ*M>hHV6\Q,sP4H;@Z8iJrPQ_[8I6XbM?Be#!uTN
%V._GnH#UAH-uLl2nbr+aJr'ZGru8C;\r7"5'h<md5D7ZI.H5$R.gtk9,.hri""$E4;:)qTr]q>jTmcJ]<>uih8lEBj8S-Lc;LY2T
%!;o%Ws5@BIZKI0l&Y%^ln-nn-<Ca+jJa>uLOPdH/rJ7%GiXL+u*DK=B@0pg"=TIIG!Qd/*Hs`;__dFfIJ+,K!@68;(+B"69>p(;&
%efto:m=mX:?1[K8R,3O<lPWK\jKC=+SF-IM4Ec[\?r72k0(fMo]<>?93^SBZgp(qq.MdD7D[7L&IKVG)!=q+9,p20c1<qhF+81mb
%DYoUR=2<`?n[RADnca*;<)Jf$OZ_eNWT\r;nfGfg;q9bBVJ>?%Uepui$B9uN0[YT[9K=)L:Cc@M[NKq$FC0>Y\qb-7h+OrhbL0Ja
%7,1!7!6Aa15HnqBb7H-u>DH:3U9o\FK-EbrQ)+#FRTbf!:8!mJ@Fl2i&DSK;?o`G!+U%at#F<peUD$H*H'FPV80/ciW4ec.5s<K?
%,s\Bti*CTcU#L"S*_!TjX<b.?@XJYe5iEJ3AVgsiJt_;k;&j'G@i_62.fCWR#<pi&=rN3$fm\k35SX@PcX_3@Va$i4<=g$U9Nf/u
%lD.2OUVLk?5rjcn>G0Idj"bI*`)[)?%!:/Q#s'N>[[:a.Ka5#Io`HhY]>&[6fY=,16;cld7LIY4HR2W8bDPk]V,lQp93ZDfV*cq(
%@[8<<T2TgsLe7g3cq_B/+M$.Wm-+"C4Z.u]GGM$0:(N;sWp*(=8)^ZiglT:CM`u`2QdR!+0Tc6f*J[]2JCZk]5aB+@W@Z&k-(>-p
%YMbAA7s%60(@,MLk0=ut(9D[W8kIiDI+0=fo\^LA5"FDf9htO]JeqUh.U%Lo/\nGO)Ob_#>)ie*7r%Vei`U**Wr:']PC:f+mN,j'
%nr>f)s,#e/BO;KMb.snkn,.s3Fs7r4:f)=4#6/0D-;=1"9RQf0?ik!h-P]E3*j]e;KeZ#SngdX/I"Z&R[lOBFV?)X2,u6?_oi#ug
%>DlV#i<TiVMYII5&JWQghuou((V6MWa"=Si*"rH4\J#5#!>.:Sk^N=B3>R^f16Rm,QJMGSG7QVs5Yp=8K%0Eu,]-VrS4W6f="AgZ
%3B2T#[I+P`=5nt7&*gGI`2c.^d\2Gc4Gg.;KjBoG\"$VN=YNeYY[f,L\BQ3TK`WEWjU,EIID!1Bj:^k5C;]\"$as;YrlcYSXk-VO
%<lHil/:IuQWK.Of*2G4E@hDP#eV#3_5GZeQk_T$*Cd.g8-efk0?A(^-P0Y;J(&(aQ0W#'0jIIO!@k^$`["SD+8NR*f7)B4gh-N)K
%nqo#LiXR+bPp;0)"5qo6JESp!K5Y)aJKS?-$K"UY@hRK^9+Pf=adU4\'PA8\'0qNj]fU-7k6hBE;AdPJOg(4pK8cJj,k*/fh^D0#
%H!YFi-6c%K1EX\8p=33J.`N*)47D'6rT;6'rVol(*3(qsI6SX]'_:7F$T^@l.'S#nW"oYq,QWcQH#gV!7'9WXPTA\[)1/M:$%#b<
%aG^m4n[ldKG>+&:$j&Z`DNQSr!LN:3O.1\u8kXLQUmC^u0hGFDU?W\?R&VYQCuI[R'HP2KB=:auG^.RUf73?:A[G"Y9u7dOr&k2+
%!-'8+UXGGR<Kas@3jRdbh3jF_2[q%r4<56.?B$4%eJ#f=C<[dI%1TfCn#:o>RI[jrKtN0t\E%VQ'NIZN0qAf%C\!)N)(*>^];-<u
%\F:E3AN6b!q*@!k#EfB!8<l?RjF66?]qTb-X=8P)3%'K]BouSh8b$3b<@'Lqb)T_gj\++DQ")B;U7dA4@/=[Di5VcI[-pbb)O7I+
%on7:dB;Z$K32LL[Uesut.*jZfhPB,<%4EU4*02A,mijZd)@X`s(=+djaEl`F8BE='M361Iijg9aF@N9GNuMcjK-'=%OFe55oO-)Y
%m_a0?_EYt(P:GXkI4UN_EN5TT8j=<!1R(i,VZj^C1&5)Bl_$Ah]^j.d+h!3l.0G+Pk)gl2G\j%@+O,ORC<FY<b#6WtbEMo#"jI^W
%rpJ=t*d72sfRu&_,10m^WnL(Rmo6\+A.p('&Vk=CTu>3)70"JbRY-:o4d*hbfSdIdLWD=]J0OgL0&P78l_\?kWu!80it5dM02h9u
%oaUA;:`X]3n_<!LkIP]d%t5\;)-q,p.HBt]7J$hMd.[MTR-7MQ+o-'pJXn0u[os9.l3`%X^47LP2u9]"ck,YMT)T*jR;a'e\u&!K
%_#Y'Bl01o[^$;UE52,FNG7K%f9%4lpeNm!28KBRc.J'gUJm8!gV!]s5El<LbFO`%q')1O^`>J1<^fsmfMfGN?@\.QfG7UF?R&c/,
%o;-B]bJE%BHA#&\gY%>H`Ii$oh8kCJ@[T5Lp+qon0keL`Vq@uMW+'q5A]'!lJYfN,K&_]mi4WG<ANUn>@5Auu#A9d`,PI1gG=,@b
%=IDKn5^*=NDA\GTe\&:m&d?@^"!QjtIhaU"KZ0*UWX+Z^=,,uSW0!^-*C5-h=5oJMBC&AeMD+YP@V!t.e`DBe[R:BkfZ\dmKAac0
%#`+mDSDH]"&@h-blVd"["DF&IeWor3@nCdgFCj7o,Gb5AKr35@;?SKSBlT)B3?YkBlt0FVOAdSieU7N]WYL%DghYF(BK30K&Y%S^
%WtC#Br%?c3;6?/i]-E3Gid0)K<q;eXJbc"L?MB8qW/b8GTOi:o',Cdi"bOlGPe[F?[>E")#"cC-,CXr"BgF!06S:L9%oCZlYS7CN
%Tfp[Lpsk)H:>ofgKK6]rT502;<N+bAUNMpq)Y#Gh\SEo+V]&HEmb16jcjt\/1_[(mK>t8bXAEt6WMj(5X/\K;_)C,p=iIVBl67k2
%,,.+t!a#EClQWA$/et<',NTk3#$rIONipb5eF2f:-&6V9_58mg(i5-`bs>tX=7nk62/eN*JlImL5Z.JDUm0#B2&2efR-6_8n0!n6
%8ZD:OLk;=HkW2%O5:NSn`&uH4*1b(0onBOWrt:?\>WnFM%tU(*YAbgKX,ih5M*Y<!6b60*>XKlj=Q^`Ekp%`aY5gT:7Ok^'=?lXB
%LFl>qH?jZF;`hX*O8QO<bY,g1ifN4+X7U%sgGO/I<BY@^N;U7XP732(\YeY@OQ*uIf:'Xp6ffrketlF9EEUqfb-#3c6OQ`r:lMG0
%+)=M6%t>*58>S?=jK=Q;\lUa3+#>PT>t+R>1Ed-NW^WHQ:<3K<._16ub,Ct#AI)gBOR.K9F628nFKqks6rI%),8]u(W=ChWK54Wj
%$.ghH%DhV0?\"bG):/WQ:c`QX?X>$nW#LfDQ/[?PGnDSN-^q/,WtHG1!gCEg,JYg0E4MK3S1&+Q09<f(F9H9[87nI,.hH$-UiiRp
%<K],=oL^&C`F4n)QNQ*\*5\[8]^C]'*`_lI=9M7jNcs"_7>Z6D(>%@1:K\BL0VsYh<J.I2Yc2_!iGfhc;FL0K;H[/fY:NJjDE:`h
%Ei'=+8Y03_#\AN_0<S-A'eGBp2V"JoZ^%cP<+CE(Z(b"1lYKE]FqCDg*Y8OQN9]KX[sD%/"nX(1P)u]^NB4:_THSSGNIi@NlpAL4
%l+ErQ%S[Z`KtET%6D"!&m9(Cu^VP\$kdaKj"KR$_?<:2#.EbLA>6T(J/d9'bXFGO*?Arh6s&X-1igHh>#j;7hc4!7Wg9risATusf
%`9#Dq8W_E@[RV)daH0_PKu5@@Lhph"'@@ifCkGM<_ahM:^b.ili7G&.%mdji</5a+9&FSeQ$,VJ0RqLu=!0MeC++lU0`F@h&tVrt
%H2>E$D6@j%'u%9!I@!(]JQ,j.Wq0eVGjRSS]!jdNlK)UhW<,/C>4*7eAKr_QI@;*6>rgVZ'Qk/\=7tk>0H\I(K7q$fX!'5i,`Z(G
%lc(H1aQ8HE/CR'lLh[!"A<=Ig/hup+G/<r"q]UQ,#:N_>(:o=3RB$mi(INAVI-!j?4#OQU9rTYfb@EQ`;2KKR(#<I:FitD5FKdUJ
%'os&mbX*6[8BXYB!Fd@<EIBG]_SnJ_h*_[0iNZ=.+ODfH\moYjJDkH)cR!`F2>)nop#'fmK-l]R*2!tN1C;-dDnY4nmPah;2HhVU
%+Z.okEO=`d77#N3i9/75I3qaEh_3<k@s<sh5:Ta[e+J?;m=\dej6ObaMHmY84g'\\YU['"jep78VBXfAGq'4am%gQ7\IPGCqbfEM
%el:ib3<-cKs-14,fWiV*IJWY%_'djEl.RaNjD3L]#=UNN\CKj%7<"Qcq9U902Pm\eDYIO6##'3l*6.r]>/8u*ij<k5JB@#JJ_iF_
%2H0<+0Ql8U;ch'!V$JL=6Lt?:SSj%X$&F3Z\dBCcYX'(*/lZ`DM]ttf\k0P>P6Y.m`te,b>n1.#jB"ac;aeWZBXo=;Y(-/&S@jr\
%f>TAf`T1/'/>++6LB<1YQ0Ek!/Ho_^JdU+u\'qR^qI-O(!?(Z]n.8,NP^*+MX%*)_WcI?(&d/B$,0laE?r?:pa'8Y<<+a#<inirV
%gq<j8.'\7&9-DbN%ZCk/<IrPqBrsA0-+grWU"H<i7G\pBSNMntMO$*)XFg,P>6FoJ`U"VLOpV6r]m&S(s7#UY]Q.DAnH0MTKNgk#
%5lnT0YI)<tO.Mu\oN+i/Pr!OTY['8S=3g6a6iLNXYP6]P:FFS6[]mM?]C9te/bsO@gEf""O0A&i'ooiM=dL+QNDH`4oKUt^Tps^,
%Ada,Q]H^idR'K.b!U8Zs;5l-t)?^$B?L=i&PG7T'nO5e4Ls4MK-kZi(fh7:n=*($aou8#QGo"7A:MZ>(#?"u64?<U`<1G-='n^.Q
%"pXAj92WkQ#luC69n:Aa/0*\"GAgi.\>"IaZB)/rf(nq[mq5^eDm*<JADTt-oCCo3VJ.bb9AC55iaH*B]H0!G0L(R08<_Js.j)QV
%Q0OTtKSmIul4HdfIH(rOKDZ3t;>uA1M2Z:6:-'f#%WZU3asLppg^qomNa7#rZu(-M7EqTp/m^:5G"g/*-/pkKfFJ//VcPSu)Uo`1
%V"3<r?li[,2(1QBeclq6+>G?7gcZFF:0E.`kB]]39hL2`1Tt)m"9(qM1^*VWF22n?&[12dlK+'$L0)N@[i6hrRn>SKo(@teb/m:2
%RsZ[!5I5[Z7f\#0'J:JZ"P1.=:NDL("6e.)Z[jBu=H*+ZTdKT^/C5'0J5:kdGPH6iZ:ZAm]+8EQf(WGqc$>P06I?.06Hi:DNlr1[
%)5M4Z&g$Xj=NYY'&R<e)KJXm;XK6'kM]@45^idC`4Z,raGeWoR"K(..!Y?s5jsE7F'Cb*o.P]]uX^$dq>-d)I6EAQY_-6q('e::G
%^87!W]<u(66e,'09DJGO"fVR^2=V;lR@E79jpTc5jQ:5`jWPn4^mk/.QN50=:qI2VPIcZV4T(o+lR^!uTsY(g`k$J(i[3=l%_"OJ
%rF+VtS2uI=_bd\5*'BT;?GO;ccZpaJR`]m)8+J3,8QfuL!-RB;LN@u"'i^jN*NM\&-qr@np^^.PH,R=R+E0H6]M/8Y4bnQ00,o`H
%:t;_C_Qf[X`8@>:i1%]g4BVN9G$$Nf8>>8g^#^mJK_-l\ne+7[VNU_SfeApoeX1n(<9M^R2%G5d&&s6$C7tF<$?Gu6]]#,>Y?kdo
%3b,ep$987.U[-*g;&2dL[KhVHN9Veq;rJlFVFo!gm9g!DUIOKE%J2o86&;[2n)@1Y<e7WG^=f&ZLRddC_0J?>m:DC3#C+G(``pE7
%"Ed@\`im[Q7<b.`!b+NQBZaQ/WFFl9(E$X#2*m+_S[<i\2c-B;F=Irl'pteDnU[EtQ(6".qamUIMBGT><f(r%E/JeAE#F1Z6RC6h
%H!:uJaCOo@P7Xcllb'/7JrnG5qBW;LX*TaMW(S$P<#,:RBiO+Y[DgSV3AqgSn^*Em2Q/pDC?&0EK8A8l8J\@/Y#I)/%'uS/:\Rq)
%o-lau"C@CcZ;`M.$"<:n3u+AY/#m#U-%!W80Nh!8kWG[/!f8%,s2pUVl!j\bJ()$/Fp^"X-pD7%-J'#R`3,-Ze3aNC9WEBo*I*ok
%eoYVg\5W"1*4;iPkTgnT1h]kp:L5dqD9Rom0*e1CFLL1dYe9JBj%6Hr&k8nl)"=dmP8EqRD@5[_k5GE?B6fU['sHb5\$8(9WeX*h
%rDS>eL/PT%'/XSK?I3/U=hnN?&79]8E7e]>EdXYsRA#IEiE^JmgPG,k8p;Q7k4*!4Hc7:VAX3;S)YiurjOA:jSjfI]0<rj_SHDk.
%Qs/ccV!Sdr8+]Tp'WR;`cL""_E:WW`s2/pJ]1CUj4qN83?B^[#RGkA7V:p+X\uVQS'Q+a5I0j;KoG$jM8)"YF#$#1=<Gm(XS`Z31
%Qk%90G/_WAJEHH59\.XN!Z/8E:Gg]I:ZBF(KY3e52i$-scKMMhe[8hrV'mla!QFKrfHSP"E>/GgSg3DWkNGE(douKE+N!@bVCkDV
%QVs^qaHbTWLW(NJ1&B^84EfiahO<Pq=P9W&f7AHYh1:KTZ8;F>I[6mL4PKcCPfWtPQ?>hL^TOW7Rej+^SAQ3j]]2A_R(lf4,g.=1
%NmKN6.Y#8'Fs7ip!uTS0@7=h9mdPE*hfpSX<<cGGQLL&W0A]TF:'.>XkimV,RO,1mU,GC5Po$&<%\(6a'W"3E#%f0Fh(96,oB(K(
%mqH.i7Im6Oi!S94@pd+nR[jjik\BHMCh7IYmsmat-6XjSEBKLjT4D^s4mhOdcM[(lOtHZa+VF@*UI[)B_r82]%eUHri6A`"kQShY
%Z5Jj$F7n@UZ[/+7\.b.$?k:gUD4&fYZM:WrVB/Ua1CtmJl*_&[:]%J.%gMV8NMlCg[Zkm>.mnJ'/6siElql]MMZ]cP_."K!bG:Ib
%3-D0=`d6oT-pQK3haS?/`@30&O_Wi]q5fXtq9TRKniN-I1t:cT<Nls)IcK&Gg;[d!_C8_c?/Zok'b*Q%ES]jY`a,L0Pr`]$/;0*d
%K"6*Wj,3Ll-9^NPeat/Y`EN`d02+3R)!-$aA]WJU,$,6VC[J$sSkb9S<dWh>q%7F=*'lfiB1FfhF?(B*q6Z>M::5^[6?q3oWf@CM
%*#VNc3%gWM\R]aVQ-SLC;ZpD#C]a\K45OVRGH`lP#2=;i7sa6u@%,8Nb^A=pN4IQblA<`ule<$K2Ga3.DIRh5Bm8;f\A2;a3k*>&
%CHQa1q=(1$gT*W:18^T^^a0Uf<5<jW';h\<jckIS.`#i?8--fElimO`35"(/2m;0^%m'>GoY*^`otsB6'(Ua-GBqpC;@MbLXh6K7
%['Fl&r';*Ok6nW;3p9_C4@=\g731NnbG)OMc%T35$.63,7GCc&7[-E0J8rhHHI[[1.<J:#\9p;"8<Q_=TmW"i:D^\WdJ5&_Dd8>"
%$'uXX:Q_52=M;?be.L\gS@fFd,hm1G=B)uZ9cr["chOApT,#MR[Z)<p,^nB%hg47:-NB:5E0%)P5g.k>,!VCVO<Iu8T7g(2gE>_-
%NhlaFh+k8W]Q-iTOiX5jP5Ui7+RQK':+de[;>qC__0Zru<Xs8>T;Eg42L^m7;4NW8rU<-=L#`LlW2kfmQ$CH:_nlSn0@"t`d#*J#
%j":isJEukh_u%R.FX-6`baURVo5oH0dgk)q-Z\#;Z*!2ep=ed10V$JPXRXrTMU%FTdMg6%Si%/0(9m\6mB7A#Sf"0W34m7jEHZ%l
%@k4fk5%d)mdW6JC_TMm\1CdB)G>*0D]_1DsQbS=QW&'Xq(+,d8i5QZUBR+?=dVRrZ*q`KUDq#FDc$jV#*kS!L/dR=UaI@Jq&bf#C
%qhb4;W`A3ZX!\u+68&=2f1js6@TXVfqfJ"8&e.#RpYjbAI(%[oI+Oi9inGc'qT<n5SJrB*%XM/7:;nJo=A*F5Lc3$o+)0`!TSZ.b
%W="r9W!,na<t)%)&oO]r5WG,>45uIrRIYq2mVs.(/LPJoTre-m-GgHDoItpW"3Eh7=_0%-:`W&+VF)Um6I73_nZe4>S;JUrA&l2e
%4WF`j9WCQL8dOnkC1'+q:`Q0%<Bcc1NT-omjOJ@=iiL9W;Md&h7T-j0f5[JU_[?PN[JD6\gh)e2Bu96f>(a2Z8kc$D;K]%<;nM/U
%r\LSN<V9p(AM'`"%?D?3=lk'XR'$b2?0.e,W`s/W</<ds6]#YbX`AEl!K[6c)\B%un:ITm`hUasGm7q*^ijQ<*raJ$id\g_]@_WO
%Ki>k/PR,^hp#eWg8:EY\efZ+"s-rJWe3%^j8p80";?Dau#;sKn3*ph(#5u&1l8tB!]\:a%+T.*4QB/]6cr#i0mbh.>Kppu_XAk@/
%fCRs%pA8TL"IC5&%QJiYTcALCbW7ksT$RT`4,+QjU^2MqgmCSGf#*J,>Z9(_?=0&#;?<Dq9#j`ZPT4j3YLqELfra["3h!XbQ9\r(
%WgRNVHO>-e"b]:7,<r:CgHBkG'+0Xi:XqOV67Q;%RI61/ZtLrc0r*aHS?@<""o%)*`O%U(FG]e\LAg2qXc@Y1cMaEq*rM`MScMb@
%`NtKqSZkeFj/!SeFn\7)VmS(=k:4[CB\jt#ms=0ZVHhdn5!-GmV.uc&[nOJFdk74*m3N[M0_5PY>J_4k"D,5D/`J+VVIZG<Tbinh
%D$hp0_P9P;Bp=X*W/#`oMo;Y>EAD4n?@4Frl;9OF.H7ZX#DN+phA(<7:^\Eu018,^=ZA_cFD5dnO2qN>NdODaRb\4Niai/h:D2.Q
%6!)W/29_Ylad9W#KiHdm%j#'CM<5hCU!PnAau>R1*V8K$$X_D@Oe?9*a;-3N9M+QJC0k=8H,2LPIeOJsT;6\FiD^a6,,M7&8l2>e
%N=_bmEnJg98s>?-Eu4F<n0jj5TN__<>!LZ(4'P9_<eseCMPn<M<KC3N.:!X1'_0o`al%T-X0QHGG$#pUim$+[;5YNIdLG8RWR2$m
%ZW!htG:CR-(Ck9uP]q!<s&pQpjmAqQ##XkWTU^*/cTk<53=q6q@C,C-6A[EJ9^u)EIX!dkAB,:M*%Gd_a@qJ8%Bo$,go&Z7$ZpEP
%MFU%6NrHj4K&-"E5?imZ2C6*P`08?++&U5I=?=?$&)su1H[2]r*Ii8VAsH!-KrB0niBl<,mRcT19oF;iir6].\W+4J\*pTVV5k"$
%iKs!tn;NZGT@%h-7O:9(V3*[9@iM>382#a!4W7-q>2*3pfk3@TR3m@gCZ&sM>gcHYhCg4&h/+!!H2JmdP&a8C&[+_Qae)W^8cO40
%UjZR?Ug311l1=0cohm0*f6!12DYR2_.u*mV[5]3PC2!s:_fq/^_R7U01/j(>2?H5j<J+3*??N:P6lV8jL-Lb&c]gJS4B"aL3<jTY
%-"4AujGQqAhG>";h,^PeZL9KTSPd^W'Q6OUk.kRKW;(\]96-^d%rV^][4%L[N7Lhmb!XulPI!2:dWoLeF==2rK"p!O'Su5il&_@=
%GWm5_p@\sEW`,mcFD=$SDMOBo3<crN<tD(A9O;&g#pZ,La^2XVIGO!.)YS=O*ZW-@EeJC$([sjgZ2ee]mu/Ho75?2&8Xg?;8Yf?^
%=!fRKk/FUURhRcG$(9=sC?Pkn_iZ$/#%tN[PfL*_j`YnuT:b3Eo*.FN$h*<'Y,B1$@.;hE$.`GA"B3SD)(&ijmqeIkFeg1Zl5]fn
%U4VO%Wp*O7K/9_sN/<WA<Mib5;)"R+l4O]lUhC?8g^Y*S?lq,7)eJ96i!j#0@sDT;-mlu<YZE&_.Rf5aAfdP+$^skB>&_7q#\DTi
%5GHMX(^.cu<dSj,0X=Y,n?7$(_@?1*_oah@9[HWs`'qYVIBnD,6KWiu^9YcY#]p$gqEI0GJ%8hap?_J(.WRl2c%3?^-lP7#H9@NB
%)foR:*hHE,S5uBPQ)K$ULd!u4&g#eHDX/ZfX..r1M;?0MfPTC?G*,Ut'fG\-N9"_i!Q9?+LsWGF4Z7R'Te"/L*0U5I='SO^4d+^P
%#8V'lFE%fLD@j/^6l5/E7Qe&<c-Zk-"]S0t_-!\4'HBZ3IK`$+S)eJ>TXHYVH6+?R5s>>U6LYXKr&&#g.*M,V3.dN<J/"/srC(i=
%35>Z"<+>o+%NWjNS%E.*;TVqr^TKhU9hGsO\Dbuid4X-:L,=bSJPrYX*TKhS1.(4BBM6X32<l$\\<=56D:`E$KM[BcUX7ElM-?E(
%2CL+H[4Tpmmj1f;%96&kk%4NWd8Ep0K![H-e[h^pG#n3q]SAVkn+qtJ\IH%Ae5>nXi;n5DdO)!0_)bR%48.VU)97<(jJQ\in7/PM
%Euk%(Q1!ZDDaFs8NT*7Ud7N;8_*GtdP>Ych]2tnKp.^r-f/Ro5HD'sO&DsRl<"XNAK!VDF9[hQ*qhdWbf3n8L7ML\77aKpW`$pC(
%-mW=Kf3!__oL]3g3?12`cU$MK5+D,%?^j^tOultR>kG&6C@7ih7UWWa14@*AG_nCXnrgJek.qttV[eEXZa*a9ja<^DI-/a(''E6+
%$T7/1pB`)c>agpG`@Egs*Bk>4nIb@pBF3P],R7@o;Bq=c/*R2<m'6,Of2Qrc#HW2n)G2L__'.#hMM'q8/ts*cR)59IP**G?DBO(e
%A&cDY?R$u!D",5="l*9Xa?aKSW!g9X<(uP%PMeNQg+JWSC?jtPJ^jJ&$nPWi<GK,pX='=!PE+q(*mn#^'W-5DBdj**'63QUd+JJ*
%-#7IQU,U\i;QS!Cn^1/O]Z39p@_Mp/?AdhDWTtbRke'!PO8YU9.T_:eZrS[3;4Wr&eNd:MYK,-5IB*CJ3/X>CYj>Li,K-emFKQ`d
%n%lH$pJVTb)$P2^/#+ml(89`IlD[F@l:KAW[V3/u6cMhkR^+568iN*Cr<IX$rpN`kF'SM1FR;N=Uop,*N0TId#KS_7-OF!_'S!72
%52,[O[/3&@Rm`=2B-$DfH+Nn938HSUChb.'WJ)7n(*O%ZJ=,t&6,e/[,BIO@TH[[?$jS0?kWZBG)Y"[?k/p;%GC07[;p8#5eh\!r
%j[noJ]WQs:G1+7uZa?t0H*sl`[BOi&_U^NNYdQ0lYg?@F7nEr$B0+\_d)"^R-1[Bia/M'cFIf!n6@D?HYBk*]_pFI-Y<6\#Q7Ie`
%[>5CkM<71jqD,O`@-rle7]eA#;gK-XZ)ZRL7#R(R?^>Y$bSHiZr/5<oV&r*,:q+e2<KmRJ'&b8c2oDBT(UNR6jTZH6R_s'p/?]`r
%R?.,\EMZl!Vo'BC]m"SiX$%,J.[)\JSDt+[-(:3J7Z(@i`cMM@+7Z"en?Z@9>!,@IB\KcA4D.*^c^Se#o#!T&V'MRo`YL(gVGCr,
%2s,-YMOYcKO:!W:4RbD2+4k6>].HH3$5\JcG?$T8pm'\j0;3W6]KE>iQhU(1`;>j=cbAMqkIBWGkmOa"V1bG%-&pD^rYiC:/6t'<
%g`]Io'oPdje7=?pXi;q3\skU#!7Sj6/TkiIPs]NPh1o']nVr(n>l>A+mA_O;+m#DORWG0rKP*iKk$1,<Te2B;V7`gOo%-l;=&hmU
%^"Z,qQ33n@=DG5DN-@qKY,qn)&[7^lpG!@j/Zt&c/T)OS;4<d1&uu5$Z\IC<)0\VG"W?EJ"G6]KBs\IbfYs*u:!MLQAEK"oTGH2J
%mlNZ3Rr;obMG(g9CEA^b(QLd2En=6`nLN8Xn(erK_p]=fs4h*3(,&kY,&I&?ds%``Y[>-?nCl4a[\m'GCJ&WH:VlNMFim+I)J)gc
%c1!Rk;:Brh_cqu?p]l%YHC6i+hJ-V@X4F7RAWjju(AlNX)b:W:-bhCr_l\eX3]Vm(Kj;I7*b$8M2B!Z5g6C<43pC_q"L=A<7m7J>
%[6*@VM&efKT_d#2c`*<h(&Q%9@2T!KgRT_.019Y@!>acYh\gtIk2^mSd4AQIH[en1AEV5N-,-m#O"Iu/TDle*qqb]ZR^=m?-d26q
%O<]i$l]0l3&bbP.\0T(N:JkP_%9bSEf7=2(St+H>P-Z0Za1c0675!JEGjWPCoo\>6A+c%YdqPf5iZ$*tQIh_,-_RmMIBe0X1J\$b
%9[HCP6QO:[#dJUHn-_HA>=k:ABV:BH.m_Yp&FB;$r_uF2J0k35jfC8bG%g\PHEcHYJ66M^m(\0__8H5_Tp;fP91@9L<@1]b7*QaR
%$_Hn7ebC-W;>n4>_'pdkY@nCn%.'V020:8p,cdtR'WUQWO@ajU9AL7p=:,0hZ]kj;>=<5UTaR5k*T7gm?/KMU70QN$:`"S&@Q73L
%0#,"'FRc,e>t8i$e>=&p?5oWGZT8J5_'`#Uo$&\/#7mJ/O/85:>e%WIO^`?H7[?o0/Y')"9fY5U:U(m3C8Dg00,mWNqGX8bMS$uS
%];bBMZ^Ro!+HS#u?EUKg1KNGV03itg@Q:V;=-ikqPFaZR_XPDPENpfT)NUGhU7GK?"B\AePZlq!AU5!I5#-C,.hrrWZVH<$`MgCu
%R2[L9HQ1s:42:1]PK99pN!u\rWIW&:j\1q@NkJ!,/"^LNhD7HWr@l[@9Nrb,Q56=XpN*>$6WJoG,E?H2<1'S03*.48Po*@oF0(ks
%^a42kGd=mQo>=jq[<lrbQ$&&iT.4]Er,0S=&q["T0b5I3XEmU^'daP,K2a`P]<dJ2PBimCT4Ts`==4`!kf]%,JQ.W\dr.9'daMG9
%LdZ'N=crTqcSE2TYE*7>`&=Pa%!g*;p>En;+$F[N=G=.@[E$.Ce+E@N4Sb1:q=:r`?(8it.t>)m:L2B6o2$mF=Aq)4,:&nmkP;/X
%Z&nWKkon)?F"F<BN_kTqbr0PB.^`bWq(4)`5AiTKa2R(>&d9'j7g(SIN/+L+(7-5unVGnmM?_$[p#t7IN-l=^B[p27L.N]5j?)Aa
%j=OH(XgYX$I6?^;F)2Xf5hR0!Viih-L/Mp?$n\2Aa^"M<Es-D%?A2'e:28+ni.RU3o)J3p*u1Yc,`Qitq[I^fYa=3PFd"<LD<,o[
%'qD3ds3SO84n9urQ1^[DF\A`VK`Ls/'-XWr<;(I((E39kQ&q&qb`lL#%2kN7l#bgC]TN+!D+M<`]["[%nhu+MBB*,5Z+b)Co`Zht
%>n$9*L,REk?]q:,'2.-2CCR,I<jstp_lP1/XBj9A31C^*P;HM)VrDFG8k@W6<=tD&NtYB:Po.ZXXa9?5a7/Z,?C^8XSYgG5[UaTm
%F*;i>=;TGM<NjR<:VO$ofU9n)/<YB6hC^!&#>6Oj6Yk#jL<dJNgONI:Jr%DEF:->]X%,9QMmDGYGhoilf7P?]MoIK]p)^gFi&Ga2
%EMcm7r-n(2;D[d2Mi#GjEVY6JSJq/U\BTm/ALYVD0EB*Xiu*JpK'J4QV7R5Hd@3`U8J@c8f8P5@r;_E4:sd&1T?b):j^o$S>?)ap
%Z5Xb<OA!OY1Bg#l1;?f/8tnWE(T48hL&ZDY,Mja(l3OD?K:ITCG(N0b\7aTb7U%*RA3.9i_;4T16aotH#)g9:;dSN#&gTeM4I@*1
%Jcm7)74%<[7&oHAZuBnq`[3q4>"&+2M(3Pt2Rk!.jRjUk:2">ln-.[E9$c4'6WH9,8rS`-CIP)rqjm<CDfp70l5AD'9he@U%tV.j
%Tf,LkJ9aW-hUQf6)Yc1h%ji0'Op<7iUiga4$Qbkkj,)Z@*7VEVThGPb0*0[KIZ)OE.&Q=/9!rM_4F:)XK>qO:pdX-5lIXYMndKud
%^QdbW""d@qeQmhb<EB#H"01*KV%T]AjWN(f%p!]nT".0`r9,3KQ*4O4j2I'chju?FG^Zp%XlSSi?`o%DU4T^[Is$A:O1gRG42ZcA
%TgUL#q7cHi&k4:FI4Wue1e03je`XAnR],7]:Z3KIA>8\;IBji7]%.AX@h!$r:QW.e6dJf!/oT:N71YYe*r5$#S)61H93orQI73CT
%60.pc*1oB>WqQb(8DVT\ERRQMC6.NH.it/8Sb,XTe.#"O_(823nRbd=f<[qfItf\FI]QAlMEn%3_2ZeT[7j@:NN,hC`UPg%AM9C5
%-a#&eZ^9fpENa2porYgrm>D!OS]A.g^Y#9]X4jOVf!_d.*Pcbh=iUq&U=*hY*t][GV9jS\Sh7@Q\>e5?.c?Pd?,;qo,%Nep4T7]q
%N$;;.29Y^;]LrT3&(c]6d72>EQ[M"CSAH);FmX^*`h#+7/HR6hEDR\F-:M^MmdW>Y\B>BS"d+\SbJFAP-sj$"5=kTs89'WiX%g@>
%o%@Z:#GA>C#B!OP-s]"We0,(]nl"7iD,)DIBrMme&]*=I.T:k\1GQRCMZ:%=T`e2.r[9.2OH^_+RuYZ;gP;"521+oi(P5s(I0(lO
%nA(T_/*?<?!=P_lTVp-9M4]1^[-V16<4'bH7s7F_84&h/I65<!-&P@@-=:^7&d'*lc/h'Zbo<"U\X;urV7H0YbMc`#A$>/Dqd&dV
%ogMl#SLmEhSj!XY$E-LkdR?PLeH6B0'=b_H4U%g>I31\`Oe^E=N!JAV,i2mWp!J7DRd'nabcVrS4,t=a7/aH)N(0@Y1i,u>OKofS
%fJOp*LpUI>[jNdm4IF?hR`.^'aMR)/9:[R#9UV*)X?Nd5%*5,r)CtZTae1%ZNkPdsW";r:<&j_s4+^TNXgqF-3R-q8S)rmm8'1%\
%F84r<"]6<GPl_8dWYpmhhX%JHSsu(Yp1+_*29NWmeTm5fU+r("gq4n`EWkY+GQ5he?291ihmkY<_t!CW<'!0ee<jU:+SE&GFT4j@
%5^jcD)keIoq@M#2p";h3^*8;0;;,>G;K(r'oKHU8^l$Yr^`n^^FKmZ,1_Kj'd,QOtb:us<GAgFuWdT=O:T..Q0Cno[%L$sb!VFF7
%\Z-:J2M%CR=fZnW74hN<\XkWAi6W\jhOr&G9[a[c?njC:67#):*pT1KOp%pq.#6$+Ce?,&SX>k.Tq$!VS*!8b@35WoB.p:<?)DZC
%NRV!0JbW8E'`P1F7f,dHr\GN1"`N!8RC@p>,Lcm]]gujU9sR'N):!;se'uOg9mF)8m+sb#`oYqT\OGb0'jH_pUo)G#A(LaS;$&M"
%*;.T>p=F+j!bO`]$cV6W-^ViU.S:"m.6KCscPl5(*(Sbc^_eYK8ON<ciQtgDQA-U\g3GW&fGEi3i#jkO7&(UApq#Dl&#([kCi-d%
%g5+&#5^/-%?eLu&)G*n(OQ1)#g&LrpI7R9oN\Q^1.jtR#"j:s3\I=U@fp*CX>u<5Hj/Sf7FYTB;eN^?$ojEa8I']CUXO+hn6maU.
%/ELP%-g/pJrhA#CO^U]`FM'Y%FL.KZ1SE!nj&-Ul/5FnTD)"t6X2YCoIp*iF_o:jl"UMK5'##N`hncjc+[Sn!EhhRh*l_dckf(%>
%5I\&8-sq#).92FLGQ^$sRF2po*;aFeiUkW6Y%:,UJ]Wf!Eib]Z\*Dcs]Um3+jr,Ie?Ac3taD&XO2CWZ59=3tdl_aAnVjdN>]X/Mb
%FF;C!mENpT7A#d0GE6GFb/?5i06_X0iNAV%AOil=OW>OjF]n\XTmuHE\@=oUg#qe;0=T>GL<Pi&0#NS+7E^bNTObE5C?O'e-n"a!
%LZ8;hGN[)cc,(SC.3%NnD!]hYo3>b[n[-*qS+S;FD)dg0:G`P6b!SI0*h]Eb_fBZOT,?U1cC7;Y:T=m"UM:6YJ#][E?2;I[:7ZML
%i^KDQFX+%PPb+#3c0c865.p`MmeE;S'dX*jDALjYm7&AX+DUM@k3VARTZ@<hOJ,plqXEb\54_Fc<L.f[1a8+N-;ABjIPe>.4<U1=
%Oe.!?1XfPp(=WCi!X<nN((_$\VXVRh@8n64fh7Sc\)q'Xoj';dR1q)#m\W%X6E2&o4#a[`Lr8mrb2dHL!700_fF_jTc$=/#S>YPc
%MmEld*Yo(3jKl$85uiAUi:r`>UB=W[4S/5`OheG!WPM5K*WBYK:K5R?[,RV?%)<HndVjSOh%j&o:X+0jEcKZ(eDqV;'O;jmIC*dS
%YS7l84es!"OVHo#F(M4q$(h(>a%fUJ[qcCBI+k:<69Wt1?N3S+-\pNO%M;W^a%Ca=TWdS0M*,Q-([k^[jC0gJ2HL[R@_&'cRX#6_
%3<l*M8p/mE*USJb>/C9OrLY4_dp6t&]h6q<]6(?j!3+e8R_7GIS@c&>bjn$_5cp'?;?XH(K?5c%HLTj6\3JJ+r/9HZm*m%\1F3^<
%pf,;e@k4oZ^N]59_lLNh;M9^S.dgtJNeP`%l4./L1K:.c^8jQQ(f@qH^J;>K=FjZAVCI:,,gT2&.f>lVY'frjh0=Zm_;Pj\@m&RW
%4fgYPAWc,4D(%B%T0Aq1nSP4L*Lr@(16Y%F=2+Rq^K@-ah2GM;3.*`l,Mrb0;:l?+2PU=)2!Onah!9p&g2s2`5\FuDTM##T>)!a+
%?BF/Q`aVggqNu82RF8_>?r*8%4,*Up\jJ0C4ppRTWE&.'oOaKGSYLm^;s?AbI0k9ulQ.'8jI?tUk)QlA:Yj@_r,q*;Y'fF/J?EbG
%jVD4dKhEc,_Wb.bdP3^s>Zn(nUDoQF)ejqGZ7-Jd4kM]HB9ICWjkY\nJ+8M2IL7mBL>+7V1Ds'tGn5EY2;S"2#7B**UiM?AFHR4Y
%[H#a>RN+SACZLI,aL"3n1!X#+4-kbA1O2qX.#QJ5d[AdqY>h_K)[C&n2sE'c4teTC2>FB!o[/E)$^gpEBq2)M_)FSZG&t]a",>R/
%n=i<0IWh:FCRKU10m^#cqJ=qN_Q]K)V^W=\>'"ck+D%;+S=6Ts,Zd&C&[r''?R7MaiT?CT-^NLZO^!qse2o'H)*&!Ofbco_Yfb'Z
%(aTk$^mg-\n12.%Dd&%1\e?,([&@o`L'r9PNZi@;$(!uVWrf(TNd]N&bbj]u-!]N]*<bW7Y@;p)F\(6c;9a\&aCE=>7#_`TE3_jP
%\*T7)0Y#eIL[5[sO;g$Vn:VbAg:]Pf'Y%fMrtb8:<ruUo;9luLefg$VWUVR_=VZ!`m+S4*g&(5N4Bu$Qa1e-@0&Eu^I`b\rCt[pi
%?JPr"nS7BpU68kH4;(CNgZ=bM+C`2Y8aSoV@T0!(!"u).]P7`Z$sp.DC.(F7OT'?L,]H/g,b))gjgu&Lap7k5*jC;R83Mh6"UYe`
%*Rg%3U@,(fmuj.1HHB_ss+..VH2$:J?]84k.e\/o&AR2r[MF]$3(q7?9b#bK6s1gsi)!\.2Bf&?\+c8f>*Fp3K\PXVOephF#W-NO
%j](,jDB@E]mHOa[fnQElf9M?/f`(3o7<b'l4]UV9g4L(adTVi)MJJ+CF=JN/6r::-e[o((b*&CHe^[03bsnu.8et[3gZ"n,;5@&g
%l9(-+A6j.lZbo?NN7(6o;P(=f"Dte1eo8YhXH8+2o_)@GGMB9cm?N,`_Z?alC?4\.%!K41kN]I?%QZkm7Y_eWenepenSXA)Q/2]L
%!0t,]cfjMfp'N6e4HA\?a,B4ImI(@]#,UH#h.R^)P+PX3)(g.dIQ8Yd5'4+[h;3fl;O8O[pjkesfrKj*R,YISo$&?D`A-/D!#"`m
%pt/i)i-#@@@4-om\0rf3;Cq>=J59.j;]7TtDFN^85mdpXDnMF%MFB'*R!sS%M8P5i9_i4.]UeWj!g*,c4[t8Y"Vk.[A9_BK9JsT]
%E>P@)NNj4O[/#LZM%9?V()#XIi5=-kR7+s.-/dWLk2M:dXNHM'AVoBu8#Abagr*nb:-*>T3W0Z>Rsq+Y"[7rPK-5e=Q)ibpOsf7/
%mCNn<$WIZ@A!O-KHXh^eX\N[T+l+njW]KC76OWY&[3SW,+EOO0g1fkY!'"YTg<0g2pqWOs1>;]P6P].FL1r,VjASm#Y1.+Vg*P-=
%9aIrD`J<'W6IE24"^b!>i4np`1,r^mHu`%#[]/Xa#-96Wl;0hq`&8pAn5MUF9/V(Toh?G@buPOC%*Ct%j;A7_c1DXbG>qam-+(V&
%T7[XbqR#+-pI%?=LFN+4=FUnXil^'U\NA78GL*47J9O5%R`:WgDV\grj&#:6YqdemQO??rel;?87>KZqH!N!<0ZecBImPeR1u1,`
%b(o)JKbAq`"f<b]X*>XU6pM#V75^=(:D.JCNL:dA_[CnAbSG7B.r*hPPZoNs;%q1tq8`%9JdeO!+fUoP2!.3<D:Rqadlmqjgjr+C
%QR^*IF9SPWJ;6,pAU`BOK,:.d0LR'B;_%<h7V@iL;k!+_0Z3!HSbbg4c[j]\HL4auCc)RO>E,A$7rkd;eAE#&gl"R/c?QFkbh%?d
%G2*^gKPCs,b`LG1,%?1Fp24gq@J0T*.eE*dc>]fqd%c/[UPb-c>QCWb@r!\50<KI^PGtYR)F`<hT^B`A'T-`[X?$@Z8[_bO_8Y5I
%U'VV8fW?*R)6DZ-5M$J%*E'RV]+j1<N`;TBlI'*'*76l_$gb"Zci^/4m"-/u?ENC03BF\Dat,1.H@8YnXko=#I`c9LVRlT(l7b;c
%>%`gfnM.5)O)ZU4g84RX=2d[NL90$+g7RJ$`8_r3Z5H_%m;d!GZ%)sQ=^2@L\<J^g:`i&I?Q-_%ffQQTWol64e2=a@an_O>+'6qp
%;Os6f6.p><Lq'%dU[,>kGXa6(P2#:Wg-`S-/W;.`X=_c[DFOjZdLQg!YVo9JXre33?7nYh7clK3OQ[H*qa.s<+tNT$X8.c(+i$Us
%EaaTgY+[]XC(iPC5r)GE@g2+i;/!UV@]m;0lBL9?C%RL5PpD*`U=_cR?8l%EYAAu5`;MO+41>pRjkYgNh%(RsM*iYC:O'l55=g:0
%cXJHEALlE_jUXf]$M:Odhrs?GW+h?u&VDO80+s-e.u'<mbo<$"h!'ab5'73B-C;JDF&]N>N77>&&'*gY\S)aIFmbT["R=CH36\-s
%e=_(5'JkDo-e(^&P,i@dq,9>f)9O&g6]%+&[+W+h[oS3c!&f)!iA&!Kq]g<rbh-ctJgc(H\`fo+Bh>&[m[p&KpE&Ki\G?r/3P;[A
%Pj1jo"$*aC+@i5,WT.fOY9%#ueXHl?@6kh"#@fD"DPBNqH8u4h]U+II]&'q"39nq%/S`-4+=ku&jm]9/n_EWkX&7'"+.US9L&UaC
%5nB7QfFQOr]HQDt[`]#>6k:q+"]QJ=!R0%m5Y]mhK!Qp][H*T;^"I8[Mg%-^/0o%*@k'O&W6uM)4l#Sms6*."S8/&o/]'-q%b"(2
%_m-H%+fq\m9aOhilC`rLFfMIpTnFtPaC2iY%7i-L.sjg`42PeXQb6:"U7X.M;nsPV<rm\?/a/$<UNm1Gi5R+^jG8=SgJ4VhS/d5V
%#7q'7h+>&%+*i98^;:LU9S$kJc/[T7K(Jt_DHe7d#q!Tk7l`nhaCq)6o(r%9$s!t*j4NJWBuH&0IMBs#XC6*MC6_'T>?O[N5j+Wa
%8I)6[FmoU3'"EPXUn(KrHN</"ra=u5lV^u[n+q[sOQ'e0DZrDL7riK%RYF&d1ET?bL.>A3$M>Dhlb8AOk2RuKXC-TSEm)Rs)e$Tb
%KXUoL*uMjXqq&JH^f#[.]GEjlP)'f$d2EuTT$%s0>(aA8/Q_s'eET5LKkNn\+l^34#<#1e%Dg)ugXA4Npn2A`>WZsZ/78lZ#i-(r
%2W:!rZA>Me8CgW-r$84])+cD$[%eY+O'\i#Lo*jkfm!D2U[J-A&j1JaXRMcoDP-`W-)oc%XrWsPBf&03C6&L?+ou3H;tXb;&=Hn.
%]-u[5j4!f'RQHiW>E\&,mg8JJe:u.aA@s.Q;LnlP1a"@Q!PK*MV.iPP/h%3c(AR?`T:*a!o>mAoAo:P;c.%`u4;mVWE&T_>n9U$_
%-X0DGUP]H5p.E'lhb%=r,[stFBbrcN4D0WMITV//.5<1<q6ris9N.?6DVe#`H0V!qkqI0(=-MZc\s+GrD1l.OY:Nh-oQlOAld=_J
%hAgC/e1(A@kN4Bb;>@m$S3g_e\$CU00p<XimjcR.8u'Z^p&g33$>E$4-.?+K1j9lnMhm!tg/@>P%+QZDG)"h7+gE&7[YS)<a#_8O
%`qG4@^,GYhoL$J:.V[`dg0s`qJW)@Gb=0ckgIW:`MQ.@mA4j3Cj+I(tq^ZthBK?[C5kb_kZW2tg)K$@fd!JZ)$a\uGBgX2lnW<.f
%?'=q<bm`aPGt6PW@2V3l.d32.9lXSN7@_Ve$FQ>OSVG%8*nPrpV38,eo#@AL[$sf;Q?p-U.X-lOfR_PQaAN,UUrXhVfaeiKW;+3s
%qAlHT_q#ja$^+2a(B2-FS3q/"<p&ZolZ_e<6!r34D15*t&N52F^m%f,c7+q>G).q\c<PZ&!1s%J\UOa_=X.*6Zn'iEJStPD(r>>W
%UW;)pR@l7"VE?HUW4GpWDS"Nb<"<V\n$RNg"2opR"/VX,p+86RqbX6a.,$7Y'M?u9NO]AnLFVkbZ/uPujhLWs9C,W^Y;C`S*&X`D
%gb.tRNJ?Zn'&66HcFFbdGn/1+dNU2[_5!Ktn"iP3#(DW07]MGd5o<\JpXa,fB,Td\7E_28#G4'R*jrnBM`RmLO3t5\[MB#\</5BH
%q39Ugn$\Y<?@g&TPiYtV5ppNl'&hV>[HiVn$o<<lRsV$s)`c,#VX>q6E_UUR]WN=!1umPP]rQ@ZB,PJnb\*2sb[]Q+Z5JET)CD4C
%'PYi2T[3N$3C(Q9>A(TQF,S^,aTGdFlG+\NVL&[681o7tbdjnc(#Y(#;3I(limJUkV4)0sV$tejkio\bOK2R5f7*IMY.ps6l*>n:
%GU^foM@Lao0eq[:eE]tM_^;Ws?!hY(nnK3_K+4$QfANod;m:ok@fZb9RlhOC#":\Q(s8NUGS\Q<q$>SWT=.6.E==G3IiL,^^:oMY
%?RMbrEa/K$A#YoS*rB+792<7M_P/V!hG]c1,G*=p8Z*YpN4**>>sM0h(H7aE>f(V]Cr:RR@]W0B(?'9E`mR:rJE&f6qq\)'jSFh$
%k'hNp#?W-HYe<g0'gEHWK/O-j<N0[nO#q\2mlVVT(ju[:?&7QMeSPm=5-0t`[VX#*h#KqW38.mNd!SV!=abO"*VlM<pp=qt97Z6f
%LbgUa&RE$4g5"R)@Mc7Xp/\;@CEO5<>d6"_9?)+K'"RHE/DILBSI\N8_b?87I9)sbmO7=LV;#G7Uq6nU3V@VLRtLma/:#Fm\.!Nn
%!+jXh/Z9#iTp2"/;6c?DkE62<d;2ZTkOd[^X4dm]R;-#hX1.ZPG#C1c)AHt%[QPk[i%-q%<#1LXk*FM?]?r0>oXgL$I>Nc5,AEX4
%[F[ihe/UEb/pj.3@.eNm.(3qW14Upb;c,LANl`1NUI3Xn2dtM-e0hV57h39rPI`X^A'<gJ#f%R@HL8Y,UWXF,XnFYkX7"5K&=]]-
%Oa.Q-##Af.:o``qEt3s5[=P_cOd"s+OMn-/'m*`cog/8l]m2VRQ8OOo_DOFn"sg+m?<6)=!+!C=F,R6>b_ZJ:EJ#<aBhfK+eC4*t
%N2C]AA6]+\UuOt_L7Q"e&'M6s"b%BhqQM4(]V`^)r((k,Cc=%S#F`dfjDCA+N3W5&*QcCSVDSZ.;H/RY+1O06<(tEVf\Bh/\CA-b
%]*Ysq)Y._02Gh(CNaoV5Xqmp7_dqW,c*:'OTlEb8XkA^^nf6]jltnt@0DWM:RD*8QXs<8gq.&7DEe--2P3MT?%Y5Z;BaAusNh^"m
%3N1Nk/])-*:hNB+C9u&5BVWn*@U*=eoE.$pOrd%+2%FS_bc3='=dsQK>Kr;/UTdNW=Q^**e<VC[l#uhg?)^W$'h&iZd!t^u<rLL&
%$!+'?Ws3WnQ`p2'Q+^Jck7f)fIh;KhJm",C(bZ"";SlYP[bH15DWFED(MdFDe<:S>2Go-$-]q$%Pek5"(]qm=@[l!b77+SaW7HcS
%+m`a0"GdAo^k=kV1,0%uS/?q.biV3!:HA9a$NlUVS-UgE4rkr+kX&Y-%N9SERY;fp0;W+5Y,lS<a.-Rc8Wbd\6/lFo)c.3#-rlD0
%H2,o(;$71lNZT5:P4'0XhPt+uf:MiK+cN"%&/HFK[UgtYGr'-G`GEREEmOtXTlqB4`/q0s3b.%,&_LO=hSLq6"I5iti$l53Y&!fT
%L$E]s3#fM@VsB9`Q/>>*LX73?A?D8CKk(:d1o%IX,.lu*[;hEqVa=J"nG8\/.O;;04ZH&U7nmK;GgCl8GHZb[@^%I(F6G6Y+!j[r
%%.VnCAH-=pR>gAir>b?X&M@"mOX8DaB"2SajcN?3iC2.^9BLdP+1PuqAUN="MakI)buGjKnLXtk+E0"YG0F/+Rm;7D[7*,/Bg?qp
%hL0A:-GaZ+5KgaqmH(XTi$%j^939rR*7$^q$X!*?mpYSLT)ne5>cgo!@B3$o*cGO(!#X[.8?ufH1BSAO`F%::40,MPFAtcl#>/Sn
%Pp<k;LkEejP^<epAUGhFHe=.R3Ttt3`nCO1f*ng7jElQ,YMuPc*-QM(p-"M\%[@()RT=k?3!#^l,#H/-G#f\#p2_+d[dsCoiBBM?
%Baaqa'5rGPl'k>Jd$:jsQu5kS4.o+ZKk;Um,Tn5hl)C--/9)aEkGgN-8M1fu9tl>:,a6[5!2L@%8L*1USAq!llO>>Z>tA3#=E`>&
%_s%;FY]T;ljr=$,0T-+n$]j#;2ZSap\\I8^F+!El5F,d)+A@*qfUMiH5<oZ+$pUD-XW-LAT9i8i!VU2L.9,tb07-J\dL\WH-QUq3
%KuBWU$bW!Ce!u?U:5$.]EV)!'5I^t`0h59S+m)7]&E)k_/e3/<KeT");&.U=G%8s;0to3"#=_4EX05Jk_'KFe\,@:C<9&,,UPr=%
%fEfTjX^qq5D_dG`4I<2O<uF^7TSdN>M9o<H1Z>4>;\<+Rre@3WEZ#>e.Bn[^VVa8Xj5M:Mo01^%]Y2h*IFU7K6+uqWIXC=YIbgbp
%r=5RkEGWp$?]Le^h;(;fQ#B#boG55%=-@cp^=M*]o5WMpqWf19d>Ze^G*lrSdi^nEb;<!c*5kFNAC#W\JA2E+6Qf>MR6YJ[+8Y-J
%&f\#`D9LR2YnKu6al[/IkZ'mQFdTErp6t+'IjsjlY#R$V&RAR.\.^h*H2T2W7)H@`O:0q*5q1klZs(DJ0[TU"UMjO\lV??8Zq7Dd
%E8@5.4T9kr:YW@WBNibuicE?0<o9LC<3T16fp%ua:V]/HnBNOLc0'7a:q1K%Z#@\iXqFD%Ya+jG?Alh[<cs2j],V1WD#>2MnCOUE
%Sag_B3fZO=9goFg7#_pQUKU^QD:`^WLms3[8'CIc,FFk.lt@ZG",lG?290EoLiJ(l43maL%#N7@7Y6PFdN)>21rH^nh6.m!m?)8*
%-;XFt*>GVS79qodRQDrgNPSV]R!4II6u>c27P)"Bel5U8on\S'&iI\**[/4R)c6=mLalf3%7?k6r2#M7DWEbnqHJ'H!"2KCgmPE"
%['_0,#\,eOV.aZP"p]?cnu4`&kK\`IYr)j6iRri*kpZEC.#)&kCmt9l6(:f1eN$7aB9BY7%XpocoOdWojm[ZW'A9]^gI7""0XduR
%QW:&%e&/Al[Y*&Lg?gpC)".)kN0^2PGWhiMH812!OcYH*&+=sI\h?,<$PstD/;lmC!e$eLMC8jQ\X$U^lrha'5ePGCT$3_`OpQb=
%_IP8\5Z>3$kZ'B^S_5,-`q`l+=I2ZC'=eM;\73Ng,l+nnN&-%3UdOr>!MV&9F9$Q*Cqs.)!MpS?5QH!h`(Ld^OY3af2@#*bn>9-8
%/aUBY*_4u$/RCOjW[k>?O:ILKpCI^h?I=[d4bA9%9O]HVNFr4q.u1\!%;f&jCI3Kk1/FXA&0^UYot;dq._L<PbNGQ*`T#7eC(`g3
%#6?$)X)U)c2u`3=/Q`o-B5a_:(6hJ!Xoq9dCDS>rIOU]jYbZnj;KQBZVJ2=o_'Sh/KaV**Hi$>7;BCLo.B*[DaiRrn7uu>&Q+td4
%00kjri%<Lbh)FFR*;"o'KIS5`Je5!$_'gbu:u1dbQ\=N3ld0i<dLP2S+B28@pt7q.@/C`>P'#:17,hTD?/tT<Ioc)IO!9^AZR6N$
%O$,1T4](07E*&3),(p0X68[/)%L<m]Kha'qcr!R^\BK;+=QCJ&hu6W:M-!+&eBM.$p_Dh_;dQ_\)I6]Je=toam;@*ajY*==(>ZP%
%T1J"tIB#BLgf#E.'c1<1#j$F:8@p*VaWqI`3$fephQ-D2]n%'"!Qss(PDhd3EQZiS+Y2gg/u*qFUnS4JW6NT7'N&JB9.9o>jf*?.
%B_3@&fMdiR[tb'ToM<GYp.;0OP@'igSnF^(N/pQBUhTB0#G"kXD_7J.O@'6qHMY"6Y]Q+B^a,=.d\HYZaGdgafV^arN@.9G;O$Bk
%[;)pXg-"pQ^D'L`RBit0\28enXck*kRrKJjY/V<,r:)<.^s:]bq&"LJ[`Oue@0FITF(n[EYEVVC7"o<HXID!DPY]m!H$E_$\0W2U
%Gj;C#Rm[2V>+9b)N@1_i%Q,&-97_b=E]3LMA1`&!0iuXl-]!m4&^Jq^p5@p,(Y4S":<B2Vp:rpVYB<(qZ!=Z.nec]ceL5tO0>nr^
%ePjHu0o`ObknIu3/Y)f06'S=]D$(8R4.409=QdDK6.B(\-ckKPF1+tghN;gi;Z,_f*'bTPZ=2a)<PU59d.DT24N&;e5T7E>Xbh"N
%(hg(_*7TV(U'(a-eH8q_9Vo9j\q$0DbM0)5^I#e2.I!^S9KDT.6m(%[C><RJ*?Sf/682f*haNqS9IPkq18FQ.n??[m,t"$<,RDa6
%F+$O/M"5r0+I"*K&9$nl9B%"a[cAu[#msm"5X;%Pg8Tu<Mj`P_^=1Y>!DS2D_m&Q@K[_lYL@q+'5KG7!s-l?@CHa`V<,35X*`H[8
%\B:nEpDPI!O%i7O0+eo=?)[lgpA]nBI@B(8fu`$J/tA^V0EI2n^C`SsJ^&b[=g9uk+It!XeYOh*OuL$D_I$7=8!HtNs*5,TJ/">X
%IN/fa[*p013r%n:d(]G\,b@*-Be/G<6,0E0V;+`l*4Gq_LcPN,i$MNK2-8K&Ts^HO\`A=5n5+#D.,J?JWmTfigRI6!FA^VV/[8l$
%ENX=u..*^&A6*%o`K_Q=&;rOB^f`:!]u&._qsF2H.N,^:!RS$rdDLUOA>q6Ur&ETMRY7q'm=Jpl4FH&*-Xi&lq[)*gj5!nG)<*-9
%Q)R6>*n:`2Cu[e11?oiKA>n*FO9(iE^t=OnkS;F]LYg4p:(C*`0I8.LFpG5W$I#tJJ8N8;.c%@c=Y@"8=3-(6[#_Of-2M=6,a12b
%Ao\CpG<!f+O_`\s=b(e%6@qlC\LJiQQ=@"+ll\pGGdX6&6eYJP``F91L]cHKAiD4hP!3,@=C7)hK%L'AbSVA46rJ$nHLY)VfHF^&
%^dJs_mcqQ_\RoLkI`\nK7`aa%`'n+Gl<\>7!F;-ND0q_&_.Z!+e<i'_d)U9Z\N8ge#03:WNlKnX$FgBk8<'Rbim&Q8Mon(nblfL"
%ha<Uld%08&dmC?IFk*UUfs.cN]"TeL6\_F=KoZt(#\7@oCHl>N2`&@pq)2e3c78etYScZg@0/gh6Qc#(EtM9nL;FA9GtIpR,?[:U
%YqV3p2o$VS"*4pJ*0=)V2/OO;RR,E1LP[9A/-F'fnU-floYSQ\pXXnMPdR%^-^X+&T_!&hE<29_\iAkb7oRo*+H3j0EP^W(C3.8,
%5S<n-$[qjWgf6R\mE7tb3I4KM.EZAFku6Y'la*>iHE8he\_abT!rYb_N*C;-?JLYO1Y69M4_5EV9G^=hZC9_@kMkn$ETNJpmoW.9
%c$m9:c`GlL2@0@hS!Pf+F4a]Q9kq9PImH)hn/u_-&uArh(SKDLF3Lp%RA7]5MoE7/,+HK`;klbWS<TOue4/%Z9Gtmt=fNARfcpea
%$"gd[#a$&+/XnVr!r<KMBq1/smaIAm]0(*H>Z;V,Q_S841M)EV1KqC];r%t)IDrDD`nZ>E&iW(5ZphMu!OTU'$C1I2#:,UD&n,Va
%2pHrPQD3@h.7G[jTpg!Z:7<W@LD%Ju]7V@aMH\_is77osqqZ.c_@1ptMYbV3:hn-;a+O,_e\AV;RKln:IFdrW.9+l9>,cT0\dU`f
%C=s=Ce"N]f\+I^b#A^C\q2(MNZ]s1"S`)-_,Ee!sNO:0;TJH"(MC(<PLjt0$dBeuT*"!mFQ>&`#1:JLe0&_4V'J;]@@8&*fMn3=_
%G=sj9&D$bR6!]]2i#l(Y([t^8qEX(UON[8*2^q*kV??HP0S?]c'q7AE@>]+/.%QC^iIljTRpC;Qli<I(XLl\dkBpO01N9XbX;aYF
%>E8jlPR8b9;E4/GjJrgp'mMA\Z<*9RW*A0T,oK4t@5jb]H6e?m-10]eY27d<0s6MaPkHd*-;DkpG@;(tVo7S-CV)pP(QLW%h;P(?
%+/s;trP)@rl5)(eF'TrGo'!n%rFjUbpNFkiFm['H7$I(oC%oJe99aOrkuFh!r69<)0XV=["D40/S$q#ckpi-iLXL#G5Na_jpd*$U
%s*tr4j!(5h98P+!OA&.9QOUK@mb:C,N2t6NpT)J4@K]h8\:guTTf%EjS.%;Q&=k&Umc1b1Bg_)rg)=q).JiA<`o6mG8KWF7,3'?$
%nWt_LB:<?(@YpUW-Le>QYW0d=+R72!)q`&e]?0V9;pZ'Zfs1FV;]LKUWGi\8MiS^q2B46eNf+*D*8%``W5aTZkYYFfaIK](e3$sn
%.$`cao6kIK[bU7cUON0))"+^\O-pIu)TQQ`*!3^%:Gg9a7g2b-68&C[SC\nQ"E^WAdq(XS61boYY(m+rU'R,3Qi\0\KdSpu,b@84
%2.W5pj;U&-!hlc>j.!loL!Z1S.F;L3#m-CXRhT[X[sQ_bebj&VcP(@OTK`#_No5Hq2i/(h.?Jq^Kdt#QGL\RP]ST['C],aEiFb;S
%DE?I\1X:SC[=DHW4>Y8X0!b8M^Y"@6QXO_=djgQ75rZkm<OXt.!+FVj<KH2X4#D!"lD=m>gtCgc8m%t#RnRkSVMQ)m#?8B^6shBI
%&Yu,1T:gm"#>nM9'`.s.LkM?%OWV!d-o,\<OU7eC"V.Bfk-Gd42W+,%Q$n[iW+S8J%:c\Bip.d8J$Lj=VSMs]#a!A>O9D55!f>R#
%K7e&12V/Sh(C-+<d%6Yh#;BhV!e@4baFuWeW^uqiY_2UZ2dqu*/<6H6WBG33A]quX_o'X/GnUuO;XF0f0nC%W$&;Ol@KTA0aOO1\
%2$A;,N=<MMlS<_"hr+A2QOPPr>>?XC)<\u[(6<BORSu2kfmHj&JbO9cfR52mO6-[O]'8<._YAcAQUsd'O2922#s*i`YR>r$iRlBD
%%73CA&S$1'#;V0\,uKd8?JL6R"`iLJD:d*`MZ**J\@?Aj08AOIkOLW%Nr+6ADO/#I5c.hUa%=K6B)(Ks2MZImT=D?)lX7n/EpqRM
%9N[CI-ABO%TLXZ!LD,ncm5e_(<1UD"htZl%NCnk'rS6K<F?.@@>Vb3$!K<!ii7^K'q]M0a&DLL(6G1g&%V#h!=QMDiHS!E:K<:;j
%%Zra>RC+-NhVHM/MYFf^nh::sD!<8h:$O?"@p1mX42on(qkDCVlatSsn*aM'&k"4cg"(]?s85]+L&qe(7H;*G'u0KrWM3DardiZs
%d*L1H!rEj6GVX=iDC^pMZS-C1Wt;g'is2YfpO2KmYjCXU""2sF3cKV:Wb5M]i:XDu02q'fhdVVT+6ks.?KRi(g_]n\=hrq@J))1B
%jn@TG4hdW)-1aATqo,I_`fmt9[jek%WB#)@7(NkPHr'qd`,Gd8+P&lP:Yht!Kk=$5+hJU&s86\fWC0Nl8S6UhDW2rt>kY6`]UCe7
%g*+n1ZLPq!'^<:LX%)mJ:lal^)`!/-T3Y=uH^a)m;9:qjr;s$l"YEDin]$6^R[/Wp\Ytja.Y1Op5Q<;l!VQju##&p5s1.,S!\!P2
%!M,OHWK'uCKH:^u,`6OH/$%5O7-.:KF$c%1YX8gHLF]86k=Cuj:jZ8F3_O:$I+HDuZaYESOH\%ZrURo!YW<"a;L.%<\BP%ca9kWV
%ZCMF5&oq;Ibm8OG31C0^Lsfd_^B`es654!O<u3S>M':S%LMD;;>._$l#)]C:fnK$*J/.9EY7fcUbmP@_?\Ckq8Q:e5fHHf]QA^/j
%\T%X>b)cWYS<XL1nd2TY">I,3fV#!o/9BZYnTZ5I_ISQOY,FQs'LfVQ]3cN>>L>6q?SDTEY(L%c$tloQ1hj0fX8$H]fI1`]j]GTh
%lQCm5[kon=V@\Op@jZh+6+S,7f-]Ts-r7DU&E9ugc<Y@/2c%hJ0^3Jl'>CQ"<%V/,THCFoZ/Cd#XK)1_R-b&oeuhV1P$l4]\@:R<
%WWHmTUVN_Pr2g$`kL4CrEG_aeQ5p1I:mtZkB^F((.?d&3Y3L:\^uW80`&Y;pfp7d2#bJksVJ#t7e.6]PIVhE_apGSJ"C&3U&0?KY
%'q2'NE>s$FDE$A\\j.$q^l<+P8qh_!0N'5fl^6fAIEVU&IE6[KXRddPA3T0+;*(gM,aACOej4ej-MSlaq,T)m*1q%JDm"tlPUIM:
%Jsl];S7Ye!iJ:0Zb?+V!U:d"nes%F<U@c6Fhp=;\U+6\T/E4\60?5-i+YD+5]<1n/F&n?l'-=2B0s[-1H).QjcC_B!Z$Wr.GHK1M
%1btD,$PiRri,"(P`D`j(l-",Y*E*$oROhp\4q/-B/AkD5E'N]B?Jsg&MpfUpG@g.i7O%%5OR:e=RG$g*G=>e)E`t,l>?*nO\W6E8
%#Io-<l2Z80OMZ]t6!$Oj8eSN3!"<-b&l?ITU%or/0<$RtRp2mO)l+ad1ILr:S#UkU7jpMl1P&]HpCWg?gmk]M7AI$>'8FSe'ujA`
%o>#*6.VXm=>,QRIO^'g5g:2O(*663\U:A,l-.lZ3@"+-\?%b&&/omU%phPZtW-QV/gD$XHmb,#4,0oe+H%Tud3ELE(g%nWh&[5,5
%K:lNMiZ)Z<X@F7LH4qk^;hbkrkN#&5i&H*^X'^GdI_gZMU*#lS#f%L^#^8:E'S1jkb4=8jmt/a;+X%e9N@Z0t*R)Qo3-E0m9qodh
%<%SN4\h+,ji_uT!;3La.D&]=YR,QuBf]bnn8A"NLs6cK;CAdo*qkG>+dl(@$P:Z]h0C-riSc4F>gI:lo*c8Uf_EVTG1'25aMl;ou
%reLmUr6%^C@=D1mX[j_e(&l`56M0lFXg]0_'R^)!;E_'2:j7WYFVd:N[n-,V\Phm)_*3&7C[32W6=/Z,VEU5N2<D+kIkflal2l@b
%6*D$a(LGhcda[HoGjVWb*dt!NqaF/6`@X)6.WQVIr9%C(:93u!JAT0NTD.?Ge\=Ju[bASIeoss+>B!7EVLtr2C\.9s4K"u;ossu1
%.o8kL,B7(:3Af>4p^>B5]HI]-KCN-aT,ahTC<BP/?TR;Kj"@q;^;fVCD%\3)+dn4]8o0X6X9j*am*,(faZ2RhJ-7<Y9QC8LaEGG4
%PYE`)%NGo'(O^893%fNL&AjZR_:+c6P[4mKj]F8b(]Y`SnMqp4[J\.lZBs^d[/$P&SicA7F!'`FIaK?N;[@_HOXlP[cco?/YDQ>>
%G=Skf:Pe)h+`Ul!gp/,p=dX&a`e/R'gdYU3iG+ccFT+4Ho2%3-Vlf-UoQ#nnL[saS\Z#3jj'Fe)U6Dako"K/5(Y+jJ:&5"#.'qsH
%1FV6*q@0MNY*EC5>-hT1ZQh+Ao[Dol^Z\;f=bL"4MnJMWLXO?e^E/bLnD\S'3^%TS7G[d%Mah#p`P]1B05=RH31+q^W<G94#e-";
%oE.:q!K0mi/KW\<qOKs9@CNqRJZK!8*$C\*gB]CD2!A]R2Y,NlFaUP^,TAK0@lHQ8g/b_1q5*#c-6`%q[APgiJUB'0BbE6Wm)apF
%IembWFia\pmp_04Febj_n5_ntZ2:'6<7*Ggk=r31O%_L;0'WNKj81=@?SncUb<q$eE<r'bSH3[*'],8L<n.NP`3Cu-[hDZKrIB5b
%VgMOB`j586!7Y7q_t?d^(j%(Uh%.\OpV)[)rQ?htpVV#+!.77KTu/L,_a<Ko&Q=gT7a;N&nHo*PK7EL*n$HSOCkDDf8P*&K$?C:*
%UUI9DEqZ_.oXJhs=8Dfp;6OJT1#a"Uiaq7WbccqR\6:H=E=WXrh2_ou0Z&T0o^5)Gk*9<AcNW]I</0<KF$,K*YWg=\@Mq[[-k"YJ
%Ns!lR76T<c.!"7IU>7Dmp%!!4>=j>V0hR.Fp<M]7s+_N-?aOMq790n\"r`N*PBn?"MLJ\R1\9ks84P4bcP_tM4Rl$MnK*nqdEtBA
%>VDD$!>+">V"UB,rBoi23*d'X03`e`BrtW>P2Ec_bse+/qW4aG/pd<,`pX^\3\R"`?[F>Z`;leUig`fF1b5stI!n>/-LA=0$:/YW
%%ut'_"'8X1M*LaOeOmC9r'(qZG\tF]!/@TEB?`fSq71XO?1@@\mscNlo%M<[/FN&`*>b:?gp'r4gt)Z%gK-JRlc/I8A6g8.^Kg1E
%h_#FLSU7Q\e]"6UHLSV<N>Di`6]L!,g@VuR]P^S"gXm<Hh91QJdL0,tp;3^)p=7jlEl;9$G?5RF0:/U&[nHU^+1\WA0!)f($h;)k
%]Wa78Wr.<W2d@?P(WZ@;OoK/3>Sn!TrU>:)I_4e&q'p(WQ\L\Sr#VOC%'S,g'S>7-o#\2.&Eg1rH`@*X.&-f:+=8@-V!\?6^bDJ_
%o;6]]Liud\So-`W,G/$eJn)p<1T9&e_8E>$K7:$a?Q+]6<EcPWl@^_MYr;+Z9&Zj-`I(&l-0,g"Rfs^HRVXq@=o999l!jOV>'r&[
%+;^:hJL4g^#dKJ!16asQi!:$!Ju.S2=dt!3V`3OIc+Ce]`dg`5m'mu#,,Lt(6"!`qCh+BSEFH*^CUK=4W+LR)17)u(@IC3_Og%.P
%Y/"6j$-e^M79SWm2c<hP5]%b[!VR\SfFE>^jj:.C#GK7MmmKtAauu#qnldml=n!U)Q"UUT[]-VI_"Qr;1S(6p2p'][>Sp@pp1+2T
%Vi,^]2MuID-*L7ndpH=S.31dk<$qc>B4HRWR"#g8\cUZ.OH.adPm`:F$(*(.[0S83W8mu93CRRJUWCiVQd>*b]_lBkkN1_?<P8+O
%bAUb;n?OLY^^f2@[qp!G^)_/WM>OF]FLcFa._qUrX.k/(\R:Go3%MG9E#0+V0U$]A[U$NZ/`ro%DOX1L%DWEQgb+_ZnMn3Cac[0g
%_We?;("1cm]Nl^":0%_Th@=_&m-M?dn(U?GgmM.?C^%hUae5IF4ML*o?bS0I/L._MjsAIFQ8N[0kVBh!njHkATN-kg,.p6i$Z`6Z
%][<!LGA"URJ1-4:.[,"84R$HX"e;/87+utq2S.IuN)*p2W`u3N\30F':'jmk'a\;%<Am<\!44A`/KX8CU'h-8(9kbi_HeA=fmE&s
%na/4>$PYC$<sDZdJ;rY6Bk.k*e(]VZ,3%uIUIeL-khs6,lR`aR*kB"%o.&o@!pgJnC&S44Y<cZJIO@U7Lr1;3S`R")&(S/@#.ibI
%+B0Ep@$G_/g`\B;o766>5lI(9f;oOB2KR,gO+Xet8;@];pkmTXQ%f:dZ$0u.'XF]KHHOVWI=5#g=<E0<(OS2H@ld$[_]gI''a&P8
%igVk5XfO=oo's[,Bd11]g.XFiBp0>e(m65`<>tuCMVJh(-aO<tNE7+[d)dHoWSf/IXM2cWCL@NR*/B;)s8$.a8#rJL@fQ"!=/IB/
%9dW?4cHc?">fJL&C^Ute"+nb[=<p*j:k5TEfb"DmK^^gL$ZYam7.$Sf85'jAAT'[h:C-(hN[,PG,L,Igo#i+9M:ji0n>Aek*#8NZ
%!cj3.+_]R2-)!XUV4p-RZq&`',4IQ()pX1rk!hRS*$3+*-6\B4#&rOm7DK<=W0t@GGq2GaF/<'0INPP+"QmE)`1YRE[aob7.omRS
%3`Ypnf<;bDZ,m-;]KsMpiuPZCA\*,pP-tCfdb=3ciuB*HSJVJ>>W^$//MG^"0;,)A6^HpZ*_m`*=:sPJ/fUVDSDgK4eRPL$5RLk_
%I-FE,.ITnPUgc"tYgmG62plE!'nZjW=),8aYJL8J>dW%Pi&eu8Nn%tGk0fB_bqL]'9$s[(`B"\93mUDh6&&#XcbU=38G.?6k(F-L
%Qb7-K!lV?P.*to,[oI*eP$aL09QX<jGGGuTO/mUnS,Yp:5Je#g,<8bYEcr3n:L`)Q-<6/Z`0$DsgTY>q'Uo<+m;'Nm:$g4;&`L>_
%#qhSTnb?Ns:TSj)X72LAS^Gi;)Pt=fBAc2nDpK@\9!agDZ\X:!M[DsIQp*hNBq+7tVBlsRe$`4&A&p79Lt#&*pMhgIcICJe/)!au
%"'?gq$:EQr[K(YI**&H/N=;@aJT3\SjR?g>0.R]rIhL5L29P?MiM$,1dMfb"C_da)OLu8Z;_AO+V$TAnN3$V-o`XJ'LK'HIJI\]9
%*"2Qu1;nJqE86Zhg!ka:`qhqT;u':$DfCX":mJ+6@ltBaL\"Uifc+D/0#NJ3\7%lL#Lds63319^D%1Ctl7kG/Ri<]/nE7uUcL(g'
%gk7hHo:+(f_9/&qV^iP(dY_o#/K5ju:elUjGhAtAXerk(#7hSTos^7j`IPfeMd9#B+e=9bTP9^C;38d,A7Tl_n1OZ$BM+Fo"8KSA
%jP>JAOq$?t1*CGY@C-IM4hNU/\mPga=RK5X2p9@pf]is1;PP!hl^i6U?$V5PYJrKKSHM_smTqI`];"K28?i2T-D>2![2)2T3]b;4
%Ylck!c#dGPp"9[Mm\7jAbJZeAH"U.d;gfI&'7D`nD%%$aD:E:'1ml6WX,'0tfW>?\e/3[OU#"s5"ZRUb4IC[W[MG^q:Cr*n(G@I2
%pqWF88!hgi=!2OK=W=i/%\9r0<W9L/*$9<r3J#of/mUc:H7!._OH*;h9jn!`E4;Vnho\6$<.IZul6A'u`/ZW<I8"`Qa/ZWQX'fjZ
%6=YTV)pOcj\FnpP!bVi*=To2GC>^-Z,^8e'IIC%I\e4eu\U[snEKrXMe'mdbBPNm&Q(J^@/fR:E&:5]^HXU9\2FtaI:cgTM>QN35
%bK!8%)EC<`:+UBW=)?r+ls:EpJ=tBqkM&!))[6;.0&A^d<9UA/jt(f<%eK/f<]uh'#8H]:;c`p4pL*ou#KMD&.t9tD_]MJGs1/G(
%UTMDu8p_ig=uR[X#PM5Er9ELiC"Z<]dB^P%aMSR1*/lqte2[n_]Z-hK<CTi`VuKc/n6CUAq]-jq53IO&K%\5\4+?`l6MWJjGno54
%k";tcn2FFM)&ch:.H;o9BuNk0NWn@[,1biG=HT4(Fp_2g(oc7OWNp%t0'/i9N$Hs(3GG=.[ilu=R[pWS+k2dVVRicOeC)YXWK3"I
%f,D7_)Z:qNPj'`Q%/fKjTrQ'Rce(>M'MGX=,-l;/PDqqEIQFXt@HOuP*^W37_'PW&O.m^>drqZe3.f`.mn-K==`_A+p[0_ZGK2.T
%\.Idl9LrU&+uSPikdBj9J!mt#:[s7mG$MEJTh!tSfOgc<]h1;];QL`ji=H_P`=\^'[#)tdqb&:2_n#:ueX5;sF7No)IPo*:Qbq:!
%\XKA;+RjI58ilVSV@WnHam^VpK"Sm`EpV\_73mDj\Hq=!>p.N+So`un<E[sZHU%lXg-8DTWARTA:ajSGec:@fgHj4h$==;0e'hd+
%EqIknps&!%paH8=O3?ZpD-]otLAK6T%5gM=I=@--HRO5+fiHW$E`;`BcAJN@ou`5ldV(f7>le8pZ"F:W9m'^@Gsl`d!]E)&8E(n7
%%Mm/OWUHLW'VVQ5QdTp%!Oqelc+`@)TClHrE(?`M]!5J,-&%p1dZZc!as",9n>BIkOXnD'c6DHbUP558Fbe"!ku/R9=Un7+*,.s)
%Fa1Zc+5l#4o:?c#O73T($S$h/EXYAcWrY=,`]5\4?hOEa0O5+L_goKdGM#\$`P"+lU=n/sF4$*dh0hL5n*Z.cmi^gD&Eol^4Y=k'
%+]<*ATTh2bHLNjq7SUHuh<4?Z*_fLEW52Q*f&aR1.\sHt&gV*bB7Hu2TQbZ]RPSk9@u"/XfKof_06CSA.4Faq>nL=7j),&%#oKDO
%ffdh7<ChS<EiH!0b>bJY?WR*k[JJd%Xh?R\Rn_4Om#F>1O18L+df>O+gqO]<lS3jZ#G4p@ifKd<V4Mu"cAPH4)B=-JYD:Ob+%d$k
%WK`m/%OD:pFSgT[pkoMO-U9EG0^Q%?d@)Na!_&Mnam5)#*7Bar^RlM74pQ!Rge[qD`?G"s<*l2rQ\Y%Q&Ueef?X8jC;h7"bgi$+0
%9aI7:.t*r^E="UQjoO:NIm9UXOF*3CDj@V9b"bGE39o%Re)Sn#X/da)1'Qg*%LI+i!]$EV"`D(:96^NXkm#_sM1rQC>UE(!_"e24
%b9S6?c:I#54d89)fBUX,-1MfY\XJ.JOG#p!dU(H'qqnrf4,MB0`g^^[PGHogW7#sP7hhdsii+fZHSr;R.Q*Z#>`oRBr#%8E+a'7+
%jSBl07FaOBH%J<G8]7rm]IJVkVkMsL==BD0XCfGAkdq7;3lAl2P77Spf);?l*NB@Z!jC<r2&_9a:E:bk2,tXOCm!=>M'Kg&lAAr/
%7?t*.8r8/1W9g7XoQmHP<YWZZ:"/V08W0,<>9**&.5!WU0ua?b6+!sVm9N8JiothL:sTtdS0O2E,n;E9+3]I/I`0";d5XpAUneTh
%W!$>bf\-Fi7%L9X_F7eOeZjg@;]<J:^rK<Q(!=TG4[`JqmPj@?@J-#Pc"-Ir6^6@!//FLh8ckZ?%n7.hVKC<:_L8;nr/m/QS1Qi\
%P<G1TENVrSW"Ld+G2k'!mMn*#27mLnCA],nK4NMIJ0Z8t0H9k8bBI7J[A4@*9&B2Yc6C@qF9(Id5rq<HGoc?:Ya@3:LFRdu[a=9]
%.9pR[Ut05HXA'Up9$EEN'/hfP&tBJ'"Vuf1F\Ud<FA_r(^$%(`pW\l%9>To>B"5,A^9R*f:M7K).C#b$IUWo33[MAU/%FZ`2>u&T
%3Wc)?b]YFQElJ@E6c(7`mbGQf+ZohA?RBhFKPkf8chd>NCL]N/NN4KGF#V(n-%$^(]C,JH$/"Qt+OX$@*f129n/#^@P7J9-7&\E*
%#1I+-(frKsfg,,^'u]YU?XF=dV=V<\@%DYckXS#XX("7&+V<5P9hRrf3YW2>:o2oQ9&MTsP?Ds>13icQ9a31(m:0I4l0W%*IPp:7
%&FRdJ`$_H99].+r#7"CYq.fBomUt%uR3+mub1b!lFNh%i>#OatkKOVdeQr3*_Fd"8!idg@QF7G_QXaJETjs'b08jYnAPQXT1rhD$
%Lbr$5#SL/*![j&9qhGaJ[Cu.e%Lp/HkuARpl"QcZjZq*e^`M.$-<r&gdX!o3h#X097>F2A5V:tH*p?r<_krh(jTsZr7-_Y8/a@Ug
%K57*r7Gl5(Gj8hFau'n#2AG7)L?m;=G5o+Fr7dB,riFF7XhSP@qI/1Ui>b#T<ke7X\R+*eTBFU0-XCp446S&\G?YWd5Z]);BT<bb
%W.k+\!3_ce:]Z.*on?bi[O22(YZ/CJV#-eTS7he0k'c.K,ppVIF^%*6^Y+Qe();gZ&aPt4W#@M%Zt`5`@NrQ++)hQCIBG6i.'#,n
%dU5R,S'32l:@AB;gXuS*d_1(o#N$O:YPrP2EMGUAhV*--C"Ig9r:aH'f3MlUc/I)g5*HKITXb>Pf_(&-bRDgiEBepok*TIRYMAfN
%LSE[\!etKM=1aGnq7:JsNiR(F6TNCqPleEaHF8MnW/;4&pKq1#\hli[r$(ZB_%gdu.-e7p=2R-om('#]H&G8CDNfhQZ29BsCC`oW
%I<'HmY)jrc6Zd]ug?MeCqc%0jqX!(!'`@=LL\u)T9h8fO20C'V#:8RX.i5&p#9W^f_.\O9(7QKsq!sEQc[ube=;*S]E]Wu>&Tl/B
%_?>T#I0cI'?*K-W+>&(RZWRH=,JV2$bI@$ES(VnK6TjU5iAK#C^"!#XHP4'V+<WDp7_N?IVJ=S5/l?.\U8L\F>p?PWZ[SlH,WpEs
%&*1J=Hs71M)pm!K\LH&8]S*%>`XJP-nSt:2oXQ/eXu@[ZHkH$'CFX$&.55K1F=s%T(<WjIid"RT8l95K&=>5fd854g1Z[kQ=N^A7
%.6EEEMCt2/oj*`uB'O>e0G$$qn1S'I!S5)^0?dI^OQniZir&fr<>MS1'*s'q,..bp3ZRBiZCk<.%4h52hH5/\o*Y/Dkt&'ePU9ka
%&j-U6p4?XRXLQ,Qib'jadmL:0mPg(U/um5R#K_Ze\OpmhKDC6AUlKkd+$H#'79pFK00+ZE[;dhY=B+Xn#WhT8,7H/tXc'3kA$S(%
%PRe+p)j5X,4NQ*KiW:KeL9+&p25.&a@3J%um*7eGWF@m!^@spI!l^G0%+'di0_r9c`0,o`?gDdOXDQ/)pUN]3\Yc!rJJe&K^Km\X
%;<ZZ!qL@taG>UN.d6G&!XG^:eGAGr;FNEXUH?E'&D6\'`_rHQ!K`YgXS^9CeeRGiI*f'13_EhPL*Z00bl5*b']poD4oC8;qI&\H%
%@bNSTRbW0amc4QA\H(J\='5[Vhd,7KQYmIS]u@?P[qT![(k4_/D>U(rZFlR9UH&H)PK7r#<mr^//orZ8?.k`uDIEUjA>b>U=Y;!e
%+UO"!jMS%[Eat5LU1WF@-9+8RVQ6I@bFn;LTi'Kf:`1GepgGMGU9$gDLblXp'\cX9D$47XKTEXt8V$GNHV%h]N6_']eFo3H-H-h&
%q;/U'f:0_Q4inbi!h!<Bb1>i#EGB!)SJM"ki6-g^UMEYeG:-3)oG8cI-$7i5c@VB&_Ud.WPV?OUC*mudRY`I>IqHTOJ_AP;aC.nc
%.!LQ<@3[_id\Q\FB+'PPa%Wb)7WQb8'[^f);dQSp-U;!$CXg&243U\95D":6aihj"#SdpW1sP251*Hq`X&LetbB]2/r`FqkJ&?'r
%I5<OZ;?:r"T2g4Z%)eDJYPB'AN:21$19Tp'R\sB7l^(?4!K)).@/:Q<F<<P;Sbe103"Hi9gUg&,8_%\j,<Z;$S2$dn<-2,05O3N0
%N3s)I_b-d4ARt\^fMTGtT9hH`3n;t[B"u'MJDYR5:"89:=Ogjd&0IH`&<`O1F`SJma(?tQRfXes,Lk"W*<Zgc]q_#e?qQp@=hEbM
%cAi)QQFu6Fs5$.7<^i7Sc*B<=2be!8H[?Xo"Xc&/ZEZ'<rTk>cs.7F#l`R3q/rB7=E#@ni8g6Qu8RDn:k!ltT)kK@[2M3F+/8KIC
%HJd!>lI/;NW>_qoB[s;5k2jtck!S;o6T3YMUf+008:?XFV*/-k[\Vk)q%=k)#XBYk;N:2qn</g8L\Pj=<6Y!d$1fjMoLU'2TBM!P
%6giq^]KS,o\;l!I8s\K$#d0LAoqf-K9.&-OHkYU1!DU.+B?M%9$@0I=TZK853#2F:iH.&W"!.?Yp-Kb8`rA4%c<[-cX7U.V/pLrU
%;-:eb+J:K0=l=iL3*kmkJ0,#^&H4A]FI.0H""&d?HE/f^VHmsX2Jh2,)t8p[H@f42(1SR!j:S7O96mm`fe3aFgco$Nf6.uVb[::h
%BaBOsAO'1VU2l3h'\^f'2'=20FNAZH@],&W]OS:pb]Rs9O`j]JMoKlP%r2Z!H7+IUp>fJdlqh9O0^[*N6g"(j?>$o$2%\`'W!j"s
%?1NTUTO;HlkNIDpDWqPB7-53OLp46AJQVKNQ=7VmOd#l=FeE4W*u406G+NPPil_[ig;%#n7U"9LK=n1(kK-9dr'h3d9/3[f*%8_&
%*<;/lEt+hkj=iAfmACBq=4k(0KMamu;rlYoh!=OZ)?_.OR>fr&"Wa/Sl1b0<5P_eOgb=*%9P@XGdL:-T%'_Mp]]]sk,r1GAO!53E
%(2E%VDE=T>cMDIt:G4'fhYr>@c,UPFhUD#-2BGK(c[<J(r9sLt,uL6"*`?aHJ/j_JEB&V=*R/-Vb8M,3jo`/AZ#paul%s$C47An0
%RY&P#&YFU3?qpHLJ_-Ee5fm\":fh*[q;BeoE/BKNIT/)/nr2>%#Y5ePA!K'sc>P0aEK+gHK*?jW7-UEU6n"[a#IuY80Ug;ikA3K@
%ag2[Uo_N5&[HocF9Hk]YqN[@-5'0i8-ip,P:JGptdY')#-SXWEdOF1nm)]acW[9-N;\iZ$Vl)S>=YdBb6o*=i;ZaY7>@@c'K`[_!
%eYXZh.N3J*<,tp]2'91M4k9mZZi"&dAtNC@f2F1!npUa)Z<:G-TRZ3#Z.K(GU1M^lD8Xh,8aj),UrDAc,LuP@,:u=uh@tWBfGT'+
%,Yp%f2%\'Xc8J19[oL=``76]7T58<bZl33H8P]g#[E6LX8/1']6URPXoN(VB+[%f9%3X\a%;(tb$(0'nQ%js4%2M<Z?j(7=g2Nbp
%6T]#;?*^b98pH+/CmP-7HB9`>1eL:GTCHehF?Z\&9&s1.#dRn2=`K0J2f54'N`,<7p'7t!Mmg$L_8q$[HT7!$l=Rqf(&8`p].V\<
%dWtDn;8d,kgd%Gj+%?(7[cmLma3K,8%5Cb2SIT`hTnY_3E$/:PdlN:i7m&CB7Qd.S`S*F@+QmB%BZ)AS]Xn$rGpl1:3>-f&0hFmt
%BJ!1V=`PQ85[+tQ(j0QdJgdDJ$K750[=UHLUYe<u;Fj#'@rj&up(/7)5jHl+>'7>s:@[1]GaAt,O9'1Rg_Cm_>,U7`LW-1Y^El`_
%HGUF$8Kn74*XfYQFN)U.b&Xtt\iVU8-#E+.><G$*1RP6Kg+N(0_uAg;(J_&$@nF#/iI+Dt0R]I-.L[$)9]2OoY^#"7aV^W`"7\4#
%KqW+EB+D)Rio@+46t\URAdJm.GgA/mVW4W17-B_'gT'?r)e83U(7EMs\E%7KDTCH2(*tGAN#RCeTEo$"I+Z*XV8eAJcn"2@C/.0j
%U-SGp::KtUj%fj--gJSJG(C-GMU$]@Oc4+6cLkZO/u9/\DkR1mD/5NCE\6&6L(in4fR1Gt;T^SJF=a'a_jo?/pK4`#MrR\X^I&k6
%pq6.^[O?0_q_K=Dj&g;hs("1)0/_S@h9.GT%nt"`YD;r#\N;gR%)8n)DGBdN^(7_f]GGOAZcdD?b#U6r,[WPB>CkW\,DpTf)9EN3
%Z2)&//M=T!g`ik1?mU1[&S8_H=[YW6-s[b(Z4BcaUdto0.MA**Hg&a'P?J2NO<odA2B[j!_VCHCZdImR_<g*\-;'0DM@lMk?gu'.
%Y1\ttBpiW]S3Vlb-KuU`fB&O/g<rC/BA8Hti?q]4<ZV(I5,sL+<uYBiVe*+0i2@m5Q>I\^=XaPd6'+sc_B;ppg)!0WeI]?GL<$GB
%J0<*>.HgXg4SG?ER%i!Gs-$N+JeWKY_s!9K2Z:"X_F)K0DiCf0Nj+qJ:9@S6Q>H,P1Cr"Qr05LT6'cP@H^p8f=-JpO?cpc.,10.A
%8CCPEdBc_eaWka>\7,1q'?Q\3@lgM>RDFi;6PW4<UHu)IrSq7X:HM<]W$l[K`)FW!L6k9=L\RNbH-Vmdn?Bj#(,=k]hK9q(b,(6q
%,_,;[We1,7?O@hi0uu\:1$PPI.XtS*5`..CbZILg/s_=s:gtb%Xk:?;Se/"0dQr6oCfWBuUk0a)KF&2m!\0IU\:IQ74@=]kW\g-!
%R<-&uiJO?3:,:KHi<Nq&R!]J2@=()%-%A=Y)K_;2F!W$)ScX"8km9s_aT;2K7.44W?ut<qNu>g$>B[+\(.3'7\Ck*E[T8EC1e0[X
%IhHh.);'@"(?B.op/eW6KMeA=V8;`,1)@05M_5"!X04i9`ju+/^@,,ZJ5m:b8O/GBP:Lkj\JZ4_URZI4*Bp,Ynu8b1Ro35P.,'F7
%n0i94D-ZliB$R6:.$B.QoKSQ\-;i!BM0r[qR=4i#9>MkA53[8??qH&$o?FgBU1Mc<6Sa%0d8Zl[b3,ka:pr4]&augX5m"QT&D)2l
%=]?2/n.q_]agHoY<d(>QZmM4j#[BDTnEcZ;lMcPh?ZM/WIk_=H2\h6?T^s6Ig\cNN.l?4@#pG`U8t$um6aFp=7DnmLI_#6r5atiH
%iR(L:MkWCGpLAs9q7>e6O5J"Z.--e0X<+7Zd#RZR473IKn,$0n$6CN!CMqk\<?[@GrWme+4oEHX[OU';[S+3MH*J-;8K4Q@[g8;l
%H(g(S@51,uF[k&+Na9Q-Q*"!J,JVF0:R^%j\?ml9ZZcf<q!*%c<1Lp"5nf.n9/'FL6Q]M/IaK22i'i0krIb?UdkI+jUBC+ARCCb'
%bdV)LZ:Xc(0cA@)Oa`'#T6.h[Y>a>kFQ.4c"ASqO]fpF?:TW[p1A4q?l*^1nH7jI([>&C.g(OU9lSK!h<!I[ULIM=S4:-K/mCCP8
%baR;:MT<Zlogp@26PXS=.1p5,>030EgC9ur`+*7o;Mj5&jE_I.rAC1Q>G#RMCo@+q-UfH2'0\tr[2!C)UYE/EU9N?@N:]D1k$p'M
%N]bC1LbUoS0M/r:M%JkWfo^o7%W_ND?=2`a;\tDS&&%o?3XY4F`b"EP+mB1>8<-?14NpV3jZ:;!Ht4>];psd^4A]AN/CInu7QrNR
%0?3Ee1`q))_cREE38\?A!Ni<Ed<m"s>o0RPL$@d_V>5qUG<VV]A*:#h1pu`Zh%t:=^(`]R883ClCEOYhe8?AU0h+\CP"J>MDK3N5
%>cOZ=OXmLCM2QiXeTCRlDI3suPCT,l`&]709,,p)KFMn$H51+Q?3QgSru@TDAY;Q^Nb_J@H]P9^p,)%0M%#da'OT6uf>o6Xfr#QE
%<Kms^!Hu4]n<[U&Bs@^9+j`q\XJ.$PmaRcX9r&)q9rl4"]joiqOeNSD-U5s8Cbl7c.ss37*7Km!D$l'52CL00"fJl[=6t07/H#Vh
%I;\XD`;S63>.SK1,fElRa56_%/gQ=;jKIh.M@ef.I=H(Ilk+p>VI?#VI?,5Mbftp;_ndnL)'t#X^>!X^NS1BOVa]2X`5*QsF!:Lf
%0qZ]j6rCCr'A_/G+Cn5BO2_ag:_?K*[mpk<')WO[28^+gAdkK4clD#M>!X(j\Rpa9*i%dt5?G\u`A1lm2]mCF*Q'eTOm/Bu+cqlM
%\R=:n=>MjL@XF(SV$H1_MS,jm")4E8Qe/'F")2R8T%0PJnSW!"4Qm%,Q)`dAjd1SreIJKsSCno<f0G:*d9q]i9_>Qfd:N1\nYAHF
%"6AX8e)==F1QWZ&3#m0@6N;>TVBc.^?lLT;C+7!6\&*Vk)/B(]3"[CG^6mh*OaT*7b43#`'TnMqL+O%O^q%7)Ob/SQ&1W>(?A#1_
%lkO)WGtDXejN'etflEtZnW"gtqR[,17"1>pLQEiJ%[0:mT-C/h_k3AklQ3QmKNYqjL^[jGIH!R_>XPRY0FX=McYcMW7L*o2X+,(<
%Qm&'[\O9WVo8&4N,)&304+)g]WY<^AdZf_qK6:1Aa+^mP0G4jt5:@H3#ZK_r-:an3d=2V[!<I!\Js$!a=74X='SG/5V?f]oi*Q_O
%>.0f/E\c;@_C<WgoA>(+;ARYIIlHV3ou9=?0o[GFk.i-arPtqc(i^@h.KS?mA9ZnIOMk"Z,18tt%N`'6`UJ>a>XV*HbXigF&8W"&
%/)bmCR*7%K];YF28j5o&oIZ;6(j[e>gBA45a*>3uA\Zc<#!]^E1ABN-GP^K9l[>K#5.rtKrr%/0d7cQHd)XYC\[IEEeNNQ@RC%84
%I/j9ZohsIXQ'iZ`_[E4Y45Nh*5.B^_XNg,",'fcYf.*7UV"flr9P%HJ;^\307hD_<+J%0K(GVI$o#ou:>4h://?\bikOb<:GOfg=
%kH(?BPNT<O.V4r%(T+,1q$RAgoFd'O-T/r!]fXSf2Xa@-*'Dpf)[8!qO\YGuqNZWXRF6,#D,8X5BE`FjAqY+b@7RDORjdLHJ.epe
%B".3]lo3Kh/[mR;/n\)NRgl$J_"pdjgBsTQWK_U@\]2*lM`K^,N7iW1)2#'lPXgj&1mmD^V:mUMFZ:7<6KGh)WA"0n]#KaNm(p@i
%`8V@:?[:6FlD]&nE,IM2;fPcq&qCEf;;<8<o[DJi9VACich,.R?F930$?_!1aG<f([NFHV/(=5=@OC5&)raTN/q\!V7s=,%4K!B2
%j8F,ZB[<qS%735=(f4`H!,R4@b^#A=H]FYr_Y!=04S,D'=*bHt&KgskoA),l(JF1'FOU#k,</7d?I(U0A.S['cg7@TgSnMNcNP-9
%#C1+iNF6*H6dud@1A_At\OtA;4KU<PmuGoKmFnk6JcuL]F<3"^nkurW$OGCT@oa>?'G@H&P(U:HOP6N*:5t`se05_PY'nT>4=<1=
%XX'(H'RBCm>WoOjrMiXQ/k`^p%f?o1%(Q#2.\"aQUUG,^Q3aeFUim,W*)P96\.-*jV.>#lD#DeJY=Hh8h`q):^](:Kq02kDrO9Q?
%qu?ZEn,E.WJ,%uXZf#d$oC)\Hp]'=c^\aZ'lh>o(lbE;.J,J-+^OQ.:huEX>r6t-6l1b5Tr(h6\pP7Z+j$3L[++F7`O8n5^rXU<f
%FF2tbroS/!dsq/Y^\Y]qeaT^~>
%AI9_PrivateDataEnd
