%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: bg02.eps
%%Creator: Adobe Illustrator(R) 17.0
%%For: Krol
%%CreationDate: 7/31/2016
%%BoundingBox: 0 0 900 481
%%HiResBoundingBox: 0 0 900 480
%%CropBox: 0 0 900 480
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 17.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 17.0.0 x256 R agm 4.7700 ct 5.3328%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.5-c014 79.151739, 2013/04/03-12:12:15        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Web</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2016-07-31T22:50:51+04:00</xmp:CreateDate>
         <xmp:ModifyDate>2016-07-31T22:50:52+04:00</xmp:ModifyDate>
         <xmp:MetadataDate>2016-07-31T22:50:52+04:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>140</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAjAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A6VnUPlLsVdirsVdirsVd&#xA;irsVdirsVdirsVdirgadq4qu5D+Ufj/XGk2uEwH+60P0H+uCk8Tfrj/fSfcf648PmvF5O9cf76T7&#xA;j/XHh814vJwuAP8AdUf0gn+ODh814vJcLoD/AHTEfmp/rjw+ZTx+Qb+tj/fEX/An+uDg8yvH5B31&#xA;sf74i/4E/wBceDzK8fkHfWx/viL/AIE/1x4PMrx+Qd9bH++Iv+BP9ceDzK8fkGjdA/7piHyU/wBc&#xA;PD5lePyC31x/vpPuP9cPD5o4vJ3rj/fSfcf648PmvF5O9cf76T7j/XHh814vJozA/wC60HyB/rjS&#xA;8S3kP5R+P9cKLWk1PSmKHYq3Rf5sFlNB1F/mxsrQbAUdwfvxspoLg0Y/ZU/8F/XBuuzfKP8AkX/h&#xA;/wCuO6dnco/5F/4f+uO67NiRB+wn3N/XGith3qp/In3H+uCithsTRj/dcZ+Yb+uNFNjyb9eP/fUX&#xA;3P8A81Y0fNbHk714/wDfUX3P/wA1Y0fNbHk714/99Rfc/wDzVjR81seTvXj/AN9Rfc//ADVjR81s&#xA;eTvXj/31F9z/APNWNHzWx5O9eP8A31F9z/8ANWNHzWx5O9eP/fUX3P8A81Y0fNbHk714/wDfUX3P&#xA;/wA1Y0fNbHk714/99Rfc/wDzVjR81seTvXj/AN9Rfc//ADVjR81seTvXj/31F9z/APNWNHzWx5O9&#xA;eP8A31H9zf1xo+a2PJb6qfyJ9x/rjRRYcZUIpwT7m/rjRWw1yj/kX/h/64d12dyj/kX/AIf+uO67&#xA;NFoz+yo/4L+uO67LTxPcD5Vw2UUGqL/NjZRQdRf5sbK0HUX+bGytB1F/mxsrQdRf5sbK0ER9Sf8A&#xA;mGU+OHI/LF31J/5hj44X8sXfUn/mGPjhfyxd9Sf+YY+OF/LF31J/5hj44X8sXfUn/mGPjhfyxd9S&#xA;f+YY+OF/LFwsZCaA1Phj+YCjTSRVr5e1K5kVI4mox+2VYKPm1MhLVwDk4ey82QgAfZsndj5FkEfq&#xA;XUqGYH4YtyhH+URxNflmLk7Q6AbO40/s4QLmRxd3T48k2j8p6Uumi2eFWnKUa435c6faB+fbMY62&#xA;fHd7dztI9iYBh4DEcVfV1vvY5L5J1ZIWkUoSv+6gasfEjamZw7QhdPPz9n84je3u6pbJomoRf3kL&#xA;pT+ZGH8MuGqiXXy7Oyx5gj4FRNjIDQkVyX5gNX5Yu+pP/MMfHC/li76k/wDMMfHC/li76k/8wx8c&#xA;L+WLvqT/AMwx8cL+WLvqT/zDHxwv5Yu+pP8AzDHxwv5Yu+pP/MMfHC/li76k/wDMMfHC/li76k/8&#xA;wx8cL+WLvqT/AMwx8cL+WLvqT/zDHxwv5Yu+pP8AzDHxwv5Yu+pP/MMfHC/li76k/wDMMfHC/li7&#xA;6k/8wx8cL+WLvqT/AMwx8cL+WLvqT/zDHxwv5Yu+pP8AzDHxwv5YtxXzrs45Dx6HNaJl2pgEZDPB&#xA;KQFajH9k7HJcaPDRsem3kgqkDkfzcTT78ByBtjpMkuUShOcJkMYdS4NCAQR9B6H6MPG1nHRVPSx4&#xA;kcDvSx4l4HeljxLwNhGBqCQfbHiURpv97/M33nBxMqPe797/ADN95x4lo97v3v8AM33nHiWj3u/e&#xA;/wAzfeceJaPe797/ADN95x4lo960xkmp3Pjh4mJg70seJeB3pY8S8DvSx4l4HeljxLwO9LHiXgVo&#xA;tOu5V5RQO6/zKpIwHIA2w0s5CxEn4J1YeVY3iWS7kYMwB9NKClfEmuUy1B6O20/Y4IBmfgFS+8rW&#xA;5hrZ8hKKfCzbEd8EdQb3Z6jsePD+7+pZomiz2165u4AV4Hg5oy1qMcuWxsWOg0EseQ8cdq96bXuk&#xA;2V1CyNEqvT4JFABB7dMqjkILstRoseSNEC+9JP8ACrR/3sjODsvpKCQf8oMRtl/5h1H8j19Rv3Kc&#xA;PlW4eN3kkEVK8FIqxp0rQ7fjidQGEOx5EEk0lDW7r9pStelRTLuN1hxEcw16WPEjgd6WPEvA70se&#xA;JeBGWWjXV0OYAjgG7TPsoA6/PISzAOVg0E8m42j3lBare6bDEbXT6zSE/vbxum3aMdvnkRKR3LPL&#xA;HFAcMPUesv1JJi4y5HZHV1NGUgqfAjfFING03uPNuuTQiL1/ToKM8YCs3zPb6KZAYw5s+0c0hV0l&#xA;Du7sXdiztuWJqSfmcm4RJO5RVrqc0BAYCVP5W6/QcaSJUm1tqNlPQKgVz+w2x+jIGw2xMSi+K/75&#xA;/wA/uyPEz4PJ3Ff98/5/djxLweTuK/75/wA/ux4l4PJ3Ff8AfP8An92PEvB5O4r/AL5/z+7HiXg8&#xA;kTa6dLcfEIRHEPtSvsoH3Ymbfh0kp9KHek+sX8NtfCKzMU0KD4nU8uRPWp2Ap2pXJxsjdo1IhCVR&#xA;ojvXWup2c9F9MJIf2SevyNMBsNcSCjeK/wC+f8/uyPE2cHk7iv8Avn/P7seJeDydxX/fP+f3Y8S8&#xA;Hk4AA1EI+nf9Yx4lEa6Kq3Mq/ZjC/IAfwwW2ichyVf0nf/zP9/8AZg2bPzOXvLv0pqH8z/f/AGY7&#xA;L+Zy95d+lNQ/mf7/AOzHZfzOXvLv0pqH8z/f/Zjsv5nL3l36U1D+Z/v/ALMdl/M5e8u/SmofzP8A&#xA;f/Zjsv5nL3l36U1D+Z/v/sx2X8zl7y02o3zCjFiPA7/ww7IOoyHmSolmkNPQBJ8FFfwGHiaiDLp9&#xA;iPtNCklo0yCFPDq33YDkczD2bKW8th9qpcv5W0+RVuJEEi7Fd5DX/KVa/qwAyLkSx6XERxVfzS3W&#xA;PN8RjaKzW3uIW+HjIsjVHujIi/icMcfe06ntEVUeEj4/dQYncXDzyGRlRCf2Y0WNR9CgZcA6eczI&#xA;3t8BSBOp2I/3b+Df0zAPamn/AJ32H9Tb+VydzhqNkf8Ado+4/wBMI7T05/i+9H5bJ3L1vbQ9Jk+k&#xA;gfryyOtwn+OPzYnBMdCqrIjfZYN8jXMiOSMuRBYGJHNvJMXYqmNlrl5a0Vj6sQ/YfsPZu2QlAFvx&#xA;55R82Qadrem3ypwf03cAqj7Vr4Hocp4TV9HOhljLbkUz9DI23+GuS1dzRRU42yjhJ5I2DTYk+KT4&#xA;28O2NuZj0kRud0q80anPBbvALaJ4WG5klCkj2jDKx+/J44uPr85jHhoV5n9DBJHLuXIC17KAAPkB&#xA;mQ89I2bWYoTu31+C208wxRSPcnZXlcMqDxFAp+jKzCy5sdTGMKAPF5lH6br9pcUjuKQTeJ+wfp7f&#xA;TkJYyOTZizxlsdinXo5Xbl+G0YQASdgOpxtfDUrN4ru0guov7q4jWWOvXi6hh+ByMZWAe9Phq3oZ&#xA;K0eG70MbXw3ehja+GoXssVpCssv2WkiiH+tNIsa/i+RlOgnw1f0MlaPDd6GNr4bRiABJ2A3JONr4&#xA;aT6h5gsreqW/7+TxH2B9Pf6MsjjJcTLqIx5bpJ+mrx7gSzOxQf7pjcxqfY8d6ZbwBxRnlxWf1L73&#xA;zFqt2vpmX0YOghh+BaeG25+k4iADZl1uSe10O4JZknEdiqk93bJ9qVQfCu+Y89XijzkPm2RwzPIF&#xA;LItA1SQchEAOxLL/AFzz2Wsxjq9EME+5XHlfUj1MY+bH+Ays6/H5svy0nP5Yv0UszxUHu3/NOI18&#xA;O4p/LS8kNbaTPOZeEifuXMbbn7S0J7e+WT1cY1sd90DTkplFoGoj+7vF22IBY0OGHbU4cjIfFidA&#xA;DzpVOiauf+PxfuP9MtPtFlPWX2MP5Nj5ILVdN1a1s5pjchkSNmNCwOw+WTx9t5MkhHilup0ERvQS&#xA;y3/SH1PTSLjit06xRjkw7ECu3jlx7RyAyjxS9A70flInehun4tPNsa8U1CXio+FVuJAPo6Zh/wAs&#xA;H+dP5/tbvy0hyUWg83qTS5uGruSLg9fpYYR2oD/HL7V8HIFO3uNRGpQ6fqWsyadNdBzAZZXIb015&#xA;NUhqAU7k5sdJKeeJlGZoe9uw6PLkvmgpDqySPVpX4k8pAS6n3Dbgg+OQ/lDLGVeIb97gZNKASDH7&#xA;Fq63PGaSOjEbENQH8KZnYu1tQOfq+H6nFnpcfuV4/MdmdpQV91+IZssXawP1RIcWelrkVVvMGljp&#xA;IW+St/EDMs9oYu/7GrwJLP8AEmnVp8fz4/25A9pYvNPgSTbTvO8lmoVOcsHaNqUA/wAk1NMpydo4&#xA;j0lfw/W5OE5IbXsiZvzHiutLu1W3niuWSVIQQtKkERmpIPhXbMU66webnnIAeaj5e89JY6JZWc0E&#xA;plgiEbEcQKLsv/C0yOLWcMQO5EsotMk/MazNecEw8KcD/EZZ+eHmjxQu/wCVi6d/vq4/4GP/AJqx&#xA;/PDzXxR5qi/mJo9ByS6B7gJER/xMYfz0fP8AHxT4o80m84+cbW90qKLTvXedbiKUq6Ko4xnl1DH9&#xA;oDKs+qEo0O9kMke9NtF8/wCnXEl6L+4e3Vbl1tS0JIMAA4k8Qd6g5dj1kTdnr3MjOPejrvzvocUd&#xA;ba6NzIeg4FFHzLqP1ZkQz4z/ABNWXOIjb1FIL3zDPf7S3K+n2iUhV+4dfpzMx5cXSQ+bq8uTJPny&#xA;SfVtasdMthNOxYueMMSfE7t4KMnkzRiLJaseKUjQYvd+fNWhPq/o6Nbeu4Zyze1SOn3Zg/yhZ2Dl&#xA;jSR7010nzvpl/GQVaG6UcmtzQ1A7q21Rk8naMIRsgsPyUr25L4tduZLaHiAHcKpb7RLdP15qMvbG&#xA;WqjQrq5Q0Ub71zQarPu0Uzj/AFWI/Vmoy64z+qd/FyoaeuUfsWjTL8mnoMCPHb9eY35jH3tvhS7m&#xA;cooVQo6DNAXZN4FQ943wqvjvk4KwzXLiby9pN5Ik/O51C4ItzSnFpOrd/sqK5tMdZ5xFbRjv8HEz&#xA;SOOBPUsD8u+ZJNB8zQ3QuWe0uHEWoqzFqqxoXPuhPIfSO+bPUabxcRFbjk4OlymMt3u+cq7lQuxW&#xA;MexyUOapTeabb3Uls7llNq4kjCGgqKUr92ZWPOYAgfxBhKIKeKaqD4iuYjNvAqV6vounXs0F3cQh&#xA;57YMsMlSCofZqUPfMzTazLiBjA0Jc23FnnjNxNFUtOMHFQTw6bkk0+ZymZMty1E2bKOZEcUdQw8C&#xA;K5UCRyQQ8O8461cDXtSt2CwJFO8aRRqE+FDRTt3YfFX3zpdLAmETZO3e67JD1HZlvkzS7bVfLdrd&#xA;3RkE5Lq8it9oI5UH4gewyjU67JjyGIohnHSQkL5Jrc+T4KcrW8qD0V1r97A/wwY+1j/FFhLQdxS+&#xA;TQdZtt41Eq9T6Zr+BoczIdoYpda97jy0mQeaF+tsh4zRlG77U/A5mAg7guOQRzVVuYG/bA+e2NIX&#xA;hlPQg/LFK7FXAFjQCpPQDFVSS2uIlDSROinYMykD8caSYkc1Eug6sB8zihpZVduMdZG8EBb9WCUh&#xA;HcmkiJPJEw6fqM7USIRj+aQ0/AVOYmTXYo9b9zfHSTPSmI+t9b1e6mZxItufSgI6cQSOQ+dM2kfo&#xA;HS2Eo8OzV5e2sREUrA13ZetAN9x75KMSWIBY1LO8My3MB4PG/JPYHtmRwiQo9XIi9j0qwlv/AC1o&#xA;v1O4QGN47tiwIqKl+O1fs8qZxufKIZ8nEOdxdhGNxFMomk4IT3OwzVAW3oIAswA6nLUIyC6tpxyg&#xA;lSUeKMG/VlcokcwlVyKoO6aspHhtlkeSHlX5r6nI+pW1jETxtYjLMR4zHjQ/7Efjm+7Lx1EyPU/c&#xA;67WSsgPP3CtHxpQ71b59M245uIH0N5L1Yar5X068rWQwrHN/xki+B6/MrXOQ1uLw8sh5u5xS4ogp&#xA;vcCsLe2+Y8ebYgcsQjbZqxD22yuXNKrkVaZQwIPQ4qlN/dW9hbzXN04jggUtI57Af57Zk44GZAjz&#xA;LGUgBZRlnfW8sCssgdSoZGG9VIqDlc8ZBSCxHzb5B03X9SW/WVrWYgLcFQD6gXYHfoabVzP0usli&#xA;jw82qeME2nkGnxWmnwWlsoSG2QIiLsKD+PfMcz4pEnqzAoOgl4NQ/ZP4YyFqi8rVC3lpHIpLIHX9&#xA;pSKj55bjyGJ2NIlEHmktzoFpJUwkxN4dV+45sMXaE4/Vu4mTRxPLZJr3T7m03lX932kH2f7M2mHU&#xA;wycju4GTBKHMIE3sKmglqfBasfwrlpmAscEz0ZX+X+o6VaanJf6k8ieglLZCjGrPUFqAdl/Xlmnn&#xA;GR2LtezOzsk5kgWQEN+YH5j2tz5kgsE5vpCoscy0ClzLQmRVYg8o6DjsN6joc2MNPxxNu8ydm8WM&#xA;wmKmeXks03Qr25jM9raC7jDmMSM4UchT9ksp3r3znpSy5Pp2H473nsejiPNMxp3meJQsemqqg8aL&#xA;xpWlezUzElopk2bLlCNcgskk81QQuRp9PhY8wjH7I8Q1NsiNASRYKm3kEM8gXnG7IWG/EkfqzqyH&#xA;VELSx5gHckE1+VP64pra1K6NI6eJycOaYvTfJXmKC28sWUM0cjNGJBVKGo9RiKVI7ZynaenJzyI8&#xA;vuDn4pekJmPPmkSP8Uroo2AdG/415ZhnQTDbxJpp3mfy/K9TexIegDtw3/2VMx8mlyDoU8QeSgkG&#xA;oNCOhGdC1oyHWtZg/ub+4jp2WV6fdWmVHDA84j5LasPOnmu3+L6566dxIiE/SQAfxyP5LDLpS8RY&#xA;fqmtSapfXF7csPrE71dhUDiAFVQPAADNhjwcEREcg6zKTKRKXzTilEO/iMujFiA9D/Kfzvp+kWl5&#xA;pupyMkJkE9u4UvQsOMgPGp/ZU/fmo7V0UshEoc+Rc7TTqw9GTzt5WuEYJqEQJBpzPp/8T45pjoco&#xA;/hcviDcWrWE39zMkv+oyt+o4DhkOYW0baXqgsvE77jK5Y02rm8bsoHzyHAtrTcynvT5DJcARbzz8&#xA;x9RN1N+jg5+r2kf1nUDXYn/dMXzY7/dm+7Jw8I4+p2H6S4WqnfpRP5eaq1zoUcbNWWzYwmvUp1T8&#xA;DT6Mp7Uw8OW+kt2zSzuPuZorBgCOhzUuQ3iqFuIuJ5r0PXJxKrBf29tGTcyrFGOjuQB8t8PASdlS&#xA;e889aajGOxikvZexUcE+8iv4Zkw0UjvI0jiSafWNfu2J5pZRn9iMcmp8zX8MyI4ccf6THiQhs0kb&#xA;ncSSXD/zSsWyzjrlsi1ZI40FEUKPACmRJtV0U7A8oqEdOR6fR0rl2HKccrczRayWnnxx32pJdX0K&#xA;bUNRS9Z1VkCjitRXia1Na5tMXbBjEx4XLz9ryyS4uEWnEEl2q0kYLvUBCQK+OackdHUIhLu7SnCa&#xA;RaEsKMRudieuASPetqiapqSEMl3MpBJBEjggnr3w+JLvKbLza6jaxvprZx8CseP+qdwfuzpsU/Eg&#xA;JODOO6E+sqLleVSN1VqHcUrQ+9RlnCW3g9Bpb6zXLDipqSAq+JPhkhQDCWPhNPWNG17U9K0aDTw0&#xA;Zt4IgrIyKRUVZjXr1JznMurlKRrkXLgSBSSax5on1SKSKWytIjI6u08MXCUlAR9qp613y4zJDIyt&#xA;Jcgh2KuxVTnkVIzU/EQaDJRFlBYcQQSDsRsRmxdc1iqN0pWNwWH2QpqfnleTk24eaa5Q5bsVREGo&#xA;6hAQYLqWIjoUkZf1HISxxPMBbR8Pm3zLF9nUJj/rnn/xMNlR0mI/whNlFQ/mN5nQnnOkgXcc4kFR&#xA;/sQuCXZmLbbm1Rz2T5JdrWqTTWCmZgbzUpDdXZHZa0jX5UApmdgxCJofTHYODOV797vKnmaXRHue&#xA;MQmScKWVmK0KV36H+bKtfpRlA35N2lnRLMrT8yH4fFp3w/sn1v8Ar3mnn2d/S+z9rniSJX8x4qfF&#xA;YMD7Sg/8ajIfycf5yeJB6j+YF7PGY7OBbYEULsfUb6KgAfccsx6CI5m0cTGbi6ubmT1LiVpX/mYk&#xA;5mxiI7BCb6XcQvAsYosi7MvSvvmPlibtCNypXYqoXF1HECp+Jj+x/XJxiSqFsbhlk9M/Yc7DwOTn&#xA;Ha1THKVdirsVdiqV63oceooHVhHcoKK56EeDZm6TWHEaO8WucLYhfaDqUM0EUkdPVk4IQwoTwY9a&#xA;+AzdQ1mOQsHkuKMhxbdP0hONJ020091uLlhLcJ/dQx7qh8SelcwNVqzkHDHaPeiMDdnmjLvUZ7gc&#xA;fsR/yjv8zmFDGA2oXLEuxVQa7iH2at+GTECi078qeX7jXr6SB3NrFEiSsSvxMjOBtXxTlQ5i6vUD&#xA;FG+aYi0F5n8s32iXC/WDWK4eUWzVqxSJuILfMEHLdLqY5Rt0q0SFMO1J7WKSjMXlO5AA2+Z2zbYM&#xA;UpjuDiZjEHzW2cNvdA8Gow+0h64MsZQ5oxxjJN9O0yeS4jtrask0zBY4xQcmPQb5i5MgAs8g5MYA&#xA;clWSCeKZ4ZI2SaMkSRsCGUr9qo9qZESBFjkyWpHI5IRSxALEKK7AVJ28MSaVc0E6QxzMjLFKWEch&#xA;FAxSnKh70qMRIXXVVGRuKE+2TgLLDJKoksv1zyDeHR7bVbN1+qw2LPcA9f3ZqOIHUuGr9B9sxMPa&#xA;UfEMJc+Lb8eTjSwHh4h3MNv7XULeVBfQSQSMi8FlRkJRfgFAwG3w0za45xkPSQfc40gRzW2RtfrK&#xA;/Wiwt9/U4fa6bAfThmDW3NYmkzsJfUtl8V+E/R0/DMDPGpOxwSuKcP5f1hI/U+quyeilxyWjfunF&#xA;Q234+GYY1EOV9abqS/LldirfxLQ7juDiqKi1O8j258x4Pv8Aj1ys4olCq+szMtAoU92B3/HIjCFX&#xA;6daXepTPFaRmWZVLlKqGIB3pyIr1wZJiAs8kgMqg8riaOxu4o3haekN1GymsUq1VmKmhAbj/AJ1z&#xA;Alqq4gd65ebLhSjUZG0+eSG5ikVon4M3E8Sactm6bg1zIxjjFgsSEEdatuyOfoH9ct8EoWHXE/Zi&#xA;J+Zp/DD4HmqIsZdT1H1hYWwleFebxhqvxrSqrsWp7ZDIIwriPNICK8v2l9rEmoW5PpXEEDNCoAU+&#xA;qGAAbl9IOV6iccYiehP2JAtCa/5I1xLvRUq1zPMZ5bkA/BD6cfc/7L78u0+tx8M+gFV57tsY1EpF&#xA;mS0q0lpdRrCzxMouF5QEg/GK0qv0jIiYN78lUSKbHrklWtIi/aYDCAUMh9L8p/8AltvP+Bb/AKp5&#xA;iXrO6P4+LKosmg/MjyHZx28Ed3Iq20QhjrDIfgAAAJ4/5IzAl2bqJEkjmb5hnxBIvN/nTyBqmlKZ&#xA;Lq5ubqyjf6pGEZPUkZQB6jFKblRXM3Q6DUxyUAAJHfyDXlmBG3kdqhkZriT4nYmhP687IAAUHSZJ&#xA;ElUmDRstxFtJGan3HcHBKIkKK4pmJeleX9V/LJEs9U+sXltewlJHgIMgSRTUiqx0YV/DOT1WDVgm&#xA;FRMT18vm7nFOMhbKJfzI/LqWR5XlrLIjRtL9XfmVcAMOXGu4UZrh2bqRtW3vbrCSaPrf5V6Tfpe2&#xA;17dNKgZQJI3ZSHBU1Hpjscys2DV5I8JAr8ebEUFfUfMv5V3+n2+nvcTQ21q7vCsUUi8TISWG6NtU&#xA;5HHptXCRlQJPmFNIGIflOkkcq3t2xjZXUFWIJU1Ff3fTLr1ndH8fFjKESy8fmb5MA4i5cL4CGSn/&#xA;ABHNb/Jmfu+1s4gkXmTXPy38wzQy397cgwKVjEUbKPiNTWqE5m6XFqsAIiBv+O9py44z5pP9R/KP&#xA;/ltvfub/AKp5lePre6P4+LX+Vx+atbp+VMAYJe3lG6gq3/VPK8ktZLnGP4+LZjxRjyZHafmV5Es4&#xA;ILaO+mKWyekhaGQkqBQAnh7DMCfZuokSTEb+bdxBJ73zB+U11HEglkgERYgwwyKzcjX4iUJanauZ&#xA;ENPrI9L95Rsr2et/lbBaTQxySSC5ThJK8cjPStRxPGikHwHbBPBqyQe73Ls3qmuflpqUkLzXM0fo&#xA;RiGNYo3UBFJIG6HxwYtPqoXQG6khBet+Vv8Ay23f/Av/ANU8t4dX3R/HxRste6/KpBVr67H+xf8A&#xA;6p4RDV90fx8V2XWmt/lfaXMdzb6jeRzRNyRwj7H/AJF5GeDVyFGMa/HmuzJf+Vs+SP8Alsk/5Ey/&#xA;805hfyTn7vtDLiCX6z5+/LvV7UW13eTCMOJAUhkDcgCOpQ9jl2HQanGbAHzQSClCXX5VuKreXdPH&#xA;g/8A1TzIMNX3R/HxRsta+/KhSQb67qP8h/8Aqnh8PWfzY/j4rsidM8x/llpt4l5aahdrNHWlUcgg&#xA;7EEen0yGXTaqceExjX481FJjD5+/LqHVptViupUuZ4/TlAik4HcHlx4/a+EZTLQakwECBQ8wmwjJ&#xA;fzU8jyQvE17LR1KFhDJWhFP5cqHZWoBuvtCeIMZOo/lNxA+uXQIrVuElTX/YUzO8LWd0fx8WOydw&#xA;/mD+XkX1Kl3K50+MxWxaFyQCAtfsdaLmLLs/Um9vq57psJE1x+VNxIx/SF6SxLEcXA3P/GPMsR1Y&#xA;/hj+Piig16X5T/8ALbef8C3/AFTw3rO6P4+KKiwLNuxQ92lQHHbY5OJVK7t+ifScztNHmXE1UuQR&#xA;VmymBQDuNiPpzJLrZ810rpT06/E+wHzxQAhVnNnctw3j25r7f1GV5cQmK6uXgymJtMWhjmQSwkUY&#xA;VHgc1m8TRdmDaHdHQ0YUyQKWsKrkldD8J+jtgItUQl2h+2KHx6jIGKFZZEbowOClXYFUZ51RSFNW&#xA;P4ZIBUHliXYqqRTtHsN18MiRaq4vE7qa5HhQse8J+yKe5wiKqDMzGrGpySWsKqiW8rdqDxORMgqI&#xA;jto13PxH36ZEyQ1cT8BwX7Xc+GMQqEyxLsVdirsVdirsVRFmN2PyGQmhFZBXYq0yhlKnocVY9MxN&#xA;zMD+y3H7ts2+EVAOuzm5LcsaXYq7FVXTr/6rMYZD+4Y/8CT3+WU6jBxix9TlYctbHknxAYb7g5qn&#xA;NUmtYj0+E+2SEiqk1m/7LA/PbDxKsNvMP2a/LDxBK0xSD9k/dhsK1wf+U/djau4t4H7sbV3B/wCU&#xA;/djatiGU/sH7sbCrhbzH9n9WDiCrhaSnwGPEFXCzPdvuGDjQvW0jHUk4OJVVY406AD3wWqm15aqa&#xA;GVa+xr+rLBhmejWcsR1Wy3ScaREMT+0OgyPARzZgg8kLk2TsVdirsVdiq3mvPhX4utMlwmr6Ivel&#xA;2RSjLRaRV8TlcuaFbIq7FXYqxgvW6mr+0zH8c3cR6R7nWZOa/FgtJ+IDxwshH0kriaCpwMEI7cmJ&#xA;8csDYGUWPL6nDyNW4Cv3Zpc1cZrvdhj+kOe9gSYRE/Eep7A++McMjG0mQulfKmTsVdirsVdirsVd&#xA;iqlNcwQ09RqE9B1P4ZZDFKXIMJ5BHm6G7t5TRHBPh0P44zxSjzCxyRlyK93RBV2CjxJpkBEnkyJA&#xA;5tJNDIaI6sfAEYZQkOYQJg8il95M89yLZDxQGje5HXM7T4gBxHm4WpzdOgVTbWkUZLKOI6sdzmRZ&#xA;cDiJKX2zkS0H2W7ZXqI3G3P08iJV3ozMF2DsVdirsVWNKoViDUrtT3yccZJHmxMgozwSwcJGPxtU&#xA;keGZ1AiujjCW6ujc1BHfNfKNGnKBtMkXigXwGUlV2BXYq7FWLXqmO8mHcOSPkTUZu8JuA9zr8g3L&#xA;hMhFG2yXC1gG9lvrAUrvQ1r45Lhb+AEGu5bJKzbdB4YgMIxAFlWsrUyvyYfu16+58Moz5uEUObPF&#xA;j4jfRNGmeFCyGh7Zr4Q4jTmSNBD3FuqRpJ6nNn3P075sA4oNphps7SwlW3aPavt2zX6mHDLbq5ED&#xA;YReY7N2KuxV2KuxV2KpLqasLtiehAK/KlM2mmI4HX6gHjQoJBqNiOhy9pRMd4TMJJ6yUFF9shHGI&#xA;jZcspS6qU03qTGRRw8Ke2SrZjEUt5vz51PMmvLvXEChTI783PJI/22LU6VOFAFNAkGoND44CL5pB&#xA;I5KsdyyA8qtXpU5TkwCXLZvx6gx57omOQOnIbe2YmSHCac3HPiFr8gza5L6iI37ZpluKFlrySoKF&#xA;0Yo7oenSi0qB4jM0cnHHJ19ciZwF+wvQ+JOMRSgK2moWpXoprmFqebkY+SaZiM3Yq+r/APkEn/ag&#xA;/wCnLNt/g/8AQ+xs2d/yCT/tQf8ATlj/AIP/AEPsXZB3H/KjPVb6x/hj1tuXqfo/l02rXfpl0PDr&#xA;01TA8HWlI/8AKg+/+Ff+5dkvT5I9Hk0f+VA9/wDCnt/xzsOyRweTh/yoHt/hT3/452Oyng8kXF/y&#xA;pb019H/Dfp/s8PqHH6KZTLwb34b+DIV0dL/ypbgfV/w3w78/qFPxxj4N7cN/BJpD/wDICP8Av1v+&#xA;5flno8mPp8le2/5Ur8X1X/Df+V6X1D8eOVz8L+Lh+NJFdER/yCT/ALUH/TlkP8H/AKH2J2d/yCT/&#xA;ALUH/Tlj/g/9D7F2d/yCT/tQf9OWP+D/AND7F2d/yCT/ALUH/Tlj/g/9D7F2d/yCT/tQf9OWP+D/&#xA;AND7F2d/yCT/ALUH/Tlg/wAH/ofYuyhc/wDKlqr9Z/w3Xfj6n1D6acsth4X8PD8KYy4etKH/ACAn&#xA;/v1/+5fk/R5Mf3fl9jv+QE/9+v8A9y/H0eS/u/L7Hf8AICP+/W/7l+Pp8l/d+TX/ACAj/v1v+5fh&#xA;9Pkv7vyd/wAgI/79b/uX4+nyX935O/5AR/363/cvx9Pkv7vyd/yAj/v1v+5fj6fJf3fkrw/8qV4f&#xA;uf8ADfCv7H1ClfoyqXhXvw/Yzjw9FT/kDn/fu/8ATjkf3H9D7E7KM3/Kkaj1v8Ncv2ef1Cv0VycP&#xA;C6cP2INdVJv+VDU+L/C1Pf8AR2WDh8kenycP+VD02/wtT2/R2D0eS+nyRVv/AMqa4f6P/h3h/wAV&#xA;/UafhlU/Bv1cP2MhSr/yCT/tQf8ATlkP8H/ofYrv+QSf9qD/AKcsf8H/AKH2Ls//2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:ae5e419b-8378-ce42-977f-75e1948a55f6</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:ae5e419b-8378-ce42-977f-75e1948a55f6</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:7a88a014-44cb-6a48-8537-13b0f8c3834f</stRef:instanceID>
            <stRef:documentID>xmp.did:7a88a014-44cb-6a48-8537-13b0f8c3834f</stRef:documentID>
            <stRef:originalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7a88a014-44cb-6a48-8537-13b0f8c3834f</stEvt:instanceID>
                  <stEvt:when>2016-07-26T22:55:27+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:ae5e419b-8378-ce42-977f-75e1948a55f6</stEvt:instanceID>
                  <stEvt:when>2016-07-31T22:50:52+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>900.000000</stDim:w>
            <stDim:h>480.000088</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -480 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 480 li
900 480 li
900 0 li
cp
clp
0 226.568 mo
0 226.568 li
0 0 li
900 0 li
900 90.2941 li
894.197 87.9347 li
886.697 97.9897 li
872.771 107.382 li
863.338 115.894 li
884.002 117.362 li
865.135 122.939 li
843.572 127.342 li
863.338 133.506 li
833.689 133.506 li
818.41 139.364 li
390.261 139.364 li
352.263 119.234 li
341.714 130.114 li
349.383 132.459 li
333.497 139.364 li
163.712 139.364 li
95.4088 105.768 li
90.0603 106.627 li
78.7876 112.959 li
90.4672 112.666 li
61.7173 123.526 li
64.4126 117.655 li
56.3266 120.004 li
54.3052 112.372 li
0 90.2941 li
0 139.364 li
0 212.173 li
0 212.416 li
0 226.568 li
false sop
/0 
[/DeviceRGB] /CSA add_res
level3{
gsave
clp
[6.94588e-009 -154.708 154.708 6.94588e-009 450 188.642 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.823529 .968627 .827451 ]
/C1 [.321569 .890196 .956863 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.94588e-009 -154.708 154.708 6.94588e-009 450 188.642 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~da?Fgcd0n^c-=JVbKJ&NaiVWFa2c3>`Pod6_o'@._83q&^V@Ls]tM(k]=YYc\[f5[\$rfS[C*BKZa6sC
Z*CO;YHP+3Xf\\+X/i8#WMuhpVl-DhV59u`USFQXTqS-PT:_^HSXl:@S"#k8R@0G0Q^=#(Q'ISuPEV/m
Ocb`eO,o<]NK&mUMi3IMM2@%ELPLV=KnY25K7ec-JUr?%It)orI=6KjH[C'bH$OXZGB\4RF`heJF)uAB
EH,r:Df9N2D/F**CMR["Bk_6oB4kggAS#C_@q/tW@:<PO?XI,G?!U]?>?b97=]nj/='&F'<E3!t;c?Rl
~>
<~p\+=Sp@e4Rp@e4Rp@\+Op%A"Np%A"Np%@tLo^qeJo^qeJo^qeIoCMSFoCMSFoCMSFo()ABo()ABo()AB
o'u8?naZ/>naZ/>naQ&;nF5r:nF5r:nF5o8n*f`6n*f`6n*f`5mdBN2mdBN2mdBN2mHs<.mHs<.mHs<.
mHj3+m-O**m-O**m-F!'lg*m&lg*m&lg*j$lK[["lK[["lK[[!l07Hsl07Hsl07Hskih6okih6okih6o
ki_-lkND$kkND$kkN:phk2tggk2tggk2tdejlPUcjlPUcjlPUbjQ,C_jQ,C_jQ,C_j5]1[j5]1[j5]1[
~>
<~e'ldpe'ldpeC<!teC<!te^`4#e^`4#f%/F'f%/F'f@SX+f@SX,f\"j/f\"j0g"G'3g"G'4g=k97g=k98
gY:K;gY:N=gt^]?gt^`Ah;-oCh;-rEhVR,GhVR/Ihr!>Khr*GNi8EPOi8NYRiSibSiSrkVio8tWioB(Z
j5]1[jQ,C_jQ,C_jlPUcjlPUck2tggk2tggkND$kkND$lkih6okih6pl07Hsl07HtlK[["lK[[#lg*m&
lg*p(m-O**m-O-,mHs<.mHs?0mdBN2mdBQ4n*f`6n*oi9nF5r:nF?&=naZ/>nac8Ao()ABo(2JEoCMSF
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
684.593 191.122 mo
640.285 187.587 591.564 185.562 540.379 185.403 cv
540.364 185.403 540.356 185.403 540.341 185.403 cv
540.288 185.403 540.216 185.402 540.162 185.402 cv
540.132 185.402 540.105 185.402 540.075 185.402 cv
540.022 185.402 539.979 185.402 539.926 185.401 cv
539.901 185.401 539.862 185.401 539.837 185.401 cv
539.772 185.401 539.718 185.401 539.654 185.401 cv
539.644 185.401 539.621 185.401 539.611 185.401 cv
539.536 185.4 539.491 185.4 539.416 185.4 cv
539.396 185.4 539.379 185.4 539.358 185.4 cv
539.294 185.4 539.236 185.4 539.172 185.399 cv
539.152 185.399 539.125 185.399 539.105 185.399 cv
539.041 185.399 538.998 185.399 538.934 185.399 cv
538.909 185.399 538.892 185.399 538.867 185.399 cv
538.728 185.398 538.581 185.398 538.442 185.398 cv
538.412 185.398 538.386 185.398 538.356 185.398 cv
538.303 185.397 538.247 185.397 538.194 185.397 cv
538.139 185.397 538.083 185.397 538.027 185.397 cv
538.006 185.397 537.978 185.397 537.956 185.397 cv
537.931 185.397 537.91 185.397 537.885 185.397 cv
537.746 185.396 537.606 185.396 537.467 185.396 cv
537.465 185.396 li
537.38 185.396 537.314 185.396 537.228 185.395 cv
537.224 185.395 li
537.16 185.395 537.107 185.395 537.043 185.395 cv
537.018 185.395 536.991 185.395 536.966 185.395 cv
536.913 185.395 536.848 185.395 536.794 185.395 cv
536.774 185.395 536.749 185.395 536.729 185.395 cv
536.665 185.395 536.621 185.395 536.557 185.394 cv
536.527 185.394 536.502 185.394 536.472 185.394 cv
536.419 185.394 536.374 185.394 536.321 185.394 cv
536.291 185.394 536.255 185.394 536.225 185.394 cv
536.171 185.394 536.131 185.394 536.078 185.394 cv
536.037 185.394 536.004 185.394 535.964 185.394 cv
535.921 185.394 535.873 185.394 535.83 185.394 cv
535.8 185.394 535.762 185.394 535.732 185.394 cv
535.678 185.394 535.635 185.393 535.581 185.393 cv
535.541 185.393 535.506 185.393 535.466 185.393 cv
535.423 185.393 535.384 185.393 535.341 185.393 cv
535.296 185.393 535.256 185.393 535.211 185.393 cv
535.179 185.393 535.129 185.393 535.097 185.393 cv
535.041 185.393 534.986 185.393 534.93 185.393 cv
534.898 185.393 534.888 185.393 534.856 185.393 cv
534.795 185.393 534.737 185.393 534.677 185.393 cv
534.656 185.393 534.624 185.393 534.603 185.393 cv
534.542 185.393 534.474 185.393 534.413 185.393 cv
534.392 185.393 534.372 185.393 534.35 185.393 cv
534.305 185.393 534.253 185.393 534.207 185.393 cv
534.175 185.393 534.12 185.393 534.088 185.393 cv
534.008 185.393 533.927 185.393 533.846 185.393 cv
533.846 185.393 li
533.846 185.393 li
533.661 185.393 533.477 185.393 533.292 185.393 cv
533.228 185.393 533.202 185.393 533.138 185.393 cv
533.132 185.393 533.127 185.393 533.121 185.393 cv
532.879 185.393 532.653 185.393 532.411 185.393 cv
532.408 185.393 li
532.051 185.393 531.695 185.394 531.339 185.394 cv
531.335 185.394 531.332 185.394 531.328 185.394 cv
514.048 185.415 497.026 185.648 480.369 186.081 cv
417.124 148.313 li
414.785 153.553 li
403.281 157.772 li
405.412 153.397 li
393.482 153.397 li
409.062 149.324 li
390.261 139.364 li
818.41 139.364 li
779.334 154.346 li
795.056 140.55 li
776.366 143.4 li
684.593 191.122 li
231.578 172.744 mo
163.712 139.364 li
333.497 139.364 li
326.376 142.459 li
333.299 143.553 li
324.032 148.202 li
324.032 148.202 344.91 146.209 345.176 146.209 cv
345.442 146.209 310.611 158.71 309.439 159.179 cv
308.268 159.648 332.98 162.929 333.299 162.929 cv
333.523 162.929 313.792 168.692 301.981 172.136 cv
299.268 172.089 296.387 172.056 293.355 172.037 cv
293.355 169.804 li
293.355 169.804 290.095 170.672 285.043 172.017 cv
269.123 172.032 250.288 172.33 231.578 172.744 cv
level3{
gsave
clp
[5.41776e-009 -120.672 120.672 5.41776e-009 450 197.364 ]ct
/1 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.976471 1 .976471 ]
/C1 [.756863 .972549 .909804 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.756863 .972549 .909804 ]
/C1 [.482353 .945098 .941176 ]
/N 1 
>>
]
/Bounds [.459184 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[5.41776e-009 -120.672 120.672 5.41776e-009 450 197.364 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~q=saZp\+=Rp%7nJoCDJBnaQ&:n*]W3mHs9,lg*j$l07EqkND!ijlPRajQ#:[io/kSi8<GKhVI#CgtUT;
g=k65f\"g-f%/C%eC;srdaHOjd*U.ccd'h\c-4DTbK@uLaiMQDa2Z-=`Pod6_o'@._83q&^V@Ls]tM(k
]=YYc\[f5[\$rfS[C*BKZa6sCZ*CO;YHP+3Xf\\+X/i8#WMuhoVl$>fV50o^US=KVTqJ'NT:VXFSXc4>
S!oe6R@'A.Q^3r&Q'@MsPEM)kOcYZcO,f6[NJrgSMi*CKM26tCLPCP;KnP,3K7\]+JUi9#IsuipI=-Eh
~>
<~s8N#srr2orrr2orrr2orrr)forVc]nrVc]nrVc]nrVcZlr;?Kjr;?Kjr;?Kjr;?Kiqtp9fqtp9fqtp9f
qtp9fqYL'bqYL'bqYL'bqYL'bq>'j^q>'j^q>'j^q>'j^q=sa[q"XXZq"XXZq"XXZq"XUXp\4FVp\4FV
p\4FVp\4FVp\4CTp@e4Rp@e4Rp@e4Rp@e4Rp@e1Pp%A"Np%A"Np%A"Np%A"Np%7nKo^qeJo^qeJo^qeJ
o^qeJo^h\GoCMSFoCMSFoCMSFoCMSFoCDJCo()ABo()ABo()ABo()ABo'u8?naZ/>naZ/>naZ/>naZ/>
~>
<~q=sa[q"XXYp\4FVp\4CTp@e4Rp@\+Op%A"No^qeJo^qeIoCMSFoCMPDo()ABo'u8?naZ/>nF5r:nF5r9
n*f`6n*f]4mdBN2md9E/mHs<-m-O**m-O'(lg*m&lg!d#lK[["l07Hsl07Hrkih6okih6okih6okih6o
kih6okih6pl07Hsl07Hsl07Hsl07Hsl0@R!lK[["lK[["lK[["lK[^$lg*m&lg*m&lg*m&lg*m'm-O**
m-O**m-O**m-O**m-X3-mHs<.mHs<.mHs<.mHs?0mdBN2mdBN2mdBN2mdBN3n*f`6n*f`6n*f`6n*f`6
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
0 126.521 mo
900 126.521 li
900 117.557 li
0 117.557 li
0 126.521 li
cp
level3{
gsave
clp
[5.41774e-009 -120.672 120.672 5.41774e-009 450 197.364 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[5.41774e-009 -120.672 120.672 5.41774e-009 450 197.364 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
0 0 mo
0 42.9629 li
300.026 42.6558 600.288 43.1323 900 42.4161 cv
900 0 li
0 0 li
cp
.305882 .882353 .964706 rgb
f
408.986 37.4733 mo
556.234 37.4733 742.862 35.8758 742.862 35.8758 cv
742.862 35.8758 544.247 34.2783 408.986 34.2783 cv
273.73 34.2783 75.1146 35.8758 75.1146 35.8758 cv
75.1146 35.8758 279.745 37.4733 408.986 37.4733 cv
cp
level3{
gsave
clp
[-2.24356e-009 -49.9717 -49.9717 2.24356e-009 408.988 91.0621 ]ct
/2 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.941176 1 .976471 ]
/C1 [.556863 1 1 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.24356e-009 -49.9717 -49.9717 2.24356e-009 408.988 91.0621 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~nF,i6mdBK0m-O*)lg*j$l07Hrki_-lk2tgfjlGL`j5].Yio/kTi8EMMhqm5Hh;-lAgtUT;g=k65g"=s/
f@SU)e^`4"eC;srdaHRkdEp7ecd0q_cHXVYbfn;SbK@uMaiVWFaN)?A`l?!:`Pf^4_o'@._SO((^qd_"
^V7Fq]tM(k]=Y\d]"5G_\@B&X\$i`R[C*EL['R*FZEga?Z*:I:YHP+3Y-"h.XK8J'X/`2!WMuhpW2HPj
VP^2dUnjf]USFQXTqS0QTV%jKSt;OESXc4?S"#n9R[KS3R$a5,Q^3r'Q'ISuP`q;oP*1riOcYZcO,o<]
~>
255 <~q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j_qYL'bqYL'bqYL'bqYL'bqYL'b
qYL'bqYL'bqYL'bqYL'bqYL'bqYL*dqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9f
r;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?KkrVc]nrVc]nrVc]nrVc]nrVc]n
rVc]nrVc]nrVc]nrVc]nrVc]nrVc`prr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2or
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
618.196 5.81397 mo
515.403 5.81397 385.119 7.41146 385.119 7.41146 cv
385.119 7.41146 523.771 9.00895 618.196 9.00895 cv
712.617 9.00895 851.269 7.41146 851.269 7.41146 cv
851.269 7.41146 708.418 5.81397 618.196 5.81397 cv
cp
level3{
gsave
clp
[-2.24355e-009 -49.9714 -49.9714 2.24355e-009 618.194 91.0618 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.24355e-009 -49.9714 -49.9714 2.24355e-009 618.194 91.0618 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
505.747 175.023 mo
350.358 175.023 153.412 178.629 153.412 178.629 cv
153.412 178.629 363.008 182.235 505.747 182.235 cv
648.48 182.235 858.075 178.629 858.075 178.629 cv
858.075 178.629 642.133 175.023 505.747 175.023 cv
cp
level3{
gsave
clp
[-4.94972e-009 -110.247 -110.247 4.94972e-009 505.744 186.189 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-4.94972e-009 -110.247 -110.247 4.94972e-009 505.744 186.189 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
272.884 194.452 mo
377.969 194.452 511.156 192.174 511.156 192.174 cv
511.156 192.174 369.414 189.895 272.884 189.895 cv
176.359 189.895 34.6164 192.174 34.6164 192.174 cv
34.6164 192.174 180.651 194.452 272.884 194.452 cv
level3{
gsave
clp
[-4.94968e-009 -110.246 -110.246 4.94968e-009 272.886 186.189 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-4.94968e-009 -110.246 -110.246 4.94968e-009 272.886 186.189 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
0 50.092 mo
0 71.4835 li
900 71.4835 li
900 50.092 li
0 50.092 li
cp
.305882 .882353 .964706 rgb
f
95.4088 105.768 mo
90.0603 106.627 li
78.7876 112.959 li
90.4672 112.666 li
61.7173 123.526 li
64.4126 117.655 li
56.3266 120.004 li
54.3052 112.372 li
0 90.2941 li
0 212.416 li
320.274 216.371 li
95.4088 105.768 li
.466667 .835294 .796078 rgb
f
90.0604 106.627 mo
54.3051 112.372 li
56.3266 120.004 li
64.4126 117.656 li
61.7172 123.526 li
90.4673 112.666 li
78.7876 112.959 li
90.0604 106.627 li
cp
1 1 1 rgb
f
886.697 97.9897 mo
872.771 107.382 li
863.338 115.894 li
884.002 117.362 li
865.135 122.939 li
843.572 127.342 li
863.338 133.506 li
833.689 133.506 li
779.334 154.346 li
795.056 140.55 li
776.366 143.4 li
649.591 209.324 li
900 212.416 li
900 90.2941 li
894.197 87.9347 li
886.697 97.9897 li
.466667 .835294 .796078 rgb
f
833.015 121.618 mo
824.929 119.417 li
776.366 143.4 li
795.056 140.55 li
779.334 154.346 li
833.689 133.506 li
863.338 133.506 li
843.572 127.342 li
865.135 122.939 li
884.002 117.362 li
863.338 115.895 li
872.771 107.382 li
886.697 97.9897 li
894.197 87.9348 li
893.66 87.7167 li
833.015 121.618 li
cp
1 1 1 rgb
f
414.785 153.553 mo
403.281 157.772 li
405.412 153.397 li
393.482 153.397 li
409.062 149.324 li
352.263 119.234 li
341.714 130.114 li
349.383 132.459 li
326.376 142.459 li
333.299 143.553 li
324.032 148.202 li
324.032 148.202 344.91 146.209 345.176 146.209 cv
345.442 146.209 310.611 158.71 309.439 159.179 cv
308.268 159.648 332.98 162.929 333.299 162.929 cv
333.619 162.929 293.355 174.649 293.355 174.649 cv
293.355 169.804 li
293.355 169.804 259.045 178.933 240.526 183.889 cv
171.949 210.008 li
539.572 221.435 li
417.124 148.313 li
414.785 153.553 li
.466667 .835294 .796078 rgb
f
240.526 183.889 mo
259.045 178.933 293.355 169.805 293.355 169.805 cv
293.355 174.649 li
293.355 174.649 333.619 162.929 333.299 162.929 cv
332.98 162.929 308.268 159.648 309.439 159.179 cv
310.611 158.71 345.442 146.209 345.176 146.209 cv
344.91 146.209 324.032 148.202 324.032 148.202 cv
333.299 143.553 li
326.376 142.459 li
349.383 132.458 li
341.714 130.115 li
352.263 119.234 li
240.526 183.889 li
cp
1 1 1 rgb
f
409.672 149.647 mo
416.915 148.202 li
417.124 148.313 li
417.678 147.071 li
409.062 149.324 li
409.672 149.647 li
cp
.792157 .917647 .945098 rgb
f
409.672 149.647 mo
409.062 149.324 li
393.482 153.397 li
405.412 153.397 li
403.281 157.773 li
414.785 153.553 li
417.124 148.313 li
416.915 148.202 li
409.672 149.647 li
cp
1 1 1 rgb
f
555.942 247.662 mo
555.942 247.662 393.008 180.16 320.784 172.969 cv
289.268 169.831 141.427 175.452 141.427 175.452 cv
141.427 175.452 80.4769 161.647 14.1429 162.446 cv
9.70233 162.499 4.96326 162.835 0 163.399 cv
0 241.297 li
220.327 249.31 555.942 247.662 555.942 247.662 cv
.501961 .713726 .282353 rgb
f
716.591 225.159 mo
734.697 232.821 807.101 237.918 900 241.297 cv
900 163.399 li
830.821 171.265 716.591 225.159 716.591 225.159 cv
f
533.846 185.393 mo
324.732 185.393 155.211 216.525 155.211 254.929 cv
155.211 293.333 324.732 324.466 533.846 324.466 cv
709.519 324.466 857.242 302.494 900 272.698 cv
900 237.16 li
857.242 207.364 709.519 185.393 533.846 185.393 cv
.376471 .662745 .329412 rgb
f
gsave
540.379 185.403 mo
540.358 185.403 540.363 185.403 540.341 185.403 cv
540.356 185.403 540.364 185.403 540.379 185.403 cv
540.162 185.402 mo
540.13 185.402 540.107 185.402 540.075 185.402 cv
540.105 185.402 540.132 185.402 540.162 185.402 cv
539.926 185.401 mo
539.904 185.401 539.858 185.401 539.837 185.401 cv
539.862 185.401 539.901 185.401 539.926 185.401 cv
539.654 185.401 mo
539.643 185.401 539.622 185.401 539.611 185.401 cv
539.621 185.401 539.644 185.401 539.654 185.401 cv
539.416 185.4 mo
539.405 185.4 539.369 185.4 539.358 185.4 cv
539.379 185.4 539.396 185.4 539.416 185.4 cv
539.172 185.399 mo
539.15 185.399 539.127 185.399 539.105 185.399 cv
539.125 185.399 539.152 185.399 539.172 185.399 cv
538.934 185.399 mo
538.912 185.399 538.888 185.399 538.867 185.399 cv
538.892 185.399 538.909 185.399 538.934 185.399 cv
538.442 185.398 mo
538.41 185.398 538.388 185.398 538.356 185.398 cv
538.386 185.398 538.412 185.398 538.442 185.398 cv
538.194 185.397 mo
538.14 185.397 538.081 185.397 538.027 185.397 cv
538.083 185.397 538.139 185.397 538.194 185.397 cv
537.956 185.397 mo
537.935 185.397 537.906 185.397 537.885 185.397 cv
537.91 185.397 537.931 185.397 537.956 185.397 cv
537.467 185.396 mo
537.465 185.396 li
537.467 185.396 li
537.228 185.395 mo
537.224 185.395 li
537.228 185.395 li
537.043 185.395 mo
537.022 185.395 536.987 185.395 536.966 185.395 cv
536.991 185.395 537.018 185.395 537.043 185.395 cv
536.794 185.395 mo
536.773 185.395 536.75 185.395 536.729 185.395 cv
536.749 185.395 536.774 185.395 536.794 185.395 cv
536.557 185.394 mo
536.536 185.394 536.494 185.394 536.472 185.394 cv
536.502 185.394 536.527 185.394 536.557 185.394 cv
531.328 185.394 mo
531.332 185.394 531.335 185.394 531.339 185.394 cv
531.328 185.394 li
536.321 185.394 mo
536.289 185.394 536.257 185.394 536.225 185.394 cv
536.255 185.394 536.291 185.394 536.321 185.394 cv
536.078 185.394 mo
536.045 185.394 535.996 185.394 535.964 185.394 cv
536.004 185.394 536.037 185.394 536.078 185.394 cv
535.83 185.394 mo
535.798 185.394 535.764 185.394 535.732 185.394 cv
535.762 185.394 535.8 185.394 535.83 185.394 cv
535.581 185.393 mo
535.539 185.393 535.508 185.393 535.466 185.393 cv
535.506 185.393 535.541 185.393 535.581 185.393 cv
535.341 185.393 mo
535.298 185.393 535.254 185.393 535.211 185.393 cv
535.256 185.393 535.296 185.393 535.341 185.393 cv
532.408 185.393 mo
532.411 185.393 li
532.408 185.393 li
535.097 185.393 mo
535.043 185.393 534.984 185.393 534.93 185.393 cv
534.986 185.393 535.041 185.393 535.097 185.393 cv
534.856 185.393 mo
534.802 185.393 534.731 185.393 534.677 185.393 cv
534.737 185.393 534.795 185.393 534.856 185.393 cv
534.603 185.393 mo
534.538 185.393 534.478 185.393 534.413 185.393 cv
534.474 185.393 534.542 185.393 534.603 185.393 cv
533.121 185.393 mo
533.127 185.393 533.132 185.393 533.138 185.393 cv
533.121 185.393 li
533.292 185.393 mo
533.477 185.393 533.661 185.393 533.846 185.393 cv
533.668 185.393 533.471 185.393 533.292 185.393 cv
534.35 185.393 mo
534.297 185.393 534.261 185.393 534.207 185.393 cv
534.253 185.393 534.305 185.393 534.35 185.393 cv
534.088 185.393 mo
534.002 185.393 533.932 185.393 533.846 185.393 cv
533.927 185.393 534.008 185.393 534.088 185.393 cv
clp
531.328 185.393 mo
540.379 185.393 li
540.379 185.403 li
531.328 185.403 li
cp
level3{
gsave
clp
[5.41776e-009 -120.672 120.672 5.41776e-009 450 197.364 ]ct
/3 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~qZ$Efs8)Qkq=t!cp]('`rqZ9eq"=X]p&=aYrqQ*ap[\=Xnc&:QrqGs]p[J.Un,<"KrV#XWp?hhPm/?YD
rUoISp$2MKl2C;>rUf=Po]Q2Fk5Fo5rU].LoAolAjS\T/r:8kFo&9N;iV`9)r:8bCo%s<7h>Hg!qsiJ=
n_F$2g\^Koqs`;9nC[X,f_b-hqsW/5n(.@'eb\^`qX2l0mF1q!de`@YqX)Z+m*PRpd/!%Sq<ZE&m*5@m
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~c2$_Mq<Z?$m*#4kb5(DFq<Z2um)Sqg`qeu?q<Z&qm)8_d_ti]:q<bummD/Ma^\I31q!GcimC`5]]_Lp,
q!P`gm^W#Z\+f="p[5Kam^;fW[.j$qp[>H_n$;]VYkIOhp@#3Yn#lBQXnM7cp@,-Vn>l9PWqPq\p$emP
n>GsKVY0JUp$njNnY>dIU\4/Op$n^JnXoLETCqcHp%"[HnsoCDS+Z?Ap%"REnsK(?Qh9j6o^\7=nrr_:
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.459184 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[5.41776e-009 -120.672 120.672 5.41776e-009 450 197.364 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~q>'g\q"XUXp@e4Rp%@tLo^h\Fo'u8>nF5r:n*f]4mHs9,m-O'(lK[Wul0.?pki_-kk2k^cjQ,@]j5].Y
iSi_Qi8EMLhVI#Cgt^]>gY:K:g"G$1f@SX+f%/F'e^`0ue'ldoda?Ihd*L%acd0n^c-=JVbKJ)PbK@uL
aN)?Aa2Z-=`Pod6_o'C0_SX1+^q[Y!^V7Fq]tM(k]=Y\e]"5G^\@8rU[^NWP[C!<JZa6sCZEga>YHP.4
Y-+q0XfSV)X/i8#WiE%sVl-DhVP^5eV50o^US=KWU8"?ST:_^HSt;OESXc4>S!oe7R[TY3Q^=#'Pa%Aq
~>
<~s8W-!s8W-!rr2lprVc]nrVc]nrVc]nrVc]mr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjqtp9f
qtp9fqtp9fqtp9fqtg0cqYL'bqYL'bqYL'bqYL$`q>'j^q>'j^q>'j^q>'j]q"XXZq"XXZq"XXZq"XXZ
q"XXZq"XXZq"XXZq"XXZq"XXZq"OOWp\4FVp\4FVp\4FVp\4FVp\+=Sp@e4Rp@e4Rp@e4Rp@e4Rp%A"N
p%A"Np%A"Np%A"Np%A"No^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJoCMSFoCMSF
~>
<~q>'j^q"XXZq"XXZp\4FVp\4FUp@e4Rp@e4Rp@e4Rp%A"Np%A"No^qeJo^qeIoCMSFoCDJCo()ABnaZ/>
naZ/>naZ/>naQ&;nF5r:nF,i7n*f`6mdBN2mdBN2mHs<.mHj3+m-O**m-F!'lg*m&lg*m&lg*m&lg*m&
lg*m&lg*m&lg*m&lg*p(m-O**m-O**m-O**m-O**mHs<.mHs<.mHs<.mHs<.mI'E1mdBN2mdBN2mdBN2
mdBN3n*f`6n*f`6n*f`6n*f`6n*oi9nF5r:nF5r:nF5r:nF5u<naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /3 /Gradient get_res exec grestore
}if
np
grestore
603.254 226.809 mo
577.926 226.809 552.409 224.553 527.007 220 cv
497.963 214.787 468.368 205.131 444.823 187.327 cv
472.592 186.098 501.551 185.43 531.328 185.394 cv
531.339 185.394 li
531.696 185.394 532.051 185.393 532.408 185.393 cv
532.411 185.393 li
532.649 185.393 532.884 185.393 533.121 185.393 cv
533.138 185.393 li
533.189 185.393 533.241 185.393 533.292 185.393 cv
533.471 185.393 533.668 185.393 533.846 185.393 cv
533.846 185.393 li
533.846 185.393 li
533.932 185.393 534.002 185.393 534.088 185.393 cv
534.128 185.393 534.167 185.393 534.207 185.393 cv
534.261 185.393 534.297 185.393 534.35 185.393 cv
534.376 185.393 534.388 185.393 534.413 185.393 cv
534.478 185.393 534.538 185.393 534.603 185.393 cv
534.628 185.393 534.652 185.393 534.677 185.393 cv
534.731 185.393 534.802 185.393 534.856 185.393 cv
534.881 185.393 534.905 185.393 534.93 185.393 cv
534.984 185.393 535.043 185.393 535.097 185.393 cv
535.132 185.393 535.176 185.393 535.211 185.393 cv
535.254 185.393 535.298 185.393 535.341 185.393 cv
535.382 185.393 535.425 185.393 535.466 185.393 cv
535.508 185.393 535.539 185.393 535.581 185.393 cv
535.632 185.393 535.682 185.394 535.732 185.394 cv
535.764 185.394 535.798 185.394 535.83 185.394 cv
535.875 185.394 535.919 185.394 535.964 185.394 cv
535.996 185.394 536.045 185.394 536.078 185.394 cv
536.128 185.394 536.174 185.394 536.225 185.394 cv
536.257 185.394 536.289 185.394 536.321 185.394 cv
536.371 185.394 536.422 185.394 536.472 185.394 cv
536.494 185.394 536.536 185.394 536.557 185.394 cv
536.612 185.395 536.674 185.395 536.729 185.395 cv
536.75 185.395 536.773 185.395 536.794 185.395 cv
536.855 185.395 536.906 185.395 536.966 185.395 cv
536.987 185.395 537.022 185.395 537.043 185.395 cv
537.103 185.395 537.164 185.395 537.224 185.395 cv
537.228 185.395 li
537.309 185.396 537.385 185.396 537.465 185.396 cv
537.467 185.396 li
537.608 185.396 537.744 185.396 537.885 185.397 cv
537.906 185.397 537.935 185.397 537.956 185.397 cv
537.976 185.397 538.007 185.397 538.027 185.397 cv
538.081 185.397 538.14 185.397 538.194 185.397 cv
538.249 185.397 538.301 185.397 538.356 185.398 cv
538.388 185.398 538.41 185.398 538.442 185.398 cv
538.582 185.398 538.727 185.398 538.867 185.399 cv
538.888 185.399 538.912 185.399 538.934 185.399 cv
538.989 185.399 539.05 185.399 539.105 185.399 cv
539.127 185.399 539.15 185.399 539.172 185.399 cv
539.237 185.4 539.293 185.4 539.358 185.4 cv
539.369 185.4 539.405 185.4 539.416 185.4 cv
539.481 185.4 539.546 185.4 539.611 185.401 cv
539.622 185.401 539.643 185.401 539.654 185.401 cv
539.719 185.401 539.771 185.401 539.837 185.401 cv
539.858 185.401 539.904 185.401 539.926 185.401 cv
539.976 185.402 540.025 185.402 540.075 185.402 cv
540.107 185.402 540.13 185.402 540.162 185.402 cv
540.223 185.402 540.281 185.403 540.341 185.403 cv
540.363 185.403 540.358 185.403 540.379 185.403 cv
616.163 185.639 686.532 189.965 745.213 197.229 cv
743.603 199.224 742.102 201.369 740.72 203.652 cv
696.847 219.001 650.377 226.809 603.254 226.809 cv
.45098 .729412 .380392 rgb
f
636.638 189.212 mo
636.638 191.488 638.893 193.333 641.674 193.333 cv
644.455 193.333 646.709 191.488 646.709 189.212 cv
646.709 186.936 641.674 156 641.674 156 cv
641.674 156 636.638 186.936 636.638 189.212 cv
cp
.419608 .576471 .254902 rgb
f
649.305 192.459 mo
649.305 193.678 651.559 194.667 654.341 194.667 cv
657.122 194.667 659.376 193.678 659.376 192.459 cv
659.376 191.239 654.341 174.667 654.341 174.667 cv
654.341 174.667 649.305 191.239 649.305 192.459 cv
cp
f
502.638 188.766 mo
502.638 190.92 504.893 192.667 507.674 192.667 cv
510.455 192.667 512.709 190.92 512.709 188.766 cv
512.709 186.612 507.674 157.333 507.674 157.333 cv
507.674 157.333 502.638 186.612 502.638 188.766 cv
cp
f
478.638 192.602 mo
478.638 193.374 480.893 194 483.674 194 cv
486.455 194 488.709 193.374 488.709 192.602 cv
488.709 191.829 483.674 181.333 483.674 181.333 cv
483.674 181.333 478.638 191.829 478.638 192.602 cv
cp
f
575.633 282.97 mo
575.633 229.381 380.39 185.94 139.544 185.94 cv
90.7421 185.94 43.8127 187.723 0 191.014 cv
0 374.926 li
43.8127 378.216 90.7421 380 139.544 380 cv
380.39 380 575.633 336.558 575.633 282.97 cv
.752941 .843137 .231373 rgb
f
77.1014 186.928 mo
54.3656 187.654 32.1957 188.769 10.7338 190.243 cv
7.2224 198.147 3.64049 206.063 0 213.991 cv
0 374.923 li
8.39601 375.554 16.9027 376.131 25.519 376.649 cv
44.966 313.158 62.1641 249.937 77.1014 186.928 cv
.807843 .901961 .247059 rgb
f
139.544 185.94 mo
131.171 185.94 122.854 185.994 114.597 186.097 cv
107.256 250.462 98.7713 314.877 89.1446 379.359 cv
105.681 379.782 122.498 380 139.544 380 cv
163.01 380 186.04 379.586 208.501 378.792 cv
198.926 314.608 190.481 250.489 183.17 186.42 cv
168.821 186.103 154.269 185.94 139.544 185.94 cv
f
220.795 187.622 mo
235.6 250.005 252.618 312.596 271.843 375.452 cv
308.146 372.884 342.388 369.287 373.876 364.815 cv
341.786 306.383 313.034 248.723 287.639 191.68 cv
266.094 189.949 243.763 188.585 220.795 187.622 cv
f
323.357 194.955 mo
352.458 248.111 385.065 302.087 421.12 357.065 cv
446.672 352.253 469.698 346.798 489.702 340.812 cv
451.968 293.707 417.232 247.779 385.518 202.839 cv
365.891 199.85 345.113 197.208 323.357 194.955 cv
f
418.242 208.339 mo
449.22 248.196 482.72 289.008 518.707 330.933 cv
534.579 324.735 547.467 318.11 556.942 311.155 cv
528.31 280.385 501.078 250.372 475.275 221.043 cv
458.062 216.428 438.963 212.174 418.242 208.339 cv
f
382.299 296.088 mo
381.582 296.048 380.861 296.007 380.141 295.965 cv
366.079 295.391 351.366 294.511 336.115 293.371 cv
329.993 281.311 324.018 269.283 318.188 257.284 cv
330.027 254.641 341.826 251.639 353.555 248.273 cv
362.833 264.133 372.415 280.07 382.299 296.088 cv
448.651 288.481 mo
433.746 269.056 419.371 249.825 405.529 230.776 cv
413.196 227.801 420.828 224.66 428.418 221.351 cv
443.138 240.058 458.405 258.977 474.219 278.125 cv
465.756 281.389 457.181 284.862 448.651 288.481 cv
245.526 284.533 mo
235.608 283.385 225.574 282.177 215.431 280.916 cv
208.467 280.04 201.47 279.141 194.416 278.219 cv
194.148 276.172 193.882 274.126 193.616 272.079 cv
202.784 271.847 211.947 271.48 221.107 271 cv
227.891 270.578 234.665 270.047 241.438 269.406 cv
242.786 274.447 244.149 279.488 245.526 284.533 cv
513.816 264.2 mo
500.635 249.647 487.788 235.265 475.275 221.043 cv
510.294 230.431 537.505 241.309 554.706 253.189 cv
543.394 255.796 532.093 258.747 520.841 262.065 cv
518.544 262.742 516.2 263.455 513.816 264.2 cv
.694118 .792157 .227451 rgb
f
0 374.923 mo
0 374.923 li
0 249.145 li
3.49986 250.222 7.00955 251.256 10.5206 252.246 cv
7.01055 251.743 3.50366 251.248 0 250.76 cv
0 374.923 li
.745098 .847059 .243137 rgb
f
194.416 278.219 mo
181.552 276.537 168.54 274.784 155.436 272.979 cv
155.358 272.724 155.28 272.468 155.2 272.213 cv
160.524 272.319 165.851 272.37 171.178 272.37 cv
178.654 272.37 186.139 272.269 193.616 272.079 cv
193.882 274.126 194.148 276.172 194.416 278.219 cv
f
336.115 293.371 mo
307.604 291.24 277.191 288.197 245.526 284.533 cv
244.149 279.488 242.786 274.447 241.438 269.406 cv
267.159 266.971 292.785 262.953 318.188 257.284 cv
324.018 269.283 329.993 281.311 336.115 293.371 cv
f
427.947 297.594 mo
419.014 297.482 409.68 297.271 399.988 296.939 cv
394.217 296.707 388.319 296.426 382.299 296.088 cv
372.415 280.07 362.833 264.133 353.555 248.273 cv
363.108 245.532 372.616 242.55 382.079 239.321 cv
383.728 239.557 385.467 239.724 387.078 239.724 cv
391.826 239.724 399.345 237.833 399.345 237.833 cv
399.345 237.833 395.201 236.758 391.033 236.229 cv
391.089 236.195 391.144 236.162 391.2 236.128 cv
395.99 234.407 400.766 232.624 405.529 230.776 cv
419.371 249.825 433.746 269.056 448.651 288.481 cv
441.681 291.438 434.746 294.489 427.947 297.594 cv
f
453.534 215.636 mo
453.494 215.627 453.454 215.618 453.414 215.609 cv
453.452 215.618 453.496 215.628 453.534 215.636 cv
453.336 215.591 mo
453.283 215.578 453.23 215.566 453.176 215.554 cv
453.234 215.567 453.279 215.577 453.336 215.591 cv
453.135 215.544 mo
450.508 214.94 447.845 214.342 445.15 213.753 cv
445.15 213.753 445.15 213.753 445.15 213.753 cv
447.848 214.343 450.506 214.939 453.135 215.544 cv
.694118 .792157 .227451 rgb
f
474.219 278.125 mo
458.405 258.977 443.138 240.058 428.418 221.351 cv
434.018 218.91 439.595 216.378 445.15 213.753 cv
447.845 214.342 450.508 214.94 453.135 215.544 cv
453.144 215.547 453.167 215.552 453.176 215.554 cv
453.23 215.566 453.283 215.578 453.336 215.591 cv
453.36 215.596 453.39 215.603 453.414 215.609 cv
453.454 215.618 453.494 215.627 453.534 215.636 cv
461.076 217.377 468.33 219.181 475.276 221.043 cv
487.788 235.265 500.635 249.647 513.816 264.2 cv
501.451 268.065 487.993 272.813 474.219 278.125 cv
.745098 .847059 .243137 rgb
f
603.456 282.97 mo
603.456 325.7 727.592 361.978 900 374.926 cv
900 191.014 li
727.592 203.962 603.456 240.24 603.456 282.97 cv
.752941 .843137 .231373 rgb
f
633.837 318.622 mo
644.778 324.78 658.471 330.63 674.576 336.096 cv
713.382 291.044 749.348 247.27 782.394 204.597 cv
762.838 207.779 744.516 211.314 727.621 215.161 cv
698.225 248.719 666.96 283.164 633.837 318.622 cv
.807843 .901961 .247059 rgb
f
704.58 345.101 mo
725.365 350.643 748.871 355.661 774.65 360.054 cv
811.919 303.384 845.519 247.783 875.41 193.048 cv
854.155 194.97 833.737 197.255 814.308 199.868 cv
781.075 247.115 744.479 295.456 704.58 345.101 cv
f
822.564 367.155 mo
846.985 370.278 872.898 372.888 900 374.923 cv
900 213.991 li
876.799 264.514 850.983 315.533 822.564 367.155 cv
f
883.77 248.53 mo
871.604 246.913 859.236 245.376 846.683 243.967 cv
849.003 239.982 851.306 235.996 853.587 232.02 cv
864.226 236.637 874.939 240.782 885.707 244.488 cv
885.063 245.835 884.417 247.182 883.77 248.53 cv
651.792 238.526 mo
671.79 229.907 697.436 222.036 727.62 215.163 cv
721.548 222.094 715.396 229.064 709.163 236.074 cv
690.16 236.236 671.024 237.005 651.792 238.526 cv
.694118 .792157 .227451 rgb
f
730.752 236.145 mo
726.138 236.076 721.509 236.041 716.875 236.041 cv
714.311 236.041 711.733 236.052 709.163 236.074 cv
715.396 229.064 721.548 222.094 727.621 215.161 cv
730.349 214.541 733.116 213.928 735.919 213.323 cv
733.151 220.243 731.349 227.958 730.752 236.145 cv
.745098 .847059 .243137 rgb
f
846.683 243.967 mo
844.293 243.699 841.891 243.435 839.487 243.177 cv
839.487 243.176 839.487 243.176 839.487 243.176 cv
833.757 242.56 827.995 241.972 822.195 241.418 cv
822.108 231.592 820.29 222.321 817.129 214.127 cv
829.18 220.759 841.337 226.704 853.587 232.02 cv
851.306 235.996 849.003 239.982 846.683 243.967 cv
f
900 250.747 mo
894.636 249.995 889.22 249.254 883.77 248.53 cv
884.417 247.182 885.063 245.835 885.707 244.488 cv
890.461 246.125 895.224 247.675 900 249.145 cv
900 250.747 li
f
380.141 295.965 mo
280.875 291.913 149.511 272.656 21.1188 253.787 cv
14.0679 252.746 7.02706 251.739 0 250.76 cv
0 480 li
546.575 480 li
546.575 417.736 546.575 355.471 546.575 293.207 cv
546.575 292.831 535.531 294.161 515.78 295.49 cv
486.824 297.44 439.155 299.389 380.141 295.965 cv
.415686 .501961 .156863 rgb
f
215.431 280.916 mo
208.474 280.052 201.467 279.162 194.42 278.251 cv
194.419 278.24 194.418 278.231 194.416 278.219 cv
201.47 279.141 208.467 280.04 215.431 280.916 cv
.584314 .694118 .219608 rgb
f
194.42 278.251 mo
181.56 276.589 168.563 274.855 155.463 273.066 cv
155.454 273.036 155.445 273.008 155.436 272.979 cv
168.54 274.784 181.552 276.537 194.416 278.219 cv
194.418 278.231 194.419 278.24 194.42 278.251 cv
.627451 .745098 .231373 rgb
f
89.3342 263.75 mo
79.2288 262.292 69.0946 260.818 58.9663 259.338 cv
58.9775 259.296 58.9881 259.255 58.9993 259.213 cv
69.1363 260.69 79.2584 262.162 89.3723 263.624 cv
89.3596 263.666 89.3469 263.708 89.3342 263.75 cv
.635294 .741176 .223529 rgb
f
58.9663 259.338 mo
52.1355 258.34 45.3176 257.341 38.4895 256.339 cv
38.2873 256.27 38.0861 256.201 37.8838 256.132 cv
44.9175 257.159 51.9627 258.187 58.9993 259.213 cv
58.9881 259.255 58.9775 259.296 58.9663 259.338 cv
.682353 .792157 .235294 rgb
f
0 479.239 mo
0 331.767 li
7.48195 329.829 14.9461 327.816 22.3909 325.721 cv
44.7528 319.222 69.378 314.466 83.7461 294.803 cv
83.8676 297.644 84.3174 300.326 85.1878 302.823 cv
85.1878 302.823 li
85.1878 302.823 li
86.1116 305.484 87.5945 308.015 89.6573 310.29 cv
90.1915 310.886 90.766 311.459 91.3849 312.011 cv
92.6033 313.109 93.9767 314.131 95.5082 315.059 cv
88.0727 316.618 82.6813 318.091 82.6813 318.091 cv
82.6813 318.091 105.551 324.741 123.595 324.741 cv
139.432 324.741 164.507 318.091 164.507 318.091 cv
164.507 318.091 157.137 316.077 147.746 314.266 cv
149.772 313.113 151.484 311.824 152.92 310.408 cv
158.89 304.625 160.309 296.87 158.93 288.4 cv
158.366 283.583 157.095 278.424 155.463 273.066 cv
168.563 274.855 181.56 276.589 194.42 278.251 cv
201.467 279.162 208.474 280.052 215.431 280.916 cv
276.665 288.623 334.159 294.443 383.5 296.27 cv
383.5 296.27 li
376.061 304.564 367.845 312.122 358.85 318.761 cv
353.519 322.695 347.914 326.307 342.036 329.557 cv
342.036 329.557 li
341.853 329.656 341.682 329.75 341.499 329.849 cv
340.777 330.241 340.049 330.635 339.327 331.026 cv
338.22 331.625 337.106 332.225 335.999 332.821 cv
335.873 332.889 335.754 332.953 335.628 333.02 cv
335.061 333.326 334.478 333.638 333.911 333.943 cv
333.722 334.044 333.547 334.138 333.358 334.239 cv
330.55 335.743 327.746 337.235 324.941 338.717 cv
324.864 338.757 324.774 338.805 324.697 338.846 cv
323.991 339.219 323.291 339.588 322.585 339.959 cv
322.529 339.989 322.463 340.024 322.407 340.053 cv
321.968 338.766 321.062 337.396 320.147 336.27 cv
318.836 334.647 317.507 333.5 317.507 333.5 cv
317.507 333.5 316.088 334.592 314.653 336.032 cv
314.411 336.276 314.171 336.532 313.935 336.793 cv
313.656 336.204 313.39 335.675 313.167 335.245 cv
312.756 334.47 312.507 334 312.507 334 cv
312.507 334 312.103 334.325 311.48 334.915 cv
310.865 335.501 310.039 336.346 309.196 337.332 cv
308.591 338.042 307.975 338.811 307.407 339.605 cv
307.393 339.582 li
306.228 337.809 305.007 336.5 305.007 336.5 cv
305.007 336.5 304.78 336.65 304.416 336.912 cv
304.487 334.988 304.303 332.86 304.156 330.931 cv
303.999 329.435 303.856 328.085 303.734 327.1 cv
303.593 326.103 303.507 325.5 303.507 325.5 cv
303.507 325.5 303.001 325.792 302.195 326.332 cv
301.39 326.874 300.268 327.658 299.129 328.691 cv
298.014 329.641 296.877 330.835 295.888 332.162 cv
295.291 330.09 294.556 328.005 293.802 326.13 cv
293.016 324.188 292.204 322.511 291.574 321.342 cv
290.927 320.171 290.507 319.5 290.507 319.5 cv
290.507 319.5 290.264 320.212 289.853 321.411 cv
289.451 322.6 288.886 324.244 288.294 326.144 cv
287.116 329.928 285.841 334.875 286.206 339.413 cv
286.244 339.912 286.312 340.432 286.406 340.966 cv
285.933 340.596 285.443 340.245 284.952 339.929 cv
283.955 339.262 282.918 338.771 282.193 338.461 cv
281.464 338.149 281.007 338 281.007 338 cv
281.007 338 280.869 338.449 280.639 339.195 cv
280.439 339.889 280.161 340.858 279.842 341.964 cv
279.333 343.839 278.824 346.109 279.232 348 cv
241.126 348 li
241.205 347.469 241.26 346.95 241.258 346.462 cv
241.3 345.178 240.915 343.698 240.51 342.265 cv
240.294 341.541 240.035 340.806 239.753 340.081 cv
239.509 339.368 239.245 338.662 238.975 337.983 cv
238.401 336.618 237.978 335.399 237.609 334.485 cv
237.234 333.559 237.007 333 237.007 333 cv
237.007 333 236.587 333.386 235.934 334.092 cv
235.301 334.798 234.339 335.832 233.537 337.126 cv
231.776 339.706 230.289 343.313 230.258 346.457 cv
230.26 346.951 230.323 347.471 230.411 348 cv
228.912 348 li
228.784 347.167 228.605 346.367 228.326 345.678 cv
227.346 343.141 224.877 340.354 222.496 338.278 cv
221.349 337.244 220.182 336.421 219.357 335.863 cv
218.528 335.304 218.007 335 218.007 335 cv
218.007 335 217.903 335.59 217.775 336.537 cv
217.64 337.491 217.513 338.759 217.354 340.236 cv
217.146 342.6 217.021 345.465 217.586 348 cv
194.785 348 li
195.222 347.359 195.566 346.699 195.711 346.07 cv
196.181 344.106 195.268 341.522 194.205 339.531 cv
193.154 337.526 192.007 336 192.007 336 cv
192.007 336 190.45 337.016 188.804 338.487 cv
187.161 339.966 185.426 341.799 185.017 343.491 cv
184.951 343.786 184.934 344.101 184.939 344.429 cv
184.483 343.591 183.865 342.735 183.274 341.951 cv
182.01 340.305 181.007 339 181.007 339 cv
181.007 339 180.623 339.169 180.026 339.516 cv
179.425 339.862 178.608 340.416 177.839 341.1 cv
177.463 341.428 177.094 341.787 176.746 342.166 cv
176.516 341.418 176.238 340.72 175.891 340.11 cv
174.686 337.786 171.924 335.623 169.53 333.865 cv
167.123 332.143 165.007 331 165.007 331 cv
165.007 331 163.372 340.07 166.243 345.393 cv
166.743 346.276 167.489 347.158 168.352 348 cv
139.073 348 li
136.777 345.087 134.509 342.278 132.284 339.631 cv
124.281 330.313 117.218 325.13 110.183 325.13 cv
105.682 325.13 101.192 327.252 96.4747 331.769 cv
92.5458 335.494 88.447 341.01 84.4337 348 cv
68.8563 348 li
69.0897 347.513 69.3162 347.02 69.5264 346.519 cv
70.2807 344.766 70.7074 343.067 70.8615 341.472 cv
71.1053 338.374 69.9396 334.574 68.9491 331.541 cv
68.4143 329.983 67.9441 328.613 67.6072 327.632 cv
67.233 326.614 67.0072 326 67.0072 326 cv
67.0072 326 66.5839 326.451 65.9267 327.26 cv
65.2852 328.066 64.3333 329.251 63.5116 330.68 cv
61.7475 333.565 60.1467 337.357 59.8928 340.646 cv
59.7567 342.042 60.0133 343.736 60.3172 345.365 cv
60.4781 346.189 60.6811 347.03 60.9071 347.864 cv
60.9416 348 li
55.3522 348 li
55.3621 347.807 55.3684 347.624 55.379 347.429 cv
55.9028 346.612 56.9144 344.981 57.9509 343 cv
59.4329 340.133 60.9569 336.698 61.0497 333.718 cv
61.1434 330.734 59.8835 327.013 58.5993 324.085 cv
57.315 321.153 56.0071 319 56.0071 319 cv
56.0071 319 54.5688 321.031 53.1059 323.816 cv
52.3824 325.196 51.6547 326.757 51.0905 328.363 cv
50.9504 328.112 50.81 327.858 50.671 327.615 cv
48.7836 324.355 47.0071 322 47.0071 322 cv
47.0071 322 46.0428 324.639 45.1988 328.212 cv
44.3444 331.776 43.6539 336.384 44.4025 340.351 cv
44.8858 342.745 46.157 345.513 47.7443 348 cv
44.7666 348 li
44.7119 347.773 li
44.5292 347.034 44.2885 346.07 44.07 344.987 cv
43.5761 342.905 43.1336 340.505 41.976 339.303 cv
40.8337 338.068 38.3727 337.326 36.157 336.764 cv
33.9421 336.227 32.0071 336 32.0071 336 cv
32.0071 336 31.7302 337.863 31.817 340.145 cv
31.8352 340.729 31.885 341.343 31.9729 341.963 cv
31.1564 343.674 30.1903 346.159 30.3755 348 cv
0 348 li
0 479.239 li
0 479.239 li
0 479.239 li
0 479.239 li
299.822 348 mo
299.493 348 li
299.553 347.909 299.608 347.821 299.672 347.728 cv
299.72 347.82 299.773 347.909 299.822 348 cv
185.726 348 mo
185.273 348 li
185.374 347.779 185.462 347.56 185.52 347.348 cv
185.587 347.565 185.657 347.783 185.726 348 cv
84.497 283.653 mo
82.1684 279.362 77.6808 275.255 73.6918 272.683 cv
62.3029 265.513 50.5524 260.467 38.4895 256.339 cv
45.3176 257.341 52.1355 258.34 58.9663 259.338 cv
69.0946 260.818 79.2288 262.292 89.3342 263.75 cv
87.2494 270.643 85.4504 277.373 84.497 283.653 cv
.34902 .439216 .14902 rgb
f
383.5 296.27 mo
371.652 309.479 357.836 320.821 342.036 329.557 cv
227.141 391.982 115.55 434.984 0 479.239 cv
0 480 li
546.575 480 li
546.575 417.736 546.575 355.471 546.575 293.207 cv
546.575 293.097 536.272 294.272 517.772 295.448 cv
489.572 297.24 442.326 299.032 383.5 296.27 cv
.415686 .501961 .156863 rgb
f
900 250.747 mo
785.417 234.695 650.574 223.812 520.841 262.065 cv
450.749 282.732 338.008 335.941 338.008 357.745 cv
338.008 413.372 417.496 436.123 445.906 480 cv
900 480 li
900 250.747 li
f
839.487 243.177 mo
833.76 242.56 827.992 241.972 822.195 241.418 cv
822.195 241.418 li
827.995 241.972 833.757 242.56 839.487 243.176 cv
839.487 243.176 li
.815686 .890196 .294118 rgb
f
611.681 328.378 mo
609.753 328.378 607.825 328.366 605.897 328.339 cv
604.798 326.826 603.671 325.345 602.555 323.946 cv
607.315 319.516 611.327 314.657 614.007 309 cv
614.519 307.849 614.752 306.648 614.754 305.411 cv
614.763 296.979 603.984 286.849 597.007 279 cv
604.396 274.567 611.241 269.595 618.749 266.089 cv
640.317 271.971 li
659.877 270.016 li
661.546 266.132 li
646.112 263.849 li
624.18 263.877 li
625.108 263.556 626.049 263.261 627.007 263 cv
626.049 263.261 625.108 263.556 624.18 263.877 cv
618.85 263.884 li
619.572 263.592 620.292 263.298 621.007 263 cv
620.292 263.298 619.572 263.592 618.85 263.884 cv
610.702 263.894 li
615.529 265.21 li
605.158 269.317 594.501 273.356 586.007 281 cv
585.495 281.384 585.278 281.768 585.278 282.153 cv
585.278 284.316 592.095 286.543 592.101 289.205 cv
592.102 289.782 591.784 290.379 591.007 291 cv
575.985 302.803 560.67 312.87 544.918 321.991 cv
526.363 318.58 506.234 313.456 492.146 303.722 cv
489.78 302.087 487.05 298.825 484.911 294.987 cv
483.417 292.307 482.215 289.346 481.623 286.461 cv
539.679 261.238 601.063 246.09 663.479 237.697 cv
681.39 236.557 699.216 236.044 716.904 236.044 cv
721.529 236.044 726.148 236.079 730.751 236.147 cv
730.677 237.162 730.622 238.186 730.585 239.215 cv
730.585 239.238 730.584 239.261 730.583 239.285 cv
730.583 239.293 730.582 239.3 730.582 239.308 cv
730.55 240.253 730.533 241.204 730.533 242.16 cv
730.533 244.938 730.672 247.673 730.94 250.353 cv
730.594 250.337 li
730.637 248.265 li
729.839 248.23 li
729.724 250.299 li
729.208 250.276 li
729.175 251.143 li
729.676 251.165 li
729.557 253.323 li
729.094 253.303 li
729.061 254.17 li
729.509 254.19 li
729.393 256.305 li
730.471 256.353 li
730.514 254.235 li
731.43 254.275 li
735.527 281.568 753.198 302.305 774.628 303.374 cv
774.63 303.374 774.631 303.374 774.633 303.374 cv
774.656 303.375 774.676 303.376 774.699 303.377 cv
774.701 303.378 774.704 303.378 774.706 303.378 cv
774.727 303.379 774.749 303.38 774.77 303.381 cv
774.773 303.381 774.776 303.381 774.78 303.381 cv
774.801 303.382 774.82 303.383 774.842 303.384 cv
774.845 303.384 774.849 303.384 774.853 303.384 cv
774.873 303.385 774.893 303.386 774.913 303.387 cv
774.918 303.387 774.922 303.387 774.927 303.388 cv
774.947 303.388 774.965 303.389 774.985 303.39 cv
774.99 303.39 774.995 303.39 774.999 303.391 cv
775.019 303.391 775.037 303.392 775.057 303.393 cv
775.063 303.393 775.068 303.393 775.074 303.393 cv
775.092 303.394 775.11 303.395 775.129 303.395 cv
775.135 303.396 775.141 303.396 775.147 303.396 cv
775.165 303.397 775.182 303.397 775.201 303.398 cv
775.208 303.398 775.215 303.398 775.221 303.398 cv
775.238 303.399 775.256 303.4 775.273 303.4 cv
775.28 303.4 775.288 303.401 775.295 303.401 cv
775.312 303.401 775.328 303.402 775.345 303.402 cv
775.353 303.403 775.361 303.403 775.369 303.403 cv
775.386 303.404 775.401 303.404 775.418 303.404 cv
775.426 303.405 775.433 303.405 775.441 303.405 cv
775.458 303.405 775.473 303.406 775.49 303.406 cv
775.499 303.406 775.507 303.407 775.515 303.407 cv
775.531 303.407 775.548 303.408 775.563 303.408 cv
775.571 303.408 775.58 303.408 775.589 303.409 cv
775.604 303.409 775.62 303.409 775.635 303.41 cv
775.644 303.41 775.655 303.41 775.664 303.41 cv
775.68 303.41 775.692 303.411 775.708 303.411 cv
775.718 303.411 775.728 303.411 775.738 303.412 cv
775.753 303.412 775.765 303.412 775.781 303.412 cv
775.791 303.413 775.801 303.413 775.812 303.413 cv
775.826 303.413 775.84 303.413 775.854 303.413 cv
775.865 303.414 775.875 303.414 775.885 303.414 cv
775.899 303.414 775.913 303.414 775.927 303.414 cv
775.938 303.415 775.949 303.415 775.961 303.415 cv
775.974 303.415 775.986 303.415 776 303.415 cv
776.011 303.415 776.024 303.416 776.035 303.416 cv
776.048 303.416 776.06 303.416 776.073 303.416 cv
776.086 303.416 776.098 303.416 776.111 303.416 cv
776.123 303.416 776.134 303.416 776.146 303.417 cv
776.16 303.417 776.172 303.417 776.186 303.417 cv
776.197 303.417 776.209 303.417 776.219 303.417 cv
776.234 303.417 776.247 303.417 776.261 303.417 cv
776.272 303.417 776.282 303.417 776.293 303.417 cv
776.317 303.417 776.342 303.417 776.366 303.417 cv
797.109 303.417 814.633 285.003 820.284 259.736 cv
820.182 260.97 li
821.259 261.042 li
821.36 258.925 li
824.685 259.145 li
824.743 258.279 li
821.401 258.058 li
821.504 255.899 li
824.887 256.123 li
824.945 255.257 li
821.546 255.032 li
821.645 252.962 li
821.49 252.952 li
821.956 249.449 822.199 245.842 822.199 242.16 cv
822.199 242.16 li
822.199 242.16 li
822.199 242.16 li
822.199 242.129 822.199 242.098 822.199 242.067 cv
822.199 242.057 822.199 242.048 822.199 242.037 cv
822.199 242.018 822.199 241.997 822.198 241.978 cv
822.198 241.963 822.198 241.95 822.198 241.936 cv
822.198 241.919 822.198 241.903 822.198 241.886 cv
822.198 241.872 822.198 241.857 822.198 241.843 cv
822.198 241.828 822.198 241.813 822.198 241.799 cv
822.198 241.78 822.198 241.765 822.198 241.746 cv
822.198 241.739 822.198 241.73 822.198 241.722 cv
822.197 241.621 822.196 241.519 822.195 241.418 cv
827.992 241.972 833.76 242.56 839.487 243.177 cv
844.473 250.361 845.877 258.302 845.007 267 cv
843.007 278 836.007 285 827.007 290 cv
787.007 310 745.007 320 702.008 323 cv
685.678 324.139 669.386 325.768 653.05 326.836 cv
642.097 327.552 631.01 328.112 619.896 328.305 cv
619.633 327.948 619.365 327.604 619.096 327.273 cv
618.082 325.962 617.017 324.892 616.255 324.154 cv
615.492 323.415 615.007 323 615.007 323 cv
615.007 323 614.832 323.608 614.592 324.591 cv
614.349 325.562 614.079 326.869 613.739 328.374 cv
613.053 328.377 612.368 328.378 611.681 328.378 cv
611.352 261.702 mo
611.563 261.704 611.785 261.778 612.007 262 cv
611.785 261.778 611.563 261.704 611.352 261.702 cv
610.367 261.933 mo
610.367 261.933 li
610.372 261.933 610.378 261.933 610.383 261.932 cv
610.466 261.929 610.561 261.901 610.665 261.865 cv
610.731 261.843 610.802 261.817 610.875 261.792 cv
610.875 261.792 610.875 261.792 610.875 261.792 cv
610.885 261.789 610.896 261.786 610.906 261.782 cv
610.925 261.776 610.945 261.77 610.965 261.764 cv
610.971 261.762 610.978 261.76 610.985 261.758 cv
610.985 261.758 li
610.985 261.758 li
610.985 261.758 li
610.656 261.523 610.328 261.275 610.007 261 cv
610.007 261 li
610.007 261 li
610.007 261 li
610.007 261.731 610.141 261.928 610.359 261.933 cv
610.362 261.933 610.365 261.933 610.367 261.933 cv
610.367 261.933 li
610.985 261.758 mo
610.985 261.758 li
611.008 261.752 611.031 261.746 611.055 261.74 cv
611.031 261.746 611.008 261.752 610.985 261.758 cv
611.342 261.702 mo
611.34 261.702 611.338 261.702 611.336 261.702 cv
611.338 261.702 611.34 261.702 611.342 261.702 cv
611.342 261.702 li
731.303 253.401 mo
730.532 253.367 li
730.576 251.205 li
731.032 251.226 li
731.053 251.413 731.074 251.601 731.096 251.787 cv
731.16 252.329 731.229 252.864 731.303 253.401 cv
.533333 .643137 .188235 rgb
f
610.367 261.933 mo
610.365 261.933 610.362 261.933 610.359 261.933 cv
610.141 261.928 610.007 261.731 610.007 261 cv
610.007 261 li
610.328 261.275 610.656 261.523 610.985 261.758 cv
610.985 261.758 li
610.978 261.76 610.971 261.762 610.965 261.764 cv
610.945 261.77 610.925 261.776 610.906 261.782 cv
610.896 261.786 610.885 261.789 610.875 261.792 cv
610.875 261.792 610.875 261.792 610.875 261.792 cv
610.802 261.817 610.731 261.843 610.665 261.865 cv
610.561 261.901 610.466 261.929 610.383 261.932 cv
610.378 261.933 610.372 261.933 610.367 261.933 cv
f
610.367 261.933 mo
610.365 261.933 610.362 261.933 610.359 261.933 cv
610.362 261.933 610.365 261.933 610.367 261.933 cv
610.367 261.933 li
610.383 261.932 mo
610.466 261.929 610.561 261.901 610.665 261.865 cv
610.561 261.901 610.466 261.929 610.383 261.932 cv
610.875 261.792 mo
610.875 261.792 610.875 261.792 610.875 261.792 cv
610.875 261.792 610.875 261.792 610.875 261.792 cv
610.906 261.782 mo
610.925 261.776 610.945 261.77 610.965 261.764 cv
610.945 261.77 610.925 261.776 610.906 261.782 cv
610.985 261.758 mo
610.985 261.758 li
610.985 261.758 li
610.985 261.758 li
610.007 261 mo
610.007 261 li
610.007 261 li
610.007 261 li
.666667 .745098 .227451 rgb
f
596.961 328.115 mo
585.571 327.694 574.234 326.737 563.069 325.002 cv
557.405 324.121 551.253 323.155 544.918 321.991 cv
560.67 312.87 575.985 302.803 591.007 291 cv
591.784 290.379 592.102 289.782 592.101 289.205 cv
592.095 286.543 585.278 284.316 585.278 282.153 cv
585.278 281.768 585.495 281.384 586.007 281 cv
594.501 273.356 605.158 269.317 615.529 265.21 cv
618.749 266.089 li
611.241 269.595 604.396 274.567 597.007 279 cv
597.007 279 li
597.007 279 li
603.984 286.849 614.763 296.979 614.754 305.411 cv
614.752 306.648 614.519 307.849 614.007 309 cv
611.327 314.657 607.315 319.516 602.555 323.946 cv
602.02 323.276 601.487 322.624 600.961 321.996 cv
598.892 319.531 596.919 317.481 595.442 316.106 cv
594.7 315.418 594.098 314.888 593.665 314.54 cv
593.239 314.19 593.007 314 593.007 314 cv
593.007 314 593.093 314.271 593.25 314.77 cv
593.415 315.262 593.638 315.986 593.904 316.891 cv
594.441 318.702 595.12 321.244 595.899 324.192 cv
596.229 325.433 596.58 326.75 596.961 328.115 cv
.454902 .54902 .168627 rgb
f
900 348 mo
843.763 348 li
844.049 347.621 844.289 347.239 844.448 346.856 cv
844.711 346.243 844.837 345.508 844.879 344.708 cv
863.353 340.787 881.736 336.5 900 331.767 cv
900 348 li
834.12 348 mo
830.266 348 li
830.258 347.912 830.25 347.824 830.243 347.736 cv
831.484 347.486 832.724 347.234 833.963 346.981 cv
834.005 347.322 834.058 347.663 834.12 348 cv
.34902 .439216 .14902 rgb
f
900 479.239 mo
899.338 479.493 898.675 479.747 898.013 480 cv
900 480 li
900 479.239 li
.415686 .501961 .156863 rgb
f
657.643 254.156 mo
658.722 254.181 li
658.732 246.092 li
657.933 246.074 li
657.643 254.156 li
cp
.980392 .956863 .807843 rgb
f
657.326 249 mo
662.117 249.111 li
662.135 248.243 li
657.342 248.132 li
657.326 249 li
cp
f
657.271 252.029 mo
662.056 252.139 li
662.074 251.271 li
657.287 251.161 li
657.271 252.029 li
cp
f
662.425 254.267 mo
663.503 254.292 li
663.53 246.202 li
662.73 246.184 li
662.425 254.267 li
cp
f
662.117 249.111 mo
666.909 249.221 li
666.928 248.353 li
662.135 248.243 li
662.117 249.111 li
cp
f
662.056 252.139 mo
666.842 252.249 li
666.861 251.382 li
662.074 251.271 li
662.056 252.139 li
cp
f
667.207 254.377 mo
668.285 254.402 li
668.327 246.313 li
667.527 246.295 li
667.207 254.377 li
cp
f
666.909 249.221 mo
671.701 249.331 li
671.721 248.464 li
666.928 248.353 li
666.909 249.221 li
cp
f
666.842 252.249 mo
671.628 252.359 li
671.649 251.492 li
666.861 251.382 li
666.842 252.249 li
cp
f
671.988 254.487 mo
673.067 254.512 li
673.124 246.423 li
672.325 246.405 li
671.988 254.487 li
cp
f
671.701 249.331 mo
676.492 249.442 li
676.514 248.574 li
671.721 248.464 li
671.701 249.331 li
cp
f
671.628 252.359 mo
676.414 252.47 li
676.436 251.602 li
671.649 251.492 li
671.628 252.359 li
cp
f
676.77 254.601 mo
677.849 254.634 li
677.92 246.545 li
677.121 246.52 li
676.77 254.601 li
cp
f
676.492 249.442 mo
681.282 249.592 li
681.305 248.724 li
676.514 248.574 li
676.492 249.442 li
cp
f
676.414 252.47 mo
681.2 252.62 li
681.223 251.752 li
676.436 251.602 li
676.414 252.47 li
cp
f
681.554 254.751 mo
682.633 254.785 li
682.712 246.696 li
681.914 246.671 li
681.554 254.751 li
cp
f
681.282 249.592 mo
686.071 249.742 li
686.095 248.875 li
681.305 248.724 li
681.282 249.592 li
cp
f
681.2 252.62 mo
685.986 252.77 li
686.011 251.903 li
681.223 251.752 li
681.2 252.62 li
cp
f
686.338 254.901 mo
687.417 254.935 li
687.505 246.846 li
686.706 246.821 li
686.338 254.901 li
cp
f
686.071 249.742 mo
690.861 249.893 li
690.886 249.025 li
686.095 248.875 li
686.071 249.742 li
cp
f
685.986 252.77 mo
690.773 252.92 li
690.798 252.053 li
686.011 251.903 li
685.986 252.77 li
cp
f
691.123 255.051 mo
692.201 255.085 li
692.298 246.996 li
691.499 246.971 li
691.123 255.051 li
cp
f
690.861 249.893 mo
695.65 250.043 li
695.676 249.175 li
690.886 249.025 li
690.861 249.893 li
cp
f
690.773 252.92 mo
695.559 253.07 li
695.585 252.203 li
690.798 252.053 li
690.773 252.92 li
cp
f
695.907 255.201 mo
696.985 255.235 li
697.09 247.147 li
696.292 247.122 li
695.907 255.201 li
cp
f
695.65 250.043 mo
700.44 250.193 li
700.467 249.326 li
695.676 249.175 li
695.65 250.043 li
cp
f
695.559 253.07 mo
700.345 253.221 li
700.372 252.353 li
695.585 252.203 li
695.559 253.07 li
cp
f
700.691 255.351 mo
701.769 255.385 li
701.883 247.297 li
701.084 247.272 li
700.691 255.351 li
cp
f
700.44 250.193 mo
705.229 250.343 li
705.257 249.476 li
700.467 249.326 li
700.44 250.193 li
cp
f
700.345 253.221 mo
705.132 253.371 li
705.16 252.503 li
700.372 252.353 li
700.345 253.221 li
cp
f
705.475 255.501 mo
706.554 255.535 li
706.676 247.447 li
705.877 247.422 li
705.475 255.501 li
cp
f
705.229 250.343 mo
710.019 250.494 li
710.048 249.626 li
705.257 249.476 li
705.229 250.343 li
cp
f
705.132 253.371 mo
709.918 253.521 li
709.947 252.654 li
705.16 252.503 li
705.132 253.371 li
cp
f
710.259 255.651 mo
711.338 255.685 li
711.468 247.598 li
710.67 247.573 li
710.259 255.651 li
cp
f
710.019 250.494 mo
714.808 250.644 li
714.838 249.777 li
710.048 249.626 li
710.019 250.494 li
cp
f
709.918 253.521 mo
714.704 253.671 li
714.734 252.804 li
709.947 252.654 li
709.918 253.521 li
cp
f
715.043 255.801 mo
716.122 255.835 li
716.261 247.748 li
715.462 247.723 li
715.043 255.801 li
cp
f
714.808 250.644 mo
719.598 250.794 li
719.629 249.927 li
714.838 249.777 li
714.808 250.644 li
cp
f
714.704 253.671 mo
719.491 253.821 li
719.521 252.954 li
714.734 252.804 li
714.704 253.671 li
cp
f
719.827 255.952 mo
720.906 255.985 li
721.053 247.899 li
720.255 247.874 li
719.827 255.952 li
cp
f
719.598 250.794 mo
724.387 250.945 li
724.419 250.077 li
719.629 249.927 li
719.598 250.794 li
cp
f
719.491 253.821 mo
724.277 253.971 li
724.309 253.104 li
719.521 252.954 li
719.491 253.821 li
cp
f
724.611 256.102 mo
725.69 256.14 li
725.846 248.052 li
725.048 248.024 li
724.611 256.102 li
cp
f
724.387 250.945 mo
729.175 251.143 li
729.208 250.276 li
724.419 250.077 li
724.387 250.945 li
cp
f
724.277 253.971 mo
729.061 254.17 li
729.094 253.303 li
724.309 253.104 li
724.277 253.971 li
cp
f
729.393 256.305 mo
730.471 256.353 li
730.637 248.265 li
729.839 248.23 li
729.393 256.305 li
f
729.175 251.143 mo
733.962 251.356 li
733.996 250.489 li
729.208 250.276 li
729.175 251.143 li
f
729.061 254.17 mo
733.845 254.383 li
733.878 253.516 li
729.094 253.303 li
729.061 254.17 li
f
734.174 256.519 mo
735.252 256.567 li
735.428 248.479 li
734.629 248.444 li
734.174 256.519 li
f
733.962 251.356 mo
738.75 251.57 li
738.784 250.703 li
733.996 250.489 li
733.962 251.356 li
f
733.845 254.383 mo
738.629 254.597 li
738.663 253.729 li
733.878 253.516 li
733.845 254.383 li
f
738.955 256.732 mo
740.033 256.78 li
740.218 248.693 li
739.42 248.657 li
738.955 256.732 li
f
738.75 251.57 mo
743.537 251.784 li
743.573 250.916 li
738.784 250.703 li
738.75 251.57 li
cp
f
738.629 254.597 mo
743.412 254.81 li
743.448 253.943 li
738.663 253.729 li
738.629 254.597 li
f
743.736 256.945 mo
744.814 256.993 li
745.009 248.906 li
744.211 248.871 li
743.736 256.945 li
cp
f
743.537 251.784 mo
748.324 251.997 li
748.361 251.13 li
743.573 250.916 li
743.537 251.784 li
cp
f
743.412 254.81 mo
748.196 255.023 li
748.233 254.156 li
743.448 253.943 li
743.412 254.81 li
cp
f
748.517 257.158 mo
749.595 257.207 li
749.8 249.12 li
749.002 249.085 li
748.517 257.158 li
cp
f
748.324 251.997 mo
753.111 252.211 li
753.149 251.344 li
748.361 251.13 li
748.324 251.997 li
cp
f
748.196 255.023 mo
752.979 255.237 li
753.017 254.37 li
748.233 254.156 li
748.196 255.023 li
cp
f
753.298 257.372 mo
754.376 257.42 li
754.591 249.334 li
753.793 249.298 li
753.298 257.372 li
cp
f
753.111 252.211 mo
757.899 252.424 li
757.938 251.557 li
753.149 251.344 li
753.111 252.211 li
cp
f
752.979 255.237 mo
757.763 255.45 li
757.802 254.583 li
753.017 254.37 li
752.979 255.237 li
cp
f
758.079 257.585 mo
759.157 257.633 li
759.382 249.548 li
758.583 249.512 li
758.079 257.585 li
cp
f
757.899 252.424 mo
762.686 252.638 li
762.726 251.771 li
757.938 251.557 li
757.899 252.424 li
cp
f
757.763 255.45 mo
762.547 255.664 li
762.587 254.797 li
757.802 254.583 li
757.763 255.45 li
cp
f
762.86 257.798 mo
763.939 257.846 li
764.172 249.761 li
763.374 249.726 li
762.86 257.798 li
cp
f
762.686 252.638 mo
767.473 252.851 li
767.514 251.984 li
762.726 251.771 li
762.686 252.638 li
cp
f
762.547 255.664 mo
767.33 255.877 li
767.371 255.01 li
762.587 254.797 li
762.547 255.664 li
cp
f
767.642 258.012 mo
768.72 258.06 li
768.963 249.975 li
768.165 249.939 li
767.642 258.012 li
cp
f
767.473 252.851 mo
772.261 253.065 li
772.303 252.198 li
767.514 251.984 li
767.473 252.851 li
cp
f
767.33 255.877 mo
772.114 256.091 li
772.156 255.223 li
767.371 255.01 li
767.33 255.877 li
cp
f
772.423 258.225 mo
773.501 258.273 li
773.754 250.189 li
772.956 250.153 li
772.423 258.225 li
cp
f
772.261 253.065 mo
777.048 253.278 li
777.091 252.412 li
772.303 252.198 li
772.261 253.065 li
cp
f
772.114 256.091 mo
776.898 256.304 li
776.941 255.437 li
772.156 255.223 li
772.114 256.091 li
cp
f
777.204 258.438 mo
778.282 258.486 li
778.545 250.403 li
777.746 250.367 li
777.204 258.438 li
cp
f
777.048 253.278 mo
781.835 253.492 li
781.879 252.625 li
777.091 252.412 li
777.048 253.278 li
cp
f
776.898 256.304 mo
781.681 256.517 li
781.725 255.65 li
776.941 255.437 li
776.898 256.304 li
cp
f
781.985 258.651 mo
783.063 258.699 li
783.335 250.616 li
782.537 250.581 li
781.985 258.651 li
cp
f
781.835 253.492 mo
786.622 253.706 li
786.667 252.839 li
781.879 252.625 li
781.835 253.492 li
cp
f
781.681 256.517 mo
786.465 256.731 li
786.51 255.864 li
781.725 255.65 li
781.681 256.517 li
cp
f
786.766 258.865 mo
787.844 258.913 li
788.126 250.83 li
787.328 250.794 li
786.766 258.865 li
cp
f
786.622 253.706 mo
791.41 253.919 li
791.456 253.053 li
786.667 252.839 li
786.622 253.706 li
cp
f
786.465 256.731 mo
791.249 256.944 li
791.295 256.077 li
786.51 255.864 li
786.465 256.731 li
cp
f
791.547 259.078 mo
792.624 259.147 li
792.917 251.061 li
792.119 251.009 li
791.547 259.078 li
cp
f
791.456 253.053 mo
791.41 253.919 li
791.41 253.919 792.606 253.983 793.801 254.066 cv
794.997 254.145 796.193 254.224 796.193 254.224 cv
796.24 253.358 li
796.24 253.358 795.044 253.279 793.848 253.199 cv
792.652 253.116 791.456 253.053 791.456 253.053 cv
cp
f
791.295 256.077 mo
791.249 256.944 li
791.249 256.944 792.444 257.007 793.638 257.091 cv
794.832 257.17 796.026 257.249 796.026 257.249 cv
796.074 256.382 li
796.074 256.382 794.879 256.303 793.685 256.224 cv
792.49 256.141 791.295 256.077 791.295 256.077 cv
cp
f
796.32 259.391 mo
797.396 259.462 li
797.705 251.378 li
796.907 251.325 li
796.32 259.391 li
cp
f
796.193 254.224 mo
800.975 254.541 li
801.024 253.674 li
796.24 253.358 li
796.193 254.224 li
cp
f
796.026 257.249 mo
800.803 257.565 li
800.852 256.698 li
796.074 256.382 li
796.026 257.249 li
f
801.092 259.707 mo
802.169 259.778 li
802.493 251.695 li
801.695 251.642 li
801.092 259.707 li
f
800.975 254.541 mo
805.757 254.857 li
805.808 253.991 li
801.024 253.674 li
800.975 254.541 li
f
800.803 257.565 mo
805.579 257.881 li
805.63 257.014 li
800.852 256.698 li
800.803 257.565 li
f
805.865 260.023 mo
806.941 260.094 li
807.281 252.012 li
806.483 251.959 li
805.865 260.023 li
f
805.757 254.857 mo
810.54 255.173 li
810.592 254.307 li
805.808 253.991 li
805.757 254.857 li
f
805.579 257.881 mo
810.356 258.197 li
810.408 257.331 li
805.63 257.014 li
805.579 257.881 li
f
810.637 260.339 mo
811.714 260.41 li
812.068 252.328 li
811.271 252.276 li
810.637 260.339 li
f
810.54 255.173 mo
815.322 255.49 li
815.376 254.624 li
810.592 254.307 li
810.54 255.173 li
f
810.356 258.197 mo
815.132 258.513 li
815.187 257.647 li
810.408 257.331 li
810.356 258.197 li
f
815.41 260.654 mo
816.486 260.726 li
816.856 252.645 li
816.059 252.592 li
815.41 260.654 li
f
815.322 255.49 mo
820.104 255.806 li
820.16 254.94 li
815.376 254.624 li
815.322 255.49 li
f
815.132 258.513 mo
819.909 258.829 li
819.965 257.963 li
815.187 257.647 li
815.132 258.513 li
f
820.182 260.97 mo
821.259 261.042 li
821.645 252.962 li
820.847 252.909 li
820.182 260.97 li
f
820.104 255.806 mo
824.887 256.123 li
824.945 255.257 li
820.16 254.94 li
820.104 255.806 li
f
819.909 258.829 mo
824.685 259.145 li
824.743 258.279 li
819.965 257.963 li
819.909 258.829 li
f
824.955 261.286 mo
826.031 261.357 li
826.433 253.279 li
825.635 253.226 li
824.955 261.286 li
cp
f
824.887 256.123 mo
829.669 256.439 li
829.728 255.573 li
824.944 255.257 li
824.887 256.123 li
cp
f
824.685 259.145 mo
829.462 259.461 li
829.521 258.595 li
824.743 258.279 li
824.685 259.145 li
cp
f
829.728 261.602 mo
830.804 261.673 li
831.221 253.596 li
830.423 253.543 li
829.728 261.602 li
cp
f
829.669 256.439 mo
834.452 256.756 li
834.513 255.89 li
829.728 255.573 li
829.669 256.439 li
cp
f
829.462 259.461 mo
834.239 259.777 li
834.3 258.911 li
829.521 258.595 li
829.462 259.461 li
cp
f
834.5 261.918 mo
835.576 261.989 li
836.009 253.912 li
835.211 253.86 li
834.5 261.918 li
cp
f
834.452 256.756 mo
839.234 257.072 li
839.297 256.206 li
834.513 255.89 li
834.452 256.756 li
cp
f
834.239 259.777 mo
839.015 260.093 li
839.078 259.228 li
834.3 258.911 li
834.239 259.777 li
cp
f
839.273 262.233 mo
840.349 262.305 li
840.797 254.229 li
839.999 254.176 li
839.273 262.233 li
cp
f
839.234 257.072 mo
844.016 257.388 li
844.081 256.523 li
839.297 256.206 li
839.234 257.072 li
cp
f
839.015 260.093 mo
843.792 260.409 li
843.856 259.544 li
839.078 259.228 li
839.015 260.093 li
cp
f
844.045 262.549 mo
845.121 262.62 li
845.585 254.546 li
844.787 254.493 li
844.045 262.549 li
cp
f
844.016 257.388 mo
848.799 257.705 li
848.865 256.84 li
844.081 256.523 li
844.016 257.388 li
cp
f
843.792 260.409 mo
848.568 260.725 li
848.634 259.86 li
843.856 259.544 li
843.792 260.409 li
cp
f
848.818 262.865 mo
849.894 262.936 li
850.373 254.863 li
849.575 254.81 li
848.818 262.865 li
cp
f
848.799 257.705 mo
853.581 258.021 li
853.649 257.156 li
848.865 256.84 li
848.799 257.705 li
cp
f
848.568 260.725 mo
853.345 261.041 li
853.413 260.176 li
848.634 259.86 li
848.568 260.725 li
cp
f
853.59 263.181 mo
854.666 263.252 li
855.16 255.18 li
854.363 255.127 li
853.59 263.181 li
cp
f
853.581 258.021 mo
858.363 258.338 li
858.433 257.473 li
853.649 257.156 li
853.581 258.021 li
cp
f
853.345 261.041 mo
858.121 261.357 li
858.191 260.492 li
853.413 260.176 li
853.345 261.041 li
cp
f
858.363 263.496 mo
859.439 263.567 li
859.949 255.497 li
859.151 255.444 li
858.363 263.496 li
cp
f
858.363 258.338 mo
863.146 258.654 li
863.217 257.789 li
858.433 257.473 li
858.363 258.338 li
cp
f
858.121 261.357 mo
862.898 261.673 li
862.969 260.808 li
858.191 260.492 li
858.121 261.357 li
cp
f
640.317 271.971 mo
618.749 266.089 li
619.858 265.571 620.981 265.085 622.123 264.637 cv
622.123 264.637 li
622.123 264.637 li
626.093 264.732 630.165 264.559 634.007 266 cv
630.165 264.559 626.093 264.732 622.123 264.637 cv
622.802 264.371 623.488 264.117 624.18 263.877 cv
646.112 263.849 li
661.546 266.132 li
659.877 270.016 li
640.317 271.971 li
615.529 265.21 mo
610.702 263.894 li
618.85 263.884 li
618.486 264.031 618.121 264.178 617.756 264.324 cv
617.756 264.324 li
617.016 264.621 616.273 264.916 615.529 265.21 cv
622.123 264.637 mo
620.648 264.602 619.186 264.53 617.756 264.324 cv
618.121 264.178 618.486 264.031 618.85 263.884 cv
624.18 263.877 li
623.488 264.117 622.802 264.371 622.123 264.637 cv
level3{
gsave
clp
[-1.23614 -7.62286 7.62286 -1.23614 636.916 269.897 ]ct
/4 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~E/lVkNA,=20Q2n(Di?AgN%]+-05lb%Di-2dMD&k(05cV"DM^#aLbEY%05cOuD20c]L+dCu05ZFsD2']\
KeI:s05Q:pCkOHXK.h%n05Q7nCP"0SJhChi/o-"jCOe$QJ1bSe/o#kgC4@jNIP,Aa/o#eeC4.^KI4f5^
/no\cBm_OIHS0#Z/noV`BR27DH7`fU/SKD]BQu+AGV*QP/SB8ZB6Pq?FtI?M/S9,WAp#\;FY.3I/S9)V
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.23614 -7.62286 7.62286 -1.23614 636.916 269.897 ]ct
clp
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~Df9Q4Df9Q4Df9Q4Df0H1DJj?0DJj?0DJj?0DJj?0DJj?0DJj?0DJa6-D/F-,D/F-,D/F-,D/F-,D/F-,
D/F**Ci!p(Ci!p(Ci!p(Ci!p(Ci!p(Ci!p(Ci!m&CMR^$CMR^$CMR^$CMR^$CMR["C2.KuC2.KuC2.Ku
C2.KuC2.KuC2.KtBk_9qBk_9qBk_9qBk_9qBk_9qBk_9qBk_9pBP;'mBP;'mBP;'mBP;'mBP;'mBP;'m
BP;'mB4kjiB4kjiB4kjiB4kjiB4kjiAnGXeAnGXeAnGXeAnGXeAnGXeAnGXeAS#FaAS#FaAS#FaAS#Fa
~>
<~NK&pWNJrgTN/W^SN/NUPMi3LOMi3LOMi*CLMMd:KMM[1HM2@(GM26tDLkpkCLkpkCLkgb@LPLY?LPCP<
L5(G;L5(D9KnY57KnY57KnY57KnY25KS5#3KS4u1K7ef/K7ec-JqAT+JqAT+JqAQ)JUrB'JUr?%J:N0#
J:N0"It)rtIt)rtIt)rsIXZ`pIXZ`oI=6NlI=6NkI!g<hI!g<hI!g<hI!g<gH[C*dH[C*cH?sm`H?sm_
H$O[\H$O[\H$O[\G^+IXG^+IXGB\7TGB\7TG'8%PG'8%PG'8%PF`hhLF`hhLFEDVHFEDVHFEDVHF)uDD
~>
<~0/"t30/"t30/"t30/"t30/"t30.nk0/hSb//hSb//hSb//hSb//hSb//hSb//hSb//hSb//hSb//hSb/
/hSb//hSb//hSb//hSb//hSb//hSb//hSb//hSb//hSb//hSb//hSb//hS_-/M/P+/M/P+/M/P+/M/P+
/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P*
/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /4 /Gradient get_res exec grestore
}if
np
618.749 266.089 mo
615.529 265.21 li
616.273 264.916 617.016 264.621 617.756 264.324 cv
619.186 264.53 620.648 264.602 622.123 264.637 cv
620.981 265.085 619.858 265.571 618.749 266.089 cv
level3{
gsave
clp
[-1.23614 -7.62286 7.62286 -1.23614 636.916 269.897 ]ct
/5 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~@!O80Gq36H.pmNO?["#-G:HsD.UR?K??Rf)Ft-g@.UI6I??I`(F=LU=.U@-G?#qK$F"1I9.U@'E?#hE#
E@P76.U6sC>]D5uE%5+3.U6mA>]2)sD^en..9g[=>AbloD(/\+.9gX<>AP`mCaiP(.9^L9>&,QjCFNG%
.9^I8=_T<fBdm2!.9U=5=_K6eBIR(t.9L43=D''bAggbn-s1(0=Cim_ALLYk-s'q-=(E^\A11Mh-s'n,
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.23614 -7.62286 7.62286 -1.23614 636.916 269.897 ]ct
clp
/5 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~?XI/I?X@&F?=$rE?=$rE?=$rE?=$rE?=$rE?=$rE?<piB?!U`A?!U`A?!U`A?!U`A?!U`A?!U`A?!LW>
>[1N=>[1N=>[1N=>[1N=>[1N=>[1N=>[1N=>[1K;>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b97>$>*5
>$>*5>$>*5>$>*5>$>*5>$>*5>$>*5>$>*4=]nm1=]nm1=]nm1=]nm1=]nm1=]nm0=BJ[-=BJ[-=BJ[-
=BJ[-=BJ[-=BJ[-=BJ[-='&I)='&I)='&I)='&I)='&I)='&I)='&I)='&I)<`W7%<`W7%<`W7%<`W7%
~>
<~G^+IXG^+IXG^"@UGB\7TGBS.QG'8%PG'8%PG'.qMF`hhLF`hhLF`__IFEDVHFEDVHFE;MEF)uDDF)uDD
F)uABEcQ2@EcQ/>EH,u<EH,u<EH,r:E,]c8E,]c8E,]c8E,]`6Df9Q4Df9N2DJj?0DJj?0DJj<.D/F-,
D/F-,D/F-+Ci!p(Ci!p(Ci!p'CMR^$CMR^$CMR^#C2.KuC2.KuC2.KtBk_9qBk_9pBP;'mBP;'mBP;'l
B4kjiB4kjiB4kjiB4kjiAnGXeAnGXeAS#FaAS#FaAS#FaA7T4]A7T4]@q0"Y@q0"Y@q0"Y@q0"Y@U`eU
~>
<~.Olnt.Olnt.Olnt.Olnt.Olnt.Oceq.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p
.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4HYn-n$Jl-n$Jl
-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl
-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /5 /Gradient get_res exec grestore
}if
np
614.58 227.27 mo
627.794 240.622 li
647.655 245.171 li
634.987 226.714 li
614.58 227.27 li
cp
.486275 .470588 1 rgb
f
633.471 229.432 mo
637.552 234.094 641.968 242.815 646.233 246.907 cv
646.247 244.538 li
634.943 227.271 li
633.471 229.432 li
cp
.537255 .219608 .454902 rgb
f
634.038 245.682 mo
629.032 246.049 li
628.846 243.694 li
633.909 243.31 li
634.038 245.682 li
cp
641.931 242.702 mo
641.968 245.099 li
636.891 245.472 li
636.795 243.092 li
641.931 242.702 li
cp
625.109 246.189 mo
627.34 264.871 li
646.112 263.849 li
646.233 246.907 li
641.968 242.815 637.552 234.094 633.471 229.432 cv
625.109 246.189 li
cp
.670588 .321569 .364706 rgb
f
606.56 246.072 mo
610.702 263.894 li
627.34 264.871 li
625.109 246.189 li
606.56 246.072 li
cp
.976471 .447059 .466667 rgb
f
606.56 246.072 mo
625.109 246.189 li
634.943 227.271 li
614.587 227.801 li
606.56 246.072 li
cp
.537255 .219608 .454902 rgb
f
604.529 244.977 mo
605.857 246.821 li
624.295 246.971 li
623.068 245.045 li
604.529 244.977 li
cp
.733333 .772549 .564706 rgb
f
604.529 244.977 mo
623.068 245.045 li
634.837 223.633 li
614.167 224.339 li
604.529 244.977 li
cp
.980392 .956863 .807843 rgb
f
623.068 245.045 mo
624.295 246.971 li
634.987 226.714 li
647.655 245.171 li
648.739 242.999 li
634.837 223.633 li
623.068 245.045 li
cp
.87451 .921569 .67451 rgb
f
636.795 243.092 mo
636.891 245.472 li
641.968 245.1 li
641.931 242.702 li
636.795 243.092 li
cp
.439216 .223529 .360784 rgb
f
628.845 243.694 mo
629.032 246.049 li
634.038 245.682 li
633.909 243.31 li
628.845 243.694 li
cp
f
631.117 264.666 mo
643.142 264.191 li
643.142 248.457 li
630.093 249.079 li
631.117 264.666 li
cp
f
123.595 324.741 mo
105.551 324.741 82.6813 318.091 82.6813 318.091 cv
82.6813 318.091 88.0727 316.618 95.5082 315.059 cv
101.087 318.438 108.763 320.568 118.667 320.611 cv
130.306 320.298 138.995 318.469 145.291 315.524 cv
146.155 315.126 146.975 314.706 147.746 314.266 cv
157.137 316.077 164.507 318.091 164.507 318.091 cv
164.507 318.091 139.432 324.741 123.595 324.741 cv
.278431 .364706 .141176 rgb
f
120.12 196.446 mo
112.74 196.42 105.164 209.635 99.8056 228.067 cv
91.5428 266.955 59.6228 317.436 118.667 320.611 cv
189.138 318.023 147.913 266.716 140.896 226.55 cv
135.424 208.243 127.468 195.763 120.12 196.446 cv
.196078 .431373 .117647 rgb
f
98.1627 233.552 mo
98.7197 231.662 99.2676 229.827 99.8056 228.067 cv
99.6997 228.566 99.5892 229.07 99.4757 229.572 cv
99.0308 230.906 98.5946 232.236 98.1627 233.552 cv
99.8056 228.067 mo
103.425 215.617 108.056 205.547 112.955 200.33 cv
112.955 200.33 li
108.056 205.547 103.425 215.617 99.8056 228.067 cv
.847059 .901961 .298039 rgb
f
112.955 200.33 mo
112.955 200.33 li
115.302 197.831 117.71 196.446 120.098 196.446 cv
120.098 196.446 li
117.71 196.446 115.302 197.832 112.955 200.33 cv
.878431 .941176 .317647 rgb
f
99.4757 229.572 mo
99.5892 229.07 99.6997 228.566 99.8056 228.067 cv
99.8056 228.067 li
99.8056 228.067 li
103.425 215.617 108.056 205.547 112.955 200.33 cv
115.302 197.832 117.71 196.446 120.098 196.446 cv
120.105 196.446 120.113 196.446 120.12 196.446 cv
120.22 196.442 120.321 196.439 120.422 196.439 cv
121.235 196.439 122.066 196.586 122.904 196.873 cv
119.637 197.359 116.464 199.15 113.726 201.829 cv
106.97 208.444 102.952 219.147 99.4757 229.572 cv
.266667 .592157 .14902 rgb
f
83.7461 294.803 mo
83.674 293.118 83.7174 291.375 83.857 289.582 cv
83.7543 291.333 83.7405 293.039 83.8293 294.689 cv
83.8015 294.727 83.7739 294.765 83.7461 294.803 cv
.364706 .423529 .14902 rgb
f
85.4357 303.15 mo
85.3514 303.042 85.2687 302.932 85.1878 302.823 cv
85.1878 302.823 li
84.3174 300.326 83.8676 297.644 83.7461 294.803 cv
83.7739 294.765 83.8015 294.727 83.8293 294.689 cv
83.9917 297.706 84.4985 300.541 85.4357 303.15 cv
.305882 .372549 .141176 rgb
f
151.816 262.113 mo
147.646 250.276 142.89 237.962 140.896 226.55 cv
143.95 236.891 148.104 249.814 151.816 262.113 cv
.709804 .760784 .235294 rgb
f
91.6577 256.296 mo
92.0212 254.995 92.3813 253.685 92.734 252.369 cv
92.6272 252.909 92.512 253.452 92.391 253.996 cv
92.1456 254.764 91.9018 255.528 91.6577 256.296 cv
.662745 .709804 .223529 rgb
f
133.911 208.906 mo
131.863 205.058 129.697 201.964 127.494 199.819 cv
129.728 201.92 131.88 205.033 133.911 208.906 cv
.709804 .760784 .235294 rgb
f
121.445 315.355 mo
110.696 315.355 99.5869 312.668 91.1057 307.847 cv
90.8495 307.701 90.5968 307.554 90.3455 307.405 cv
90.3455 307.405 li
89.7763 307.073 89.247 306.726 88.7539 306.365 cv
87.4029 305.379 86.3232 304.294 85.4357 303.15 cv
84.4985 300.541 83.9917 297.706 83.8293 294.689 cv
83.7405 293.039 83.7543 291.333 83.857 289.582 cv
84.6229 279.743 88.2863 268.367 91.6577 256.296 cv
91.9018 255.528 92.1456 254.764 92.391 253.996 cv
91.0469 260.04 89.0068 266.216 90.3144 270.306 cv
92.3026 274.782 97.5061 277.707 105.187 277.707 cv
105.5 277.707 105.817 277.702 106.137 277.693 cv
115.533 277.623 126.512 274.835 131.38 266.736 cv
133.477 263.656 135.063 260.462 136.201 257.163 cv
137.275 257.559 138.286 257.756 139.2 257.756 cv
142.253 257.755 144.213 255.561 143.724 251.281 cv
143.085 246.557 141.06 241.701 138.356 237.311 cv
137.352 225.211 133.531 210.654 126.807 199.207 cv
127.037 199.4 127.266 199.605 127.494 199.819 cv
129.697 201.964 131.863 205.058 133.911 208.906 cv
136.456 213.759 138.81 219.806 140.896 226.55 cv
140.896 226.55 li
142.89 237.962 147.646 250.276 151.816 262.113 cv
154.065 269.564 156.151 276.788 157.731 283.067 cv
157.731 283.067 li
157.731 283.067 li
157.731 283.067 li
158.098 285.197 158.326 287.247 158.325 289.247 cv
158.324 293.851 157.112 298.186 153.601 302.6 cv
153.601 302.6 li
153.158 303.186 152.688 303.752 152.194 304.295 cv
146.77 310.268 138.442 313.663 129.269 314.86 cv
126.712 315.193 124.089 315.356 121.445 315.355 cv
.172549 .364706 .113725 rgb
f
95.5082 315.059 mo
93.9767 314.131 92.6033 313.109 91.3849 312.011 cv
92.6197 313.111 94.0266 314.122 95.6218 315.035 cv
95.5841 315.043 95.5458 315.051 95.5082 315.059 cv
152.92 310.408 mo
158.641 304.769 159.953 297.146 158.93 288.4 cv
160.309 296.87 158.89 304.625 152.92 310.408 cv
89.6573 310.29 mo
87.5945 308.015 86.1116 305.484 85.1878 302.823 cv
85.1878 302.823 li
85.2688 302.933 85.3514 303.042 85.4357 303.151 cv
86.378 305.774 87.7558 308.168 89.6573 310.29 cv
.329412 .403922 .145098 rgb
f
118.667 320.611 mo
108.763 320.568 101.087 318.438 95.5082 315.059 cv
95.5458 315.051 95.5841 315.043 95.6218 315.035 cv
100.983 318.102 108.469 320.063 118.667 320.611 cv
130.427 320.179 139.074 318.391 145.291 315.524 cv
138.995 318.469 130.306 320.298 118.667 320.611 cv
.262745 .337255 .137255 rgb
f
118.667 320.611 mo
108.469 320.063 100.983 318.102 95.6218 315.035 cv
94.0266 314.122 92.6197 313.111 91.3849 312.011 cv
90.7696 311.456 90.1938 310.881 89.6573 310.29 cv
87.7558 308.168 86.378 305.774 85.4357 303.151 cv
86.3232 304.294 87.403 305.379 88.7539 306.365 cv
89.247 306.726 89.7763 307.073 90.3455 307.405 cv
90.3455 307.405 li
90.5968 307.554 90.8495 307.701 91.1057 307.847 cv
99.5892 312.669 110.695 315.356 121.446 315.356 cv
124.09 315.356 126.712 315.193 129.269 314.86 cv
138.446 313.664 146.768 310.27 152.194 304.295 cv
152.688 303.752 153.158 303.186 153.601 302.6 cv
153.601 302.6 li
157.112 298.186 158.324 293.852 158.325 289.247 cv
158.326 287.247 158.098 285.197 157.731 283.067 cv
157.731 283.067 li
158.24 284.867 158.645 286.649 158.93 288.4 cv
159.953 297.146 158.641 304.769 152.92 310.408 cv
150.914 312.352 148.393 314.074 145.291 315.524 cv
139.074 318.391 130.427 320.179 118.667 320.611 cv
.184314 .396078 .113725 rgb
f
129.269 314.86 mo
138.442 313.663 146.77 310.268 152.194 304.295 cv
146.768 310.27 138.446 313.664 129.269 314.86 cv
91.1057 307.847 mo
90.8495 307.701 90.5968 307.554 90.3455 307.405 cv
90.5968 307.554 90.8495 307.701 91.1057 307.847 cv
.160784 .337255 .109804 rgb
f
85.4357 303.151 mo
85.3514 303.042 85.2688 302.933 85.1878 302.823 cv
85.2687 302.932 85.3514 303.042 85.4357 303.15 cv
85.4357 303.151 li
.286274 .341176 .137255 rgb
f
88.7539 306.365 mo
87.403 305.379 86.3232 304.294 85.4357 303.151 cv
85.4357 303.15 li
86.3232 304.294 87.4029 305.379 88.7539 306.365 cv
153.601 302.6 mo
157.112 298.186 158.324 293.851 158.325 289.247 cv
158.324 293.852 157.112 298.186 153.601 302.6 cv
157.731 283.067 mo
157.731 283.067 li
157.731 283.067 li
157.731 283.067 li
.160784 .337255 .109804 rgb
f
111.538 224.289 mo
108.786 224.288 107.928 220.016 109.162 215.227 cv
109.978 212.046 111.27 208.667 113.652 207.082 cv
114.508 206.451 115.812 206.068 117.13 206.068 cv
119.133 206.068 121.168 206.954 121.708 209.21 cv
122.799 213.475 118.361 219.421 115.71 222.024 cv
114.028 223.612 112.633 224.289 111.538 224.289 cv
.266667 .592157 .14902 rgb
f
107.192 229.956 mo
106.973 229.956 106.757 229.931 106.553 229.877 cv
105.973 229.745 105.549 229.338 105.307 228.85 cv
104.833 227.826 105.089 225.973 105.535 224.611 cv
105.966 223.227 106.488 222.261 106.49 222.261 cv
106.49 222.261 106.49 222.261 106.49 222.261 cv
106.49 222.261 106.8 222.944 107.242 223.627 cv
107.668 224.349 108.286 224.869 108.502 225.314 cv
108.744 225.823 108.787 226.709 109.224 227.414 cv
109.419 227.769 109.667 228.073 109.864 228.268 cv
110.065 228.472 110.193 228.603 110.193 228.603 cv
110.193 228.603 110.016 228.761 109.694 229.004 cv
109.375 229.24 108.899 229.55 108.336 229.74 cv
107.974 229.878 107.578 229.956 107.192 229.956 cv
110.193 228.603 mo
110.193 228.603 li
110.193 228.603 li
110.193 228.603 li
.270588 .592157 .152941 rgb
f
122.265 220.854 mo
122.265 220.854 122.16 219.996 122.041 219.009 cv
121.945 218.03 121.75 216.974 121.923 216.311 cv
122.065 215.638 122.691 214.923 123.161 214.192 cv
123.424 213.835 123.631 213.491 123.796 213.233 cv
123.963 212.972 124.069 212.807 124.069 212.807 cv
124.069 212.808 124.194 212.966 124.386 213.254 cv
124.577 213.542 124.844 213.968 125.056 214.485 cv
125.537 215.518 125.818 216.946 125.615 217.88 cv
125.364 218.934 124.524 219.787 123.734 220.237 cv
123.358 220.482 122.963 220.615 122.701 220.716 cv
122.432 220.811 122.265 220.854 122.265 220.854 cv
f
123.333 238.893 mo
123.33 238.888 121.9 236.35 122.208 235.257 cv
122.325 234.715 123.034 234.201 123.599 233.808 cv
124.189 233.407 124.765 233.08 124.765 233.08 cv
124.765 233.08 125.193 233.65 125.584 234.465 cv
125.992 235.296 126.261 236.248 126.128 236.865 cv
125.773 238.18 123.336 238.876 123.333 238.893 cv
f
104.223 254.973 mo
104.219 254.973 103.562 254.84 102.864 254.551 cv
102.156 254.277 101.426 253.752 101.238 252.976 cv
101.073 252.167 101.356 250.787 101.858 249.64 cv
102.072 249.09 102.362 248.594 102.559 248.268 cv
102.759 247.941 102.889 247.759 102.889 247.759 cv
102.889 247.759 102.986 247.885 103.139 248.083 cv
103.291 248.278 103.482 248.526 103.745 248.761 cv
104.203 249.25 104.847 249.697 104.978 250.299 cv
105.163 250.979 104.954 252.125 104.739 253.136 cv
104.512 254.143 104.223 254.972 104.223 254.973 cv
104.223 254.973 104.223 254.973 104.223 254.973 cv
f
97.6588 266.077 mo
97.2442 266.077 96.8828 266.014 96.6667 265.843 cv
96.2379 265.465 96.1012 264.485 96.0949 263.629 cv
96.0861 262.77 96.1965 262.02 96.1963 262.019 cv
96.1963 262.019 96.8708 261.775 97.6391 261.618 cv
98.0021 261.544 98.3829 261.49 98.7247 261.49 cv
99.1087 261.49 99.4434 261.558 99.6482 261.743 cv
100.627 262.548 100.373 265.608 100.369 265.607 cv
100.369 265.607 100.369 265.607 100.369 265.607 cv
100.369 265.607 100.369 265.607 100.368 265.607 cv
100.348 265.607 99.9543 265.725 99.4242 265.842 cv
98.8937 265.959 98.2264 266.077 97.6588 266.077 cv
f
382.079 239.321 mo
378.192 238.766 374.811 237.833 374.811 237.833 cv
374.811 237.833 377.882 237.036 381.397 236.477 cv
382.685 237.346 384.006 237.833 385.434 237.833 cv
385.522 237.833 385.61 237.831 385.699 237.827 cv
385.987 237.821 386.269 237.805 386.545 237.778 cv
385.06 238.298 383.567 238.813 382.079 239.321 cv
.639216 .745098 .231373 rgb
f
387.078 239.724 mo
385.467 239.724 383.728 239.557 382.079 239.321 cv
383.567 238.813 385.06 238.298 386.545 237.778 cv
388.036 237.632 389.383 237.175 390.665 236.439 cv
390.788 236.371 390.911 236.301 391.033 236.229 cv
395.201 236.758 399.345 237.833 399.345 237.833 cv
399.345 237.833 391.826 239.724 387.078 239.724 cv
.592157 .701961 .231373 rgb
f
385.173 198.757 mo
380.197 198.755 374.215 201.471 371.89 205.82 cv
368.618 210.836 369.556 218.471 372.428 224.894 cv
375.794 232.501 381.425 237.781 385.699 237.827 cv
391.487 237.691 396.464 232.626 399.91 224.945 cv
402.887 218.551 401.658 210.195 398.594 205.433 cv
396.156 201.174 390.139 198.626 385.173 198.757 cv
.290196 .482353 .0901961 rgb
f
376.146 201.449 mo
376.146 201.449 li
378.846 199.732 382.186 198.757 385.167 198.757 cv
385.167 198.757 385.167 198.757 385.168 198.757 cv
382.187 198.757 378.846 199.732 376.146 201.449 cv
.517647 .788235 .419608 rgb
f
376.144 201.45 mo
376.144 201.45 li
376.144 201.45 376.145 201.449 376.146 201.449 cv
376.146 201.449 li
376.145 201.449 376.145 201.45 376.144 201.45 cv
.847059 .901961 .294118 rgb
f
371.89 205.82 mo
372.821 204.078 374.339 202.598 376.144 201.45 cv
376.144 201.45 li
374.339 202.598 372.821 204.078 371.89 205.82 cv
.878431 .941176 .317647 rgb
f
385.173 198.757 mo
385.173 198.757 li
385.173 198.757 385.173 198.757 385.173 198.757 cv
385.173 198.757 385.173 198.757 385.173 198.757 cv
.517647 .788235 .419608 rgb
f
371.201 207.223 mo
371.412 206.732 371.642 206.263 371.89 205.82 cv
371.89 205.82 li
372.821 204.078 374.339 202.598 376.144 201.45 cv
376.145 201.45 376.145 201.449 376.146 201.449 cv
378.846 199.732 382.187 198.757 385.168 198.757 cv
385.169 198.757 385.171 198.757 385.173 198.757 cv
385.173 198.757 li
385.173 198.757 385.173 198.757 385.173 198.757 cv
385.173 198.757 li
385.241 198.756 385.309 198.756 385.377 198.756 cv
385.936 198.756 386.505 198.785 387.078 198.842 cv
384.835 198.94 382.699 199.301 380.863 199.85 cv
375.564 201.423 372.761 204.301 371.201 207.223 cv
.4 .662745 .113725 rgb
f
372.812 225.732 mo
370.907 221.935 369.673 217.669 369.822 213.618 cv
369.815 217.307 370.817 221.291 372.428 224.894 cv
372.553 225.176 372.681 225.456 372.812 225.732 cv
.705882 .752941 .235294 rgb
f
395.582 202.106 mo
393.9 200.831 391.857 199.883 389.762 199.326 cv
389.754 199.321 389.745 199.317 389.737 199.313 cv
391.843 199.843 393.89 200.806 395.582 202.106 cv
.329412 .552941 .313725 rgb
f
386.335 235.35 mo
385.82 235.35 385.302 235.298 384.771 235.201 cv
384.768 235.2 384.765 235.2 384.762 235.199 cv
384.76 235.199 384.758 235.198 384.756 235.198 cv
384.744 235.196 384.732 235.194 384.721 235.191 cv
384.708 235.189 384.696 235.187 384.684 235.184 cv
384.682 235.184 384.68 235.184 384.678 235.183 cv
384.675 235.183 384.672 235.182 384.67 235.182 cv
384.179 235.086 383.678 234.951 383.159 234.781 cv
383.096 234.76 383.033 234.739 382.969 234.717 cv
382.969 234.717 382.969 234.717 382.968 234.717 cv
381.599 234.249 380.108 233.541 378.379 232.663 cv
378.379 232.663 li
377.571 232.22 376.82 231.647 376.095 231.003 cv
374.891 229.421 373.767 227.635 372.812 225.732 cv
372.681 225.456 372.553 225.176 372.428 224.894 cv
370.817 221.291 369.815 217.307 369.822 213.618 cv
369.836 213.252 369.86 212.887 369.897 212.525 cv
370.198 214.538 370.162 216.85 372.153 218.249 cv
374.319 219.54 376.759 220.287 379.379 220.287 cv
379.774 220.287 380.174 220.27 380.578 220.235 cv
385.565 219.845 389.021 217.866 391.79 214.986 cv
394.265 212.312 396.044 208.953 395.452 205.914 cv
395.046 203.55 393.23 201.109 389.762 199.326 cv
391.857 199.883 393.9 200.831 395.582 202.106 cv
396.81 203.049 397.852 204.17 398.594 205.433 cv
401.336 209.737 402.696 217.013 400.566 223.082 cv
399.484 225.867 397.553 228.301 395.067 230.639 cv
395.067 230.639 li
391.869 233.668 389.487 235.063 387.117 235.31 cv
387.114 235.31 387.11 235.31 387.107 235.311 cv
387.105 235.311 387.103 235.311 387.102 235.311 cv
387.093 235.312 387.084 235.313 387.076 235.314 cv
387.074 235.314 387.072 235.314 387.07 235.314 cv
386.825 235.338 386.581 235.35 386.335 235.35 cv
.254902 .4 .0862745 rgb
f
381.397 236.477 mo
380.721 236.021 380.055 235.459 379.387 234.807 cv
380.115 235.45 380.85 236 381.58 236.448 cv
381.519 236.457 381.457 236.467 381.397 236.477 cv
397.141 230.043 mo
398.147 228.52 399.074 226.809 399.91 224.945 cv
399.911 224.944 399.911 224.944 399.911 224.944 cv
399.17 226.788 398.208 228.503 397.141 230.043 cv
.756863 .823529 .243137 rgb
f
385.434 237.833 mo
384.006 237.833 382.685 237.346 381.397 236.477 cv
381.457 236.467 381.519 236.457 381.58 236.448 cv
383.01 237.327 384.416 237.813 385.699 237.827 cv
385.992 237.82 386.283 237.801 386.571 237.769 cv
386.562 237.772 386.554 237.775 386.545 237.778 cv
386.269 237.805 385.987 237.821 385.699 237.827 cv
385.61 237.831 385.522 237.833 385.434 237.833 cv
.596078 .682353 .227451 rgb
f
386.545 237.778 mo
386.554 237.775 386.562 237.772 386.571 237.769 cv
387.992 237.612 389.361 237.157 390.665 236.439 cv
389.383 237.175 388.036 237.632 386.545 237.778 cv
.552941 .643137 .227451 rgb
f
385.699 237.827 mo
384.416 237.813 383.01 237.327 381.58 236.448 cv
380.85 236 380.115 235.45 379.387 234.807 cv
378.308 233.754 377.226 232.466 376.095 231.003 cv
376.82 231.647 377.571 232.22 378.379 232.663 cv
378.379 232.663 li
380.107 233.541 381.599 234.249 382.968 234.717 cv
382.968 234.717 382.969 234.717 382.969 234.717 cv
383.033 234.739 383.096 234.76 383.159 234.781 cv
383.678 234.951 384.179 235.086 384.67 235.182 cv
384.673 235.182 384.675 235.183 384.678 235.183 cv
384.68 235.184 384.682 235.184 384.684 235.184 cv
384.696 235.187 384.708 235.189 384.721 235.191 cv
384.732 235.194 384.744 235.196 384.756 235.198 cv
384.758 235.198 384.76 235.199 384.762 235.199 cv
384.765 235.2 384.768 235.2 384.771 235.201 cv
385.302 235.299 385.82 235.35 386.335 235.35 cv
386.335 235.35 li
386.335 235.35 li
386.581 235.35 386.825 235.338 387.07 235.314 cv
387.072 235.314 387.074 235.314 387.076 235.314 cv
387.084 235.313 387.093 235.312 387.102 235.311 cv
387.103 235.311 387.105 235.311 387.107 235.311 cv
387.11 235.31 387.113 235.31 387.117 235.31 cv
389.488 235.063 391.868 233.668 395.067 230.639 cv
395.067 230.639 li
397.554 228.301 399.484 225.867 400.566 223.082 cv
400.374 223.715 400.155 224.337 399.911 224.944 cv
399.911 224.944 399.911 224.944 399.91 224.945 cv
399.074 226.809 398.147 228.52 397.141 230.043 cv
396.282 231.283 395.355 232.409 394.422 233.4 cv
393.183 234.674 391.957 235.698 390.665 236.439 cv
389.361 237.157 387.992 237.612 386.571 237.769 cv
386.283 237.801 385.992 237.82 385.699 237.827 cv
.270588 .439216 .0862745 rgb
f
386.335 235.35 mo
385.82 235.35 385.302 235.299 384.771 235.201 cv
385.302 235.298 385.82 235.35 386.335 235.35 cv
386.335 235.35 li
387.07 235.314 mo
387.072 235.314 387.074 235.314 387.076 235.314 cv
387.074 235.314 387.072 235.314 387.07 235.314 cv
387.102 235.311 mo
387.103 235.311 387.105 235.311 387.107 235.311 cv
387.105 235.311 387.103 235.311 387.102 235.311 cv
387.117 235.31 mo
389.487 235.063 391.869 233.668 395.067 230.639 cv
391.868 233.668 389.488 235.063 387.117 235.31 cv
384.762 235.199 mo
384.76 235.199 384.758 235.198 384.756 235.198 cv
384.758 235.198 384.76 235.199 384.762 235.199 cv
384.721 235.191 mo
384.708 235.189 384.696 235.187 384.684 235.184 cv
384.696 235.187 384.708 235.189 384.721 235.191 cv
384.678 235.183 mo
384.675 235.183 384.673 235.182 384.67 235.182 cv
384.672 235.182 384.675 235.183 384.678 235.183 cv
383.159 234.781 mo
383.096 234.76 383.033 234.739 382.969 234.717 cv
383.033 234.739 383.096 234.76 383.159 234.781 cv
382.968 234.717 mo
381.599 234.249 380.107 233.541 378.379 232.663 cv
380.108 233.541 381.599 234.249 382.968 234.717 cv
.239216 .364706 .0823529 rgb
f
380.327 204.839 mo
378.633 204.839 377.785 203.844 378.294 202.743 cv
378.661 202.032 379.424 201.293 381.012 200.952 cv
381.58 200.818 382.439 200.736 383.302 200.736 cv
384.611 200.736 385.929 200.925 386.25 201.405 cv
386.872 202.337 384.201 203.676 382.781 204.285 cv
381.845 204.675 381.016 204.839 380.327 204.839 cv
.4 .662745 .113725 rgb
f
377.9 206.229 mo
377.775 206.229 377.649 206.225 377.526 206.214 cv
377.133 206.186 376.806 206.089 376.592 205.97 cv
376.389 205.847 376.268 205.67 376.245 205.483 cv
376.223 205.297 376.28 205.105 376.38 204.938 cv
376.473 204.771 376.604 204.629 376.705 204.53 cv
376.809 204.431 376.879 204.374 376.879 204.374 cv
376.879 204.374 377.164 204.534 377.522 204.694 cv
377.875 204.864 378.321 204.984 378.49 205.09 cv
378.595 205.15 378.65 205.235 378.736 205.323 cv
378.824 205.409 378.93 205.514 379.083 205.593 cv
379.311 205.709 li
379.528 205.798 li
379.663 205.847 379.747 205.878 379.747 205.878 cv
379.747 205.878 379.648 205.918 379.464 205.979 cv
379.372 206.012 379.259 206.043 379.125 206.076 cv
378.991 206.112 378.836 206.144 378.666 206.168 cv
378.433 206.207 378.168 206.229 377.9 206.229 cv
.4 .662745 .117647 rgb
f
386.565 204.008 mo
386.565 204.008 386.507 203.812 386.439 203.583 cv
386.385 203.359 386.27 203.12 386.374 202.97 cv
386.459 202.819 386.835 202.659 387.128 202.496 cv
387.291 202.417 387.42 202.341 387.523 202.284 cv
387.629 202.226 387.695 202.19 387.695 202.19 cv
387.695 202.19 387.772 202.225 387.886 202.289 cv
388 202.353 388.159 202.448 388.281 202.563 cv
388.562 202.794 388.704 203.116 388.565 203.328 cv
388.393 203.568 387.883 203.763 387.421 203.866 cv
387.199 203.923 386.969 203.953 386.817 203.976 cv
386.66 203.998 386.565 204.008 386.565 204.008 cv
f
192.638 194.026 mo
192.638 196.221 194.893 198 197.674 198 cv
200.455 198 202.709 196.221 202.709 194.026 cv
202.709 191.831 197.674 162 197.674 162 cv
197.674 162 192.638 191.831 192.638 194.026 cv
cp
.419608 .576471 .254902 rgb
f
211.972 204.247 mo
211.972 206.319 214.226 208 217.007 208 cv
219.788 208 222.043 206.319 222.043 204.247 cv
222.043 202.174 217.007 174 217.007 174 cv
217.007 174 211.972 202.174 211.972 204.247 cv
cp
f
86.6384 208.909 mo
86.6384 210.616 88.8928 212 91.6742 212 cv
94.455 212 96.7094 210.616 96.7094 208.909 cv
96.7094 207.202 91.6742 184 91.6742 184 cv
91.6742 184 86.6384 207.202 86.6384 208.909 cv
cp
f
812.638 208.918 mo
812.638 211.356 814.893 213.333 817.674 213.333 cv
820.455 213.333 822.709 211.356 822.709 208.918 cv
822.709 206.479 817.674 173.333 817.674 173.333 cv
817.674 173.333 812.638 206.479 812.638 208.918 cv
f
831.972 211.056 mo
831.972 212.682 834.226 214 837.007 214 cv
839.788 214 842.043 212.682 842.043 211.056 cv
842.043 209.43 837.007 187.333 837.007 187.333 cv
837.007 187.333 831.972 209.43 831.972 211.056 cv
cp
f
307.794 204.842 mo
295.063 201.37 li
310.285 201.35 li
316.92 202.332 li
316.202 204.001 li
307.794 204.842 li
level3{
gsave
clp
[-.531376 -3.27683 3.27683 -.531376 306.332 203.95 ]ct
/6 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~T"7"T\N?Cm4.WlCS[^bP[lU(g3h<]?S@(DJ[5shb3h3Q<S?k8GZ9"J\3h*E9R^"oBYWA5W3h!96R]ec?
XuVoQ3LR!0RB8K;X>uZL3LHj-R&W06W]?EG3L?^*Q`)p2W&^0B3L6R'QDQ[.VE's=3L-F#Q)$C)Uc=X7
30^-sPbL.%U,\C230^'qPFsn!TK&.-30TpnPFaasSN)e'30KdkOdnCnRl?Iu2j'OfOd\4jR5^4p2isCc
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.531376 -3.27683 3.27683 -.531376 306.332 203.95 ]ct
clp
/6 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~SXl=BSXl=BSXl=BSXc4?S=H+>S=H+>S=H+>S=H+>S=?";S"#n:S"#n:S"#n:S"#n:S!oe7R[T\6R[T\6
R[TY4R@0J2R@0J2R@0J2R@0J2R@0G0R$a8.R$a8.R$a8.R$a8.R$a5,Q^=&*Q^=&*Q^=&*Q^=#(QBmi&
QBmi&QBmi&QBmi%Q'IW"Q'IW"Q'IW"Q'IW"Q'IW!Pa%DsPa%DsPa%DsPa%DrPEV2oPEV2oPEV2oPEV2o
PEV2oP*1ukP*1ukP*1ukP*1ukP*1ukOcbcgOcbcgOcbcgOH>QcOH>QcOH>QcOH>QcOH>QcO,o?_O,o?_
~>
<~\[f8]\[]/Z\@8rV\$riU\$riU\$i`R[^ENN[C*EM[C!<J['[3I['R*FZa7!EZa-mBZE^[>Z*CR=Z*CR=
Z*CO;Yct=7YHP.5YHP.5YHP+3Y-+n/Xf\_-Xf\\+XK8M)XK8J'X/i;%X/i8#WiE%tWMukrWMukrWMuhp
W2QYmVl-GjVl-GjVl-GiVP^5eV5:#bV5:#aUnjf^Unjf]USFTZUSFTYU8"BUTqS0RTqS0RTqS0QTV.sM
T:_aJT:_aJT:_aJSt;OFSXl=BSXl=BS=H+>S=H+>S"#n:S"#n:R[T\6R@0J2R@0J2R@0J2R$a8.Q^=&*
~>
<~3]];_3]];_3]];_3]];_3]];_3]T2\3B9)[3B9)[3B9)[3B9)[3B9)[3B9)[3B9)[3B9)[3B9)[3B9)[
3B9)[3B9)[3B9)[3B9)[3B9)[3B9&Y3&ilW3&ilW3&ilW3&ilW3&ilW3&ilW3&ilW3&ilW3&ilW3&ilW
3&ilW3&ilW3&ilW3&ilW3&ilW3&ilW3&ilW3&ilV2`EZS2`EZS2`EZS2`EZS2`EZS2`EZS2`EZS2`EZS
2`EZS2`EZS2`EZS2`EZS2`EZS2`EZS2`EZS2`EZS2`EZS2`EZS2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /6 /Gradient get_res exec grestore
}if
np
293.95 193.321 mo
302.487 191.365 li
308.168 185.626 li
299.395 185.387 li
293.95 193.321 li
cp
.486275 .470588 1 rgb
f
294.555 193.049 mo
294.561 194.067 li
296.394 192.309 298.293 188.559 300.047 186.555 cv
299.414 185.626 li
294.555 193.049 li
cp
.537255 .219608 .454902 rgb
f
301.955 193.699 mo
299.803 193.54 li
299.859 192.521 li
302.035 192.686 li
301.955 193.699 li
cp
298.577 193.45 mo
296.394 193.29 li
296.41 192.26 li
298.618 192.427 li
298.577 193.45 li
cp
294.561 194.067 mo
294.613 201.35 li
302.683 201.79 li
303.642 193.758 li
300.047 186.555 li
298.293 188.559 296.394 192.309 294.561 194.067 cv
cp
.670588 .321569 .364706 rgb
f
302.683 201.79 mo
309.835 201.37 li
311.615 193.708 li
303.642 193.758 li
302.683 201.79 li
cp
.976471 .447059 .466667 rgb
f
299.414 185.626 mo
303.642 193.758 li
311.615 193.708 li
308.164 185.854 li
299.414 185.626 li
cp
.537255 .219608 .454902 rgb
f
303.991 194.095 mo
311.917 194.031 li
312.488 193.238 li
304.519 193.267 li
303.991 194.095 li
cp
.733333 .772549 .564706 rgb
f
299.46 184.063 mo
304.519 193.267 li
312.488 193.238 li
308.345 184.366 li
299.46 184.063 li
cp
.980392 .956863 .807843 rgb
f
293.483 192.387 mo
293.95 193.321 li
299.395 185.387 li
303.991 194.095 li
304.519 193.267 li
299.46 184.063 li
293.483 192.387 li
cp
.87451 .921569 .67451 rgb
f
296.394 193.29 mo
298.577 193.45 li
298.618 192.427 li
296.41 192.26 li
296.394 193.29 li
cp
.439216 .223529 .360784 rgb
f
299.803 193.54 mo
301.955 193.699 li
302.035 192.686 li
299.859 192.521 li
299.803 193.54 li
cp
f
295.89 201.497 mo
301.059 201.701 li
301.499 195.001 li
295.89 194.734 li
295.89 201.497 li
cp
f
357.422 325.428 mo
353.404 276.211 336.66 245.6 336.66 245.6 cv
324.27 258.204 301.164 319.426 301.164 319.426 cv
299.49 310.723 291.453 293.617 291.453 293.617 cv
278.058 308.322 271.695 351.537 271.695 351.537 cv
381.533 351.537 li
381.533 351.237 365.459 304.921 365.459 304.921 cv
361.106 308.422 357.422 325.428 357.422 325.428 cv
cp
.2 .431373 .2 rgb
f
287.42 312.244 mo
285.66 315.267 283.744 319.243 282.951 322.696 cv
282.774 323.568 282.641 324.504 282.543 325.469 cv
282.434 326.429 282.388 327.43 282.412 328.443 cv
282.42 329.45 282.458 330.454 282.515 331.425 cv
282.622 332.407 282.747 333.354 282.878 334.238 cv
283.098 336.003 283.547 337.534 283.823 338.605 cv
284.113 339.678 284.309 340.307 284.309 340.307 cv
284.309 340.307 284.533 339.715 284.909 338.719 cv
285.296 337.727 285.69 336.344 286.329 334.775 cv
287.421 331.619 289.019 327.756 289.76 324.204 cv
290.477 321.085 290.659 316.819 290.753 313.277 cv
290.819 309.743 290.671 306.995 290.671 306.995 cv
290.671 306.995 289.16 309.201 287.42 312.244 cv
cp
.490196 .690196 .282353 rgb
f
330.564 269.676 mo
328.819 272.22 326.789 275.068 324.932 278.168 cv
324.487 278.955 324.042 279.742 323.6 280.525 cv
323.195 281.304 322.793 282.079 322.396 282.844 cv
321.619 284.382 320.896 285.896 320.261 287.347 cv
319.608 288.788 319.026 290.367 318.483 292.01 cv
317.93 293.648 317.4 295.342 316.897 297.04 cv
315.895 300.438 315.18 303.918 314.509 306.976 cv
313.877 310.048 313.511 312.779 313.207 314.707 cv
312.936 316.639 312.773 317.799 312.773 317.799 cv
312.773 317.799 313.302 316.829 314.197 315.186 cv
315.089 313.544 316.265 311.209 317.66 308.515 cv
319.113 305.841 320.635 302.755 322.211 299.599 cv
323.016 298.026 323.803 296.424 324.546 294.823 cv
325.27 293.212 325.986 291.617 326.68 290.074 cv
327.276 288.712 327.867 287.228 328.443 285.675 cv
328.996 284.129 329.568 282.528 330.143 280.918 cv
331.298 277.739 332.575 274.44 333.594 271.417 cv
334.645 268.409 335.33 265.631 335.736 263.665 cv
335.929 262.674 336.015 261.865 336.1 261.322 cv
336.173 260.777 336.214 260.479 336.214 260.479 cv
336.214 260.479 335.662 261.505 334.743 263.215 cv
333.748 264.883 332.345 267.147 330.564 269.676 cv
cp
f
359.1 322.713 mo
358.753 323.777 359.158 325.354 359.633 326.717 cv
360.11 328.074 360.66 329.203 360.66 329.203 cv
360.66 329.203 361.725 328.741 362.907 327.925 cv
364.086 327.114 365.386 325.934 365.797 324.659 cv
366.41 322.473 364.008 318.099 364.008 318.099 cv
364.008 318.099 359.727 320.475 359.1 322.713 cv
cp
f
776.366 180.903 mo
751.053 180.903 730.533 208.329 730.533 242.16 cv
730.533 275.991 751.053 303.417 776.366 303.417 cv
801.679 303.417 822.199 275.991 822.199 242.16 cv
822.199 208.329 801.679 180.903 776.366 180.903 cv
.270588 .458824 .266667 rgb
f
731.096 251.787 mo
731.074 251.601 731.053 251.413 731.032 251.226 cv
731.032 251.226 li
731.052 251.412 731.074 251.601 731.096 251.787 cv
730.94 250.353 mo
730.94 250.353 li
730.672 247.673 730.533 244.938 730.533 242.16 cv
730.533 241.204 730.55 240.253 730.582 239.308 cv
730.55 240.254 730.533 241.204 730.533 242.16 cv
730.533 244.937 730.672 247.674 730.94 250.353 cv
.470588 .541176 .180392 rgb
f
731.032 251.226 mo
731.032 251.226 li
731 250.935 730.969 250.645 730.94 250.353 cv
730.94 250.353 li
730.969 250.646 730.999 250.934 731.032 251.226 cv
.862745 .807843 .772549 rgb
f
730.583 239.285 mo
730.584 239.261 730.585 239.238 730.585 239.215 cv
730.585 239.237 730.584 239.262 730.583 239.285 cv
.470588 .541176 .180392 rgb
f
777.138 298.863 mo
777.137 298.863 777.137 298.863 777.136 298.863 cv
774.045 298.863 770.883 298.508 767.699 297.768 cv
758.897 296.007 751.102 291.805 744.473 286.148 cv
737.508 277.126 732.678 265.179 731.096 251.787 cv
731.074 251.601 731.052 251.412 731.032 251.226 cv
730.999 250.934 730.969 250.646 730.94 250.353 cv
730.672 247.674 730.533 244.937 730.533 242.16 cv
730.533 241.204 730.55 240.254 730.582 239.308 cv
730.582 239.3 730.583 239.293 730.583 239.285 cv
730.584 239.262 730.585 239.237 730.585 239.215 cv
730.643 237.604 730.747 236.009 730.895 234.432 cv
732.822 241.125 735.807 247.685 738.613 253.698 cv
744.742 266.638 757.448 276.157 771.245 276.157 cv
775.303 276.156 779.457 275.332 783.564 273.529 cv
791.497 269.563 797.667 263.393 801.633 255.461 cv
810.887 235.188 810.006 211.831 799.87 192 cv
799.213 190.657 798.517 189.32 797.785 187.994 cv
807.894 195.15 815.756 207.215 819.603 221.81 cv
819.603 221.81 li
819.603 221.81 li
820.635 227.559 821.177 233.382 821.178 239.187 cv
821.18 252.075 818.518 264.878 812.65 276.614 cv
812.574 276.77 812.497 276.926 812.42 277.081 cv
805.739 290.374 792.267 298.859 777.148 298.863 cv
777.145 298.863 777.142 298.863 777.138 298.863 cv
.239216 .388235 .254902 rgb
f
776.366 303.417 mo
776.342 303.417 776.317 303.417 776.293 303.417 cv
776.318 303.417 776.341 303.417 776.366 303.417 cv
797.109 303.417 814.633 285.003 820.284 259.736 cv
820.284 259.736 li
814.633 285.003 797.109 303.417 776.366 303.417 cv
.501961 .592157 .184314 rgb
f
776.261 303.417 mo
776.247 303.417 776.234 303.417 776.219 303.417 cv
776.233 303.417 776.247 303.417 776.261 303.417 cv
776.186 303.417 mo
776.172 303.417 776.16 303.417 776.146 303.417 cv
776.158 303.417 776.173 303.417 776.186 303.417 cv
776.111 303.416 mo
776.098 303.416 776.086 303.416 776.073 303.416 cv
776.085 303.416 776.099 303.416 776.111 303.416 cv
776.035 303.416 mo
776.024 303.416 776.011 303.415 776 303.415 cv
776.012 303.415 776.023 303.416 776.035 303.416 cv
775.961 303.415 mo
775.949 303.415 775.938 303.415 775.927 303.414 cv
775.938 303.415 775.95 303.415 775.961 303.415 cv
775.885 303.414 mo
775.875 303.414 775.865 303.414 775.854 303.413 cv
775.865 303.414 775.874 303.414 775.885 303.414 cv
775.812 303.413 mo
775.801 303.413 775.791 303.413 775.781 303.412 cv
775.79 303.413 775.803 303.413 775.812 303.413 cv
775.738 303.412 mo
775.728 303.411 775.718 303.411 775.708 303.411 cv
775.717 303.411 775.729 303.411 775.738 303.412 cv
775.664 303.41 mo
775.655 303.41 775.644 303.41 775.635 303.41 cv
775.645 303.41 775.655 303.41 775.664 303.41 cv
775.589 303.409 mo
775.58 303.408 775.571 303.408 775.563 303.408 cv
775.572 303.408 775.579 303.408 775.589 303.409 cv
775.515 303.407 mo
775.507 303.407 775.499 303.406 775.49 303.406 cv
775.498 303.406 775.507 303.407 775.515 303.407 cv
775.441 303.405 mo
775.433 303.405 775.426 303.405 775.418 303.404 cv
775.425 303.405 775.433 303.405 775.441 303.405 cv
775.369 303.403 mo
775.361 303.403 775.353 303.403 775.345 303.402 cv
775.353 303.403 775.361 303.403 775.369 303.403 cv
775.295 303.401 mo
775.288 303.401 775.28 303.4 775.273 303.4 cv
775.28 303.4 775.288 303.401 775.295 303.401 cv
775.221 303.398 mo
775.215 303.398 775.208 303.398 775.201 303.398 cv
775.207 303.398 775.215 303.398 775.221 303.398 cv
775.147 303.396 mo
775.141 303.396 775.135 303.396 775.129 303.395 cv
775.135 303.396 775.141 303.396 775.147 303.396 cv
775.074 303.393 mo
775.068 303.393 775.063 303.393 775.057 303.393 cv
775.061 303.393 775.069 303.393 775.074 303.393 cv
774.999 303.391 mo
774.995 303.39 774.99 303.39 774.985 303.39 cv
774.99 303.39 774.995 303.39 774.999 303.391 cv
774.927 303.388 mo
774.922 303.387 774.918 303.387 774.913 303.387 cv
774.918 303.387 774.922 303.387 774.927 303.388 cv
774.853 303.384 mo
774.849 303.384 774.845 303.384 774.842 303.384 cv
774.845 303.384 774.85 303.384 774.853 303.384 cv
774.78 303.381 mo
774.776 303.381 774.773 303.381 774.77 303.381 cv
774.773 303.381 774.776 303.381 774.78 303.381 cv
774.706 303.378 mo
774.704 303.378 774.701 303.378 774.699 303.377 cv
774.701 303.378 774.704 303.378 774.706 303.378 cv
774.633 303.374 mo
774.631 303.374 774.63 303.374 774.628 303.374 cv
774.63 303.374 774.631 303.374 774.633 303.374 cv
822.199 242.16 mo
822.199 242.129 822.199 242.098 822.199 242.067 cv
822.199 242.098 822.199 242.129 822.199 242.16 cv
822.199 242.037 mo
822.199 242.019 822.199 241.996 822.198 241.978 cv
822.199 241.997 822.199 242.018 822.199 242.037 cv
822.198 241.936 mo
822.198 241.919 822.198 241.903 822.198 241.886 cv
822.198 241.903 822.198 241.919 822.198 241.936 cv
822.198 241.843 mo
822.198 241.828 822.198 241.813 822.198 241.799 cv
822.198 241.813 822.198 241.828 822.198 241.843 cv
822.198 241.746 mo
822.198 241.738 822.198 241.73 822.198 241.722 cv
822.198 241.73 822.198 241.739 822.198 241.746 cv
f
776.366 303.417 mo
776.341 303.417 776.318 303.417 776.293 303.417 cv
776.282 303.417 776.272 303.417 776.261 303.417 cv
776.247 303.417 776.233 303.417 776.219 303.417 cv
776.209 303.417 776.196 303.417 776.186 303.417 cv
776.173 303.417 776.158 303.417 776.146 303.417 cv
776.135 303.416 776.122 303.416 776.111 303.416 cv
776.099 303.416 776.085 303.416 776.073 303.416 cv
776.06 303.416 776.048 303.416 776.035 303.416 cv
776.023 303.416 776.012 303.415 776 303.415 cv
775.986 303.415 775.974 303.415 775.961 303.415 cv
775.95 303.415 775.938 303.415 775.927 303.414 cv
775.913 303.414 775.899 303.414 775.885 303.414 cv
775.874 303.414 775.865 303.414 775.854 303.413 cv
775.84 303.413 775.825 303.413 775.812 303.413 cv
775.803 303.413 775.79 303.413 775.781 303.412 cv
775.767 303.412 775.752 303.412 775.738 303.412 cv
775.729 303.411 775.717 303.411 775.708 303.411 cv
775.693 303.411 775.68 303.41 775.664 303.41 cv
775.655 303.41 775.645 303.41 775.635 303.41 cv
775.619 303.409 775.604 303.409 775.589 303.409 cv
775.579 303.408 775.572 303.408 775.563 303.408 cv
775.546 303.408 775.532 303.407 775.515 303.407 cv
775.507 303.407 775.498 303.406 775.49 303.406 cv
775.474 303.406 775.457 303.405 775.441 303.405 cv
775.433 303.405 775.425 303.405 775.418 303.404 cv
775.402 303.404 775.385 303.403 775.369 303.403 cv
775.361 303.403 775.353 303.403 775.345 303.402 cv
775.328 303.402 775.312 303.401 775.295 303.401 cv
775.288 303.401 775.28 303.4 775.273 303.4 cv
775.255 303.4 775.239 303.399 775.221 303.398 cv
775.215 303.398 775.207 303.398 775.201 303.398 cv
775.183 303.397 775.165 303.397 775.147 303.396 cv
775.141 303.396 775.135 303.396 775.129 303.395 cv
775.111 303.395 775.092 303.394 775.074 303.393 cv
775.069 303.393 775.061 303.393 775.057 303.393 cv
775.038 303.392 775.018 303.391 774.999 303.391 cv
774.995 303.39 774.99 303.39 774.985 303.39 cv
774.966 303.389 774.946 303.388 774.927 303.388 cv
774.922 303.387 774.918 303.387 774.913 303.387 cv
774.893 303.386 774.873 303.385 774.853 303.384 cv
774.85 303.384 774.845 303.384 774.842 303.384 cv
774.82 303.383 774.801 303.382 774.78 303.381 cv
774.776 303.381 774.773 303.381 774.77 303.381 cv
774.749 303.38 774.727 303.379 774.706 303.378 cv
774.704 303.378 774.701 303.378 774.699 303.377 cv
774.677 303.376 774.655 303.375 774.633 303.374 cv
774.631 303.374 774.63 303.374 774.628 303.374 cv
762.92 302.79 752.336 296.334 744.473 286.148 cv
751.102 291.805 758.897 296.007 767.699 297.768 cv
770.884 298.508 774.044 298.863 777.136 298.863 cv
777.137 298.863 777.137 298.863 777.138 298.863 cv
777.138 298.863 li
777.138 298.863 li
777.142 298.863 777.145 298.863 777.148 298.863 cv
792.269 298.86 805.739 290.375 812.42 277.081 cv
812.497 276.926 812.574 276.77 812.65 276.614 cv
818.518 264.878 821.18 252.075 821.178 239.187 cv
821.177 233.382 820.635 227.559 819.603 221.81 cv
821.247 228.048 822.161 234.744 822.198 241.722 cv
822.198 241.73 822.198 241.738 822.198 241.746 cv
822.198 241.764 822.198 241.781 822.198 241.799 cv
822.198 241.813 822.198 241.828 822.198 241.843 cv
822.198 241.857 822.198 241.872 822.198 241.886 cv
822.198 241.903 822.198 241.919 822.198 241.936 cv
822.198 241.95 822.198 241.963 822.198 241.978 cv
822.199 241.996 822.199 242.019 822.199 242.037 cv
822.199 242.047 822.199 242.057 822.199 242.067 cv
822.199 242.098 822.199 242.129 822.199 242.16 cv
822.199 242.16 li
822.199 246.566 821.85 250.866 821.189 255.008 cv
821.143 255.296 821.095 255.583 821.047 255.869 cv
820.924 256.587 820.792 257.3 820.65 258.008 cv
820.593 258.296 820.534 258.58 820.473 258.866 cv
820.412 259.156 820.349 259.448 820.284 259.736 cv
814.633 285.003 797.109 303.417 776.366 303.417 cv
.254902 .423529 .262745 rgb
f
777.138 298.863 mo
777.137 298.863 777.137 298.863 777.136 298.863 cv
777.137 298.863 777.137 298.863 777.138 298.863 cv
777.138 298.863 li
777.148 298.863 mo
792.267 298.859 805.739 290.374 812.42 277.081 cv
805.739 290.375 792.269 298.86 777.148 298.863 cv
821.178 239.187 mo
821.177 233.382 820.635 227.559 819.603 221.81 cv
819.603 221.81 li
820.635 227.559 821.177 233.382 821.178 239.187 cv
.223529 .356863 .25098 rgb
f
799.292 275.545 mo
798.7 275.891 797.801 276.14 796.91 276.039 cv
796.183 275.975 795.495 275.71 794.965 275.397 cv
795.151 275.002 795.324 274.617 795.481 274.248 cv
796.081 272.849 796.476 271.652 796.722 270.81 cv
796.852 270.392 796.932 270.057 796.99 269.83 cv
797.048 269.604 797.079 269.483 797.079 269.483 cv
797.079 269.483 797.037 269.6 796.958 269.821 cv
796.879 270.04 796.768 270.365 796.601 270.769 cv
796.28 271.58 795.779 272.726 795.062 274.046 cv
794.883 274.378 794.69 274.721 794.484 275.072 cv
794.273 275.431 794.048 275.8 793.811 276.174 cv
793.356 276.891 792.854 277.63 792.304 278.375 cv
791.943 278.861 791.555 279.348 791.155 279.832 cv
790.647 278.433 790.182 276.789 789.875 275.123 cv
789.451 272.96 789.243 270.788 789.124 269.167 cv
789.008 267.545 788.969 266.472 788.969 266.472 cv
788.969 266.472 788.915 267.543 788.892 269.174 cv
788.872 270.804 788.893 272.999 789.139 275.233 cv
789.336 277.222 789.755 279.229 790.258 280.873 cv
789.667 281.531 789.048 282.177 788.394 282.79 cv
787.661 283.478 786.885 284.119 786.095 284.714 cv
785.292 285.289 784.485 285.836 783.654 286.273 cv
782.383 286.973 781.092 287.453 779.888 287.745 cv
779.683 284.521 779.446 281.342 779.189 278.247 cv
779.108 277.283 779.026 276.329 778.943 275.383 cv
778.319 268.331 777.612 261.798 776.982 256.299 cv
776.381 251.239 775.881 247.042 775.533 244.111 cv
775.178 241.181 774.976 239.516 774.976 239.516 cv
774.976 239.516 775.405 246.212 776.056 256.379 cv
776.102 257.151 776.148 257.949 776.194 258.759 cv
776.053 258.714 li
775.921 258.669 775.784 258.597 775.629 258.533 cv
775.034 258.236 774.32 257.666 773.763 256.933 cv
773.189 256.216 772.751 255.388 772.456 254.759 cv
772.163 254.127 772.002 253.692 772.002 253.692 cv
772.002 253.692 772.072 254.148 772.237 254.836 cv
772.405 255.521 772.674 256.444 773.135 257.333 cv
773.574 258.229 774.259 259.066 774.955 259.592 cv
775.135 259.713 775.3 259.837 775.463 259.928 cv
775.629 260.016 775.779 260.094 775.909 260.162 cv
776.062 260.223 776.186 260.27 776.282 260.305 cv
776.528 264.738 776.768 269.678 776.951 274.901 cv
776.922 274.892 li
775.723 274.475 774.39 273.819 773.091 272.909 cv
772.868 272.756 772.649 272.587 772.429 272.422 cv
772.076 272.156 771.727 271.878 771.383 271.585 cv
770.678 270.984 769.99 270.336 769.338 269.652 cv
769.281 269.589 li
769.681 268.733 769.959 267.713 770.06 266.716 cv
770.222 265.402 770.17 264.127 770.123 263.185 cv
770.07 262.242 770.019 261.624 770.019 261.624 cv
770.019 261.624 769.968 262.242 769.891 263.18 cv
769.799 264.113 769.661 265.369 769.329 266.576 cv
769.133 267.357 768.827 268.095 768.475 268.709 cv
766.521 266.492 764.924 264.087 763.803 262.181 cv
763.16 261.09 762.669 260.158 762.336 259.501 cv
762.001 258.845 761.823 258.466 761.823 258.466 cv
761.823 258.466 761.958 258.862 762.219 259.553 cv
762.478 260.244 762.865 261.229 763.39 262.395 cv
764.341 264.511 765.755 267.236 767.631 269.836 cv
767.82 270.098 768.009 270.36 768.207 270.618 cv
768.283 270.718 768.366 270.814 768.444 270.913 cv
768.98 271.595 769.548 272.258 770.146 272.888 cv
769.415 273.529 768.512 274.165 767.522 274.65 cv
766.147 275.364 764.661 275.815 763.537 276.065 cv
762.974 276.191 762.5 276.274 762.168 276.316 cv
761.835 276.362 761.646 276.388 761.646 276.388 cv
761.646 276.388 761.837 276.385 762.173 276.38 cv
762.51 276.378 762.993 276.353 763.574 276.295 cv
764.734 276.18 766.297 275.906 767.82 275.332 cv
768.954 274.933 770.044 274.34 770.947 273.698 cv
771.24 273.979 771.538 274.254 771.842 274.516 cv
773.162 275.664 774.603 276.581 775.982 277.221 cv
776.341 277.386 776.695 277.529 777.04 277.654 cv
777.143 281.049 777.217 284.542 777.25 288.084 cv
777.259 288.97 777.264 289.858 777.267 290.749 cv
777.27 291.85 777.271 292.952 777.265 294.057 cv
777.214 307.912 776.307 322 774.292 332.777 cv
773.313 338.169 772.094 342.718 770.939 346.057 cv
770.798 346.476 770.662 346.878 770.532 347.264 cv
770.384 347.639 770.242 347.999 770.108 348.34 cv
769.834 349.02 769.614 349.647 769.378 350.17 cv
768.902 351.214 768.565 351.97 768.382 352.396 cv
773.774 354.918 li
773.982 354.438 774.343 353.574 774.834 352.378 cv
775.077 351.779 775.294 351.085 775.566 350.319 cv
775.698 349.936 775.836 349.533 775.981 349.112 cv
776.105 348.687 776.234 348.243 776.368 347.781 cv
777.464 344.092 778.517 339.203 779.254 333.553 cv
780.783 322.248 780.932 307.939 780.241 293.993 cv
780.18 292.734 780.111 291.48 780.038 290.229 cv
781.589 289.766 783.204 289.023 784.706 288.014 cv
785.582 287.448 786.404 286.778 787.209 286.084 cv
787.999 285.372 788.757 284.619 789.46 283.828 cv
789.912 283.322 790.335 282.802 790.745 282.277 cv
791.057 281.878 791.357 281.477 791.645 281.074 cv
792.758 279.51 793.697 277.927 794.448 276.455 cv
795.171 276.72 796.061 276.876 796.918 276.783 cv
797.963 276.695 798.888 276.215 799.427 275.735 cv
799.572 275.627 799.675 275.492 799.778 275.391 cv
799.882 275.29 799.956 275.188 800.016 275.104 cv
800.138 274.939 800.207 274.845 800.207 274.845 cv
800.207 274.845 800.121 274.923 799.969 275.06 cv
799.825 275.202 799.587 275.373 799.292 275.545 cv
cp
.341176 .207843 .160784 rgb
f
752.709 228.08 mo
744.566 228.079 743.136 219.375 746.332 210.966 cv
749.548 202.501 755.323 192.234 764.742 189.832 cv
765.429 189.657 766.136 189.524 766.862 189.436 cv
767.382 189.373 767.906 189.342 768.431 189.342 cv
775.553 189.342 782.893 194.988 781.509 202.989 cv
779.538 214.392 768.158 223.95 757.544 227.254 cv
755.724 227.82 754.117 228.08 752.709 228.08 cv
.372549 .627451 .341176 rgb
f
788.778 210.99 mo
788.85 210.753 li
788.85 210.753 li
788.85 210.753 li
788.85 210.753 li
788.871 210.699 788.885 210.664 788.887 210.664 cv
788.89 210.664 788.861 210.752 788.778 210.99 cv
f
788.617 211.392 mo
788.615 211.392 788.653 211.283 788.702 211.15 cv
788.702 211.15 li
788.702 211.15 li
788.702 211.15 li
788.778 210.99 li
788.664 211.285 788.62 211.392 788.617 211.392 cv
f
779.01 218.736 mo
780.545 214.949 780.913 210.82 782.557 207.102 cv
783.906 204.324 785.374 201.712 786.355 198.757 cv
788.857 202.064 790.156 206.704 788.85 210.753 cv
788.85 210.753 li
788.85 210.753 li
788.812 210.851 788.752 211.012 788.702 211.15 cv
788.702 211.15 li
788.702 211.15 li
787.086 215.136 783.186 217.978 779.01 218.736 cv
f
788.702 211.15 mo
788.702 211.15 li
788.752 211.012 788.812 210.851 788.85 210.753 cv
788.85 210.753 li
788.778 210.99 li
788.702 211.15 li
f
185.52 347.348 mo
185.587 347.565 185.657 347.783 185.726 348 cv
185.273 348 li
185.374 347.779 185.462 347.56 185.52 347.348 cv
299.672 347.728 mo
299.72 347.82 299.773 347.909 299.822 348 cv
299.493 348 li
299.553 347.909 299.608 347.821 299.672 347.728 cv
315.436 347.795 mo
315.613 348 li
315.333 348 li
315.436 347.795 li
624.918 347.366 mo
625.276 346.762 625.616 346.139 625.912 345.514 cv
625.936 345.46 li
626.082 346.282 626.329 347.148 626.602 348 cv
624.529 348 li
624.658 347.786 624.794 347.584 624.918 347.366 cv
760.164 342.72 mo
760.138 342.562 760.094 342.392 760.057 342.228 cv
760.194 342.127 760.341 342.019 760.498 341.903 cv
760.591 342.406 760.696 342.901 760.82 343.377 cv
761.037 344.219 761.21 344.977 761.48 345.675 cv
761.756 346.374 762.018 346.976 762.245 347.467 cv
762.337 347.667 762.419 347.837 762.498 348 cv
760.043 348 li
760.228 346.126 760.42 344.281 760.164 342.72 cv
763.959 347.595 mo
764.169 347.281 764.418 346.906 764.685 346.506 cv
764.789 347.009 764.921 347.504 765.049 348 cv
763.685 348 li
763.772 347.871 763.857 347.746 763.959 347.595 cv
774.198 346.035 mo
774.165 346.691 774.145 347.35 774.129 348 cv
773.251 348 li
773.592 347.348 773.918 346.691 774.198 346.035 cv
900 480 mo
900 348 li
843.763 348 li
844.049 347.621 844.289 347.239 844.448 346.856 cv
845.167 345.181 844.861 342.59 844.609 340.293 cv
844.451 339.105 844.312 338.051 844.211 337.293 cv
844.084 336.489 844.007 336 844.007 336 cv
844.007 336 843.54 336.099 842.788 336.326 cv
842.051 336.561 840.968 336.899 839.893 337.456 cv
837.685 338.52 835.239 340.39 834.316 342.575 cv
833.705 344.03 833.767 346.074 834.12 348 cv
830.266 348 li
830.233 347.648 830.211 347.291 830.213 346.932 cv
830.252 344.803 830.867 342.758 830.455 341.125 cv
830.026 339.553 828.341 337.479 826.862 335.527 cv
825.367 333.609 824.007 332 824.007 332 cv
824.007 332 822.613 333.458 821.364 335.714 cv
820.734 336.839 820.17 338.179 819.835 339.603 cv
819.532 341.034 819.432 342.547 819.822 343.944 cv
820.131 345.156 820.945 346.496 822.047 347.673 cv
822.152 347.787 822.275 347.89 822.387 348 cv
801.866 348 li
801.433 346.807 801.007 346 801.007 346 cv
801.007 346 799.327 346.195 797.554 346.556 cv
796.157 346.853 794.565 347.261 793.635 348 cv
783.305 348 li
784.221 346.743 784.984 345.438 785.455 344.173 cv
786.507 341.187 786.41 337.101 786.004 333.835 cv
785.612 330.555 785.007 328 785.007 328 cv
785.007 328 783.04 329.573 780.83 331.956 cv
778.756 334.215 776.468 337.078 775.317 339.926 cv
775.195 337.797 774.714 335.485 774.3 333.447 cv
773.949 331.918 773.639 330.572 773.418 329.608 cv
773.162 328.606 773.007 328 773.007 328 cv
773.007 328 772.604 328.316 771.973 328.875 cv
771.95 328.154 771.914 327.439 771.862 326.753 cv
771.744 325.145 771.518 323.68 771.336 322.652 cv
771.153 321.62 771.007 321 771.007 321 cv
771.007 321 770.51 321.375 769.737 322.019 cv
768.957 322.665 767.932 323.565 766.777 324.65 cv
765.178 326.16 763.413 328.084 762.114 330.206 cv
762.048 330.079 762.007 330 762.007 330 cv
762.007 330 761.604 330.056 760.966 330.213 cv
760.337 330.371 759.426 330.63 758.547 331.06 cv
758.331 331.157 758.114 331.266 757.899 331.382 cv
756.886 328.608 755.489 325.761 754.109 323.324 cv
753.085 321.468 752.018 319.878 751.26 318.765 cv
750.496 317.65 750.007 317 750.007 317 cv
750.007 317 749.818 317.764 749.56 319.031 cv
749.292 320.303 748.997 322.046 748.656 324.085 cv
748.032 328.117 747.496 333.284 748.32 337.715 cv
748.531 338.777 748.868 339.912 749.287 341.07 cv
749.148 342.216 749.127 343.373 749.308 344.492 cv
749.477 345.603 749.927 346.812 750.564 348 cv
741.351 348 li
741.069 347.375 740.758 346.708 740.416 346.012 cv
738.809 342.737 736.57 338.919 734.032 336.639 cv
731.577 334.305 727.605 332.428 724.208 331.097 cv
720.814 329.771 718.007 329 718.007 329 cv
718.007 329 718.753 331.604 720.213 334.889 cv
721.67 338.17 723.855 342.142 726.615 344.762 cv
727.96 345.972 729.803 347.056 731.761 348 cv
635.364 348 li
636.005 347.033 636.493 346.034 636.699 345.078 cv
637.479 340.85 633.007 334 633.007 334 cv
633.007 334 631.42 335.181 629.742 336.92 cv
628.731 337.976 627.69 339.198 626.931 340.472 cv
626.833 339.671 626.641 338.835 626.369 337.996 cv
626.151 337.324 625.892 336.654 625.607 336.002 cv
625.303 335.338 624.976 334.697 624.648 334.098 cv
623.337 331.702 622.007 330 622.007 330 cv
622.007 330 621.797 330.24 621.46 330.653 cv
620.737 329.444 619.923 328.289 619.096 327.273 cv
618.082 325.962 617.017 324.892 616.255 324.154 cv
615.492 323.415 615.007 323 615.007 323 cv
615.007 323 614.832 323.608 614.592 324.591 cv
614.345 325.579 614.07 326.914 613.721 328.452 cv
613.128 331.484 612.433 335.242 613.017 338.374 cv
613.51 341.143 615.46 344.562 617.342 347.306 cv
617.508 347.551 617.671 347.771 617.836 348 cv
617.034 348 li
615.536 344.803 614.076 341.532 612.544 338.681 cv
609.651 333.37 605.104 326.939 600.961 321.996 cv
598.892 319.531 596.919 317.481 595.442 316.106 cv
594.7 315.418 594.098 314.888 593.665 314.54 cv
593.239 314.19 593.007 314 593.007 314 cv
593.007 314 593.093 314.271 593.25 314.77 cv
593.415 315.262 593.638 315.986 593.904 316.891 cv
594.441 318.702 595.12 321.244 595.899 324.192 cv
597.232 329.203 598.91 335.461 601.466 341.066 cv
601.258 340.824 601.052 340.58 600.84 340.349 cv
599.491 338.925 598.127 337.432 596.698 336.448 cv
593.858 334.354 589.495 332.668 585.736 331.541 cv
583.888 330.974 582.171 330.604 580.961 330.357 cv
579.746 330.112 579.007 330 579.007 330 cv
579.007 330 579.323 330.654 579.884 331.699 cv
580.444 332.754 581.256 334.153 582.22 335.777 cv
584.146 338.956 586.866 342.86 590.19 345.317 cv
590.937 345.848 591.789 346.347 592.705 346.812 cv
593.163 347.044 593.634 347.27 594.122 347.482 cv
594.579 347.663 595.047 347.834 595.517 348 cv
489.454 348 li
489.485 347.9 489.529 347.798 489.554 347.699 cv
490.105 345.37 489.26 342.343 488.196 340.051 cv
487.158 337.735 486.007 336 486.007 336 cv
486.007 336 484.444 337.281 482.78 339.085 cv
481.127 340.909 479.339 343.107 478.866 345.101 cv
478.652 345.927 478.708 346.933 478.861 348 cv
473.988 348 li
474.369 347.409 474.627 346.83 474.655 346.3 cv
474.784 345.026 473.461 343.291 472.355 341.81 cv
471.194 340.318 470.007 339 470.007 339 cv
470.007 339 468.51 339.685 466.926 340.927 cv
465.29 342.165 463.823 343.953 463.675 345.648 cv
463.651 346.071 463.754 346.534 463.931 347.011 cv
463.512 346.801 463.08 346.598 462.652 346.411 cv
460.782 345.6 459.007 345 459.007 345 cv
459.007 345 458.346 346.235 457.798 348 cv
436.706 348 li
436.781 346.928 436.237 345.448 435.621 344.094 cv
434.863 342.438 434.007 341 434.007 341 cv
434.007 341 432.43 341.148 430.687 341.659 cv
428.947 342.164 427.033 343.051 426.452 344.333 cv
426.072 345.165 426.467 346.585 427.04 348 cv
425.963 348 li
425.797 347.671 425.625 347.339 425.458 347.01 cv
425.053 346.242 424.696 345.515 424.438 344.949 cv
424.172 344.364 424.007 344 424.007 344 cv
424.007 344 423.618 343.98 422.989 344.024 cv
422.878 344.031 422.75 344.045 422.624 344.058 cv
422.587 343.768 422.561 343.483 422.515 343.193 cv
422.43 342.504 422.325 341.807 422.183 341.142 cv
421.9 339.81 421.482 338.586 420.851 337.66 cv
419.595 335.729 416.931 334.092 414.497 332.874 cv
412.08 331.671 410.007 331 410.007 331 cv
410.007 331 409.74 333.117 409.793 335.727 cv
409.834 338.308 410.253 341.539 411.654 343.694 cv
412.305 344.652 413.339 345.561 414.512 346.367 cv
415.099 346.77 415.72 347.148 416.347 347.496 cv
416.389 347.516 li
416.341 347.618 li
416.302 347.738 416.285 347.869 416.269 348 cv
410.789 348 li
410.772 347.903 410.751 347.815 410.735 347.716 cv
410.594 346.994 410.43 346.27 410.266 345.539 cv
410.137 344.766 409.988 344.004 409.808 343.278 cv
409.72 342.914 409.618 342.564 409.517 342.215 cv
409.43 341.849 409.333 341.493 409.226 341.152 cv
409.01 340.469 408.75 339.841 408.431 339.287 cv
407.249 336.991 404.605 334.597 402.327 332.523 cv
401.169 331.517 400.097 330.623 399.307 329.996 cv
398.515 329.368 398.007 329 398.007 329 cv
398.007 329 397.86 329.578 397.676 330.542 cv
397.493 331.507 397.26 332.855 397.156 334.405 cv
396.869 337.492 397.173 341.459 398.723 344.459 cv
399.399 345.668 400.453 346.89 401.689 348 cv
317.828 348 li
318.319 347.604 318.898 347.113 319.485 346.553 cv
320.993 345.121 322.538 343.255 322.68 341.654 cv
322.75 339.998 321.459 337.884 320.147 336.27 cv
318.836 334.647 317.507 333.5 317.507 333.5 cv
317.507 333.5 316.088 334.592 314.653 336.032 cv
314.411 336.276 314.171 336.532 313.935 336.793 cv
313.656 336.204 313.39 335.675 313.167 335.245 cv
312.756 334.47 312.507 334 312.507 334 cv
312.507 334 312.103 334.325 311.48 334.915 cv
310.865 335.501 310.039 336.346 309.196 337.332 cv
308.591 338.042 307.975 338.811 307.407 339.605 cv
307.393 339.582 li
306.228 337.809 305.007 336.5 305.007 336.5 cv
305.007 336.5 304.78 336.65 304.416 336.912 cv
304.487 334.988 304.303 332.86 304.156 330.931 cv
303.999 329.435 303.856 328.085 303.734 327.1 cv
303.593 326.103 303.507 325.5 303.507 325.5 cv
303.507 325.5 303.001 325.792 302.195 326.332 cv
301.39 326.874 300.268 327.658 299.129 328.691 cv
298.014 329.641 296.877 330.835 295.888 332.162 cv
295.291 330.09 294.556 328.005 293.802 326.13 cv
293.016 324.188 292.204 322.511 291.574 321.342 cv
290.927 320.171 290.507 319.5 290.507 319.5 cv
290.507 319.5 290.264 320.212 289.853 321.411 cv
289.451 322.6 288.886 324.244 288.294 326.144 cv
287.116 329.928 285.841 334.875 286.206 339.413 cv
286.244 339.912 286.312 340.432 286.406 340.966 cv
285.933 340.596 285.443 340.245 284.952 339.929 cv
283.955 339.262 282.918 338.771 282.193 338.461 cv
281.464 338.149 281.007 338 281.007 338 cv
281.007 338 280.869 338.449 280.639 339.195 cv
280.439 339.889 280.161 340.858 279.842 341.964 cv
279.333 343.839 278.824 346.109 279.232 348 cv
241.126 348 li
241.205 347.469 241.26 346.95 241.258 346.462 cv
241.3 345.178 240.915 343.698 240.51 342.265 cv
240.294 341.541 240.035 340.806 239.753 340.081 cv
239.509 339.368 239.245 338.662 238.975 337.983 cv
238.401 336.618 237.978 335.399 237.609 334.485 cv
237.234 333.559 237.007 333 237.007 333 cv
237.007 333 236.587 333.386 235.934 334.092 cv
235.301 334.798 234.339 335.832 233.537 337.126 cv
231.776 339.706 230.289 343.313 230.258 346.457 cv
230.26 346.951 230.323 347.471 230.411 348 cv
228.912 348 li
228.784 347.167 228.605 346.367 228.326 345.678 cv
227.346 343.141 224.877 340.354 222.496 338.278 cv
221.349 337.244 220.182 336.421 219.357 335.863 cv
218.528 335.304 218.007 335 218.007 335 cv
218.007 335 217.903 335.59 217.775 336.537 cv
217.64 337.491 217.513 338.759 217.354 340.236 cv
217.146 342.6 217.021 345.465 217.586 348 cv
194.785 348 li
195.222 347.359 195.566 346.699 195.711 346.07 cv
196.181 344.106 195.268 341.522 194.205 339.531 cv
193.154 337.526 192.007 336 192.007 336 cv
192.007 336 190.45 337.016 188.804 338.487 cv
187.161 339.966 185.426 341.799 185.017 343.491 cv
184.951 343.786 184.934 344.101 184.939 344.429 cv
184.483 343.591 183.865 342.735 183.274 341.951 cv
182.01 340.305 181.007 339 181.007 339 cv
181.007 339 180.623 339.169 180.026 339.516 cv
179.425 339.862 178.608 340.416 177.839 341.1 cv
177.463 341.428 177.094 341.787 176.746 342.166 cv
176.516 341.418 176.238 340.72 175.891 340.11 cv
174.686 337.786 171.924 335.623 169.53 333.865 cv
167.123 332.143 165.007 331 165.007 331 cv
165.007 331 163.372 340.07 166.243 345.393 cv
166.743 346.276 167.489 347.158 168.352 348 cv
68.8563 348 li
69.0897 347.513 69.3162 347.02 69.5264 346.519 cv
70.2807 344.766 70.7074 343.067 70.8615 341.472 cv
71.1053 338.374 69.9396 334.574 68.9491 331.541 cv
68.4143 329.983 67.9441 328.613 67.6072 327.632 cv
67.233 326.614 67.0072 326 67.0072 326 cv
67.0072 326 66.5839 326.451 65.9267 327.26 cv
65.2852 328.066 64.3333 329.251 63.5116 330.68 cv
61.7475 333.565 60.1467 337.357 59.8928 340.646 cv
59.7567 342.042 60.0133 343.736 60.3172 345.365 cv
60.4781 346.189 60.6811 347.03 60.9071 347.864 cv
60.9416 348 li
55.3522 348 li
55.3621 347.807 55.3684 347.624 55.379 347.429 cv
55.9028 346.612 56.9144 344.981 57.9509 343 cv
59.4329 340.133 60.9569 336.698 61.0497 333.718 cv
61.1434 330.734 59.8835 327.013 58.5993 324.085 cv
57.315 321.153 56.0071 319 56.0071 319 cv
56.0071 319 54.5688 321.031 53.1059 323.816 cv
52.3824 325.196 51.6547 326.757 51.0905 328.363 cv
50.9504 328.112 50.81 327.858 50.671 327.615 cv
48.7836 324.355 47.0071 322 47.0071 322 cv
47.0071 322 46.0428 324.639 45.1988 328.212 cv
44.3444 331.776 43.6539 336.384 44.4025 340.351 cv
44.8858 342.745 46.157 345.513 47.7443 348 cv
44.7666 348 li
44.7119 347.773 li
44.5292 347.034 44.2885 346.07 44.07 344.987 cv
43.5761 342.905 43.1336 340.505 41.976 339.303 cv
40.8337 338.068 38.3727 337.326 36.157 336.764 cv
33.9421 336.227 32.0071 336 32.0071 336 cv
32.0071 336 31.7302 337.863 31.817 340.145 cv
31.8352 340.729 31.885 341.343 31.9729 341.963 cv
31.1564 343.674 30.1903 346.159 30.3755 348 cv
0 348 li
0 480 li
900 480 li
.807843 .901961 .247059 rgb
f
900 480 mo
900 357.745 li
0 357.745 li
0 480 li
900 480 li
.27451 .337255 .129412 rgb
f
64.4482 480 mo
0 480 li
0 357.745 li
34.5362 357.745 li
41.8987 378.491 50.6852 398.439 61.0508 417.445 cv
59.0967 429.701 58.4254 441.647 59.1075 452.635 cv
59.7225 462.731 61.4808 472.012 64.4482 480 cv
.32549 .4 .14902 rgb
f
350.739 393.631 mo
314.469 393.629 280.94 377.291 249.39 357.745 cv
398.328 357.745 li
390.357 375.235 381.472 391.213 363.007 393 cv
358.881 393.427 354.795 393.631 350.739 393.631 cv
f
496.667 382.471 mo
490.956 382.47 485.076 381.699 479.007 380 cv
467.959 376.317 459.404 367.926 452.61 357.745 cv
555.892 357.745 li
537.636 371.357 518.354 382.472 496.667 382.471 cv
f
464.369 480 mo
273.708 480 li
271.198 479.06 268.691 478.096 266.195 477.113 cv
266.206 476.886 266.212 476.66 266.212 476.436 cv
266.212 460.957 241.606 438.228 241.606 438.228 cv
241.606 438.228 231.257 447.211 223.983 458.122 cv
215.779 453.967 207.669 449.583 199.678 444.995 cv
202.124 438.459 202.385 432.681 200.493 427.321 cv
200.454 427.212 200.415 427.103 200.375 426.995 cv
200.362 426.959 200.349 426.923 200.335 426.887 cv
197.66 419.648 191.301 412.516 183.387 403.555 cv
180.19 399.87 176.732 395.884 173.126 391.614 cv
172.848 391.275 172.569 390.932 172.289 390.588 cv
171.482 389.648 170.669 388.686 169.853 387.705 cv
169.429 387.196 169.003 386.681 168.578 386.164 cv
161.415 377.443 153.945 367.384 146.602 357.745 cv
158.848 357.745 li
192.3 391.675 240.049 406.83 285.992 414.254 cv
314.753 418.901 343.981 420.773 373.335 420.772 cv
423.147 420.772 473.301 415.378 522.007 409 cv
573.621 402.241 621.451 384.141 664.586 357.745 cv
683.697 357.745 li
664.604 379.015 644.622 399.892 623.406 418.973 cv
619.842 417.467 615.66 416.602 610.808 416.602 cv
610.186 416.602 609.557 416.616 608.913 416.645 cv
580.358 417.924 564.41 440.188 566.169 458.807 cv
562.222 452.39 550.836 447.23 541.646 446.288 cv
540.169 446.137 538.772 446.065 537.447 446.065 cv
523.973 446.065 517.991 453.541 510.838 461.194 cv
508.886 452.668 488.673 442.35 477.726 442.35 cv
477.656 442.35 477.589 442.351 477.521 442.352 cv
467.212 442.475 458.427 449.45 457.26 456.587 cv
455.832 465.328 458.955 472.941 464.369 480 cv
f
900 480 mo
831.604 480 li
847.262 440.608 858.071 399.585 861.727 357.745 cv
900 357.745 li
900 480 li
f
323.077 73.6979 mo
319.75 73.6979 316.775 75.0622 314.785 77.2079 cv
312.861 75.9365 310.395 75.0248 307.637 74.6339 cv
307.797 73.8918 307.882 73.1231 307.882 72.3353 cv
307.882 66.1262 302.654 61.0927 296.205 61.0927 cv
289.756 61.0927 284.528 66.1262 284.528 72.3353 cv
284.528 72.7258 284.549 73.1115 284.589 73.4916 cv
282.892 72.7579 280.913 72.3353 278.799 72.3353 cv
278.131 72.3353 277.477 72.3798 276.84 72.4605 cv
275.973 70.0104 273.561 68.247 270.72 68.247 cv
267.149 68.247 264.254 71.0307 264.254 74.4645 cv
264.254 74.597 264.26 74.728 264.268 74.8583 cv
263.32 74.5743 262.312 74.4203 261.265 74.4203 cv
258.787 74.4203 256.522 75.2812 254.775 76.7033 cv
253.95 75.887 252.938 75.3998 251.84 75.3998 cv
249.076 75.3998 246.836 78.4509 246.836 82.2143 cv
245.226 80.1197 238.81 81.9975 231.273 83.0668 cv
224.103 84.0842 215.854 84.5999 215.854 84.5999 cv
371.113 84.5999 li
371.113 84.5999 347.824 82.6694 332.937 79.4554 cv
331.221 76.058 327.453 73.6979 323.077 73.6979 cv
cp
1 1 1 rgb
f
274.819 65.5217 mo
274.391 67.9064 277.817 69.9505 280.245 68.5878 cv
282.672 67.225 282.101 64.8403 280.245 62.4555 cv
280.245 62.4555 275.248 63.1368 274.819 65.5217 cv
cp
f
312.369 67.7276 mo
309.085 68.92 314.796 74.0302 317.223 72.5939 cv
319.65 71.1577 315.652 66.5352 312.369 67.7276 cv
cp
f
730.131 111.832 mo
730.254 111.352 730.322 110.858 730.322 110.353 cv
730.322 105.807 730.541 99.1438 724.142 99.1438 cv
719.214 99.1438 709.599 104.308 707.924 107.389 cv
705.899 107.199 703.735 107.094 701.483 107.094 cv
698.425 107.094 695.526 107.285 692.924 107.627 cv
692.265 103.552 686.09 100.358 678.566 100.358 cv
676.659 100.358 674.84 100.566 673.173 100.938 cv
671.773 90.4275 658.012 86.297 649.197 86.297 cv
635.823 86.297 632.733 91.9097 637.867 104.607 cv
638.204 105.442 637.907 106.297 637.981 107.122 cv
637.441 107.104 636.893 107.094 636.338 107.094 cv
634.363 107.094 632.479 107.213 630.753 107.429 cv
627.943 105.569 623.248 104.35 617.927 104.35 cv
615.94 104.35 614.043 104.521 612.295 104.831 cv
609.196 97.4596 607.241 92.6581 593.079 94.03 cv
579.971 95.3 565.013 100.271 565.013 110.331 cv
565.013 110.687 565.03 111.039 565.057 111.389 cv
562.57 109.773 558.686 108.731 554.317 108.731 cv
546.811 108.731 538.581 113.862 532.164 114.521 cv
525.747 115.18 500.428 116.606 500.64 117.088 cv
754.259 117.088 li
782.708 116.959 li
756.328 116.959 746.314 111.467 736.501 111.467 cv
734.256 111.467 732.109 111.597 730.131 111.832 cv
cp
f
702.19 97.9121 mo
699.101 96.5232 694.916 96.2971 692.44 96.7683 cv
690.511 97.1356 689.233 97.9839 689.233 98.9521 cv
689.233 100.301 691.785 102.171 696.542 102.756 cv
705.043 103.801 708.095 100.567 702.19 97.9121 cv
cp
f
187.628 464.878 mo
200.014 449.105 204.189 437.285 200.375 426.995 cv
196.569 416.553 185.077 406.351 172.289 390.588 cv
159.349 375.52 145.112 354.89 132.284 339.631 cv
119.161 324.35 108.565 320.192 96.4747 331.769 cv
84.828 342.812 71.6864 369.59 63.7151 403.866 cv
57.1181 432.203 57.09 460.19 64.4789 480 cv
173.597 480 li
179.024 474.864 183.742 469.672 187.628 464.878 cv
.109804 .317647 .207843 rgb
f
64.4789 480 mo
64.4482 480 li
61.4808 472.012 59.7225 462.731 59.1075 452.635 cv
59.7347 462.739 61.5069 472.032 64.4789 480 cv
.278431 .337255 .145098 rgb
f
63.7057 403.907 mo
63.7088 403.893 63.7119 403.88 63.7151 403.866 cv
64.8975 398.592 66.2414 393.471 67.6985 388.552 cv
67.6962 388.622 67.694 388.691 67.6918 388.762 cv
66.2623 393.603 64.9285 398.649 63.7151 403.866 cv
63.7118 403.88 63.7089 403.893 63.7057 403.907 cv
.235294 .282353 .12549 rgb
f
183.387 403.555 mo
180.175 399.919 176.707 395.982 173.126 391.614 cv
176.732 395.884 180.19 399.87 183.387 403.555 cv
169.853 387.705 mo
169.428 387.196 169.004 386.683 168.578 386.164 cv
169.003 386.681 169.429 387.196 169.853 387.705 cv
.278431 .337255 .145098 rgb
f
169.628 480 mo
64.4789 480 li
64.4789 480 li
61.5069 472.032 59.7347 462.739 59.1075 452.635 cv
58.1952 437.658 59.7993 420.889 63.7057 403.907 cv
63.7089 403.893 63.7118 403.88 63.7151 403.866 cv
64.9285 398.649 66.2623 393.603 67.6918 388.762 cv
67.2269 403.63 68.8247 418.281 71.0465 430.847 cv
74.0703 448.597 83.6546 462.699 97.0143 468.733 cv
102.484 471.335 108.595 472.563 114.969 472.563 cv
124.033 472.562 133.626 470.078 142.639 465.535 cv
156.166 458.16 165.665 449.456 170.825 441.126 cv
182.676 419.561 175.023 406.325 159.791 377.224 cv
158.804 375.28 157.788 373.258 156.749 371.161 cv
160.712 376.447 164.699 381.455 168.578 386.164 cv
169.004 386.683 169.428 387.196 169.853 387.705 cv
170.955 389.033 172.047 390.336 173.126 391.614 cv
176.707 395.982 180.175 399.919 183.387 403.555 cv
186.518 407.165 189.397 410.484 191.915 413.493 cv
191.915 413.493 li
191.915 413.493 li
194.497 417.391 196.542 420.95 197.877 424.499 cv
201.126 433.139 200.169 441.725 192.522 455.024 cv
188.542 462.001 180.443 471.298 169.628 480 cv
.0941176 .266667 .2 rgb
f
191.34 459.923 mo
192.018 458.968 192.662 458.03 193.274 457.105 cv
192.662 458.03 192.018 458.968 191.34 459.923 cv
.254902 .309804 .12549 rgb
f
200.493 427.321 mo
200.454 427.212 200.415 427.104 200.375 426.995 cv
200.362 426.959 200.349 426.923 200.335 426.887 cv
200.349 426.923 200.362 426.959 200.375 426.995 cv
200.415 427.103 200.454 427.212 200.493 427.321 cv
.301961 .368627 .145098 rgb
f
173.597 480 mo
169.629 480 li
180.443 471.298 188.542 462.001 192.522 455.024 cv
200.17 441.725 201.126 433.139 197.877 424.499 cv
196.542 420.95 194.497 417.391 191.915 413.493 cv
195.729 418.196 198.682 422.424 200.335 426.887 cv
200.349 426.923 200.362 426.959 200.375 426.995 cv
200.415 427.104 200.454 427.212 200.493 427.321 cv
203.473 435.766 201.109 445.252 193.274 457.105 cv
192.662 458.03 192.018 458.968 191.34 459.923 cv
190.198 461.531 188.96 463.182 187.628 464.878 cv
183.742 469.672 179.024 474.864 173.597 480 cv
.101961 .290196 .203922 rgb
f
197.877 424.499 mo
196.542 420.95 194.497 417.391 191.915 413.493 cv
191.915 413.493 li
194.497 417.391 196.542 420.95 197.877 424.499 cv
.0862745 .243137 .196078 rgb
f
153.578 475.459 mo
154.339 474.643 155.046 473.832 155.722 473.032 cv
156.237 472.423 156.727 471.822 157.195 471.228 cv
159.003 468.929 160.466 466.758 161.598 464.84 cv
162.869 464.798 164.419 464.538 165.879 464.026 cv
167.66 463.428 169.18 462.479 170.031 461.739 cv
170.264 461.56 170.422 461.376 170.582 461.226 cv
170.746 461.075 170.858 460.939 170.948 460.827 cv
171.132 460.605 171.237 460.479 171.235 460.48 cv
171.235 460.48 171.099 460.598 170.862 460.807 cv
170.637 461.015 170.257 461.301 169.776 461.617 cv
168.815 462.249 167.31 462.944 165.774 463.261 cv
164.52 463.54 163.311 463.578 162.369 463.478 cv
162.642 462.975 162.895 462.491 163.121 462.034 cv
163.983 460.299 164.507 458.895 164.819 457.926 cv
164.986 457.44 165.079 457.064 165.151 456.808 cv
165.22 456.552 165.256 456.417 165.257 456.416 cv
165.257 456.416 165.202 456.552 165.096 456.81 cv
164.989 457.067 164.845 457.444 164.61 457.929 cv
164.167 458.897 163.458 460.292 162.384 461.998 cv
162.115 462.426 161.821 462.875 161.509 463.341 cv
161.188 463.817 160.839 464.312 160.472 464.823 cv
159.765 465.801 158.972 466.836 158.09 467.914 cv
157.511 468.619 156.879 469.344 156.224 470.077 cv
155.211 468.748 154.267 467.077 153.603 465.284 cv
152.699 462.968 152.183 460.512 151.861 458.665 cv
151.544 456.814 151.401 455.57 151.401 455.572 cv
151.401 455.572 151.389 456.832 151.47 458.739 cv
151.557 460.641 151.75 463.198 152.344 465.693 cv
152.833 467.922 153.721 470.057 154.744 471.683 cv
153.762 472.716 152.721 473.76 151.607 474.797 cv
150.354 475.961 149.018 477.107 147.637 478.215 cv
146.853 478.824 146.059 479.42 145.255 480 cv
148.884 480 li
149.162 479.757 149.448 479.517 149.722 479.273 cv
151.094 478.01 152.391 476.733 153.578 475.459 cv
cp
.203922 .196078 .215686 rgb
f
135.132 472.933 mo
134.981 471.694 134.829 470.466 134.676 469.243 cv
133.532 460.134 132.373 451.459 131.424 443.975 cv
130.513 437.093 129.836 431.222 129.38 427.084 cv
128.919 422.944 128.673 420.547 128.673 420.549 cv
128.681 420.534 129.074 430.084 129.935 444.051 cv
129.993 445.11 130.056 446.204 130.117 447.311 cv
129.889 447.249 li
129.675 447.186 129.456 447.087 129.205 446.998 cv
128.245 446.583 127.102 445.773 126.233 444.712 cv
125.334 443.673 124.669 442.462 124.228 441.536 cv
123.79 440.606 123.558 439.961 123.558 439.961 cv
123.558 439.961 123.643 440.625 123.875 441.624 cv
124.111 442.62 124.498 443.96 125.206 445.242 cv
125.877 446.534 126.962 447.727 128.084 448.455 cv
128.375 448.623 128.638 448.794 128.904 448.918 cv
129.175 449.037 129.417 449.143 129.629 449.234 cv
129.877 449.314 130.079 449.376 130.235 449.422 cv
130.57 455.47 130.922 462.137 131.204 469.129 cv
131.153 469.125 li
129.067 468.863 126.756 468.266 124.537 467.22 cv
124.158 467.045 123.782 466.845 123.41 466.647 cv
122.811 466.329 122.221 465.987 121.641 465.616 cv
120.455 464.858 119.31 464 118.24 463.059 cv
118.146 462.972 li
118.888 461.678 119.423 460.172 119.656 458.716 cv
120.01 456.794 119.997 454.944 119.98 453.571 cv
119.951 452.198 119.905 451.295 119.905 451.295 cv
119.905 451.295 119.784 452.196 119.595 453.565 cv
119.382 454.928 119.072 456.764 118.431 458.55 cv
118.049 459.705 117.476 460.809 116.831 461.743 cv
113.662 458.61 111.232 454.895 109.6 451.857 cv
108.66 450.119 107.976 448.603 107.516 447.529 cv
107.057 446.454 106.817 445.825 106.818 445.827 cv
106.817 445.826 106.984 446.475 107.319 447.595 cv
107.653 448.716 108.161 450.307 108.892 452.16 cv
110.215 455.522 112.291 459.757 115.302 463.481 cv
115.604 463.856 115.91 464.228 116.229 464.592 cv
116.352 464.733 116.489 464.867 116.615 465.005 cv
117.489 465.957 118.426 466.855 119.429 467.679 cv
118.121 468.721 116.501 469.795 114.724 470.668 cv
112.255 471.94 109.584 472.846 107.564 473.378 cv
106.553 473.646 105.701 473.833 105.106 473.941 cv
104.509 474.052 104.168 474.114 104.17 474.114 cv
104.17 474.114 104.509 474.088 105.108 474.04 cv
105.707 473.996 106.566 473.896 107.603 473.728 cv
109.673 473.397 112.471 472.74 115.194 471.636 cv
117.221 470.855 119.169 469.8 120.776 468.722 cv
121.273 469.076 121.778 469.415 122.298 469.729 cv
124.552 471.112 127.062 472.039 129.483 472.528 cv
130.112 472.652 130.735 472.745 131.344 472.811 cv
131.429 475.178 131.501 477.578 131.56 480 cv
135.963 480 li
135.694 477.626 135.418 475.265 135.132 472.933 cv
cp
f
107.686 393.685 mo
106.908 393.685 106.13 393.664 105.352 393.624 cv
87.697 392.8 87.91 371.198 95.3121 356.478 cv
100.276 346.544 106.374 337.336 113.534 337.336 cv
115.467 337.336 117.478 338.008 119.564 339.518 cv
120.298 340.013 121.045 340.596 121.814 341.269 cv
129.541 348.754 139.356 365.203 137.857 374.749 cv
135.906 386.883 121.915 393.685 107.686 393.685 cv
.141176 .411765 .266667 rgb
f
147.386 390.059 mo
147.467 389.821 li
147.467 389.821 li
147.467 389.821 li
147.491 389.771 147.507 389.739 147.509 389.739 cv
147.514 389.739 147.482 389.825 147.386 390.059 cv
f
147.2 390.437 mo
147.196 390.437 147.218 390.383 147.251 390.305 cv
147.251 390.305 li
147.251 390.305 li
147.386 390.059 li
147.255 390.337 147.204 390.437 147.2 390.437 cv
f
147.251 390.305 mo
147.312 390.162 147.41 389.941 147.467 389.821 cv
147.386 390.059 li
147.251 390.305 li
f
138.856 394.442 mo
137.53 394.442 136.128 394.266 134.698 393.906 cv
136.749 389.75 137.201 384.543 139.218 380.926 cv
140.87 378.33 142.609 376.199 143.681 373.371 cv
146.865 379.62 148.925 385.84 147.467 389.821 cv
147.467 389.821 li
147.467 389.821 li
147.41 389.941 147.312 390.162 147.251 390.305 cv
147.251 390.305 li
147.251 390.305 li
145.837 392.994 142.661 394.442 138.856 394.442 cv
f
241.606 438.228 mo
241.606 438.228 217.001 459.585 217.001 476.436 cv
217.001 477.576 217.162 478.772 217.432 480 cv
265.809 480 li
266.061 478.781 266.212 477.587 266.212 476.436 cv
266.212 460.957 241.606 438.228 241.606 438.228 cv
.176471 .290196 .2 rgb
f
231.007 478 mo
231.007 478 229.584 476.057 228.356 473.64 cv
227.124 471.231 226.1 468.326 226.782 466.693 cv
227.475 465.025 230.168 463.927 232.723 463.159 cv
235.274 462.401 237.674 462 237.674 462 cv
237.674 462 239.112 463.907 240.348 466.305 cv
241.588 468.694 242.613 471.598 241.899 473.307 cv
241.262 474.839 238.571 475.935 236.002 476.736 cv
233.437 477.527 231.007 478 231.007 478 cv
.243137 .4 .258824 rgb
f
801.078 412.649 mo
801.078 412.649 776.473 442.291 776.473 465.679 cv
776.473 470.052 777.596 474.97 779.354 480 cv
822.929 480 li
824.612 475.041 825.683 470.142 825.683 465.679 cv
825.683 444.195 801.078 412.649 801.078 412.649 cv
.176471 .290196 .2 rgb
f
744.299 480 mo
792.348 480 li
788.591 464.184 768.341 443.333 768.341 443.333 cv
768.341 443.333 747.952 463.713 744.299 480 cv
f
757.674 478.667 mo
757.674 478.667 757.391 478.033 756.924 476.985 cv
756.506 476.015 755.923 474.661 755.261 473.126 cv
754.039 470.227 752.804 466.608 753.538 463.95 cv
753.734 463.264 754.074 462.561 754.507 461.878 cv
754.935 461.198 755.468 460.522 756.123 459.841 cv
756.759 459.172 757.454 458.541 758.165 457.964 cv
758.914 457.377 759.718 456.844 760.471 456.385 cv
761.939 455.45 763.517 454.853 764.59 454.497 cv
765.674 454.139 766.34 454 766.34 454 cv
766.34 454 766.519 454.684 766.812 455.807 cv
767.097 456.893 767.463 458.264 767.989 459.786 cv
768.896 462.696 770.114 466.051 769.45 468.316 cv
768.713 470.993 765.897 473.78 763.074 475.783 cv
761.726 476.76 760.293 477.507 759.308 477.972 cv
758.307 478.442 757.674 478.667 757.674 478.667 cv
.243137 .4 .258824 rgb
f
789.029 471.316 mo
788.988 471.234 788.946 471.152 788.905 471.07 cv
788.774 470.73 788.528 470.074 788.221 469.192 cv
787.758 467.861 787.168 466.042 786.606 463.963 cv
785.477 459.857 784.627 454.668 785.682 450.785 cv
786.813 446.888 790.254 442.591 793.769 439.732 cv
795.423 438.268 797.164 437.19 798.366 436.453 cv
799.581 435.719 800.34 435.333 800.34 435.333 cv
800.34 435.333 800.46 436.203 800.657 437.637 cv
800.842 439.046 801.027 440.912 801.346 443 cv
801.806 447.091 802.551 451.885 801.584 455.189 cv
800.546 459.011 797.442 463.041 794.558 466.177 cv
793.126 467.725 791.715 469.031 790.694 469.926 cv
789.777 470.73 789.151 471.221 789.029 471.316 cv
f
789.007 471.333 mo
789.007 471.333 788.971 471.242 788.905 471.07 cv
788.946 471.152 788.988 471.234 789.029 471.316 cv
789.015 471.328 789.007 471.333 789.007 471.333 cv
f
662.278 465.977 mo
659.28 452.978 653.994 450.231 638.67 457.173 cv
643.901 441.767 636.843 415.394 608.913 416.645 cv
580.358 417.924 564.41 440.188 566.169 458.807 cv
562.222 452.39 550.836 447.23 541.646 446.288 cv
525.138 444.597 518.694 452.789 510.838 461.194 cv
508.873 452.614 488.418 442.221 477.521 442.352 cv
467.212 442.475 458.427 449.45 457.26 456.587 cv
455.832 465.328 458.955 472.941 464.369 480 cv
683.774 480 li
684.641 467.612 679.393 460.708 662.278 465.977 cv
.109804 .317647 .207843 rgb
f
593.139 454.266 mo
582.694 454.265 581.518 444.713 589.197 435.527 cv
592.596 431.462 602.983 426.344 610.597 426.344 cv
616.004 426.344 620.014 428.926 619.129 436.296 cv
618.12 444.696 605.611 451.931 598.42 453.598 cv
596.453 454.054 594.693 454.266 593.139 454.266 cv
.14902 .435294 .266667 rgb
f
530.143 466.761 mo
522.822 466.76 520.692 458.557 528.745 452.973 cv
530.828 451.529 532.949 450.92 534.887 450.92 cv
542.494 450.92 547.264 460.314 535.706 465.44 cv
533.633 466.36 531.761 466.761 530.143 466.761 cv
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 /5 /6 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 17.0.0
%%For: (Krol) ()
%%Title: (bg02.eps)
%%CreationDate: 7/31/2016 10:50 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6D6G!NE[CKdJH!IX`B\c^qbH7"B('2ZqaQV_p=ST;B=o&i"Ic(>RLr,BP3hl@qMfP?+uAPqQP.iC#2XL/lkZ4$<E<.#An8QE
%3;FqOEqf#![pOUWp@ie"rpS`LNm"VI&!q8UQfI\`ro?lSdoX;4rU'E>Rm[1.JeRtSmHfUPYJ,MXqX&KVrVkWRfAD%(s6f2sn%\hG
%jo/Un^:jI+bMULX]Y+/LYJ:)5h*597^4,nCJ''XXIpTj6n^Z6p?bCack2gfRH?2oM^>Qt[qlO*L%H-]>[kIaYNJN&XqRc3l6ddm]
%qqF?IgM_qh_""K*p=n36s6AA-hS9!VX*8L^qk)ltgHVmqo^?+9o2>TS)Z.c*aRLeVa32BdIsCeffAGgU0C(1blZ[i)5nj:tnlO^6
%nh%&FEhgG1YX<no4p?E53oL%hBi"b`^W0!YAA-;rs7HK^&bUg'>]PsVNcm^5EW\j]`D5D%rlsafhgGCn]@Zss\K!R!c!n\Bp)eah
%HiorWa3B`"^FlMAe9^BH\/Fs;nAEOV+8PRoIJ*H/IrkE]Y?ubSqRq=#g\9V(m]6@X^)7-/NtD2thgYUulh>o+p8dZCc"Ur\^VsQo
%qssF3nt`=G(LOr<fA.L4s(c9Fc-,jrJ,PoHc$*NEO&,;890`@3rq#l&ro3%S]Z._pG*B];k4RKDH1t[ugL']F/p3rt?9q+P]F=Uj
%p9hKE>8c/\.sdt(!S;\A%3Of;AL.9*qlbJKe_Asqq77jo2Fd`5rE!@/+kkqPli6GdDYj),_uJV?.aS(LGH]nMf0fJqr\(asIbak_
%mr7I1[pS",H\8Nk/UlQu0RkT/i9PU%[sq[Jpi"U!pYXVu;"2GRIO>qZobJ!drn2ePJ*UJ>p"/*E5Q9@5GMdoAkAUCZh<1F/lLrDF
%J,fB9?XCMDmbN6cY$YN7lL4b.r:naaY;d+IJ+N[$.qqA"cZ<u1IeCsXr^_\4SF9floO$]`rfmH^"9/0Pf?5][Ks;Oml/UNJHN!NK
%DmkCujQ5,L0E:_,qenZqn\>)"jkH-j0DpUYp0W4?:\$.ljcut!QgCK9Q'(Zt]Hgh%F09EN"".pboMN)Dq;"8mMLGHsbAV%ZqX^`Y
%.f>Y\J+kU7rr1a*?[_f`2RlEBh`nDjhn=L=p93=f2rB,bm6=qVk2!YQf8Iuhm%;j!IfGsFo<7:'oAo(P+TM5?\+0?^?[r%)n)(nX
%jr_?aoj%C?r;4.S#Hn$(;=o`arOG"]s(U?VknX5emc/r`n]S+(q0cXSs55oPqra='^%t5r07X$$jnl5fs2\H`kP^1>hTC.kq;(dP
%IJ8&9YBOp!JXL]Wh*8XO#%F+u@QSY=>J?1&@UB+arThcobEoiMqZ?;#mpCP>Q)lXR\bt`2hnFO77Pt/69dHcOQBn,/b6f%=G@,gu
%fminsZiB(WcUs9DQ;k.0pf$9fEca<r*-ZGYbOJCMbDU\r:h*4?A3$pG<dVNFj'IbdqP)(5gL<f-2u0B&jg]/OmCk`ja7c7@kWt6Y
%ZSYuMrnR4ZIbu7DMuI/g3KbAlD&[n^EBEU.h<1F/8+op]kr.@o#<?,O,DR7[auN*bEmGufk.CPQ+7kD2n;6WkG`(8/GO9ZfY=H;)
%r3Q784pUekYePhhQ/;4%H5bJcB)R,@O5jUiZh4n.HPhh(`GN,E[u!72pj^_!]Tud4rN12/<k9nr6ocpU*k017+ig>t%s$IK+jVU>
%h%'D4jcHVRkpG;B4Pl1Njj$^5]Vf6ZG\?tPNX$X"EnncV.gI!.+++(a5kpT7,[&uOP%T[M$:d>Yc/.:!mJC2$X7EOe?+Pr<iU44(
%EVk"XE-m(]GC(iGlaMl"PPHJTcg]$4hm)(0r@QUL_#?L&?[(j6B3u!mJK>dd*ZjE;hoko2Q&"b/aVQ?\Eftg2d#Rrh^<V@iX#k\Z
%mHG#VH'I??a1WI:4J];:pepW[?=9^3*^u+5,KUOC"??r3O"W]s9H)AE%s$Is\<Gs=#<i`,nY:4!;7c@$GfVRc9K]$hJ]I;*TM+Wc
%^AQ(hGOIQ2Ngk@e>[Yh-I#-`VMts4i@8sKiDfR8sKj\`*>i8hBTc1j)QNghgIdr2"J+kP_SO+hd/&kD4Z>459##*be7h5&u([\^0
%8XJC2G7R>d\RPD;AX.Rk<`q_;V6&Z^]T3TocK-RR,D?h18i_b%&rkCOF@/J^8_f5eGbgd1M?4^!Af4rS?/3Vi\lY_:C1C>!:kYhO
%DbUO%W$3rR\19mGKq\uEWMi.J\O<:h5UH#XZ.KO(eke8$2c,Wj8uKhImo2GH5.@CCTe`;u+%;kiE?74DO6DJ@[GnEC'3tOkpbFo1
%Mkf!'lt'`ioM;h=i/e_L]\8"A=9!X2$^Ut5*O#L7TA`("LE99/GEL$>reCH,RVD\,GpW#?GusROL&W_Zo-f(JW.0C>LE8LYA?nDO
%EGpVG"/sUd-]7C/aq4#PHR7+Hn8O2$GeAO9^V@Oq^D.44jcrkLa7=YAhM:tq[)V.^_qk:Ih2eO";<:#>!E)MhJ-,ZHZ_+B%AM*+$
%=K7=f/Di5*pcE";50B8*0@E?.V*d^fPJL@3r2(+)dVO*Vm3nkWDb&NAGWLEtdc+6"IQY?sNr@;Al+#W2]6/oJG*TZRY93^b[-afi
%UMNGd(@sXf<@<8<YTP!m*Q=%R8$g*6eV@SRXW;UJmd8pSC%5UqU9.*k%X?VSk!FX:qI2VZrq\G'P=b6AH2T>iS+1^"n'H"=J*[Qe
%mp]YjKo?34LAkcG90Z^^b0c]uZ>L-i`Kc"?RhTFn5n'P"X?$WA@*M9h/QR@7$bBTbC=>i;,r*OTVpUk[A!nJW\Kj(*eloQ?r"$C:
%k:U,I(-]?X5q^E[D>CI`C<S!H(THn7Ohq`BM\HsU[;1ip![X&Ed`*<98DVT\l>^%(Slqpu=Df%@8m%@!S4Zq6X*WW6EN8A2IAcIo
%d<6gU'd'oc<S=Q?Y5Z>iZ(Inl5H(HWOqu75-`H9F,s;uXT1=7jW6ZIFR:E7%C%6KAqn*h2.H;5\HaP<EEHU&#3UWIYpK*,DM(@]d
%nG)Y%Mt=1hKTgG=hMEOZ%N1F"'0BeGE.[M<qr9tajGRu1^b;<j+qtp%9igo&(&gtZIB`gk*XE`HR5RI.<AD_c0U)!:&;iKX%3rK)
%Z^[$/!H^Uh_/<(\l6!Eg3&:[";)%#<V?[Ql3uT>YR_3#E%i`@5Ms][!8K,W7k-kb(/g%VDhJogd>g*PA.ej\H,T^NB\W[20a<K,E
%@4JQb-($Trh#)tJF7PXPA(m!!X5j3E\@Xe>ooKsVDrti;_rekLo9,YW7Ci!1c<aX5)&&JG_6LM>%;/$o`r+<)9GF]JeQ`3pOtF*r
%A?6%*VFEIn7_G/9l>qm:+52<!B!UR\dd67"L]4^G_C$.V3LmW48L*6Hn`j@s`1"qT++?s8g5dHmI>1+$:h(D4/sA_YknF*_PK!/A
%?1tT@dII,Q3j(V2;]<:%869P9f\CkAWoJs,=K4a<aMXl=<.Uu,H![T&UO8T*VgZ,,"^AZ4R3^*2g/tf4$F0!@aa?0K9\7>PG21cU
%rh^%hhHgO"C%63BE][7&_8D9es)s(g-Z6uhQ`.N<;M[=+^Z5!R?0-L)Jp[9SMRuo.@L,*hhgUkg+GR[%G].u*YVb)0\G_QM>)Ss^
%C%:VJhRu+Up%7osdd#9?[@Vkqn`8"p4dj_0h54,a_l;,cPA6J(Gr@#Bn^j-<ash!Hl/iOO)GH^#hY]Yko[>Gj(d7LJZ^Q>8B`0o^
%&$:ap3`(!*Kg1]S:ZFjWVfe,4Z8Bs,cr#juS"Q+JBV[`R+jiWVIlb!_,IJ!Q9Jap;H:9ZJLURkeJ$>S.%"&8f)0L84GZ/.C#r/<^
%6LbiHQANjo]EbtZ2YM\!,=D#-G9`]S+`A?cJSu"C1Ha"Qo`N+iO5gE,eI-,m^n>p_kW:L)Sf&"k%#e6sFkq4&`]X1FSK=DQ-NAF2
%LV)MXCNdt4j)ft;%iHS]acW/Xnct1q5,?0(Ujgh@5(#nZ+8WJGLE4h&a.GLYk)^?ClF`0Brn-4ccM3GnUBJsn8[M*\>31<.HfQr`
%RK[RB/0@tW74]M4486+&_K:lc&rjb]RVE^7VR8"<(21#g`kagRn5(0=?t#l3#:&*25^QCGVU\rK1eY!RFPrq5[2IA(j>pLSYYlF.
%4q\m4KC[kcEf]KeR!fZB6`H)L>,j?/VFS*_s%&'FCAdb]cbmYKbBI9nrNa>XocZ@GDF]$8a<*CaPCqT:dYH-jmA#`V%V`3J`+/`7
%+YE]7)*dfhkS?DZ%qG@+o[!P%>5SD\!gho/qEunM6p0n^<XI5Y\YZt@Y:3AAW4+%Q267S`P2IRah9tNuBmqX:B!(IsA4t29!QsR_
%9&)17Si=:C_YD#P`V#+%(==P1?#EH,7:Tu^\n1,mBN_d?AQ7!3V@efn1l_N<_tC*D*_sb>=Ij1G[A-K#k<mrNIc.`a5VaZM:*]_)
%I[Z&!p]LQm#95t0p&:WEO"L@7C@S)s52i+UCsf!pRPEB0Fl#I0m1a<d!/R`-1Xs&=c%m0!>,3RqB'L.:G.Yj@6WH"7`e2c]'$j5r
%6(O2Dd@V6(I`dBj\2>\_"8,r-;Pm:F6&EB#5Q^K[0`ocI+\@BR'3#>N!DEtY<Wp*:kdBB"g:?D:8;In=1ndl;Fd$JQrM*Oeo)bph
%>\!Q!pM]=(bWN/pI6FO<-"@!?fCH"dcY<-.cMl"pFh@Sa9,N."SiNCa=>4N1r88_>mX>#s,Cdo\/Ul2pp[r#,C%7tErO:;9QH"/o
%E@6ZQHVn+F(ZFo'j+DaU+d8V@'FYL**ZejJ+Gs8Cnj?s[nDXA,M35r:@:0][dDA3,\h[0>3$G#LL_1gtW:@]h1A&)L7KkqT\0hV8
%9dgd2-ON'BbAiO(f^Tr9kkP'3:*%;q33#>c*N;FNPn%D'*XQ>dB355!G;'X=PS4si<m&AW80>ep6`a><,P*ODAePNfkVadTm=Z*(
%n;tMA(2.B6%#M*a;.0V7/VqauA*Q%$C@+9[>D!2A9W/n48.It?'J*2m.^Y5K*?WEU?Y,C_9AUg\q[m.^i->19j$?_,LQ=Xe5N\%C
%5O,llKX771UrABYpYS`((B"0,7erfKq4gFTUIP%^/cJVBr)'6e;5=%dUO9WgY7gKJp4'pYn)s]qoDU?(*WR4\235`YP9Qb5P1E7a
%?c#ZdO3dac),.iDBb))/!-^fAP]1]"DO\,F')S(Sg]5$.8bo6<P#%u_s-mBEUl?#Q,m'Pug?G'lJ+IGNaFl#;\]C[f4:`Ngr!GVM
%Yp1duEK61:s4H;2eJ?9sj8PqsZR(S>ScAUak2o7$Bu3pf5"O'eM@[;]UYQP/1q8#2dB8N^!pLS^@Ssr?"S9/)VC"iK*rftZg&SPS
%:!`>a)^4h=SA3eBMpHI9_d;+Zp;/:+)CltK=o%R&lA!@uL@Vk6^&X_[':^C=Lcf1`,*#+Y3'QReB-ijY='a8fd6XLTNa,ZtQU;rZ
%o-el(nX7-SVo1bjHO>(6jZk8J1c8B(-\"EOSm]f>Xca3:+\?cgn$mW.aA9S'meX8^i7#E$:Ji80JbhV[aLirm958_bh%S^1YZ4]V
%7.B/IahBRTWLf8u'Bh9VH(=B&@nRE:X8VlL-?R.gT640[^L.DA1%_YXs28mVB_+Dk`arcSURBK<1nCZbbqPJm.R3nc]k1>5GVtp[
%eaU:>Rl'W<?n"eUW-.KNc9[9K$NkAD!p"=([>8oc4cS??el#;oFaI:kg,sGIRk<=X[F\`5rG:jY;^>[rh.H&^='`/pHJX#)V`]=8
%=mNb$Hi#th*R/knHc`tQrDoK`WRBPi9ntGA"IAJM]PDL%jaG!C*7D#ApHR_fpMpKuLIkZpPXg?fR)BGe'0'O0'cD.'(lIAJ+J3Ml
%GUtU"K=H.S/%h.p=ueWU9gQ!_flK"g"q,[i*i!Xr:CBXOe61XCSlWhZMcK0:Du/>F>]W@;K+Sr&^d%plo)FdU4R57a-tO)3I.@Uu
%\O.Qb^uGo/S3Xoi("3K'2($,uI_iHVW,&TEm6.iDJsC58dcWomFZs_*JX7_1Kj]uG"_eWZ[efbBXa[D((Pkc"`=Cs2OGsFgGRAuW
%?s^ii;>.B&_=9X]b]NC\erTB4"[T.j^+>JdKur;#-A<*H_+=Si1?G!ni'gN[.GVium9oK"8Q@$'BCDEF3IY.Nr+#sKf4tXZ3Y)?"
%h(b#?)87O.g7SNG@!LgbiL!gR?^auR-O*9T#!W[+\GKe)IV/&o//9o^,43!]%,,pu3-+I=G`iQRHPa();L@OZ2"X8P8Kl]V\`/g\
%WMXOW7qC^]W?LoLM??_lpe(rgmH(/1'MnbGp1h5X0r2LDT<(aC^OLD@UkTg>c(?huibdCr4A\\%7hql;k:,@\K:h2&?(ZCuQeJ)-
%b7b]N;mc6C0#BDd83atUQh90ofkL%-9X9!Z0"R!]1MRnreo,RtFaD=lLWlMd%/!(ZEodC1DY65DpWrX'p\Me,*rkY8o_8A7J,^T7
%rFbX*07S9CDu]dGI/,e+qCPJ34*e`12ip56hrQLd@dhoUlqKSm4?%fMQ7r6TmJH>n^3Tr<`g?/ojmj@M@f;(oGON6MYGT!d09cS)
%Mn>=ZrhmD)Z;,l=>Oi+"Dn+eVa8aBHrcd78.hDL'Iq9pa\Ztr/ju>[QO,R1$8(>tXVY*"05#u&STaF8UiH"b+QeL$d9r8J>%P^L-
%75Vh(([?pAkD[j9V2UlnCYM::jVtR-RQQ)@(\*<";AXhjPa`eao(%[)ol;:W3*f-%RuNr(DK;iWP/iRGW[`UH'9\lXduES:kgtf`
%USW3,nun%t2r61\RhE[FNa2kf_"I(aFEt+6>/!R&cE9uQEjmNBOer#>U36lq<-l8(H&QiU]1f#pMW.&gHPa@.CV,^_5?tKV*%"dh
%8Nq$K&B*)siMoTI&b@=#)o->E;-m!71,<m[O[h`&m#4n3s8#aS7_I##HQHr7IFF&X(?!-_HBU]<QVcbdf':l;Rh8Q.i#_YpF=N3H
%EKTs@cLPjFP&J1I/h>8\:*'a\mapDEP^k]YqTVl@]juDRZD`UFH;\OCM1ZpAZ0UK$=+$C^ls]I),H_Kc=(QUkrltuO`g7eHjUrmC
%*]V4rGsNr`9W3m)'Q5h*XPYUrS(a'U[hN`@LQ&bnmoL3APjA2imF3[/:_kfh;WZ)ZMQ:bRHt'ca7ULuEdOLQlc;tm9>VDG#D^PUS
%X/R)e:6jcRg)=6/F$^dtk.IKW*bi[qkZL+E\6oec0[&C=Q/'*DFH"^G(E&.:.`atHgeMb9jmjV!.`oKdk\a6&TO'!Q\gCPfY\pk+
%d4"2P=tk5^Jl-t[kBPfIkT#*!YMX8E4ut=T]QnR]<`B7F@rdZQR4g>:n0!iHig@Jt,Y@HZI(4Hbbb_t[_4Q1O3Rf49@6?#7Ynglg
%M%q&_I9a"2/:+Wto;@rb>s6bbn.b_YBH;Ab8Q:3KY;^*.ec@*EK+-e1+V9^HM*PYtaD>-ihbM1\R/#EM=ms!AEe3&mY&e<iM%Q1e
%2AC&7N.UGG-EugK>Os]?ph]0Zq:;>@]>)>brp<K`6iR!f=Yd^:rURSP?\0c[QB(-(r6(G4K&=??k$PiIpCCMVN-=a(g'k24s4r2'
%^qq<@V:5TjO\F1e@#N+9D*dJW78:0lp(^([-!>nK`Q;D%,8j5co-i?q?;_Ve1).[8O\(qg7J'jPi'.nBb;55i''il]=:g0"LCRG"
%:8Y!K<4)HM(j:X?k>JRLmD=[54c(F`PCW1+%*p6I9/C\FksQE9HK*>[Dc7haF^J4]<&>.6^jPDWI5iiThTZ^.+Ce2R$b2Cq]O+Ms
%DpD7c>bKMs.*O71NiTO;2+bNCrNt_fK25e9i)M+$?aGkDY^<K2:8umUW"iY+*'0#@c&QXAY9(rp][*pTX%0dn&m']>-.0_OEl@09
%KD&)TTq8dcqIJnZ$$3R!(hKh7f..1eK8mL13lTm7b]h4h.dH<?#crsD`Xp#hJ&no@9+cJt"BVLVBQ5SZ>ZIHHK'<"]?Gjji&9h8"
%AZCe69DstF6HftP%Z<c=pG#'ea;T'W.O[L!AVdSo_@,lXAUP/k8J[gNU9@lID5HKse)_GkN$;E\n7"1e"J[M-UWX#[eT.JPf82=S
%\[sDU#lO1@<Lac)\igR/GP,"./jl!_LYP5a>n4E_S$Ne>NoaId\7?(-%&55n&7sMnqpg)I9if5YP#qpe0jfpM_!Yd#\Q$;O]S=UG
%Vr8rb]'e\^]2#uFcLO0FG-2nRHLQX3m5LY&q#sln@]VL,7eR%Q[)a&I0.fQa-?LjM*CCa6VNmUI^iW[Uqdc6E0=/M>RdIW#DJ.S3
%[+uiCIT[,:h-FP>XS\F$Y-VHZZb5&!SZA[C?D@74q@Z$/*"F`C8rM2"Y_Vm?_Vr;>YO[ss<"#GlAJo(jK6[&EKgcA,RAD[:#:>@g
%%N0A]pD!R20_325^584f1*u3/P9k>3heJY_I3J)"?o.U]16nfq;t>XY"QBFKbCE1'r2KH$!VRtmI^\R\T^!!0LT'@G%KuPM/W%SF
%7E"n6(ME\u0T;>Db(.e/dO>s\)@/.%:]oS\C)=/,$^r/HS1]Y)M@C*-kkfLsFL.7&\NnRdg*G[+N)9FM(K7^e)3F@'p^!8.76[!\
%%Pcu=#Q`i*4"TtWED4Q=>%&Pq8%qP4bE<:Z6^AD]\kq$]2FH5*;`m<*`tQ_B'/_=BJA=KHCmaQEnes,C`jX05(k`!_&41&>-:56J
%R7Hfc>)'4,bB];N"s)N\i:BNhjZ9VaJp]bMl`uu$.h`.q*85u0_>87VLG-LV)fVk?<m_Ptb`kVtcu)Q8"I4<FI?(&K-(/6hGC5j%
%@[*3U_q*BQfKJWE.@/SJ;RgO[M)edO)JqDjM-W/h2c#qS0H7WQde,B4i+kq)i(&W9p#A..K#-h`EO3WEa,<)k/<"V4LmclTr%q?2
%\^nr8CJ6'G^d"s5R`$gQ2\G\:gPN3YB;jA2fT_op3lSFPZa'<3f?_%A#FRMu8)bjCYY;_j9B@bC]aaHOn@CEe,Gmj?G9^Nu\mT9P
%N!VUBX'NL0ChO1BI]n.gWAM_A.H@]PMY:$@IO;:%n(jG1H,mUllf\-W9CHKs\DW&^#Z^6m/SI@g-tYRLc:(=,c@As:@_IU+G7J<&
%Z5!IXb^c"j+#99ITER,Q``kV3[*[OJ#SC0($bDSso8$FTUdT=G.AB7R$D$B(/U@75i.kr9$\BcI3^pDBbch)Z8$nq<;j;La&M7`e
%I/-]/Mi&8>.gp$!;)rA31SEhWD"0&ie=<dA>//&'7>N>8GZKVU)>^;pGS[*WbDP6JXD'b@4:BUJ.E$9i$`]UJD?dIYAg-h&j&qa`
%E)06f/=DS'?cAdCU)&(:9#+i#r(Pc)knM<mU.E<3Ak<pjea0OldI$j>Vbi\Hl:k<J)9G44[*),35aJJn&Y1u%Z%ADd/!,I/G]YYb
%4cgua#<-li#I8s:RM3pJ=[>N\fLgR<FJ=gVLeiT'!7/07)99TlHZXNeO(/?u_)\GiE@`YU[#@/.-$PY$>\95@Z(=XsVotS=bSEN/
%a0DMk@o+!^*J;I#<$=#&F:)Md?&Q+oErs4UM"Q$</iX$$QIKA?ZQ5*)q9;[>XP'@kQ9U58F8]cbFY6]o50'spe3[!YRn8PIO&:bM
%.NY=OQ)@FoF=n+5gM)H"GdZR`4g_Sl(4fWu=c@+OD\$F(?HoghgU!HOVu-Kn,jT(G&OZZ<%Q!au`9)?F`5FF]/!cQjifF=N`YMO&
%d"!f,<@K!5L5V5Vc;6=W5_;7-Hl.eeP[r0>/9#W]W3Vi(YhT@J9')/hH%M_33_a2%P`CM["dTsTZ*-G44UhGl->L5<bBg[+%,>9G
%+&%Q+E`D[0Q9J/;l>b146$tXmL=F4Tg)q<k)`7ITEP=c`b1Llo^XT/ILj!IM'e>#@;&04;@Sr`V:LoG;1U.Oc?^o'U`EK35@dajg
%'%j)I`/$7ies-1-43g+f:nQ_Ye+U)9JMY;A3:H#C]?iVt:L)6,NBMR0?dM92#mcpAZJaoHX<64=C3WPOiOfj*)XtB]%,=bG9]0(5
%:Y']o+`X>krdnAe1`'is!pbpB$D)M5g`MNo`-Z1g&'Kk^c=(;ai.d%F2.r#Js56#_g)a>p&%[gmRgD?]?!C"I1OrTfA9lsNJ7;s.
%&.jV>:,Km+ADGLLBfSAeG[a7QPm.q6.(AB(oQ(SBamLJ!R5uF"joXe"_#W,NJVZ&QRDZ:G+RRaCj-C0C"tn)WT)$/eK>h2\jTFbY
%_l9("5Zk1pDT+1NR.4A8CfhQ@=n;3q4=(iKk/p1u8O5g&8sm^gAd.`"ReQ?Z+IrHD1#+oHLt?n4W>%KO88i5#3B]5J%_h-K0k4g5
%:ira?9>5:hE\K8&e&0<<o#_#jV[!gd?,Ob4K4qGIBk$30&L"!c1Ga]i!fDQlEMT!HN"Jg^oP*Fn,Lg:4p<SnT#XWKtT!O(U4jcZg
%BgR'G=^Lsdkqr?XU(F5AR_?6EG?Mod=RbAkU*Y2aRDbSXF1Q<POkIOP.Jmt+gf&r($Y%MDPr")3binW1hisY;L>.Qko<Y^fVgKh2
%.,S3S&B\#8&4%?I_O70W6.Y!1<[uE!kLAHOc#SD?92f</4=:[0V$d^ueJ<P%&@Yl4i1)r8Vp3N5QEHkNhh]f/9$d'O$.29ci)hr&
%/E5R+lbns5=AB@o/6l_?]dXQ<8BLL3[7(t=*SY1^g(4^Dn.'VeAU$IXVN&.)*3c6\a)rSHK6.?kD$nk_@L=\$.->ehl$fV5>.gn@
%H6e0"&>Fm+nDmH=qGR\A)Bs7afG<mL*->%E>6p04%Qm)<5-HoDM-:P`F1OEGlU4TD*PUQKCIsO\%5"hI#`ZCF=;FmK6f.7rP#qW[
%ft2Bu5JV+$acl^[4nM<DeAs7^8=XbNLaVNOp*;Nd$:dQjgU#BqN$e`RY0tgY=n>Ne5XVa=Ya^eTp-CUUfa!pXWaj.74tT\r-0Itp
%3mfb1Og?8!P16p;[`%sBA^=(\br^f2Y4HH*E4S*IPQoA'c'9-(GH<<'4kEf^,#?$8Bt_g`I.V/h8aN>;`&6.UL'VC$0X;SBo:*>L
%S@dY'Rh%4-\pi(7/:@te->K;_H(It$T')&$]'"oY_@Y#7o7VE%T-6tU'E4EPS7?l:Li"j0G&f`Y&CFe0)%1PY&lJ1R+R$r?KKj`u
%%Otq/:lt*iqX9X*l,)\.,&E99f5r@-SP2QgS\.^Nc<<^+k)&^&\_$ZLKg$0\WYuj;H_!grXs2mkN'Fm0M8(a<J+bo@B7bW>:(49Y
%B4Fk\ncCbT\VmLCG:D-L:VQ#WhE#X?fkg$O=[/Dbs&l&k>RYV)-ogeJDm%%*8Ba2.:MNr'82/d.Qp"A'j7A59DC<:05TXo&2C3Ou
%WE;hV&>i8@M`-m*Io``,?!T4\qj(KX-dG5LNEnd70:3]>R(tSZH[&p&Wtuo(aCp>Y#21%O0t89mIRr+A"R<]YfI_cON/:StdDDt&
%iqtO0DA@4=nl>DdXr4OL&c#kG4[Xi8Z4W3T`=f=^++cI=USZFrlP2cgqA\Y!DS[nIE(82m-;U`5"EBVL05Ufr$.1pF3o^[m)tS'0
%0LEW>`*N_jjYA::.7r=-PN[NnRC>\TIH!W55K"<gbha_;#Z%\CTLj2.,`D%sYRL^$\1i>t!6pE>,d'9P"05BccrS-Hl3`*E-n7JY
%,0k"76nJ@g!J)pS4N]&mDfoa)NcB>4o&>2F'A"\0l!5OCO5^ZAY3T^h82f[a0eN3C6p,T4,@V"9QH2M*AVY^fYt$5sN"/6KjS^pb
%8CIsLFU;m.,Xi\ik=%cpp82)&\$QNKRLB_>>)Ko"XujX?Z/'^ac^VV?D-]Bg05*nr!cS6m#&Q.AV\o1/_Wc,<,X_<_M=3l!\N-C^
%?nf<@7BdTE)nN2.:*D98pk<ZZ/+(NaR<,T7)7>/QM533;\RHrEg<_[pr,?jiZQX\BJ\+Zn_h!t<Do!$c(liUA+kr8!RSmEF)51g;
%:5MZ?AOA(i95^Y2Skg99@1H3_J\j,<ajP&2Y!J^XqcgbKne\uR5O;6Q13H&JM)AClAH]hAGokg9)]QCf#/.tS_@b-b*VO2t+jj),
%+Lc`3TIS3uEjQns$6Ympck\o(=[.a<B^"*EnO\I6kEW&P>.A!co8$S1!q0%mQF*Vcac'=c010<=b>Pc^56D6P&ZQTk%^@sXUf2KD
%JKX3K1(6,IH*kEaFP&h.2Ai%$mGX0E[<ls@QK>##llpUHL1_$EU\'8`8*3a]`$U8Pn-6kC:6`/flqQ1%[)WJY=AVd./mC+;6m6Z]
%mUm0EE-?&h3'0>D]7.mS.k'GEq)=7[/nJt(`'ZnjJDW&%LB'c"(m[$/4E!h#YRqS7[%/V/2jRBP;dssAQ^YF`"hYa@H5D.`F]Xp^
%V;An.id?F4f_)Rgmm0.`-s2hTSKo!Bbuou/*-"m%=q/[5K-G?g3`-kq0K$X3r5(KjQ9iIF='JV_2ml;V(o@pE#Mp9t+g>GRT(^nq
%LNh"h=qB^(4aG9E$4ugri:asuXN<9:RlJ<+<a;@9D]2rVAWE^*UhXk*kp+,@&?L(1Tkgpae^u4R]@s)[*+93JbLRNY&uk5A29@B;
%Y]XlU3$5sTHhshuHUp\!7n%3Ms5U)l.7QuA2EWhW;.CcNN7K"Gcslt(-$eV'9.@::-PF_P\&P;`mlHF7'3ejT2'uLl2-faM-Es;"
%GKrugO6%rVH-fnL=>3V.=A4l/q.HonehcQ+=_N"1;mda1j`#E34]7mY!=-9T<FAF6,2RlF09$Q^K=j]/)MeTd?\=_i(oX[8-KZ?;
%9J`j^HH3RqbQO)[hAL4Q2)!H@D'E$Z3U@bY2iVV*4._L`XGM9o-n[i+4afcF/6<#da'\&WSY>NAL6=S`$8gqG%X@BZUJK"4q>RWS
%CaU..I;@"PIadOXRCM,S<4:MDHc8H)cu834Bg7oRp@IEVGuN>@q-hnTPMkAeSr49N]#9IeEQC.pR#IlHOQf\Q&J7C7D^QIEI5Nkc
%G"]GfMIkbM8%NMR2%)pXS$kIr4ZbUKS)']R>sIMLm1;D*0FhVEMjs#4Osq0Y9.iZ4,p5g)"N2.0jZF'<F&.We'2^a"L@)p4BR/Lh
%Ee3+hW[paSdK>kR[=kfMa*p[JQoXAYRjZM\cc2P=kV!eMQr%Ql/0`;6PlW`((p*AX!6h$tW;*GP!7'"nAa7589Ktj*bj#2\8>F/6
%aoeNZ9I$YM=Q_^8*u;HljBXOXa`T?n[4Q4[=X-2D;uIUb&qH-N#5YD65cS0s&I8?r6dQ0GP)AbJ]QB%M%Q\(fX%EAb,m"NfQ,&WO
%j^_?mlU2!Xa(BjY-1Qf21qH@#DMXGK,([f\<2uui!+;S5qWgQO8<%:jcAMgenOUp1kB(h)P\b5r(C:'h5U=E%&tnu^&2`o4!AqRH
%Qrta9kQF76<[E:b&45T]9E8i;=C^-lZ8r#2pU+p^!a*_"M5R-CBdDC5o_=jUALDE!`8]3r@Ul/&q;c$9'l^u/01>Q<e#WOWCM?E-
%Q?M@(#PY.0/V(^t?CihsG,b4QSN-L2)nURGc"V.h4E,*sbUQKqpJ:<1!5NDY%VLui]g?=f&KrC/?oA4I*Dq?0=-M:5#4CADZiYc[
%Yph]jFc'i+An1EEY+Ki`&!!I+:hk91d$Ik!)mCq.PV4r!9PrG>%c3h@WNum$?RL.?^hR[Wm&mO>#b!_TXCa>5f]0*GR`'<`m+sjE
%5(Y`ejB6uNB`98g"(t/pf*tDAgajG4OLSFRE/)<UdX_^]S$`>3&iUJIB1UgZ*gi&!=["MoEO1,PN/=#-";;J..gRIMc:\GgR(-9d
%0JRRRMI9oQAd7a`M=WKR$&P.*";;D,:H9TXAccs9`2k;QLq'RW?q8/[H@h!0>6P1jLmo+_-Ucak.%$)UY:,co\62^K!lW?P!lr3(
%;8Iq'H!.s$%Hhj;'+X2Z"VV@.V$1KcSC\NM/=[Lm9IQE4(S$V,Zb0[4iF[MSKYkt8K+er:()T^ngoN23l$'<c3()Z;aC$4NAsL2#
%_Taig1D4TV),)=2/2W_b\>Q\)R=q^$n]sb99l0=,$14>b2m33@"6!jc^cKeW$!(8'Z3/Q6Yp%b3@h[td2a*qpB'6Vojo]j4:S.3k
%4qO667`0(P_lu/Fhbe9t(uPOORl(<61oi+Y)Ocg0RC7q]_RA/RPhWe2%YgGnRqL!Kc\ATpnO#M+8p;K)-d'?e92gd_78j;jFR@NG
%85Bc/R7Ss@J7Tk3rBsLk.Fl,6.C#AF^k@SVP"!AhAn,EsCj4]pL=J@MD`rW[p#J]R$1bDbpM9%GHAX0;#\[$;Dm%#EMj"_D&_j8J
%LHC[q/\0K?,W"(_T%Q4<CM-@g@oHi\IH?SX'.9mfhARoK"3Q'oPLu_<Hh52O#d^f%BAMJ1cgY)"Xur/a0;T,eAsX@n1t%6]Iui\2
%\9kdujY4KD9?`T@)O5Rl.hkY4)I!idX!rH5&"6>fZ5OBJ)pEX*?!Uo`p$Spqr=N(?f?_$BX5(rX_#f>4oB&Z([qmJ);2ULJ";k@E
%AIW-@lsTnal#AqM!:m?Q2C3Ou\bJm=Y66G'@u/h2m@O1/0(Z7A8_Z%(1Y5FuWTN>#R2[0pCu@.EVVYR7JbW]A2F:P(@U>9-,f/ae
%Rq,6t)GVZ30@<'3g=VYB?"]+1MWs-'[LelJq`Rq5eUdD<:YVI5)nLLBrIt4j0Ap$eWCodDO;3J`\Io!HQaEVP0hX"R\4'WR1Q?XG
%Qih$Fr]IAG%!]4g,^.Y)XYt/di$)E,>6si?ZJX+VYM=E3cHR$c"3e3VTC`p=UklsF4!ZE](fWZkA\tP7),a;jkL9m0Ofn["26m+g
%k7Tk]M7l)K6H)Q8>:V>1HVMgnV)#_?;to-De+3-R\$jo/cT[b=G1tZ\I^2-2)qDD=-iobccRG,\G#V2edc25_]h(#qoT!3bC3QUd
%4AQ'FU8oN4%8DE0c`V=<L'_tPC^:[]7f0ij$"gJF]/<CUNdF.FchC(,8?U$hq(5TqD:XK"@2i5t0T*qK_<!\O=s$7)B\k%6_pu[R
%mlV18@I.jA_!X5URnB/Zgp`T\<Um7sp5SBKle=OAp4"uDrLfe(oXK@DZ"O]=#!8QbDpDf[FHFLs]9gE3n.-!#a:M+:!jbmhiQGdo
%mEehheri](Q?M@(7m>40[DcfVlJ"I-@[DDueqs"'An0F'qFau4d&GPdIDSC`/86qO#-uF&@0`nB<7T/7M$qNR9\<RKmH7p3KsA*E
%-$IW!9pup@)F-/\@j%ubIClHbm)n"lH(Ob[2Ke\[^WZ[hT]`!*,j%J['8SfjasbMYTHQaC4^h,&XKcK$K>o21Cu"A'mjB.lCg)fm
%M;<;\C>u27@PoJFn]p`L=-q-LU"rp#c:=7]>sIX&>D.Q18t,6Bq"H^[Bm4<JC-bK.8S&>ZK0"KRbS\II[Q%%sis\UX>@UT@2kBI[
%(!EX&5Mg-K,V5?eGBM"Xn#pnQSS1g'g:DUWo`fnTL"t!'I/ATmc0j)!-YPF]D?O-'Z<JCIBV@(e2ZRMrX&$7nN`q^^:u-pm*b6BJ
%:j9gt@G#_CFN_$&V9p'S)m#UG),EYE"YBp%hE.CBO=iUJ4?%l"9I`,o)qbgtmnRP6"MbPgDo&g(`+>g"jXrg\e)B)Ugi>W]BQ,5@
%2'6B2\LVV0Lm.0bmKU%%)@OR@#52P!$cPh5)bTQ%i^P?L:h'^h%LTQO$cGaJ&0dEQ&3#,)nM"9-jr.[Pd5H1WpQI91,j*bl"",.-
%7rU,\"k>oKg%pHH7Ql0GK&:H::E]GndO&8d7X*"0Q=,JG0<%7?=$q_b?ME4%gT+P-g?c=,o]5gs,Q[Q/&1Z[u%KIGCd-W9*kk5"7
%Nr4(]2KBl:]`Ya+iJ'72gpSVU=Z=NUD3GKdWc:N0+D4&3`_kK%kfkFi)tO%_nc[X3.6goQjjF9P^^Z$XEis2ZG1oC*!b`ZWaR!D&
%Z@S;Gi5uYb&amq%*ZNu5_I?%$M$'iqLLjNJ\j\6/m<9`;pg_GSKUo61'*R&$*#'*6^Ctr'9Ea5@)1%:)g@A@eCYXHt`IZVXENCKN
%!O#]dF^V^p]HB\,*-P&6i_lpUf:mXb+Hs']XqA2+Bo]alblfE8FWg\aga\(aYJKIbl_hYnM0=F;b4o3h`:]938t'9g)n<J)R-]L7
%`X&Hl2bue(_,48q9<^dUQdd/+X!'i-YP[^#le*d%Y&7H*:S)Ge56?80PUiF"OubGRU?WCSNM;/NNNj6DQ^'E9@P-neh4'ga1Vh_@
%%Z0n6->M7PG6V,QT3SleD9Y1g[e8:0p"15%q9;Lr:hWP=J2!mrV,K:XbS-upZ+85jZ`rr8oU>0Wi.Q#T;SteI3sLq@2r!<@ZV,bq
%HkLAYqU*kmK78_hN@-.IOrF*50/W%"Bn1ZT%[^9!U0&T$4=t>LB/MLL4.LRf%JIFQ11^$ghi=@9h=B$,a1\24k?F"-3#(rU-h+JN
%*UPEL7<pj5&<5Tbq,L5+Bi07])EU_.;s5VK#($\P&EY8rW:OiH^sM[r4(NY\b"qRUnOB[QlpD(CAG@C[`(uK;-$C+N$@N$D1.OsZ
%3o4)e=,9JEfL'LKg;2?7DKor2$;T6n.<Q'[Crg%Jo6r&Hjm&1j=5U]jV[rS.q_Z&-l\BTCnT3M'kje&,f$`_'ZW#3s5-n=P#jEkD
%j:]G+BrE'+#>g!BC17^q>V5p#BtGM*/H=4:KD_$aK*;<;h,eh!RGuo9^Y%:c?@$MKJ*Fs=N3\==3_6NDZ"FtKjfU[N6&,?>1./8n
%#*u!;^E=ZCPJS;;e4+t7*7Y'$a<DKF^fG4bn4>'rO<7T/]bO)G8f6J(2W$[32ukYke:X<@YKLY,)I:`Lnm[mG-,G.J?t_h'9%F9Q
%n!Pog*b]0J2T34p+uk>En\CS'&Oc2J5gYp$8857']^2:J(\i,d4[9AfLo#]pg/((mlfjY:5%tcNlS\j2:_9YF\W@tR0$7Il9pUN2
%&r@2)hZ+4Mi,p/FCXV+*AASr?9)`Y=37jf>VE@gUpf.ZWR>HW,e7lP%TOj8Vog$<31X@RPA(B(=agq9""0ZtXJNJ,lXdI+LJ:W:f
%4Dd+VX1[G+$))`tjN+!MW_-3Ie&%7.(.GLR8i7sXH:noi?`OnrZ^MVs0#eg!/oOpp;ZVa_b5XhXfU9%l`s@HKYSujS@6nBD+!jr*
%KKR2a1t/!&fF'`E4LUCq(TZAr]+-I"W2#hW4VmFRe6ZeYRFl=so4$06m(o##\>R85b?u-<W1D+jHo.(\_hgRW'k8Cf_Zr.<r://:
%k[7'[Ki@GDNS$&$c2lg%Oe%=T=Q$FjPIHs*/?=D<&Re1l'`H.Qfkp:V;J0VC9M:/3=En![>qH0KAe\\-A(M5mdbIWk,Ncfj8b+rB
%'G)RN%InNa6"1l+E?Mi_X$7jB-(le4ah@8_-'Z7j-^RC8LI`#s*b[Fs/5SEMQ4LoR#])T0g(W]-*]8]h0a8B:(Ur^.,]@WP;-QP*
%L[[+%_@pFPlL-iV]1AJn!X!M]qa<J]8FK$V3d!PT08/n]iLc3R"*dJK)cRY)K#!o0ak:+1.Sp:kJ"MrHM&TZ=Ld46)"G@RH2ZF-(
%!!,@p>:gIp)Pg)Y0hn*J3s>G7U9Bu@m)]RMP*S^7SW74dqFhQ`2+5N\E^S!P%_Y#1dXi)+Ba9(YY%PSOmY:AVUn#Csp'_)#-o,Rn
%c8c.C^(A-aUFTOee0KLpq+_DMUk^e[AR_?nmBR5;7[OY"no)<d"I05eUA2YA^)3SIX_<U,Tg$$se`$4H61<EoN_m_27c7<D&b$$[
%+AfueXSafp+<e_bWrU_5&^D.K&TAb%O3eF@qdi:@ClH;bE]5Vn3%8u#ie&"3]<ejVCfQ:i[);,CAHH=gZeAFFb]AdQ<#p+uHWjAU
%bR0/!cqGMs6#]7ijT*hl]-9SPPSp:.:EEk&K;c;,ArO8<Re*0P]7;POhc_BJH0[gp[$Y[>$u:m+&i+8l0ZL-'YuOa%X(?_cdDAku
%hCgm&AqICed#52-X%'pLmdbWa<ofr7U(.9u%HH]V@"fPE-)A&X[CY&L#u(=RG*r_NMQ4fMUD3(,GlMKTS01Q&D3NAeZ0Dpn&QOf9
%K>WRMPH(m%:5j(#!_SFR/4jNG\^K8uh*M5q?(&/`L.12AYs[%F_?OOAeSa]=6/Y*HF%RNL?E=X#TE#;:WE?TdPZ?:JJ*9L-?0`]:
%0DZ69H6+!Zk8MrG?TbS9T7j4X,@DB(`J705\'k&mh)9iUjQ[i/f*Dk7XYQ4L_(?"8T(U<mlrTEL?Vk^7C+,H4"TbN':jm34M:1]l
%Mn6$V#hU4%E1oHlm/Sq+<Ue/e!*sgI1i*rC\QFg8#5j,+E];,3#@Gn=M6N9Sm0o]>0TV<QWE.Qq^I132"P_Nq7j(pebW%VUUUT,9
%i[_2>F6SDWgmYZ?"0/Zj'SRsNqPen=1oTunB-Al@.9M-tf8Bfn:Q)W5)4e;9meR*b8Lo6Y_3PXdV9oIfUWe,oA?otFK^&8r(!C1E
%9R8n>7"iQ\7e\)1C$=D!rK*A'l]0)cO!:u!V@AB$RU/K[7g.>A]FJ9tAR-hRnYBBp1..lXpd,N#d<,lfWmZa(752Q)gC-69QnXe_
%`bu&1lat.7.P0],23l#RGo_6=LHeP`71b&[7JI#m9F-YiY;[J3TEd*ho93^DA"NeQj^Wn[-7iGZQ1!JPkM%W*)32eYW-L?P\P,+K
%[sVT:ZsAGmLZRXGT1B/p"G7Af]=?BdlD>GN`q)k;W'LGm)p7R_PAZ:,#(f_d#;3$3\ifR>_ITl5'nh/fJ1`1)I->]TES@+IB50'_
%<8^*:0h!!)836nCbNpW`'5$;r;p>>65I.GcOf=CR^$Mig8%td,(J#5'h.1tU'qD1Y+d'$g;(ZqR'>Tn6].M,fLLcKSb7Mr9kR"?g
%^mf@mF;?=PMUd.HXVO>?B)C('J`BEkV.3=&8YK!R"s\%m2__MBml(=LkY1bpJeI6h&1Bom-e(AJSQ66f/g>l10/^dH2ET?]5Z^<K
%l,sd)Z\$5TWN&<i(Ic5ICZmJtC.8.ElhJnsdHZN2jTGar![\<Yh,uCBaIQCZ#k?";`?fpJc\`E)Z<3b?=`GkRo50(b!9t$r)6PF&
%EJ4KD6_"q<&tnN6Y/!uic&Eu^^N/'8%!<7hWS+/`D*XS92,>tda.iZ.^hm@hnWl`YgRoK]SlBDd_`br$j<HH"<m!THLtFJZRQ(uD
%Z2mU[UXCo*A9KM8GU`D91C$Wm>GT@]3;P-:0["tihAc+k?f/L+X:AnPD?GB`C]PVHBn5,kkl*B-&d(o3$t5qZO(qM?9YtZ>Xr&q2
%9I+Ofnf\cCVh&Ku7T^pVh^j)t0Lclrb*f`V]E:;;@QDs`X'O0^jtS[jWOEf[%t>-Ycm],jO+Ji+$9[PtCLiKu&Hu_"":E4NK=tDF
%5Pdr)%`gH._+0:g`Lh;E"Rssl"))T$"UuM]gRY"9m>0s2pK'tiUU-(K@:`J>%df)s08jdX']q^\4f.J3@oJmLRTc7l1[.sA+?AKT
%ij-?l+D`bhen)54BRD+;%HC*>*\P:%%jX36hCo\HAc`f.Wi(PA*J2_KVX-8O5qFSV9<5Q:A@)bB@%E1dIh+aah[t0mEm1i>>Uggi
%1K$%88C5s^M*c_gdF:1GQg+'S//i&Q`V9U(-=8'ba,6SIeC_(m@*^"SU-9HF)H7Kniji&rBmE2@+m8-jZP$eG`g6o@&*9t>SV,nf
%^ScFs4iukYE%,<TP-mXjPkl>A=_1Xq\Zfc"!NoPfJj,^Pi6(QGZDc],JjG3XJ`G%Sj\^b4=SbKRo"o6>(&#U%)ep$uNZ-MNooi6N
%cg;ESQG`Y+,I%lrUL]I`BsI%E@c-1#&D%PZ8[IE)5uQ.)$'>F&!$n!0,=$:nI3(2ME+POm,sT0$UM#c!-*,+.Rd_@C40+)&IS^5I
%3`25+!.J.Y:d8"dIFQcsZH#R5IjHn)VA6LtS:Q#I+%$Y9CeJ[R%7?_64pGdQTWjVD6-DQ<CC!G[Q&dXj]+gk^=GqkP4^a0#!mD35
%-+QNM2!]>6(mG5j=s)o^bcLb3&Kf.a;c.KYm8^b4_!kd@8Q1M>e.I"[Nb2]8P[Cfr@q&U=U<+_rbBo.f8k/6&!B,,6D\0E*,#?5p
%@muBIDQ\QP+L<oT>]*)G%0N&)3pB(cHAL-XI#"e.VpqZH;.14]:Juq!^NJ%YZDk5@m*1Xs0h26`92.&SrMMMtN'L;sk-jJqhh]4/
%Rb/bI:,WJ-)pQTH,_bEEV.'YaU/?]$^bFiR)T%$pDPb-*c9g'_b:AXaWL=6Q[t-f.;N)/rs'&$Gn[L7c3j6d+:be_[4>@UG>W.R\
%3L(k1QJJr^A=si>Mrf#]V]>mXJMb,V%4TmRbR6=:&[Z-QWSD][6qmsc1&hVcOCc2ZWm%nfbf<Bg+H2a`RTO\J/6Ip?+kLJqd7J9Q
%@.jK<he4qFYenLj[MG5,<_UBB_lb)&8OH\$3B3"5$<L2$SgXgh$@mmd@TSp(qP\W@:e+%(a9"RSQU)-9,?2^NY.OjkelDdS,ATHP
%;BY61jZ?"ZCVP5Yp>]XXm"6iG%DkS7NE-m/m_88t^c7mOeMVZ7K0VPB']Ykm8gZSmiF#EI&N*i]IStST0Mik,qAb9FSM7521_9$O
%3*>.]O:^q_;sbb.JnQ!s+_\i.`B$3,Dkd;0=k)@gkFeL_TakV^i(^L#gTEEaXG*M[]MfBMH,Wr71'A]qJ/g/YP(KbkBJNQmJ-m@'
%_7Tqu4A-WgEl$oQ\^M>e4Pl!*BK>s+qI:%t8:4CqShd5nD>G3^1KM_0"%3n9c[E8fD%"MnNT!lf+&/MF8=F+lZl^O_N%P#L\HQLe
%>Q_\Ce7]iW08uS)<iKL*!*]V3HM_mHFD'tRIDb8p%T1_TCrsP+EG<a_^dc=m-BK;(km,4O+,V<*:NdNR*n,:4caJllGSqW3pnjm1
%1K[\R-(7I^@Ri*T(p(_:KR&7lEs=.=`"_Gp^-s;AA%`9oOdoAha>.:!.<lpG4&l=GmuK<9lQ?lLJRnV5Fg<#_K<3'4Dhk9GkG%<(
%r,^qdO,[s^aA3ddjenLWnp,$j2NjY>p/0F#"<(DUZGAEZGNrcn&V\t!l,sLG5RQ9XKEX@R&3(\iR5/BS#ZAIe%umTmX72O>a5o?[
%4SX1A\eIG.bL"Lr3UlB-R+MO)**Q<tk@mN`qdoJF15C^0YV_`Fn6c5c<IMFYJ_ue@&:'Y)#H@pIW^"PfRbk;Q!$8[J;4=%'Q81;[
%b8@-LP,<S9Scc*8(BI721)A*R1^\<&;oZG4g&R:Y=+ill4h>d'mFdI+,.aOIH]&6,qIJ+(beKl^*fipk7sE&^boGh_S3m^@_$B1&
%@jA\49p7nA:/6bQEKFofCBdp#r^t=P=beYa&/W@A+JtlAkS.&F:GdnF_4?`I`r[t%6-j%MNY:dL#Kn4"Z_tOQjsNElBD7a`EIo0a
%=Aj\%"6(C(Eb?.Dn$$@[f'HSJpsN+tMJ#?5+f)$)5NjZWep;K[f.72*:$]@m<XPY=<gnS.%*biBH<@&GDOq=E#2j5=l;NjX-TS!,
%PqMmLO9\2A-#jH/[ok9+bIAsAR#D3L!@r<qGr/g"Acp[]/;:.&JZ/Z'U`OXEODSM&%m9@%N/^/]eY*tHTd%[Y@@3'Z.n>Rsi4"al
%#e=WAOIr5`(,[LQB/-^t$@0"ii!UZFPP(-t7AZV?1qQaEXp\b@(-;>,k"nqh`m5ga%7A0gF_17c?K$8J/dmO?!hc(,ZoB,6B)j&^
%5f\?.)bfODXKu:La]#"<frZ^=7Wi:D(U(\l)hA*kh`3HSU-MJFdkm,NB8$o#)mWq0qhcp6&pMJ6h=VLm_kLYU$nSFbogV$$\f*(6
%&[%d>(jajNaR7\9!>1os@u^D<n=^F^-,c^(F]>Xm7Pp8.bS3a$m*QLScqQL>?2#Vg=BU4;BlaLr8/&e?5qABI?qe."KBG.>:'fPt
%r>V4*NL%S#6PFfOX+GMYPioRCQsTjh`$7&WUt[2W[\Rl/CPI/I9i`*5R+q@!*&C%fC)6JcLW5o`<+HjLZoISV-45CB5TqrZ]F;>$
%nd.-)).X!]K!AV$AKB`Pj^:(_&O:durJBGDRba-]'rK#:'M\a18<J+6E2<:V^05u*ppi3X#C$d111m@"BehUT((_K&oEW(S@`8#H
%d4R2ANYH9/RdHu/"EJlY2%<8>@C34tbc<>fTO+GK#6A)Ob^l2VL'h3Z]:WXH"6WMCj"Sl&9Pn`.7d!VF[G9t><*3Ha**+/A\l+).
%Jo"\]IN$@Ei4sosWcVfKU.^cM_"(AaN+47.0DJ`e#8"+JWq/0T$XA6q>'qUHO_DNdnLV]&^iRNj+)GDf#)V3Re8U4Uo>(o#PPWRU
%H^QZ`4U"CDZu'"Z'b1=(dXRtt%a_O7'Y7D7$FR;'d.DK4qM!iQ2Xk<H7tuO*R#0q%!Q=6Q0FOaT2uFr2Jh]qEH@m$a[4QI"lo.;d
%U/;RDd+NLQTR[ur+T1%SQ;lu!koQ;o(C0]>2#7\kSE.)/',/0Rq/j;)%BI$VEg5fkr,g_,#"C`3d[3+)O?/)<n[^]#f.C+Bd@;dt
%VQc)$+8T]S,-I>oVXGMu"9]``=(WMI<K(9$c(?(lh@E%co%"B6TnV`V0!Xh(7%Tc/pX:=4T$^cV0W#:]&?t9oTs^N!k#7Lk7WmE]
%63JqnQhC34!!/5J68OL%a>[$)%1!kT-/-@/5'WMcTFq(=I^(MmhBFo9"ca6m8:FSVSjfQ7Os1;]/%LJm:MVJ[WDYOOXNXm;r=c=1
%`3$rZ(SVY*`EkO7cto^-VFKhcrQ[2eR5K/V:D(aN&R]Pg,A>!GF(.-LeNcf_'VV1<6,j+A!3Ho$(.`UM/r]VC1.Qd$$P00RbBc9,
%<FJt)BL=OqcuL;GkTEIt?Lu[3]+iEqJ&>7Gp1hjN&?pAlDpC-lUX^)2iWB5;)[HulUECO=K8Hp9*fW]57c_"?$p#+lT9=<uY!Ogk
%*LW(!@M]SoCY2nCr(MW/E>%Kb)'k[K\U2g@\20T$aio$TD.J>25!`SL.dSKW7EpVsX`bCFl@u006q1)^4Ftnr6dsWP14nKoh8pk*
%6:%)?@@W(-7b"Q,K5bA6;*G'ZXj6mB5^LcI5lTqY/L=4aX`/68pB_dN'Qks']1?H@U0$^Qd(G>jG:3d[>994t"-sZh2HBu[Opr*#
%a-a;+*i./4G`Tcs!Bc4"L/$Wo,j\ZN5R@3mDdO@Gdng9Bjtj!b'\H"Y=,WkmH="So(-X@Ec@BM9\PL$A2V?mk\09qjl861n*R"Z9
%HgBtDBMkOnM^Y?4O[DgeUMPHHCTDLGD\eYW2!9bJbV"SFn'd)-;-sNH@Yae>bTeK63Y3uO:Vk82[72YZ8RocUqk9rF;0@bG#2M%s
%(Pg9pI5YuSNS.Rdi'BPe9**K/eZ-ZX7gI0hb^EtEKh2?E*HR'.gEEgq?t\'V0_',a/A?BI!=Fp3@fU-NHqfokK)eA"Oe:*]/PU4e
%,q6?`BK$bgjM'cnSgS!!oA(Ik.p`;F%=JP<#,5Y"==eua!5nknID_==-!R@b+P%)4'dtQ0-3ZukTXM"/QS`^lc?&E[7;QENVsC:i
%f^cmr<n.30CiUSrQN/:&1]U-`)PS[X`pVZNi;JOO.T`*/3pWJT#X0r5F249goSF`.6pfB$a)Ah?J8qG@"]M#[oKDZ&DF/PJFoV!$
%m_K$R6I6F7IB6/B%Wh=SgENhD2<l$s4*7AL`YZeE5_kbrQH6!?_:0Lq&r@N_Yp?t!j8`<p-Dn\<WYd-#B(3#6'^cJPKY[`k"5ja7
%)"RcQ-jTm[,(q)3c[^380c?$s\%;:V"6[7HfU*cM]E5rOmSX^KKkrsph_\rAAI?::U=DDV!q-^U0J5*t?tF0=E`e,YHp#PH52!Li
%ceqJ#c@RpkAXYMSe">1;,Hq@^X:DYM`JF>e?ZmV)+_4=J;D(d#BiG]I#FgHE!,t3j/#"cQW`kR\RsZC5`#Vf7kJsg249^:/(3Tqc
%^N#dB(!Vt`kHN<M;%c?B+EV:r5+6]b1*L6#0EC4L`<$'9bet7"H`l/j=2+sT368T/e'!79h08>&HMdT_YO:gr?bQ=8c#;KfpC\i\
%f9uG0.53-T78t-[GiN8P.>5TUX_'Bn_#W2r+`t&^@tPRP"IEsuDal$$WHJdrBdl'Dm"YnUQ%RSWK1MOSeg>4oR\lX.!$^5`Q^Gll
%'b@Xr6\m'-Vhb+SQ3XHoqK;8YWR$FD.4>gT?GUiP*SbBT-rQ/k^_E]e((:J&GBg(&VI5FZGo/=S5lBoi6PidZ$21'G2*]?$6%YE$
%5XLGfrB7:@lDc#SIp+_NL_9o&^O_i/L7'AC=.qel!KL,+d6>Xm(&OAW;kS)BqTcZnp7Tq!bUcd)6*P9#X:DDV\ZG+aO!celf'A-p
%7XtIU9*uSeF#CD(93PoaMoNNQ>Dst&o@Psc(\B<qZ\:+oX==l;?<4i]AnkffjIQ>_TE1:%c#=(#:37OT*TU6a!*h0opI"O+3+8t<
%FF#\-MrE?YAf7W]H.[k=9Ug%(]:V9+71&Nn[U>&O?dfqZAr52nKRsMEep1PdQ173+#)m'g7>$_A2&VT-SU0WGFb[9-@NMC"@3VEk
%%B&`#1B4%/NCNm=elZ(+[>u7X&<r`"+i)]>4$`O@>KQ7fk^Z!UZ$J(AZ&,+SbfG3q&@.IR&TraMAl%"n&\nQrW%)?>*)OG>-H&`M
%5:t=c5i\g/,cnMsdYTiT\R\eo!NF>V=Z_b<*u$buSci^E;!qJ&h$$;sQ:6A$Fn="2s+`DcI;Zp!K4h,VP.l]H-adJi4)]ZT#Db]7
%_mr$!!"8t<C&e[,f6,J$TZO-ThQJFF#]*9FHB>2%'0`N@5&gLq+cs5V*dD/6:K/dED7V"V-H7LI!CVIJ_[Jlp4mRXKgZ;tTb6i`R
%TX.^&FU\LF@_e"+(a)B>`Sp=uZ,G,\(7ZHY/H`3[kGHOC!360'Hd[B&XTNdFBm@l?fl+,;C"M*>-FCi;SqS=$Cf$gp^')WhLTQdF
%@'1-M;FXGT7DTY^OMORD'OtY)RC!dT%n,P*Uj8[>0F`,+,5!\Q::S78K+'4H:^i#IM"&;eA2tU!%=LSWp;l#2n8Qh]7-^r[<ou,I
%a8B4A95dhQE6NP)!/9SEnL=8oU<X%k[,IK+c%W-WcoH-Y5.O!FL?.hh!%\o0^VRGU]mjcKiBLFEN9<<$e>m]R:dGT9[a3P+m@1\!
%k4oj%>u.Q"<,7lo;_h^!frQohFJKg:^a(CY,6<Zi4dA%nWO/5/V@DB>'$[@(`TTZaOLR&#!#2149RZ3K>HqE@Htu/+*a)o90]QiA
%@Rg^bfsjNp[W4YN*4COb/tag&XO6hQbaIV3;5SutS%9fS\X18jOV!q\6lZX>)cM>!_^p(@Zl&H;LY>t5IY]TLWql(]@)T4CKb?R^
%l5F$)A-;^Cp)):j6hab2d[kUlQ5eX^Y68.u-a^gFaG1Ei6:_O.^!To18%c$Mkb`2)T[)qh34OQPC+..tcVmi$.u?\%Gq6h2QsU1t
%EEMtjEA6UA)G1(,%m#f8/KEA!i>QB&$tVW);%r@`*J`k*#V5;0lR\;\[s$-3$EL`dgl/s^pe/f]9sB4b$LbIQYcf^:Z%3pkP*lsX
%&Yj8uSL1L?\r.^K1rZXcnVM\nl!4>@%Bt6&ZD<[FNM'M._^tBi^>XV\A__?]5ejC4S,.tJJO[uj$/$oIK@3dPd'8QjFTIkVB-=QE
%OM/K';Eub?BOWYg"W\Q2.7HX.f.f7nXu!9(Ro]X^7*B3'm9%?#?8,6KbVp"@NNmeMd,*34S3@s4oA&CpoCp=Q+HG.fD'eA3J^]c.
%Qh4l@*?=:k0aSO3"\P<P>%G`SFeVYh91k'h_Ld(9`XPG2>>s79`$cP4_!Cmb&/R!)5Es@o^<PqS=1gu+]he;VXDs(Bif(8F+Km`/
%i^))fE9I(j85QpuCC#/eR04WWR)t%.K98S)N!Dhl4Q^2jYlo,:@@:_,+PZuJ)Rmu"o-\f2<q0KSbQg`Re9(l+T,aA8bRt<oB]asa
%JH<\C9UH]XG)&W._5`=ACb[ORI-+H'LL;*29#!Q-N$Sr`g;aka.!]1m""):%:D_NEen0IpenSAkSep_qCbnrL\rRaDRn)%+V+?P\
%;.pLERJRY4>]sGOj1h[#2Z83bqMCn#.,1b3IRVi_<L_H_6k'q9/(PnI))mQ)Logh1Z]=r#olCe2Ju8j,;'Y@]:?WPh5[F\!P[9M!
%l2d2AoGH(j,b0CVa/KgU;F\3kekf4/;a9PjWbdK:)@aem-nhW8NB"\eHoF-BeRB;p<A@d-miP=MG^'HZ.n"r68JZDZ^)^NRMOVB)
%r'&[K8;XSu$m79[e$MT`e9HlIe19G_G[H@)9X>'iH.9;@5mB5CfZ$P1=>2/U=?SlaQ'6Ae.n#dHA].oI/t3`BS:Usm=SV,PUS/r1
%JI]_dM8ukuX74Xe0?p\41a[;.GR!^V^j<GsARWph2%?V-Y#_\,!DsU\B1B*CJnag4L(98'@@`GTF>Q:HjVq>OO#[7_>D*1Hj&m:a
%C*4oB%VK+QZ@?7'0a<P9Y1bG1MK&X*/AjHX.U])p"a+lV&K/[/b$aCD7%QcGj[YTk%7N'nr/'O@(qkZ0e[/SX(^QS\8-FB$K24B0
%Me(ltp?A:e>\:+LiE99k(qesBBbp%eD%H4_Vh;o"3^lc0%"nT]9=l<3D?kb2<eE6p=]uW4bQ]_;h2]Vd7!Go]9&cYCp=XZFNe[Id
%q$PphP,b`sg_>&PCc8?<;a=3a15@^(ObV"L(4Ve)EO#0D64*uMCL.I>(o"q:m<5oAFn2a]_nN&tX;5p]C7F7o/%F([S>9SBJ-f&h
%!fKnln)UmiQ'DeD3mEHhNB@?fOj@SN4Ve*ZH@r_)_!rGpUm]ghb^djSCh4dV%8?W"^Bk6<<Wd">:=/M:Y=,M?@MkqTFA,QTb<,kc
%br9[gYRmdL]dD8gX,4.@HOn!bpZ2W6(Bp=2!X]"KR;?46'f7Krgrhf;O>s9uL@$]:N+)',W)L'BaF$&)n763VKC9Hp*F6QlorK&F
%6f77>Wl#e[bbQ](9C$[pb\W!Db2eD6!ppp89.kD23b"Rn79&+,k4-a.1j4can^FYS4>ae,NS/(qXG6jhKQS3YbD9q!>o$.J#VnD_
%mF,@1m(\'P!%"c:GQs=j92C9\"r6n)XI;T>MUdTjK,k/g/^!0_9>I5sK('m5R1N\XF^;?94%XgN"ca:$D'K,B%"d!m0c3DMlbs$$
%k`sCU6L47VOnV%u8<c[Po#h97k[sr.`<R%o_d$hS^,\A6[nDB4X^4JN.'09?.'UYI0iQADg1^1`[$l/T4qfdF2tM_[b<9coZS8<i
%q*RaoW;iY-i+X&:_pG@<8hl`WKHBa6."J0\3tkqO"<Lg7B"fVd.)_TmQ=2+E0E.f=fP"HdjYP6"oghsm8r,4hJt>c)R?ZLm)"HG5
%GQ9S1YuEAkEOimO]WUjDSi.(4ae?A'p#8nhC_3p%m7uJqYU]ocpNec;"i:-#ER,2?M\C2Bm[sOq<k&%H.=f[pcZX-1D28U@V;'d;
%Su1W=\6fV:@+R8)b!6:R+,eu`$#k+QWjkNQTW((s>_;I%/6pKB1CSq-U202r(6oW0N=C\2.4-:R't)Rgf<3fB_JaaVUs,I;F]b%3
%UkZ8;1ZC@8+bs(5Tq+VNAHiO*9\eM5A8_$e&9$U?3,JFH(c,$C(n$7=5[MeEjHoqa5j"Mdn0ETJh(ibha.V.igUb_sZA%T6=:ihg
%lrI"JYN)[<'U+rMFQa2Q@U3TqH;(6`Rt2X3^k*t/M^u-fO'$tT3l1Qk5n?=IfE3$\)oV"]%<p)?!H:Da!a.`n2mBc7NVe]798]F_
%O<6+oeJ9IK![M8%iG?/IZZH&;s22EQ03-M6RO5*&gO&c4fZC-<9*)8U+NC6)>[WU0/=rSim[T>.d8Eq$GIk+\]#5:O1FH_)Ln%2F
%m;=]<9ARrp!(-?IE&KQ"6WO_Dim!fiQ5O2KCkei2A'%&qG=1/<DFAL$>ta*XeOst_=hQ*,=b%V/\V4djKAO#a-q5^;pYTD_QuH2-
%-N%I<8P&:?H&01HY^hSY*#De53"a@W3]JB%18YS&;`QoDihrnskTbC=)B9d?>Ae8F=];mW-)+.BN-4Pp?(-5WM,FQDM3<$#;%6<p
%aof)I/8+UZl@ZuR,>d\'$E/=5C>E`#*QP-W+=L%dC&m+_3duAnpDY6M.e=*diEo-:Us're9?A?NQ#N*t8$7SW9IRiXfp)h'*+=3o
%W7iE5%DW3;OkK$:AH&sT\Q+2-6<)&C$d&k[)I8h,pRg4pqfa,mNW):Kqc?-NrKR*P%qIeOZKYWE6Fmg211i3/kK\PsX&dV.r@roH
%A5q@;O42GYVir34s&?FCgrHX5JQga+O5ZH"e0jiB>[%mU3q4qP0_ddYhIAg48U5!Va7tYN3pSMLUTj(&HH_;s,[f75/N9ReDMiTY
%=,b1M<W]r#KZAo1!_T,5`ruH!9](it(te;=dptO0[HO:i&HYk9iO7$Ba1IQm^=`8qR-7+aS<Hh:SsYPE'/;St0o4Y"OuUj/[Tr`u
%l'Rl&-(JNh#d,:2WC4eG<n\571#S]s.qCc_9Z-%tG`E@?;N7p0*$Z)Jb2:<]bT27\?6mQZ#K2)1E==N$WD&iA\0t5<,WOrTH:;aG
%i>@L/(sU!*(:eE>^tY:3(gHKka2=j8!S^:A,9!sE*'<8PfU7^>dlN>FX7:[8?K8%3F(\N`p^3uO:1NVrJ(-Y2NNl/!iJQ!LX*GS@
%c^<g/+Y;N^fsE^P)E6gi;*JJ(a0eb[SM:6q)*,#@_]mYGXH=B1GF909i\GCS@o"I%A!kl'Eb)5U?c4]k@hKY(o8cTDM8pGJV+il\
%?o1H(&(L&.M_T[9G31Ku2(\Z+$=gH$g&kh=L9ZFnM\CY]YF6&GraJQ9eD**51&?nJEag[+O:4qNjM`Y^`mf#!@]kOFaZkn(lT2$B
%cPU3udKabcnm[<c)4U.AD]n$k(o;6$4X709r(Mh&2j'I*6j?[,b2V3qGl8c;EUI<&@>'U6:0ih!:.c*k.&]mW3Q[\I\VR$'k/:N+
%d[hi&0E_V7,]s`c*NJ^+eAWCdMn#-$%Uc0g75`S>jt2<8JPp?_/I'T+;+h+e78X,j1+1N0Jb&9O=A7UDCe6!**o1414's^qQs3<e
%4DYaQ[USk2NU12p5QQBP^po7V%1[6A8T@#mLr\>=MFZ*oi^Ca*6^Z!<;iJ[0-M!"j(bDr]`LNd7$t]'RQJuBG-RY):@VA1X.0d<b
%DX8@^i-#+OmR0oW/?7h@`@-#OSXcAj^COlh?'L&aN.<h%q2's":OUY)_lA6X^U"T;VCV:1:0]Y@l.!Y-YTp8iU*aK/EK/7;%-SDj
%Y8sO4Xl/6X9:QME^N<dk:rkMr<?NoH1kW3.=c&7paNAHq%0^'kWh5\N9`/eNGJ0_2:0?_=`6>:_?`A^s3@bX1M2sWahK1efKY;rj
%0fEKC>Qp>["Q.#;Wi/'uUMGdN;\<B+E\$EhE+UZ\4k;D$0e,Bf5>iD/0PhHS+AGDA_HM*u@e+6;^/5"'9G/h+*FD#`MYceBR^a3C
%eJX0_-SkZ?ZZ(c@2n&;gZQ*L,Q=:UePF,(tLQO]Sqlu=qUDQ5'0tE':eZNhK7@C`F=ZI-+K0pC6bBSaL\";E)&`@jW*<sVB<[m2O
%`c%obA0_2j=fT%h%O:c[Adg%,k,_#%M\6?AT0(j_M?U7k3SUc_?=a"TZ=.SKR'c(!E=F/U%O8fhL-]?TD*+hpl@ZGD-_b$O4YSdb
%B,E[aM%cX%`kUPDS61N(&j/.o0G8O_gmqoaA0p:s0apFj8S38U^QI/hIUQoTHmTYaKgpMlit_ib&G*f=KgAB7?BPu.0_1i8_Fc?f
%BI0=Ac7>E%?]#N!0Q@juSuffE4;a&+ePkJiL>g?*$kc25fpks-NWXTCN5FKQjlG8)Kn5[c3DMnL14GNEq1S:-X5-Mu*/Du>31Fm:
%&>O:Qj-irm9Z#FA&S'ROKTX3-C$.UqaT/Ik)I_^pU2mS]&6Is-R-_UgXE/34\T8$XUOk8S5s.)b@Ufs53"jZL@M"jQ9<o-U&?`SW
%:\nJW!HPn`%mH55Dit?0"mP(X4uAaTV@GLR]?)%O=-OM>n3Q_k@L]2g<9ke=#'r)iL59#sQg$&k."ah`MfiMb"sY:SlQQ`Yb0tIp
%$T@@\dflKP-r7#(BK3lX_Map65,qNbo;!':;_S:/HJa]1\>bLW4Mb#8,UZ<js$![j]?j-$LW0OWrYPL5[$<P,i+Rk)T45Ne'*QY=
%4$TqWSK8U_:2"jW"5Ao!OTQ-VZ1I#\#1W\^)Q*d'kYCI1?-(3GKQ:hcK:Y>gP8a3=a=['@2)+0nE`j>?n?6h9AZmt3i.D3O+e?`+
%;%?6dMfT!<%SLY:"#DW:b*a+aP`c%,)_nRU)sYGb$VZ%4?-r^`T=lIC<oAT9o,K,.0XM#d.jnA*mMXoa0nk./SQc[,,j[K-pp_LO
%<i31,3.VSbluPd,"E.1&1BJdjNL5tE!X$mRO2gsFToHkWFeSuXJcds[fmpoU^d9KR%mh*_V)&p,Zou'\$CDRcUc)$`!.Mh+4V7^i
%TiBb,!CjA!H'o(k=u9p"ZN.m^"65fU!97'0Sm-j2!(nHFF5d1CTi1q=DDN7Z"Yeg@M+]`T4?ua\2GO5\U]QdUoDdh-8Q`Rqs!EZ.
%3W3m%)L#io7K/nbWiZ>`<8GWM)##Zh"NWE8eA%XjVS0Gps2$sN#'/^1BKXdg32^[\,QS_M`4n/&dh4G)]b1;@mh>6['H6L[_:"Id
%jScbMF-do+GdJ'TmBjX>d7F_0pGWXJAA%R,^OVXfbq^*!pbr2"7A,bVs5H-Rni?4np/9psHRA`g3#K]J!f9eJ8FBP,rXCE>/FeVm
%(Ee]G/AH?S>dQC)mk5tMoIJd*1`-VBH]@c$Bj6QS9bT?OHGk-Kqb&F6eApYK`Kc:24QlYhQ#-onMYEHHDZAh2^\CH?Fj^3Z0/_?3
%g0\Fg9ki#Snc=(ZMtWM;'^VG-7p&0=DT[n2QUrk@&uY]i#9k8GM=qaR.chR,g0_LnK:D]umB7!#TK,cS^Wb'D\laGR1CFg'BDprc
%!J?6SSb3eCk_7b")XB&fFHH(>=b#*QkW[:n^EGY?TX4V1V%misA^+Tp[l*.[lRso&;2)>bnfAeMcM@o?k`-aRXM8;hAV3JKMm0/"
%R@X#;n\n\78:R&+ds5N+^C225't(=G%f%b:`&Y+%Ju0`WanZ>DaV`a+r5J)7m-';r(K.-QSFDlCe["t!dEjc(n$!6^-J'o'?<Ta+
%FME&3/idRUh_AqB38<m-8tn;eIZ]i@ZBCdE(U;'!:gm&.GN*KUdk?0j=K[I/4+,>mo%VE"RO#YlR^@(RnVd8:;T#7(ASb,ZNR;82
%8-uYJ7IeR!N^m1k^\iJLOE2)GUlit:`UD0B9I'=$*/s[t,P]5r&EiEX^6#%G`p%p!!mMitpE^1s,0E!XD]ftVW0?"<"7qi4cn,]r
%qMAj.?RiHugGnJq;WIlBFgCo8D*akffR4XT7o7=\I48P4f%_\]i$"`FI5V%ggLU'/"HAW@AkV*5IJ1VIMf*Sp#\WmCPn=?pS_Y*C
%dM59ZaF1T\7FZoO9bjG-"4PQJIJI2O0Y#U/;@3fLk^Al,8$Lb4I3E"`i^E5CWNuY-X`\R)0'i/D'JTEge,'cgfh.h-^>.NJ]"n,i
%ThXHPSb[[Kb6]L#,C\`g/."1_h[hABE[(:4PWjj9r$pc+:MZu,Yt<,qh\SU_)p[nF!CDIbmn3[$q@g[u1q@WC)o8`G_k;[s,_j.l
%j3U(>JmV&O3U?m`J_[@V9nH^ZTR0HC^FJV\1AnF$<aQc_0*GhC5;E(V%gt@ucL@lG+fK*VL0s?X)\j:$(k-T`[?;oT0D6RKP3ran
%JK1*#b.AL>$1o8j9T%_hNHEi%IefJnH`-Y81rm`-X*F05Gm#F_cVFCf@e`rRGgLO;OX/`5BkUp#)1E=tIIo>50C?Le<V7eC'q6Vu
%gi8?]e-V5mmEG).ECe+599*@MD#$,>^\YV6SVuMebl&oJig4M-*`S[]:^o43GG=lOK;pZg'YdnSBgF_t0.\6s?_/ZpM9Y$0inKp;
%_pJp0NSt[,UN,=K'>lIgqF4b,%)3WhV5CO8IR>h+lcekA+sED,cLB#jf/-?@%)4XUFj#;piAZ!"IPUh!dL73n6DgYms5jqZcXK)1
%(k.`O,*^4=$cOV(Irg?O*<s3K)1F$R0Qr1XZp'XNrfZ4V!\R_*L0l:s]2G^YK?dnIo?Qj+Jst!o^UPB]G+ITYZfFZ@i"q<ldHZSG
%Q^PS9lK%\NRP][hh?seC2#t6:I\H0\cUf8sL@@Bci3u&K*9k]9$fPM^]NrilL.BpF!BPst\Wco2=$d?@1R*[e(UT<qK:gL+-YD8i
%AjV'=Nm5XjNO'E_$T#,onbSCo[h"f+kfA2Blq7;ke+uh-dJA#jSt3&$*4Bg):TV:4BU!h7A5(Itl0H*.9&D'R7UPD0".I1GIJ]`8
%O)B?Zh,K.#q=[0UT@<Vq2dYd+bnh2D4Z>:VDHI]&oBh<nj:dkuZOMqbb-r5ofU7+Q_19bFM9)$bXuT2t?iF*C6Un9kmmc$i`8V.J
%`k@T2i\q($F8-q-:6OM*_RCPO*&S)\Am<_DK.k.%0q8PtOkE+ZS\Gt>&1-D_hqNP=LRl-qZs6Uf2Dl`g5:P2UhHQ`Vj*0otb*;"T
%fkan\2Fq?G"e/E;^$R-\'>.hSQH@m>r$jJ]9%sa!1!hPD=F5mM6p7`9p*+"JgDh\UD_p#97+obsDcqXlN4md>,U_qI5JVSpip1/g
%^hID&^"'bbBBpiI)aI4]=YHi30K>&mQSibJ.N)7TC1Li>S\(4,;6TF:Ia$J^4M>.s5_&qn^!2DjNIDZLHYD7L8M@kmFEIGV6-%.d
%HH@RiAD9l+X"9%Dq0DM:Z8Pk]H+P4M:@u11%V=ZH4YP1\Lu19U0Be.a<_qehW1,dA1s4&Nn!+i9=S9'$hO/Yeb_UP\Q;^@S1El:1
%=AH69_mjl[Po">/DGFsQ#dQkFe)+;R+k>r`1aY[79'MP)Qei(9s.,FAPZ-A9fBn[;d5Aqdb;76-^U*K?Z"'`b=a=G<7ceW#=XC^o
%I/FX*0AJ0^`QlTK4rns8ejmWlkf0@/$79.j'R^'gctHbLjrk3<6ZG@aB22d@0OgZE]F[oq3@?H`h!AG3jJA9ac5S,aM'uas4"'J1
%6fidN0Y\k\08"BqME#VH;T^PbEUmiM0=FHgbJ5+@6$H(1`a&S6EDBj2B!?RBj;hCD`efipO&#0$.=%hHl*[UKY`T+N7*2JKA#c@m
%8mVkOm6&:A<Pt:$'Kn;@&#\L=pmi&s7c!dE;GEYuGo=H8piJu3`YdXG3?p20,Zm]7N4dWH1e(d]8-:^tZN+iO,gLR&hH_%:D[Zj.
%SWT6i),OWe7UDhUZP'u%I0Wo;6^s%I8d,jJR?<iW7q*:O6@L`;k`!1LP]WEjN4c)dJTpCD]I:*1f<s30EkeS0*A<LS<TbT$DqMGD
%%Sk$e-rnjHa[O4mLe@&SZLL[DXg@Oq^`BQN)B]C/V5Fkn[Sr-4f>4jobpPDUL'.n+-`qh)IO9Y`7`W\[<X<>%?:9-B4_]#NTZA%I
%$rYFXCI^4@^W:Xs6Br?%DaRF"Kh95kZMgB?7(eU-;U6boT@IPa:EJA)oAW0U$^;\&&&uJET@hc28U,ea_a8e2i,,o>O&PO+,Z&!=
%%(qDW+?"6ai,'6GFoL2('CuKnJ%&TtmmOnuOse\B)#\?[TV8^\Oqk!f\TbSU$rATL]iuB)ESfMdRDop-DDhD90D`Wl,maH/lRoc?
%FG''O]$(&QOgHpi?.Ps04t1]^6+p$P]*&7q2@4T4Kd8u\cF40*d1WYXG2\EiMEBWHHie+Tj_VR(%3tj?[L3cX_Y_Wd$Zm/)6Vb#s
%C=mprfgUH?U>&GL>>SZf3HftmJ]E25fS'mA4(m1LL'M];-cuV4a*@/UiI/h:%rlpOU3ho<f1<sZR9LK(oRs1_!D'V[TJPo.WeQW&
%SQH](*Oq7'l5&+ofP,J*&HnHq`2X1gAs'Fb(0bmN<#7\h7a<qka8ijtWb7R-88pIsfS.QO:5,Luk:?ZS4>2+u,LhF&KQ6=*\u;V4
%"kST+G6A:==L`>&c:h!1$ck+!ol`)r#bcF49:%M),>Tdp@'C70gR3-ieh1MHkme)p4-)"Cqi)q`/e\>B!OeF$rH/E*)I:iRJaD[?
%U5SleS/.%N0JZ'Ed2`um5&od1/"sl!A(a..k8fJ]lrc'73HQ_;\r"+`QB9fWN6.d::cchT'8\?N8k5u18T_6*1[O9M\eH:4\!-$Y
%`i9jI5pqOeln#_!>!T=P`1dW<`s7B3b[@s`6/aB+1LGN=dA;Q:]p7;$"6>@#1qHI6]+l%W`&,'CEa<;n?%dS9,A)R37)[]82s:na
%6Q2L5FAY\MfPYA+(H6`"0B:BtF\Lqfk]9n;RFM3_HgYh[>URL%ClU7D'7$`]7c_(MLjclhj<o<B8i5r-\[:=P.rb>iH;#jk2"k0D
%%',ZE/Il%*%;W;e!=K2,U_Nnd6:`g"dgN]=:@_XA%dNR>flJV$*kj#q>[G7P+CiaZK4DGHp>#K@`1G.k1,A@ESu_P.D+sY.-Il4%
%Z*WUK!mdtNRmZZT"g'h40$RsTTbDc*%4ts$SNRc\!7kR=_"]TkjbZ-e]h3"%kH`_E+UogFA_dEpm"mik;U0G1c_Z0G`lN5#ktj?Z
%,1!*6LqYrr/d)cmeB)bT+MdupSkJf7.7"*%),M1>-_3GfC85R)C=24m?,aEsqHSu"egre/Y%BlX37I&RVuqBd3IS'-iBs"1\O[?0
%h447]ad/))YbScB["jIl3.J(X(K?kUr`k%-;!mBB\J-=NbLQ!bMph@foXRN^krUj#>S74G5gee:E<]e!M*;aN$uTtOoXW0J1?L]h
%k\"Qgj@#XK7PeZ)k@lV.YV%tf0(L\9/11L)82FC<8Y?Ij,oR??TSo$H6Vo-7>r'43GBF*q#\`?\K.[<m\=OOZabc6>>g:er8WkEM
%0!Aa;cd&.%MV30uT8U!_3[N(DX8B`*fQ3HT$Yg1caiHYY2&p`<,]!kqq#6+5(K.r7Z0)=S!i7X)F"'@6k/<i!BuUC%p0=3/2dl!_
%CcNn,oO?-8Eg"#ZflQ\3$*84EgaP5Qk:W_Gkb<@B2k1aE&4IVgR6VQ[?!;"7ZtKr2'Bh'b:7s\F:7rOsPQiqc#^#7F4Ak;t4$+41
%/dnhE7s>/CVUqQ.IP'J#V/Ygl6^PnPpbg?jb7#6ibpO!,%X[uXjNqHm2c<JlU!%q>-[Hua-+t-hBd_;>Z;>aPFU&t]+j@f_7$gl4
%7o2TFe#B(rR6-6X-^Wr*pRO]-XU$0!`QsG6U6Fe-cn)E.8sLQ2VSH>V.Bn5:al#V(Tag+#njH46)N-4h^e@roM_:*8X;F(+ki.4F
%/C7OAab\;c,?_>9&r)-@q8B"#C]g2;VpU4oVhn]WdD[6h2IL/9?&2)?4DAmd_5E\X\s*bqGG<JrMn'e/.L-mMJ#q[Q)I5lN'AI5C
%Bq$kHCG`UJ&So>o*ceRe-&8_T:89n)P=Cn^eZdkHoh4:uEV%![N@r.1]So;r!eq44N@n"(fZ?m`9//Yre*&7l>;K_oA[ao9l#LC`
%,pJFI!GBd`EeX@"dcckl+kkN6Maj&l@9.P5N@k[OZ16jp!q=<U)I7YQ`tAja.81B1.6)>2/ud5:@@Ine8XJK,M/E5"GQFnn,*0da
%TW?'-@1qe@fVc4@r4,h8c'^c)C+Nl#k>k$8:\*;DG/9S.=+j;9Eg6^5CJ"//cL&>Oj\D?#ac!f;do^bSXLX's4gX9o98=@"/iHX*
%[MR[o.U"<0kKF+L*;Nn#bXHacd7u'aN<]/=1$1e.)pen4&IU_tUru1i!ESM">;#F/R[-jW>l<03P`k.f2sSU^>e+Ac`_LkMPmbMn
%L<o4WD,Pglb%3a@(:CFs!DUjKH7O:D>N"EbgN[ai*s-/A.bcdZq)_/cWn_QAB?5e?J`Mk*jDn&1,>EVlO:<DXIAY%ZL6n:o\:D==
%N&tfA+@(bA9TBK0<\3FR9t#>`jMjnc;-@OHgbahN,r%$8["taZLd=(lgL0BT\9Spq``R3uC)^lMiZ\Xn+*m%f7GK+@7U/pKkk_AO
%RVIAX'-Ai["AB[R/hS=bg=U@%Q86`r\Ac6ec@oJ=@m[*1/\Vd59Xqm]0R@Y*\:AN@+QberYUD4d:GfQe]/%uM/@`J5N5^@+)HljZ
%-OO,>l!p:f\G5n"Z?N259jCi55+g`ulMmN!6:(a@RKjr<&"#$SJdGuOKZLT</'*kuaVjs,T6d*:eugKJ.]4F.U=8;m``p'0]k^DZ
%\edmW`kTJM(kjjH/_kFL9ln@J:#tV6;PW-dX"4fEC^IjF,8#lDls"Q5kE0LHTrdl404?<r6Gk0!9,\1O:6.0N]hK2d:rD-:R^0c.
%[h`1bd+^rs$8prtZW`$E6f,BS=XDpZ)V&+<hSKp\&/M.Q66L8H*#\2\H=&572;Bba*IdEi\$;fr1>$HF/snNI/IJ2X0[q\!*B:/=
%kn[(cQ$hm-kE1K6)!;ZI/t?\cF,PjYBEE3Irs8C#.,u'_'[.djgnGT=^1r=*'JaH]!cC<FK\G;X[\4UGC4'4feem6ZImXaBG[((P
%,t!Z0M_;hSe_mlEU4*^^D$^qu:d`t]#)_qi&loXF=0[<n&S$No=QA*jp]1a!eFLD2$G`UK0Ua>&SS9&,!Pt/3p`%@M6e^O<=J9Lu
%gE7-fcN.l-*C.KJNO]$`i+uh1d?$,[Z28X[24,uo(p^ZsZAk!&b_o`U)tm$s,)p+@bnIGp23Mh%Y^=+ffg_]VEu`q6E^/&.[]ud_
%*Q?U]4]NZ6RJ9G,(q(&9i&cU/`mJ$(Cbq50-31J^:CquYr7Xh2(6i-pM9jNO]2m^9*4e%.B,r;M"r\R`-eB]^)fae>Fc1Ct=unB6
%@V_sgLe;Ealn"0"$]D'X9JC7Uo?Jl->)Z[_LJVG3rI)Nh?u7<i*95QR\pGC!QEeeV<2\9`%jX^eWtquGnUuXs9dJ;#!``HPK.(c9
%g6fH>ha"RnpI%:f<%H6.OS9Gg$Upn(n.ne9O.jC1!%gdM[._O<WpkJp'C*?\OA6dThu2dYCMKlDXs;K6E</GJ5deV61/9E[BljBX
%@VR(>j+q92>"">03,=W0=Q:!/N*7c/\bM(497b5h,Lk`A<.6HrO'#-G`i"O0&h8CKdur1C7!1P-X9"oiS-GVn/##=BJQ5Qo=c'$#
%HtSmZ+_5NbK*6FN"U+A0`hc+4.Y([i'DU;u>;nCIJ9W9>W^`h="s(=N6"poI7.lsKJh[djXr<H]b="*>,V<0#=mB+q+SB."Vu^V+
%`PZ]6$Bn.g?&_?iJ(JYH<bO>D<;0grbeaT",&*$*$P--M<jXRP7?_L4>5*4U6u.LrTd;l]b8l<qNQ#V,7\PMTD'Wdu3YI#u#M$+7
%BM"_X]Od?aA1YQ57\EK+43)TP)![f"<,.kQE.og5iFeiSA54hTcbaNPOkaOpIhkYh:iqn#EU`E>EV*E!/A8P'T7s!K1X+LXR:]e]
%p2$VZ`,"R>.S6DjaKr7h$Eoc-+t^0N?K9<L1Wcl-=f.%,N&mHmN3#BZ_&:5u0]jpJ[]i(:EYa-0U7s8sZRk`9#Fs$^'Id?(dNbK0
%E,r#<B(IdY*(/Tho1]jMbqe_+O6`lM!1EsD4^2$\"Hj[;2H+=o%[tXqVWBM<\HtDgR:Totk0b],O\$3uJ?(G;nP5%51rLqSEFOXN
%QAA]-+M"HTln=4D0YhLMO"+Kp1ZP@lAMZ4;(eiMXHjq\9QVLC>#[B:ZV$A"r2N<q0=$t/_Y<qNIQ,;UGQX![>9;hRg<YhJCWr7l+
%9D"$p,897%H=bU/F(A%Z12p<fGFiLC*Ds6nO@[q@:c;/kZNJ>sSjf)_^p5Jh,%\qa@EKq>_f84GLn,6eCID;dgT[+R'*u'%a;tj9
%O[b/WM6cWXQagc6b0iF[onM[6a=rn]X>FM*biFP*1Yt8N323-?+uRd"=gG:n3&m-RChsA"2NfWIQ=tKFP%8"RK_/as=UJ25$UM1R
%<N;&3H%-rE.b#MICiU5G,F66g6>R7)>a6KP6"K_BZH#fbETP?)NRU+rL6+ii7!Wi2!1N#k#dTZ7RItcQ?s41R01V+8[P$86Z0L<_
%F6JMGJ3XNO,.9]*-:^W[7`.KuX6Ktf<\D:'Ann(g4BW_fWOkQ]X$\r7-_@[>-AlXA?os>o.1P69^>&E*:^.8\VgDgjF@]t[TK2+#
%o:X0i$,r'$\aU.h.p"4p?*r(SU]#l*ON4:k8NrgD7FtEA6h1gs)YjTZnN#N9n:?3nTUEl8HrBc>;bI7bC;Y],SMAU'KYb[.cU#/'
%da,6t*/Nau-atRl&i&Z:;8UOJ-jfjpV0"Wg29l7,R`5Ic03n3\8V.6hGik/E5RLo)<4XkN,(]oA/fBi:MMb1<rsWKiG4#E>.oAom
%I>UDo7XI_p@oZVX&h/igKJ(&uRI+Fe6!ET9.qkZM2Pe&60p_X'.)#b[jFf2.irhm(5XV7OXeo;TGRq@a9m9bFfp:4r,R+;t;6@>A
%4M4KW8VrL=IR]PI(+1Ii`Bnhq"0)(CRB=Z]jC/h'JlJpqQ9'qW@H)ND[=n"PJ8Q"i]g[d&'gq#Q)<)#A-RA@>4r"T$n5G.!^POeB
%Br8.XkXL#?[<&.4],\L7g!!?)=bS&eo@6TO/FhQNij?e.S7[@=M5Z^/!0S'n&nLRpI)fd5oVJ4@&$O;EjJ<Z5CkPIiR0BmE+t[?E
%a!FYIR\[L6,dWSFVRXp>\Q]`'@Ic+4:\7h08Kq'd;tM8,dSq\ohi%Ub_ZL+/PfYF=fq2*b1IY])"I;=#(bdca'9ORnHlaFn;#[4l
%>lMg?jV<m^hP3fhAnl3PU(O*n&9An+XsE/s,]P&iKj9OU+mrWM[=_W+5SlDIA))#'d:j&13-.4aY!L&jl?K2g@+oc"cDRE,@R\E&
%J7i8,A-l7,7M=9Fbq,BQNfrQ6?bR+on]6n;%U)+P@&_MML6DIskr7O2LF]31VMm]f?=jOr7-'S,/;=MSVr6WO!d'm%iMIcJPG*Rm
%IFgno/sJ#]ct'gb,)knM7#=j5Uj(\#cb]Z7c7jWZQOO)d$C>CtiUsG7A@^>/[$A?h&csjt>$u=1^1ISF2NHZ5_ZXFqjD9JtAu<I&
%&8?tIg^E*4#%n=X(iP]EiiV;pAQ0t6Bt](Y/\O/B27K>+PM?_#:i>pR5Yu8j"iRci&>,>d!Vg(MF!Ca;-,*JYFY*uS/:d7;#"41l
%AmG8tV2!N-N5T^6>m4)!@huoIpf$#MRga!fn=HDe)+m6)F!K6L5^+Zs^eTP*br\dGj7\YZL;eS\Xk3chq`JWR#\,k$RA'r\bZ%5h
%ED(n]X@A#H+K5Rn0ddX.aGG:j&PCt+bcq]b*^FrI<!QL%A7je$`B(!.+%M(_:,Q9NcPa:OF&H!YUHk?);$(eRP6E_+.TLBnG=%E3
%&H)$:=?m2a8Dk*,$*](2$4O_C6kF%iJIf%@V:I%r?QN%c@r271bk]b[=\B?c+G35XB#9nmOO6U'*[^,hRVC"@N]V@j].B+$%86IF
%kpg<0ASVP%;X:>(b<1"l,0=J`k/=S)->)d90qD/S_dPhML^lk)S9Eka?TlL:3X<WW5bNdmEZg#(]S7&jO$hmnfqfJ_8jV7!HsM?]
%.7A:[esRURo&+2<T"AH+i8Q4QBe+':l58WG@LBgmFm$qMSV.T@k%Uh/8Rf[jEIh^X@o-_RMT`EAYbqR\<8ocAO07`T&tb'_06Q#3
%fp\nqObuH%0S<:;8f/nq3qTFA<)K)F:U!6Llq!F-B-O^S6QfG/C8E0hC7dR\1FRefMRsC4Qh6`-/C?EYF-uG(A<Y6J]-WcE#$KmK
%Yf<UdB(cZKZGmFboO&pa,^6)@gQ6^Z>cskZL(]&s0St3)hhIW+2DnFB*p-OtK5)ai*6aHo$WiuRQ`6F$bCrUOF!enDQ;A&e1JIi[
%f4ITdVJnD:WAK6`GYanSd@\VePY!'$aV0Dl\<Iq19-fbSdUhq!e8d3MESrQ(;5;aSM&aD3iF%QhpPe$]OD0L9-.BB(`5@rL]bJOj
%7Y&Ca4-l.(Eh9/..eRNJ$Y7!rPtIAT"n3`Y06nWn`mRU_HBP9KR+[>edd>>clX[#PQP-IiSg\T'.D<Zm6SIUsjP/obj7E1>$3!+u
%j<-ZVJbE:\E(SXb1XlhFWVV1hoT!GgV-+4u@[\3;9@P("M,C^_LieO0/5mLKSkEd%4l\TT2F#J=[Na-U#<bQ`E2"#!TQ/a<L\WI9
%.KF]&O_(bYai$$4WGfp66f,=GWC.P3:+04.ajGth-(..V'7_<i(%bBc1")!"du[_>(c2Q1/^iI9@I=IMOm]&!=t!PZk!EG``-XO&
%$t:OnVE@M9.km3\Hmjk^V&tSu0[:Mg\e/58:*)+kQXEu'+AskS&g@R*0;1_3GF)X)kaG*#"n<3>G@\;Jo.=3=-t24`V(:+n6L&iq
%"[Ql-RKVOV.`Y(3d=H6!]X"8(BKTpi10Kp!6]>>cV6LZEaY)X!0`*:Z]?q!C$r.i>9iLSXOeg6bk_2\TnO!dT/]dtqp0(_L">g7C
%?'hLE<tBU;]ppbekiI_cW+>Ql<#9J>C\B=$eVt).6NKe-]ASU5Wurg,4K-_M5Ed2r9dc8Xb7uK]cJ(n-mac5/8<=`pj(,0$RbB*a
%keTLr:)qW;98sDCB](BP9?:2F)WFnoQdUe_QUWS.0SCCJj\[L9VCWn:!O8Ell,0>s=-;oK:,QC1%tu&o`HS2".*c[OeIGJOq@,KG
%'3jZc/YKAeNgIKV`$:q+rla6%8#iF1:-_ms5XHX!*9tQ%8JI-!<RKiGe76K[nfLIoricIAPejEB:,s*3;T5JulAsM;GH&MTi!@CT
%d%QIFSfOdh$rnC*&puiJmfiSAq4JsPHDbZaB1,))Gbtfk*[]ZojGF7rTU.38flZApen\Ob;rPs14[qm\MS27TDcD/[oDlikKG(+$
%:r7<UML`UcF(.Xe*TkR.OTcXa6N>#>&h&ca5F##>>7j2r,s26LLl*:kN<gidO5%Jg#S2,nJ[kdK)lU5)[CF$9"DM#s,Wj2uVq!&^
%Z\1X7poO^=9["/orj:*ENFU15&rN5PL>rTfTTgLL7,^i@g^Gnk24YYe?dRr70Gu:j/\n5,/.eA1W59!K`;`A:HU4TZ.fncM<=b%E
%JZbgd1c38V@9.,<;(ARTS7Kuf.%sA"-1nu@W)kA`niOE5l$6XJP&NHG_:QGa9KH.f!I#^55lodjTp`[r8)FN%$E@bEQUkdu\\CZs
%_'d,;%3VR%CmD;qK$XO6;@0Vh>=@WIM.1H>@On)p$2%EAOt;\-NcgYP.H01b7dV;ca?(d?eH6l>T\r3E<baNM2Q%<SPSm65=>gOd
%jP`J_(VcmZ*1BQ<P[:=dJ,&Y0&ecB'#[0gtK3Y)M+a8NRa9;YuQ]a&JG5;!'6)80$3'SVP4J6uQQPPemAr\ZU460lBi&?7^+<ZQ3
%:%cH(*$n`u/dEf%>f1#adSV4Q?BB=8%TY"9W97'AqrO*-0MtN',OYg1$C(#obD3sJ:eJre/7<K6Gl1%F(t>OmO)c7]7'NS@cU!=b
%47<l@e9)o_)B'48!CHfY+?Yoq+\@tJ8F=3R6ICN4+H^IKi(Oc0-HC_YAI4`(-qT#h]TOmP.&F52o`@nN=:+bo]!no^ja@Csc$:Cm
%,F43R3p(OHj>+I;<rCCFq'JGCSX;!]E*280VYUuL.n9I[$!J<>*N3aQ\*Qb6+VZ[A"Sn;b=oi["dc&!+0RHSBSsf"=`g$ZhW`("?
%LGY6o\P%AM:m.&'_[(P(a+L4>"q_K*O`/9A^_u!unL/r?d*bg65V,tl%%!SBd%96RM4&\';"VNPPE^qq%MV^tifZW19MPoi2P-AV
%:_K+Y)oX8.".;Oko3S.lcaZ-b'Gk>$A`1Q>PC6hdGd4D:o^c!3(Y0Ue&`TL3`DB,^",4tHcGb>FLI><r]NC7(pdrmr!EkVuoa_??
%I;3s@,oeU-,5Co(LkmTQ,0bf-)nh0K=X`qGm=K[rWDo["4('8O/C9QQ1<Tra@p]CgXqmR!P"!i%MD6\"+YT.cEW)VX:e(d3k6?lY
%F:?62?2GLE*)M:19i9Mq=@+:4=:K@A$b&/q[noh+5S$tpbXV`;),FG(`bbj#CC[-ao?XWNZO.fYBW:TYUHBj(gf!LS@4.B]eX:59
%^>q8j/12-:^M0kA1hbAu0E_lmc7JC_mV+XXigHY1-r^DR.*B*t!:$Ibg*=*mU-rJE:u\"%;(Rne'.9B%%dB\Bb<;&E0t?!bDY&T]
%3X%)r<FVmr)VYo:.=hDPg51_FQFt;i'GSaZT&j"4($s83&/5s1a^lW;i;bEo762-t-f.L.9ZX^(1Mt[f/'j18#S)b0eHC,&)0_Z-
%6ZH(gbT)-^pnmBcT[=-,M.;P=+<Qb*bOh#6)qPAdNRJ6.3+K7b>XC)@5_os\8@7WTMO=9]0e&>g184p[4PLOiAk:%_dk@@L0:/0U
%(L&Om?VqMQMQoPZQX%YB$o*BNAgTmOI,ao<aPnWf(t:-"6=G"fq'8LiG3(4`6_9]Zni[a]`ns&6^>+O$k=S^h7S,K"+;!it/^bKb
%]GV`r@8N<?.-dGCP4GTW68W)WPYEU41PqsP$(.tKd?PNg?9LP'r<=3q@&n7LJM\#olOcqFZMd.TE&d=%r0+Bj#sSiu<6pm7N4/J2
%Wa@A<!M'aEm&WuIi5!bf"P!A/bfY686H'1%\B)3R,s`THPrR\7KiN.@Lf/M3?'M:D);#9?-^bbq>Jpq>I!MHN@\uGULg,17#=S=e
%:jnHQ&h9jg\h?g&<'>9Jn<O$ECA&^5E6i$Z1sO2o]g1B^(i@,Q6`dGIJ_E5m*[VVa$(#BJW_djqHrS/((7,DTY[P;&1d"9(5aj/t
%'`#-/`\\[`*u"qlET=M@3JbHe=A7UQ0o`8eEgaBnkXfHe-]!4aSE+$*(0<g*V:!=;;5t^1"ASr@-$PqGZ!d&7NO]TV>Sr_@BhMqM
%GiHg]eOsEFoRi2foj!1KWhNk-CmgGQX?b*:b4dIQj]K16#DGJBXoO+thZ<7PWPWb^naQn#OF3ck!LsGDZ9UK1<+A0r:ZGdNm3HYt
%Pu'@,n-`fIV#+T%iVX&[_N$(&ff6#LWl<O-8855U&H_%0/G?VaB%m-%?<&dmR[G%nlU:&q.i,We7!3/-Laj]G9:pd*9BD@(,A;q3
%c3463*o.*dL'\#BV'f,Q^uci/MbLn'&q+,AUsZZ%)`IVN*)6m<+oS$\Kb;.S8l[s#MQgsmWUcX/L*/NJ.hb?E4gFs;O[AXe\S@hN
%Y!bV8?BITU+ZCkC;D=%!YX(p"/1N`]XtuR5Uek5NiG,R=[Qknu8O>"t3+tQOFTAY$ZG=^":Xq]QRX6k]HV2,]bmPhlX$]H\]i5Xa
%KT[F6TP;!5_:RBW'fMiZ:f90T-CUVV$<<S87,HFVR3O``BEs-MU@>9Z<J(R7[A""X/>;Mj?AoK`bSB/g7!q-tAVh!0MK>pB-t2Ih
%P*a[jfNjnIg&m^H\7hQ]<!/'fhWhfP9)iW9;s$db;AfpQG2kU$Y:M)&+>'FT/!^T*P#M[`GkNfLX)r8W7^ahp,pgu%3j)q0W#O10
%;YB%CrsS@%EOgr5Ns4s#Z5SFc8h!`b7W)6Ig\KZjU#L9MeWB+UPh]U1-kVKTm>#i>3eiS.;4Qoq8bEe`qj,!r=qGAe#H%mTi`s/r
%R<KuZ[54pf5e#,1Jml;-SVM&7(-dCQ&e%^Q9mfO[--eR6,u2.TT2o3q\3ueJ&-YbnlrueaPiTd,TMAI+gQE9-JK:miK(pFfJuKIT
%buGqf7a<Up$rW:TkBHJ[WL5-!N%Sm>PG-,Bf1pX%_Uj<eMi]4;gJfit+QdGT%J3e:=lNRXRl;ShWFkea"N(jLT)&e!T^ps1TQ-Kt
%G>BVsMZo'ZJ?#29EQmngX+N_Q]8(^$SLX1]';1`pT`g)AGN(0^m`oP8PKQWOVeELP3F3f=@X9^RM)rIMq<93j<>;I%P6j"G`/2(D
%:=4?QB5CpbVs#@e`ZjEaQiU89Yk6^5"GV59ioX@#gq_d96<#oUED>7/C7l5WQ(iJ_1r:AY>1cAo;<#/&2H%$<fTJkd)>&ML\2%>U
%6hAqr8`E`lWNu1ORbO1(Z;7nc+96C,d\(gq6=S0^[b@/'1,I+0%:iGeo-@]LDCjp28f_e/jlR2kSVndV7)I,:oYR3^Lnij%R$O)]
%8^MEKF>IO;Pu(uS=Q6Bf!k$T@VJup1L(;cP;7=I'DiEpQM?``mN$X4qeTm'<d7>+<Viig/H+E^VM^?9!Q%+aR;(A*p5q"Xq5Xc:+
%em)EM)=U&K'[p!4%T)jrYq^M:!L8LPWW5':WL6V;$QNU>=[i99L-nb-HD07P6B\;"nOP;.-qTuf8N1%&K"re-Y@I&W9!Gn$-N`BP
%Q&7n(Qt7Z\h%9_9Qm*(Jam#lpVcCIEAiPt0'Tn\,fnIEYaq>?.EO:nX%>,aMahLd>21<S1+<=+11NHPa/`E[sZ%KDO#)(X=$O$tV
%W]l1JE=lJZN$[]g@G#\]P%t`1%fhf_-L/cGa3dH&"8#fo>9KH+bcqKk1,VtjlVrQkE@eOcEKX*tQ&<[N[k9$bak\.4G_a0bQ*i$&
%XYa$(,r_%'S`WbmXYbpBSTk:XBGB-n`sg$;.IEA!J4jRZUd#-TI@-`O9%4XWOeD>lM)81-)@@S"5aMJue3SPX4'J`("TF%/?jM+a
%4/nm?6/nm*mt6U`mS'TLCnX6P]7tpGFB=>a88@Ai+]h3Xf0J_iFC[68Zh,u-U`r+qTl-q#>NEn`8:S!#NQb6g=Zb?e9Z"IlS5K8W
%1tJ%6%'o[3'!m1n<Y:m!N&XHEM^L\\E\.lA.D-5J&J<_.\074fmZPP//7*I@]WYTjq3?7&dT8A)!'I"VF*X/Lo*"=bP\Q_eDtuuU
%9`gKU_DRNCNUSNsY=^:Lqk@8f.Y;R/N\6(G1fY'2Gdnu.&fn+<!?[1XQ/4$l3YWhXl:0)_a]O_)LPbWo9dJAFGB_(B8fFG]Ye430
%knEGL/D:t4[1$md;n"h@kGB"meLm/6nbrMCQ.B8RIgj:Phjlr.8:T&mF#25=_3ZkN(eW:M'hS%Y]9Ha?.&NM+9*(ZAMDTWuH]]g-
%'ta-B,!Jn!7-6$WI\JrS3n?*.03lm;k:$W9=selg=o/8e"VWL[U)-RH"=@:9ML^>Z-LZ+i$;^:@V,'5#F*)Fo21ObK=a+C3VO8`*
%`l-0!7$"LE300_io.EJ2pckZK&uM*QetF4sWl`CS1ap9+EQT5hMOJ6eA!rOTfEWmdid$]FLRB&5&im5%R)aPWm5*-Ed@VanC1:OU
%]?5(&S2J8;3mhTu4;s&LHRp%u-I8fj?Lo1IVg3SsY&@]:TF<lgi_4rmE]`N^,%e/,M)5Q.ZA7TXh_47B,<`M-3cUB0VVI1hJ;&I.
%N#%>pJ0:]7nCuD=_P_]h;.=09`CcW%Q0?%2OVHqh4]U&hk"TAR1GgGAqek4B,iq^op]tnsKVh+F&j$C7_B'qD1tcN@&GF`WWOV6b
%j\e=pP!BM:oX1=(e5N]RY>/.MM+&/_Tgc[b55CAbg'OPn-((^?"@$COUYJDHMNol)dQDqtV/TFBPbZagX325P[CLb7<'mGr@.-9.
%7<A`nd=]?cFGMK)ock,P^e;#P0/"W4N5]n#@5KuSEkl.NLP?^!`k>Xs)@FrTVaG0s;%GIh#[iYP3fV\/\b4<pc^.P@ArGbB=.r/:
%9TjB/"[Q%s1.jC_,Eu&tCR/4i:k8$lkp?bmr^d]mHVL:DT.eDLWq5<uYdT@r<>dLV:1b;*Lo7]>5Vl,#q4]3t=FJl=nO@bX]2U0[
%8:i.2)f_JDRG`TZ;6%R06Ei:;KUPbo`EZUZ-U>(GlC!i2Us<nXEq#Sa.Btnc5;>/p^eGkr8`l6J2'i8qdW3QeR\ggj,SF+MM+d)7
%/QSuYHup6`ll"asSgm(bjBgcfR]1&C>iJZ`Ad^'f<mt&``ri@H.hVrLMkc)1oPl/IojhF$V?4'G",SS)C(rU::3HajE>st(bMb6)
%KPN!17Dqp=jt`$>'O`S="A5'7(7Qn`^$\dljo[laSJEM6g`ltKrKD1LSLm^uAaZOc3X3J=JM)h$odE;d66*1:s-<BI1_EZQoIc-'
%WOTE1p+R]]#]g@'kmV#_"Xb9O;Pt$k'S\_,P,N#<fuqQA=>EK^(#o&-D1ds"Y<aVQVe80d80m=%hOH46\Jd<tb#j9NYe8@O$<Kgc
%W.:/K0P>lJ9'b*pXOKRE+ZJp>%X&GC@mT1F'80_LdXjiO3"3?T5\kG$B$(R^PTVs?M9W1_=42?/7$c?Fjq?"C,F<#T0Qu%:8DR^i
%^o)5qJ/oh"B,Xq[S"Oqlo3S9<Q!/A%SZrGSmuK-lU7PU:Nn!jYKjSh3=QhEGf0Q/1"T1a]%mgR=X/NW++m]@&30/bO)1=`5X]%%o
%3"<uD5V3H22@MuF6L1X)I\.O3lg$APrBF?o#hM?RMe#6d2#rgY3-DNgj*7:@B_?#]bEe<K7Zqd=4X@Wn4=G5Q-%,77cuJLm.Q2d&
%P+tCgDSip@5\Gs"Q@_TZaZB'Gj@=j-JUVG)=/C*c!_7Ofd%UU4>g=n3qW401/(HL#[,ho<$ogeNnObPsMac`1/CYAU.#qlsB)8Lj
%[1J4rX8(oRGpP_8GGLN;k<3f;c.!m<k<3keV(.UM>[D^tKk\rt-HMsTArB%:).,p)9eg:YZ4O1nM-Ppdp%G(P;lIucnkhcDKLcpC
%Je\?u)WMb@C@Yg?r<*1]%-+1+/IS9[@Y2SsA8i^1RZB,<2)MO?#fTtBa4"cO,oooQdB6_%r14%cnB=:8$.NMim^s+,h<)t*j3HX5
%>TDKH-:7H#3]B4X6?TPE8Z=]Ank(XMG67J4.,]ic"=\13Vpd5U'+I!X/!)F@(G[O;8-JBfpg>3N`CC'o@%^0V.'jQ*&rS!q$8;aR
%*sM3Y/Xu5jVk4+WpeGE1,$!2jiZpZld>fp#Badk5YS(;%%[$&`E6a1*-#pZkb\'=5TIVD657o&+2'<6B5YTR-?>?Hmlkr]q2DqCO
%k!NjFns*eq&%NsK#c:S<1;rGekTs!VdS<nS1bqHM(3#X6/Dh\:bL!<<nPF7V]4elKUTrL(5f.3%ge>"!L148KE';AlY*[.?4q,pb
%J4p*3:H[%['-YnXBP$HK@e!9`#CL,R6T&'1b'2+[1Bt2?.s![pH?t>;%h2f8oh5d^"g1=OH@pbI?Uf\ll@XD$?O="dnKb2%'D=19
%#BcR[?_s"f%'e.S(:&KnR7%M#6Ebrt<abXD>1$!f8I*3s&AjA+h1`%XG$'GC*Zf'F-(7]D@6?W>i<b&N0LRtM`,7ChQhFnXImQrj
%NPs>*?nS_"l9Jjrpc+Q,0$e?C+OW7bLrpnQSd=J;"G%am(QI^7?JdKNVPrPX;\L>oT]NJQLDNVY_L]^%\4_Mg%q3Ht#fI8c`.i`_
%'UfB4<T!VG,dDd_e:9H.)L`9D7s@i,]]@5)_ou"ICo"B>djnGH6Uj3^lsO:&n9"XSAtW*u,-9>@,TqrX&o_8&T86&V`MZ.\$"5DL
%#0$5P+lcV`B#u4e%9q&'V.+kG_F\m6O^t/ZED#6#.nNo$-oeZ>-=,ogmA!9Y(M8n^+TcX]MH%8_G6]VFUS&gdMisCG=iH>X1PV@4
%BHe5,&LR)T7!DPo;D[G_#UHLJ,Wn$h>,p'hQ;g>:YM*p1RKN4Ad275R3>!]R,#m<NZo$4d+'^)T8VI!g6uda6i+qDdlim`-Nb[&f
%B)PU)6t4hM,*b&h-)^8rPLh:f9F^>R/-hahR=K<("!IrBOio:)F1nB<2%$uX5>kQ%JlEr%h=:nJX%:X0qFrP_0-`SH!Ct7"9akq@
%5?Eln"JLG/_NLja$"C7)RiNg??GpM/g?[:XQ=tFNGGTtXU0'b7&coZkC<pFAUn:1H&YiF)MN!*f?sk^Z>X`*H?U_tV6.?YQ#lUWf
%P`02(Lb2Y$e4^KhX>X^=P#b9uYc-!iL19Ef6Lt2nld@SI':jT)WRrfXV30>mOT*Vtg)u$54HdNYjCoq%DAXimJufP;d$,r@Hr0>j
%JnC!X@&0/*\J.(VM$-Q'n&a1#)0R(3'tu]L7&jC2QSQ%($XFM)WE;bL<'-=,G];]F4>^&c#^j<?FK+?p1`k)oK99fAT"`3jV@(l3
%_<bCM7-<_7+UTe(4^kQ'D;n=*`)J3C(n`k:j=32PI'kX(MI5A/kEQKN/>8C`oN0n.3!R;cd7E_1!prP=:A%<BX6U[UY#;a\`8Yh_
%LpK@!(X7?l:6,Hn@[((L_<^1CdS5JL#]iGG5klh<2=/f980+/0N]X]SBN*qA,nbFea47+u8`<0b`f^o/RRp&;I\-A:WBB1o.0hu2
%(888fZuZNul5Y'mP%?SYGRL4._uf]I4W@oh0&c<-&rLAHkV/Iub<;4i<1s:m`-;Z61\)4km(p"Z[E#6f@EZP.[)\T34-s%`C6'Tr
%lB`di..JQb5:IW&S9G8A!Bg`g(NXt3bdnI^`-W%sk[ph<(o[_@dK[qC"ueTWMW"bJ%TF(5B0On/n4RjbnOhDJ5n/@Y_:(T3U4m&k
%PC4)j-$05s(ET#ACm:;`m)Y;977)iu6DKD@LM)FD#Lm4-.2Zmcp5=UaoP0!2MbH0Bc?-3^1`@aaIEZee%(I4RU.HNL_ec*^3se2+
%/_5<O"t6bKO9Tu/$'qX[NadjO[;ll*4UWjaFj0$;!>ZtJmm'Hi-:,dP?iA^_@h61'(I5%B&hZti]lS1%2paKOARdQ`P]h:.#b*`Y
%'U)Z/j$Z:Z<2moSiYW>Jq%1`"PsFS7\MCEl4j+S+krD((_@5Ra<=N=^HHsaQ2GmMN#pC(::)m:6p*ss3Y*][\ed$-dPV3j<)))HK
%UF6YQG5'4dH(c&e(G)8P5TYa\KdGe6jRr,OJp=7j:UHkcmW)%N_Pa8[V*lt2'ki2.#hOmRN(cGV-o4ipn2+ImYg#$bKplXPXb`tM
%j^gmBN=jE8N*(G9a]#Ukpc?[8RnKJ&r#I8G<*X9::sNn::$E7OMoLuE9)h/@jPl+KhG0L8S>g,?:.BM@G)'$7LVD0HEh2IrP>+"I
%,1m5^@Z[G(_Dk-GAe^QW1#f7#:9KmSIB'K+l!08a]JNOHKceCLjLCXoKXeWlHj='-@#U/EE-,->1hb<MYRU24-P\FU_"8GaVCU'0
%OT9s*Q6L$3Gd=ljAf@8/c=8RRRT#L.Eg7gd-Q"YILG.m7TcS:&!V1Cf6o&7J0)cF#Lp14,f*LTj*EY?TG9r:O.&O=09??!YdOc8C
%C\PtVp\MGR_BVij7<p#+$jLeEXCt7a/('[Z<"Ld#Sb4[PdCfstjI$>]!4Z3:M(U6VZ>3`7lopM9TcPI#=/$QFM1$pbg)0Mp7FJju
%YLMVR%%:..)1"1q7'[G-O@d<*`h%tNNPSjW/E(#r!3A003_h.,5tQEi(/!iqTW&FD.%XCsKp<2h/+b]C@]GAAL@$^,24X3s^k1>#
%XE7MfJqs&=iiNcO-ZIU46[]6_U,(BI/)FYJ`i&ka,R0F&+DrF?.gY>E@k<Ec2K1F]oJ=$J#\Q(mDA0&R,TVQtrp$q.DEtRWBBkUI
%Jild#h!Ho6i'UXP7[NlWT-`i'*RSE]jq>6Y,ih5M*(u&3MOKA*=7aWX1O$/V/cf8HYQMr"eZ%^kH;KZIIcUsUSufAJKXgbjSdYBb
%\@%CWTf,41JQVNL1&dDDI1o,Tolkl+>9_<FLGZKUM)s$(g,I"j(sj7[o>'>.R<MLB-oIN?R&fW+B]d,)bM<nFNWV'4R5L9j,#bgE
%%WXh&>H0DJ15EA0-fl8f*._4D*EA,FTXh?K`Z,.eHtjL>?KXs,%MaH&IHlpUR:O:[m;E6r2b:@hbb8pKime%k81g?cZB(7JEm$H'
%nE#cN5odU$;QmVl]t>mrG^6)&<?8[kpd[)^C?T[\Tl;&okjg./A6,_FM:@T[N\76K;rQ,/8t\Y8-uC8sa0m9qalRL#'tC\%e*4[[
%M=HXQ?A:O0ioB)j"gM2r%9nk&ESC#D>#*t4+IdnI1E0\kQ-=8ZedFehQLh;Uc7<O1SsQs-g`so"P#`X)X'm#L*_-F4;-#^,>*<#c
%=lg29;^FMiOC$Y;,JPLh-VF2YT^kK;1@(<Jj=q",-]br"e[(BJP[bO(";bAc_mn==MPX^La]u`:%8i_^1oV/2;kr=hTH%s<Bs(Yg
%CbJ1@k<_Zfl.H?:'3hilac1?.i8eUJm$J]\*%?G$V;>.g;M[[K:30rd',Kk@EekTRc;Q?@Xr/Jo9:cM[Wt$GRZVRO4EVontcU0!G
%_q:Dn%dH*;4A0e40d&J1)Mt&&aWjU39<sR&cSLF*F#7o,g2Y:o)EG-T&?Ag+O\:k!8.JZeZ1gq'CG^'r&2I1^Oo'=kFu46(0^k(=
%aB9XgYZZsNkFDGb7Lh/C.L^rl6XjMP;2n#)pr6-mc9eBs3$7H(MOaK9,Y5S*,*uaCeLN<n-)*+eQ0[U9fP?a@NoIE4,%mbh3WZjn
%&pg,#5ib20PG2Y/o%_o7`75_k.!.\R;96#+<"S-$M?/`&SnI1m<s=\\e07"+>E`l2L*+J%n4#;33"gjBqDS+nDF#Z4B:Yqm_69QQ
%F$g<SGs%!Z$;p:PU6d=Sf=9jK3`FZem!,&T\P09g0"S\b*KSaC<2nn#QgjML*=',Cno@]tj0>T^$oo@ZT%>.+;..&Z&dJb*O@0a4
%E88mX)K2/&RIo+3il5[DnMU4ZMV:IX\&K>AU7Wd&)J^=9-k7=dNPf&H9>WFc!G^h#=U$0c*+g]jqAO$0;C.RfN$B<!<Zfd'1Cf=6
%jI7ZJZ-!+FOm!qGqLF1I+SSXM`4Ib\71nQ:740k8kdJ\X+R23AJ8kjL1/sJk%Vqqp6n)F^7lpdpCNT(h.H@3L@>\rFN\,_>jB-/5
%eLMXf"1lS*aPmI,b/?us?NHI$(kZhIE=h%@>/Q42,3+TES?N`3:]h0!@u=JH6.VF_OI-=G25E4'7tK&QiCrCt`=kLV=C4%8XH_[H
%\_&VCHaACCFdb;V4^q_uR!9lh-&3+g3KS\@23Kq,jW'#0%ED[Q_;[F!7g]JS.H7Vldi:aq"W#oegG91i:f'T:_j_iN:,a1Jcs1H7
%"qWEqWr-fD"EjM/f^t_(&!(4?5cV`>A'7JVlu:n)'*WoMY`5u1U1=<A\BTO>i^+A"%Z+(W7`l/fI6!XT:h%?4<cLr&_nk8=r4Xo'
%j%+$!2.S[=ASrtP*!O&S/uW6ug*Ab)8IHo],uB=URh@1@hcSi&3!iQYM@,-L=OqXAKh',c2GeYZ)h#HC$'3;7a"ZJV`J#3Mb`sff
%XgeQALLU=0_8ZbAe5b<J_F&srf*L?/3PQCS*%>VKDGpSpbZV"G&1&D\a>HtkiP>Uff')&M\1Em!P`^#(n$8K7)&s![KMc:f"qSs]
%\]P'\9H^S#%:fRNi)52U-^)K]%L#Xe[&/NujjZQZ(+NU"UhHog$5/jA?<e,Z'+81^*k8+K_`A94UN9'H\A^0a(q?J5kW0)VBp'bL
%guI(s"G,SIk"fC#GudT!K@@1I0mBgGoLm\H,dubP"$E@$>@OE3!U^8+X<`>ZC<id\^s2-$ptld89)(@EV"[;p[h$uhh6F^t:!#,!
%?pHJE4`46?hl70.i9s'Cl:^QS/#Zmk?)^]9F&d?"bF?(65:m9(2=6(YWp+f_&\lM@$Lldb)Xfb,OfsN:[UE=6IHP\ZLft#[L9*gn
%3+IA`e9WUo]6'[a4iCJs=Ppu9Lk:f_m4ef*bU-HL*g)h3:/T[<%9WRn4fu)0O;qdEY0jt'9M%(CL:F<2QJ9m0Pm.f'TtV\TdmRZ@
%n!n#qEKe6ZU1,9^9lRfYDWD\bgF#6Q1KbZ#)"I78CT1aVEInf:U1(c!_YMI0,%R/-<#bpRPja^T;/tW[AHr+pX08?&</;oM*Ut-u
%XhbU`_a$OE*8hcoR<Uqrq;-(*+h5M\hI3)>EMIj_V_68d<Od6\M$T+.*GDHdL\=2gV-,AZK")b/((BO=kCLR!*U$iMX+m^1ou:-4
%r'(oe_k?g!g<1=(,'T6P<JPn4;@EMU^BW`!NTn]:dSj?f'L=oVR$L//:h-^Lcl4hj@aoqbU$3AQk7''N#*0_K)\#U[RPMmHYl;j"
%@GYFqMheRMSPri0jUEk(/mq0>7UQLsJIKp8-52kQ,C*3O#qMj/Ynd`^lO%APn$5nahJo]EH38Gb3/EnkFY$3)ZW6+39>77P01"Ie
%n7.W,,C.bOOT>tMOuF^@FUO5jNJ`>41m0d]4?)pOad],c0/+HV%/1lb,]B=&\8a2go#>pt(#,i,-;'X@O>m3bPSWXd@/+KaF<GM3
%EX'N<'\tMBVZI1I-pc_N@gIu\6/H\k'bZFV]LbV&i(=I>c!hlJ%-5YdPpRftRnblK!S9<fFKD`d&"93N;M4*kN]4"Xb18Q/-t`$c
%a76%UXV^)Zish=u!CYKuhXoKfX\1\24upf#??3\567$*>`poq0[YAb2"O'hT3/k=sVA*HFaV3n?Q4;j`G:ARa:;_>*nX5W6)TE`8
%U<GKR2dPODaAn2.ps(TtXbuZ2Q&M^tN488+Q\P$"$'f^WN&MZ@l4&I<!7`]Em"Y&-!u9k7Wt]L7?aaYpl2mp'">6kpDl>\UaKK*d
%Tp?)H'&oHL_Xc.g'o^q*I*jF\4'//E,C&D::%&)=\BcG644!9Z._M7n4=ZbYhi2eu6`Tai&HQH8I=`&Ohge?lmj@iiPXm,+mtTDY
%TRVT<_]pPX9%^#Icqr+iE]4WDMaj1Hi(VI#NnTJn3,WNYDC>YPEF@".C)e,7Cs6eZL*uDf`p@<4"&CNaHPeqQV?+]lRLoFe\=dYJ
%gZ5'J_W`mi3d*BgO=6MIS?!.d7Ob+2N7X'dLu)9Rh0>BA&liW$5+O#_#uT/F6H5WT>ds&SC8<:uh*Tf$['\%n7j:AK2\Ql5\.W'9
%CUe6r9>mUa\lhArRc:n]&?)@-M<eb._m'X%bst/3cAaEC`j@jEeT'DACeMF@iOTo=+V4^=Rh=baSlmAAS+.\]oJ'T0+u&*BL?iG!
%8Z6?gfBjLk_"#"(Tq/cDj)m/&6fJf[]P`JN37PDW&lK0Y0O?\28562U]'3$aV[;C+1HuSm5Qc1>muiLQ)R*FND!>]3^i!2;.-&P"
%d&S1d:@.,jLD#RY]>YRf.n63nZpr3o/qMh,Q",XP]315oo9jqP6,RhS2`6!B5,cD;aiBR$&!)g5TXW'#,sb,hVGnjU8.CGIoQ$lj
%%N)X7&h_]lA@E7c(9e]L71JAoA2ajKIU>Hc1V!tb!J]qV\NqCq,"m]Wn"b^)QL'Zc[4&>MqCq_uMX74-@ta4^fhL@F_9sa<S,VY-
%8!M]O&t'/.AiGVm[JYnc0GR]?6[&'pN/Xh]]>`mhQV^jc4D&'qFi\IjjnCS:X$_(%pdd8n6+bN_Yu!Y!g+@%O%>_,G3'fP;.\^--
%d#i3q#431+8Z\^$#OV4j4rS!U4%5';G#LCg_e4t^NMaj,cC!EM/+N]""C>oY%,e6B]-0F-HoXiL"Na6P@>X=tlAbtGL?o]#Eh8N:
%DN$P!IN5ZJO(4sF<05oE)C(?t:,#?IafX3Wh)tO,#*CC@gNQs4L?rLY9uD_P4t/?g,RUWsSEDb?2_:*:iC`GN+GE@2PT9tE>\).P
%)R>jO9Q6lMDENMWCC]$W&oN)>A2fAPkAeR\QABZ]Okio%UK\JdNJE\Fl&a^TOj\NuLtsa69('PGYaZD*P-,8HSZ=?eZ+.%=1+&a8
%lqTpS%r3UJ>1,W-lqS`4;Q9f1;<k.CMn9K,838P2G7p1$m%m77W4g6f\eA;;XBM?kX#d7Bd7iebe.#`TVqQ:Y`fPqGqbRaO:""0M
%Q_di"1c+68]7Ls!].?rWG8=<'0Z@s_N?nmXX-i<3<].OjVOVo:l#m4f7X%ubM!icU&fRJ`+:]l.X+5*9b/4RZ)d7-9Lf6Jr$=k*T
%ijj%LpO0r#BBEf:FRIB%d9hNIVj9Tmf\Blm8@h>\Es)3SAZA5^-Asks'cq^a"hlgKgIg`]^9WXX7Nj4I7cd**UgXTm\jE<2h!U?I
%SU.-q+3gU\B"N(SDA:IDYX[[XnrE7&#3:N-Pq6qXEi1gX.m.\llOp&M;S/2r%V;DTK@.i'LDl,@V$\rT[fEQE%'-,4MZV;-eO\JP
%aTi14L?_i\[jb+iOiV;TDYg4cc(@nD@>>X^J3pbE'mAmODC,\9o+Jm1==gfk\FDlo3N<+iq-$lZNPCIUk(7"9D%uJ]?_qZ[+OIs6
%)-.WO-%!7MT+\j)Z8`eK4#K*cEOO[);$1a7lEB?[gSq'-E&;D7<H+5,;7El"UB"Q,SC4-!DSmKW^)g;6[a7J7'"Eo&m]cuOcHOt<
%`nNs3QQtO-,HcY7%)Zq7.P@uG<SB@*BIEitC`B*-c#:bYG(8+?gL[@I[R%r*1t<cpfJ:o6eMu<oiMR*j%FJ-2H<YQ&HLM18"D/Ul
%+pjZDO7#?>WCn,mPpgd[MV1IuJ6EDgN=n:\36X;Hn.lb_2YL<OM]67i=14?gCdU=J[-q#9G0rj;Hni]#?];[7ODR;q1.,N;d5*b(
%ZL%kL-3\sG#n4,a&"73imLlhMccXmVKktgXE!\DC2G6G.>(pcK=fA_p'^T/'!@A0,5'_HXG:0Hc$/)0[P01'KA=LPII9"@sBI8A=
%6u#Z\-m?Z3a>R%-oPQG*2EnH26Qt4"@<005(u+6VNT4'ZFt"aW@pA*,-H)i2Jcj1DD2`=tYQ_;\O=$^4XY[D6UY@cJ2G1ou_&1o8
%Z-B(:M:b9j`Q?C:gDGZs`A5@i:5'VO>t&RrB40n*JamJm-,Ram/]t&IfWGo=@[fr\BmDDN2G1p2XbPIT0n]<'6YuY\TDK6^/(s.F
%/BigGL=jKW<mM@HCt$@"&ecd))rFd`G;[;s_Y$Gq1WD?4eqA+J+mI4Bf;eGMi?K_I.)fu^(sXGHkh6k+Eg!WS[AcRREc-,=.Zkti
%\um2-U!-]:CJ-*>Oqb+EHc63<QLNftQ^8UsRsIqD-o&Fo^,pItNj#!d`^-d.[Ll;GiOUl.AB)\E]Jef.I)0K_FD[iLM(3=Y3.b%l
%@VfmlmE!5I;/.1O$Q(_+2T$=UO_AIEF(s=.>]%PPJt,]7$QW;JS>E\3J;$*.e=bNpVAOAJm8S_i*)[_@2JRgn6u=1PijrtlD>Ja,
%W_C7V1Jq^rSYloJ)Kg/AdnW5.@44m?+>klTQS<8g[%]pNZF"VD$:m656Z%gXSL@gf"esIY;=2D'MP:tt5H@\hiCQ<UUHu7q1uu#!
%L3@*fHSpI7)0<@`,#YlZ!!AR!")(3(BN=<tD>8HLBWru3iS2]RDo63Xjpt=aB>[5r?l"B-_oXO[pZ0^4AERV-S;e(k!F7*43u2^q
%6*h_:1!mAKbXSQ7JS>NVS?8`_1[I!SZ%W*S"_PdnK&V%.Z0#Gs>XmL\*L?(*/f?0$;-g.gA]+P%Rs9pWNCNDW#0MrX]t/3h&S!/e
%Y,[lUfDlY@ac:461J0R^-r`<@Bq*.D6fj+YZEZQh$I._$.+UYr3[,MuIShJkap>2k&T3,8pgqjJ]#r&_]X=\G<0*KgQ@;]qfQj4R
%lma"pKiBiG*':X"k/PD!AnE'CSZ>,6,@fnOLN$X;'\MG<0K'@lSpK3iF_7K^a2NdWROP:0/9[=_3Xiu:kCtuS.X#\:paQssVB-UC
%M),A2R]"#m[4+6.pfE)WZ^?U\K4=^g'Dm'u6*Y-fi0h2H`C@,bQ&LSp"IH=06$tSXga:M.J24L;]VAr@;'P]c_d`MW7H)k&fHN99
%;2N8h%@fp4_dWuW6IG4d]E1&G9(Fs\@ajftal=ocfSQA8WB>RK>\kB?R,G3'`QfbHgd/3])N[Y"b/DTU-`i?Hc?0/36u3PC/5UoM
%\Y9o+4D[ItLIm??cAcOTP\Y"eB`tQcYR/8k\_:$dLQbkH%>S5ojAgKXPUe#3M"7c!eYPio_kpHldC@JbBhdD5rOWMoc*n(uP(q6Q
%H'jAb>U_R(ULCJspn=\+[KILl;oN0$O@;L^'Sjr1VaT#b%bm8uE7hZu+V0IJ`^HX)f\s&S"H+O9Vi&A]E@>O#;fe[4"ffIKo@2&]
%<Pr8::e,]*iNN?oON9Y[@C$/&>n)S6QOC]oL@'=+.HtNuN.U#g>btl8<#,P3@C%6,";hPJoR'LdenNc!Op2hk&;hm1O\:^hN=q)l
%W8Xs09S^bRO`c8LJV!SIbA1K_TgMtBLJ@;"Y]tB>EeM#E(_9hEcM4BY_koW;=71cu)N_/4KGY8i:cbaL2'=eC6/keE5\rdO,fPN?
%Z,K*EM'lpB`2<,6IodaN$UVg>-^#W+<\/H[LCIIfIL">)p_JU!4D`N0DQE<3$+[Fu'k/,5d8`$r\Ugu*eaCqCfHcj3O470gNK7dA
%Cri2'P%mC$WjN!8X@-kE:$$%t88Mra7+#%&@LGIO$VD[&r>9*Hg@gO>\hr$#f]!j=KI%78Y[SmiRhn]8=VZ`eh7V^o#q_0cQ'Dc6
%9i4k@3[G8?S3cbN`*r9)Bm;BQ2KWFAqGG.=UKATUWUpm/0V%.,=X)d].LmE:MC9&V2X<qQ-k;_*QPHQY_kq6<mY]u-n`@_=;L-o+
%5n/WU.97WN*[+,p"'nh7AUa%^Ce\S56<>nG2;X/AQ'*U/].>ia2Pi`[.Sq=t)nU5>2U19-"c5rm!$*$fM+saWT](^'s!N^b<Xaj[
%X!U?#5d>$jUfO2o`>5BL1bYQT$k8n.b+RCg6eT">`>4O#1b#EVAR7-e@T*ApAaom<RlFEi=eSf2R\H1D_5Q"VNTPUbbuuB=GXo_B
%!P?]UZ)KNhVMc?-Ri3ZO=#2Bc94Xe2/2dmS.AD^=k%BcLB=[!u@S;*N=D[19,g`rR`?n>2dYs+trW?(R6g5&<NC?ZU>n)]d?PN?5
%)&F6I9hkV\>\km!Lj#b;Yu+0qhJof'_N/85CmIWg`@;[nGGITgENuL'Ob!)Zg8_DPFY5Su_DI`$(Ro5)jpX(!2D#c/:p\<`/rP^I
%brq/f!0)o]Nar'B)Aa@3RX%C4:aco_0B6NJ%Xkj%>\k2IRi*#H:ku#WK!FPPR7q"nl0$.oFMhS*kD3o5j'pIq'POA0P)E$T3EZO*
%`F`(j?H$41e<*?A`$uQb<ud&IFifmWQ0J]k;!bJe\R3F-A6I)9-;R/7mm6AL^O't$Nl2F\bC7VHZ15(jd;hM=7$jZ0%m*Y]Mo/sN
%Wg\)flqG_DFVo;!g.)CTefau*Kq6lsXHB_CafSCM9^p"2K:Q^q9c\kWRDDEKfGlPa?kdF%]81m2$GeVIZ%HH%#E<MiEMWb[k,TZ0
%;(0dc-"+Unj^fb<R`;EkSA8J:M&GoLIZ8qaZfK:"Qq6(b3rGFKEC`C4^.,7=HDnAubY=D+U9>04_#p<lYDl!4aOd+3$Eo#aiVj"7
%Zsg0&r>^M;obsd/]T0W7@lnlanN+$Nc3CqYM9F'hGh8WL\/=WP5nI"%)t#adr(2lkNC"[`%<`b\kG#eq@2<?Zmi(L1Ys<S2P-/6M
%&A^Ve&gD4\=f99MNcHGH)s3U3_`TJ!f84dMef`Qu*CY71\;&08l$>h/:=KfY%_,85-uaQL>Xq5qiN7*0lMkU@lSu;uWJ^T*ZEY>&
%3n?HqNj_Eg6aLB$lNEiL1c=,A<;OUUY&UQeW/7cWYgt-(.b$LZe4cEI%G=VOpH1oBQAiaC^p>dKj!_#1XeEmW!?[7LNmp#8E7StE
%PV'46ZUTidc0n8W.33/4dGRq87TU1*^T&i#%A7bfCH=>OJVe!k6kLPaNcef6?OUH3\,f((:(0s$K30p&:+-/L"k,62>;sjS^]cTK
%21/62.2p#@5\1ir%:C2,?`:uJ-GThs5K-^E`WS)DF_n4j20^uN)3Ae'C/AcGs"eaST&r,#F\p@*;&pOa)J;*/2iLs8MgF6[;la=h
%U#s[oeR/T$g)74X<-P#sZ9!)a*0jWc\.et6.^1rj'3,KDm>t,`X%%YVN+s>#!Au/\>]j`U!K:%g\fXuUK2k!8H];$b#Wmm\e<$J&
%?."p:*@*[oCS9t.]EjKq*LI(c@B+>B8C@f8FeC)o#H:/nQ+4]0%P2O5%8gE$"@P4lK^-XuQNF0sY$dH@lBpmJ"]*B.O@6a2.:1Du
%,ZCUIB;US!qWC:Y\0[G>&s!Jr%Aaf-a>Ges::mUbEb+H+;kZ3*FfH=\l<NUV%1Ne?mH_K'<,-QLX[B'6'Lb["WJNE>gi>sNN)Z3:
%+uKo`9UoNVl:_@I_bln@IKE!@r`bCOSQb^n78X:*I9/p9-OT3[,\m"WF<G<:+&6dRWL:#19h]H\ZlF`;j29J>^(NblfJoTSN2VBF
%XWi]t)Qnl?%[@1^:leZ^TFU=Y@/O^Cp+(CBiMR:fQUiMS:K3F23'84.3ml`U'C9FU?T7V!9U16;P,C_oMh29+[.q/,@7d&FRPnaf
%"=$^k5Lm(QkGq%D$`cf]$q_dpU7nJ\*nfGa=Fd5.24<7Hdudi0*-p7'E=P)O#NdC=j\A/d+`'om:4jQ2)5i`\*EuW^%6=rM#Z!4q
%S-Bm"bcltp7R=%38c^A!k6D/c_ZWZr0&o[DE,+'`8hZdg6B>,R%l[UnW(N1AnnKs;3nAE8S(1^MM=Z_DOu/a,U62C,VGYJ>ej.\4
%&D"!f\A6m2"F:M5SLYDp;5Oqs-7V?aL**AdWA18+%HhhlB`aR+Zp[E:oYGCC7[Qr9K],N:NCJ&@Bie-k93\C59;fAQ4(pI@PUT8W
%i6lQs();stB"hjq'=;lWB9b#bV%,&IRST#bV,N#Lf!*SA\;gtUNK#EINLm4JBbXZ)`l_H8Em>M"3]2C:6c,\))HLW=B`PoHCJp`\
%@]^mk?ZFM]7u?AD/:l5PX9Wb*8[BO18t7a2j^(&8P6Uf<ZVb/Z=_-0%JOqX6I2l%eU]JONo=:TkiFZg5C8cqEKs/uldLK>j*,12F
%1lQORZaW\l7ei:QR7f-;OHF4:+cV(=2>/=_3]@M/&Yq_?nr+A*n31l/XRW(WC?eL:5f1*rUngMug-a=Y%3>sD>+fSA/IjY'GSNY;
%B.CjNajHOGm2S&G=6[q;UDZT?LNR>gH/VGdVpK+i'E`cC)4cQBOBcEfk6bd?aQVD'K8^XQ]ho)pcHK1&]]`%KA.B)db<qg9%8U;B
%_DGFQk\[*s)Zr./4I%d)1`R6$$FNbKf(04sRQgFZ5/E)1*K0bg`C/a)7SG6W3qY&V]F'LMIEWn\Ki@4b&Bk^50XWV8]1.TO<5%]*
%d><S5)'[cLe/6SEWC!<mAP"mK0dL:ESSEsoA35l8b.:[ud*'4l>SSIm>c]0E_<Zud1MN)+i"RF_*uYcW,VH1XTco`\*9Zh<OPV8>
%8d!9]FaL()Tk!a>EGT;bSKqpSU7pgL7T4bmL/-7QbE8JIk%X<,j1u%i<NCQ4DSpOcn!@9m'9+"KR_j-/:10b=BTiI)I3&Or78PCS
%Un4H+-8`5<p?nG)AsIF.kfKUIqE$oh9bdt_C!q'Bs80e8Y!*9Oh!a^sSQHGui6>>Urq#,<a2P[I\=r#"Sc.OsQ!aO`IpX5d2rBf@
%[pD5Mm.Q<@rTjK$\prbRDgqTUa]F,N%f]gQdQ'PJDI*5$Yh(OW]MZ?"Ye,<GmYoesU1]5JaZ;Kgh;7S(,CLH:DEdEJb9-7]j$/Sc
%r:+NA?GBD6(tD6n[<oqtl_)__58^"iYMVO.C;h,o`To>9SDUrjj+@Q<d<a8V9Tu@Ofq944c?9m#B[DDsVUpLOLMp4?7gJE?rl%Ur
%mP\_d.SZruKC*#,46*`bEIYHBa0i`dI:$^;*nRQ5qVC\?6/u^fY;^7>XK@?>j5K]OYLDCn>hhD]eV2i=DEaUo\DkID2eBTal>-ql
%^E+1CDmHH<e=Te%n?jldgorRqmPW\6XQ$UUdiWCc]AoHg[\l`]7]c?igZp\aR'kYsC0Y^tX89klcZ[=qh\nAP>.NU$F4Q9HkIpZ0
%Me)#47>jXs^!H0H)4j:Qr`NU4[_\Zg["_\lIrR7K8"F(84;]ti93HC@%GD^?%sL&FL@(agmS8sAeE@97ID2cn%Z^ghm^UqlGu&@p
%_ofqOE-%e\f=JX0j^t_W92TSmRP6Ch>dP4,rY_HchQU:U%sqXm\td4Vjr,WlQEo:DQ@$r;CTrOGA[r\M78$d$.Ea;S\QP3ZU;`;W
%)Du/&A@WYq!_@CW)DV-[gfimM:2fHk]fZ#f>oW"i;;Q#+-l\.i2`e]re_-\5=gM:[>$lTfGC7uq5*(;HS-,^J=I`=*KD+hKe8=s3
%cMgkNI;WpVH$5[YLq?Sj&t?8%ak!g\`P#ui[l<T2cP]4D39?X3@.Q/*TCET>jXflZ-k(%.SO%0J]_20<flB`&fDMu,6oV(;VDZL7
%\9X$nLO8EZcIPb&=bCJ>Vq%rt;.o(FnQ>s3\K4F?Z>2/PMJm^oCCf#%rR&.2Dt7mC?8Aq^H-I:Qs,Wp@^N6@YQC#gp^i@9dMZ5X8
%ic*\O'f.HQ(IEPFB)K,(1]BK/1WK#P[m,>i9Z)#OrOp4::=U_<DOAU7cQrb?RC<SUhK`MfC`SL"dCdO_Qa:_Vg'Z27>BkMG@BTGM
%:h^DoeBG+(^$bZ@]6i[KE?:INp96VB3:)TnQo=,B.;L'e]PTF^hG/('24=JW.1^32Lh?NGKMC/3:9P+"(P)P!k@\XM]o9gS?9[T%
%c>^ONSt+!Q:@m:a0u(bUI>aqgcdL#"eE6OajQ4kSgW[<6ZU#OB>cG:1nBLf;cs%H43ra&)W*@8Y/4/,]'.r=IIqX>.6+HNj^"Y\f
%nl;gOe:d]&;H3"+HgN.Ls1)$*/>Q(pe%tP;@*fkZ2qVeV:^h%NL9Y"'B'bF,Qa(6WA';i,AeqR=!++J`"GbVV?XdnRX[]"@o.e)E
%fF)j'"66j0S5X$K^%.V^[cTEX^W?_LRq6E0A,@4TOoI)>rA2'BcHF3`kCA.R/+r8@n8+`YCG8O':6S/kc(b-=kP/!pdGTY9RKi4S
%2eqME"67l,6+c%CoX6foc;$/9`Q:cMe\9Q<#/\Qmn)PcnhJG0^USD.BVfUMTO.WkAk&SX*C_sQr?tu/A8S8Y1F\Nc/59!C^UVNsL
%4C651dlR"p^\6!3)p<^h&Iki$Ph3Ef"9UkODipFSokh<la>WW_6Bbg*\YPQKpc.lOe2>p,hQ\%`CU7l]Tek,'\(>EXZ.#3,=gp=0
%*&_L9X%fW8mG@=!5L8&(l8*;4*]BO';KH#9MAnBb[g?nAC/(`H]l(U6DVuI@8?4gJ#>JHn.oiM@D&NZnK-m>2@#?>G#30J<q959E
%)5Q,rRaN;M)_B'IUmaA/a).R)U2&e(2/Cj<khVnC]=Zm=pU<WZE`K$fWWoB2C=DP.?a11Z\$'+fWfff_h`Yd4g9/2o2cp&6gWi-1
%U1=YiM:1HXb`=$U3!R3q-d"")B6P-/'4l`Y"uc9DF0glYZn"`^!8H<)U,4pXbfSElkIr@(f':r_7G1fH?^)msR%%+O?-i&?1noQF
%ZLgRgqP#Nh;?!i7-p*@FMpeC5o<[s<Ub@V?oL517oke@+MfS(`BI8+(RXCY$=mDmBM_YfDRX+P)Bs_X!ag[dYG[;V%_W@+d_@W%2
%_FqY[6LbFb+26DNKB19=eiqC>rmaD\3A6VeKd=hm.!bWOPaUXEG+!J)=fuNL\mW(O/_@Dl\i(AjgAPGWZ959Aeo@gEO1JTHQE/_(
%HW=8kee[PT[Tq@KX4fda<NB;VhRm>WMg8R_)K`gqC6G,<"5n2<?%*]gbA#J!$^T7T3K5A`dIZcJS_isEqp.3Z&<6LpBAo6gUVLZa
%%34Hi?!fGZOfR!&e+IY33?4P,-U2hEQBm"^n619Gr3t9-rpP%#n)Ah8(I,:`O)*ehmddM)gD5G01-,Kojl3/](#<GPa=,mDDJ-0-
%5<CfBD>G5pg>e/^K<A*r>"r3f?fhXjEmZ>r+%UdI[A2,mZP:usI^oCs,hs::4EKPr^Q9<@k8q'RBbSJPa2SW"Ns;B=r:B9b5sk@W
%R6G9/Lj:k<2;EWBA0G'a;)aiB5Qe.9gU$O&eIR4'F0`R)eN1-0*4GRF4$GXjN14WBF1%Yupdf=mN4QJs*-=mjK!Pll[5LFZr>j2S
%#HY<VS;kY*ga)nta3WH\Hcbr.?G>YZddR$AgOC#jDRm.S0($E3@/o=)L'9R+DE%LI9:PAa:SJ5+o3KFr*_W!kdcNX!Ah@l69:PB$
%CY`Y%5ej]%c@rEFC%In724t!>CNM\o/,#mCVR5MiokBDoh<s.VEKdaR1V^R[DTU\8"Rk4$40,dnrH@LZINa.5Rs^\==3PXLA/mI4
%(M^@UeZ(hq^#%]AMjr;`mN7CG$9*,njDE8TaU9$T9=)&I/<kl_55+CB@AhSh>qA%-gP'V%h&kGOXZP`h`j^_oh:mQj]76]c@&Z2V
%%Fs,e)=CCF[T&eL<G2=CeQJZba&7CFots\U^uX)2'n8)?4&tQ@D6(o"[&O#]mc!^2XJCKVO_-JKXJX\7;OVo`M)A;jPRS5nT'-TT
%b@0imWm5:"eCc9/[,GHt$S7+BV%D5W*jL,ch>n)JPRc#4BTl1t1-HMXGm!O8EE!oZ0@dl/P,7/LqMH(hZ\[U0[4p+F//9g2`QM0L
%Z;eIf'eb39ioNS?QAV$*ihcHp=od%N;Lu2S+C4P,[T)1QCCS^dKkE'9ib7:!':8PhoAY<\hlqqan_(5YRqV5)3;Y4/Y<.3im[gD(
%S&])V@2T_Qp^Bg8`,)eheeo,/R[n!'2oe?00jX@o2)cK8P/9$\462RA1`JO;,#FYqT8`eiS)ZWbgFoglccc&fd[.-:CB<Zm>6jQO
%_=,Rs4+@FI1lj.c"3/nIS:16hk%-OL/;hX\&k25[[Hc8sQ2[0-aD0.X#2*$[Bkf0shVP1e`\8<SFrO2>\XE;P74Wl-:\@MJ!WL4a
%SX6O+3FQ=H^<D2/UR)VIi^mg4kZt`DKH>6(Gn.BBe(WRSW(D&Zn*W)ShpQi"C<R,ODU=atB;m=$V4'99ae<m8BA-7EYs_._6hD5;
%;NEOC_TYo=0oH:pC]X/F:"li$@k@9i90L9mO0R2E/FH#2l7qEeNr]Q(ghu0T[Zo)R5sF$B[WfaYhH,>IPLp&Lm_Y!(\"?9VFr!BS
%i2nh$V/3V2S]tU+fAfVUVo]g&UAc]nTXd'HpBOp_mWdnG4_RR9JU/u]]ga-.>4$#]XpL2gIsh$m=@.IPe>d9FW=?TkGl,b>ZG05/
%TgihZhJdGdUa<*#Xd1L\4_P-43ibD"!"W7IO>UZ5BQE)O9Wo1(DU=Oc1^i*3-E$B`+?&G3.=PSE&%@UH7:4BI;K-X>-O[s$Br"4c
%'34G]K"RD,dO(.I@QAfnC<i>/Ho5W\N4XEoBu93uH^.h-S$N0Ck=I&51ak3EV"$moZ?\5RGUqY1WoEQVQHK!u:rYH`V#"G?n^BUm
%/nMR,qqP)8qqIIJV)5ZGk*FHN;OUf^F!mGRQf]2+LmQQF,"Qb_kT8lg1dEQB`OVg)pRW>U?kb64\YV9p'^,J\1:It\ritHf]NF/u
%UZTdW3-W8I!.h:U,A(;YHT`54mLS&H2Me1l[g;P0_dMA)s4.Y)c:b1Uo]<Oc%=F^nY/DOR0aHkFqCgK)[KL+l!?&3IaI%uC\lTkQ
%,qJGdm9Y/&mHp2R%?B.(h=7,H)Q@mMj$.lb[+&8t>,/6/o&6!DhAWi_YH.rWS48tbG]Pm'rYd.rk*;G]Jd'aBAC`=(L:V@#kb`.g
%S/`.'4'u:rhh9DIE3Ht(g"L.!3sjE::MZ%L:G=lrMd,5-bfu%=mR;fn(`F<KU@R^&#Q<&[I:aP-RTqn!`=04N`_k3-TiQMDXnr!h
%;;cd3-ENrYNUukDC?$WoBXfG7g2=]</-6A4Bn54-oSUC%._I9SV`#^9#((Li^YQff7YXW=F3;P$N@l$Y-dAa9fAGbLE92MB1O487
%S"\<dV(s5JcTqrNVp=R!aN!Bh%XKKUR9KJ+m$7:Qp]!2koK/CS@!TjV+,Z@sU?.g,T6DX9dQ'GALS@4Y:gVA`d))cm0D1a!b3g--
%ah9j<:A$uId^4a/F2dk>Y@P?7pj'Juk%SiWQa-7g4$GXj1s-+Y=3Fa!_rKJu"7GOja'4`cSE1D_CI9r5D)_nF<GOr]]f%F?VsA_K
%N_K`/XDa,c4EE)5aQ3X%[iR/g)rtg_LKWLWS'Ut]gtk#O)WYJ8_-&qn/D`da[lf;L2BiouiNpTredLFco6<`2BTg\.Ak?4JN::lu
%-9>rZ[qic:R#<j"6#lS]*1s?Y>imZFG0df;Pi)'(5H"J'Q!E*Brj0_XB,.<sg%>QeVru=4fj6!@Q&`,BiG]18e':*$j2N9.12\o[
%P@bjgnSF=t@2Djr2TLo9^G=O*_!VDD2&c..YmA/Rk@8]BWG#TRKDB[7n=([>T?H8:F\-6X+ZVJs_W@)pH'q*BJ"Xeoq0&qth!>Le
%8`_bI"aeh7n@60fU`8G_3uPCD..u9O=&$),[G"Pc9fA(04"o`:)-Nb$[Z\)3etN\]#KpO6m:#-1raN;o<TapN3!]h>3GeF[HVH7E
%bi"l'ZkN=ABK`.k$[1f?35*AoUk<q)g?)W46'o(2?LRj:RsC6;0"[_!b;c%O(X)RF#+&#8FCk-=n%H9hhf[&&=;I[qbu]PsoAVC@
%^"h!*[Ea61?iB(ns7b%UJ'6o^kIop8^Rm6E8b#-J]7]KGCMe;Y3bUZnpY5S9@I)Tc[s5rOIVd-0lg8#^].Y,7<dctFoPV+sf$S`=
%[Fo>VDgpDDd8q`&]D_m#TeU2m&`1'GVbcQ*&f:S!LIoekYQ&nBDk"pgX2FHCLu4t:^-1lpIdck]9Y.:*]g##^p6u:k`R+C[(^;`C
%M\YEaNiR8c9Drj[\'0_PFo@uhmC/n6VN*5bihk;;IemV[j7^dQ$SGY!O1IE\CPIJNSb"KApdaf+:b,nF=?)5Y%E:%^4+guRmIF>X
%W,8V\s*X_,^])Pp4Y$I(92YD0bP,19><i&L[<DRMr:g=X(B;")qdZM1MRdr=E\BA2MMG[_[;J0H&'(TVCOORe4mn?VC=;noUU:p1
%j8&)_%Ed6d.rP/W+7$^[lZoa'GD?&leL@N`(A3<pOsZ=h^jj=;iiRl*(:A%u@IC8Y;&]Dc3^PK*U-nn$%WsGFmOXg7<m7>ieSdpJ
%qnI:McZXLcdEV-oVhu7F?5=h=DoGAT0_b*u3;!s?GU83[4=gCioA_)`SLfhL5AP]%SmnmnhaM=o:4N"fl6G0E02/68lcNG%gPk-\
%qgW^2Nq"mqUS[@I=P;8_]s%*/LIS=ooZHlZ,<#&>[+KG#r%pt9:qk7JOp#KPdPMGk;-Fj=X-81d00Z.<Hq"P6i_)`S+4>X?X5`$h
%-aB#6@9U#d8:rH"0T/*ObB%i$,TT`=2[Xua.V=!'bji$O`a>7=8Woh$BRL^6$X9LG,qQVQ`KCua?<XH+`OO%[YB0Oc=BUk@8[F([
%@jMJ6e;L_-r%&4Bbb3UHMgqHoMH)l3cfpU3-!6BqajMleY\_7s]Ld0+-`f_I#8Yc=LuWRQ,'oRrnJ<#5BhkugM*jt<0Fj;.$]q9e
%1JUpe7n);N#Ha5+ZWF4n_)]4)?AI&m59pq;I"01i\K2N+&nX-fIHZB)@[hKcqbJq]YR4mb_9s"Xk7!/Wc3?ZJ01Ws[,9i#N%!tcH
%Muaq/Z#.KPEJ3BC&4a9ThXZcRgM$@d#/`!Mjo:6:@OWm87Ts%](_-ljn]UA"JJ!QJ<+rqopj>R^h>-nAI_a+f=3mhTddA.kr@48\
%U3ak+pll/DH7unj?KYT8i+"G0\R+Di(@iPR&E(X$HbO7&]Mk+l)j82)/;X4o,P1K,BO5f.Mb^mOJZJbJE`,qq?F>P'[olMWrVYnK
%Vq8p*HoVaTIRTf4C@jHrUSD/m:\g4I@_;Y0\*.OTC%T]'BA:26-slOHX*17r^@KOK9"J]t<W,bEL:k<0lZYgnPASt9*#2CqoW6n3
%GJT-.lYh6HF!dK&HKWu3op\`o6]8:MltCn7aYaPj$H["Ra!q$#HTl&2+$ihUUQ"J:-NA)Bb_rgeg:oK5hQ*S'1If5rTJo(p\J@Bq
%oo;OPH6B;2rofldrmgF5/pui3!Aip<dN9R9WKGG__d<)!,r_L4.>15D+7,!,Q^@f3Yj/\K[N#6,DhNg9O<ntT[Kk!`I:h((JGS8N
%&maCI;=*kNXgN!S@qU!:`oV*I;g_d+oAk%3jJ;lTrd/K(Q`mO)2f%B!(`DRY@(`gs&]j8h`41W\UYPb@g;Dh((Cmddkl^qf<?.'W
%6cRR%BBeV9l0-S':3H5\MbfSGDXbES<gZ;68fgDiXk_*oQ,*.bIt4GXk9i8!iEdR]XY.p-):t4+[#u`Ss$QN3]mKb8`U&AS]RAQS
%s&`RP[^q5a]lH-^c)E#jnh[rmFl95Np?fJT;d4#<h(eBmG:Ut+(OL9gDtc<3,aDt(herGM=+>Hl>Yi=+d?QqFar^?O^Z`6)&-)L@
%k<#U7dacrC'WF;UmB&:e>I!hdKi_W/m^4)Ms0q^4Va\q`b(dOj?-\N(8b)ef0i2rc3_c)Ng&>_]Y9uPmh"rc$g\RN>\Fo%Dp7R1F
%rP,?_ogJ%I:XI[1%!IXAMaPl]HX([YPrCY(!+QstecGr2JkFP..6jHlK3qT$?MK$%D;NZ=c>o5co&e_8LF[;GIbZ$Yq5le"h7bSk
%Tr<nl/rUclD_nEn3VQgeh<jYHc+]R"=O\q6FK74sMLEpG];jDbcU;:?KDrj+01ES2@-;Ci_Bbk''<Cs^#K?`"&a./t>^=fb>B^Z/
%gLt1Uq79N)pfJ5RN^r-GiHnfFAtkQW>P`79f"@9HH`</,?AIaH;&a.7m%MBbdsRtj*V3n/@Z9+"rB?,sPt-29ci3W%$e&Y9lg?=L
%1*1"KV"MuoFCqii3_aWQo1c=O9W[0_k?Z`Khn-K:B@5j'B[)rYfo=#/mR"30hr;s"C"L>]lU'C04FK]Qj-tA[bk>i``l0[t8S;u>
%CtRRY3*;\(F7Q&n3D"1HPkb#2kdkEe-rK>M1[uNAST0"c3+KXSQc]9jQhbT%'d\jZ>buUlWil"USR%2n=-]8q5nmklqX?1W[>3f0
%6$p,rg&Y<j't![i*S6M`.hA1QR)Et]T3]ucD3s_LT36)AntNu<e=NH/&;bmoQg=(J7c")&DGB5l-Pi,s1KTOkU[F$,]inCj^tpD3
%X@J?*]=VW-b5u_:*ke*q)]]C-P@a,f[rUtAIFq^d*Y2F-g7rY#=>n6#?[_/8/c2iU\,AVr*up?"%N$0-SZJ<iNnR!o@F6rfa1]pO
%jNRLD7t[O>Vs']^<?k4&i[)<_FWC3KR"_]KW<(W*rSQ>(Xg7JGm:Dn#4/:*j[nc7#kDsWKrbcr8hX:*KA(qX6ndp?gG]l25.QYX3
%Pb$0Id4#u[>j2b`Y$L\,1HN&0P,gf0mHf"W%kGEm=IGP(=/X_&7$-FRqCIUfrSiI6&`Zn\60(P=,>MS?UtsomDXVdQcNctjmp):-
%05urPc"R"M6#X!`m_.g(*VW%2&Q$%7jl!(`D7.Etet.6U,O>6CDk5i![(A5>e+09cXr+GXDuA2>)&Jp[G`O`rXdo9QSR2&h(b^th
%s!WWQIdtj]M.qd,UqMWArqa-a&^YjPq5r,Xi9nR+l#lloeqc61d93Nc`;[C!l$_5+(S@OKHtW4nA&P!8hlC&=-\It5&)Xlt]3=5@
%jAS1p#*kg`'F2V"3-r45E:^TkZN9Tr1W2d7IQ_6h-^A;Pqr;Rpk`tl*P_uC3a1.L3AQAVn_4.Q9d?<iGK3^FE1,jTP(GBm[TtUCj
%YmS7^`cD*?nQGb7)G`]-EI.>l32UIM]8`he"`ND4SZqUK>K2k9*3SR1oPiitO+,6jm_s(0a0V6s7n:I^hZlcsYAIOpC85ceAQS4X
%7n:1TI<"8$2*%c9qNH+;-!otn-_?:O8Nj2?7K,n#SG$Vqm2d#NbDMfdm??W$8pKJ%<OqDmRW@_&V.Ji)9!&b%mAof\]jdKhX#V4@
%Sb&CK:VYA4+0!ubWuIVC@bU1W[f:/\%#Y^%Kb-sBTQ2eLB*d#,e7i9UeTgSO3"T(?rA*#3iR5B@a8%N0LRPiG;0Tc>EATZPSqF^o
%YLB:VHaMTL+1@6U*RUfkn!]G7mM1A"cnDtSN767$bsBmtEfE,\MVG_NC!Y=i9M_cSgg(d+iP9S5#GL9dZ#(KiLArk"hc$Qf/lt2*
%W3s,-]!HhV<Hko.\G:5CS7jrJShZmqP>na'FmH)dL)&TqJ*!=p,u\aZhO2p8b]\3BYi9R;FP(9iW42B]3HJ+KmIWp3:5Ydo\2XK"
%e*>Vg/A?M8I8kWuo.(lPo@Ti:_m_.MaAqTak:XcQ2KJd?B?^Q[P=<)E_[neTg=h;8`M/'7]=K>[F73S<N=g_\dAq.pPJ4!D;6d3G
%qg3sRlKnub7i0\n<kL=C]H<.Wg[3t`S2!suG;79&_t1Tcg#cc6]m*>PeK,5rSA`aV4D_C<lPipV`8o-H+1?rC7h]gsTQ^.^%4YH:
%qR"Q)l]5+jHP\6E;X%l)2s?mGI\Yc`GhYsdn?cUX.[jS5nP:/SUQp:@T:mXqD>U)nm4JltkMN8kHH%e3T3pgoK$ie6&R;u[O/d'K
%^sa+HU>kC0^"XEJcKd(3lAT_AGG-O'l)FEHW0X$`2uRa'1*N7.V`hMf<f$5YZ>ccuRA`//;>#m*]#Rm*OOLpI=])!(oButtL_<Op
%2k5$>?MD*dWi.X3)I;j>_9pPR$R0BQ*hRLm.r($'O#W;OLQ@mnW#'+c-LPliJSM\V*&ZBX=DdN:^N88QP"I2q]$YZsS$?kCh]JB'
%$F3i0HFZ(_nR/KlnG[ank=K\==Rj]u(EF:WBD$e$lB1)1H:C$a1DD^N#^?1/%7EBQF<N`$J%e(D,:bVVircb0S[/P@mG\S%(OS`C
%S`PZUg(_/440"-a%5rfArDV=sg?jqkSW1Gq"oas2PNk4hOKR<&Xbu]0,'!Ns+T_n367ghTn&q&l8[!>([F*as;'?tPchjlD2_;D3
%iM\OT_=d`+34-08k8sb&ch+'#BoQD>H<3<LCd0JrC=S@<WuC!sT[`,3\pZ'bP^hM"omr.%[JKAth.Bq_"W]Od;l_:3Aljh5>_a5:
%?.FHYC21NtFe>WGCTF>^o?OB0ZJ9&lMG)M4[I;@AU9Rsme6(;e5+>N(2Gjh=J%g&^hEpUf\kDJEYeR")`>r!_G=IWbV1r9QGF\$+
%l9jT0oDQ?!8#Q*o1Yh;\j0ktaQS7jD,-9Ms>ufXOH8qm2o`Rum*QhBh,FiZacr\!S_rS*M:V4"-s.[L'l49-crDk5ETWq+_dKA%2
%n&R[j^SUB`hq3<TC@l(<HrZA_:99"i)7@rZjWXPA\%c-a_jM;b&(nn[pV-FNSbsn6?eWk+EFr,O4Bfs,LnLItki$FL\\!2o[u[&j
%-eitU<ag&/3%RPLmt9TR(Dk/,BD%MC:$a\NS0f&BhH:A_>$]r*3$Be5kL-8\ra:MT$YOj`F07BAhs/L+Yh^?bC&ck+o)If4l(pI<
%TANIgdQ&mrnmPrQlAqR\EO7d):4I.(/S4=)rLIES(*3$pd-I:(*c#<=3b/(p?i^Vo$Ra`Qia"'(g<4o&[>W=oePUPQJ3?8M^4b1K
%d@`)36K=>B@LSg_-I0:?3eD7oW-qMZSc4ME9'(6Lf'tZ4ae1kIJ_k,5iUNk'ms`8$324/*Fa++=3ME$-oDZ<%]WCmO2!G"!io4qU
%o&0:^]AN&M7L_88M1J[k[PM7Z,3.rK.i=Ot:CC=jA^/]jb^S#P)N'Og$c1refoo;mGlG"F_/k*,euJ<pf]\:6>qm<V>i.#4e66sn
%NUd.q\95a5@J:<RrjliAN6\!"R.'4>qA4%MVbb,54'Ug:#&fg%-e@$BimZ?CS?&s-KWiAZ)S5Ok\u(DIH+RCH/WA;"NJk,_+i9hK
%_6B8KrbL]S2r^3'/OY61W`XA'N\7>7IdXW8bn+b^R^CP:Xu*5,Y1g^oPf:+\h:[8-mJLkbm?\'sG\RtoAnue@BrMQ;<NHEB;PVh3
%#G$<ZeG]n5Xkdo(e9rhC23edCd9>oLIMAe[nJp^1[aHW@F54;#mu^jV]CDMGj47'^i*+)XgQ>@Wf8uKiK=0(nbB9r0JA9qj*pddk
%0A>;%%re;7:9.$17(^ubbB8<OdB315`K68MI!!#BJ/<[ehk1^r]U:lbT3$uHj5R0GHfYWX8$1hN>=;f$S1ToVU9ufD*aPRIX*qkI
%VfCC=MRC%3(GAg&XD"BKY>IAk?!R?i\[FQ.BGJ_M_t-TPPA>,+/QELCA@Lt0:(q9l\gGS&DQQ-NR)L"u34mB/pFFW-cT_?eg7?if
%Ir`1"mIa!.a3SY)h&AO;4LhfVs5;;e#M6/.ZJKH%N'9kJq=9"*iN7Ia4Lk8FqVp(is*XD0hXGb;h7Oglc*$h=oV(H-2La?3^[?Ml
%n+KO-TA@,#rFg:koJj?`4QbMf-Q`c!et_chrg-tV\T]FdCoqnG^UphWZLZ-:M.]!)rN:BQ]!6PB<r2cIn]!4HY!q7*\A!8KGVWHN
%\2?I[FuT6dG]P,+kk3X_]h_rNO4i1W*c7Nq[u\sb07ENd&-#d\\\@Y"m&*nMh>6ZuS[Y(QhRbXK3P;e?rQ=ZmeH`^5`FIP-Rm.]^
%o>]XJYLBo9^#$6-p=9_nlNc\KI]Z+hrchqnJ+Dp=4(!C+>&I<PoP"3$rLX;5^HVX>j5KFD&(YW/^O3E"FlUBR]Yq;Hh;dKLq(GgQ
%mG-TU^V7:.&A>W&BD"mln[5d.Y5`n:hYJVWCp%uB5J-gXd>%t9GBV\YnZVAgqg2*KjO(\cZ^hT<+8pSfqpV=r[GI0%5.ND\p7LBq
%-X.\mM?\HSn+NN/Y]ri^qpgc%<r4tN*+&O?l0Xu)iI=&[VWl@Q?FW&OH0AU^HcpWBgt?p/H<'TBqFN&_*I>?,]'D<0`CKWoIX^t0
%p!-_oI=<S]q!Q7hHg;42I/*R;ofNGg@,p2VabP)hotaGUm_%9PiE!2]iK(Y?h>W\68U$BE5/_+0+aKW+h+(Q&?$lH_E^L)qX5,.p
%s5Sl12f?(mI(]9k[I8lq9S+@8ia#Z_G`9-1mtVMT\9<)fNrJ@ilhca>rqc<b5Khl7mt->6#l`DeG5(G'lbURWqk*26?@RFep?jS@
%rPYo(hRL)QZaJF,;q+utjBgfcneM)'T>*Xn:;jI5K=-[tm-\>nq]\YH:O^u"IC\mk[>hkhO+4k#DL_6)>-e+OfD5"ghgVp.Cjk^H
%`njbjf6b:3G\b'=bZaYpb;[kCh^?%nhgaZnHaOW;]D?>bj-SA9f"8[B2fJ.*?J44@httVNqXEq!C&2:_:d-SfqXs@JlE_k14l4uh
%FSE'4NqKeR!=XPLdE:(m^3J3-<LS"gakHK,^E!9#p#Vt=n]AdFFDdp&lskE)r4m3X<Qq+KlQ@J.s*j^bIdls"0/gJfs4duB%ds7B
%B60gb,G/8V[Pl3VRf$LbcE2P#q\V)9^,QrMZ_,U5C0*QEnmM.8,G4#YcF'G%5AslaHb?ZLh0JgEnEEG-h2sXqpIK?&,4B>SrV5U*
%on2>Eg\]ToXDF3_[?q3V%Ck&,h;?1:]iWF\_iK_qIJE('rk\P1H@+hE(TZfp_<]53nGLJdX4khurS[[7leD5LT-]!AH+[HGB(b97
%h.su=F#VuYHh-"Ie)$Ek/+js2QgPTPkC2=m&#,sLLX5bkk,6OP[l68*mt5D"+8cP%7+nrA>s!D&pG_)R/\1E<("]#ls3"Kqq:(Cn
%59G<^p<.^TE37`A2->9PnEi`b4W[sO2`SBuIIL7@q=0I:LXd2f#G2]srV5ndEp^u"/tJVPm!\G9;S;JV5aK@cYJ0t`<qPAXO+2Np
%DVj.Jr*-8s5At@.#Hq4D\["#kfDBgc`QK?Lfe:#XGIY5LqZ7g;<Z!sim]=+8HIUc`o>&+E=mEbOnQEKX/]HRE=h9$"qtU0@c[U@K
%mQ;/t@R+9@Vu+F@G.(.FaF:jHqr)4l=MK&DN7\!fh@HYk5<i?'?h;g?n(me[IANn5o;c=`Gk1Bns8DJWeZIku;>D^m@neIG%dsjN
%DLF(.X?'3sIWst5BC#Ng`SUSoJ,?-^<l9t_pujnrp:C93rQ.5#l`U!GJcE:4ftR-5J,S[/(U!+BGt%7jZ7:e&k8MpjF^E0SPH?4K
%fD,#[\_Nd\Nj:OQgZk=KRq[7[j$iJ"qkO%eEefqMk=4tYpO[1Zoi68^Gmk`r^W/M3qKLa1[oim<o:5:1)SF3O.3?Bm8t5?Sl16R#
%^-pXkhQ;/6mkNKgp<o.#je(si>P8nX3A7t'$>dd"AT+k<?Vieh^OQ,rf*P[J;YQP?';#e&T`2>oq7_@;@n_7VH]23_r[Mj3L9R`D
%4n:Vf<W:+P\OSkDjX'>chO;%mIhm<Drla+qSm).m`We>QZ\HMg@fr!g\9=.tjja:h%iEY@qs/<;/n^:=aQI-8;>JmZrAlZE>p"Nu
%SMnknG0@#a4hdl0cFSA0%./nLZ>qu&0VHTb<r97JbJDBuk`"%jVT`oOMU1*6,"%V[fIF]6?G=%t+#N>,FsQNm,OMkgOH"=&oQ#R]
%5)Yn'\odKp?R2'>kqi<34olS=f>iAh?U#3Q[efRFj8S2S:HC-:3FFM=mN;7>^Xt^DT5=N)oXe=s++1MKD%04_li_:fUZ+DBnb1i*
%&&6e)n,DtAhYj"S^O@_\>NLeUO.W$rmSqLVf3VD2J[AIEGke9Xq_p_;6I(81++F'YEmq)2A)<"8?@?iO?U$N!nbpJfa1ncWS$_md
%ZhgE2na,,`:W%#hDL;*frVC$,;7*k+Q.LA(kJki;K?7J=rqk.d$:4@8dJ]X%05n!>f7P"WdF)CVhV[OEG5obVaMe82UZ9#R)a0bj
%-[SmVm]%Xm6@OUgSG+oHHZEpaEJ&2)ij'MURnmDhB,*(S"&s9+O2(^%KU2n+$P-)6U[Z\sEj=Yt)lP^B3"`6-'(Sh:9*ls2XUMto
%n*nSe[sDlep<adS\7Ja,[otc-KCZHB>[RJCj7-=D8b%I0\(A@.pVUWZ?XNVKbbHpoNV&I<Wer8GrHFIG.iT"K8_[h&61@/&kpKU#
%J!n%94aFU7m$l&7YV2lQN7%2jcB:2`9CF4LB5SbQ=R.:15>X6d*`Iq$-XX:QCu`@d/"L.@I=2@cO.G9;f>eD^rk4lcf5=)ceaNCr
%$lS3Q-b@qm=P`8u]2i1Ns/Wp+ieqHc]l-*U<LeL5=f:Je\'YB%J`-F7+0H^`kC[!X)o$Z.6f?"MU;8?^"kMNo]iGCgchAVB;/S[;
%phB,4nG*=N%rTU<[rr:/*^8,LRO"H*D;Mi'T+uR:FRuCP5PoEkIfC861UrSiAhq*'Irt:;/DYUBB^P-KpPRee]>LiE<KFo,ZMO5q
%>H]04gCLK;$+66-++*8,j6c$dPG=E"K@.$NE8o8'4XZj#Xrgq3`f83eHc+gY2pnb*YJ9!/DL5aGrYYdq]!n$05HNZ<g!SN?CXM[@
%k?n7$oKhk+r:&0MIf&XEpVY2<f9Pd(88It'h])Rld?g>pI<n%+QEJhn!-EXu?Yids2E0N@qS<3d)W&*4rDWaQl`[L?I-]_E<k$]j
%o3XK4.r4ea<QCFb2BE;lqcQGCa`6pgrOYtXc/dU7RSDfb=oF^l,'>d[c/c+Y;k?45.rU#R>Y'd*^%LflRo''&j+eH-U\hg/:Y`7,
%2P>*JY<OEnF.:0XEN"0<A!L8Ip&QFjbtl*$5$i[8S\H]4o(0n/m;D83k1=GU?N#'kc@=eiXFL&>Cecnn+5C-6Kn3pl?@O$RlMUR"
%8%\'0k;V"=.kgh[VHa$!ceb.7f2X)1UYjt:l9D3aboi/?!%tK<JI;J^R))Ud6!2-7A&-ak]jL2G^[XDu\^-C]*^LN?ot!Mo?JQg<
%:C`MLOYI)P&Xc,OI.sE0`O.@;5PquBs6a5IrI"G7L#iX<DP98Q_<%(t"W@7ChOqL4^3ShHH`&//o'ao(inG,qF;G!XrT'NA5!8e8
%l_jDb]QWJlmJ"?j;C%R[^jAg_\9@e5qr_D!d,,X?pdnE[^ug\R?b6$P8'bJSn_i9eQh/7i*ZVooi]liPIW4m)-m!:jqrS^fndk`S
%?a^+TI:3'Jb1.H'+2%pdj9'iT]_^WCZfSZccTUmYoe2qdmafo%6.tAsm?s<Err'\A(F\ij\,aL+]?gI!PgQ+LmGsZG^RNH9jB;H>
%dC#<I/193@*R<uK0/)4so^O`PrjkdO,fb<,YN=B2lQ:YMo?Dpd;ucRh?ep^fhn3W4/5Inc]'k#rEq8M/kMLbZAA+<?Y@#!9er-lZ
%SbatR,h'F"`P^%%H/;UE^KBAVIdOg)T=f@1p'X+3me5qXG@.t+mH'+qH!uoi++BT\J+;ZR?XJ1%hgN6nRh[M<rCGe2GJ7#Gk)Jrr
%RoeI[o'mZ3#fM*4^\mbG&ZL9Z5Yh1(cWakR%HS'&_k3U-/,^iZF#]8>qK=<;]DhD+(U)[[ar:B7%eB>BJ%^1!iE$PngjA=S/G,Li
%48eXA)\6S7`3TL3^%_$kVuFu`/,o%O=0K;cl*\]!D2[Ma[YkqSrNb<&K0s!,XC$APma[O#eLT68]CY?0B2I<ss5j'G+q*2?FnkI<
%pKe!N:6WmG7I`VB\QQWtl\uifV"4B>8t8aMs5EJ$c,87"TKN&3eW]_LiK70D@I&@-l0DC\^USXhb,)]l]_0M+r/JVnaq':!:C^b0
%rmJhGDg[!3imhDFQ6UeQl)-/IqT5;?QeG6MHq@9!A/`kk?K?A</cF_Ahn)sTs%\Vqn]gt"4F$,`qW;",Dgq]P[9Lgg7H']e*l5ep
%^<jsqcX$DBjQ>L)_-\jFIsgqIK5^K;^&%0k5AWpZnpbPCVlp&E`EY@F^&@bg.dlC'nfFA`K'2U;o%fkk?O_,78_Y)-lb1>?hn&dM
%dFFSu\UNr*$dUs4O\k,@T.`ERn+F=?ReNG;kNmuM-pYK.0*p$"c\`-To9H@(2h)Efd%*;O\r&EfIIYjWcX-Y;gR!A7qY%*o:EKLU
%0VR5Rn*&RDi#MUcqN[7'ioV-gr<<m%L&"b<YNsM^qY`PnndjV`IIm,EmtfcHMct"Z5Q:#s1@Ar00AQ?r'.BOR"Ln0ulCEjBTh%:p
%Bqln*DPHpcKbmqljg@lP=F0T9_tX)j.,+G85?tepqG0n*?cjN4a^<r>Z@tjDkiL.5lQ;s=LO&pepVAW_A/]p9V;Ap-DGD:QVlh-?
%GjRKj-r]RV]J.1Ro8!"VGHT+Lh"o(M_o%ZG4/NVV^YO'mEC#7-GPBX3?Ae<^hL+ap^['%6U4,1n>o-nRgUghS3oBl*d"OE]^FuDU
%Q+M3el^*"ldT\s74?e5i+U#KQeF_n*9D@\"*$WErJ,B+UJ)<SS4@<I\^0`NV6VYH<U'7-FqVl"hNXoIP5IpR4ZI`qt`B/"Oi%Ep%
%s3k%^o_^:5gNq#W\b;#pq#%RJDaP<=LVs!rhgnS`BfLIpi<KmSI_GUKHU!!A"K3C`0?ZQPhJeqHXrT`,^(=$%YJ4>Wein?EX9A+c
%>9=h^SUTte_/mqZG5m!DLe&2Yi#Ue6f+*&`R-#ASj0_[c^%C1Q0*r,,n"9@1lgMoCI/=eLqYJ$EC7/\%rKBkjmpCQQ><kD7g5!9n
%+R\gH=5LXA^Z#@edd)rXlPi;"eqm]2mDA`Rgk#b%mOS%'IeBGW]&TjW?f$:/#fA4f0@`ke?9;tA55H"So_n(lrkAF&(&u[68$C`o
%osk=5lOR=ST)/,P+&KTqLOS:Yc=tl*poo2<e(q,BK'`6<pV2/MKYWB2[?JXTIQ>T-+23!mQ*"CE5%[\&X;jJ%rh0VX+'u^2l)kTp
%LQ?A&qqGXdW#66^ck>1I)Yt_8OE0l^_[g+g,\M2m`?.lM6Q3X]r:m6E&)7*";\0\e)'Y:=l,PlPdgt>b><`&MMiV(jj2tS-^AIi_
%VkAW)Fm7o_nb1MBhnJm8icdT`1WX:^^OGV)V:WHV80lX[r_"lVr:@0IrQfqSBDCPc_[l1u:JS1UY<T_mk_2g)]))-XUJV!>Q[bHD
%f+A/TO3d+90-C3"Ze^C4?hrI,]=C%Hn`@gk]N8G>q8I-D-GB3Goo%F_N@5TL[BQXHSrBR117dGIcb8t[9D,9b$q?>DHuZ!3q!GtW
%&Cl8Vk4\eo,5UT6h]C[&215A^5;(jNpG_"-oWq>CPdC2Yo#C[,T=fOJS&a-qqVq$hLu<NLb1$?N0AfGcN9p^k/B+e?Eq7BP-Z]&*
%>r_cPS%F^s5'Lb_gYi0?`N?Y0;r`<XEp`87K#:g=$B'92n`F2<dQT\(q,+i96!sZNde?8;q$3O^133NG?[X,:ekb_]TtC*f:KrQQ
%ip61,(N3W.n_Pe:(LOoLp>s3cndUQPgcb"Y[s!mtG%#k?OGSG<7)lfcI/)RQDo(mgpD,Fp:9EdZVrXtioD*0/J+E)UW49$9qu5:7
%fD<C3f5?*7h+,>/p2<[>s/LJ=hWNc8ZT5Vrc^f\qJ)T#2*aUo\0BC=F]^WeOqW!S0?_YDder9RAa9(g8IpT)MREr&'heI?gVbc=O
%((&d.rUSd^Ro^]F=FP_rlSnei)Y=3\^+T92'/$&m#li.bhn8g'hl_EJn(,rljL,Iboj?RK#J8!3mpGnYd^T*TDqr+uaVchKL%kWC
%o^rT1?Z%imIsgt\_^uRmZCmP<8)/`WR]h-\o31"Ta\u,f#%?MnDe\GW`g"e1bqISBU\jblIHK'q?[qbIbD/<rn^i7qs6@H;!LMf<
%=9&9O'=V-&)#VS3YMFHlXUiRTT76Elm,lT9P9#A8N,SXM_*AG)mff-<TA+Pgo'4\2r2uupgqS7$g,gs1\U?-E/9g@@UMIoR^El6q
%o\<6goT-/'r_1*(#rH@!gKUoH+5B&mq;(SE=QTSUqHoPAc[]!@^%WAEph9+GX&bh;r]==klbag2!^3r_:5%CDC+J$<_Bq$;"8Pbq
%jIq$H2CW`pLe3C^Z8BiP])D9oO%X2BhbfkY'mY&m`uj_6qXreAiT%%l@@C)<j2W88d%Ou3%<a8lnADH%gj/)QrEo$lFT9YF.\1`G
%qc;UD1[Rl-77.dUjtBq5<LC1i?$*O0^X^']6e_u/bC=%fO1tG5s16"Lp\YDG7m@V"ZCk>LlAogf76=ItrM=nD>BO;qk8u9%cEPYK
%d0GI*IQm]prpmfFDuK.>gu])(N1J"0+)Lo-IL,$XQfe%&cns=U!=jTqrVB&hjnWVk4S6cXn>4,GZt5gj-nVfn-CsaU:']=W,bLc5
%cb;X-p`K=,[=aW/gA;R7h.n1.nlW&q%pKB9f6[8fpPjFn2b&brTZ^e!gr\dJ[tQ=S%Xa6J(fX`L^d+KPr?.D.:>p!oFSj+j0Ub*b
%TcF7PA+/!%n=\hl@ndLQci_Dap%EaOr-^l0CBr,W24dul7G"=@c1rK-=*>+Qpal4`'Hbr!Tk%EJB]mXpp@`8^-pfXMd-a2^_(Sn4
%s1KQ2f7TT/3eR&bFS"7.EP>cj\fe[(cJq2?@7nIqo:7;0"6Vkd""sng`d%\!#Cd*BH1uR<./1K5o(fX#b0T#D0cR"ejt^-G+1UHJ
%i*Xmnf$IVorbp;`F!Xg0%CRqE_-9g!Y<iK"UD%SpKU&(^?4fFf$haHD.uXKZFSt=_Mr2.PPPN:/5MC3G/:/1>f_b<)%80A]A%cHA
%.Fs,^QSmrH&EI.NYU]7O,"UUPq4L_jO7:JcdQpD-Cd@uu/adHbArnBiq-Ti8K,T9X!Nc+4qc$<"(2?(4.;c1s]s9$K&7H@no];as
%:lP[cYV8B<rZK&h@k;Yj6@=D(;a9Krf=cSU8X[6nA[2TrCA.rCIt/a;'rasb[-V@kjAXq*1S7%MJkIg2rI)"Wrmt`o\oj[n;tRT[
%"oSo+@ZDTY;7uM.80%XK+73@DEd2(n"h8jKn<XCVDd1'`jJ=LQ.Z?i5?Z%2SqaR486[&3<c5XnY<.,ga(Z,^MQb0OV<$tI8-)Jf#
%abaQ6!+Q+Rp'?tM8>[MP@10K#Upo7CKNc]KS'_F.W)LDi.)'R">P>pYqPh<lad)l;m]apG?J9=[H4YH\hu6VRQRaXmkeO)+]XAf&
%EMPl<m0ohhesfsffrsJO>F,SpUf2sG)fo9`Qfe'm5FG;Cndgh-G$4=Vo+=1P^r?Q<1!?%3S9>#,Jms#:n]"Xmp-SMH9mJMUBI[T/
%J2a.gD%/Hi6CfD/&NAm^TImVT=*$DcU<&IAYI:@#/Fa^+Vj&_HPESPWH,5\,LAbA7pKh1M,k(7e/mQ61.YLgW=CW#lXgP`LmrE=W
%!]n?hpg"B8BN[tL;Y9FJk:D8cNHo&tSp^N#P^d+K6j!1ma">:&o&[c!;:e!VGcIM(s77kbH,opiY">Q9d>1*l8MM52PF#bo3OZ<+
%"jPn^6jVr/WIIm\-=&57cH_%GM?LK!2;eH@;1"EEjkeN>W(94nQ[F*EOWd0=o@qHVXRN]:M9"qEOs2>#GuM5khmt%$*]nK2ag"c-
%pX+/cUg$l$,g%0;Bl1o:Ee]A[?"3\cr8oPC0?Esqn:$&cs5/m.#QJ_t%Y=<C\$aQ]"7"-[B%-.r8ra1`WPuM`UM'V]IWI=`B@1>f
%p2)ua4a#(fMTd2YALh7f5ddfiJIES"4/fhP;4ogq^4R;T3b1M&RE*2JqZp27O]NM>\EN]VPSd(ImojQC6n=F,cap!6alM=c/4Emu
%,=n:/,4jjcMWgEpVH-b2T%p'_[]"?([HLdK'EA5Y/GoL`"<;b/1Y*+5,=JDn4b^:p7$L!;O"s\5.0:p8j(+0^q`M0rZYm"\D(&V`
%ik^Wi:A6O"ob9Vh9^]dnqK2]]`$(XB1k.'VbM1BCD.peU73;LCGP*(:h0fsq.7WOb?='S]'6bog>Yl#Sqm!(SV%qB5@`#_gA64oJ
%DkbtK8f^edaI%?<1MW/(GF<*sjR:NiVJJW#B[L3]@)?qJ8TA%ti8k%l+b;B6QZ?%f.@E$dDC<sFZA<Ap_9"Y[D2au(dc,apd@Y5R
%fSs^C<S.ABDYYj/INP7l;aSX64*c)t)gOpeL=S_iN=+!LWB3$mhrtOsF8YF@oo=*]*T?q#VfXYkTc*-m3:=)'JuJlT%4Mqnrho0Q
%nk&7\``>Nl?n\;\0IM_:->sKh(&C!(QlN2L0S/.dd;QRs-p'ue/2R[t3AmTX&>AY+=cTR>.LCd,[UD0&ff:@Sk[7<2$C.7"KJ$)p
%g>%j37.<Lb)mG_Z^Cda_3[PHsLpPdkK\frB,bfGnS0#.%Y6WnB&4DKoW:1t(,n](X(?>e9PJ'::g%nJ)*uH)2T>JdaS6;(NVT=U8
%QSJ?n0l2:o>H(VRnt+FG-p-W-[PM7l/qNqBZfV9Let'm%pFW?-(*\(qJ?"Eq8VGGp,!p+="j209-ADI@\<NbgDI&>M;M7u_/-9">
%G@'-cO!2hq&\E]OKI)/dlPh%R)(l2b+nD)B9V>XS"(CUdd2;!1.!.m9^Q1<If(3:`nF[8emsAI&BSs5)IW;BOK:!Y1oN9_C59Z.(
%.36`+DG?V0G15u?jQF!^IZnB1DK651JAS$I0Lk&b$aN&g%MFF25X^hG-N9.5lVjB!pa\3I^&.RA/4ChOXupRe3pr^pOYEfpZ&0am
%j)10gT'Z1`id?l0Y-io"c+)^Bc8iQj]/DlBe;eC;'(qs#_<_Hf6V9(1TU.%Xmnp_+:bC`gUlA8Ie;Lu+nT(T#%igF.#CD/0O<BoD
%`UrCiEt[#13''A'+rSstBI/8FUX>SG?jnJ9gSKn4m_LcE!i81">dD#,6L$="iclY4((h>D1XYTAh;BO]NT'_"(&Ak7g^L_b-&/E2
%U&VF-jlF;U/8m,Q-sP]<bTD..U6e<lFWseFf8J]Mg$gR;<o.9k;$G`O/p.rS<\RCEp@DQ#Epqr?gCnGh^^CMRW:G,1:M6*jb&H!m
%p$ma&a#T6P<1&t_,EiFV-%+oFSrW;OafQ'#@G;u#_"`YTb1dEf/`L7!A7Z];iFJ]gA0:GSKt4QYK13thN^1Sl7T?.$>>QKV"*kWM
%.NQANi\i3_jg!NkJh%4Ih:i?n^LXda\!_F@*Q*-YTos;Cf]9aLn?1tofZ>'NKtL#rEBthR9G.IHa);#iY9N&;)0ji]AERQ@J<6TK
%2SlFV.n(b`:3DqRV!*C%<q.!r#XjGb4p#($]kh"#32%s9,c/?@JHsal^3"cV5n\ir;"+g0+D7$0%WtNR>_bb)/gU5X,VSrRA^2Ld
%3Rd8F&;?K_Mt$K(8F'<?]@)P*dXs[='X&\2j"uX`T:ApZ9jD4;>4N)d/SM/)Ut#mG:8XZMo?(;bPmck>d3L9+J+P4t%SA>#6Wt5=
%.Iq-S1E%MhK[j@qnECQSP)bOn$?He&*VeHBG$#eR[[$lW4$h_rjI#Xu>es=gp1>Ei3Pc2l:OQ;te*u=%7b`I5[/B.m.U3mhpoQP3
%Ds[1La#E<I4IP.<MOS>?SZdA&?FQROk?r;_$`iaO^$m9B*s"YV_IZt;=Du1ej6NZT3uGs1?jjd4j:<'"YbrmJD,!iDW*?1O2EkAa
%@_15Df6e]0,V%bUZq"r*6H6lUZ<W7;l$2DXkKU.^`u:8WAeEDV=N>W[mT.rK`nCF4Pl0JE=s2k5m26%ZUlelZ=1ipjg;J*>$*Fus
%QM^fFqLd6n>W5MD@3ZfI:%DY2fdUVoai(VZr+fO1\,:UUZ?c5G%FiQQ`^@<T\bTflgC"oAY#i?oiL/Mb%D]9"3&0B2nn-jSl6=WE
%jfq-*`OuL`NK@6DrkAa_+t*^1!N0aq/^28IJHcCp_HETU/%0?NXM_E(TVJ#*QOM4qm7ariK8G!34F%+[DWUSM*!%.ZN,r0_&8$aV
%.2D$cYG341`+$Y+kle;dXX2o?TE$Od"CSPHR%=m(1>2,@TL:horo%OcPuH,G*1eAtFGOr]]>1ucjAe_qIW26Y[MR`TU/lTmmY'&I
%o\qqqM54>f2WX_a84Nd=&'/4cIsG?f85YutO,"ss[>>t0a+qM"D4<0>dH[m[0W-+u]S[^a;Zb1KG9HuX]2!?KjIqff'BpnAXoMlW
%!M_r7Js@b4D]k4<Ljr`5Y=`h@-tp;4I@_bgnGlB=MOLU#PS6HXbK4)6%SMms:a2'&Dm*QP)2#fO,D:TV4i>hpg`4UX`YF<>+Mr`C
%S&4?:9&*I&lc=NH0<kRoo:;)BhKDa+6q0.Kq2\WEA@S6/>"3=TLb'2?-7L+h/dr&maD-B+S$%Kh*uq8!Q>T?MRg*W"?m+[i'%,f0
%C2(Mm.k5FLCgd<dr72<=;<_6f&.hu@eNqJd:tTVsk<sb*RGelC9p&RD_*N`^O>P''M9Lh,5Vj2kQ8jO.9b'1@"rnR:./H@Dm9b*m
%+M870W/&NB`>%9c,8+,sMXheoLQQF?0F]si04:&BSV27)4!jPrE6tTJ;r(C0'CqIt&u/bJSE,!k8nt(Rb#&t%K6tnD4Cu0W:j+P!
%a?P6l.8EE<AR,PIGR?d!_#X`1ilF>B-2RbGO&/^5ZY5OHo0XS=ef]p%-<#Pk7&aCtH3D"Q[j!)>)E&_0$a%U-U2U;>SPe(>fE7E`
%nhLAKBN.U&_CXa_EX]_s4YEdD_s=WS@lRk<]j!pXBN*h2*)c3OlpQKIW<Y,%&.)We;%d2:Bb#jJ-jgY0m%t.*f'"7UOt*g%>e/je
%<5"BMZ7K@i7UA(4<6,omDB1W@!Q!<e#g>S8i(/<-_P58qKb=!f2PnJ#dqo_t$Zt"<o&W8F<<P39#!`bm&;iop'`BhI-s#:kPKdDg
%hVA<C:bIEXAR%a'B%eF)`h?sCr<(7_b]I(arQU[*<3TEaQ-C4s!b;XN'+tpT!(W?2?_MmF(q;?VQV`FN/#4JX:JN_i64L:D^uKtL
%n%`l'@Zh6.WO2rBR4+BlQTWc<,m3fkgtc)TWHTJIqmG=-6/00LJu4%n"^NQ)s1VHQ7P,4;.:p5G>:6b.7N=sc$W]^:b>c@>.2P]L
%#`i`eJrR`30Z4G\4-grp99@Q_@(.IVGb=^W/,8k8L'#%B<kV9qo1]r1\Sf&/]Qh\4d/l_rXO%#f6U`R@),`(7G9"FZ$[GM_MMm:m
%&`/-J-+g0R$^.g3MPr3pNN>3b;P(cnX"%\WAZ(qo0@Ml"94e]a:lr9uPoL'mAJ-1tY+`2=(59`s)M?(g]XfJ*!1]$:;M;t2T[d*9
%_H*b3C4L)S7>K#eQ#dXW8.LTJ/0)1Bi/IbX;6HNf^+>&ZBYM`Ir.0AEK*h]?kakc>J.EgeQ71O!]7.!B2EZ8^gppB5G)71_/<':A
%n5_QH4ns]1.fBoCA=)l>$#cks8Jh?)L_U1Y1*/(]9I9NhYT*jR=2Ep-YDRu[njl6+]549P#n/n2ErA)EQa&R\re9+-_(9)WZ^fV_
%=i\00f2*en#?o*!7@m@qTFo"PYd0?&a>mi8Qq`n9-ZW13k$a:sk>'*edU6eA<@0TF;]8:jFkn1UQ+H"mrK/VFn4@pBER87?&[ipP
%&4XN1R33WD]n=[4bF]\]e.*_lSgRitMe,@&b%qZ`/jaLp;VdWrR"-'P"7PmhVFlqGLL^Is%XMm7?>k')_&IR^N3imKfuXioi>J=n
%-KGI$^V(raWp90p&3hR=aaki?%X16-Q7@92q^E*YWIj0Z:C4C=L)2SaU4<@5L5O>&6:9S`J8fE?jRirf16Q<-C(=/j%@cq2Ja^_R
%3CjXK5SW`SR"F4bi8s`pd:kRoom"8`acfsEi=.\;YD]Cle6i@pm[j)OQ;r`O=]J96]G8[EJ.RC_m5UJb#>d#qZmSYkVSM&De,[n^
%3iNXF-^m7XdidgOaf8@;#*ID5,pR<3KF'u6]F=]@-AW_V>'K'X;fMKP/Wa$]6,;J3LP&#4:B9^)G&-$#=3;)r)`X,ke:^RI!]1o$
%5@JN)D-Qn4a>pZ,7^b`&'eV+M2t57R(^R'2OI^uM[3LSPg(pV`3*iOX_-f3X)^9kACSo>pG'Y<HOV<GGRFhN.@,!bk5_DH&Bm9!h
%l0Isbg%9;7Hb.;(XKh3GN,G)_ekM(J:!E551\;'G6/hjZL!**CU:`G=_7D!K365SY:GI<QmjV<Ab=G)#2%>VIqJ5$"8MG\3lqEQO
%O?u++B2$.B/2tJ_]*>;Ra"a!f7_tSXO0I4<kE0YW;]tl4;H>aU!%%t<:uHkge/:@tEfu45%0=/S&Pkt\Ne_$^Z)@=QS?u&@f;ae8
%2B(91MF6X%"%1-Ze4hopljeSqBlRP!D+V0(&<p8B8s/#2,`=p;neO5*#MC3X!C]4(Yk:oc'XGY`a:IA"niB+D$U-GullqsF0K1=c
%\t6,SjY0[Al$:u.+QKhD##9FQ-qO`?'!feSe_@Orb(<8Sgo=eu+XtNWF^cKJ.5j$r,oC;N4=3LnM["a1migGb1M]>fP_'2YA:]BX
%R73j$5=)%EbM]JHM'eZ7af;\EP?eJf*<8r3ZYXscQd"5Cs/&_:.+!A&+>8:e(<!lY7XU*'M?gKGlK"Z@&gFe-e]MH_9Gn4Y;Bg/'
%04>#_,Fj;Fm0(LuLk`g0a"-@lL$aQ?'Is"*r6SJFn@1?*$KT7R,1s#h1i=X*U1dR2jZrRgHqLt5NClfO?4<2;Ci]^c[jaLW(-sBa
%o#YF4q1KDl9MdXbXAE$InIPe"0e9>^hEW9R#q.@f/gnTFY.pBa1n.>&]uK4K!\gqE$8O&m'h2#>61?@BUCX%:#[TLg(:d*/U+6pI
%^B2q2P!Kfq]^0\!:pdXU^0(t'T+Lj([$=WZWt[seP\d"_]23<;bDb_,RX?n/Bg/@5AYAE,2hJV66'Oe_it)g!_f_:BZ:S&AnBJIZ
%NG"sbKbe.:Vrb\CZUHfMTl;2,$^N2c?*d^uTR5Th?k0NK"]uq]:?3#I:-3P_3%M.qm(^(D']bA1+PNQgJ2H$'`Z#nJR('kF1%^,+
%_d&>E8L38jqR&ieG]dFW-\t6Fi=ti^iWca3:P@:g,X`@Q#\ojHmuCR^gb9mK+B)Oleu4CbF5pa;5biXs@5<J:8$t(=kr'a\WC=ll
%eDVVSSZ$K7@6)aL4S,e@<BRA$'AV4L-TZNaoECjll3@ZeYaYqt=u!/dF.9DL2'4j+Vt$"6kNj5O_mn^['AgIcs/2KEdne$LAQ_5]
%P8A!1Os*[We"+>iBUAum/kI[`q36b.L0K3H^B%<l<=#WbDCYG_3L_58E#1kaY@&S:m`##(c*#ar.\=5NVf)%sP+Q.c1Np$UQ*$J@
%KG@9Bp7J2,i=L[hE*XDfnr>VJjJ*K(.hp6B=&W<eippQ69eut#SRCNtSs!U;]c*db@%`p#q_Q6ZeSWBnJ;Hrok970K9::;GRZ.qY
%\;N&"Nem"u&<XLSY%^b<L9S7&@Z9kJ2I'-AR*8pe5fi[B16P0"PR0+*s'5M:H_E9(XgV^9%B&nm`;CZrHji/tb'pFS71HCDr5&;'
%+U9-,";j.b$9@=]J]0TA;ljB),l!i1Xaii7</<REN",rsGm8X/)X2[#PcdRm(kA;I$EP083>kk!O+2tE"GJiC@=k#1-A%[#lFj'd
%&?=_XU>M`*Tc$V/c5k(fR#JYF0N;[#+;Zj;(dkpZfY!/7qO#TK&`@HT0*;H->m(KTnRsuIoPcKnU1'L^:"9mH3+Y$f,>;3\>6#,>
%RkS_=jKYL!>u7I9[;eH-%r6MtUQP/al"udo_:`/Z\+Y]uR'f?)%ZF1Zk@B<9S$"JB)8LcQ0q5A_GYL$7k0%Y$cd$-W>IXl1<@l(g
%Tl<GF1ZT&JP8ht-`/ljq@e@+'.L<4Ic(V$jTP$_7HTd9Ub_@STN`J^'D'>bu))P1'5f0iBV:gRmal/a`Z"W_D*CHJ36!6*Q8[NRI
%)A?6,3>eBZc31b8fl-N4!g1b"oSTPo?mg;\('`9@5nT=&JhQ2=`k,gcSQm4/4Ys2,GE#2>LY"Xji'g8H1P'.=\H!sj?.k51km<nS
%;)ot6N\7!(=GdcbOjCM0OtZZLZql`rL1#g#cF?,ZG#rIEj.YB<.+0o4'\[soqTVQ:0W8'V'VI/9+&0cr)d_Kdc3TI:El3qaaoN?M
%iO=QHLcO%!-Zh,_jHpEq)kgi2/VH)7ni<N;E'?@U$$I7s(6d-Kc-Bokr7p5CncgR<1,L,@nYu.ca/Z_r`39NBht=Lfh%^tk+'q>u
%+[#XjX[QnFN^M4NgMWP-:?Q/>7SX.BI^%(#<Ij"<hGm!SGFB\Z"6G`aRA%&S\hOuT&W=rflS*_g)Nu>L+sG6bK4a?nL"?02#]J`l
%>)ta']>>a=llsIaDCcr&hDPRO>JpMg7!Bc$FuUjJ7,!$r#,AgpDB#7>hG+=X3RmY^5!,DDJieR*![S=e-JDB#kE&Vc0$n29#.1G'
%)k#g,<X!s%NAG\"BUOfp)d];&'8f8@.=*,&C<-I,<X+@I(8s7]7f2h2:8Xtsq6D?1_PC%7)Y7OjT(--XMtQ<@c1"A!\D\Tij/(3b
%)\=b9LTDmM1Yg`afL1f;7T9a?Sr[L$Nnpl-#ZlR*=",n2"qEH!ZAo>sb4#L;prY4Zcd(]aMFa3j-=-c'aU-,##\B`k^/hh(*Cufn
%cPjJ6P):(G&4K.:l(PP.__81gOTJ`Clir,,)UL4jLJU]eRLFLQE>0ocE],q/^s!!"PE;;VA5Gu\9_9n(7eut,:8V^3q*`?,$B8&2
%(SOt:#nZp]DNrJ.B80^e[ZVe#FOQoS,;L\dm9.:BJ430@#[g;J5scNA0e%bZG\5I1h%_+gSYsVE6#ET:iYnN+.PY'm$0NFZG!79P
%6pAuq*PHBq2$?8`![`iq!(IiuKC[^c9TY1$,IpsU>7kR>GDhRUC<.j6(Ing,AIrcLR"XFKh?/J_YX$NnCYN,>OqY^TgC-.i=d0\p
%Z'hCfX/aZ2O?Ph#P6iRQ3k<L)H6U-#0jTd\KRr8p3tLZCo9j#GK2%=j68u+V#GqDZ1PK(H01[hdMFVrs%@Rk04X*LN?(LYu"1p'G
%E^E;peI9^Q.M;_beD?)pmnh_`31lbfaV9ps@5?[S&b-j]KRt[`"-?9$,COl'1B\q?_<A6NpQ6V1Lr%8h?[:XQ,.O%][)fHu@YmE;
%VZU%\NN>SiRpG!8dj6uk$o^>KL^e%g,:pGFUYgXng$tS+d:i-*C;=^&">7Q2j:$6<o&jD.FuU/jL85./%!@,,_8>k;lQZDLk0D%n
%1GrNMh_q.fR_j&#!\_k0C0OsgOgFTJ2iYo5K+DX7,JZ9<HbZE`T:X<L%#Hm5/!Q*'_LiN;VK4n(PZ9P;D[4-lB/;nl7i%b+;03p,
%V!'B'PL+-9S8k35(oYTMAu,Gb_lc*QF[49341;af,UZ"HCDcaXGk@%*WfCNM18qls(Xcq$F>?:]9dk$W=(lD)N!W]/W6DuGL\9=,
%9b8;.edNcIKH`"Y3"LKCTZ&CV#W.6t5<p=EOX24#dS=I2cEJAAp:Ed?-UcA%DH]mi?1.cd.dl904/;($g8@G_1.A$6BFH4l`32m;
%MAcLtA2`mGqt,PR#]9kULERk/P)SXh4"rHD9JX%^KN%b[H@G+peg+KK3(m@%fnA5TY[b9q9QE="GVifFp,$P&)A?Yn+&kBnqWr`-
%VMMVTOq1$2c)\iOBJN_`VpNc-q<WJUkXA7*$Fe*f0`I0$J.i@FeXWYRlY_OFc5pd9*VRL9gQ9]^UY9<]B]O!6+=FeTIAeWG.Zql%
%O6>GJFu1RF'\[*3B+nr\lI%!e0as[JhMf*:p[i!.Li#KDPoE!XF45J.;\NZP1QC@J6e"PE-49RA%[K_"M`2Y`e@%,uH=ks;h\@%a
%+l3XrbqKdCWMY2\eJMQb'['79cd(Z`MFYt3W[s(*Ddirng;SLUa(r-dkHjcJTGO%:e*V[?=>^PsWa?nu1jPRI2o#k[1n&rFgX:_2
%8-'=l8(2Hp_eVY\6:uL?Af=A$V;JGE?ON\mc9_=!J52uOZjCNA9+[5Qfe!jqB/H#\N9?j^H:0OlUNgT69$Jq,3H\kLAqcOamqV:U
%"Ar+_:dfBR[4'O[!B`1)f^9*1R'.We\I>fY1eeOQ]3sj)KBMSdqWr`-VMMVTE[iE`(NX[0g4jC?=q-W88=uI!"MMm9@DP(aTn<,#
%4_dD6f7pWKmR2UW&BmXHM[@:TFWH59'\'KR);"So`Zuq=;XUP!A\7VShtcBb\!2&GI<n.+;bYnm;,-SK[LtgeMfl;>Nn80/p#ue-
%&.C5&]%IZ)?s6!5,?5?&Csm-.2PA`#HHgn(I7\$qAU<^jFPO.['e1p]ZKmB(fnZQ$7gb5NEJa>TFro4I-Zh+4V9S1O1;1_NQcFJ;
%(Sf,\?Gp,_T,l;^_%l\n(b10r8EYa1?Ls@"/<%#Ej=QfkjK1fb#3ZsC`k2N9-0nuV^M?M`^8e_EKSHMQ+ee2t`N?U:RU^bl5UTK(
%EkWaqU^kph=:m%$*+q[-b[re(qXf;Mk_4DWhDe@?@^G*K$U,E3R70_uf`W%FlM5#LJC-(J)Y@,-J=[X%Cj1S(7brF!)\G\TjH2`D
%2]HoHAlm];o[s899JL5pQDQJF]uQrA``*tRac]pj#OA\uRc([FNZ"NCp;e#W'S8Z`h>)fr1>,K,]V3"B#bL0(aN[,RoshHf2(CU0
%b,#<K5LiUh'[T`P-tlIN:$k4CoS?8>W3ckj.\QOGA\RN%O_QDOT7ch$$-a#d:e!nDcqkO:Zf>1]7_mgeV,_%oZ*56&fqL2F<[TZ&
%Y2.ahC=KNA'co(MS9:tF1Po0\0;4j6`rKJqpikYDG!7904PG0K_eQ1GUbSG(pI::JNlo=^PYY%eJm0*J-WL4/L/_K8Z7\Gn/u0`G
%K8Du95D#ulO<0L/iCAEPF01J!Sf-.']11I6kXBV3A#LF19p,2"G0H9mIQ[8b5d!YefA.g"F-.+"qp5TMA@5Wk@@h+&cLfkIq?rer
%7_]WR[Sh45e-tD8AF>;V->Pj_,jg2/<h$Y-m./@lm64J`[o9=>j'*2[VZ<M8(d;f+/UI<@_gd4X\PPtR$W[Otcl*/LC;t#YF1_$S
%B3sb8ag>j1VJS,3B=H;:=8+&R\MY`]`,03s%p8MKm=g!`AgQ`r4mGS3eKlFefrU`(!j.=l;[d7u>`Ut&Bm%^WluXX/Ag%LA.HrcN
%/AoIiDoU*D,dA821Z''tgO.8A!>2u%-1:o(%Gdk!p,>(%eZdNGausiX+UAC_fhqH4M$i)MQ.$Z[jp`3?oW]b?>G9/r(pA\Eg"1K0
%FBJaNTaS;6D$]oYRUN]"o5HlVSs(TAD8'gsMaUU*LB+\LB?Hi#KX;ESo@'*N(X,h,@ZX5!1eQE*KLde1+'V"?WA=eA&DcknC;I./
%F'FrVB&'ZK'dbZ/B0ugnjEPb7&8F_R%0(CR5!,I%.4T2OBKV6eMY`]:"<pdj@oT2TL%a139e[!bCXeGmLF=@C?gh-@<2%EVRib4g
%bp;Wm<7o*tRu#p0d@ZA5)d_Qf'4r+9%)of;$1hWqJJha)^`@ZlT$bXoQStPh&j%dXpomHU9dtc?GV7jNB/IN1er9YN8kuhNU@LI@
%6b<T1j^S!:.Jj-7rs+6uj%#;1a(ACt`,ri3[:H:FEuO@4BQ585/6Sst*B9[^ccHl^gg@PC>f^me[fS(7`6igJ(W'g?1I3U9T]JfR
%pm6_&#m3]AJE8&eUjcB191jqDH2@BQ5r3jT^llTeRFC3MDV'\lTG@'fVS(i0%P%1XNkX*1JV'8kAGdG3dfVY!+O[,;(2sFC0TXn%
%MC*WSo02QWq>,&B\7Mon7:LcVLf:(Wfgu.%Aq^=DRB;h(RdH>b0d_YZ<En(M%`GMHaQY`p6L=55<\FI"C6@dhE\X)>mb-!Xb`HN0
%-*8F]WQ6aa%I\LnI6X6SnCcL=OGb\ibE4=#lbT=JY\NWW<XmIgnIe\n_nXbm6]*0q%a[%GDDgk7mL#/J&/A6ZadP)JTb3q]U)dB3
%l5ZnO:?Z5G8t.NQNEg"q)pmG9mH\)$QsFBt*RP#-fRu:kQqga`:dUF/N<_!CVmdkr7I-D1U150$DMfkf3O3RbF*_*Gn/@X`Y\S#M
%^<NZO'@t?gn6JWK@"!>f-W<^mFO'&<1)^j;g)e"o4-7e)qXfGQq!G<cOj_U</m89"`2%,/+B[Ze2=tj&i&/oq050Q]]8$Q;TOB_G
%f^KbPE]PI8(DD4+1P#\UjpYnUKY(Ml?_>Zd'T\b:C@T:e($RnY,;!]@4kq:U@.(i+m!L/4`>2@[65MZ8F[Z`f]b.KlRj4&lW_?iS
%ls9l+C+G%oA3SklYdWFH+upa&<Ao2o757c)9P0_:,+BIqG9D<[5UTK0g4WV0EN<1U`e;S!+=cIsp2eSE4e`gGAJ;crR5Jb1ckpUo
%[3'65eG7HnI;gU+D*4P3H<K#N*Q?3"cO;o/]0[h+"7'j]m#`pQ'nfnZ`j`<0T7cjj&Y2TmBbSLN(WjaZq6XWG54pf-o<:D?Ta?2D
%<&lJ9J=^@64Y'DXKa*GMBopriE(Th>S<%"$&O#;E?.O=6>he]cQ(/CLmq?W12#gRND*/Z`;RNuTNqV]LS]joEo.^Jqa@B[_k>gLC
%;47r<#MNf<1rF5NfKmB'06Y!ALsiA^6nTgXAON+JHWcL8M_t9V7pL9oX`6Mjf^0$.Qk*hkL'gmVPkR_B_&'GB<Js,rL%O%!SP1c[
%$!GMj'H7oV87@oFdtU9d4r<Ok'0:d(FeUQ&KCa9*!T]LA@$KG9Os+Q_,c,FFos-^;Y-j#Y784!`\)qeL<]&5,R=-<4dkdq9'I`3[
%n,@F7UYW%$I7u::N>]0QUbVVh#TbfC@;Cn0I1#^3lVOHAf#U:&=*-QkPAfrETG"s$UWsR'H+mRm-E\D4XF.mO!?#c\'W/4Oof]WQ
%KWJI^3Q-HF:#5i?=YKg3=c;T=h)+p1k+Au>jL+QMB>hDl$stGa0E?tjg4(?'&pj;R.h-5=j@X2T@$OD[j[/bH/]9!6bF4\YC%gM\
%s#FjPCHu%MMjasp3-\*p>`ZLYkK`4iaL%k]'Oaqo=%:KLU0&m;pa*?cJM2ob<L8";C"(3*[5J\fUS2:H)C74L'r')b[0_#b^b,t"
%;a07hqQ)gt66$0-R)X298N%jZor&13pR6G0SI)p7E9t^-]&slTnZK/qC1U29$9nXi;8<OVC1tJZd.rKCL.s02#k(7%XgmVXM=N^a
%2,!XPqboSZW$Wb=Uop"YIeL4(!Bmb`6<EB<i,$*A/(5db)2V\-JQ:)mk^$VA_Wg9:5dXk,,j#B)W+Lr2)9'*\6kN4SDi!tdV-:"A
%eQH#saPukqU=_0LU$l24Z87':"BJAL3csW/p9Dk[!JF=>p)HfI[DVt,2i&Abg3[47(R-2'<\nT7,"YrQGNkjBF(R=+[sVpl/Q6l4
%<0*?_mq3.1m&;Daf#.JgDWQ7)o-N\P>&Mp.9H%cP.+DpUU&X7e6L1%FW'k/fatut]?41>o(g4Qi=bO)0En&@qF"H,+Po''iD?+j#
%NAY2qX(>H=(<Ekif0451"8qk]!s$B7HCuVFrgo,IJVkQ@NQ`2oH;cYnZZ]#I%`B1Fq$BO\nd"mIdC2Y>7OOO"I[AT[CLS6f5.FuD
%5agPFTau<UI/Z1O?S^gf;/7Ja(=qpP:Jpf>pF)bN'&6#uTuc5?b#\4?:eDcOVoI^P#fI%lrGcfM\t*8`HB4;-Q8<@K/;qbWCbqVo
%S!.jl/)*qpS%%&=L/lh]XBO<GC$oc,3hG<[lX>#+k+c5,^VenY2adqbE-O`feDZJ'hE/B"n*<L<I_>R'SR9-Yq!GZG[U7`#c6cDf
%bO>;e:Vu>K:0)fXD*\mdoL7osbHBu.'\dil<uWR943Sh-g3Qdj&$as@meM1aWGVra$7XQ2G!d*hXQ&I,R"F/aVM1>?"-dG+e.)h!
%\usa8g6gsf7RIA.PAL9C[M]J:M=t7I905-3&Cn5EkhNrcDkZ_T]GFBudC^X!;Zds!M0<3FN5HXNp%jt^"b3DpkrC[mG]?dsY9=43
%]K=-K"8:G/(FRI.!9h3gKWPb%h6L2.C0uE8b>[L?rN9pFUD6$+5R7Mh65p3a3[1sP(#0h))Gru.B\bG`eYq&X1A5BfdAb])^D/>(
%dA$o&*&VFN@+_U/a9CsD-limQE)3-jV@]*YO;6/V^j>=A[9U`;Mr-;ILd[!KW"?#W00(c.8b=V<.LV9fHQD4rr`EmgZsC\081@b6
%GsGb6?I,@m+shG&kH`ea.YS556F.leI7=*#4=mE`m3kn3C4XDHrI#ZKr5b<HXLKHRH1]8+n-m>I==i\%iE%U&/+'*Ei#[3D(5D@Q
%*^>S*Y^\L#D*UZ[VD6GSal!mZ<3D3#5>jWH]?k`PiJBYCBr'c*dclC+i^,\CDiLSj9s'/M-\6/8h@Da`U.Eq&%F6J.2k^i1FMsA<
%"-&A+%JJ/(eiVS6**ZU)P)f+"XP<rc"l+FP(G]q(5-i8)]HVC$"GKg7!h:KA8.J)XeI7@cP[iZj'4T?GjTSY;=E\#BaCaEQj7`SR
%@H@-8k*d&%:H0[/P&'!Xgfs:a1b:VJ,tHVWSHY+"m:LngiO!Z9ELQ=^WI($rX.[Z\3_I@\CEr6`XsQrZBMg*nS:Vq9?5jmr"="*<
%([+\*632]&!DUb!RDA<)'H9C%$'\1sdpEO7dEJ>;J((K#*QfjIKg0CN>BTZE$6c`4>9b>l=@%B]292FS;csum7Qtp(WikeJ[M%D+
%)<Z`"M$C0[W5[PD;E07==UmAWi'`An"!).T8n\9X`QhWoXIa=[.![$V\g)=Y;@-Yc*,n0s,!d5hlfa^?[)j&Om@fO[ILF&$U`f_H
%>m1E\Cb@FL\&7Tm$P#OtlC#o^ADp@>B9PiNi)B-DIVQDm;2qprb1Cu_[\^oQJIduE[s'%G^"RCmj5hig"Ri6cN;B[*PCO79jmCGt
%.lQsQW1>=<H:bKRH7uW>Vah:ud-aJ=/d?J'F"9o"YotXSqd&DJNH[KCB2<0\.K7HX"dlc"a[bY6f/2CACEQL$#>HHd\Z@3?:rtR+
%H\<k>!."-LFHd(t/(6lF8<NFBi8`02nR:fAH_UlVmMrBOp"H>H`<To#7tZY<lkY:c;QilLF[/6PE`ACGA"Z[oG_4:=qcG-Nm4]AZ
%#K/(GYkTl%3o8ffG4c<q$Bu\@q%Bfo/>1\8d0uraI<r`u<f>]g;@V1lZsGr%j-%N7D)_TjaFOF,Uf#je\-G`SD,Agu'N)NdmX<IK
%+,!M,_@A\p;MPI7HoJLee';,non'juY)J9rk8(>8StUD1`>4Q#TcL!>C**Z0TuPj?eP-_h3KcNk=bB;5q=!sd7k*.]<[c/Z't?^P
%dPspZ%95R\<HLhP:iUe%^D5`KD(;;QHbDnTdoE>5T!jg0bECO67VqWrd)Lk498uK@7JG@jn&;WZ=>j!0WTf<"[.Q.*/Fk(9=Hc<K
%+ne6!;+Dn]3Yuq\XA)#NO0[>a\ijiq.&8ii%Ve8D5T@IZ76@D)<H^)e/(*DiMJC1(7E%q7aQ3eU#t:^G_Q%/*CKas=4Ij+OkF#fY
%/CJ0V#)ZG42,*fZ5i5/q*r[<Z69ooZOcSeO'_)HC"&`-\#fr<mp.McH!2Of*C_`)bR]5Js[c*3=FH.0"L6t]nMHPEY%#^%]MR3g9
%3)!3<'\]PUD$*Q`[)@3B::3?adktFR,M_!)U2%q`A*D'lI^8m5I4PI8$1!f>1eJP.>jVDSh.8JCYsN`emt*Td_9GfNn!8DNaNb"_
%K.3hEKuT"+[==nmG!uJiWQYfAD58$,9k!omA;i%^Ti,3=+#&'gA%WPB9$]D%'V"V27j381MKUR?BpHMZKld&J:r%herCGTK)sGJ:
%kX2a91,+cXRG!X821lu&Y>C%2$`PCt:Q].*9i8t2_t76"1*R']WOI]ehIpk`PRFa%[;joT;1JZNlA\K.@NWu\PfD,&LB3D:WMmm4
%119MG_"&9$Ld]2JjD,@87%D\He8i1bjGf%!"DM()2YYdOO:!<-!CcTU*!f6V$M'1o+YJh)4rE>lP\ou9co2i*I^6lX=t^Ns`;SbZ
%lVSj$b$$k-l:5dd67$T1^K^`%a,+[^)N'uBO$?I>m*hu=U4k!<TmNg\,2,I4aN$KEiO!8/;F#XSX816`+!brT)c`R#Wnu1mC*$[J
%3mpP!@e0gT$e(7WE1h)N/Vji0/Kh4m;5XsX$7P0k0*S^l=6ARG?c97`fM'MqP@l^0`Y\%Frne<2$OtX8RR4GB4HtK7X?J;"A!M[$
%Yf7mO1G\H['m[?K+=QphJg:mY?Rcq[<7!&$=bAlZB:p_CjJ<9<:HT%"QtdBHk`INCXM=.'4q8=pF"kj'=?9k\?UT?CX6%2&lN'7J
%7FSMl^J;/3")T<=U'967JY/X$s2gTCD$Ap4/Q<hp_9u7]%Fm?G&=/`b;lmY7U/5du.tON#QLU5=nIiCqOIeM&qHEeh6(,>prLq]-
%@l!S1c]iY]Wg`1"lm-M<1`p^Z95WPXr5;N!^j`WIWLsPR0KH'sMGn;^f.r!7TWeb'<'n"&`f+:DdFa-0(a^`tn6Ic<QbalW_tU%]
%'8.WqoNYnqpV/9Ba/IWfs6I\b1Hiu4j4VNEdCDr7!@./%eLqOI#V6[HV>qCk3'b>A+reu%S<jb[h.d/c)"AA*KRCZ2RSC@u3]3X_
%0Of[R8mdDEiHgL`N]gNi6DBql3fg#@ZksK:#%1_Hs&I'k"NYR:kn>gf"36@aT^C@3"Y6kJ@'=Q8d>JR0/8>CkY<rb)FGt!p*$$(t
%YA-BTLh.a@4`Y.g.AE#Lf&H,3WNI,,9s9^\_RiHM6>p`ge-^4maUp*9(WIAo2Mf>894tdJ?r.fMZ+G^U3FhXs\^Rh4U2#=GJBm^+
%2%,h2W%n$G*"j>5'u-3k:D5M<<"Pip,#XXf&pR3HmP\52BM@Er4QeSE-c/3d82fD/^dgRSo#<H4l1P_J[*W:Id6Xr'1e^/]T@kM;
%BCWc`qGDQ*k;%k)J1q(s+>ugn86/N5[-5CnT,&DCeO$t[WCk$fE&u^;T!)GL#*k0"gt3],oqJRQK4_%q)WA>iNM]978k3]Kh3b(4
%Q8H#qdLMNNb4J&/O)[UAa;BY,Ii=kIZ[&7t6*bq_fear,`KFN4^,*'Z&Am?h"8.-@;)O5@hGKK=?*.CMo[[-LZaOYuAN4d`Ng_6;
%AO(!kSY24"O]P%*gp*$/97/E59ml^Im2rVOQ6KM;KD95+VC_@?$mDRlb]AL7;2V)G:,&a&db+($XU9>XWSV<0_$W9k:lM]$MT_aa
%P3cPF'!JOkEg#ccDI`iK0f5+D@6!JnK/%d/_oN4?THt:\721SR)$^9LeO^pAbLp9\TL(S*BVD3DWnq9ba:>]&?Wg5g.C:54S6O@]
%V24D**A",1j4K>3TJ5'(o"S"$dP'OO+KpMpi)N':4lU`%jXs(6Cs&k@!iD\02=ucJFK\U.!qJ1%WM$#Hb(7oNRW_"!b:+o=GW6[Q
%,0LRh_qZjZVTmpJVeH;l=A;Zf&0r#kNcFP%j2.ohn]K@g4P:Vp!90Ygj$5>a[P9YYW++U&k/3d]:)p01GFg#9>'j8%,JBfkb%U_'
%;7Z'FpFgrgoerIV+3Qa>"i@KKE*qB?h!I8R3o+hq>,MQF)$L`HeQ5ZT3ZfMVE.*U+$(c<F:)d7H1m(Oq`/Jm=>iq*%gtpfUdh2(7
%nX77%IfX6$JX)t2#`W)AJqD^FTOO<GW/'#iq$3k$(bKM,#\NI5BBZ&9h"[nK?3+(K[*T;qF9i?];fCB7)VQ'#><lU&'6$b$?'MP*
%DPQ^S?nh`c+I$NEe`1M!1`M%oc;1pEYYk+6g7]uMmW'XEilZN%C5'RJd)i()76o*cM,t?@;:60>g9@U?5-QKKS).76@A=%*Kje`:
%'S'05>[d;2=>?Q!S[!\V.>]dW9Hd_&X@Q@"$qP\ScDVU>NX^4hH",7:mEj`u5ik"A'bQ5`[6k@T@oApHE,8j'*+?1[L99a,nQkgH
%$8A1:)F.;l5ObS2[4VG2N^dGN':OB;ZkOb7dn9E;2%6#R[`<-@.IaP[#/&FR_K[L3XtCkH%n>73njBOKK&\<RHphNZ/o1/se4=C;
%C`0<*08_P7agJ"eo9q*8=";oT.e8g6(J#HQ+KoQn&][FO4`"u/"\>jR/F*#KBVgE&fI`*aIGt8bAE%e86#n4'Kl"XeKGP^LH0/uh
%]#<>5lhl8u)'hl%pR`LZ5(6YA4:*;EU[5#W4Y+R^W5f>LHcuS=<MuM9:Tk*pHt&U9^#"8`YF]OWCh\D25I\@<s.4MocaiVFs3hf*
%j3Z@Se(+L6d^5oQ:Td!s;!d4^Ei]F3BV<b1+6!<QZeL(:0Oe#2Y[pG9%q?fI6Q^utPS<<tC"#-)KL)(gRr$m>Ql=s6fkAN<?J):Z
%M0?(1T,Kp&>+cp+3)%ZEo]F$O4bhAn*6=pMrOm_nVj+tter:cWmKKen8G?FF!(2LI&UUG6?BA&s&GYI]k]a_eC'SD^M?)PSb[&Rh
%:bnG!6?Y5CQG)JK[hXVe.&^gl)XV2i&VM!-gRC'E"LPc1U%]kcLYe-5lj&&-)eY:k8L>hfV.o`bN`:/G?*2:0a0CU[,kS"e7uYf+
%[uRWW+R^WVkS48.*:&229dYj5Rlhn>_^6Z+N$0"fLLOa=;*qZ-g2XTP?rSi>U!+&5Beuat-D6f,O_*^"`u^39ho$^k1RF_PK6/%2
%BELYZ0]?nR!uG:BmA2AkS6b]L=U_$<4NL)4;G#=-Ut\^Hrs=&!7Y8Tfal7`V#.QsoH.9*oXA/\^/h)5$a7$K&2A(DH"V$PTbLY$H
%hp(Q-/DmO04l%,r=]?2#8f_,Zm/lqP@l8q[Zl[^ULtE]d/cGiQaeWRhJ&??`[stu?N#C-,3IiO,kM'TFhmfSdL"R:.V9X;G_tJ:d
%R,*@?>35LI+-[&G<eM_Fb[oIqJIpQKgt:NZ/e!>9#2;D_V#9<Y$L'rbMTliU9KLn0dq`8R>]!ubh7+H37lppU_m'AV]Vu;V(\/7h
%Y/Q)WeSThaCa2aRF'>M[q>D)M-Gn(e;#&$RT5B>V-u:iN\675A_q!25>FZrZ7PmJHflRfej7'^u!U:IJ)E#nI;#0Q>hA7ciL$5Ae
%LBuS7k?O[#V([FU6+e?+E&-1?OEH@U"8!nJgdB"tHQ"]5(<]"Z@k1IV*o-<Qm%SI@!G+&EFa1>OpFnFW$-Gn?4%q92Z^gij(Y&o-
%1>+pfPHi4K`mhnUA(&Q8F&Momj@'Z&B+ba<1%VSb"86&HpYi:tgc9iYbI<(17a%uTpW<_b^:sWmf>%<*msjAM]aImODnKdSEV&8M
%0+[^47^W-NKu7gNIWO\q_]/PIRK(03s3LRd^>)Dn%a)hmMN\O"6@Pp%]U\Llr.3Wri4(/BAO86$P$&3BCXq:Z#hpC,*YHDrY'?<r
%XO'jQ\/f*F5UfPP9um3NA9ik=2eMbEX\7A[QV\S<peDXMkX(M?ll*HoqALQ)$:Vb=^`C;[0(2GTk\Pp>0+TKFQBWo2Bh%A).^[4B
%AG/5Lq/WbUgL0QFSRsM`3],A/p&6iK28TR7`l2%jc-=OW[7tOPKo[\6<bo:PahG\1oNP_7PdLsjNKP%!+ET]-j>C_'iG3imU9NfB
%TZLBBXbTnU7mt#=hM$G-kU?Hrc\jsJ$-h$*Q;C3$(cdAff3sKX[R4Z0*DOTQ&*@3Pd?Ui/j0e4l:;(pWpc?7c3EB0dMru,PC>Aj7
%[H)Ie>M%uQc6_o2%P*KN*MEr5>RgS&c+]-9,^hRCmol\,/+1+]Pp/9D#C'pgI=t_i!"]RdNC<t[7?_`kZe:\`>\5l`_j**ooR(X?
%2U\[*+@_G?@X/C-N;F\g^Vo`,R_&<V+&M?jcQ8YQ"#WUE*!>e<:"JgkaB4t:c3HG`i@`D9kHZn(r*S(c)0=SBbRYJ$)c&9E3Faro
%?;<<HaghB.9Yc<FdaW1>a%!7P+P>se3m/tX2_K4^'L2bqEIYt6\1';TFrIrNqg3(mO:-p=J0i7O*$T:Ed6\2tod8iuhi=)+60Q%1
%IpcR1,3o-R]aBra:%3/-p7[3WC9bSZaPLiQ'Ga),3,DK!'!GF[8a)cN&3A)tP73R@-IW+K^8<[i6n"3O5HJOQ_(7rm^_$4$3E0+9
%0qt/[n3ip<2e2"ekg<OHJ1Wl-mL#*lo3==M48=*ka=PeC&rMCGnSi:(B$-B<!,Hu+b4C6a)g&$SPVaS'b4m2p-k:0h)E07)-6u<0
%#^B;Vr#?=%+[m0)'UT4\!0J)EkXgMkl*s]I@B3fNd&IC2Acr:5,\Pf9)2:q;1AlL1-)CRn:D8Xt7F]1Bi#4kc0foXankf;\'pHic
%K(*26(r(cm:S?Y!qAC/\N"ej8cAF#U!ATgo!^0S^\Nhklrg06W9#MnaLeO@%6&=Y*Lm@pTX2nB*G:7kF4goq'5Tkl]?kQmBCM<#>
%_(289QmFm]#PLi:M6Y7q<e4#a[NJi_22r0&HqV5t;1IC4.Z3'`6n\tgj,JAZ-Pk&hSeK^PJL>]?E<EF-TJaO3Nk0es7BIKLD'[IC
%.g6#!"-0X?`&d31!`\OmK4Rq'!@h(n$9=]V:CRlK!W+RA1tj;((-?RF#Qh1J+p2NMr"("U8Jj@8b;]f=Jos32`'Ce6qoG!F=E<"]
%qrILa=F]\;J;eNrZ?A2_9kXb@2N<niJ-]0ZiiSZ-;sA5hHbc)i%TI2kl6\lZbbheKXO/(S0$sbl[hkRo$q;VV7=<;b:dI-qesd5j
%&s7qgR;IY3[%Qf]!/VUZ$Mm2)&#\M<1T_,Fq=)?,-N=+0q$-mcSb')'R6;EH?X=[Z!$2PNquF&!mbJe[BXT!?%E'SsNYaI\H_a$:
%ZU3Fg+AnUIaGU[>73g'!@K_\:j7k&=`G<Z"fPh2'i%Z)`UcI(U,6E0n3/>uc7j!5=KO%nT2CdjEkc[O'8&?tmjeF0hmRO^s/aDdo
%g'Uc>Yc`T3*;YSl$0`0FmVh>0O_J0-5<[05;5q]&4bB>ukWUiLMG$2g!UYg;%mcHdW(2K&MpXVd2J56NDu>4d:AF+9-k[7H_#bjD
%IGjA1m-(.p'F+mWnVh8PaD*/\7&='AA\rtoJ2\kS.`j:oJd*+8lE5bYa9XGR5EVs,@rF.P^1b3^NcqTEbeauRN7%^6d,u>br)K#`
%!p\\n%qh[Qpf1%sA@S)7dAWB4p;#7ck0/C9UHC2IUus7[X$LYYIZ$h5]J!sdKBb-ulrj4[<k35ZI77=_B.t:"&;s;A2PZ`@;\3un
%he(@fB>?AT`-6fJjMha<>qBFf;73*%['jcr;DOrNLJc3q@nDcJMa_T+ck*:W@6mpC]-<"7T]"kO_M24nQ;1>b!@`oe3CFuZ<`&M$
%RK.[0(a%bJf"c%MDFT.eKThaR$)J\f/nW)MNrKK7'O=X^n&_iIqYT?FiK^>k2^$7-ZF"(>&Kr?<*Y97Ba^H?Y!I#shW37mRmD'$2
%c+OpY"TmoC"=oeljG+HO8OUZfVX/pjqhVp<.)K/N69R\H$M;BDR#VMc!*.$RiTBXSA)Q9AZ*:clJu9TKh7C"/LF/-k0Cl;H'9a*.
%F+Td?cdQ,GN`d@49=,gBa<ONX7@CC&*cMG%%V\t`UoD>koS`MOSY;-H-Mf@KFpDg@aCa7J$]7-h3C\'n7GQrU:pT^Q3M%g97HP1s
%'e[CTGr*NLR<F.s5D6gb`q_/^Gf@=-'T^YM5[2]T6-&g[_ejS%g?fN(qo<JDYRM!k$@=htP;UK#X[uBt,U+#/de9m,";#IM"K?MV
%%7P,,T$_gi?!\!%k5]76A=NBQG%htjZK=badBtYCS4k+n'OcWd:0rm@GYtHf_(/GK$><7kG0BY0ZkNs)62WfR'IminUhlke'?kuC
%V5l'#8:@sd*].rhOr29).d6Y-,89jSVM,OP$)^o3Am-\]Z.!kK9B`F\H(u[7L^:eX[m=f(Z`;$,U:?@Y9L1!-[aC<uBrBa@#UdWZ
%J2Y+7PD-1^$l7YY2$=]rctm0Ep4aJ2Jhok[a0Bd'8mS'!0/lbR!a1)5gdciCaG+f]C()-BcsX^9[6cZ\EXo*'UP&XR\8+DQe,^+`
%U\Me3,G,MbpfII3/e:r<`Sg.W+9Ak@eAqnbje;(iMAG@u\<HTj<Qo2&leV!Ear5U?'[MgAXYdH4!eZId"]J.]MK@kXHW`jEZ]7(X
%*E=bXK>>`<(sOhPO\`:C-miRb3S>hfOR"/(?jiQ*@GVLL8+;CJc&hf1C,DT4"q!,:eYl3/I5'df+S$85_n_<(kZa%*"9gZ'j3FBR
%7@1on8@GPh[&>*.)M)#2eiKf?7ZO5!kV&7/k>Gk_#`OL9/_TPp6k7-MD+*MBPGiKui(sY,C=Y/Wq8!Y'SE?7`>9_U/>,Pe*'hV.q
%>[PqY"0fRO%Td&Mn]I#`<AjiaC#+7QN.KBCHd`%7-mP5cW<??]Cq*VQeDHuJ@l)dDg&H_)9fdpO8:qQ]NRa(#S^!:dJQ`mbc5="D
%D<>@NdWM_Y_gMTbBEh.!,"QKZ,GB:]<g0"O"BHJ%4_GEo:3.a4oZ3ak2>N<KM#7U1MH]KP<!3#j5o6@GL_Hf)O5C/,95E+I/-%[\
%-k$-T>>I7R,6J+C(D_K.gBjLQC6_fHJ$!:Q"SmCP,BP63*0($uA7pobHnG;LHL3oe\]Q`;#KGn-mG6oie8T6<.&f4DJA\!+7$%E0
%)e81`202&G9)R1)\SPqG%M$[EiZ@@Z^iG(4.urXTRPmDp0G;$?/OX<f<@JI,FbUN[NfBg,2@*>Fo`7T2Q[TbHRG:2o_L9tm9LA'<
%dtXpR/1Fh*LV/8>L!T,8!hOgE8rQ`@d)Zpp@XtJES4%12kX8$>)F`X"Rce#)T9d>R?.pgB@_d;R+p.o/T#s;ghHbllGJd`-!W<JX
%?CF%j9nQedn)BLuDik`5/Ps"+Hkf<_$tt)?4AF:(eL3`WhiN[i!<l>rFds@DKTp]mc\Xu!BYWdm0*4g9RA+#CW72R#TO7%%@DqkD
%<)LG[&MT`tYcOLU0gI9A9UZmIFbFMJ3RE^^!&A=\V5XpA26CJe$k\JNNjTfX"8Aa-7aqZ1&(olo2-$V(cd(CL)OZXu)r5aiL8J2T
%]7=GW$>-H21P'=-0ETF!@2t[/H7)#FRR%DAX5Q7;[[,K&K1tC5p0#=VGKJ!8"sc3:>*lSg!/eVu8>`eRa.28jSURM00=iI'2@LaW
%1c2=<.ni/H<UWA/c2*u85]EXdXMNUA<NifbYe2$i%9S^C$W(]o\-P)$Pn59,.jRSGnVeq-$4OEj^d,7:DZuPCCrC/gD=L^r_]:ca
%f_49jgd@FfWioUGdFM&hZF'Q5a0qNso(@WX\aZCa=N5scUFiEiH:u"oHKU\LhZ?#Qs*;l1a";P1+/[HNJW;BKi$?k7,oGpX?k(Lq
%^GTL2&FF6iKX-LE&.l-j2X%)\AQ1D\0<nZKU!C\p9nOo.`;g7rTG0MuFFoZfh4\=F:t,Ep@2,d!cP*A8RUEA>2p^$6('M?bOVcGr
%`^Ub(^.`P<>,hTGjAT%?ApA(o&RAS=/6g7W.h>$s-sURNf[W7C(dEuFI[RYmjuX\_\lYGH8.P]3SX2N#")/M^2lEAd7,+eBVKn:=
%cQu\%L&4+]YHW\hiZt!/DBsXAV5g9gJ83G7eCjqN]`&6:MrR)gb_srag-@*g*niLQFmd=O]J:ZE-;715YeF1cE&qOQ>#="oR@Y4'
%ncC4SYWe-Rfa>It<%eKLPS8qNgR;4I3<;^:c't5gS(;KXe64/nmlZc[3Nj'k]TGNo=L/sC&@J*B)J]h?HYBC=]UGg8<fig\:C,DB
%7-o)[gA%eN>/:bF"L:"Kk#,2%BFQ&d7YN[J(j'h"EY&?D8f#oJlW.B/UY-]4<idu`KHNOUKPjd]1H;(:cYGETg<-1kV9l.&'+ub<
%:BW)r@@Le@0X4]D!N:qX7O%"K";qXNY!GW/2"t2(#`l94S/8U5\sXq6XAr]?Zr.A^9NMTf0kP4;Phl*d(mm7*gCb<YOp.U4GX>hF
%@ZUISNE%pi0(I\(D3^6BY:YP<b[o$mTE0>XQ-FfcbnHPTi?b2j_V&)1DF[i+7*Sq-@+t<_[A_e&YC_>*G,hsJ.HD;YCo*/>:n0[P
%U'&`m`XG6GV%B<Xlt-sh$j0&HM"]<_op;rQq4\A9)as#c\5YXE5OE2<`s(g4Y?F]OY'A%#iim;>G7`/uN8'MChR:g>Zq\qB:F-(:
%Aah&);qX96>+t\SOpL[`(/X_eW++cj+?8\5_0#9.lX#c(X<-Ul!&59oh=*9OSS5VRa<uH7P^V/=5XaWEY*Qg!'P-Jq-;CnHWnBWW
%YJrCA/dsM?No5FcS&+YP_#PU&)S$7C7?$>Nj)BAHP5Wtl!.^6ZPrn!i_<VVpn9pr9If==tVRk->VjtctiPF8G\/(`Tb"'r>]mN>s
%)k6\87Ih&_O6SV">ZKUMPYjA\rIKcG=eq&j9\j0t)d\]eU)c`.lf>[W7?:F-O,K[0gI9_uXFcfs8S5\EWt[Xdaq>7N;7DKWL5-n?
%*l*#$J:cA.L8^%L#m=hR%k-GjOtl&Z`!PWgB_tA_=r&&eFp=n4bG_<.psfta!S^H92QrF*K^C4LH"kKU17DubIL9:BMi2cNXW[bQ
%VIuPB<KUo8E-Urn:SXe`e"uJ4S.+*aGor#d.Vq:2gdqH-AC<L[&YYto^f7Xh<`l:1+9i8TPbWi7nu276Ya<?5VlK/R^1Stu#uL*8
%hD>"5@m\u,\B<`<qHKm<:>_ASU*p!VjDOS"@6oU7q'q\aPS*PdOXTEh9GYJj>C\cR.53PibXE5jm6bQBDh_+3..SX-#dGt3G5E$Z
%ghK/5=9dc--uW-e"P01L/8LC/?*+kX;dis/R5.eH$!!rQT*qD5cpl=T\B'nhr!lN)b*:uS"@<(8X2/8N#qf2Z)QK5q19AWL(R6'[
%Ob*pH.5Wh4dW'p)?d15LWd1WWD>>SEe"e'C7O,FA8u*dfd*\5?ml-UF6<=DQW+o/Q5u]!EeKQ4[TYPLa7Q'o$VqsP;<m@!S27pYg
%:Ne'-Vp\^\m0.noTZX=F_B=luWC[=bQHmVmOKbC<CLM'bAh3]Y`B7qq,W'61c_80&mBS6l<O-"WEujkfU#*92LI%T6+Vit&:i'N"
%W(]j#0`"Yk7t*(/49K.u(ab3EXf#?%2^o.N0kQ>^BTBM`VZfNr$FMG),F>G[n8\Q[f+GE/3.)PK:BF(nNuQ9BRB6l1G;CIBp,','
%SRKL;HRNJV1D<l!HIjijemS]^_5r!d$kOJ!268]_2X<%$FESBW$S2D&@&.Y.;8k4JLf]C2UVi1J[qJ6Oq"\^0#HUbW789o'[Zt5)
%!N9a%-sC1>D2V/d@EB17dI4["m-%79Hg!2&]dEi$C>8p@CUjm<LL!,$+UL/+R9iX;(PW:I&QHP+9",Ns"R^\SCC/[k$$s0Z&ur&E
%JUnJep@2%pim4X)%$@41L^FAmMAkVEfniT\TNNR5"QT0J+E/\8(i3^@=[G77e]hq,h(7iW<u9(029VR\D(3!E@e<^#WYZ=E'@a]m
%n?Ytp8'@:&7:ICHK6(TB'!4QCa>"2`n+@P.(*!ddA5\2<2TcEl/S^"hg.`e]?rH<L\3]%cjA/XV,W<gNTane+eF=0<GhN`1b@TfV
%pD+/1^n;iR?)n1_S05ru5_>om&s\f`Q-VDX*_iS16,et1iCQZEjNXWLH:i=)XTl.t<3<lqA4"oQ#uW&V+I\7_F_Lk[fU\;618<+/
%'"M6pcDmplY[(q#P<GG7^G&ii1V'7VLWM#'p!"^r-BhSVle;D<'cq1E^h=/o<)IgB",;knVd^0qHEPu<(u=i*7J+c<Uf7r[6fH>a
%83i@bCIY,Ni9IIZSL%Hgl:rVS]VK#2g]XnN%J^HfQ2,^P19^T['u8V/L?C>7_A%E:cJ[sbUKgaEN6Kk2R4`fkZRGt,Zn`f'2%fbe
%q=p#[;p$Yj7H>Jn5-VFQMG^h@*Fo-[6PD<0BMsf;\\7qEaT7+8*uH,\2T<QL\cCsokpEe^BGmI.o/O]n(o.2,Yb4=%<c\^30@RNE
%nJ>MuK]4X3AS8NK!%G'R(b@0@*UBd5Pm/XG;/uaeH:Ef^"D5j!E?T-(&5gFkNaG[?@2*NE_%hPYg+P3^*1P1=?teM%9N\G9G)Y'V
%37ja(_Qp9FFXK-p\2D6H2Sp)@#MII`AK\49Ph!j-b[q&EE4MCA!%9G<>,[DTKa/6Ier_ifLleX1AIZI\-qpE\BB4h-(PWI*rEQH%
%Xie3.*?i9RW^Bo&FS>MbEOOeI#guPj<)j&t:bXc)7h&9>1fI)eM(o#Mjn>_=7kjEh%C>2MN9ocgQYs_pB6[l(W_k'W6bnc@Y+]o/
%d1C-HZ`E35_b*e4b0U<Q<"#1ZUGiW'pYnc9.&3'4Vgno\BS0<g_8/[\Y;+`Cb7W]#Lt']OZTVQmE9jja\41$k9B&I&#TA,r0o&;7
%J5Z$qc3[M-pfk]KT%bRihac:Wi,K2+lBGGN1#d(/Q>%c-8l[*]eefL??u6[r&/`G)=eHV`,qo@6F6]\NbbG-te<-N"GmDIfdf<o\
%9LW7>0M;mbij5??j@kET=c8M#![-)L(>W`L!6o5V[ZoNCc96(o&Pie(fT.mUeI[;O7V>a&5[CQBg;lRe`(N)R.;@<hMmCI+&3q_?
%^9iRK7D=IASW&TP7fi'lB#;PK["LKbF9T`^TkP6DX(-Sbj%Ws3_@tWI1CGCjPHqc-=P/bPs%1*\TeE9@/I(+_Wa7,k:CMj?0NnlT
%$@SQUejfoRj=Bp/,h46k02ke<[krc&l7c4O(MYQ,H4_]&ll4#O<Vl\+o?q^k`L0=e9+jg^m0rKQ_Z=alpM_rK>!6gr@Do3_X/q^-
%9mu.GX%B@)B-2G%$jlLP@OY6OK*0'5bE%1uD#RU_,Z:r'&'r9.jtOf@+S_._`,nnU-BC6[rUO1=15?de:A`C)c,&]mOOgD!+>QF2
%C9Og<',@m;nrmM1.i*#*9%Le\*bcO$nd9ut8l7[4L3]Y6_DS^6Ask,4GI9FX^(%np@C0FB70`,-BpU>Rc<9-6:fhA]%LZK^_\t#f
%&F:A2)@NqS)p2s4)$"0RhkB8.?mAlf'0udt"X:0kd]];]Rh^a=_S&7op'"tXfAl,Ze1;LG*(KXK14L9)8g+Gc-jeHe`#>qK):"JS
%=t<jF/79)nl<[CYj@*"2%M'p%rYA!j>^CPuW=0@H72%d[Y1r<P)3Mo!D2==P7[)ZDS6*b=BNEAn.l[[*i<5ijBf%N,'u5j%k_Gi:
%CCCmh,:g,QJlsso'8@5..[79-RF1@6U1eo_L&f5'<T/C;k.Ibr3ZGej`g*R5^_RW9fB8%NTRPEbJ:PlH3Z477oK@_A6A*G]oo/+S
%P7p&[LI`*tT$W%o.O7(R-pdUZ8NU`0??rS$9JDje09N+6@qd"#i.Gko(emQK`jXQ\X;e@(E3Iaoq3`!fE,sS[!D:9-8XUGh5jJKL
%57Ld)Zr2SBpAB*fK%O\agEXreLA\/<YWON`8BIZD6ps)4'3"tQ8ZJ*.jgnT;fl85S/$HT+#f&?)_;mf\/F#@OQ,Cq"f=*!0pck\\
%gh'2[OK[_Nak8T5knFPbk3Ip%WnD>nCY)7kPdOsp%AP*Jd--QrKe:l]-+oL&)L*+e$T$#4r<CP65a%"m5]gOpCm^8_)PC5ue65ho
%i`N--/0#)#9*`A.O0^M^NmAaKM$6t7h0U]"X9U=$Np`c%RY8qi&N#$h=>EM2n=U*.8#fA8#uajc'MrWqU`"*V)1W(mG/,R?WW@sX
%aMnOt3^F*uXLIpZU67"[2n*\*@n[FV`>+TTS^Rj&5im#Fh,m&c8$qPm"ZRQB5mVr`CN"CYXt/HGG2='p'4-M.c7nO8*\tknU/NF8
%+^]<1P`ZsV0tr;8=\!Y0&7n/f(ma4b&#&h&OR".[J8od8"_b>uXK8h)*FE6GhPs8K_2M<S8!Gm?6.i=u=qP0O/0H>GVUlBPE<0aG
%6SIO:K;E?!#Zg;9h+&F5$qnbWr@fR0g`iMGScBCVB70nc-G$FRUc3#(%!2LGd-P14NSfF5PsPe/gC%AF@VlHMXD.ShCN9ZU]bJ!Z
%6#Y1UQJkUD3arG>TqX%qCXr-+KX-/E@0%rE%/Slf!4A1Q!]4m9dmi:JCg^A(V)CFMgj%)@l"$1MZ(\6c%3jc#<];OB"-q]`,XibS
%@H#QiOG<D'K'KU0o4-aVdcsrFZYisrB.Ll;Ok"haol3V1G0,Q.9r&70Q\O3'1X`\eaPT^r3+pf'+HOI'UT-]Lb[.TV2_)W@/P81q
%<11\e1-Zb^/D11->uNePAmP1+TM:+hFB/,?TLjDQ'8ZlkS<ZQ7J3)`sJ@^W/9E8&QAX_;o'KqF.Q+Q]tLirfV"$j!_62<[rDdeGu
%5n5Lb@0")UpI]B2<qugAaAaHJChguq1h74L\0^,s$WH2?1!kln2`S+_"u906P=F\GR-;.<5@R,g<6T)Q1tZd.-GZIY]lJ3?>Z"2&
%Th\"S?5ZdDk.jEO[$L0$b>srG2^p+A'HAJW,=JFM=u%<[rSTt4f?LN/(2mYpZpOGR=f0/+<0(?;!1i+h!3#j")-Z#Ic"nl$-#RtY
%NO^0'f3<A*5UMb%(agH9@qf@sBkl2:]8Z7+1h6XNaVgeIbZM[`g[Kl.=:;`)DUGc)!:),f-e<hPITbRJ[+'oiWsl`Q_\l2(ab/$0
%_PWADnhHChLJKgYMEut\"T+()\;WCgm07.8n]X>r.V=72UeHkq#*leG7Mr%_H;4GbAEiW<"YS3=cj,oS@mj-g_fX@-#taJJRI%JF
%GZ"!>0^DS(:3An6d%8M%jKceE-WE*+,):,pAdF5Co9N6)+oXAgdq4a@OI4_Yc'ICol6lAP+/nWJVD-)9WK%fMLo%tPMLZi2.`]c5
%ULP/m-ln%]KQnkp._CqDq+1eAhms8T:38G(YX'J'c".kaEcMrr@M;0nEJTSWj_Q\jkh73`:f7(Eb_5[2(dH],eiHFQ-PQWdGGmO0
%h^3$34W1GZ:chQ\'Ttun1GLr2KH=)G8n`+e9$Ka@bV$\?6.g7fUP%Qs9%:#,C/BME)B`Y5WZVg`!39L'?GC-=5chDeW)BqGBDCEd
%l>/jY>)1AkMZ,I0,ut%HkQ,]TI*LOmOXh/F^suuWD-$M=c!Z`dc'0$iOk<5PAQB-n>9XH0VbE8^$QtUpn8M+3?4IVKD/p*n&-MtG
%im;$FFQ\<>=Ht]+K\&tg#m,G[AsH#fdK%Wr'<M?C3^\"'8/*%;fNQa.MKBK5%[rK2CtBOP+s`<QAT+pFnM2C)WlX%MrYSXI"4YjT
%a;rt%r(sM`^aj.GE4G!,L9O[nCE$L](:#j?L8#&@,pY8^7[R<Y8u@:3CpfH8]Cn\2,GRk/TY,&rA0hY7;J_*/NpI\`('_6U0b+I(
%9,l'T7R\Y[Me]NuH")Eq+8-9_!FI"T\.m5]ko/'.jArZ/d?fse[j=Euof6]4=7iu4;>I(*!nRgQU'>E,H0Yh.fbWSZqU>O?@GIc>
%%$SVAI@E<',=0%t3f$'B[L#j!hUpu#1J"XaA@me`QAIaG]eRk8;[%UU6*73`(u`4r8BK>:^1W=W9T[Ugd8U>.`^go*H(2.,^$lg7
%%4b<(AYBN\3`.dR)dmmHON3<F06,ETEV>p>i.8."2@@d/%[Kq-/ZYD"#_t6;&RDh$/?"i"=Lbf/cR+8r@L(W<N=W*:^a,io]a[m?
%e0TXF^@eJZ?1[b8/$&(V-:hh?6WSuT6;S[5@n(#4JqiHFR0m$^V^@=#bYS(@%c]q;C$E"]7N3M@KY#.@%N9m>eZpd1+o@->HX-3/
%_IqNt7Q2]&>gi&7*aR#Xd:`gC+=N9KMu[HTZb7JP6B`o":^Z%J(_i$Qjd;-nUF,+)lD%PM@;c^^&-q+#:H!W+M3)=Q&;mYn`tsEt
%GN4l-AnQXOD^K?V$Q,Q'F^K]VV-!;e.I-"`J0#8T`k*so7@ki_`5]62W,5[[EBp(=p@9L46mjfg<aL=2L(aV:790%q#?.G)4n;GE
%4-\0Hp'p:%MpPBGAtX6!KAB]$+fNR,Z0p)f5Oji/K8S.5IIM]=IBh+URL]I(\lr;YQJaI14X-d=TMm`oZrq+RS%1]R'/8`7*">Ia
%_uXEoCL%._,(P9rq>`1iW6*C0RUn:!-)[mR2MN[:XGNp_QV3$2`9q_6]*0`[1M1A"bG-p+Wo19.28Ie1==QHNfein3Zce_-c!"uA
%Z_:N-a;eBN#5Rj#_,_?)*3%ZRo8p"U>,r*PKIr%b#'diXnfS,g<K^ju\!4</Rc.8\j?&m=`K38"7LpMs'2?MNA14`\B4*G.T;oGI
%H#&F_aVGB-arY5R6aK#uOa1-Fjo95dCg*o3N[qaYkWe]/bLbhLa3nj90FZ#1,LFRAm6NXD,VtTjj+$NDcAB4.G5%Q4Y[fHAbT!S:
%<L&se)&[GR*9h5!Z]MKg>D=R681&oD'S/pS)`nYfj8-AK,0prpVbU+nDO2BhGMo!$1^VUI==?n#2.ib*h:H[%1JJoHp5dW3oa:jU
%iXjX2#>=Rc0n4s%4/^0iZ077RCSc9Vc"@"+FO\Lt77s\(\qh3$SklE8q?GE3Pp_i9M`HHNAk2:c3iub1%:jIe3:F"tI?^,QM1:ee
%I5PATZ_+'"X=6i)s3+"QG$5/gWlO*_ROXScF&H/j'-P*$SQ'&&ktd@a,om9!#:_F<a!k5<oj@U5[V##Rkn$]<.9FE"/5f-.E^)u,
%V)$p<DkmaZgVRosQ9SCdIC`+Y.ZFp`8Fh<>CYu$&L(BLpgdjYJ6(5c<+Q>QjOeh<jicg[\p!ml,^&tT+ee6Us<usrR;?hmV.$k[0
%2RZhY6i[oi3^CPBMq3*sisR/lB84/=DX"N:@4h@%'bX0k[)XE>IFl(h;0T5)Ua)&@U!9eP"d-)I9AIA&6t31)FH@L#=M#I\<4Qd.
%C'/%tfhdqP@4X.Pi":!t`fD:A_5C3'kCb]Ogf@%"btMhdnh%R/`+D7d7jO0'-XKJXT,_-S/_Jp!E?jUq(K%W'F3(VV(>[1!9MHaT
%[$D_mb,SbK=*[Cq)-bC+12f$Dk/e::`(DQ8@op_@":NhaMQ*#%%u^p1!g1>;TV4^D$C84@Cms'NJQR`8:X#Ia6"SO)jk,r6ge%%W
%UrVa$`KM;Y<&VJ'ASsE=abjk;'4Dto`sA:n]`qhl?+YO>MkUQUlm`Kj2EHiI`Z9>0;!;p"lLp7iVj%]R]_&4=6qA;/e^SE$4E"Qg
%(3onp?mt7ZRi:ge9QB])/R*rnj1$S9PPA(=Tucj56LD"JX&@m"\1fY80Gj<57HgR-Ar;9V9/9ijDbR?kZs=nS9uR'D,fK^#!`c]A
%ka768HqH&E\jZCA4$]ZBZ4&J.g/88Q6;bO%Y&4FdVG\M!/u`WmCai64`*/]-(2+`6DsK-&\($AsEl3H/.!>@_>+kcSS8gCGga]-+
%@jWfMEgKs*$?fEu=[Qt2a:1sHH@6\4]\dRH"4tarEAto^W-hQ"h'WS0TO%Zb$(aR\M5ce^)JEs<Qs.:s]NdG^TCU_qrqF(5An5j]
%`Lr&I:02UQam,.Te5@M?O&2cEoN33'*3Ea_kD5P0Zk4J+EpCX0`8sEoD]\ruN/^9U"YlRmi\2<XKp^.Cgmp"(fQ*HloZbOlfNISc
%!I!=7@=:cWB$M'iFK2WRIG&RC_Qfu@laat!RpCV'F=O`g8u;A(LGcQ)ZjjD\;bN:aU"5mO[15Id'm6&_NS?2_OOfXoip]ou0OsBf
%!$Z^&AXNaJOS'MeaCS55jFF4@0J<3;dDV.J/e@1PQ./Rq;;Ef->AuL]WCfgc8EK#?:)&/Sf(ME)OJ^2&S/sWBbf0t2:-O#T^t]Jt
%[rP)10R7&G&W]W*Ne`]8cOgmb4[Z);8N0:egU,uu)shgQrbYje44S&ob>\\cED7*C(8`j&*6n,0ke:FY@XW9oaq(X]V]6PZ7QE^t
%ogiL`537V^^`^`MWQ-'rhBI3cjE[MU.6/m$kl1g*%6C/,%/&29(o>5bJLTt%o/CYPRGNeT.YG<n\#1#pO4ZQ5A49WA4Yq7`*I+nn
%DrM%k6&k-<n=eXY;d#Y/1m@YNV&EJpZtT="$`GUA.2abOW/_,hE'<dUmh7XJY16ZaHkW0.4;8>p>,?9/BC*VD/jH!,H&t>>iT.F'
%bpf(3X8lbAB"8>T4^ZQt!,6\]T!,c)5C4Bk!T6m_-F1u,>Yn(h:`OOG!Dj>46o,gd"<M5nNV586B`d2.*;512nEBL<#:Q^b'bdrS
%*8ji.Ed<*;NP@e0(,#rp('3NI@Xu2KLm.(dMm>N.<=f1g6##-JWM2&2[cdh>iZ'he;sc3>%l]\%kM?_[Mg0"cLE"Q<aP]$FY,+FM
%fSMe+eK8=:a/ogDlA"o/<tP61+2TY8psef5Z4TU;5g:WrZ=60\iQ\/24esl`<^nVrF$N4;NC,Z>LZ.Kbd4NO:\+8!e?4g\-Q*=EZ
%6O0&^:)d5&/1ocN>I:I'E\Dt7n$@,/n:$L.S^Q-_%N+?]?tiO/?\uH#O0-9.?j*jHp2uUHJKL\cPD0F53rj*iKL?\=J0Bfl3+K#J
%O*:2>OHD?)Gs_R_-tS:;S1.S2kXEA.ogR@Q5/I?`1/7moN#X_:N-\gFQ,9hS?O(8K%a?`'f;WQ]3!5S$eYg!'BEG-+U0C\;A%i*F
%EFLW^KCG/D\Ui''V*KXB"tL%]lj$mn_n2k0j!+g`=]:CpfJI_A[/3p$>^Qm0/R]Ik*n<Dq:5+CU9tj`VNl[8USs.7(f*FGfa;d+,
%<)0F9R0i?oX2k._7MSc#iELkaRMB?p#KZP;h]1F_PGbc]XckjnH%i)dm2rNjiN2Z3XkO*SU[2+LM*9!U#U^`;90ru-T&hl)6A-Cg
%Ubk$aYf(5J*2Tf@+PZ`O:2(;f#:CbtHTdk2)4g;=-+44>#h7V@PP5q\[L?EMS<OU,W.'OO)"O*s+J:p+ROqO=&"n'CD%81hSP6],
%3LH(N_j,?t7C3]+_*(,X3u`A2_obr1!`2D*YuteYFN^=mMUVrqni\2/)fBL:hgFc0q<"jW")p9hFXiR+b#E#6a9d1&Yd(N#cab&Y
%HaL5>m.WUL#j'L`ICY0JAtNG/K6Gi0WV#(BDH?Z(!3bf-U'fUM@=UtppSJ,8rk,6+_lSNj7<**.$]rVuE6i;H=!,r^\'Anjg,\@U
%:/=;[:D3b[j8+!P9"(eV$[ilS]IeFaJ<3qqmX2I\Ie`?qhr:at9"+o*/BL#(=JN/l7R%h[S>(_.So.E-UhH(EiO-mS/JcJ(M](YC
%@?%%6,/!?0WU1@&mh?IFK.P!PYU/1Mm,KI:9)e(4aq1h?d9aV[;k;>!;W&tDF:IC.N5[t=DM_(.])l-YT'TE]PNqKkXSP,=YcW_-
%Un&uolEP8^ACl-b;?Nu`890ZsH&]&pLS`,6)0pAe:bC;(6?;<F6MWaW6E;Jtj]N9KnSH`RebS(k`H(/GY#ek_3T^ps4VL.l\k]H,
%'V?UZ.,r=R;6mmDb^_a1TM;:E,/;O:0bN=qdjc^RKig[Wb]8$B1*<+7Ro)<VK]h/?3t=,&nu[Il#\Z5B4k2Sse3:XVa$[qU5j!V8
%kTSErbFI4.JNUj"HT=A%[=(^nR[>;t/h2q&@Ko-BEBS&Xd[s:DmM[32:S,C_Uo;?1^aUV:*a3&0T3.Z6Mu'SLr-e`AOZZ?`#i;CB
%ZHGV8C5We(h0q3QUQNhe0"fAk-h*mNY3[Ij?)/7!X=G?f_\"-PXGB<5*"FU:bK9o(&jr&th1*jMRKkT*k:SsON\c6WPhqToGeGQ'
%M.MRc0F;'->t&r]oH_kd.O"aiO/ghiNT<q">PsUY`@h2cI\V4(r#^-d^T`^qOo>+IUO<)OO-1qNHo/E=k?8T0GQk&'/iC(QS>gO(
%W`gCEr:.cY?@QJkpmf>5_n#^lM$ZIf`YK$)p%NVbrR@/`3m"O^@^XChhkJJ.+AUgL>EFAQ6OmQp]7J>19@uAlS;L2#4bZ,mFpB"i
%`05<Xhu&=%m$`H,XO7%5^f3(eO<1cs&!(l;'A&#C^#As(i0'P?_s<]0?8_`"'h#;A?$Ceu(gaCUM>X']S&>?Je9W,.h\c^V$rIh*
%OU%[:9C8ZO=D=,`"s7d/YrBO%@4$MbTS96Tl>#'lOqAQIEnPJq+>6=tnJ+q.ADF@Q-A:,M^8cKCfu(+_\J,(_K>,aNMT4MbB@#Z5
%\"AOM=aNH#g]`cD4^h3.^:M)>^.LCH&bM5]\J]n;$*M4XA3)L-fg4IB%4tno6+hRd=qCG@:Ki(mfsm?g)83aG6@>mdC5&3R@^R<K
%I%7\1#$Gj.G^R*S-Qi=X-h>_Y<[kcQXT*_:VO#j=W7EUXGgO47HH-`]o.a-aT!\6@&IAY&03NSIlNJCd8tcrkMs5/jCm/G,>-#Ta
%'K>\_flW%gSh(X)U"?&9b]lK5kXm%aE^"\0$g4Sr9/3cqRt#)rKGPn",oinjTLe&p#=uh\q9ri!F'6cdOLNEOW(QpRr2I<iiK!Ac
%Z`(M?^XS-2FX<)EDTd"<dGsFK/cJthldI/V9t'B]kG].i1tCI=:kH]$4^LTd+9hml\+j.FfEJfp<3]/Ec"8Ss^amV?"e44hi.ASd
%q.>5r1PUJ88Sj#tr*2(spiZNQ,nh=/c-/NNe_LFtWW,]J,KAkWKC[aCXUo%5Lne-O5X2$,.[iK]Y=.<"I+D,8?bK[R*TX6[>.Iqi
%74^F*d)=Wd7T4nLd]X8L_d47>ED]g&.-BG56o2_OG#1O"J%p:+832F]/eUR=\-'lc1.$0mE:IbUHK<n`68%CF7RaN`Pc4\<:_V$j
%/(a`5iuKAE.\t;q@[:3mW'U(6Tk7SmGN'T;%TBFk(^UijDWsb*,;uO"Cc)C$c-ZRcl]@X!Wu#(/P0f2%L[Q>_-bnTq:M`&^^-bl&
%MUm[,6Ef.L:I0TK&mYduHkA<77'J*<;S3$=]V:"r@nIN-$u)sR>#lXR)46`Tj6tp+mC0JT5,p8T6F%,MI]fjdQ5?iV6[+pa$mAE9
%FIjf%)no!\A2EufJDCo>iF"@qOW8p@^["8.,e4VtX6#oE/_,a)GC+\6nrDQo(1o*j)Pd(8Y@=/H&9;s6I&\#3iE;:jd!ki:,i%=I
%IiHra%?$=::kp^N$5$5QD>!dD;(?r`s5<9"J9:(Nc,,pr,afo:"*Y6RQPEC;WCOQPeh$YV_+>n'SLB0<.\?i6>n89BHQ0@X.6JU9
%TPC>D5GgcUF%F#26c-9/'UWA]3X]La.H&'t=Ls]Fb+L<Vn8Q=*nmG?>*k[K.9(!M(k`*F.5s5Ysq5j,@?/>',BET,DR^*i`jb%te
%ZsQJ=N*"dW+O[b;hV9&a@/RQkFq^^2ToDjRE.F.nMElbG%Z`(_aR2'*9H4jP!%7q+!fe`DZ+hZ[)#U*T8g-?."]%6KpegqKLm'Dj
%`Tc4.;"th)o>?9dSaMlrU,iN^CE<:+Ts(C>2<>A[*$rs+Ipo`CJlgEDZ<%^o<fD,V]t&-"MqRXZ_A3Gd9H=*rNGCs^c^:ksaffI[
%fOY5n8FuHb!)oqjGi8/(C'#&uZa>ch442WQ'Qo1t4s[Pq=biI4DW"HodD#6d]G=iJA_!DiJfmJdSQ5>/Y:)-@"ZhhO1!\Gm3cMK(
%jePXOMA&gdbk>H(VWn7UoC5.u]DWl&26JS,PJl=o4;WX\3p8,W@mQ"U=[>he^asbqidc2[)BO<ai+kdIr1ViY=hb9DNmP(h9UB(T
%IK&6o@a:m.C%V_[S"&rK1e6sMOoQ./-DT+A.]D#]*="$WS6V8LpU^gd06UUQTgjIi>U,^fE#M<\*JBoPNpqAepO(Z3#i'tVLlcjc
%heSMoC'q/)re2>ZBH)^*>)&;Wd*+la<IZ)g_$:?b@SmNG)<HHLgS@`K)3Qu([?1rj`mefR=LI&QE)X(n"h"Wu;\J!YEF)U05JH7.
%/]\:.9b^AqqLO%5P,P:_4E?\jXYNOkATZl!8hSPR6:4%OI(&>Y')&'XU\`>VLZ%bI!m@<[Chh7Y.9Sl&#KIk7a<2\<d-KWB4'b5U
%*Y@^ZDQIrXAgiFoBP.r_$dKc\%HZ+`gEYLr<0("8JW$,eiJNsE4*WL6o,oJAb8T*2_A(TJ&WE`C7V_bQj/(^D&4XCuS1Km0QZJp6
%--169f?o#9+Grk'#`p!((.<F]%uBn0p7;>SZf>a;8+d:Rc^,Wuj%1r*Q8&#fClC1j8C5d'[Req\C#9Pi1bm!_Z=b7,l7Gn)lO%pH
%AE5[D4r+Vq:d1.7eXg=UZ"Lp^<jUBEH?U`r<WU8h4I5i;K]PjK,#GF[6@o8sJV8`ZSA#G@nWh+pVRTSP@[#aQbb4U!E\&6\?1,Tm
%]O)?[o5so=MgU=@;(W"M6,,]l#TH'GZWO(d?U[4r9r"dG.OfBi[3Ai^!UAmoGc7/YcP4li9rPb@F.fri@NcN#i`$sQ$O&q.=U(jp
%JJm]39ESS(5&t4Lr"@_ZQ*4!ubPAq@Rfjk:=\#qkp#p#Eq&m8+MQN?(i;TU0R.M5YPpe3*,kMCkA#m/&('k+J-J*#b'/1)M$f8ud
%D&eA6O4@^\#tJ>+<%(4tdOHhM-*72NQI4n<Q@(q("AJEEY?CZJRaQ8YH(<nS4JhLI4\Jo7m(69$k$;FNRMlQ6Sa;&-4Ve?rra]TS
%4d?WNkFl^S^Q3\bA8U*A=U@SVk"dumj)!6"TU?R;mKt_&!L%u@#+^YOoC_S@7-i4W8Ug3]V"aQ6oOBNjUX1)Q_.0kpa3'#qSiW8/
%o$"r"T5lXOjiIcL%mq711?i:*-*'--Q:fe#`H%G<W":U<QP9fhkGZ]5X"8j75&e5p/(W0KjaP"6C7F=%1S^[^:;3_31'>u><"G1k
%>I8I%]@(IfS)RWJnh#_q))B`,E%E?PdO5mG?rdf;k!_d3$4IWrUn^3@XJk:PaDN6li&%WQl"7kaOi>GFil4uh=t!]g:!F@*#iu9L
%)C/J"d/7Y.)3PE.0fJ8/lm=ZVWcFZ+,b8ScBOZ%A/q-K2p<0=jYJ[/j#+8(<Z5MsCWYJ`HhN0,OI][-9kU]4!)*?M$,B.[kO=W"`
%',2c$`AD"W(c[p?_DY+Q1ASI$ekV1'qheoj2k`%lX.R]ZPK1kX8$Xt&?VO?bm3<iL,BS%6h;RqoWGd\\XtcLe5R::C"[lnNbA^_3
%S@Na;hW-/b*1pt`@A5s'>Z\=#Bu]9r$fIJ2nD/[cCJC`N;q"9;R_P.]5$kABG[Pi"^$NOOK5TaA"FY'K0[u^n:5$(V\l;q8`$uZ5
%=W9*1&:j@WR)";]b+\rOctB0mpEcZ$\uhN`;OI[@^a*K#Rq=f1F0Wn<.T6;TG^64CD`?@#.W!M#l_g/"&])TfaA%t_;a7Ioc^U?+
%dmLn`*MQ^'B;"hbA?6QI>7FbSSrK7Y6XKt-jO;GoV?J]D5%M]J'lnZ5>``3+`Iom4-1CpZD:Ec6_+;["b^:C@0b.B<aRF&ggCR_6
%JF[%&asq:sI+N(+g7&28/in,;&![9ff((ADT;:F4Y"a0\2>YXT<A$44FECA._<780Ulu;lROBgS.7HC'DYC9m//;g)=LE5fAlVRN
%@K[.1aeHo[9("1'S=V;Vm`FUAJ4[h!G-DH"`!;3i3&+IS8,TY.ha(\3KXV$%bRF]fPF!Fb_;o2jVC!O,_:)FL"sI38"0aDcD.nmM
%U@A/gj>1tLXVdnf>&4QZ@XId.V#2q$a39u*5p_ikRAn7<Cn:D[`Sdt59Hm%Vn#c61o>m_sZhHC62qLj2oG4;^2c+HJT&R,Y@9p78
%B.6"-g`TS&:-cbg+80t>h#%=<mdn@VY"6C76I8FPX+FRi]t>rGRftApo.4?UFRt-`d\&lAW2>]*YM,"$mFr52_;J<.YokPsc*j0Y
%J1a"7J9rt%LK*VC,jI'T#@'p9[$XP[Bp997;Ie_E=-_0K4h=Fq35jn).9TH15@q-t!k8m$d;tJo[ZK0Rad-k^<(5Om:5$t)aQgq#
%NqbMl=]j/q8cQJ+=2RpraXZ)O/e(mE'!Q;:VKQ^cf8'T\**5Y*O:E+i/??(&9hZiQHd0CJ4kal$=r(>&G!Z`MlqXa5f;(=&-7%:<
%D7>P91/VuAq_*XLR$u?]=GOClZ"=ni0K#-F0I<IS/2e`T5P9pR=i'D>EH=!W95qsRo:\L2`]adAUC;dPRfSeG*r+-_EshsN/)u42
%OPClW/j0JfXU7B_+5d5l7]62cDe443R4027VRD9@`W:l>RKo&mJi7`0RN?`r[]8-mflT;`:3B/g'QGE='En(^*k8!X0327_k;Ci?
%atVjIf'@49$9%urB$k'Z6HjJ;;t22(Y>1]S(Jt-6B>Vr&RQHhl53K_Pf57e2.Y(ZBH;V)>.C\:_0I52'WA)u.ron];_"g*tpd"R.
%d9iE_g"bW6[7EdQS!(coPK*@i$"M[$FV^bjZG+AB=r]#4M,0n(27FYXRk(A(f?H-gZ7hHAh:?6Xh@SW+WC<RE*N`/pKJ\ob;_O8<
%J&scaLn7cj7Yf'N]O'a3D9Upn0t!f9)fPn>pat0l'\99O!E@,E<rhVh>6l4./M&+LW,bI-k\uVKCe])q0*XcF^6QU2pINX[4haFf
%Bgl^0)AX[#B?EVXY=re$Pd@9/UKFYTTqIe>&9huf*Z%H'6rru]O4\RGaQJ,<!0?Kk_THlWh@BQh"OEH_51)8"JQ(FnkV;RY,,7g5
%[Ge"k6?9j2L$imNKt^(7NX41`TJ)J%ncWsm&qA4?Q$PP][eUIm1bm7d8qT"#L_'DQm,]M%Rl>L21RQ05kXlh\B!XrSq0,i-'^e6&
%6KZsKDG@*#<Y(-(I]X@@Iq0FPW#&Z>Kp]fRGUha;+5j%NF`h?U(j`R3W\gI`6W62mRm"8"3tNl:Qa[7D3$r]FKXKSfgq%HOJ6V(p
%<TqWHm2u,+b&AgEbL7ll!WF@'%W>5/\A0A-##//`,HOglNS(CI8Q!^ZiC9@bP<l)e0V?8MMFK*GXbOiSBOSrg^$pOfE#rY88i]bX
%;Gm;XM"W&6Zq6crC?OfoW4T)?,3$A7DQ$+cLph8pY8.a3Xe%;.'-R&3De2B(4H+s@QW@uY2P32-E)EB%Hr3NFFMs$^8!FcG/H)@_
%G%Es:P?fblU]p"6ejZA?Kh7;I0`m>kQ#7QkERVBs*X",E;Fd:0`QoQW9T:W<`hrkHk#PUU8?69Y1cF`D9`>+c;pG*%L?"/<`+<#7
%TjCGXbD9ffeFE1Hj#kM:5Z!B_-P+)Wcre^$1lo&-#\Tg5JX[^GWREd`Y'g]*lYR\9nIUefkk8UKdP"GBi%H6:ST^$^ZInrXV42TN
%k?oi^H>AVR@CZ%P444Nd#Al"T7gPRr,ppi-_sqefm%k_IeMobb^^N213u:f]cKZ&5U/:U,e?2kW=Oo(&b@`\94k[GW(Jt9)$3fBD
%$(phW?r21u42!]mcqu2&1d<']kV9KHBSr$8Q'*M'r(-lp-WY85Zk?EBTW"Y4/EIE.HmI*W<>)Xi#>)t\1U/0Z4ue_U%DPn^_O@2P
%K+nn>#G_\RXTWj8p!Ju=DhkPA>G+lj=EeRXj47`fAVNqf5?Lt/_q>ZE\4;0QO:0OoYPJ@S#'-BRR3EWS-'cuMet"E0AQ\;eWc)6F
%;LZRe3k,+@661p8),Pk\a>bmYPC'1M8%W_?5,C;plRgi,9r.MoS6hh'*G+mY#kSK&"R1s8_ckS0J<^m,REQ+sfGPfY9[sSPRj1Gi
%9PbO5a'MXopAq^l>sK`@52=^"puHA5o@,+_pJ,>1aAN"81UsgP8snD,\();]%taDp<0[sKL/'aD9i^G6![>qSq7HRc"$IN]B4LZ"
%/cAnic1u3$kMoKD]SltMJ,ElL]_.Jnq=)U@FD9g`+4ZsFr@Y#s\<)H8#(sbTW$b".^$&9!9P>;]9J/&oF0M8dSQ]P;B;;c&?VXj/
%3i$[O>`(MM3snh,^8c2tC*@._"0&n<\<&]9a%,+1E'5)gB;7,[>E#dIYd]cdENs`).]*C?EL^A8\+3&hE>(Nf&[5)'^LA$Tm#pAp
%Wie84O)]cOZ)bYi+XC&k5M&0Yp^h3#3k8/&S$'7&`c-kgOE#]Z>EJ]S/,&;hA_IQI0?_7E&NEgKBb-YS*Zt-3U)`:o!<#F03=5>Y
%T>QA>WG$m*';1X%Q?\]Ss"phBR[n%Jq=&::3Fi)'XRCd7rCc19THsW9OD@#E;V+3i,hPIW6u4aiXiNr,0Mh,pHZOb&aRmpn#*otE
%<[eWGdUQ_6&/O/\[(b$f@+/f\jDtKL0#GT"A)jtZ#42Uo0L!I4Q=K3h3@ahE+2l)`lhm_jNM*p:3;hmZ:XZC78CE%RHbePhC"3EX
%YHAJ`I!LRE>T\EO`ITQibo?#@R:aU@plWV:[#FqGK1H#C<T6B`,%9]s$\e"j>+/!`Qu]dXEB(K0%Z6XD9;H/'C3r/Y^\Rp%`CY\q
%l5_WkS*ce9QEkQUEKI_8L+$*"[<IX.M.A'E:WFn&iN9s[`'M8B5CRV9-1175#spiW.5.BjKaqd010qA1W^no#V*(3lZb0G;.]h!<
%E56qnDL]qJpQl<VCsiZ:H.O'jRV@1Ws8U)RFaZa]"PFM=r<fMnP-"r9cP/N-M/RB+ci2BfIf4c]80fm'B@_dQ]d[rYY<o4=Z)X';
%isg=@ISP*nZ`_EK&*j4b,*a>NeZWl&2*\Ru$IT;'fm9O@X\##2Q)5tXe`F_-8itLh,Dmn/Ro!fSU]aEn8C\uc,@tH:e](J&!EE9t
%hBGcN354'OUa)ie7@"P8,++[]=/E9Fb.O;!46XLd>NAVFotdF@*6X5'/4KrbaUNHnA5[-@-Oh2G%&SKRZF`,BLIBIO*g'\[r7q-a
%eJK5,-bV$#(E\R8l*oZ'[pArsgjIS/oe^,":"3N(m5VV>3pH<rPLO>Q#pIiL.=<&81)t+Z'5C!N`g5;HL?1tbi3;r,7kmTbl>klu
%=H7h;,V:B="eSeWVY?)<cH%rJWO6"g,&aFg8_MU47!f_CDR[&!79]:g-9UHIIO[5EgZ;>8O@IZC!p7!gp1B!_/-IZ%7XE=#6jD2&
%dY0u9H1IrIrRpW<YOS`Do^2tgb^_&N>-#EI[2m0pR5bWFh+F1`4HE[W2!GYBUXP_k`8MPfjBSr<%mWu45e0Ml*/FrCPH'LlSKZ6h
%.Y\jAkesK(h,#0+?Di.Nl!#pDWhR3UA[e=eP[L!hYoNt0S&L_]jhq&4K-I##Bqt`fK@?9crXq\C#2maPfQh]lLR<^BlS>G`8ZAl3
%:[l],Ue%<BODmO"<h<RUAtb]B!gJ'S4-"s&$\bV@9i^W1hqQ+9/+V;8Bd@*mN>SQuN9$X<dR)`m/)<c)f*p._ORQ:G^7;J_'A6S#
%:Bc]C4\u8DXN.sTh20dhrDF1&$L&;&&S8-KBbdN1S9e,&?,m@jW^TQQ"FS1Ge&r8R*^L`oO:M`fci4J=Fo)(%YCc"es(MlA0p1hf
%-8Y][h4Zn'%T][F4(taR*_]=P.$h[I2cILao!E<%TJRu?"Bfh0W&$`DAf/$.h):VG%V]<i^a#dhOmI$5<ZM=p,3cs<\]tBO*8#U7
%QhF%p[-=d6hNssAS7lgnO4RgBWNOH2c\,a4B9/G&@="4uj6(J_f7LO.>1+tMG^h0GG,b/kG-tqZ*$bgW$]1+O#=dXGko?gmOUoJ5
%qC*[j5W*J!iS4F$PVjgn3(c>(@BQle0s3t16Gh5'UC-'\CQ;r6qP!_eU`c5!j*3+cMX.,M!@N;ue,.Z_&2nJO/I+C)oLOUZeV300
%N8HMMT@_6O?X<+?R@3F,P/ULVs3o,XVkfhjY!?TrZkUoIWo%)V7ujU"3X4]1A2aCK/*SaP]D$D?hB&Mom#l$^gPn8pa:(.c$C`1F
%885*F(D]bGB[;'T>^t]QcGnH$q1Pd*,I?gu$pTlslD5@]*PQXB?*5`iLUlr4XAZbn`t-$4,++%Q\^d8he!DG+IJ_,%ilD)uk3mcu
%ZX<Xt5P0I)jmW62RrA>m]-"b7\I?7Ja)?J)h*:l-mD&Vf],uM$ZetcPgTTMJI/Efus5?c2roq%E^](F'hu<-$+91tg+23*tj1kTP
%5I'^QgCJc'MdQJKmsk>CrruHeG";~>
%AI9_PrivateDataEnd
