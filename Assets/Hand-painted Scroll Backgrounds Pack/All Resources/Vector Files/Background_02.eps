%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: bg12.eps
%%Creator: Adobe Illustrator(R) 17.0
%%For: Krol
%%CreationDate: 7/31/2016
%%BoundingBox: 0 0 900 481
%%HiResBoundingBox: 0 0 900 480
%%CropBox: 0 0 900 480
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 17.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 17.0.0 x256 R agm 4.7700 ct 5.3328%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.5-c014 79.151739, 2013/04/03-12:12:15        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Web</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2016-07-31T22:47:14+04:00</xmp:CreateDate>
         <xmp:ModifyDate>2016-07-31T22:47:14+04:00</xmp:ModifyDate>
         <xmp:MetadataDate>2016-07-31T22:47:14+04:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>140</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAjAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A4ZwwW7XhdwxteF3DG14X&#xA;cMbXhdwxteF3DG14XcMbXhdwxteF3DG14XcMbXhdwxteF3DG14XcMbXhdwxteF3DG14XcMbXhdwx&#xA;teF3DG14XcMbXhdwxteF3DG14XcMbXhdwxteF3DG14XcMbXhdwxteF3DG14XcMbXhdwxteF3DG14&#xA;XcMbXhdwxteFFfVpPD8Rkbb+B31aTw/EY2vA76tJ4fiMbXgXxRyxtUKCO4JGC0xiQi9nWihUf/Ko&#xA;RgbdisNpdHoIn+RTDbHwz5Lfqd0Otsp+Q/ocbXwz3NNCV2ktgPp442gx7wt9CA9UZfkQf142vAFe&#xA;HTYZa8KmnWpAwcTOOEHko3NiI24oanuKg0+nCCwniAUPq0nh+Iw2w4HfVpPD8Rja8Dvq0nh+Ixte&#xA;B31aTw/EY2vA76tJ4fiMbXgd9Wk8PxGNrwO+rSeH4jG14HfVpPD8Rja8Dvq0nh+IxteB31aTw/EY&#xA;2vA76tJ4fiMbXgd9Wk8PxGNrwO+rSeH4jG14HfVpPD8Rja8Dvq0nh+IxteB31aTw/EY2vA76tJ4f&#xA;iMbXgd9Wk8PxGNrwO+rSeH4jG14HfVpPD8Rja8Dvq0nh+IxteBMPqa/77/4Y5Xbk+G76mv8Avv8A&#xA;4Y42vhqn6Mk48vq7cTuD8VP1Y8SfBPcsNkAaGOh/1jjaPDcLNT0j/wCGONr4bvqa/wC+/wDhjja+&#xA;G4WijolP9kcbXgVFjdduNR4MxI/HFkAV3pxdTax1+bU+7FNDuC10dhxCBF/lU0GKCCpfU1/33/wx&#xA;xtj4bvqa/wC+/wDhjja+G76mv++/+GONr4bvqa/77/4Y42vhu+pr/vv/AIY42vhu+pr/AL7/AOGO&#xA;Nr4bvqa/77/4Y42vhrlsC32YS3yJP8MbSMV9F40qc/8AHs3/AA39MeJPgHud+ipB1hp82p+vHiXw&#xA;T3Ll0lT9oxr85K/qrg4kjB7nHSD+wI3/ANWQfxpjxL4HuaOj3A/49z9BJw8S+Ae536In/wCWZvvP&#xA;9MeJHgHuUmsQpo0VD4Fj/TG2JxtfU1/33/wxxtfDd9TX/ff/AAxxtfDd9TX/AH3/AMMcbXw3fU1/&#xA;33/wxxtfDd9TX/ff/DHG18N31Nf99/8ADHG18N31Nf8Aff8AwxxtfDTH08hbkcLvTxteFXguriEU&#xA;U1QfstuMBbIzIV2vi+5FP8kgOv8AA4KZnJaz1ZT9mZIx4KrL+pcUWe+nMs7L8fC5QdabsP1Nja0e&#xA;u7SWdtN/dS8G/wB9yf1GHiQMUTyLpdJuI0Z248V3JB/rTHiU4CEMEjDDlUjuBtl+CHHKi42WXCLU&#xA;J3uw/wC4tVdOzVZ6/cVpmb+Xh3OIc0+itGKoPWj9GQn7Knlt7jt9+U5sAEbDdiykmiv9KL+Y/d/b&#xA;mFbl8Id6MP8AMfuwWvCG/Rg/mP3Y2vCHejb/AMx+7G08Ib9G3/nP3Y2vAHejb/zn7sbXgCvbSx27&#xA;VVyVPVSNsB3ZwIiiZrjTp1AkaZKdkpT6a4BbOUoy70MYdI7NMf8AgR/A5Ky18MPN3HTB+xIfct/R&#xA;cFlPDBoQaW3+7JIz7gMP+NcNlHBBUhWyhcEXUhUdVVOv37YCWUREdUTJqVpT92rk9iwA/VXBTYco&#xA;S+dlnflI59gF2GSDRL1HdS9KH+Y/d/bjbHhDXpRfzH/gf7cNrwh3pR/zH/gf7cbXhDXpp4n7v7cb&#xA;Rwh3pr7/AHf242vC16eNo4Xenja8KK9HK7bqRVvYW0igyThD3WlPxOAyZxgDzKq+l2oAMbmXxCst&#xA;cHEyOMKLWdsh+Myp/klBX764eJjwhetpaOPggncfzCn8AceJPCO4qp0ZwokhLA9QrEKw+kYONPhd&#xA;QhxIVerxqzqdyyitfuGFjxNTzST7OTx/lFAMQspEoR1USAAdBvX/ACjTNjohsS6/VHcBL7p2ViyG&#xA;m5FMznAk6JqXJr0IB+7IzjcSGUJVK019KPwOaO3d0HeingfvxtFO9FPA/fja070U8D9+NrThACQA&#xA;pJPQD/axtabe2ZDR0ZT4Nt/DHiSYrPRxtFKsdhPIKohI8eg+848SRAlz6fcJ9qNvnSo+8Y8SmBU/&#xA;qz/yn7seJHC42zClVIr0qMbXha9HG1p3o42tO9HG1p3o42tO9HG1p3o42tO9HG1p3o42tO9HG1p3&#xA;o42tMri0bSpR+7mjb25NX7qVygyIcjhCp/h6x/nT/gn/AKYONeEdy06DZDuPvbDxrwhcuj2yiiuV&#xA;HgGcYOJPCGm0uGu5Zvfk38ceJeEOGmxjozj5O39ceJNKZ0a0JqUJJ6mpw8aOAO/Qtn/IfvOPGvAG&#xA;L3piF7N6YpGrlV77Rin6832ljw4w6TUSuZSa4Pw/T/DMgOIXM3F4n9hXAFZrpFhZ3WnxSlavTi+5&#xA;6qaZodSDHIQ7/TVKAKM/Qtn/ACH7zlHG38Ad+hbP+Q/eceNeAO/Qtn/IfvOPGvAGxo1oCCFII6Gp&#xA;wca8ATCKHT2j4XUVf8vcj6RXBaShXj0VDRfq9f5gHNPo3yW6KDhpmkT/ABPM0x/4rrQfeR+rHiIQ&#xA;Raomi6Yu8UzxHwbl+tScHEtUiobSxjB9WT1qdAoYH7zxwWmyg7vT7a5cErxQfZXk2ESUi+bHdeiS&#xA;znhhtwoaQEsTVqb0HcZkYYiW5cXPLhIASaf9JuSsU6KQK7rQb/fmSMcO5xZyyHkUqng19zQTBwT0&#xA;VwPwOWgQHRwpjOeqEfTddr8Uctf9b+3J3FoOHN5r4rHXUO3JPmwwExZRx5gmNs2sR09Wdae5Df1/&#xA;VlUoQPRzMcso5lOtLM0mpQ21yY2jkqCyhhvQ0327+2UZIARsOZinLiALJv0FZ+A/4I5icbm8Id+g&#xA;rPwH/BHHjXhCjJpulRmjOoPgGJP4YQSvCEvrTfLEp7DqOmw2UTXF1FEeArzdQdtvHKTjkTsGEssY&#xA;8yEJN5w8rxbG+Rj4IGb9Qplg0uQ9GiWuxD+JRHnjysTT60fmUf8Aph/J5O5A7Qw96OtvMPl65p6N&#xA;/CSegZuB+5qZXLBkHMFtjqccuUgmMYilHKN1ceKkEfhlRsc24SBX+hgtKG1KQWlhPcHYxoStf5qf&#xA;CPvy3BDjmIteXJwxJYBNC8dvHKalJYyQx/mLUYZ0kZcx3OlyYjGMZdJD+1KpzvT3P6hk3GLb726n&#xA;w/2sC9GYeSLxXjmtnNNvWWvt8L/wzVdp4+Uvg7Ts/Jzj8WUkQgVLqB41Gal2awz2Q2M8f/Br/XDR&#xA;7lVoEtZXANxGin9osKfhjugmkxPl6YrVJEbuOtP45Hia/GDF9dsbiO+KfCQqjowp4+OZGPk2A3ul&#xA;4t0TeaQAfyoQzfhtliaRljHCJUkkhEcIYfHI5DEV7dMBSyi9t9Mofq/Ln7VK/wDDZiW1RMuqAkWO&#xA;NeUjBFHdjQYRu2IQ6lpwanq/TRqfqyfAVYrr9xHca2fTYNHEiqGHQ7cv1tmdgjUXX5jc0FHFKYLi&#xA;6ArGjBSfem2WGQuurERNGXRBJ9tfmMm0hUujWX5DEMp81LFg0CCSAdx1xVGW1x6U1rcH/dMi8vkC&#xA;D+rIyFghsjKiC9GWJWUMpBU9CNxmpt2qV68OCQr05Fvwp/XLcSpNlyEpnkSeR5XFYk+FAe+Z+KHC&#xA;HXZZ8RJ6IWe2tQih4UZzuajoMtstEoR6hYun6c0DObZOQNARy9vfDxFj4MK5BSWysAa/Voz8+X9c&#xA;eIsBih3BcILVfswIvyB/icFlkIRHIJjpt0tpcxXcQ4cDxmEdASh60yrNDjiQ345cJBDM7bUrCcj/&#xA;AEyaMN9lnAANfcE5p5YpB2gNpX50mMMUFmlw0vr0kapqOI+z08Tmx7Mxc5n3Ov1+TYRS42/1jyyZ&#xA;B1gkZ1/1QaEfdvmaZ1l97kDDx6K+sZEsUlP7xvnmY6AqsfxQMPn/AFwJHJX0m8e2nDKSAKhqd1Yc&#xA;W/DKs+PjiQ26fJwSBZKCCKjoemaR6FvFXA0NRirOILa9iAMV7KoO9K7fdmBxIIB6MX1e6D6hP6qr&#xA;IytxMm6k8djWhzMxj0hNgIMXCqaoqqfH7R/EkZOlsLGd3PJiWJ7nfFLJZJLeGCOSa+dTIiuEG7fE&#xA;K9BmIIknYItI9QuVnnqju8aiimTr77b5kQjQVC5NSkSSVmllPgT95zMA2dXxWSU+0axnFhNFIqyQ&#xA;XINGRg1CRSuYOfIOIEcw7HTYpcBB5SQRs4rTRJ2nHG6kkCoD1+Bh0/HLRMyyCuVNBxiGI39RKUyN&#xA;zct45lOETZWEgAk9BihCJKVk5HoeuTIawd0wRWMLN+wTSvgeo+8ZBvANX0Z/5Zhe80aCVbh1K1jd&#xA;R2Kmn6qHNVqPTMuwwzuIQvmGJobmOJpGkITl8Xapp/DJYeTalRIAqemXKknwl1jH2E3Y+465s3U+&#xA;SlI5dy33fLFiTbuZ9Mp2Jrit7OaGVYklZSI3JCN2JHXIiQJrqkwIAPQoO4kPMAH7P68sAapFWt7m&#xA;p/yu47EYCGUZJpp90Fb0GNVbeM+HtmPlwmRsc3MwZhHY8kLqN29xdFy3IIAiH/JUUGbDHAQiAHXZ&#xA;cnFIlk+kQD/Dyow2dHLfIk/wzByy/ePV9n4/8EAPUH9LA5lKzOp2KsQfmDmyDxso0SCrW6OI+ZHw&#xA;MSqn3UAn/iQwWLpIBq1KM8Jqdq0wsRzZHpdx6kHBvtR7fR2zVavFUrHV3eiy8UaPMIq2t4ZAxcdK&#xA;bgkfqyaIhCy20MqMfrE0PEndSGG3sd/xyQA7muceIcyEE+mX04Bj1ORgdv3nNfb9ktkgYjo4stPM&#xA;8plDzeXNUj+1dxMCaf3j/qK5PjDVLR5f5w+ZaXQNQ2rexqPZ5DT7lx4wo0eT+d96Ii0eRP7zUGP+&#xA;oD/xtTImY7m6OmkOcymNpaQFgrySSjsxalfu/rlZI7nLhHzKqkSxzOqj79zTKc3Juw/UtvZfTtZG&#xA;7kcR8ztlWMWWeeVRSMNRWHjTMl11prpNtJNGFgvhbzEk+mCwJ/VXMfNMDnGw5engZDaXCUdIy2Kt&#xA;c6monvB+6gB3DBd+XT/Kp0ygevaG0XIJ8P1ZN5cgx+4naeZpWCqWNaIAoH0DM2MaFOunPiNoa4ak&#xA;dPHbJhqkdkJk2tPvL0H1uw1CA7sqI8Z/yl5Ef0yqexDtdBi8THkj5A/eyL8utSCXk2myH4bgepD/&#xA;AK6D4h9K/qzC1sNuLuadNOjSt5im9TV56dIyIx/sRQ/jXK8IqIc8Me1K5IpAh+Jvt/I9B9OZ2HH1&#xA;LianL/CEtDUUgd+/tmU4VrcUK1hbteXUVvEatKwXbt45DJPgiSWeKHHIAMx1jTIXtGsogAIVAh/1&#xA;lH8c02HMYz4j8Xf5cAli4R8HnMhPJiwoamozfh5gtIwY/D1/HFALJtG0ySbTb2ZwUvY4+dshqGKC&#xA;vM8fl0ycBW7lQx8UJfzgESdAmh0Av9Vkmv7hgfhUn04xv95yXFun8qRi5EyP2BPYojBpyRHrHEFP&#xA;zC0zWk3K/N63FDgxCPdH9DANai9LU5xSgY8x/shU/jm0xG4h4vtCHDml8/mmNjarN5XeUD44p2ev&#xA;sQoOYc8nDqAO8NuPFxaYnukkk4pIT475nh1xTqxglisE1IGsbOY5VHZdhy+/MTJkjKfhnutz8UJR&#xA;gMo5XRT8xpb6WH/bf4yfYjbMCEicpHQbOzlERxA9TukvI/VCe7E/iczHDv0q8Y4oo8BlZZBQv3DS&#xA;inTc/ecsDHIVktuUt4Zj0m5U/wBiaYAd2U8VRjL+df2KFQKe/TC0o20c8BTqp2/XkJNkSjJGBmDj&#xA;o4B/hleQWG+B9SX6m5kljt1IBrU8iFFTsKkkAYMcaDVqJcRpOH8uT3OhwhUQ31tXg0TKwkjJLUJB&#xA;6iu2XcOzcdOZYx/OCg3l23nkit7V29WCIfW5lXmnrVJZSwIAK5VlJA2FoGmjIgA8hv71sy21jbL+&#xA;mmadoXcW0YJbmpC79ulO5zDBMj+72vm2yEYR/e71dfYk17cWU7rJaQmBSPiWtQfA+2ZWOMgKkbcH&#xA;LOEjcRSW3TfEB4D9eXRceaF9Qh6Hp0yVNVsx8jw/uryU9GKID8gSf15TlPJ6PsSG0j7kuSeXTtWW&#xA;eLZ7eUOg9gagfdjOIkCC6rKODIfIpjf6kKtNUNLMS4H+sa1OQxYO9ycucAbJKXYuXJqx6k++ZbgW&#xA;txQhpp6/CvTuckAwlJkX5fWol1l5juIIyR/rMaD+OYPaEqgB3lzuzYXMnuDKJm5Su38zE/ec070A&#xA;YB5mtBbanNQUSWkq/wCy6/8ADVzfaPJxYx5bPNdoYuDIfPdQ0PSZ7+6Xgp4KdyNqkdgczYx7+TiY&#xA;sZkaDM5JdQYGDVoxaSW49Wzv3owUVCEEqSGNGqB447dHYkzqsnpI3EkO01pNPBbw6zd3Ts45IQ3B&#xA;hWrV5FdqfPIzNRJpOHhnkjETlLdO7k0gf5Zroc3qsn0lg/meErcxS02dSv8AwJ/tzZYDtTyPa8Km&#xA;Jd4+5NfKyB/L0qsPhZ3qPagzW641mB9zb2eLwEeZY9c20a3YimcxRhirSceVB2NNs2omTDiAsupl&#xA;jAnwk0GQQ2p02zMFxILvSZqSeogowIIIAFTUMad81ZyeLO4jhyjb8e52wx+DDhkeLEd/x71WTXIb&#xA;iJooLahK/AZQGqB/Qe+Sx6GQ3MvgFlr4yFCPzS0fFHEnixr9GZBaOiKJoCfDK2aXkk9flljUm9xB&#xA;6nl+2kUbxFifkWNcqB9Rdtkx8WliR/Df3sencmSg/Z/Xl4dLIo2xl5H/AFhv8xkJBtgUepABdjRU&#xA;FcrLcO9I7iYvI8rdWNaYgOLKVm030t9La1Bm0iaYr9q5ikkO/jQUUZIV3ORiMK3iT5pxJp97qNlE&#xA;trci30vjyUyVEsr/ALRkp9og4ykANzQcnwpZIjhNR+1LtSj0gpAdWuzJLFHxVI+VW3PxEU5binWm&#xA;YMeMEiA2vmuUYyB4ktwEin/RyzcbGV5Im3CyCjKfCvfMqHFXqG7r58APoOyAmNZW+77stDRLmhSD&#xA;1I2OSa3oXlCD0dCjkPWZmkP0HiPwXMbJ9T13ZMOHAD32f0foSHWl4ah/xkQMD7j4T+rLS6fXxrJ7&#xA;woMDJbB13eI8W/1T0P0dMlA9HEO4Uh0ybBCzTl9hsv68kA1mSGaX+X78kwJZt+XTBUvpvFAP+Bqc&#xA;1PaR3iHc9lj0yPmE7zXO6SLzJpRvZbVgaAclkI60NCAPxzadmH6geXN1HamLi4SPcld1DxuBpqsl&#xA;rHH9p5DRelakgEnNxjyRlG48nT5MZE+A+lP7CwuIbGRbq7TUtGVOcixPzKGL94AK9AeNNj92RJ38&#xA;3Ox4iIniPHj8vLdA2eqQ3WrRvDZw20MIZkSNVDGo4/E4FT1yGaPppnoMwlnBEQBG/wBScXF4JI+C&#xA;qRXqTmHGFF6LJlsUkPmO39Sw9QCphYN9B2P68ysBqTpu1cfFiv8AmlF+USP0D1/akrmu1/8Ae/Jp&#xA;7O/ufml+o6TNeXgWHipkWpdzRQV23/DMvBqRDHv0cTPpZTybdVWCC60OCYagv1i0Uq8CIap6lT4j&#xA;4fHKpzjnkOD0y6+5thCWnifE9UendahqGs6lcqpZTBAaFFAIB7jc9cydPpccDsbk4+o1eWY3FRXW&#xA;zpcUkG0i/bT3PcZflx2LDHFkvmqzVETE7VBp+rMMc3IPJAZY1sl0gCXRSh3ClhT6eX8coltJ6HQ+&#xA;rT172IahE1rdvERUVqD/AJJ6ZlR3Dz2ox+HMhdZSkSrTfkRT54JDZhA7phqc4SMQKd23f5Zjhuym&#xA;hSWQwT3dzHbwKXlkPFFHc4SQBZccRMjQTnR7bX4BJcacSDCSJoQylvh2PKImv4ZKN8w5WGOQbx6f&#xA;jkyBUsmuJNQLvNfRxqGsoCFVCVBZPi8Wqcpzzhyl1c7HGyZjeQ6JLrVjoBv557+9aOSUgJEpBKgK&#xA;AKhQx7e2Y+PJOqgPT5tOoxYuImctyxeVY4bkiKQSxqfhkAI5L8juMzokkb7OrkAJbGwmfl3QZNV1&#xA;NYpQyW4HqSt0qp6U+eUajNwR25uRpdP4kt+QZTqujaffW31VY1hjj2tigoUp0+/vmtx55RlbvM2k&#xA;hOHDyrl5Ii0SK00yGDkpMUSoaGtWC0P45stybc/CBDEI9wYx5liIjguFG6MVb5Nv/DL3R9pw2Eu5&#xA;A2UyrKC28cg4uPY5EuthLd1zF6EjKx2HQ+I7ZbE2iY4SusfKms3t/DaSQvapKnqmaRTQJ4/Pfp1y&#xA;M88QL5rDSzlICqSm/sbixvJbS4XjNC3Fh2PgR7EbjLoyEhYcbJAxkQeYZT5EeRbe82PAsoDU2qQa&#xA;iv3Zq+0uYd12R9MveE5ExOrmKvwiDlT355gV6fi7Hj/e1/R/SjA0aOJXUN6dWXl0Bp1PywRkQCB1&#xA;bZxB3PRIdc0h7wLqcf8AcIim44ir8DU8wtQDQe+bXs7OI3A9+zpu0tNxEZByrdU0m00JpYnsryVJ&#xA;ieE1vc8UEsbfC6qRtWh2FTm0kT1cbBDFYMZG+49R1Rd++tfUpb4WqQ6dbg+jZVCNwH+7D13oOmVS&#xA;okC3LjmyQBnw+gDYcvikeoaxqVpCjPaLC8iLJGJCSCjdDtxyqYAiSDdNWftXJAfSB7/wHWtp5j1i&#xA;4htWJgtrqP1eYUBPSrQttufkTkjlxxjxDctPi6jOREmoyF/BUitr7Q7CRb21k9KGZo/XShVidwRU&#xA;g0PjlGUDLK4kckwMsECJA0DzQU1+2qBIba3Yyg1AqCSCN9h/XLcEBjHHI7EOPkzHPQjHdMNMh1Gw&#xA;Mq6rG7WMSGWIEiQB4yCKUJptmPqJY8leEfWTXdzc3TRyYr8UHgAvv5JReatPqNw0kuyj+6jHRV/r&#xA;45sMGnjijQddqNTLLKz8Ey8s6RNqN8QrmKKEcppBuaHoo+eR1Go8MX1Z6TTnJLyDOLrQLC5hghkB&#xA;4QLx+E0LAjuR775qPzErJ73eHTxIA7mNL5K1Lmy+onpiUorE7mOlQ+33UzJ/NRcP8nL7VQJLoyy2&#xA;lxIiqWLI7EAFSo+IVPtkokT3dhpsngwMZEc/0Mc1+4srhongkDyKCG41px6jfpmTjddr8mOdGJsr&#xA;NIiVEe7l+xHUJ7nIZZdHGwivUU5byhrFwsVw5VTO6iVN+UatTffY0HhmL48Q3nSzlv3sl0zyvZad&#xA;q31q3r6fo8ERjUh9gzV/yh/HMeeYyjRc3HpownY7mrzy9AL6TUre4e0ui4PKoMZJoKFaVox98ydP&#xA;kjQHVZ6ccXEDRSy7vLyxgN3Db2lpFM5dmu3rcTcm5HiANq+BOZEo2Gk5JQ9QAHv5ljusanoUMs8E&#xA;VkLm5Lv608lQA5Y14mvLY/LMTFjySok0O5x9RmxRJAjxS6kpfpuj3l7JbsIXFpNMkJuOJ4jkQDv7&#xA;ZkTmBfe4mPDKVbbEvT7iOC0ekSBALcQpT+VTRR9AJzTZSSXpccABslizxmdoAfjRQx+TEj+GQra2&#xA;wTHFSFuY3hhlmI5JFG8jEUGyDlTc9T2zaDVwLHNPgiZc6FoGyT9N3cNi0XC0niFw8xb4iikVVQNg&#xA;3L4T1yZz+kkOvln8eo16ZC7/AB8luueULiyknmskL2CKJAtasgJPJRXchaV+WRx5gefNxM2kMSTH&#xA;6UnuYzeaeJF3mt9mHiuZMJUWiY4o31Dv+Vt+YP8Aljtfuk/5ry/+S8feXD/l3L/Nj9v61KT80tVk&#xA;bnLptk7d2aNyfvLYR2bD+dJie28h5xj9v61VPzT1VUCpYWap1ChXA39uWRPZkDzJZDtzKOUY/b+t&#xA;a35qauG5iws+XQtwev8AxLEdl4+8r/LuXnwx+39bR/NjWSKGxsyD1HF/+a8P8lY+8/Yv8vZe6P2/&#xA;rcPzZ1oDiLGzC0pQLJSnh9vH+S8feUfy7l/mx+39bm/NnWmUK1jZlR0BWSgp/s8l/Jsf50kHtzJ/&#xA;Nj9v62z+bmuMCps7QqdiCslCP+DwfyZDvkn+Xcv82P2/rWyfmtq8tPV0+ykp05I5/W+P8mQ75IPb&#xA;eQ84x+39bafm1raKFSytFUbBQsgA+58H8lw7ykdu5RyjH7f1r/8AlbGsyqUksrRlPVSshB+gvj/J&#xA;kB1K/wAuZTzjH7f1tL+Z+pIapp1kpIoSEcbf8Fg/k2HfJR21kHKMfx8Vzfmpq7Aq1jaEHYgq9P8A&#xA;iWAdmQ7yk9u5T/DH7f1qZ/M6/Vf+ObY08PTb/mrJ/wAnR/nSY/y1P+bD5NR/mvq8VfTsLNK9eKOK&#xA;/c+J7MgeZko7cyDlGP2/rX/8re17/lktfuk/5rwfyXj7yn+Xsv8ANj9v63f8re17/lktfuk/5rx/&#xA;kvH3lf5ey/zY/b+tTk/NbV5TWTT7JyNhyRz+t8I7Mh3yQe3Mh5xj9v61n/Kz9Q/6tdh/yLb/AJqw&#xA;/wAmx/nSR/LU/wCbD5ftXf8AK09U48f0bY8R24PT/iWD+TYfzpJ/lvJ/Nj9v61Ufm5rvQWdrt0HG&#xA;T/mvB/JePvKf5dy/zY/b+tcv5s69XeztR9Enf/Z4D2Zj7ykdu5f5sft/WuP5sa2RQ2dqR4Uk/wCa&#xA;8f5Mh3lf5dy/zY/b+tSf8ztRdiz6bZMx6koxP/EsP8nR/nSYntrIf4Y/j4tH8y74kk6ZYknckxt/&#xA;zVj/ACdH+dJf5an/ADYKq/mtrKKFWytVUbBQrgD6OWD+TId5ZDtzL/Nj9v63H819abrZWp+Yk/5r&#xA;wfyXj7yn+XcvdH7f1rf+Vp6sGLfULPkep4vX/iWP8l4+8o/l3L/Nj9v62z+amrEEGxtCDsQVf/mr&#xA;H+S8feUnt3L/ADY/b+tpPzR1RCpTT7NStePFHFK9aUbD/JkO8sR23kHKMft/Wqf8rX1win1O2I+U&#xA;n/NeD+TId5T/AC7l/mx+39aHH5oasp+HTbIfJHH/ABtk/wCTYfzpMf5byfzY/j4sS9IeOZ1unpr0&#xA;zjaKVIkbj06HASkLjGf5fwwWqwwxnqv8MPEVpz2qoxV1KsOoNQcRNJjRorfq8Xh+OHiKKa+rx++P&#xA;EUUtNsOx+/DxLSwxU2Jw2inKlDWuNqrCOoqDkbZLWXj338MIKFIoxO5yVoa9NsbVcIJD2wcQWm/q&#xA;0niMeIJpv6s38wwcS039W98eJabFuPbHiWl3pe+C0070vfG1b9L3xtXemvjjau9NfHBapvo2hG5Y&#xA;TSIWjG6p/NTufbKMuatg7DR6Pj9R5Kur6MnxXNutO8kY/WMjizdC2avSfxRSUIvhmTbq1wjPZfww&#xA;WrYjbwwWmmzGQpJIxtaUPS98naKX4FcASaDFUQi8Vp9+QJZN4FR+i2DXl6iAVVdzXp7ZXllQcvRY&#xA;PEn5BFeYbFUkMq/FwPCQ0606HK8M+jk9oYf4gkvBfDMm3VozSdIk1K+jtYVJLbsR2UdTlObN4cbL&#xA;PFj45Un3mPy5HHb/ALmPhJailF/aQd9+vjXMDS6o8VSP1OVnwCtujDpo1qKHfNvEuAQp+l75K1p3&#xA;pn+bG1ptYGbp9+JktKgtadTXI8a0uEJHSmDiTTvSbxGNrTvSbxGNrTvSbxGNrTfpHxxtad6R8cbW&#xA;lWysZLu7jtojV3O5psB3JyGTIIRMiyhDiNBbqNjNZ3b28h+yfhYD7SnocOHKJxsLkgYmkL6depJy&#xA;22DvTXG1pHaTpi3U9XH7mPd/fwGVZcvCPNytLp/Elv8ASHoGmQJHp5ZQOUgIH0fCBmvL0uKIEUFf&#xA;Wf1b0xWpZfi+Y8MLVOHCxjVrNYHEyCkTncDorf25lYp3s6TWYOA8Q5FAAg9MtcJxIHXbFVGSTlsO&#xA;mTAQswoXrGTudhgJTTfNF2UV98FK363tjwrbfrL4HBwrbJfL7fVoEuFFXfkRX3BUf1zEzH1O80Ee&#xA;GF96vcR+tFIjb8wdz4+OVxNG2/JDiiR3sVLKpIJoRsRmdTzp2Zj5KZbS3e8VQ0kvJVPgAKD8c1Ov&#xA;lcuHuc/SChad3t2106Oy0KoFPuR1OYQFOSTbzfV7VbXUriFfsq1VHgGHID7jnQ6efFAF1OWPDIhB&#xA;5c1r44+W56YCUq3TIJdirsVdirsVdirsVWSPTYde+SAQWaeQ7W3s4Jb+4WssqH0a+ANBT55qO0Mp&#xA;lLhHIOw0kABxFC+atPE1mLpR+9t+vuh6/d1w6HLwy4ehRqYWL7mH5uHXrhG57U+eC00yjTLcQWUa&#xA;/tMObH3bfMDLK5O+0uPhxhNLe+eIRqRWOMluI7k9Mg5cZ0surqS5k5vsBsqjsMUSlZQl1As9u8Td&#xA;HFB7HsclGVG2nLjE4kFiG4NO4zYvONYq7FXYq+3D/wAqFoa/4Vp3/wCOdmu9Xmn1eaz/AKx//wC/&#xA;U/7luH1+aPU7/rH/AP79T/uW4+vzX1O/6x//AO/U/wC5bj6/NfUqr/yoniOP+F+Pan6PpkTbaPFr&#xA;bi+1v/kBf/fr/wDcvwbp/ff0vtUj/wAqAqa/4Ur3r+jsn6/NqPF5q8X/ACo7gPS/wxw7cP0fT8Mq&#xA;lz35shx9LXf8gT/79r/pwwelP7z+l9qhL/yoT1D6v+FfU78v0dX8csjxVtyYHi62s/6x/wD+/U/7&#xA;luS9fmj1Lx/yoSm3+Fadqfo7B6vNPq83f8gG/wC/W/7l2Pq819Xm7/kA3/frf9y7H1ea+rza/wCQ&#xA;Cd/8K/8Acux9Xmvq83f8gD/79X/uXY+rzX1ebv8AkAf/AH6v/cux9Xmvq83f8gD/AO/V/wC5dj6v&#xA;NfV5u/5AH/36v/cux9Xmvq81v/WP9f8AplK9/wDjm4fX5r6vNEp/ypDgOH+GeFPh4/UKU9qZUavd&#xA;kPE83P8A8qR4nn/hrhQ8q/UKU71wCr2U+J5odf8AlQNfh/wpX2/R2XHj82Pq813/ACAb/v1v+5dg&#xA;9Xmvq81Qf8qMpt/hinb/AI5+R3bR439L7Xf8gN/79j/uX4r++/pfa1/yAv8A79j/ALl+O6/vv6X2&#xA;u/5AX/36/wD3L8d1/ff0vtUf+QAf9+p/3Lcn6/Nq9Xm7/rH/AP79T/uW4+vzR6nf9Y//APfqf9y3&#xA;H1+a+p3/AFj/AP8Afqf9y3H1+a+p/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:814ff3a6-1814-2b41-80d0-86dac647142e</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:814ff3a6-1814-2b41-80d0-86dac647142e</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:d780747a-3446-7546-9a06-802210ccd77c</stRef:instanceID>
            <stRef:documentID>xmp.did:d780747a-3446-7546-9a06-802210ccd77c</stRef:documentID>
            <stRef:originalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:d780747a-3446-7546-9a06-802210ccd77c</stEvt:instanceID>
                  <stEvt:when>2016-07-30T00:22:26+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:814ff3a6-1814-2b41-80d0-86dac647142e</stEvt:instanceID>
                  <stEvt:when>2016-07-31T22:47:14+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>900.000000</stDim:w>
            <stDim:h>480.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -480 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 480 li
900 480 li
900 0 li
cp
clp
0 295.282 mo
0 295.282 li
0 0 li
900 0 li
0 0 li
0 49.4474 li
132.987 49.4474 li
142.974 52.0455 153.449 53.3106 163.646 54.2552 cv
164.655 54.3487 165.665 54.4387 166.675 54.5262 cv
0 54.5262 li
0 64.099 li
222.132 64.099 li
227.211 65.6329 232.303 66.8991 237.464 67.1904 cv
238.482 67.2478 239.512 67.2758 240.548 67.2758 cv
247.352 67.2759 254.501 66.0724 261.411 64.099 cv
900 64.099 li
900 71.193 li
0 71.193 li
0 74.5041 li
579.582 74.5041 li
549.737 83.7944 518.831 78.4685 489.012 83.9905 cv
493.54 89.8395 498.768 93.8527 504.501 96.5388 cv
437.734 96.7518 359.842 97.805 300.652 98.7626 cv
300.553 98.279 300.455 97.7941 300.357 97.3095 cv
300.358 97.3084 300.359 97.3072 300.359 97.3061 cv
300.308 97.052 300.255 96.801 300.203 96.5464 cv
300.203 96.5464 li
297.063 95.707 283.221 91.8103 276.209 91.8103 cv
276.084 91.8103 275.961 91.8115 275.841 91.8141 cv
267.48 92.0813 249.507 93.4761 245.228 96.5464 cv
245.014 97.6102 244.799 98.672 244.582 99.731 cv
221.825 100.149 207.99 100.435 207.99 100.435 cv
207.99 100.435 221.602 100.735 244.287 101.169 cv
242.757 108.585 241.16 115.872 239.484 123.047 cv
205.455 123.299 169.966 123.757 140.948 124.19 cv
135.94 123.003 131.005 122.276 126.736 122.276 cv
124.394 122.276 122.253 122.495 120.411 122.977 cv
118.673 123.475 116.901 124.027 115.06 124.595 cv
102.111 124.807 91.7851 124.99 85.3288 125.108 cv
81.296 124.447 76.1663 124.147 70.7311 124.147 cv
53.2226 124.147 32.5027 127.258 34.7259 131.446 cv
37.6738 137 68.1 135.779 84.7978 139.507 cv
88.1427 140.236 91.4788 140.941 94.8041 141.574 cv
100.765 142.86 106.227 143.372 111.509 143.372 cv
115.115 143.372 118.638 143.133 122.18 142.739 cv
125.126 142.01 128.69 141.746 132.542 141.746 cv
137.572 141.746 143.092 142.196 148.369 142.645 cv
153.646 143.094 158.679 143.543 162.733 143.543 cv
167.501 143.543 170.915 142.922 171.778 140.948 cv
173.402 137.24 162.075 130.732 148.997 126.462 cv
175.635 126.852 207.074 127.239 238.441 127.458 cv
236.723 134.621 234.925 141.665 233.04 148.58 cv
0 148.58 li
0 200.957 li
0 209.506 li
0 290.464 li
0 295.282 li
65.1703 80.9277 mo
61.6257 80.9277 59.6257 81.5485 60.128 83.1736 cv
62.3407 90.3334 104.533 103.245 127.447 104.534 cv
130.72 104.719 134.042 104.902 137.527 105.359 cv
145.718 105.75 153.573 107.877 160.397 111.786 cv
170.151 117.512 178.777 121.151 188.554 121.614 cv
190.037 121.763 191.514 121.84 192.975 121.84 cv
203.995 121.84 214.208 117.515 221.224 107.688 cv
221.312 106.607 219.475 104.213 218.47 104.085 cv
218.295 104.086 218.119 104.087 217.944 104.087 cv
193.834 104.087 172.339 96.4281 149.522 84.9972 cv
146.533 84.2278 143.574 83.8862 140.645 83.8862 cv
140.505 83.8862 140.366 83.8869 140.227 83.8885 cv
140.161 83.888 140.093 83.8878 140.027 83.8878 cv
133.994 83.8878 129.178 85.7085 124.82 86.5061 cv
122.298 86.9231 119.75 87.2257 117.176 87.4093 cv
116.7 87.4438 116.179 87.4603 115.616 87.4603 cv
110.005 87.4603 100.268 85.8271 90.4953 84.194 cv
80.7241 82.561 70.9176 80.9277 65.1703 80.9277 cv
856.352 209.506 mo
821.102 209.506 li
820.977 206.664 820.898 203.816 820.869 200.957 cv
857.538 200.957 li
857.173 203.814 856.777 206.664 856.352 209.506 cv
572.209 209.506 mo
535.301 209.506 li
534.875 206.665 534.477 203.815 534.111 200.957 cv
573.789 200.957 li
573.305 203.821 572.776 206.67 572.209 209.506 cv
456.46 209.506 mo
421.209 209.506 li
421.085 206.664 421.006 203.816 420.976 200.957 cv
439.635 200.957 li
445.295 203.055 451.084 204.789 456.963 206.043 cv
456.8 207.198 456.632 208.353 456.46 209.506 cv
334.152 209.506 mo
332.808 209.506 li
331.649 206.682 330.517 203.837 329.405 200.957 cv
334.397 200.957 li
334.363 203.817 334.28 206.667 334.152 209.506 cv
212.623 209.506 mo
163.888 209.506 li
162.387 206.662 160.996 203.813 159.714 200.957 cv
216.026 200.957 li
214.914 203.837 213.782 206.682 212.623 209.506 cv
457.612 201.222 mo
457.402 201.135 457.191 201.046 456.982 200.957 cv
457.646 200.957 li
457.635 201.045 457.624 201.133 457.612 201.222 cv
900 148.58 mo
785.405 148.58 li
766.518 145.735 747.633 140.716 728.746 140.716 cv
728.644 140.716 728.543 140.716 728.441 140.716 cv
728.418 140.716 728.394 140.716 728.371 140.716 cv
728.351 140.716 728.33 140.716 728.31 140.716 cv
728.267 140.716 728.226 140.716 728.183 140.717 cv
728.173 140.717 728.161 140.717 728.151 140.717 cv
728.1 140.717 728.046 140.717 727.995 140.717 cv
727.988 140.717 727.982 140.717 727.975 140.717 cv
727.92 140.718 727.863 140.718 727.808 140.718 cv
727.793 140.718 727.778 140.718 727.762 140.719 cv
705.134 140.858 682.509 145.777 659.881 148.58 cv
600.997 148.58 li
603.107 146.555 604.998 144.274 606.62 141.725 cv
606.62 140.725 604.62 138.725 603.62 138.725 cv
595.136 139.785 586.897 140.346 578.796 140.346 cv
563.981 140.347 549.617 138.473 534.981 134.354 cv
534.696 134.346 534.411 134.342 534.127 134.342 cv
531.316 134.342 528.524 134.71 525.739 135.377 cv
519.62 136.725 514.62 139.725 510.104 141.484 cv
507.523 142.441 504.914 143.259 502.282 143.92 cv
497.304 145.17 492.241 145.858 487.127 145.858 cv
478.719 145.858 470.169 143.999 461.62 139.725 cv
458.733 138.57 455.513 137.415 452.345 137.415 cv
450.025 137.415 447.734 138.034 445.62 139.725 cv
448.465 143.117 451.455 146.055 454.564 148.58 cv
312.391 148.58 li
310.517 141.706 308.732 134.716 307.024 127.597 cv
387.305 127.272 495.567 125.247 495.567 125.247 cv
495.567 125.247 388.884 123.191 305.91 122.889 cv
304.325 116.098 302.808 109.19 301.354 102.183 cv
365.34 103.235 452.015 104.371 527.808 104.371 cv
555.388 104.371 586.563 104.176 618.345 103.872 cv
619.086 103.957 619.825 104.029 620.565 104.087 cv
621.575 103.992 622.594 103.904 623.621 103.821 cv
732.946 102.738 847.621 100.435 847.621 100.435 cv
847.621 100.435 763.266 98.6904 668.64 97.5244 cv
675.715 95.1178 682.314 91.5813 688.012 86.2391 cv
678.087 80.9841 666.339 80.2775 654.226 80.2775 cv
651.999 80.2775 649.761 80.3014 647.517 80.3253 cv
645.276 80.3491 643.03 80.3729 640.791 80.3729 cv
633.99 80.3729 627.242 80.1533 620.798 79.0467 cv
617.624 78.6902 614.462 78.2486 611.302 77.7185 cv
608.143 77.1888 604.983 76.5703 601.818 75.8606 cv
599.953 75.4425 598.082 74.9916 596.198 74.5041 cv
900 74.5041 li
900 148.58 li
573.895 148.58 mo
504.709 148.58 li
506.536 147.781 508.311 146.897 510.055 145.971 cv
517.379 141.233 524.94 139.512 532.602 139.512 cv
546.294 139.512 560.31 145.005 573.895 148.58 cv
110.179 141.7 mo
102.097 141.7 94.3688 138.935 86.6275 136.895 cv
80.3305 135.236 72.6838 133.974 68.1108 128.873 cv
66.6978 127.297 68.6871 127.024 70.3981 127.024 cv
71.1667 127.024 71.879 127.079 72.2017 127.096 cv
76.0967 127.297 80.0123 128.082 83.8709 128.616 cv
90.3495 129.514 96.895 130.359 103.448 130.359 cv
104.91 130.359 106.373 130.317 107.835 130.224 cv
115.392 129.743 122.757 127.643 130.34 127.419 cv
130.641 127.41 130.945 127.406 131.247 127.406 cv
139.621 127.406 148.428 130.718 147.503 133 cv
145.528 137.871 136.089 136.982 131.978 137.427 cv
127.044 137.962 122.342 139.744 117.521 140.828 cv
115.596 141.261 113.653 141.582 111.668 141.668 cv
111.17 141.689 110.673 141.7 110.179 141.7 cv
99.4344 126.795 mo
98.2789 126.795 97.1056 126.762 95.9191 126.692 cv
93.056 126.373 90.161 125.917 87.2378 125.43 cv
92.7604 125.535 100.517 125.678 109.992 125.841 cv
106.794 126.44 103.211 126.795 99.4344 126.795 cv
185.83 117.955 mo
175.849 117.955 166.12 111.316 157.618 106.969 cv
151.97 104.082 146.503 102.784 140.912 102.276 cv
138.661 102.072 136.39 101.995 134.079 101.995 cv
130.745 101.995 127.328 102.154 123.768 102.315 cv
123.382 102.332 122.984 102.341 122.578 102.341 cv
110.517 102.341 89.717 94.8765 88.8763 91.4952 cv
88.6677 90.6561 89.5602 90.3378 91.0912 90.3378 cv
93.4937 90.3378 97.4689 91.1211 101.233 91.9044 cv
104.996 92.6878 108.548 93.4712 110.103 93.4712 cv
110.13 93.4712 110.156 93.471 110.182 93.4705 cv
120.411 93.2822 130.1 88.4319 140.269 88.4319 cv
142.075 88.4319 143.896 88.5847 145.738 88.9439 cv
157.429 91.2235 168.993 98.0636 179.243 103.863 cv
185.29 107.284 193.26 109.985 199.674 112.681 cv
199.674 112.681 199.674 112.681 199.674 112.681 cv
199.597 112.681 189.281 117.739 187.699 117.875 cv
187.075 117.929 186.451 117.954 185.83 117.955 cv
642.813 97.2244 mo
630.221 97.0875 617.563 96.9641 605.015 96.8596 cv
597.233 95.1787 589.464 93.5098 581.401 93.5098 cv
581.208 93.5098 581.018 93.5107 580.825 93.5126 cv
570.315 94.9378 553.784 96.0723 540.185 96.0723 cv
526.636 96.0724 515.997 94.9463 517.12 91.8598 cv
520.09 83.7031 547.827 82.6527 554.128 81.813 cv
563.824 80.5206 574.329 79.7158 585.03 79.7158 cv
607.24 79.7158 630.291 83.1828 648.689 92.9534 cv
649.895 93.5939 646.3 95.5894 642.813 97.2244 cv
900 54.5262 mo
284.02 54.5262 li
286.649 52.9761 289.191 51.2767 291.636 49.4474 cv
900 49.4474 li
900 54.5262 li
268.75 54.5262 mo
205.871 54.5262 li
203.192 53.8965 200.478 53.3758 197.715 53.0417 cv
187.901 52.9379 173.373 51.4718 160.233 49.4474 cv
266.85 49.4474 li
268.891 50.0915 270.143 50.696 270.421 51.2406 cv
270.924 52.2301 270.238 53.3648 268.75 54.5262 cv
false sop
/0 
[/DeviceRGB] /CSA add_res
level3{
gsave
clp
[-1.30785e-008 -291.304 -291.304 1.30785e-008 450 255.719 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.858824 .396078 .301961 ]
/C1 [.541176 .196078 .231373 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.541176 .196078 .231373 ]
/C1 [.243137 .133333 .2 ]
/N 1 
>>
]
/Bounds [.487685 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.30785e-008 -291.304 -291.304 1.30785e-008 450 255.719 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~gY1?6f[na+e^`0ue'cXkd*L%`cHXSWbK@uLaN2EA`l5m7_ns:,_8*h#^:h4m]=YYb\[],X[^NTN['R'D
Z*:I9Y-+n.XK/A$WMuhoVl$;eUna]ZTqS-OT:VXFS=H(;R[KP1Q^3r&Pa%ApP*(lgO,o<\NJrdRMM[1G
Lkgb?KnY25K7\]+JUi9#IXZ]nI!g9eH?jd\GB\4RF`heIF)l;@E,]`6DJj<-Chmg$C2%?pB4kgfARo=]
@q&kT?sm>K?<piA>[(B8=]nj/=&r@%<E)pr;Gp@h:esk^:/+GV91qlL8P)HC7n,s:6psC06:*t'5X.Is
~>
<~ARo=]@q&nV@:<PO?sd8I?=$oC>[1N<>?Y35=]nj/='&I(<`N."<)cdp;c6Lj;,C(c:JX_\:/+GV9MA)P
8kM]I8OuBB7n6$<77BX56pj=/6:*t(5sR\"5<h=q4Ztni4?GVc3]]8]3&ilV2`<QP2)R3I1G^gB1,1L<
0ekC;0ek@90JG170JG.50/"t30/"q1/hSb//hS_-/M/P+/M/M)/1`>'/1`>&.k<,#.k<,".Olnt.Olns
.4H\p.4H\o-n$Jl-n$Jk-RU8h-RU8h-71&d-71&d,pai`,pai`,U=W\,U=W\,9nEX,9nEX+sJ3T+sJ3T
~>
<~9h\5S9MA,Q91qoN91qlL8kM]J8kDTG8P)KF84Z9B84Z9A7n6'>7n6$<7Rfj:7R]a777BX66psF26psF1
6UO4.6UO1,6:+"*6:!n'5s[e&5X7S"5X7S!5<h@s5<h=q5!D.o5!;%l4Ztqj4?P_g4?P\e4$,Mc4$#D`
3]];_3]];_3]];_3]]8]3B9)[3B9)[3B9)[3B9&Y3&ilW3&ilW3&ilW3&ilV2`EZS2`EZS2`EZS2`EZR
2E!HO2E!HO2E!HO2E!HN2)R6K2)R6K2)R6K2)R6K1c.$G1c.$G1c.$G1c.$G1G^gC1G^gC1G^gC1G^gC
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
844.029 267.946 mo
842.633 265.089 841.263 262.228 839.919 259.363 cv
839.926 259.381 839.933 259.399 839.94 259.417 cv
832.826 244.25 826.481 228.963 821.305 213.481 cv
821.228 212.158 821.16 210.832 821.102 209.506 cv
856.352 209.506 li
856.102 211.179 855.843 212.848 855.574 214.515 cv
852.641 232.672 848.605 250.436 844.029 267.946 cv
201.623 233.915 mo
201.511 233.299 201.4 232.683 201.291 232.067 cv
201.014 230.493 200.747 228.915 200.49 227.335 cv
200.309 226.22 200.29 223.986 199.482 223.568 cv
195.236 221.366 190.961 219.242 186.581 217.572 cv
182.418 215.984 178.079 214.692 173.73 214.692 cv
173.511 214.692 173.291 214.695 173.071 214.702 cv
171.088 214.759 169.107 215 167.137 215.364 cv
166.003 213.415 164.918 211.459 163.888 209.506 cv
212.623 209.506 li
209.874 216.206 206.988 222.749 203.958 229.129 cv
203.189 230.733 202.41 232.33 201.623 233.915 cv
422.544 227.233 mo
421.929 221.358 421.47 215.447 421.209 209.506 cv
456.46 209.506 li
456.21 211.179 455.951 212.848 455.681 214.515 cv
455.088 218.19 454.449 221.847 453.77 225.49 cv
443.312 226.073 432.91 226.757 422.544 227.233 cv
540.417 226.966 mo
539.697 226.935 538.975 226.902 538.256 226.868 cv
537.165 221.115 536.173 215.328 535.301 209.506 cv
572.209 209.506 li
571.853 211.281 571.483 213.05 571.099 214.814 cv
567.713 215.098 564.341 215.858 561.029 216.8 cv
556.918 217.971 552.849 219.469 548.877 221.319 cv
547.24 222.081 545.618 222.905 544.029 223.835 cv
542.997 224.44 541.628 225.89 540.55 226.132 cv
540.506 226.41 540.462 226.688 540.417 226.966 cv
334.006 212.395 mo
333.605 211.437 333.203 210.47 332.808 209.506 cv
334.152 209.506 li
334.108 210.469 334.06 211.435 334.006 212.395 cv
level3{
gsave
clp
[-1.30785e-008 -291.304 -291.304 1.30785e-008 450 255.719 ]ct
/1 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~l&99>MJ).0B'5"_k(mX3L1]M#AE8DSj+Lt&Jn*bjA)VrJi-o1nI:D&]@buH@gj3A`H!oBN@,#m5flg`U
FC3[A?e9=)eoG*JE*h(5?IWgsdqi:<Cg>D(>L@.hctHY1Am<Sm>0^\_c"(#%@T^f^=Nb&Rb$S8m?<>3R
=3+TI``cE_>#rUE<lJ-@_cBaS<E-h8<5DL3^f"+H:fG,);nc"(]hVG<9MrGq:qK:q\k#Z/85Qie:Uihh
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~\4'3&78LB\:UWYe[7!cs6r(*U::!8^Z9h<k6;F^M:9HlXX?fO[5tn4B9W(-LV*I_L5YRk89V=RCSj#f<
5"h>-9:7q9QT\!-4\M&%99MA0O?6$p4%YGn8W5]%M)n4a3_>)e8VK/rKK2SS3CnZZ8:EKgI5a]D2b83P
89Zs_FuDj52FhgF7r^@UD_st%1e2@<7qshMBJW+j1Ibq27V"8D@5:;[1.GS(7U7];>VJQK0LStq6rks/
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.487685 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.30785e-008 -291.304 -291.304 1.30785e-008 450 255.719 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~kih6okND!ijlPUbj5]1[io8qUi8EPOhr!;Ih;-oBgY:K;g=k96f\"j/f@SU)e^`4#eC;srdaHRldF$=f
cd0q`cHa\Zbfn8Rb0%lLaiVWFa2c6?`Pog8`5KU3_SX1,_83q&^V@Ou^:h4m]Y(nh]=PSa\[f8\\@8rU
[^NWQ[C*BKZa7!EZEga?Yck44XfSS'WMl_mVl$;dUS=HTTV%gHSXc.:R@'>,QBd`"PEM&iO,o<]NJrdP
LkphAL4t;6K7\W(IsuipI=-BfH$FOVG'.qLF)l8>Df0H0Chmd#BkV-lAn>L`@prbQ?X@#D>[1K:=BAO(
~>
<~Mi*@JLkpkCLPCM:KS4u1K7\Z*J:N,uI=6KjI!^0cH$OXYG'8%PF`_\GEcQ/>EH#i7DJa3+CMR^$C2%?p
B4b^dA7T4]@q&kT?sd5H?=$oC>[(B8=]nm0='&F'<E3!t<)Z[m;,C%a:/+GW9M8#N8OuBB7n6'=779O3
6psC06UO4.6UF()5s[e&5s[b$5X7S"5X7Ou5<h@s5<h=p4Ztqk4Ztqj4?P_g4?P\d3]];_3]];_3B9)[
3B9)[3&ilW3&ilV2E!HO2E!HO2Dm?L2)R6K1c$pD1G^gC1GU^@1,:U?1,:R=0ekC;0eb760/"t30/"q1
~>
<~AnGXeAS#FaAS#F`@q0"Y@q/tW@U`eU@U`bS@:<SP?XI/I?XI/I?=$rE?=$oC?!U`A?!LT<>?b<9>$>*5
>$>*5=]nm1=]ea,='&I)='&F'<`W7%<E3%!<E3$u;c?Un;c?Rl;GpCj;G^1d:f'ta:JXb^:JXb]:/4PZ
:/4PZ:/4MX9he>V9he>V9he>V9h\2Q91qoN91qoN91qoN91qoM8kM]J8kM]J8kM]J8kM]I84Z9B84Z9B
84Z9B84Z9B7n6'>7n6'>7n6'>7n6'>7n,s;7Rfj:7Rfj:7Rfj:7Rfg877BX677BX677BX6779L16UO4.
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
857.538 200.957 mo
820.869 200.957 li
820.847 198.843 820.853 196.725 820.888 194.601 cv
819.226 195.044 817.555 195.345 815.878 195.534 cv
813.014 184.909 810.759 174.174 809.242 163.318 cv
844.245 163.299 865.671 163.213 897.771 162.817 cv
895.329 162.909 892.89 163.265 890.475 163.759 cv
880.375 165.823 870.48 170.426 860.189 170.426 cv
859.743 180.664 858.831 190.854 857.538 200.957 cv
573.789 200.957 mo
534.111 200.957 li
533.783 198.399 533.479 195.835 533.202 193.263 cv
533.147 192.751 533.093 192.239 533.04 191.726 cv
541.167 189.307 549.4 187.05 557.635 184.305 cv
549.786 178.267 540.755 175.475 531.513 175.205 cv
531.411 173.669 531.391 172.486 531.559 172.372 cv
531.527 171.724 531.487 171.076 531.458 170.426 cv
530.863 170.426 530.268 170.403 529.674 170.358 cv
528.479 170.269 527.288 170.095 526.104 169.86 cv
523.495 169.342 520.923 168.533 518.37 167.652 cv
513.449 165.955 508.554 163.945 503.496 163.13 cv
502.036 162.894 500.57 162.791 499.105 162.791 cv
496.254 162.791 493.403 163.183 490.583 163.759 cv
480.482 165.823 470.588 170.426 460.297 170.426 cv
460.021 176.766 459.566 183.087 458.952 189.381 cv
448.017 187.515 437.001 184.712 425.841 184.712 cv
420.794 184.712 415.719 185.284 410.605 186.776 cv
419.695 192.23 429.454 197.182 439.635 200.957 cv
420.976 200.957 li
420.955 198.843 420.961 196.725 420.995 194.601 cv
417.708 195.477 414.383 195.798 411.052 195.799 cv
407.368 195.799 403.676 195.405 400.014 194.931 cv
394.052 194.16 388.146 193.393 382.182 193.393 cv
380.788 193.393 379.392 193.435 377.99 193.528 cv
368.069 194.19 358.067 196.25 348.113 196.25 cv
343.556 196.25 339.011 195.819 334.485 194.624 cv
334.496 194.633 334.499 194.637 334.493 194.637 cv
334.483 194.637 334.448 194.625 334.389 194.601 cv
334.42 196.727 334.422 198.844 334.397 200.957 cv
329.405 200.957 li
323.017 184.41 317.394 166.933 312.391 148.58 cv
454.564 148.58 li
466.442 158.228 480.075 161.857 494.146 161.857 cv
499.951 161.857 505.828 161.24 511.69 160.172 cv
515.094 159.575 518.541 158.921 522.137 158.48 cv
526.241 157.631 530.231 157.193 534.049 157.193 cv
538.125 157.193 542.006 157.692 545.62 158.725 cv
547.992 159.437 550.308 160.036 552.595 160.509 cv
534.889 160.758 524.059 160.929 524.059 160.929 cv
524.059 160.929 537.253 161.142 558.442 161.442 cv
560.388 161.655 562.328 161.765 564.28 161.765 cv
565.713 161.765 567.151 161.706 568.603 161.583 cv
586.209 161.825 607.863 162.104 631.38 162.367 cv
629.925 173.091 627.751 183.684 624.975 194.181 cv
624.719 194.069 624.462 193.958 624.205 193.849 cv
619.733 191.941 615.147 190.292 610.472 189.632 cv
609.139 189.444 607.794 189.357 606.444 189.357 cv
599.525 189.357 592.46 191.632 585.922 194.156 cv
583.548 195.072 581.194 196.092 578.886 197.279 cv
577.917 197.778 576.955 198.307 576.01 198.885 cv
575.387 199.266 574.562 200.133 573.904 200.274 cv
573.866 200.502 573.828 200.729 573.789 200.957 cv
457.646 200.957 mo
456.982 200.957 li
452.779 199.161 448.807 196.894 445.2 194.19 cv
449.602 194.434 454.003 194.63 458.395 194.711 cv
458.162 196.796 457.912 198.878 457.646 200.957 cv
216.026 200.957 mo
159.714 200.957 li
159.425 200.314 159.142 199.671 158.865 199.028 cv
158.875 199.025 158.889 199.022 158.899 199.019 cv
158.642 198.436 158.37 197.853 158.121 197.269 cv
158.121 197.269 li
158.121 197.269 li
145.503 194.875 129.29 191.867 113.623 190.246 cv
112.542 189.994 111.456 189.786 110.365 189.632 cv
109.031 189.444 107.686 189.357 106.337 189.357 cv
105.57 189.357 104.802 189.385 104.033 189.438 cv
100.425 189.21 96.8947 189.083 93.4979 189.083 cv
93.0251 189.083 92.5568 189.086 92.0892 189.091 cv
92.0674 189.091 92.0442 189.091 92.0225 189.091 cv
92.0225 189.091 li
74.7716 189.274 51.3453 191.902 33.28 194.948 cv
33.2171 194.387 33.1552 193.825 33.0947 193.263 cv
32.7225 189.807 32.3969 186.342 32.1216 182.869 cv
32.0364 181.796 30.9689 172.699 31.4513 172.372 cv
31.4193 171.724 31.3792 171.076 31.351 170.426 cv
30.7558 170.426 30.1605 170.403 29.5662 170.358 cv
28.3714 170.269 27.1804 170.095 25.9964 169.86 cv
23.3876 169.342 20.8158 168.533 18.2624 167.652 cv
13.3417 165.955 8.44648 163.945 3.38882 163.13 cv
2.26117 162.948 1.13103 162.848 0 162.811 cv
0 200.957 li
0 148.58 li
233.04 148.58 li
228.037 166.933 222.414 184.41 216.026 200.957 cv
0 159.296 mo
0 162.79 li
27.5605 162.443 63.1405 161.871 121.393 160.929 cv
121.393 160.929 67.3105 159.997 0 159.296 cv
900 162.811 mo
899.803 162.804 899.606 162.8 899.409 162.797 cv
899.607 162.795 899.802 162.792 900 162.79 cv
900 162.811 li
494.774 160.553 mo
486.803 160.554 479.065 158.17 472.62 151.725 cv
474.6 150.876 476.58 150.588 478.583 150.588 cv
480.71 150.588 482.863 150.913 485.068 151.239 cv
487.274 151.564 489.532 151.89 491.87 151.89 cv
492.775 151.89 493.69 151.841 494.62 151.725 cv
497.454 151.225 500.12 150.419 502.675 149.422 cv
503.361 149.154 504.038 148.873 504.709 148.58 cv
573.895 148.58 li
577.165 149.44 580.411 150.19 583.62 150.725 cv
578.691 156.412 572.753 158.219 566.392 158.219 cv
555.976 158.219 544.42 153.38 534.268 152.814 cv
533.521 152.777 532.773 152.759 532.027 152.759 cv
529.98 152.759 527.936 152.896 525.898 153.15 cv
523.016 153.92 520.034 154.809 517.057 155.808 cv
514.08 156.807 511.064 157.838 507.998 158.66 cv
503.637 159.828 499.17 160.553 494.774 160.553 cv
577.726 160.166 mo
586.542 158.344 594.734 154.591 600.997 148.58 cv
659.881 148.58 li
650.882 149.694 641.88 150.474 632.881 150.485 cv
632.884 150.487 632.887 150.488 632.89 150.489 cv
632.822 150.489 632.754 150.489 632.686 150.489 cv
632.433 153.505 632.12 156.511 631.75 159.507 cv
612.079 159.726 593.611 159.957 577.726 160.166 cv
900 159.296 mo
870.915 158.993 839.362 158.733 808.632 158.61 cv
808.408 156.736 808.208 154.866 808.029 152.984 cv
808.036 152.982 808.046 152.978 808.053 152.976 cv
807.974 152.146 807.876 151.32 807.806 150.489 cv
807.806 150.489 li
800.339 150.489 792.872 149.704 785.405 148.58 cv
900 148.58 li
900 159.296 li
level3{
gsave
clp
[-1.30785e-008 -291.304 -291.304 1.30785e-008 450 255.719 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.30785e-008 -291.304 -291.304 1.30785e-008 450 255.719 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
900 49.4474 mo
291.636 49.4474 li
293.718 47.8897 295.729 46.2379 297.666 44.5037 cv
300.03 42.3866 286.23 37.9229 271.392 37.9229 cv
268.599 37.9229 265.772 38.0808 263.005 38.4425 cv
259.797 38.862 256.596 39.0396 253.403 39.0396 cv
244.604 39.0398 235.855 37.6916 227.1 36.3436 cv
218.345 34.9956 209.583 33.6475 200.761 33.6475 cv
200.199 33.6475 199.637 33.653 199.075 33.6643 cv
198.588 33.6742 198.1 33.6881 197.613 33.7068 cv
195.485 33.7885 193.351 33.826 191.212 33.826 cv
179.421 33.8261 167.484 32.6875 155.543 31.5489 cv
143.603 30.4105 131.656 29.2719 119.848 29.2719 cv
112.708 29.2719 105.621 29.6878 98.612 30.7718 cv
108.201 40.604 120.194 46.1194 132.987 49.4474 cv
0 49.4474 li
0 0 li
900 0 li
900 49.4474 li
266.85 49.4474 mo
160.233 49.4474 li
143.086 46.8055 128.305 43.2129 129.463 40.4575 cv
130.855 36.6104 139.318 35.6188 148.209 35.6188 cv
156.829 35.6188 165.85 36.5502 169.229 36.7147 cv
197.616 38.24 252.302 44.8569 266.85 49.4474 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 480 ]ct
[900.96 0 0 50.88 -.480011 429.6 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 1877 
/H 106 
/M[1877 0 0 -106 0 106 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 1877 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 1877 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 1877 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
Jj+cMJj+cMJj+cMJj+cMJj+cMJj+cMJj+cMSj)6UJfK@^JfK@^JfK@^JfK@^JfK@^JfK@^JfK@^\f?;M
Jgc4!Jgc4!Jgc4!Jgc4!Jgc4!Jgc4!Jgd3=jZ\8[Jj+cMJj+cMJj+cMJj+cMJj+cMJj+cMJj-b0JfK@^
JfK@^JfK@^JfK@^JfK@^JfK@^JfK@^SfHi?Jgc4!Jgc4!Jgc4!Jgc4!Jgc4!Jgc4!Jgc4!\gW.oJj+cM
Jj+cMJj+cMJj+cMJj+cMJj+cMJj,bijW&jlJfK@^JfK@^JfK@^JfK@^JfK@^JfK@^JfM?AJgc4!Jgc4!
Jgc4!Jgc4!Jgc4!Jgc4!Jgc4!Sg`\bJj4iOJj4iOJj4iOJj4iOJj4iOJj4iOJj4iO\j(cdJfK@^JfK@^
JfK@^JfK@^JfK@^JfK@^JfL@%jX>^/Jgc4!Jgc4!Jgc4!Jgc4!Jgc4!Jgc4!Jge2YJj4iOJj4iOJj4iO
Jj4iOJj4iOJj4iOJj4iOSj2<VJfK@^JfK@^JfK@^JfK@^JfK@^JfK@^JfK@^\f?;MJgc4!Jgc4!Jgc4!
Jgc4!Jgc4!Jgc4!Jgd3=jZe>]Jj4iOJj4iOJj4iOJj4iOJj4iOJj4iOJj6h2JfK@^JfK@^JfK@^JfK@^
JfK@^JfK@^JfK@^SfHi?Jgc4!Jgc4!Jgc4!Jgc4!Jgc4!Jgc4!Jgc4!\gW.pJj4iOJj4iOJj4iOJj4iO
Jj4iOJj4iOJj5hkjW&jlJfK@^JfK@^JfK@^JfK@^JfK@^JfK@^JfM?AJgc4!Jgc4!Jgc4!Jgc4!Jgc4!
Jgc4!Jgc4!Sg`\bJj4iOJj4iOJj4iOJj4iOJj4iOJj4iOJj4iO\j(cdJfK@^JfK@^JfK@^JfK@^JfK@^
JfK@^JfL@%jX>^/Jgc4!Jgc4!Jgc4!Jgc4!Jgc4!Jgc4!Jge2YJj4iOJj4iOJj4iOJj4iOJj4iOJj4iO
Jj4iOSj2<VJfK@^JfK@^JfK@^JfK@^JfK@^JfK@^JfK@^\f?;MJgc4!Jgc4!Jgc4!Jgc4!Jgc4!Jgc4!
Jgd3=jZe>]Jj4iOJj4iOJj4iOJj4iOJj4iOJj4iOJj6h2JfK@^JfK@^JfK@^JfK@^JfK@^JfK@^JfK@^
SfHi?Jgc4!Jgc4!Jgc4!Jgc4!Jgc4!Jgc4!Jgc4!\gW.pJj4iOJj4iOJj4iOJj4iOJj4iOJj4iOJj5hk
jW&jlJfK@^JfK@^JfK@^JfK@^JfK@^JfK@^JfM?AJgc4!Jgc4!Jgc4!Jgc4!Jgc4!Jgc4!Jgc4!Sg`\c
Jj=oQJj=oQJj=oQJj=oQJj=oQJj=oQJj=oQ\j1ieJfK@^JfK@^JfK@^JfK@^JfK@^JfK@^JfL@%jX>^/
Jgc4!Jgc4!Jgc4!Jgc4!Jgc4!Jgc4!Jge2YJj=oQJj=oQJj=oQJj=oQJj=oQJj=oQJj=oQSj;BWJfK@^
JfK@^JfK@^JfK@^JfK@^JfK@^JfK@^\f?;MJgc4!Jgc4!Jgc4!Jgc4!Jgc4!Jgc4!Jgd3=jZnD_Jj=oQ
Jj=oQJj=oQJj=oQJj=oQJj=oQJj?n4JfK@^JfK@^JfK@^JfK@^JfK@^JfK@^JfK@^SfHi?Jgc4!Jgc4!
Jgc4!Jgc4!Jgc4!Jgc4!Jgc4!\gW.qJj=oQJj=oQJj=oQJj=oQJj=oQJj=oQJj>nmjW&jlJfK@^JfK@^
JfK@^JfK@^JfK@^JfK@^JfM?AJgc4!Jgc4!Jgc4!Jgc4!Jgc4!Jgc4!Jgc4!Sg`\dJjFuSJjFuSJjFuS
JjFuSJjFuSJjFuSJjFuS\j:ogJfTF`JfTF`JfTF`JfTF`JfTF`JfTF`JfUF'jX>^/Jgc4!Jgc4!Jgc4!
Jgc4!Jgc4!Jgc4!Jge2YJjFuSJjFuSJjFuSJjFuSJjFuSJjFuSJjFuSSjDHYJfTF`JfTF`JfTF`JfTF`
JfTF`JfTF`JfTF`\fHANJgc4!Jgc4!Jgc4!Jgc4!Jgc4!Jgc4!Jgd3=j["JaJjFuSJjFuSJjFuSJjFuS
JjFuSJjFuSJjHt6JfTF`JfTF`JfTF`JfTF`JfTF`JfTF`JfTF`SfQo@Jgc4!Jgc4!Jgc4!Jgc4!Jgc4!
Jgc4!Jgc4!\gW.rJjFuSJjFuSJjFuSJjFuSJjFuSJjFuSJjGtojW/pnJfTF`JfTF`JfTF`JfTF`JfTF`
JfTF`JfVECJgc4!Jgc4!Jgc4!Jgc4!Jgc4!Jgc4!Jgc4!Sg`\dJjFuSJjFuSJjFuSJjFuSJjFuSJjFuS
JjFuS\j:ogJfTF`JfTF`JfTF`JfTF`JfTF`JfTF`JfUF'jX>^/Jgc4!Jgc4!Jgc4!Jgc4!Jgc4!Jgc4!
Jge2YJjP&UJjP&UJjP&UJjP&UJjP&UJjP&UJjP&USjMNZJfTF`JfTF`JfTF`JfTF`JfTF`JfTF`JfTF`
\fHANJgc4!Jgc4!Jgc4!Jgc4!Jgc4!Jgc4!Jgd3=j[+PcJjP&UJjP&UJjP&UJjP&UJjP&UJjP&UJjR%8
JfTF`JfTF`JfTF`JfTF`JfTF`JfTF`JfTF`SfQo@Jgc4!Jgc4!Jgc4!Jgc4!Jgc4!Jgc4!Jgc4!\gW.s
JjP&UJjP&UJjP&UJjP&UJjP&UJjP&UJjQ%qjW/pnJfTF`JfTF`JfTF`JfTF`JfTF`JfTF`JfVECJgc4!
Jgc4!Jgc4!Jgc4!Jgc4!Jgc4!Jgc4!Sg`\eJjP&UJjP&UJjP&UJjP&UJjP&UJjP&UJjP&U\jCuhJfTF`
JfTF`JfTF`JfTF`JfTF`JfTF`JfUF'jX>^/Jgc4!Jgc4!Jgc4!Jgc4!Jgc4!Jgc4!Jge2YJjP&UJjP&U
JjP&UJjP&UJjP&UJjP&UJjP&USjMNZJfTF`JfTF`JfTF`JfTF`JfTF`JfTF`JfTF`\fHAOJgl:#Jgl:#
Jgl:#Jgl:#Jgl:#Jgl:#Jgm9?j[+PcJjP&UJjP&UJjP&UJjP&UJjP&UJjP&UJjR%8JfTF`JfTF`JfTF`
JfTF`JfTF`JfTF`JfTF`SfQoAJgl:#Jgl:#Jgl:#Jgl:#Jgl:#Jgl:#Jgl:#\g`4tJjP&UJjP&UJjP&U
JjP&UJjP&UJjP&UJjQ%qjW/pnJfTF`JfTF`JfTF`JfTF`JfTF`JfTF`JfVECJgl:#Jgl:#Jgl:#Jgl:#
Jgl:#Jgl:#Jgl:#SgibgJjY,WJjY,WJjY,WJjY,WJjY,WJjY,WJjY,W\jM&iJfTF`JfTF`JfTF`JfTF`
JfTF`JfTF`JfUF'jXGd1Jgl:#Jgl:#Jgl:#Jgl:#Jgl:#Jgl:#Jgn8[JjY,WJjY,WJjY,WJjY,WJjY,W
JjY,WJjY,WSjVT[JfTF`JfTF`JfTF`JfTF`JfTF`JfTF`JfTF`\fHAOJgl:#Jgl:#Jgl:#Jgl:#Jgl:#
Jgl:#Jgm9?j[4VeJjY,WJjY,WJjY,WJjY,WJjY,WJjY,WJj[+:JfTF`JfTF`JfTF`JfTF`JfTF`JfTF`
JfTF`SfQoAJgl:#Jgl:#Jgl:#Jgl:#Jgl:#Jgl:#Jgl:#\g`4uJjY,WJjY,WJjY,WJjY,WJjY,WJjY,W
JjZ+sjW/pnJfTF`JfTF`JfTF`JfTF`JfTF`JfTF`JfVECJgl:#Jgl:#Jgl:#Jgl:#Jgl:#Jgl:#Jgl:#
SgibhJjb2YJjb2YJjb2YJjb2YJjb2YJjb2YJjb2Y\jV,jJfTF`JfTF`JfTF`JfTF`JfTF`JfTF`JfUF'
jXGd1Jgl:#Jgl:#Jgl:#Jgl:#Jgl:#Jgl:#Jgn8[Jjb2YJjb2YJjb2YJjb2YJjb2YJjb2YJjb2YSj_Z\
JfTF`JfTF`JfTF`JfTF`JfTF`JfTF`JfTF`\fHAOJgl:#Jgl:#Jgl:#Jgl:#Jgl:#Jgl:#Jgm9?j[=\g
Jjb2YJjb2YJjb2YJjb2YJjb2YJjb2YJjd1<JfTF`JfTF`JfTF`JfTF`JfTF`JfTF`JfTF`SfQoAJgl:#
Jgl:#Jgl:#Jgl:#Jgl:#Jgl:#Jgl:#\g`5!Jjb2YJjb2YJjb2YJjb2YJjb2YJjb2YJjc1ujW/pnJfTF`
JfTF`JfTF`JfTF`JfTF`JfTF`JfVECJgl:#Jgl:#Jgl:#Jgl:#Jgl:#Jgl:#Jgl:#SgibhJjb2YJjb2Y
Jjb2YJjb2YJjb2YJjb2YJjb2Y\jV,kJf]LbJf]LbJf]LbJf]LbJf]LbJf]LbJf^L)jXGd1Jgl:#Jgl:#
Jgl:#Jgl:#Jgl:#Jgl:#Jgn8[Jjk8[Jjk8[Jjk8[Jjk8[Jjk8[Jjk8[Jjk8[Sjh`^Jf]LbJf]LbJf]Lb
Jf]LbJf]LbJf]LbJf]Lb\fQGPJgl:#Jgl:#Jgl:#Jgl:#Jgl:#Jgl:#Jgm9?j[FbiJjk8[Jjk8[Jjk8[
Jjk8[Jjk8[Jjk8[Jjm7>Jf]LbJf]LbJf]LbJf]LbJf]LbJf]LbJf]LbSfZuBJgl:#Jgl:#Jgl:#Jgl:#
Jgl:#Jgl:#Jgl:#\g`5"Jjk8[Jjk8[Jjk8[Jjk8[Jjk8[Jjk8[Jjl8"jW9!pJf]LbJf]LbJf]LbJf]Lb
Jf]LbJf]LbJf_KEJgl:#Jgl:#Jgl:#Jgl:#Jgl:#Jgl:#Jgl:#SgibjJjt>]Jjt>]Jjt>]Jjt>]Jjt>]
Jjt>]Jjt>]\jh8mJf]LbJf]LbJf]LbJf]LbJf]LbJf]LbJf^L)jXGd1Jgl:#Jgl:#Jgl:#Jgl:#Jgl:#
Jgl:#Jgn8[Jjt>]Jjt>]Jjt>]Jjt>]Jjt>]Jjt>]Jjt>]Sjqf_Jf]LbJf]LbJf]LbJf]LbJf]LbJf]Lb
Jf]Lb\fQGPJgl:#Jgl:#Jgl:#Jgl:#Jgl:#Jgl:#Jgm9?j[OhkJjt>]Jjt>]Jjt>]Jjt>]Jjt>]Jjt>]
Jk!=@Jf]LbJf]LbJf]LbJf]LbJf]LbJf]LbJf]LbSfZuBJgl:#Jgl:#Jgl:#Jgl:#Jgl:#Jgl:#Jgl:#
\g`5#Jjt>]Jjt>]Jjt>]Jjt>]Jjt>]Jjt>]Jju>$jW9!pJf]LbJf]LbJf]LbJf]LbJf]LbJf]LbJf_KE
Jgl:#Jgl:#Jgl:#Jgl:#Jgl:#Jgl:#Jgl:#SgibjJjt>]Jjt>]Jjt>]Jjt>]Jjt>]Jjt>]Jjt>]\jh8m
Jf]LbJf]LbJf]LbJf]LbJf]LbJf]LbJf^L)jXGd1Jgl:#Jgl:#Jgl:#Jgl:#Jgl:#Jgl:#Jgn8[Jk(D_
Jk(D_Jk(D_Jk(D_Jk(D_Jk(D_Jk(D_Sk%l`Jf]LbJf]LbJf]LbJf]LbJf]LbJf]LbJf]Lb\fQGPJgl:#
Jgl:#Jgl:#Jgl:#Jgl:#Jgl:#Jgm9?j[XnmJk(D_Jk(D_Jk(D_Jk(D_Jk(D_Jk(D_Jk*CBJf]LbJf]Lb
Jf]LbJf]LbJf]LbJf]LbJf]LbSfZuBJgl:#Jgl:#Jgl:#Jgl:#Jgl:#Jgl:#Jgl:#\g`5$Jk(D_Jk(D_
Jk(D_Jk(D_Jk(D_Jk(D_Jk)D&jW9!pJf]LbJf]LbJf]LbJf]LbJf]LbJf]LbJf_KEJgl:#Jgl:#Jgl:#
Jgl:#Jgl:#Jgl:#Jgl:#SgibkJk(D_Jk(D_Jk(D_Jk(D_Jk(D_Jk(D_Jk(D_\jq>nJf]LbJf]LbJf]Lb
Jf]LbJf]LbJf]LbJf^L)jXGd1Jgl:#Jgl:#Jgl:#Jgl:#Jgl:#Jgl:#Jgn8[Jk(D_Jk(D_Jk(D_Jk(D_
Jk(D_Jk(D_Jk(D_Sk%l`Jf]LbJf]LbJf]LbJf]LbJf]LbJf]LbJf]Lb\fQGPJgl:#Jgl:#Jgl:#Jgl:#
Jgl:#Jgl:#Jgm9?j[atoJk1JaJk1JaJk1JaJk1JaJk1JaJk1JaJk3IDJf]LbJf]LbJf]LbJf]LbJf]Lb
Jf]LbJf]LbSfZuBJgl:#Jgl:#Jgl:#Jgl:#Jgl:#Jgl:#Jgl:#\g`5%Jk1JaJk1JaJk1JaJk1JaJk1Ja
Jk1JaJk2J(jW9!pJf]LbJf]LbJf]LbJf]LbJf]LbJf]LbJf_KEJgl:#Jgl:#Jgl:#Jgl:#Jgl:#Jgl:#
Jgl:#SgiblJk1JaJk1JaJk1JaJk1JaJk1JaJk1JaJk1Ja\k%DoJf]LbJf]LbJf]LbJf]LbJf]LbJf]Lb
Jf^L)jXGd1Jgl:#Jgl:#Jgl:#Jgl:#Jgl:#Jgl:#Jgn8[Jk:PcJk:PcJk:PcJk:PcJk:PcJk:PcJk:Pc
Sk8#bJf]LbJf]LbJf]LbJf]LbJf]LbJf]LbJf]Lb\fQGPJgl:#Jgl:#Jgl:#Jgl:#Jgl:#Jgl:#Jgm9?
j[k%qJk:PcJk:PcJk:PcJk:PcJk:PcJk:PcJk<OFJf]LbJf]LbJf]LbJf]LbJf]LbJf]LbJf]LbSfZuB
Jgl:#Jgl:#Jgl:#Jgl:#Jgl:#Jgl:#Jgl:#\g`5&Jk:PcJk:PcJk:PcJk:PcJk:PcJk:PcJk;P*jW9!p
Jf]LbJf]LbJf]LbJf]LbJf]LbJf]LbJf_KEJgl:#Jgl:#Jgl:#Jgl:#Jgl:#Jgl:#Jgl:#SgibmJk:Pc
Jk:PcJk:PcJk:PcJk:PcJk:PcJk:Pc\k.JpJf]LbJf]LbJf]LbJf]LbJf]LbJf]LbJf^L)jXGd1Jgl:#
Jgl:#Jgl:#Jgl:#Jgl:#Jgl:#Jgn8[Jk:PcJk:PcJk:PcJk:PcJk:PcJk:PcJk:PcSk8#bJf]LbJf]Lb
Jf]LbJf]LbJf]LbJf]LbJf]Lb\fQGPJgl:#Jgl:#Jgl:#Jgl:#Jgl:#Jgl:#Jgm9?j[t+sJkCVeJkCVe
JkCVeJkCVeJkCVeJkCVeJkEUHJf]LbJf]LbJf]LbJf]LbJf]LbJf]LbJf]LbSfZuBJgl:#Jgl:#Jgl:#
Jgl:#Jgl:#Jgl:#Jgl:#\g`5'JkCVeJkCVeJkCVeJkCVeJkCVeJkCVeJkDV,jW9!pJf]LbJf]LbJf]Lb
Jf]LbJf]LbJf]LbJf_KEJgl:#Jgl:#Jgl:#Jgl:#Jgl:#Jgl:#Jgl:#SgibnJkCVeJkCVeJkCVeJkCVe
JkCVeJkCVeJkCVe\k7PqJf]LbJf]LbJf]LbJf]LbJf]LbJf]LbJf^L)jXGd1Jgl:#Jgl:#Jgl:#Jgl:#
Jgl:#Jgl:#Jgn8[JkL\gJkL\gJkL\gJkL\gJkL\gJkL\gJkL\gSkJ/dJf]LbJf]LbJf]LbJf]LbJf]Lb
Jf]LbJf]Lb\fQGPJgl:#Jgl:#Jgl:#Jgl:#Jgl:#Jgl:#Jgm9?j\(1uJkL\gJkL\gJkL\gJkL\gJkL\g
JkL\gJkN[JJf]LbJf]LbJf]LbJf]LbJf]LbJf]LbJf]LbSfZuBJgl:#Jgl:#Jgl:#Jgl:#Jgl:#Jgl:#
Jgl:#\g`5(JkL\gJkL\gJkL\gJkL\gJkL\gJkL\gJkM\.jW9!pJf]LbJf]LbJf]LbJf]LbJf]LbJf]Lb
Jf_KEJgl:#Jgl:#Jgl:#Jgl:#Jgl:#Jgl:#Jgl:#SgiboJkL\gJkL\gJkL\gJkL\gJkL\gJkL\gJkL\g
\k@VrJf]LbJf]LbJf]LbJf]LbJf]LbJf]LbJf^L)jXGd1Jgl:#Jgl:#Jgl:#Jgl:#Jgl:#Jgl:#Jgn8[
JkL\gJkL\gJkL\gJkL\gJkL\gJkL\gJkL\gSkJ/dJf]LbJf]LbJf]LbJf]LbJf]LbJf]LbJf]Lb\fQGQ
Jgu@%Jgu@%Jgu@%Jgu@%Jgu@%Jgu@%Jh!?Aj\18"JkUbiJkUbiJkUbiJkUbiJkUbiJkUbiJkWaLJf]Lb
Jf]LbJf]LbJf]LbJf]LbJf]LbJf]LbSfZuCJgu@%Jgu@%Jgu@%Jgu@%Jgu@%Jgu@%Jgu@%\gi;*JkUbi
JkUbiJkUbiJkUbiJkUbiJkUbiJkVb0jWB'rJffRdJffRdJffRdJffRdJffRdJffRdJfhQGJgu@%Jgu@%
Jgu@%Jgu@%Jgu@%Jgu@%Jgu@%SgrhqJkUbiJkUbiJkUbiJkUbiJkUbiJkUbiJkUbi\kI\tJffRdJffRd
JffRdJffRdJffRdJffRdJfgR+jXPj3Jgu@%Jgu@%Jgu@%Jgu@%Jgu@%Jgu@%Jh">]Jk^hkJk^hkJk^hk
Jk^hkJk^hkJk^hkJk^hkSk\;gJffRdJffRdJffRdJffRdJffRdJffRdJffRd\fZMRJgu@%Jgu@%Jgu@%
Jgu@%Jgu@%Jgu@%Jh!?Aj\:>$Jk^hkJk^hkJk^hkJk^hkJk^hkJk^hkJk`gNJffRdJffRdJffRdJffRd
JffRdJffRdJffRdSfd&DJgu@%Jgu@%Jgu@%Jgu@%Jgu@%Jgu@%Jgu@%\gi;+Jk^hkJk^hkJk^hkJk^hk
Jk^hkJk^hkJk_h2jWB'rJffRdJffRdJffRdJffRdJffRdJffRdJfhQGJgu@%Jgu@%Jgu@%Jgu@%Jgu@%
Jgu@%Jgu@%SgrhrJk^hkJk^hkJk^hkJk^hkJk^hkJk^hkJk^hk\kRbuJffRdJffRdJffRdJffRdJffRd
JffRdJfgR+jXPj3Jgu@%Jgu@%Jgu@%Jgu@%Jgu@%Jgu@%Jh">]Jk^hkJk^hkJk^hkJk^hkJk^hkJk^hk
Jk^hkSk\;gJffRdJffRdJffRdJffRdJffRdJffRdJffRd\fZMRJgu@%Jgu@%Jgu@%Jgu@%Jgu@%Jgu@%
Jh!?Aj\CD&JkgnmJkgnmJkgnmJkgnmJkgnmJkgnmJkimPJffRdJffRdJffRdJffRdJffRdJffRdJffRd
Sfd&DJgu@%Jgu@%Jgu@%Jgu@%Jgu@%Jgu@%Jgu@%\gi;,JkgnmJkgnmJkgnmJkgnmJkgnmJkgnmJkhn4
jWB'rJffRdJffRdJffRdJffRdJffRdJffRdJfhQGJgu@%Jgu@%Jgu@%Jgu@%Jgu@%Jgu@%Jgu@%Sgrhs
JkgnmJkgnmJkgnmJkgnmJkgnmJkgnmJkgnm\k[i!JffRdJffRdJffRdJffRdJffRdJffRdJfgR+jXPj3
Jgu@%Jgu@%Jgu@%Jgu@%Jgu@%Jgu@%Jh">]JkgnmJkgnmJkgnmJkgnmJkgnmJkgnmJkgnmSkeAhJffRd
JffRdJffRdJffRdJffRdJffRdJffRd\fZMRJgu@%Jgu@%Jgu@%Jgu@%Jgu@%Jgu@%Jh!?Aj\CD&Jkgnm
JkgnmJkgnmJkgnmJkgnmJkgnmJkimPJffRdJffRdJffRdJffRdJffRdJffRdJffRdSfd&DJgu@%Jgu@%
Jgu@%Jgu@%Jgu@%Jgu@%Jgu@%\gi;-JkptoJkptoJkptoJkptoJkptoJkptoJkqt6jWB'rJffRdJffRd
JffRdJffRdJffRdJffRdJfhQGJgu@%Jgu@%Jgu@%Jgu@%Jgu@%Jgu@%Jgu@%SgrhtJkptoJkptoJkpto
JkptoJkptoJkptoJkpto\kdo"JffRdJffRdJffRdJffRdJffRdJffRdJfgR+jXPj3Jgu@%Jgu@%Jgu@%
Jgu@%Jgu@%Jgu@%Jh">]JkptoJkptoJkptoJkptoJkptoJkptoJkptoSknGiJffRdJffRdJffRdJffRd
JffRdJffRdJffRd\fZMRJgu@%Jgu@%Jgu@%Jgu@%Jgu@%Jgu@%Jh!?Aj\LJ(JkptoJkptoJkptoJkpto
JkptoJkptoJkrsRJffRdJffRdJffRdJffRdJffRdJffRdJffRdSfd&DJgu@%Jgu@%Jgu@%Jgu@%Jgu@%
Jgu@%Jgu@%\gi;.Jl%%qJl%%qJl%%qJl%%qJl%%qJl%%qJl&%8jWB'rJffRdJffRdJffRdJffRdJffRd
JffRdJfhQGJgu@%Jgu@%Jgu@%Jgu@%Jgu@%Jgu@%Jgu@%SgrhuJl%%qJl%%qJl%%qJl%%qJl%%qJl%%q
Jl%%q\kmu#JffRdJffRdJffRdJffRdJffRdJffRdJfgR+jXPj3Jgu@%Jgu@%Jgu@%Jgu@%Jgu@%Jgu@%
Jh">]Jl%%qJl%%qJl%%qJl%%qJl%%qJl%%qJl%%qSl"MjJffRdJffRdJffRdJffRdJffRdJffRdJffRd
\fZMRJgu@%Jgu@%Jgu@%Jgu@%Jgu@%Jgu@%Jh!?Aj\UP*Jl%%qJl%%qJl%%qJl%%qJl%%qJl%%qJl'$T
JffRdJffRdJffRdJffRdJffRdJffRdJffRdSfd&DJgu@%Jgu@%Jgu@%Jgu@%Jgu@%Jgu@%Jgu@%\gi;.
Jl%%qJl%%qJl%%qJl%%qJl%%qJl%%qJl&%8jWB'rJffRdJffRdJffRdJffRdJffRdJffRdJfhQGJgu@%
Jgu@%Jgu@%Jgu@%Jgu@%Jgu@%Jgu@%Sgri!Jl.+sJl.+sJl.+sJl.+sJl.+sJl.+sJl.+s\l"&$JffRd
JffRdJffRdJffRdJffRdJffRdJfgR+jXPj3Jgu@%Jgu@%Jgu@%Jgu@%Jgu@%Jgu@%Jh">]Jl.+sJl.+s
Jl.+sJl.+sJl.+sJl.+sJl.+sSl+SkJffRdJffRdJffRdJffRdJffRdJffRdJffRd\fZMRJgu@%Jgu@%
Jgu@%Jgu@%Jgu@%Jgu@%Jh!?Aj\^V,Jl.+sJl.+sJl.+sJl.+sJl.+sJl.+sJl0*VJffRdJffRdJffRd
JffRdJffRdJffRdJffRdSfd&DJgu@%Jgu@%Jgu@%Jgu@%Jgu@%Jgu@%Jgu@%\gi;/Jl.+sJl.+sJl.+s
Jl.+sJl.+sJl.+sJl/+:jWB'rJffRdJffRdJffRdJffRdJffRdJffRdJfhQGJgu@%Jgu@%Jgu@%Jgu@%
Jgu@%Jgu@%Jgu@%Sgri!Jl.+sJl.+sJl.+sJl.+sJl.+sJl.+sJl.+s\l"&$JffRdJffRdJffRdJffRd
JffRdJffRdJfgR+jXPj3Jgu@%Jgu@%Jgu@%Jgu@%Jgu@%Jgu@%Jh">]Jl71uJl71uJl71uJl71uJl71u
Jl71uJl71uSl4YlJffRdJffRdJffRdJffRdJffRdJffRdJffRd\fZMRJgu@%Jgu@%Jgu@%Jgu@%Jgu@%
Jgu@%Jh!?Aj\g\.Jl71uJl71uJl71uJl71uJl71uJl71uJl90XJfoXfJfoXfJfoXfJfoXfJfoXfJfoXf
JfoXfSfm,EJgu@%Jgu@%Jgu@%Jgu@%Jgu@%Jgu@%Jgu@%\gi;0Jl71uJl71uJl71uJl71uJl71uJl71u
Jl81<jWK-tJfoXfJfoXfJfoXfJfoXfJfoXfJfoXfJfqWIJgu@%Jgu@%Jgu@%Jgu@%Jgu@%Jgu@%Jgu@%
Sgri"Jl71uJl71uJl71uJl71uJl71uJl71uJl71u\l+,&JfoXfJfoXfJfoXfJfoXfJfoXfJfoXfJfpX-
jXPj3Jgu@%Jgu@%Jgu@%Jgu@%Jgu@%Jgu@%Jh">]Jl@8"Jl@8"Jl@8"Jl@8"Jl@8"Jl@8"Jl@8"Sl=_n
JfoXfJfoXfJfoXfJfoXfJfoXfJfoXfJfoXf\fcSSJgu@%Jgu@%Jgu@%Jgu@%Jgu@%Jgu@%Jh!?Aj\pb0
Jl@8"Jl@8"Jl@8"Jl@8"Jl@8"Jl@8"JlB6ZJfoXfJfoXfJfoXfJfoXfJfoXfJfoXfJfoXfSfm,EJgu@%
Jgu@%Jgu@%Jgu@%Jgu@%Jgu@%Jgu@%\gi;1Jl@8"Jl@8"Jl@8"Jl@8"Jl@8"Jl@8"JlA7>jWK-tJfoXf
JfoXfJfoXfJfoXfJfoXfJfoXfJfqWIJgu@%Jgu@%Jgu@%Jgu@%Jgu@%Jgu@%Jgu@%Sgri#Jl@8"Jl@8"
Jl@8"Jl@8"Jl@8"Jl@8"Jl@8"\l42'JfoXfJfoXfJfoXfJfoXfJfoXfJfoXfJfpX-jXPj3Jgu@%Jgu@%
Jgu@%Jgu@%Jgu@%Jgu@%Jh">]Jl@8"Jl@8"Jl@8"Jl@8"Jl@8"Jl@8"Jl@8"Sl=_nJfoXfJfoXfJfoXf
JfoXfJfoXfJfoXfJfoXf\fcSSJgu@%Jgu@%Jgu@%Jgu@%Jgu@%Jgu@%Jh!?Aj]$h2JlI>$JlI>$JlI>$
JlI>$JlI>$JlI>$JlK<\JfoXfJfoXfJfoXfJfoXfJfoXfJfoXfJfoXfSfm,EJgu@%Jgu@%Jgu@%Jgu@%
Jgu@%Jgu@%Jgu@%\gi;2JlI>$JlI>$JlI>$JlI>$JlI>$JlI>$JlJ=@jWK-tJfoXfJfoXfJfoXfJfoXf
JfoXfJfoXfJfqWIJh)F'Jh)F'Jh)F'Jh)F'Jh)F'Jh)F'Jh)F'Sh&o%JlI>$JlI>$JlI>$JlI>$JlI>$
JlI>$JlI>$\l=8(JfoXfJfoXfJfoXfJfoXfJfoXfJfoXfJfpX-jXYp5Jh)F'Jh)F'Jh)F'Jh)F'Jh)F'
Jh)F'Jh+D_JlI>$JlI>$JlI>$JlI>$JlI>$JlI>$JlI>$SlFeoJfoXfJfoXfJfoXfJfoXfJfoXfJfoXf
JfoXf\fcSTJh)F'Jh)F'Jh)F'Jh)F'Jh)F'Jh)F'Jh*ECj]-n4JlRD&JlRD&JlRD&JlRD&JlRD&JlRD&
JlTB^JfoXfJfoXfJfoXfJfoXfJfoXfJfoXfJfoXfSfm,FJh)F'Jh)F'Jh)F'Jh)F'Jh)F'Jh)F'Jh)F'
\gr:~>

%%EndBinary
grestore
np
900 64.099 mo
261.411 64.099 li
268.02 62.212 274.409 59.621 280.071 56.7051 cv
281.408 56.0166 282.724 55.2895 284.02 54.5262 cv
900 54.5262 li
900 64.099 li
222.132 64.099 mo
0 64.099 li
0 54.5262 li
166.675 54.5262 li
177.735 55.485 188.838 56.1493 199.813 57.8709 cv
207.334 59.0504 214.718 61.8599 222.132 64.099 cv
241.334 62.6299 mo
241.051 62.6299 240.776 62.6251 240.506 62.6154 cv
228.789 62.1907 217.667 57.2993 205.871 54.5262 cv
268.75 54.5262 li
263.752 58.4278 249.706 62.6299 241.334 62.6299 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 480 ]ct
[900.96 0 0 11.04 -.480011 415.2 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 1877 
/H 23 
/M[1877 0 0 -23 0 23 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 1877 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 1877 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 1877 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
Jl[J(Jl[J(Jl[J(Jl[J(Jl[J(Jl[J(Jl[J(SlXqrJg#^hJg#^hJg#^hJg#^hJg#^hJg#^hJg#^h\flYU
Jh)F'Jh)F'Jh)F'Jh)F'Jh)F'Jh)F'Jh*ECj]@%8JldP*JldP*JldP*JldP*JldP*JldP*JlfNbJg#^h
Jg#^hJg#^hJg#^hJg#^hJg#^hJg#^hSg!2GJh)F'Jh)F'Jh)F'Jh)F'Jh)F'Jh)F'Jh)F'\grA6JldP*
JldP*JldP*JldP*JldP*JldP*JleOFjWT4!Jg#^hJg#^hJg#^hJg#^hJg#^hJg#^hJg%]KJh)F'Jh)F'
Jh)F'Jh)F'Jh)F'Jh)F'Jh)F'Sh&o(JldP*JldP*JldP*JldP*JldP*JldP*JldP*\lXJ,Jg#^hJg#^h
Jg#^hJg#^hJg#^hJg#^hJg$^/jXYp5Jh)F'Jh)F'Jh)F'Jh)F'Jh)F'Jh)F'Jh+D_JlmV,JlmV,JlmV,
JlmV,JlmV,JlmV,JlmV,Slk(tJg#^hJg#^hJg#^hJg#^hJg#^hJg#^hJg#^h\flYUJh)F'Jh)F'Jh)F'
Jh)F'Jh)F'Jh)F'Jh*ECj]I+:JlmV,JlmV,JlmV,JlmV,JlmV,JlmV,JloTdJg#^hJg#^hJg#^hJg#^h
Jg#^hJg#^hJg#^hSg!2GJh)F'Jh)F'Jh)F'Jh)F'Jh)F'Jh)F'Jh)F'\grA7JlmV,JlmV,JlmV,JlmV,
JlmV,JlmV,JlnUHjWT4!Jg#^hJg#^hJg#^hJg#^hJg#^hJg#^hJg%]KJh)F'Jh)F'Jh)F'Jh)F'Jh)F'
Jh)F'Jh)F'Sh&o)JlmV,JlmV,JlmV,JlmV,JlmV,JlmV,JlmV,\laP-Jg#^hJg#^hJg#^hJg#^hJg#^h
Jg#^hJg$^/jXYp5Jh)F'Jh)F'Jh)F'Jh)F'Jh)F'Jh)F'Jh+D_JlmV,JlmV,JlmV,JlmV,JlmV,JlmV,
JlmV,Slk(tJg#^hJg#^hJg#^hJg#^hJg#^hJg#^hJg#^h\flYUJh)F'Jh)F'Jh)F'Jh)F'Jh)F'Jh)F'
Jh*ECj]R1<Jm!\.Jm!\.Jm!\.Jm!\.Jm!\.Jm!\.Jm#ZfJg#^hJg#^hJg#^hJg#^hJg#^hJg#^hJg#^h
Sg!2GJh)F'Jh)F'Jh)F'Jh)F'Jh)F'Jh)F'Jh)F'\grA8Jm!\.Jm!\.Jm!\.Jm!\.Jm!\.Jm!\.Jm"[J
jWT4!Jg#^hJg#^hJg#^hJg#^hJg#^hJg#^hJg%]KJh)F'Jh)F'Jh)F'Jh)F'Jh)F'Jh)F'Jh)F'Sh&o*
Jm!\.Jm!\.Jm!\.Jm!\.Jm!\.Jm!\.Jm!\.\ljV.Jg#^hJg#^hJg#^hJg#^hJg#^hJg#^hJg$^/jXYp5
Jh)F'Jh)F'Jh)F'Jh)F'Jh)F'Jh)F'Jh+D_Jm*b0Jm*b0Jm*b0Jm*b0Jm*b0Jm*b0Jm*b0Sm(5!Jg#^h
Jg#^hJg#^hJg#^hJg#^hJg#^hJg#^h\flYUJh)F'Jh)F'Jh)F'Jh)F'Jh)F'Jh)F'Jh*ECj][7>Jm*b0
Jm*b0Jm*b0Jm*b0Jm*b0Jm*b0Jm,`hJg#^hJg#^hJg#^hJg#^hJg#^hJg#^hJg#^hSg!2GJh)F'Jh)F'
Jh)F'Jh)F'Jh)F'Jh)F'Jh)F'\grA9Jm*b0Jm*b0Jm*b0Jm*b0Jm*b0Jm*b0Jm+aLjWT4!Jg#^hJg#^h
Jg#^hJg#^hJg#^hJg#^hJg%]KJh)F'Jh)F'Jh)F'Jh)F'Jh)F'Jh)F'Jh)F'Sh&o+Jm*b0Jm*b0Jm*b0
Jm*b0Jm*b0Jm*b0Jm*b0\ls\/Jg#^hJg#^hJg#^hJg#^hJg#^hJg#^hJg$^/jXYp5Jh)F'Jh)F'Jh)F'
Jh)F'Jh)F'Jh)F'Jh+D_Jm3h2Jm3h2Jm3h2Jm3h2Jm3h2Jm3h2Jm3h2Sm1;"Jg#^hJg#^hJg#^hJg#^h
Jg#^hJg#^hJg#^h\flYUJh)F'Jh)F'Jh)F'Jh)F'Jh)F'Jh)F'Jh*ECj]d=@Jm3h2Jm3h2Jm3h2Jm3h2
Jm3h2Jm3h2Jm5fjJg#^hJg#^hJg#^hJg#^hJg#^hJg#^hJg#^hSg!2GJh)F'Jh)F'Jh)F'Jh)F'Jh)F'
Jh)F'Jh)F'\grA:Jm3h2Jm3h2Jm3h2Jm3h2Jm3h2Jm3h2Jm4gNjW]:#Jg,djJg,djJg,djJg,djJg,dj
Jg,djJg.cMJh)F'Jh)F'Jh)F'Jh)F'Jh)F'Jh)F'Jh)F'Sh&o,Jm3h2Jm3h2Jm3h2Jm3h2Jm3h2Jm3h2
Jm3h2\m'b1Jg,djJg,djJg,djJg,djJg,djJg,djJg-d1jXYp5Jh)F'Jh)F'Jh)F'Jh)F'Jh)F'Jh)F'
Jh+D_Jm3h2Jm3h2Jm3h2Jm3h2Jm3h2Jm3h2Jm3h2Sm1;#Jg,djJg,djJg,djJg,djJg,djJg,djJg,dj
\fu_VJh)F'Jh)F'Jh)F'Jh)F'Jh)F'Jh)F'Jh*ECj]mCBJm<n4Jm<n4Jm<n4Jm<n4Jm<n4Jm<n4Jm>ll
Jg,djJg,djJg,djJg,djJg,djJg,djJg,djSg*8HJh)F'Jh)F'Jh)F'Jh)F'Jh)F'Jh)F'Jh)F'\grA;
Jm<n4Jm<n4Jm<n4Jm<n4Jm<n4Jm<n4Jm=mPjW]:#Jg,djJg,djJg,djJg,djJg,djJg,djJg.cMJh)F'
Jh)F'Jh)F'Jh)F'Jh)F'Jh)F'Jh)F'Sh#<~>

%%EndBinary
grestore
np
900 74.5041 mo
596.198 74.5041 li
594.885 74.164 593.566 73.806 592.239 73.4289 cv
591.376 73.3835 590.51 73.3615 589.64 73.3615 cv
586.864 73.3615 584.051 73.5853 581.193 73.9881 cv
580.656 74.1651 580.12 74.3366 579.582 74.5041 cv
0 74.5041 li
0 71.193 li
900 71.193 li
900 74.5041 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 480 ]ct
[900.96 0 0 4.8 -.480011 404.64 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 1877 
/H 10 
/M[1877 0 0 -10 0 10 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 1877 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 1877 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 1877 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
JmX+:JmX+:JmX+:JmX+:JmX+:JmX+:JmX+:SmUS'Jg,djJg,djJg,djJg,djJg,djJg,djJg,dj\fu_W
Jh2L)Jh2L)Jh2L)Jh2L)Jh2L)Jh2L)Jh3KEj^3UHJmX+:JmX+:JmX+:JmX+:JmX+:JmX+:JmZ)rJg,dj
Jg,djJg,djJg,djJg,djJg,djJg,djSg*8IJh2L)Jh2L)Jh2L)Jh2L)Jh2L)Jh2L)Jh2L)\h&G@Jma1<
Jma1<Jma1<Jma1<Jma1<Jma1<Jmb0XjW]:#Jg,djJg,djJg,djJg,djJg,djJg,djJg.cMJh2L)Jh2L)
Jh2L)Jh2L)Jh2L)Jh2L)Jh2L)Sh/u2Jma1<Jma1<Jma1<Jma1<Jma1<Jma1<Jma1<\mU+7Jg5jlJg5jl
Jg5jlJg5jlJg5jlJg5jlJg6j3jXc!7Jh2L)Jh2L)Jh2L)Jh2L)Jh2L)Jh2L)Jh4JaJmj7>Jmj7>Jmj7>
Jmj7>Jmj7>Jmj7>Jmj7>Smg_*Jg5jlJg5jlJg5jlJg5jlJg5jlJg5jlJg5jl\g)eXJh2L)Jh2L)Jh2L)
Jh2L)Jh2L)Jh2L)Jh3KEj^EaLJmj7>Jmj7>Jmj7>Jmj7>Jmj7>Jmj7>Jml6!Jg5jlJg5jlJg5jlJg5jl
Jg5jlJg5jlJg5jlSg3>JJh2L)Jh2L)Jh2L)Jh2L)Jh2L)Jh2L)Jh2L)\h&GAJmj7>Jmj7>Jmj7>Jmj7>
Jmj7>Jmj7>Jmk6ZjWf@%Jg5jlJg5jlJg5jlJg5jlJg5jlJg5jlJg7iOJh2L)Jh2L)Jh2L)Jh2L)Jh2L)
Jh2L)Jh2L)Sh/u3Jmj7>Jmj7>Jmj7>Jmj7>Jmj7>Jmj7>Jmj7>\m^18Jg5jlJg5jlJg5jlJg5jlJg5jl
Jg5jlJg6j3jXc!7Jh2L)Jh2L)Jh2L)Jh2L)Jh2L)Jh2L)Jh4JaJmj7>Jmj7>Jmj7>Jmj7>Jmj7>Jmj7>
Jmj7>Smg_*Jg5jlJg5jlJg5jlJg5jlJg5jlJg5jlJg5jl\g)eXJh2L)Jh2L)Jh2L)Jh2L)Jh2L)Jh2L)
Jh3KEj^EaLJmj7>Jmj7>Jmj7>Jmj7>Jmj7>Jmj7>Jml6!Jg5jlJg5jlJg5jlJg5jlJg5jlJg5jlJg5jl
Sg3>JJh2L)Jh2L)Jh2L)Jh2L)Jh2L)Jh2L)Jh2L)\h&@~>

%%EndBinary
grestore
np
307.024 127.597 mo
306.649 126.034 306.277 124.464 305.91 122.889 cv
388.884 123.191 495.567 125.247 495.567 125.247 cv
495.567 125.247 387.305 127.272 307.024 127.597 cv
238.441 127.458 mo
207.074 127.239 175.635 126.852 148.997 126.462 cv
146.355 125.6 143.64 124.828 140.948 124.19 cv
169.966 123.757 205.455 123.299 239.484 123.047 cv
239.14 124.523 238.792 125.992 238.441 127.458 cv
109.992 125.841 mo
100.517 125.678 92.7604 125.535 87.2378 125.43 cv
86.8 125.357 86.3613 125.283 85.9223 125.209 cv
85.727 125.174 85.5296 125.141 85.3288 125.108 cv
91.7851 124.99 102.111 124.807 115.06 124.595 cv
114.929 124.636 114.797 124.677 114.665 124.717 cv
113.23 125.148 111.664 125.528 109.992 125.841 cv
level3{
gsave
clp
[-1.30785e-008 -291.304 -291.304 1.30785e-008 450 255.719 ]ct
/2 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~hf2ZQE)k_4<8;CkgMKpDCfK&&;qGb_enS.6Bi<Go;U]8VdUc>'APg]a:sWWJc!jJm@8G'S:Wd'@aBq]`
?;AOH:;pF3`*5sR>"uk:9u0q*^fO4E=%p;.9>"7t]2VG7;bOVu9"7bk[no]):J%og8[D,_Z;!oq9LuB\
8?YWVX[u$a8OogO8#f$KWC97S6q+"A7AW@>Ud@JE5t%J57%lh4TKbf94[Yc&6C^,(RlWm*3^T5p6'sVt
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~QoIBu3'iih6'XApPW(jk2aENa5`mriO#B7`2F*6Y5`@NbM_mYS1d?aO5DCsYKekrG1I$IH5CbLRJ20<;
1-U(?5'o"JH8.U/0g9h95'8PCF>,k!0KjG04`N,<D_F7k00O,(4_lZ5C+_S]/j!\t4(^'+AM#uR/N[Ak
4('R#?Rn0D.lprc3a4'p=XlI7.QUW[3`RUi<%0h+.619S3D_+a:+/+s-ojsK3D1_[8gcSh-TFRB3(5/R
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.487685 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.30785e-008 -291.304 -291.304 1.30785e-008 450 255.719 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~hVR)Egt^Z=g=k64f@SU)e^`1!e'landEp4ccHa_[bfn8Rb0%iIa2c6@`l5m7_o'@._83q&^V@Lr]Y(kg
]"5G^\$riU[^EKLZa6sCZ*CO;YHP+2XK8J'WiE%tW2QVlVPU)aUSFQXU7e0OT:VUDS=?":R[TY3R$X/*
QBmf$Pa%AqP*1riOH5E^NK&mUMi3ILLPLV=L4t>7K7\]+J:E&uIXQTjH[:!`H$FRXG'.nKF)uABEH,r9
DJj<-CMR["BkV-lAnGXdARo:[@:3JM?X@&E?!LT;=]ed-=&r=$<)cdp;Gp@g:JOVY9MA)P8kMZG7n,p9
~>
<~E,]`6DJj?/Ci!m&C2.HsBk_6oB4kgfA7T4]A7K(X@:<PO?XI/I?=$oC>[(B8>$>'3=BJX+<`W7%<E3!t
;c?Rl;,L1e:JX_\9he;T9MA)P8kMZH84Z9A7Rfg86psC06UO1,5s[b$5<_7p4Zkhg4$#D_3B9)Z3&`cT
2`EWQ2E!HO2E!EM2)R6K2)I*F1G^gC1G^dA1,:U?1,:U>0ekC;0ekC:0JG170JG160/"t30/"t3/hSb/
/hSb//M/P+/M/P+/1`>'/1`>'.k3"u.Olnt.Oceq.4H\p.4?Sm-n$Jl-n$Gj-RU8h-RU5f-71&d-71#b
~>
<~<)cgr;c?Un;c?Un;GpCj;Gp@h;,L1f;,C%a:JXb^:/4PZ:/4PZ9he>V9he;T9MA,R9MA)P91qoN8kM]J
8kM]J8P)KF8P)HD84Z9B84Z6@7n6'>7Rfj:7Rfj96psF26psC06UO4.6UF++6:+")5s[e&5s[e%5X7S"
5X7S"5X7Ou5<h@s5<h@s5<h@s5<h=q5!D.o5!D.o5!D.o5!D.n4Ztqk4Ztqk4Ztqk4Ztqk4?P_g4?P_g
4?P_g4?P_f3]];_3]];_3]];_3]];_3]T2\3B9)[3B9)[3B9)[3B9&Y3&ilW3&ilW3&ilW3&iiU2`EZS
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
527.808 104.371 mo
452.015 104.371 365.34 103.235 301.354 102.183 cv
301.118 101.044 300.885 99.9074 300.652 98.7626 cv
359.842 97.805 437.734 96.7518 504.501 96.5388 cv
512.396 100.238 521.257 101.421 530.587 101.421 cv
538.871 101.421 547.523 100.489 556.204 99.5567 cv
564.884 98.6244 573.593 97.692 581.98 97.692 cv
589.776 97.692 597.294 98.4967 604.263 100.855 cv
607.074 101.698 609.814 102.401 612.519 102.945 cv
614.475 103.339 616.413 103.65 618.345 103.872 cv
586.563 104.176 555.388 104.371 527.808 104.371 cv
623.621 103.821 mo
638.208 102.633 654.386 102.374 668.64 97.5244 cv
763.266 98.6904 847.621 100.435 847.621 100.435 cv
847.621 100.435 732.946 102.738 623.621 103.821 cv
244.287 101.169 mo
221.602 100.735 207.99 100.435 207.99 100.435 cv
207.99 100.435 221.825 100.149 244.582 99.731 cv
244.484 100.21 244.385 100.692 244.287 101.169 cv
628.886 100.279 mo
626.407 100.279 623.922 100.113 621.444 99.8354 cv
615.891 99.2136 610.449 98.0336 605.015 96.8596 cv
617.563 96.9641 630.221 97.0875 642.813 97.2244 cv
640.148 98.4745 637.545 99.5138 637.2 99.5756 cv
634.447 100.07 631.67 100.279 628.886 100.279 cv
level3{
gsave
clp
[-1.30785e-008 -291.304 -291.304 1.30785e-008 450 255.719 ]ct
/3 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~icnYcG?WpJ=l4C*hK;uWFBRC>=PIgtg2U6IE)tV0<nD4iennI;CK8l"<RY\_d:lS,BN3>k<6o2Vc"0ht
A5g]^;p&QIa^S/h@8b0R;T<$?`Ec?Z>uALE:Vp=3_-'RL=AQ\5:;0e)]iIn@<DC)(9tF4s\Pc/2;,"Gq
9X[_jZqX3"9hVfd9<q2`YY%Nk8P60X9!(WTX@>a]77aII8?"sHW'a(Q6:[n<7\r==Ucq8C5";807A2h4
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~Tfbc:4@Pl'7@lP/SN90/3^fGt7%62)R5m[&3CK2n7$T`"PW2$n3(&fe6]X/nN]0=a2a`K]6]!]gLc.PS
2F3$R6%_![Ji#cE1dQXJ6%(OTHo"$71I-7A5^>+MFtu=*1-fq95]\YFEA9[r0gBP05A`)=CG7tf0L'5'
5A)T5AhH8X/j<bs5%-$,?nFQK/O!Gk5$KR%=tDg=/3R&b4]X'r<%C+0.m6`Z4]!Uk:F\J#.Qg?P4A%"a
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.487685 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.30785e-008 -291.304 -291.304 1.30785e-008 450 255.719 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~iSi_Qhr!;Ih;-lAgY:H9g"=p.f@SU)e^W'se'lamd*U+bcd0n]bfn8RbK@rKaN2EBa2Z*;`5KR2_SX.*
^qd_"^:q:o]Y(kg]"5G_\@8oT[^NTNZa6sCZEga>YHP+3Y-"e,X/i8#Wi2koVl$>fV50o^US=KVTqJ'N
T:_^HSXl:@S"#k8R[KP1Q^=#'Pa%ApOcb`eO,f6[N/NUOM26tCLPCM9K7\]+JUi9#IXQTkH[C'bH$OXX
F`heJF)uAAE,TW3D/F-+CMITuBP1siAn>L_@q&kS?sd5G?!LT<>$>'2='&F'<E)mp;,L.d:JX_[91qlL
~>
<~GB\4RF`hhLFEDSEEH,r:E,]`6DJj<.Chmd#C2.HsBP;$kAnGXdA7T1[@U`bS@:<PN?=$oC>[1N=>?b96
=BJX+<`W7%<E3!s;Gp@h;,L.d:JX_[9MA,R91qlL8P)HD84Z6?77BU46UF++6:!k$5<_7o4Ztqj4?GVd
3]]8]3B9)[3B9&Y3&ilW3&iiU2`EZS2`EWQ2E!HO2E!HN2)R6K2)R3H1G^gC1G^gB1,:U?1,:U?0ekC;
0ekC;0JG170JG170/"t30/"t3/hJY,/M/P+/M&G(/1`>'/1W5$.k<,#.k<)!.Olnt.Olkr.4H\p.4?Pk
~>
<~=]nm1=BJ[-=BJ[-='&I)=&r=$<E3%!<E3!t<)cgr;c?Un;c?Un;GpCj;Gp@h;,L1f;,L.d:f'ta:/4PZ
:/4PZ9he>V9he;T9MA,R9MA)P91qoN8kM]J8kM]J8P)KF8Ou?A7n6'>7n,s;7Rfj977BX677BX56psF2
6psF26psC06UO4.6UO4.6UO4.6UO1,6:+"*6:+"*6:+"*6:*t'5X7S"5X7S"5X7S"5X7S"5<h@s5<h@s
5<h@s5<h@s5!D.o5!D.o5!D.o5!D.o5!;%l4Ztqk4Ztqk4Ztqk4Ztni4?P_g4?P_g4?P_g4?P\e4$,Mc
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /3 /Gradient get_res exec grestore
}if
np
809.242 163.318 mo
809.024 161.753 808.82 160.18 808.632 158.61 cv
839.362 158.733 870.915 158.993 900 159.296 cv
900 162.79 li
899.802 162.792 899.607 162.795 899.409 162.797 cv
899.27 162.795 899.13 162.794 898.99 162.794 cv
898.584 162.794 898.177 162.802 897.771 162.817 cv
865.671 163.213 844.245 163.299 809.242 163.318 cv
631.38 162.367 mo
607.863 162.104 586.209 161.825 568.603 161.583 cv
570.578 161.417 572.578 161.133 574.62 160.725 cv
575.663 160.564 576.698 160.379 577.726 160.166 cv
593.611 159.957 612.079 159.726 631.75 159.507 cv
631.633 160.461 631.509 161.415 631.38 162.367 cv
558.442 161.442 mo
537.253 161.142 524.059 160.929 524.059 160.929 cv
524.059 160.929 534.889 160.758 552.595 160.509 cv
554.56 160.916 556.504 161.229 558.442 161.442 cv
level3{
gsave
clp
[-1.30785e-008 -291.304 -291.304 1.30785e-008 450 255.719 ]ct
/4 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~m$_q\QuVGYE9`d/l'?;QP]5fMDWd4$k*']FO_s3AD<6gqjGe$:N,7L4CuU=gi.u.+LMG_#C>X_[hLoV"
Jna%kC#"2OgOEnkI;%>^B\@]CfQh&\H"GTOACbm6eoYHREb*^?A(5L.dr8gFD.1h.@F8guct["8Bjf8#
@*`Clc"18,AREYj?d)qcb$\Mt?X:c\?-$;UaBMli=^/pK>K0`I`E-3]<E[7>=Mn$=_GF@O:ftP0=2@U4
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~_+e"H9io,(=2.F1^._S@9NJi!<kM%*]1Q,88liGn<k(_%[RjH*8Q;uc<3f"nYX_Zq7oZQY<3&GeWC9ab
78p'O;l)l\UI8%U6rTgH;kHBTSO-/C6;X.;:ms[HQU+H65u<h3:m=4AP<_p*5YmG(:Q7M5N'0so4\phq
:PCo,KKN"^4ALDf:4>6!Hob#L3_jr\:3JWmF?*':3DFKQ9lN'dCcG.)3)+*F9kZFZB/WCm2G7I8940SL
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.487685 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.30785e-008 -291.304 -291.304 1.30785e-008 450 255.719 ]ct
clp
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~lg*m&lK[Wukih6nk2tggjlPUcjQ,C_j5].YiSibRhr!>KhVR,Gh;-oCgt^Z=g=k97g"G$1f@SX+f%/C%
e^`4#eC;srdaHOjd*U.dcd0n^cHa_[bfn;TbKJ)OaiVZHaN2EBa2c6@`l5p8`5KU3_ns:,_83t'^qdb#
^V@Ou^:q:o]Y(ni]=YYc\[],X\$i]OZa-j@Z*CO:Y-"e+X/`.tW2QSiV50l\U8"BUTV%gHS=H(<R[TY2
QBmf$Pa%AqP*(fdNfB$WN/NRLLPCM9KS+o/J:E#rI!^3dH$FOVF`_\GEcH&;DJX*(C2%?pB4kge@UWYP
~>
<~R@'>-QBmi&Q'@JrPEV/mP*(ifO,o<\N/W[QMi*@ILPLV<KS5#3K7\Z)It)orIXQTkH[9s_G^+IWG'.nK
F)l8?E,]c8Df'<,CMIQtBk_6oAn>L`A7T1Z@:<PO?XI,G?<pf?>$4s0=&r@&<E)pr;Gg7d:JXb]9h\5S
9MA)P91qoN91hcI8P)KF8P)HD84Z9B84Q-=7Rfj:7Rfg76psF26psF16UO4.6UO1+5s[e&5s[e&5X7S"
5X7S"5<h@s5<h@r4?P_g4?P_g4?GVd4$,Mc3]T2\3B9)[3B/uX3&ilW3&iiU2`EZS2`<NN2)R6K2)I*F
~>
<~E,]c8Df9Q4Df9Q3D/F-,D/F**Ci!p(Ci!m&CMR^#Bk_9qBk_9qBP;'mBP;$kB4kjiB4YUaA7T4]@q0"Y
@q0"Y@U`eU@UWYP?smAM?sm>K?XI/I?=$rE?=$rD>[1N=>[(B8>$>*5>$+m/=BJ[,='&I)='&I(<`W7%
<`W7%<`W4#<E3%!<E3%!<E3%!<E)mq;c?Un;c?Un;c?Un;c?Um;GpCj;GpCj;GpCj;Gp@g:JXb^:JXb^
:JXb^:JXb^:/4PZ:/4PZ:/4PZ:/4PZ:/+GW9he>V9he>V9he>V9he;T9MA,R9MA,R9MA,R9M7uM8kM]J
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /4 /Gradient get_res exec grestore
}if
np
0 162.79 mo
0 159.296 li
67.3105 159.997 121.393 160.929 121.393 160.929 cv
63.1405 161.871 27.5605 162.443 0 162.79 cv
level3{
gsave
clp
[-1.30785e-008 -291.304 -291.304 1.30785e-008 450 255.719 ]ct
/5 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~o!sYK\;KgcM".s1n@"/B[>=:ZL@;L(m^.`:Z\@ePL$c1"m&u-0Xb5rAKBoRjlD]=!W.=-/JE`n\kbN^l
Tmu9uJ*3DPk+7%aRssLgIcZoCjHb/RQ@%\WHK1-6ifJKGNI'TCGi=U+iJMm<Lj%[1G2Isrhh610Jp#q$
Fl%RigjO8!I<41iF52%^gNRVkG&Z/YE7o;NflD#aDf=9FDqJlBf5,9TBl)@6CY!'4eRWIGA8B_)C=HU*
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~e6ct>?Y\%rC=?L(dU$V8?>.bkB[L$tcs(21>A2>dB[0dpc!"`&>%YoZB$".eaB3&p=D#QRB#Re_`)^Ed
<b0'IAAM8V^f=p[<FijBAA(lO]M`4N;I[46@_#<E[npPC:h$k/@^T!@Zqk)9:LLJ%@'<73Y"W6(9OOel
@&6M(Ue>'i94+>_?_'_pRRgeR87.ZQ?^!ueO@NW<7p_-C?Ah6YLIGO'7:(R4?@bFLJ3mIe6<e_$>B`A;
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.487685 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.30785e-008 -291.304 -291.304 1.30785e-008 450 255.719 ]ct
clp
/5 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~naZ/>nF5r:n*f`6mdBN2mHs<.m-O**lg*m&lK[["l07Hskih6okND$kkND!ijlPUcjlPRaj5]1[j5].Y
iSibSiSi_Qi8EMMhVR,GhVR)Eh;-oBgY:K;gY:K;g=k97g"G$1f\"j/f@SX*f%/F&e^`4"eC<!teC2mp
daHRldaHOjdF$@hd*U+bcd0n^c-=JUb0%iJaiMQDa2Z-<`Pf^4_ns:,_8*k$^V7Fr^:h1l]=YYc\[f5Z
[^NWQ[C*BKZa6sCZ*:F7Y,n\'W2?DeUna]ZTV%dFS!f\3Q^*f!OcYWbNJrdRM2-h>KS"c+J:N,tH?jaZ
~>
<~\@B#W[^NWQ[C*BK['[0GZa6sCZ*CR<Y-"e,XK/A#W2QVkUnjf^US4?QSt;LDSXZ(:R?s5*Q'IW!PECrg
O,]*WMi3LNM26qAKnP)2K7\Z*IsufoI!g9eH$OXYG'8"NFE;JCE,TW2Chmg%C1q9nAn5F^@q/tV?s[/G
?=$oC?!U`A>[(B8>$>*5>$>'3=]nm1=]ea,='&I)='&F&<E3%!<E3$u<)cgr<)cdn;,L1f;,L1e:JXb^
:JXb^:/4PZ:/4PY91qoN91qoN91hfK8kM]J84Q0?7n6'>7n,s;7Rfj:7R]^56psF26pa1*5s[e&5s[b$
~>
<~M2@(FLPLY?LPLY>KnY57KnY25KS5#3KS+l.JqAT*It)rtIt)rtIXZ`pIXZ]nI=6NlI=$9dH?sm`H$O[\
H$O[[GB\7TGBS+OF`hhLF`heJFEDVGEcQ2@EcQ/=Df9Q4Df9N2DJj?0D/3p&CMR^#C2.KuC2.KtBk_9q
Bk_9qBkV-lB4kjiB4kjiB4kjiB4b^dAS#FaAS#FaAS#FaAS#C^@q0"Y@q0"Y@q0"Y@q0"X@:<SQ@:<SQ
@:<SQ@:<SP?XI/I?XI/I?XI/I?XI/I?X@&F?=$rE?=$rE?=$rE?=$oC?!U`A?!U`A?!U`A?!LQ:>$>*5
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /5 /Gradient get_res exec grestore
}if
np
890.475 163.759 mo
880.375 165.823 870.48 170.426 860.189 170.426 cv
859.542 185.263 857.918 200.001 855.574 214.515 cv
850.907 243.414 843.445 271.311 835.457 298.789 cv
835.376 299.069 835.294 299.348 835.213 299.628 cv
828.123 265.274 820.295 230.66 820.888 194.601 cv
813.965 196.445 806.88 195.833 799.906 194.931 cv
792.55 193.98 785.282 193.035 777.882 193.528 cv
763.419 194.493 748.791 198.429 734.377 194.624 cv
734.407 194.648 734.375 194.64 734.281 194.601 cv
734.898 237.116 723.979 277.012 716.365 317.766 cv
711.905 307.655 707.917 297.076 704.622 286.174 cv
705.027 287.633 704.399 285.493 704.365 285.384 cv
704.166 284.736 703.969 284.087 703.774 283.437 cv
703.381 282.127 702.995 280.814 702.616 279.496 cv
701.782 276.597 700.982 273.68 700.214 270.748 cv
698.69 264.928 697.289 259.049 695.991 253.129 cv
693.225 240.509 690.926 227.708 688.939 214.824 cv
687.882 207.967 686.914 201.084 686.018 194.185 cv
685.575 190.772 685.149 187.356 684.74 183.935 cv
684.532 182.2 684.329 180.465 684.129 178.728 cv
683.956 177.231 684.187 175.754 683.083 175.221 cv
679.102 173.299 675.39 171.838 671.148 172.362 cv
669.233 172.599 667.315 172.927 665.434 173.472 cv
664.1 173.859 661.568 174.303 661.327 176.435 cv
658.27 203.472 654.403 230.865 648.344 257.201 cv
642.184 239.588 637.165 221.262 633.879 202.258 cv
633.671 201.053 633.485 199.868 633.281 198.67 cv
633.09 197.552 631.636 197.29 630.862 196.913 cv
628.657 195.84 626.441 194.803 624.205 193.849 cv
619.733 191.941 615.147 190.292 610.472 189.632 cv
602.303 188.479 593.735 191.14 585.922 194.156 cv
583.548 195.072 581.194 196.092 578.886 197.279 cv
577.917 197.778 576.955 198.307 576.01 198.885 cv
575.387 199.266 574.562 200.133 573.904 200.274 cv
573.091 205.162 572.146 210.008 571.099 214.814 cv
567.713 215.098 564.341 215.858 561.029 216.8 cv
556.918 217.971 552.849 219.469 548.877 221.319 cv
547.24 222.081 545.618 222.905 544.029 223.835 cv
542.997 224.44 541.628 225.89 540.55 226.132 cv
540.197 228.358 539.813 230.575 539.415 232.787 cv
536.79 219.787 534.642 206.621 533.202 193.263 cv
532.83 189.807 532.505 186.342 532.229 182.869 cv
532.144 181.796 531.077 172.699 531.559 172.372 cv
531.527 171.724 531.487 171.076 531.458 170.426 cv
530.863 170.426 530.268 170.403 529.674 170.358 cv
528.479 170.269 527.288 170.095 526.104 169.86 cv
523.495 169.342 520.923 168.533 518.37 167.652 cv
513.449 165.955 508.554 163.945 503.496 163.13 cv
499.194 162.436 494.852 162.886 490.583 163.759 cv
480.482 165.823 470.588 170.426 460.297 170.426 cv
459.65 185.263 458.025 200.001 455.681 214.515 cv
451.014 243.414 443.552 271.311 435.565 298.789 cv
435.321 299.628 li
428.231 265.274 420.402 230.66 420.995 194.601 cv
414.073 196.445 406.988 195.833 400.014 194.931 cv
392.658 193.98 385.389 193.035 377.99 193.528 cv
363.527 194.493 348.898 198.429 334.485 194.624 cv
334.515 194.648 334.483 194.64 334.389 194.601 cv
335.006 237.116 324.087 277.012 316.473 317.766 cv
312.012 307.655 308.024 297.076 304.729 286.174 cv
305.135 287.633 304.507 285.493 304.473 285.384 cv
304.274 284.736 304.077 284.087 303.882 283.437 cv
303.488 282.127 303.102 280.814 302.724 279.496 cv
301.89 276.597 301.09 273.68 300.322 270.748 cv
298.797 264.928 297.396 259.049 296.099 253.129 cv
293.333 240.509 291.034 227.708 289.047 214.824 cv
287.99 207.967 287.022 201.084 286.126 194.185 cv
285.683 190.772 285.257 187.356 284.848 183.935 cv
284.64 182.2 284.436 180.465 284.237 178.728 cv
284.064 177.231 284.295 175.754 283.191 175.221 cv
279.21 173.299 275.498 171.838 271.256 172.362 cv
269.34 172.599 267.423 172.927 265.541 173.472 cv
264.208 173.859 261.676 174.303 261.435 176.435 cv
255.835 225.962 247.536 276.689 227.975 319.908 cv
217.568 295.132 208.732 269.015 203.092 241.502 cv
202.45 238.372 201.849 235.226 201.291 232.067 cv
201.014 230.493 200.747 228.915 200.49 227.335 cv
200.309 226.22 200.29 223.986 199.482 223.568 cv
195.236 221.366 190.961 219.242 186.581 217.572 cv
182.208 215.904 177.64 214.562 173.071 214.702 cv
169.059 214.818 165.057 215.685 161.137 216.8 cv
157.025 217.971 152.957 219.469 148.984 221.319 cv
147.348 222.081 145.726 222.905 144.137 223.835 cv
143.105 224.44 141.736 225.89 140.658 226.132 cv
140.435 227.538 140.199 228.939 139.958 230.339 cv
137.513 221.151 135.42 211.791 133.772 202.258 cv
133.563 201.053 133.377 199.868 133.173 198.67 cv
132.982 197.552 131.529 197.29 130.755 196.913 cv
128.549 195.84 126.333 194.803 124.097 193.849 cv
119.625 191.941 115.04 190.292 110.365 189.632 cv
102.195 188.479 93.6275 191.14 85.8139 194.156 cv
83.4406 195.072 81.0861 196.092 78.7788 197.279 cv
77.8091 197.778 76.8475 198.307 75.9023 198.885 cv
75.2798 199.266 74.454 200.133 73.7957 200.274 cv
72.3319 209.08 70.4756 217.763 68.273 226.282 cv
63.6049 244.337 57.3925 261.608 50.2276 278.079 cv
42.7026 250.563 36.2307 222.363 33.0947 193.263 cv
32.7225 189.807 32.3969 186.342 32.1216 182.869 cv
32.0364 181.796 30.9689 172.699 31.4513 172.372 cv
31.4193 171.724 31.3792 171.076 31.351 170.426 cv
30.7558 170.426 30.1605 170.403 29.5662 170.358 cv
28.3714 170.269 27.1804 170.095 25.9964 169.86 cv
23.3876 169.342 20.8158 168.533 18.2624 167.652 cv
13.3417 165.955 8.44648 163.945 3.38882 163.13 cv
2.26117 162.948 1.13103 162.848 0 162.811 cv
0 390.302 li
900 390.302 li
900 162.811 li
896.816 162.705 893.625 163.115 890.475 163.759 cv
.67451 .254902 .286275 rgb
f
402.391 409.726 mo
344.253 369.73 286.907 332.517 244.117 297.822 cv
200.77 262.988 171.981 230.674 158.121 197.269 cv
135.86 196.05 112.998 188.856 92.0225 189.091 cv
66.5377 189.362 39.241 197.159 12.2568 199.364 cv
8.98271 206.908 4.88913 214.395 0 221.859 cv
0 402.571 li
27.9809 402.977 56.3404 403.446 84.6854 404.032 cv
199.42 406.005 313.895 409.894 402.391 409.726 cv
.45098 .192157 .301961 rgb
f
0 364.816 mo
0 330.671 li
37.528 301.348 61.3135 274.976 61.5817 274.844 cv
61.5816 274.844 61.5816 274.844 61.5816 274.844 cv
61.5865 274.844 67.5512 279.254 75.6205 287.972 cv
67.4742 316.687 68.864 345.215 70.6774 360.782 cv
67.3814 346.73 62.0204 332.954 53.9384 319.704 cv
53.9384 319.704 li
53.9384 319.704 li
53.9315 319.695 53.9242 319.687 53.9167 319.678 cv
53.8247 319.576 53.6868 319.51 53.5082 319.477 cv
53.4139 319.459 53.3085 319.451 53.1926 319.451 cv
50.57 319.451 42.6522 323.836 39.8931 326.464 cv
39.8931 326.464 li
39.8931 326.464 li
24.2217 338.878 11.496 351.736 0 364.816 cv
0 364.816 li
0 364.816 0 364.816 0 364.816 cv
94.7066 358.627 mo
94.8906 357.325 95.0734 356.03 95.2533 354.756 cv
95.4751 353.25 95.7355 351.782 95.9646 350.365 cv
96.4159 347.53 96.9213 344.922 97.3212 342.692 cv
98.1679 338.244 98.7253 335.315 98.7253 335.315 cv
98.7253 335.315 98.9889 338.282 99.3891 342.788 cv
99.6099 345.036 99.8289 347.669 100.155 350.49 cv
100.293 351.711 100.417 352.972 100.569 354.251 cv
98.6278 355.723 96.6729 357.182 94.7066 358.627 cv
127.8 331.666 mo
124.86 310.269 118.006 290.646 111.422 275.629 cv
120.704 244.976 130.608 223.963 130.285 223.18 cv
131.126 223.879 147.079 239.499 181.171 269.645 cv
179.915 271.557 178.639 273.457 177.348 275.333 cv
176.414 276.672 175.47 278.002 174.516 279.322 cv
174.288 279.646 174.058 279.971 173.829 280.294 cv
173.626 280.286 173.423 280.282 173.218 280.282 cv
171.282 280.282 169.232 280.631 167.107 281.376 cv
168.476 282.233 169.789 283.155 171.07 284.114 cv
169.653 286.043 168.209 287.956 166.745 289.847 cv
166.511 290.15 166.276 290.451 166.041 290.752 cv
165.485 290.098 164.921 289.447 164.348 288.802 cv
159.049 282.837 152.915 277.32 144.253 273.21 cv
144.253 273.21 li
143.091 272.633 142.053 272.394 141.15 272.394 cv
139.752 272.394 138.679 272.967 137.97 273.753 cv
137.424 274.357 137.093 275.087 136.996 275.778 cv
136.955 276.068 136.955 276.351 136.998 276.615 cv
135.276 291.841 135.365 307.092 137.68 322.354 cv
134.449 325.517 131.154 328.62 127.8 331.666 cv
130.285 223.18 mo
130.27 223.168 130.261 223.16 130.255 223.157 cv
130.269 223.157 130.279 223.165 130.285 223.18 cv
.376471 .156863 .27451 rgb
f
137.68 322.354 mo
135.366 307.092 135.277 291.841 136.998 276.615 cv
136.998 276.615 li
136.998 276.615 li
136.955 276.351 136.955 276.068 136.996 275.778 cv
137.093 275.087 137.424 274.357 137.97 273.753 cv
138.679 272.967 139.753 272.394 141.15 272.394 cv
142.053 272.394 143.09 272.633 144.253 273.21 cv
144.253 273.21 li
152.915 277.32 159.049 282.837 164.348 288.802 cv
164.921 289.447 165.485 290.098 166.041 290.752 cv
161.502 296.558 156.776 302.172 151.856 307.596 cv
151.249 308.275 150.639 308.951 150.025 309.625 cv
146.028 313.973 141.909 318.214 137.68 322.354 cv
.337255 .141176 .258824 rgb
f
166.041 290.752 mo
165.485 290.098 164.921 289.447 164.348 288.802 cv
164.921 289.447 165.485 290.098 166.041 290.752 cv
166.041 290.752 li
136.998 276.615 mo
136.955 276.351 136.955 276.068 136.996 275.778 cv
136.955 276.068 136.955 276.351 136.998 276.615 cv
136.998 276.615 li
137.97 273.753 mo
138.679 272.967 139.752 272.394 141.15 272.394 cv
142.053 272.394 143.091 272.633 144.253 273.21 cv
143.09 272.633 142.053 272.394 141.15 272.394 cv
139.753 272.394 138.679 272.967 137.97 273.753 cv
.282353 .113725 .235294 rgb
f
0 402.57 mo
0 402.57 li
0 364.816 li
11.496 351.736 24.2217 338.879 39.8931 326.464 cv
39.8931 326.464 li
39.8931 326.464 li
42.6522 323.836 50.5696 319.451 53.1928 319.451 cv
53.3085 319.451 53.414 319.46 53.5082 319.477 cv
53.6864 319.51 53.8248 319.576 53.9167 319.678 cv
53.9242 319.687 53.9315 319.695 53.9384 319.704 cv
53.9384 319.704 li
53.9384 319.704 li
62.0203 332.954 67.3815 346.73 70.6775 360.782 cv
70.7108 361.068 70.7445 361.352 70.7781 361.629 cv
68.9966 363.314 67.0272 365.404 65.6738 367.5 cv
35.9289 367.5 li
33.4561 360.383 25.6738 352 25.6738 352 cv
25.6738 352 18.061 359.96 15.5018 367.145 cv
12.2556 363.135 7.00723 359.333 7.00723 359.333 cv
7.00723 359.333 3.14707 362.048 0 365.355 cv
0 379.312 li
0 379.312 li
0 402.57 li
.337255 .141176 .258824 rgb
f
0 364.816 mo
0 364.816 li
11.496 351.736 24.2217 338.878 39.8931 326.464 cv
24.2217 338.879 11.496 351.736 0 364.816 cv
70.6775 360.782 mo
67.3815 346.73 62.0203 332.954 53.9384 319.704 cv
62.0204 332.954 67.3814 346.73 70.6774 360.782 cv
70.6776 360.783 70.6773 360.781 70.6775 360.782 cv
39.8931 326.464 mo
42.6522 323.836 50.57 319.451 53.1926 319.451 cv
53.3085 319.451 53.4139 319.459 53.5082 319.477 cv
53.414 319.46 53.3085 319.451 53.1928 319.451 cv
50.5696 319.451 42.6522 323.836 39.8931 326.464 cv
53.9384 319.704 mo
53.9315 319.695 53.9242 319.687 53.9167 319.678 cv
53.9242 319.687 53.9315 319.695 53.9384 319.704 cv
.282353 .113725 .235294 rgb
f
33.4828 196.717 mo
33.4138 196.126 33.3464 195.539 33.28 194.948 cv
51.3453 191.902 74.7716 189.274 92.0225 189.091 cv
73.2122 189.291 53.4131 193.591 33.4828 196.717 cv
level3{
gsave
clp
[-1.30785e-008 -291.304 -291.304 1.30785e-008 450 255.719 ]ct
/6 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~_K0#"Ea?M$?,:Md^i3SpDI'tn>J=rY]kpudCKeAc>.eQQ]4bBZB3DcX=h/*H[q&RLA666L=1;X?[:*+D
?WOO@<jQ+4Z<gP:>ZJ(6<O#_+YZXo/=];M+;m'/"X]AB&<)]nt;QNepX&;iq;,F5g:oR2dW(p0f9i%Z]
:T$i]V+OLZ8ku0Q:8CEUUIS"Q7SKOG9VFjITL2AF6;*q:9:eC@Sj5o>5>%J18Xqn7Rla324%Yl%8=;J/
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~R5mg+3CoPt8=2A-QT.L$3(K8m8!Pu&PVu$r2Fiof8!,Z!O#9@d2+<H]7>j#lMD[hY2+<6U7>3NdKJQ#K
1IQaK7"@$\IPO<>1.6LE7!^RUGVMO/0g^%;6?OtKE\Kh"0LBb46>nMDDD+:l00sA*6"qo:BIuM_/O<r!
6";H3@OscR/3mSn5[Gs+>q80F.mR8f5ZfL$="6I9.R6r^5Z9*s;(4b,.6pWU5Y`[l9d`+s-U(*L5"I%b
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.487685 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.30785e-008 -291.304 -291.304 1.30785e-008 450 255.719 ]ct
clp
/6 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~_83t(^qdb$^V@Ot]tM+m]Y(kg]=Y\e]"5G_\@B&X[^NWQ[^NWP['[3IZa6sCZ*CR=Z*CO;YHP.5Y-+n/
XK8M)XK8J'WiE%tW2QYnVl-GjVP^5eUnjf^USFTZU8"BVTqS-PT:_aJSt2FCSXl=AS=?":R[T\5R@'A/
R$a8.Q^=#(Q'IW"Pa%AqPEM&jOH5E^NJrdRMi*CKLkg_=KnP,3K7\W'It)oqI=-EhH[9s^GB\4RF`heH
EH,r:E,TW3D/=!'C2%BqBP1siARo:[@UW\R?sd5G?!LW=>$4s0='&F'<E)mq;Gg7e:JOVY9he;S8P)HD
~>
<~EcQ/>E,]c8Df0E/Ci!p(Chmd#Bk_6oB4kggAn>L`@q0"X@:<SQ?sd5H?=$oC?!LT<>$>'3=BJ[-=&r=$
<E)mq;GpCj;,L.d:JOVY9he;T9M7uM8P)KE7n6'>7Rfg8779L16:*t(5X.It5<_7o4?GVc3]];^3B/uX
3&iiU2`EZS2`<NN2)R6K2)R3I1c.$G1c.$G1c.$G1c.!D1,:U?1,:U>0ekC;0ekC:0JG170JG170/"t3
0/"t3/hSb//hSb./1`>'/1`>'/1W5$.k<,#.k3"u.Olnt.Oceq.4H\p.4HYn-n$Jl-mp>g-71&d-71&d
~>
<~>[1N=>[1N=>[1N<>$>*5>$>'3=]nm1=]nj/=BJ[,<`W7%<`W7%<E3%!<E3!t<)cgr<)Z[m;GpCj;GpCj
;GpCj;,L1f;,C%a:JXb^:JX_\:/4PZ9he>V9he>U91qoN91qlL8kM]J8kDTG8P)KE84Z9B84Z9A7n6'>
7n6'>7n6$<7Rfj:7Rfj:7Rfj:7R]^56psF26psF26psF26psF16UO4.6UO4.6UO4.6UO4-5s[e&5s[e&
5s[e&5s[e&5X7S"5X7S"5X7S"5X7S"5X.It5<h@s5<h@s5<h@s5<h@s5<h@s5<h@s5<h@s5<_4n4Ztqk
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /6 /Gradient get_res exec grestore
}if
np
12.4273 199.35 mo
12.4248 199.349 12.4223 199.349 12.4197 199.348 cv
17.346 197.932 24.7091 196.393 33.28 194.948 cv
33.3464 195.539 33.4138 196.126 33.4828 196.717 cv
26.4686 197.816 19.4372 198.771 12.4273 199.35 cv
.560784 .207843 .258824 rgb
f
158.865 199.028 mo
158.612 198.441 158.364 197.856 158.121 197.269 cv
158.37 197.853 158.642 198.436 158.899 199.019 cv
158.889 199.022 158.875 199.025 158.865 199.028 cv
158.121 197.269 mo
144.838 196.541 131.341 193.687 118.159 191.553 cv
116.657 191.046 115.145 190.602 113.623 190.246 cv
129.29 191.867 145.503 194.875 158.121 197.269 cv
102.804 189.544 mo
99.5101 189.254 96.251 189.086 93.0348 189.086 cv
92.7177 189.086 92.4055 189.087 92.0892 189.091 cv
92.5568 189.086 93.0251 189.083 93.4979 189.083 cv
96.8947 189.083 100.425 189.21 104.033 189.438 cv
103.623 189.466 103.214 189.502 102.804 189.544 cv
level3{
gsave
clp
[-1.30785e-008 -291.304 -291.304 1.30785e-008 450 255.719 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.30785e-008 -291.304 -291.304 1.30785e-008 450 255.719 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
118.159 191.553 mo
112.982 190.714 107.851 189.987 102.804 189.544 cv
103.214 189.502 103.623 189.466 104.033 189.438 cv
107.182 189.637 110.391 189.912 113.623 190.246 cv
115.145 190.602 116.657 191.046 118.159 191.553 cv
.560784 .207843 .258824 rgb
f
58.3883 205.887 mo
41.782 204.711 25.9821 202.497 12.4273 199.35 cv
19.4372 198.771 26.4686 197.816 33.4828 196.717 cv
53.4131 193.591 73.2122 189.291 92.0225 189.091 cv
92.0225 189.091 li
92.0442 189.091 92.0674 189.091 92.0892 189.091 cv
92.4055 189.087 92.7177 189.086 93.0348 189.086 cv
96.251 189.086 99.5101 189.254 102.804 189.544 cv
107.851 189.987 112.982 190.714 118.159 191.553 cv
131.341 193.687 144.838 196.541 158.121 197.269 cv
158.121 197.269 li
158.121 197.269 li
158.364 197.856 158.612 198.441 158.865 199.028 cv
153.693 200.349 148.228 201.495 142.535 202.473 cv
139.005 202.77 134.048 203.201 128.223 203.751 cv
125.233 203.883 122.023 204.036 118.671 204.211 cv
115.554 204.352 112.334 204.659 109.013 204.659 cv
108.762 204.659 108.51 204.657 108.257 204.653 cv
104.685 204.704 101.059 204.773 97.4627 204.858 cv
96.5637 204.884 95.667 204.91 94.773 204.938 cv
93.877 204.92 92.9845 204.902 92.097 204.887 cv
90.3223 204.86 88.5672 204.838 86.8413 204.821 cv
85.9643 204.829 85.0688 204.834 84.1584 204.834 cv
72.4711 204.834 58.2482 204.129 46.9465 203.437 cv
43.9008 203.221 41.0538 203.031 38.4975 202.87 cv
35.9534 202.664 33.6999 202.491 31.8253 202.35 cv
28.0776 202.068 25.8412 201.917 25.8398 201.916 cv
25.8417 201.916 27.9566 202.208 31.5446 202.721 cv
33.3428 202.969 35.5115 203.274 37.9739 203.627 cv
40.4556 203.923 43.2314 204.259 46.2194 204.635 cv
47.7175 204.81 49.2572 205.04 50.8614 205.189 cv
52.4667 205.333 54.1134 205.486 55.7906 205.644 cv
56.649 205.724 57.5155 205.805 58.3883 205.887 cv
40.1485 197.62 mo
40.308 197.637 47.1636 198.494 56.5353 199.351 cv
66.0049 200.217 78.0454 201.083 88.3413 201.083 cv
88.4473 201.083 88.5517 201.083 88.6573 201.083 cv
109.338 200.901 137.251 196.906 137.131 196.906 cv
137.131 196.906 137.13 196.906 137.13 196.906 cv
136.869 196.865 110.246 192.129 90.1506 192.129 cv
89.6232 192.129 89.1012 192.133 88.5834 192.139 cv
70.8793 192.224 40.4788 197.57 40.1485 197.62 cv
40.1468 197.619 40.1458 197.619 40.1456 197.619 cv
40.1454 197.619 40.1462 197.619 40.1479 197.62 cv
40.1481 197.62 40.1483 197.62 40.1485 197.62 cv
.376471 .156863 .27451 rgb
f
70.419 240.937 mo
66.227 229.912 66.6127 218.322 67.9876 206.632 cv
70.9129 206.787 73.8405 206.953 76.7152 207.129 cv
77.671 207.202 78.6235 207.236 79.5686 207.253 cv
77.7845 218.685 75.2026 230.058 70.419 240.937 cv
.537255 .227451 .352941 rgb
f
178.859 248.438 mo
163.924 233.699 151.63 218.382 142.082 202.965 cv
142.233 202.942 142.381 202.919 142.526 202.896 cv
146.107 202.337 148.24 202.012 148.296 202.003 cv
148.296 202.003 148.297 202.003 148.297 202.003 cv
148.297 202.003 148.296 202.003 148.296 202.003 cv
148.242 202.01 146.298 202.159 142.979 202.436 cv
145.396 202.017 147.775 201.57 150.104 201.083 cv
158.245 216.908 167.697 232.774 178.859 248.438 cv
f
0 252.825 mo
0 244.845 li
6.55144 230.329 14.0579 215.735 20.8574 201.163 cv
24.1318 201.801 27.5071 202.376 30.9613 202.905 cv
21.7449 219.507 11.9626 236.196 0 252.825 cv
f
14.3792 268.941 mo
18.4345 247.186 28.7244 225.483 36.4704 203.695 cv
39.9886 204.165 43.5777 204.587 47.2277 204.951 cv
37.6914 226.108 26.4509 247.385 14.3792 268.941 cv
f
88.3413 201.083 mo
78.0454 201.083 66.0049 200.217 56.5353 199.351 cv
47.1636 198.494 40.308 197.637 40.1485 197.62 cv
40.4788 197.57 70.8793 192.224 88.5834 192.139 cv
89.1012 192.133 89.6232 192.129 90.1506 192.129 cv
110.246 192.129 136.869 196.865 137.13 196.906 cv
137.13 196.906 137.131 196.906 137.131 196.906 cv
137.251 196.906 109.338 200.901 88.6573 201.083 cv
88.5517 201.083 88.4473 201.083 88.3413 201.083 cv
40.1479 197.62 mo
40.1462 197.619 40.1454 197.619 40.1456 197.619 cv
40.1458 197.619 40.1468 197.619 40.1485 197.62 cv
40.1483 197.62 40.1481 197.62 40.1479 197.62 cv
.192157 .121569 .215686 rgb
f
93.7818 207.368 mo
93.114 207.368 92.45 207.361 91.792 207.354 cv
90.0979 207.337 88.4394 207.326 86.8285 207.317 cv
85.218 207.3 83.5609 207.286 81.8697 207.275 cv
81.1092 207.27 80.3414 207.267 79.5686 207.253 cv
79.5916 207.106 79.6142 206.96 79.6369 206.813 cv
81.8781 206.851 84.1263 206.87 86.3715 206.87 cv
105.765 206.87 125.185 205.456 142.535 202.473 cv
142.686 202.461 142.834 202.448 142.979 202.436 cv
142.611 202.5 142.242 202.563 141.873 202.626 cv
141.942 202.738 142.013 202.852 142.082 202.965 cv
140.356 203.23 138.318 203.545 136.031 203.905 cv
134.786 204.097 133.468 204.304 132.086 204.52 cv
131.394 204.628 130.687 204.739 129.965 204.852 cv
129.231 204.923 128.483 204.995 127.722 205.07 cv
124.671 205.353 121.412 205.668 118.033 206.007 cv
116.341 206.171 114.62 206.341 112.88 206.517 cv
111.14 206.696 109.355 206.696 107.581 206.798 cv
104.023 206.943 100.45 207.105 96.9605 207.278 cv
95.8941 207.349 94.8329 207.368 93.7818 207.368 cv
67.9876 206.632 mo
67.3752 206.599 66.763 206.567 66.1513 206.535 cv
65.2697 206.48 64.3849 206.454 63.5112 206.377 cv
62.639 206.293 61.77 206.21 60.9055 206.128 cv
60.0615 206.046 59.222 205.966 58.3883 205.887 cv
61.5693 206.113 64.7788 206.3 68.0092 206.448 cv
68.002 206.509 67.9948 206.571 67.9876 206.632 cv
.670588 .286274 .435294 rgb
f
86.3715 206.87 mo
84.1263 206.87 81.8781 206.851 79.6369 206.813 cv
79.6381 206.805 79.6394 206.797 79.6406 206.789 cv
75.7464 206.726 71.8644 206.605 68.011 206.434 cv
68.0104 206.439 68.0098 206.443 68.0092 206.448 cv
64.7788 206.3 61.5693 206.113 58.3883 205.887 cv
57.5155 205.805 56.649 205.724 55.7906 205.644 cv
54.1134 205.486 52.4667 205.333 50.8614 205.189 cv
49.2572 205.04 47.7175 204.81 46.2194 204.635 cv
43.2314 204.259 40.4556 203.923 37.9739 203.627 cv
35.5115 203.274 33.3428 202.969 31.5446 202.721 cv
27.9566 202.208 25.8417 201.916 25.8398 201.916 cv
25.8412 201.917 28.0776 202.068 31.8253 202.35 cv
33.6999 202.491 35.9534 202.664 38.4975 202.87 cv
41.0538 203.031 43.9008 203.221 46.9465 203.437 cv
58.2482 204.129 72.4711 204.834 84.1584 204.834 cv
85.0688 204.834 85.9643 204.829 86.8413 204.821 cv
88.5672 204.838 90.3223 204.86 92.097 204.887 cv
92.9845 204.902 93.877 204.92 94.773 204.938 cv
95.667 204.91 96.5637 204.884 97.4627 204.858 cv
101.059 204.773 104.685 204.704 108.257 204.653 cv
108.51 204.657 108.762 204.659 109.013 204.659 cv
112.334 204.659 115.554 204.352 118.671 204.211 cv
122.023 204.036 125.233 203.883 128.223 203.751 cv
134.048 203.201 139.005 202.77 142.535 202.473 cv
125.185 205.456 105.765 206.87 86.3715 206.87 cv
.560784 .235294 .396078 rgb
f
79.5686 207.253 mo
78.6235 207.236 77.671 207.202 76.7152 207.129 cv
73.8405 206.953 70.9129 206.787 67.9876 206.632 cv
67.9948 206.571 68.002 206.509 68.0092 206.448 cv
71.8637 206.626 75.7434 206.747 79.6369 206.813 cv
79.6142 206.96 79.5916 207.106 79.5686 207.253 cv
.764706 .337255 .505882 rgb
f
79.6369 206.813 mo
75.7434 206.747 71.8637 206.626 68.0092 206.448 cv
68.0098 206.443 68.0104 206.439 68.011 206.434 cv
71.8644 206.605 75.7464 206.726 79.6406 206.789 cv
79.6394 206.797 79.6381 206.805 79.6369 206.813 cv
.670588 .278431 .462745 rgb
f
142.082 202.965 mo
142.013 202.852 141.942 202.738 141.873 202.626 cv
142.242 202.563 142.611 202.5 142.979 202.436 cv
146.298 202.159 148.242 202.01 148.296 202.003 cv
148.24 202.012 146.107 202.337 142.526 202.896 cv
142.381 202.919 142.233 202.942 142.082 202.965 cv
148.296 202.003 mo
148.296 202.003 148.297 202.003 148.297 202.003 cv
148.297 202.003 148.296 202.003 148.296 202.003 cv
.764706 .337255 .505882 rgb
f
825.636 295.892 mo
782.56 328.626 724.785 362.826 666 399.075 cv
733.009 400.68 814.742 401.334 900 402.571 cv
900 221.859 li
883.911 246.422 859.102 270.726 825.636 295.892 cv
.45098 .192157 .301961 rgb
f
898.373 366.678 mo
893.831 358.648 889.235 350.635 884.648 342.627 cv
888.926 339.383 893.106 336.131 897.122 332.909 cv
898.092 332.161 899.047 331.416 900 330.671 cv
900 364.816 li
899.455 365.436 898.912 366.057 898.373 366.678 cv
.376471 .156863 .27451 rgb
f
898.551 366.994 mo
898.492 366.888 898.432 366.784 898.373 366.678 cv
898.913 366.057 899.455 365.437 900 364.816 cv
900 365.355 li
899.492 365.889 899.003 366.438 898.551 366.994 cv
.337255 .141176 .258824 rgb
f
898.373 366.678 mo
898.373 366.678 li
898.912 366.057 899.455 365.436 900 364.816 cv
900 364.816 li
899.455 365.437 898.913 366.057 898.373 366.678 cv
.282353 .113725 .235294 rgb
f
863.716 305.593 mo
862.328 303.073 860.949 300.551 859.583 298.028 cv
865.605 293.981 871.517 289.996 877.304 286.071 cv
876.82 287.804 875.795 289.844 874.661 291.351 cv
871.22 296.137 867.567 300.882 863.716 305.593 cv
.411765 .176471 .286274 rgb
f
850.801 281.428 mo
850.129 280.124 849.462 278.821 848.799 277.516 cv
863.565 265.076 876.17 252.778 886.049 240.565 cv
876.897 254.428 865.062 267.991 850.801 281.428 cv
.627451 .266667 .403922 rgb
f
892.414 262.975 mo
894.693 256.95 897.265 250.904 900 244.845 cv
900 252.825 li
897.564 256.211 895.045 259.595 892.414 262.975 cv
.537255 .227451 .352941 rgb
f
607.408 334.424 mo
593.069 300.973 577.875 265.538 579.071 225.87 cv
559.63 228.363 540.262 227.096 520.674 225.829 cv
508.227 225.024 495.692 224.219 482.993 224.378 cv
443.282 224.861 404.576 230.826 365.943 225.87 cv
367.14 265.537 351.945 300.974 337.606 334.424 cv
322.936 367.981 309.121 399.552 305.448 433.939 cv
339.813 455.332 371.696 470.683 402.498 480 cv
542.516 480 li
573.318 470.683 605.201 455.332 639.567 433.939 cv
635.893 399.552 622.078 367.981 607.408 334.424 cv
.576471 .25098 .345098 rgb
f
411.483 325.889 mo
402.699 317.527 394.34 308.743 386.488 299.495 cv
387.171 296.508 387.871 293.523 388.585 290.547 cv
390.769 289.247 392.852 287.832 394.755 286.373 cv
393.131 286.026 391.482 285.707 389.826 285.442 cv
393.443 270.754 397.434 256.196 401.828 241.79 cv
402.495 241.933 403.163 242.075 403.832 242.217 cv
402.311 267.356 400.785 292.314 405.164 318.23 cv
408.376 293.619 413.11 269.366 418.838 245.191 cv
422.351 245.84 425.876 246.457 429.407 247.038 cv
422.899 273.249 416.869 299.523 411.483 325.889 cv
.498039 .207843 .321569 rgb
f
496.118 367.5 mo
489.207 367.5 li
489.294 367.102 489.341 366.712 489.341 366.333 cv
489.341 360.527 478.34 352 478.34 352 cv
478.34 352 473.416 355.587 470.157 359.854 cv
467.306 355.805 464.341 352.667 464.341 352.667 cv
464.341 352.667 463.263 353.774 461.782 355.532 cv
458.479 349.621 454.773 344.166 450.083 339.821 cv
448.292 341.928 446.556 344.077 444.87 346.267 cv
444.425 346.773 443.901 347.385 443.332 348.083 cv
445.876 323.609 448.957 299.118 451.907 274.634 cv
452.98 279.225 454.407 283.775 456.269 288.263 cv
460.057 276.416 462.516 264.018 464.305 251.502 cv
475.541 252.498 486.8 253.041 498.036 253.041 cv
511.71 253.041 525.346 252.236 538.855 250.459 cv
545.883 277.675 553.867 304.539 562.363 331.227 cv
561.05 333.528 559.738 335.823 558.421 338.125 cv
549.054 316.205 538.177 295.265 525.063 276.028 cv
517.841 290.1 511.932 304.817 507.184 319.976 cv
504.427 314.253 501.636 308.397 499.208 302.696 cv
499.208 302.696 li
498.353 303.314 497.523 303.922 496.777 304.446 cv
496.777 304.446 li
496.438 304.683 496.115 304.905 495.818 305.097 cv
494.836 305.76 494.19 306.202 494.19 306.202 cv
494.19 306.202 494.66 305.571 495.377 304.619 cv
495.708 304.198 496.077 303.696 496.468 303.154 cv
496.468 303.154 li
496.468 303.154 li
496.705 302.828 496.95 302.486 497.2 302.136 cv
497.451 301.787 497.707 301.431 497.966 301.075 cv
498.084 300.909 498.2 300.743 498.318 300.578 cv
498.318 300.578 li
498.318 300.578 li
496.257 295.612 494.506 290.803 493.173 286.381 cv
489.109 273.251 489.219 263.538 489.179 263.538 cv
489.179 263.538 489.179 263.538 489.179 263.538 cv
483.803 280.109 484.541 296.739 486.156 313.432 cv
487.159 313.728 488.107 313.971 488.883 314.154 cv
489.452 314.289 489.925 314.369 490.258 314.441 cv
490.592 314.508 490.781 314.545 490.781 314.545 cv
490.781 314.545 490.599 314.57 490.277 314.613 cv
489.955 314.651 489.493 314.727 488.929 314.781 cv
488.196 314.852 487.288 314.922 486.306 314.959 cv
487.348 325.422 488.67 335.91 488.974 346.424 cv
489.069 349.695 489.065 352.968 488.923 356.243 cv
488.859 356.705 488.813 357.162 488.858 357.578 cv
488.777 359.05 488.667 360.522 488.525 361.994 cv
488.525 361.994 li
488.525 361.994 488.525 361.994 488.525 361.994 cv
489.75 362.076 490.976 362.114 492.196 362.114 cv
493.832 362.114 495.458 362.046 497.056 361.926 cv
496.729 363.781 496.417 365.638 496.118 367.5 cv
545.928 359.965 mo
542.334 347.193 540.786 332.297 527.689 324.72 cv
526.928 324.254 526.183 324.053 525.474 324.053 cv
522.487 324.053 520.136 327.605 519.969 329.828 cv
518.891 333.66 517.909 337.486 517.016 341.307 cv
517.016 341.307 li
517.909 337.486 518.891 333.66 519.969 329.828 cv
520.136 327.606 522.487 324.053 525.473 324.053 cv
526.183 324.053 526.928 324.253 527.689 324.72 cv
540.786 332.296 542.334 347.193 545.928 359.965 cv
545.928 359.965 li
f
512.209 367.5 mo
509.054 367.5 li
509.041 366.249 508.967 365.003 508.839 363.759 cv
508.718 362.596 508.55 361.436 508.34 360.279 cv
510.199 359.89 511.926 359.475 513.479 359.067 cv
513.012 361.883 512.59 364.692 512.209 367.5 cv
504.1 367.5 mo
496.118 367.5 li
496.417 365.638 496.729 363.781 497.056 361.926 cv
498.737 361.8 500.387 361.617 501.988 361.395 cv
502.137 361.374 502.286 361.353 502.434 361.332 cv
502.475 361.326 502.516 361.32 502.557 361.314 cv
502.791 361.279 503.026 361.244 503.258 361.208 cv
503.795 361.124 504.326 361.037 504.849 360.947 cv
504.833 361.331 504.811 361.714 504.785 362.098 cv
504.721 363.009 504.629 363.92 504.511 364.831 cv
504.397 365.72 504.258 366.61 504.1 367.5 cv
456.998 361.99 mo
455.139 354.183 446.341 344.667 446.341 344.667 cv
446.341 344.667 445.762 345.255 444.87 346.267 cv
446.556 344.077 448.292 341.928 450.083 339.821 cv
454.773 344.166 458.479 349.621 461.782 355.532 cv
460.36 357.22 458.566 359.507 456.998 361.99 cv
545.928 359.965 mo
542.334 347.193 540.786 332.296 527.689 324.72 cv
526.928 324.253 526.183 324.053 525.473 324.053 cv
522.487 324.053 520.136 327.606 519.969 329.828 cv
518.891 333.66 517.909 337.486 517.016 341.307 cv
516.801 340.78 516.579 340.247 516.352 339.709 cv
515.214 337.009 513.942 334.179 512.576 331.256 cv
512.576 331.256 li
511.096 331.747 509.689 332.221 508.598 332.631 cv
508.598 332.631 li
508.598 332.631 li
508.56 332.645 508.522 332.659 508.485 332.672 cv
508.484 332.673 508.483 332.673 508.482 332.674 cv
507.163 333.152 506.288 333.472 506.25 333.486 cv
506.263 333.476 506.381 333.395 506.583 333.255 cv
506.928 333.016 507.52 332.607 508.267 332.092 cv
508.267 332.092 li
509.078 331.519 510.093 330.852 511.179 330.152 cv
511.402 330.008 511.627 329.863 511.854 329.718 cv
511.854 329.718 li
511.854 329.718 li
511.854 329.718 li
511.007 327.922 510.131 326.094 509.241 324.244 cv
508.562 322.833 507.874 321.409 507.184 319.976 cv
511.932 304.817 517.841 290.1 525.063 276.028 cv
538.177 295.265 549.054 316.205 558.421 338.125 cv
554.259 345.397 550.077 352.679 545.928 359.965 cv
.431373 .172549 .298039 rgb
f
541.653 367.5 mo
512.209 367.5 li
512.59 364.692 513.013 361.883 513.479 359.067 cv
518.581 357.728 521.828 356.47 521.838 356.469 cv
521.838 356.47 521.838 356.47 521.838 356.47 cv
521.838 356.47 li
521.838 356.47 li
521.838 356.47 li
521.838 356.47 li
521.838 356.469 521.838 356.469 521.838 356.469 cv
521.838 356.469 li
521.838 356.469 li
521.838 356.469 li
521.334 353.747 520.447 350.562 519.203 347.028 cv
519.203 347.028 li
518.565 345.209 517.831 343.297 517.016 341.307 cv
517.909 337.486 518.891 333.66 519.969 329.828 cv
520.136 327.605 522.487 324.053 525.474 324.053 cv
526.183 324.053 526.928 324.254 527.689 324.72 cv
540.786 332.297 542.334 347.193 545.928 359.965 cv
544.5 362.474 543.073 364.988 541.653 367.5 cv
.396078 .152941 .286274 rgb
f
512.209 367.5 mo
512.209 367.5 li
512.59 364.692 513.012 361.883 513.479 359.067 cv
513.479 359.067 li
513.013 361.883 512.59 364.692 512.209 367.5 cv
.341176 .129412 .266667 rgb
f
579.023 227.954 mo
579.033 227.334 579.047 226.707 579.065 226.085 cv
579.049 226.707 579.057 227.324 579.045 227.946 cv
579.036 227.949 579.032 227.951 579.023 227.954 cv
.584314 .211765 .266667 rgb
f
422.544 227.235 mo
422.544 227.233 422.544 227.235 422.544 227.233 cv
432.91 226.757 443.312 226.073 453.77 225.49 cv
453.77 225.491 li
443.312 226.074 432.91 226.758 422.544 227.235 cv
level3{
gsave
clp
[-1.30785e-008 -291.304 -291.304 1.30785e-008 450 255.719 ]ct
/7 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~a`Lq4F(!(0?cR1oa)PJ,DdUJ$?,^\e`,8kuCg=hm>f(5\_.d/jBNr8c>JOiT^1CH]A6HTU=hS<J]4+mS
?s($J=Lqj@\R/FK?!"O@=1;@5[TZ\>>#ht5<O>h-ZrU26<E6A)<3fJ&Yu=W+;,XSo;QikoY"qru:/S,f
;6<MhX%Q9i92MW[:o[&_W(0U]7o$!Q:8^NTVF4.U6;=:C9r('JUHqPJ5>._78teC?Tfbr@4A)8.8Y8"7
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~T/fK73D#f%8Y%h4S2a'/3(TMt8=MP/RQ!d*2b98n8<u/)Pr;-r2File8!#SuN\s=d2+NQ\7uB)mLbhMV
1Id'S7YEQeJholJ1IcpM7Xd']Hne$90gp@B7!UISFtc=,0LU%:6ut"LE\Bdu010Y16Z"GCCbA(i/jj;(
6Y@u<Ah?>\/OEqt6=MH3?n4QN.mdMk6<l!,=t2g@.R@,b5uoF#<%1+3.7$fZ5u8sq:FJG%-pL?P5>!:f
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.487685 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.30785e-008 -291.304 -291.304 1.30785e-008 450 255.719 ]ct
clp
/7 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~aN2HDa2c3>`l?$;`5KU4_o'@._83t(^qdb$^V@Ot]tM+m]Y(nh]"5Ja]"5G_\@B&Y\$rfS[C*EM['[0G
Za7!EZEga?Yct=7Y-+q1Xf\_-XK8M(WiE)!WMukqVl-GjVl-DhV5:#bUna]ZU8"BUTqJ'OTV.sMT:VXF
SXl=BS=H(<R[T\6R[TY4R$X,)Q'IStP*(ifOH5E]NJrdQMM[.ELPLS:KS+l-JUrB&IsufnH[C'bH?jaY
F`heJFE;JCEH#f5DJa6,Chmd"BP1siAn>Oa@q&nU?sd8I?!LW>>?Y04=BAO(<E)mq;Gg7e:JX_[9M7uM
~>
<~F)uABEH,u<E,TW3D/F-,D/=!'C2.HsBP;$kB4b^dA7T1[@U`eU@:3GL?=$rE?<pf@>?Y04=]nm1=BAO(
<E3!t;c?Un;Gg7e:JX_\:/4MX9MA)P8kM]I84Z6@7Rfj:7R]^56UF()5sR\#5<_7o4Zkhg4$,Mb3B/uX
3&iiU2`EZS2`EWQ2E!HO2E!EM2)R6K2)R3I1c.$G1c.!D1,:U?1,:U?1,:U?1,:R<0JG170JG170/"t3
0/"t3/hSb//hSb//M/P+/M/P+/M&G(/1`>'.k3"u.Olnt.Oceq.4H\p.4HYn-n$Jl-n$Gj-RU8h-RU5f
~>
<~?XI/I?=$rE?=$rD>[1N=>[1K;>?b<9>?b97>$>*4=BJ[-=BJ[-='&I)='&F'<`W7%<`N*u<)cgr<)cgr
<)cgr;c?Un;c6Ii;,L1f;,L.d:f'tb:JXb^:JXb]9he>V9he;T9MA,R9M.oL8kM]I8P)KF8P)KE84Z9B
84Z9B84Z6@7n6'>7n6'>7n6'>7n6$<7Rfj:7Rfj:7Rfj:7Rfj977BX677BX677BX677BX56UO4.6UO4.
6UO4.6UO4.6:+"*6:+"*6:+"*6:+"*6:!n'5s[e&5s[e&5s[e&5s[b$5X7S"5X7S"5X7S"5X.Fr5!D.o
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /7 /Gradient get_res exec grestore
}if
np
399.608 227.826 mo
388.446 227.827 377.318 227.316 366.19 225.902 cv
366.186 225.9 366.184 225.899 366.18 225.897 cv
377.311 227.313 388.448 227.824 399.616 227.824 cv
407.243 227.824 414.883 227.585 422.544 227.233 cv
422.544 227.235 422.544 227.233 422.544 227.235 cv
414.882 227.587 407.237 227.826 399.608 227.826 cv
453.77 225.491 mo
453.77 225.49 li
463.459 224.95 473.197 224.497 482.993 224.378 cv
473.196 224.498 463.459 224.95 453.77 225.491 cv
482.993 224.378 mo
483.611 224.371 484.228 224.365 484.845 224.362 cv
484.228 224.365 483.611 224.371 482.993 224.378 cv
.584314 .211765 .266667 rgb
f
444.927 244.677 mo
436.566 243.79 428.197 242.549 419.85 240.96 cv
419.852 240.954 419.853 240.947 419.855 240.941 cv
414.603 239.936 409.357 238.789 404.115 237.512 cv
404.114 237.525 404.113 237.536 404.112 237.549 cv
401.344 236.876 398.57 236.163 395.805 235.413 cv
395.808 235.4 395.811 235.386 395.815 235.373 cv
390.552 233.946 385.295 232.391 380.049 230.694 cv
380.048 230.703 380.048 230.712 380.047 230.721 cv
375.424 229.222 370.8 227.614 366.19 225.902 cv
377.318 227.316 388.446 227.827 399.608 227.826 cv
407.237 227.826 414.882 227.587 422.544 227.235 cv
432.91 226.758 443.312 226.074 453.77 225.491 cv
463.459 224.95 473.196 224.498 482.993 224.378 cv
482.993 224.378 li
482.993 224.378 li
483.611 224.371 484.228 224.365 484.845 224.362 cv
485.325 224.359 485.805 224.358 486.285 224.358 cv
497.858 224.358 509.303 225.094 520.672 225.829 cv
532.043 226.565 543.338 227.3 554.619 227.3 cv
562.771 227.3 570.915 226.916 579.071 225.87 cv
579.069 225.942 579.067 226.014 579.065 226.085 cv
579.047 226.707 579.033 227.334 579.023 227.954 cv
574.328 229.662 569.614 231.253 564.901 232.72 cv
564.9 232.711 564.899 232.702 564.898 232.693 cv
560.691 233.999 556.476 235.201 552.259 236.32 cv
552.264 236.334 552.268 236.348 552.273 236.362 cv
552.105 236.407 551.943 236.45 551.775 236.494 cv
546.756 237.594 540.116 238.824 532.553 240.075 cv
530.432 240.393 528.237 240.715 525.983 241.035 cv
523.729 241.351 521.42 241.702 519.059 241.939 cv
514.34 242.44 509.45 243.035 504.486 243.333 cv
502.006 243.511 499.509 243.68 497.01 243.837 cv
494.512 243.94 492.01 244.032 489.52 244.113 cv
488.275 244.156 487.034 244.194 485.796 244.232 cv
484.56 244.242 483.327 244.247 482.101 244.252 cv
480.622 244.26 479.152 244.263 477.694 244.263 cv
476.736 244.263 475.784 244.262 474.837 244.259 cv
466.463 244.083 456.858 243.756 447.157 242.807 cv
437.453 241.931 427.642 240.619 418.862 239.123 cv
410.078 237.669 402.327 236.069 396.762 234.895 cv
391.212 233.697 387.847 232.924 387.833 232.924 cv
387.833 232.924 387.833 232.924 387.833 232.924 cv
387.833 232.924 li
387.833 232.924 387.833 232.924 387.833 232.924 cv
387.833 232.924 li
387.84 232.924 391.09 233.813 396.485 235.222 cv
401.894 236.598 409.454 238.477 418.111 240.241 cv
426.354 241.967 435.601 243.529 444.927 244.677 cv
404.739 232.358 mo
405.312 232.654 445.328 242.66 473.028 242.66 cv
473.594 242.66 474.154 242.656 474.709 242.648 cv
475.065 242.651 475.426 242.653 475.787 242.653 cv
503.602 242.653 544.416 232.216 544.725 231.981 cv
544.727 231.981 544.727 231.98 544.726 231.98 cv
544.726 231.98 544.726 231.981 544.725 231.981 cv
544.723 231.982 544.719 231.982 544.713 231.982 cv
543.88 231.982 505.791 227.751 474.758 227.564 cv
447.731 228.002 406.395 232.359 404.781 232.36 cv
404.76 232.36 404.746 232.359 404.739 232.358 cv
404.735 232.356 404.733 232.354 404.733 232.353 cv
404.731 232.355 404.733 232.357 404.739 232.358 cv
.498039 .207843 .321569 rgb
f
451.907 274.634 mo
449.641 264.936 448.952 255.051 449.071 245.171 cv
454.453 245.772 459.821 246.17 464.994 246.428 cv
464.775 248.121 464.546 249.813 464.305 251.502 cv
461.117 251.219 457.928 250.9 454.746 250.547 cv
453.829 258.573 452.875 266.605 451.907 274.634 cv
.658823 .298039 .403922 rgb
f
456.269 288.263 mo
454.407 283.775 452.98 279.225 451.907 274.634 cv
452.875 266.605 453.829 258.573 454.746 250.547 cv
457.928 250.9 461.117 251.219 464.305 251.502 cv
462.516 264.018 460.057 276.416 456.269 288.263 cv
.596078 .247059 .376471 rgb
f
573.909 287.156 mo
565.755 271.599 558.297 254.528 552.41 236.777 cv
552.654 236.713 552.893 236.65 553.129 236.588 cv
558.516 235.159 561.761 234.258 561.769 234.258 cv
561.769 234.258 li
561.769 234.258 li
561.769 234.258 li
561.769 234.258 li
561.755 234.258 558.692 234.969 553.518 236.102 cv
553.118 236.195 552.705 236.288 552.28 236.383 cv
552.278 236.376 552.275 236.369 552.273 236.362 cv
556.489 235.243 560.697 234.03 564.901 232.72 cv
567.488 251.211 570.477 269.505 573.909 287.156 cv
.658823 .298039 .403922 rgb
f
552.273 236.362 mo
552.268 236.348 552.264 236.334 552.259 236.32 cv
556.476 235.201 560.691 233.999 564.898 232.693 cv
564.899 232.702 564.9 232.711 564.901 232.72 cv
560.697 234.03 556.489 235.243 552.273 236.362 cv
.596078 .247059 .376471 rgb
f
382.976 295.257 mo
382.628 294.828 382.283 294.401 381.938 293.971 cv
382.423 293.759 382.906 293.54 383.389 293.313 cv
383.252 293.962 383.115 294.608 382.976 295.257 cv
385.148 284.863 mo
383.876 284.757 382.61 284.698 381.355 284.698 cv
380.483 284.698 379.616 284.726 378.759 284.788 cv
378.681 282.946 378.62 281.107 378.574 279.27 cv
378.588 279.254 378.601 279.24 378.614 279.225 cv
384.678 272.367 383.652 262.967 381.308 254.755 cv
380.384 255.866 379.496 256.989 378.651 258.129 cv
378.915 248.976 379.435 239.848 380.047 230.721 cv
385.296 232.424 390.542 233.986 395.805 235.413 cv
391.743 251.89 388.517 268.477 385.148 284.863 cv
.658823 .298039 .403922 rgb
f
395.805 235.413 mo
390.542 233.986 385.296 232.424 380.047 230.721 cv
380.048 230.712 380.048 230.703 380.049 230.694 cv
385.295 232.391 390.552 233.946 395.815 235.373 cv
395.811 235.386 395.808 235.4 395.805 235.413 cv
.596078 .247059 .376471 rgb
f
418.838 245.191 mo
413.814 244.263 408.812 243.269 403.832 242.217 cv
403.926 240.661 404.02 239.106 404.112 237.549 cv
409.355 238.824 414.598 239.961 419.85 240.96 cv
419.509 242.37 419.172 243.78 418.838 245.191 cv
.658823 .298039 .403922 rgb
f
405.164 318.23 mo
400.785 292.314 402.311 267.356 403.832 242.217 cv
408.812 243.269 413.814 244.263 418.838 245.191 cv
413.11 269.366 408.376 293.619 405.164 318.23 cv
.596078 .247059 .376471 rgb
f
419.85 240.96 mo
414.598 239.961 409.355 238.824 404.112 237.549 cv
404.113 237.536 404.114 237.525 404.115 237.512 cv
409.357 238.789 414.603 239.936 419.855 240.941 cv
419.853 240.947 419.852 240.954 419.85 240.96 cv
f
473.028 242.66 mo
445.328 242.66 405.312 232.654 404.739 232.358 cv
404.746 232.359 404.76 232.36 404.781 232.36 cv
406.395 232.359 447.731 228.002 474.758 227.564 cv
505.791 227.751 543.88 231.982 544.713 231.982 cv
544.719 231.982 544.723 231.982 544.725 231.981 cv
544.416 232.216 503.602 242.653 475.787 242.653 cv
475.426 242.653 475.065 242.651 474.709 242.648 cv
474.154 242.656 473.594 242.66 473.028 242.66 cv
404.739 232.358 mo
404.733 232.357 404.731 232.355 404.733 232.353 cv
404.733 232.354 404.735 232.356 404.739 232.358 cv
544.725 231.981 mo
544.726 231.981 544.726 231.98 544.726 231.98 cv
544.727 231.98 544.727 231.981 544.725 231.981 cv
.25098 .160784 .254902 rgb
f
476.586 246.777 mo
475.973 246.777 475.364 246.775 474.76 246.772 cv
471.62 246.705 468.348 246.596 464.994 246.428 cv
465.007 246.331 465.019 246.235 465.031 246.138 cv
459.712 245.934 454.392 245.581 449.072 245.088 cv
449.072 245.116 449.071 245.143 449.071 245.171 cv
448.151 245.068 447.231 244.959 446.31 244.844 cv
445.849 244.789 445.388 244.734 444.927 244.677 cv
455.38 245.786 465.836 246.343 476.29 246.343 cv
501.534 246.343 526.747 243.092 551.775 236.494 cv
551.945 236.457 552.113 236.42 552.28 236.383 cv
552.323 236.514 552.367 236.645 552.41 236.777 cv
551.257 237.079 550.015 237.403 548.693 237.746 cv
547.092 238.162 545.363 238.529 543.537 238.951 cv
541.71 239.363 539.783 239.792 537.772 240.233 cv
536.766 240.454 535.74 240.675 534.694 240.9 cv
533.646 241.101 532.578 241.302 531.494 241.505 cv
529.325 241.905 527.088 242.308 524.802 242.711 cv
523.657 242.91 522.501 243.108 521.334 243.306 cv
520.164 243.476 518.984 243.644 517.796 243.812 cv
515.417 244.144 513.005 244.471 510.575 244.789 cv
508.146 245.114 505.691 245.308 503.239 245.554 cv
494.1 246.483 484.926 246.777 476.586 246.777 cv
.784314 .372549 .494118 rgb
f
476.29 246.343 mo
465.836 246.343 455.38 245.786 444.927 244.677 cv
435.601 243.529 426.354 241.967 418.111 240.241 cv
409.454 238.477 401.894 236.598 396.485 235.222 cv
391.09 233.813 387.84 232.924 387.833 232.924 cv
387.833 232.924 387.833 232.924 387.833 232.924 cv
387.847 232.924 391.212 233.697 396.762 234.895 cv
402.327 236.069 410.078 237.669 418.862 239.123 cv
427.642 240.619 437.453 241.931 447.157 242.807 cv
456.858 243.756 466.463 244.083 474.837 244.259 cv
475.784 244.262 476.736 244.263 477.694 244.263 cv
479.152 244.263 480.622 244.26 482.101 244.252 cv
483.327 244.247 484.56 244.242 485.796 244.232 cv
487.034 244.194 488.275 244.156 489.52 244.113 cv
492.01 244.032 494.512 243.94 497.01 243.837 cv
499.509 243.68 502.006 243.511 504.486 243.333 cv
509.45 243.035 514.34 242.44 519.059 241.939 cv
521.42 241.702 523.729 241.351 525.983 241.035 cv
528.237 240.715 530.432 240.393 532.553 240.075 cv
540.116 238.824 546.756 237.594 551.775 236.494 cv
526.747 243.092 501.534 246.343 476.29 246.343 cv
.741176 .309804 .462745 rgb
f
464.994 246.428 mo
459.821 246.17 454.453 245.772 449.071 245.171 cv
449.071 245.143 449.072 245.116 449.072 245.088 cv
454.392 245.581 459.712 245.934 465.031 246.138 cv
465.019 246.235 465.007 246.331 464.994 246.428 cv
.827451 .443137 .580392 rgb
f
552.41 236.777 mo
552.367 236.645 552.323 236.514 552.28 236.383 cv
552.705 236.288 553.118 236.195 553.518 236.102 cv
558.692 234.969 561.755 234.258 561.769 234.258 cv
561.769 234.258 li
561.761 234.258 558.516 235.159 553.129 236.588 cv
552.893 236.65 552.654 236.713 552.41 236.777 cv
561.769 234.258 mo
561.769 234.258 li
561.769 234.258 li
561.769 234.258 li
f
387.833 232.924 mo
387.833 232.924 387.833 232.924 387.833 232.924 cv
387.833 232.924 li
387.833 232.924 li
.741176 .309804 .462745 rgb
f
370.915 279.321 mo
336.012 231.067 314.865 169.475 300.203 96.5464 cv
297.007 95.692 282.724 91.6705 275.841 91.8141 cv
267.48 92.0813 249.507 93.4761 245.228 96.5464 cv
230.566 169.474 209.42 231.066 174.516 279.322 cv
142.901 324.29 98.4671 359.18 50.8422 387.761 cv
113.785 443.538 195.671 475.564 272.716 475.03 cv
349.76 475.564 431.646 443.538 494.589 387.761 cv
446.964 359.18 402.53 324.29 370.915 279.321 cv
.388235 .196078 .364706 rgb
f
300.357 97.3095 mo
300.306 97.056 300.254 96.8001 300.203 96.5464 cv
300.255 96.801 300.308 97.052 300.359 97.3061 cv
300.359 97.3072 300.358 97.3084 300.357 97.3095 cv
level3{
gsave
clp
[-1.30785e-008 -291.304 -291.304 1.30785e-008 450 255.719 ]ct
/8 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~k(7%'JRRVi?fQZDidP7oI:(o[?Jg*9hg8\cH!T3M?/0X0gNHlVFBmL@>hF+&f5b'GE*Ch2>1IOpdr&=;
Cg#2%=j^tdctZ\/Bir\o=NtGZb[jl"AQR#a<Q\cNa^J2j?WG-Q<5r6D`EcH]>Z8OD;o2[9_HBgQ=Alq8
;SQ40]i7hA<)C5*:qKS$\kl25:J\Ms:Ua(o[S0H)92;le::*PcZUdcq7ng0W9<^fWYX;'e6VFOJ9!(?N
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~X[#L[5YA(A8ub*JWBWtR5=qe;8Z+aDVERSI5"VM48YS@>Tfko;4\)&)8"2S1RQF$+4%GSt8!Q,*PWD9s
3_#2k7ZKJuNB'Ie3C\lb7YiumL,VPT2arBX7>!KeJ2TiG2FW$O7=6s]HSn392+2XE7!:@SF>H=+1IQ1;
6uOhKDDFRr1.,h36YS8BBJDkd0gfM+6Xh`:@5'uT0L9"t6!Z*/>:r3E/jWSk6!#X(<@pI7/O3/a5Ys!s
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.487685 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.30785e-008 -291.304 -291.304 1.30785e-008 450 255.719 ]ct
clp
/8 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~jlPRaj5].YiSibRhr!;IhVHuBgY:K;g=k65f\"g-f%/C%e^`0udaHRldF$=fcd0n^cHXSWbKJ)OaiVZH
aN2EB`l?!:`5KR2_SX.*_8*h#^V@Lr]Y(ni]=YYc\[f5[\@8oT[C*EM['R*EZE^[=Yck76YHG"/XK8M(
X/i8#WMuhpW2QVlVP^2cUSFQXTqS-OSXl:@S!oe5Q^3r&Q'@MsP*(ieNfB$WN/NRMM26qAKnY25K7ec+
It)oqI!g9fH?j^YG'8%OFE;MCE,TZ4DJa6,CMIQsBP1pgARo:[@:<PO?X@#D>[(B7=BJX+<`N*t;Gg7e
~>
<~JUr?%It)rsI=6KjH[C'bH?ja[GB\4RF`_\GF)uABEH#i7DJj?0D/=!'C2.HsBk_6nAnGUcA7T4\@U`bS
?sd5H?!U`A>[1K:=]nj/=BJX*<E3!t;c?Um;,L.d:JX_\:/4MW91qlL8Ol9@7n,s:6pj=.6:+")5X.It
5<h=q5!D.o5!D+m4Ztqk4Ztni4?P_g4?GSb3]];_3]];^3B9)[3B9)Z3&ilW3&iiT2E!HO2E!HO2)R6K
2)R6K1c.$G1c.$F1,:U?1,:U?1,1L<0ekC;0eb:80JG170J>(40/"t30.nh./M/P+/M/M)/1`>'/1`;%
~>
<~?smAL?=$rE?=$rE?!U`A?!U]?>[1N=>[1K;>?b<8=]nm1=]nm1=BJ[-=BJX+='&I)='&F'<`W7$<)cgr
<)cgr;c?Un;c?Rl;GpCj;Gp@h;,L1e:JXb^:JXb^:/4PZ:/4MX9he>V9hS,P91qoM8kM]J8kM]I8P)KF
8P)KF8P)HD84Z9B84Z9B84Z9B84Q-=7Rfj:7Rfj:7Rfj:7Rfj977BX677BX677BX677BX66psF26psF2
6psF26psF26UO4.6UO4.6UO4.6UO4.6UF++6:+"*6:+"*6:+"*6:!k%5X7S"5X7S"5X7S"5X7Ou5<h@s
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /8 /Gradient get_res exec grestore
}if
np
277.007 112.681 mo
264.23 112.681 253.958 105.294 245.419 96.4238 cv
250.002 93.4399 267.593 92.0777 275.841 91.8143 cv
275.961 91.8118 276.084 91.8105 276.209 91.8105 cv
283.221 91.8105 297.063 95.707 300.203 96.5464 cv
300.203 96.5464 li
300.254 96.8001 300.306 97.056 300.357 97.3095 cv
295.174 106.296 287.139 112.681 277.007 112.681 cv
.501961 .25098 .458824 rgb
f
324.628 367.5 mo
314.563 367.5 li
314.243 367.18 313.96 366.904 313.726 366.678 cv
313.466 363.485 313.027 360.294 312.447 357.12 cv
312.197 355.755 311.921 354.394 311.622 353.037 cv
314.868 352.656 317.74 352.147 320.058 351.66 cv
321.566 357.029 323.088 362.301 324.628 367.5 cv
307.462 367.5 mo
302.671 367.5 li
301.918 366.244 301.1 365.022 300.289 363.886 cv
299.637 360.477 298.993 357.043 298.356 353.577 cv
299.427 353.622 300.487 353.642 301.531 353.642 cv
302.838 353.642 304.121 353.61 305.373 353.552 cv
306.214 353.512 307.041 353.461 307.851 353.4 cv
307.864 354.031 307.87 354.661 307.87 355.29 cv
307.87 356.099 307.86 356.907 307.843 357.714 cv
307.842 357.746 307.841 357.778 307.841 357.811 cv
307.77 361.046 307.586 364.269 307.462 367.5 cv
269.147 367.5 mo
268.341 367.5 li
265.142 363.06 261.007 359.333 261.007 359.333 cv
261.007 359.333 259.16 360.898 256.979 363.251 cv
256.338 361.317 255.696 359.39 255.056 357.467 cv
254.956 353.82 254.871 350.151 254.799 346.464 cv
267.543 343.626 275.985 340.41 276.023 340.41 cv
276.023 340.41 276.023 340.41 276.023 340.41 cv
276.023 340.41 276.023 340.41 276.023 340.41 cv
276.023 340.41 li
276.023 340.41 li
276.023 340.41 li
276.023 340.41 li
275.87 339.889 275.713 339.358 275.552 338.816 cv
274.512 335.312 273.329 331.404 272.113 327.164 cv
271.832 326.183 271.548 325.183 271.264 324.166 cv
271.264 324.166 li
268.979 316.04 266.695 306.825 264.592 296.99 cv
263.251 297.399 261.94 297.802 260.709 298.188 cv
259.356 298.613 258.099 299.018 257 299.393 cv
256.242 299.644 255.555 299.871 254.959 300.069 cv
254.846 300.106 254.736 300.142 254.63 300.177 cv
254.632 300.001 254.634 299.816 254.636 299.639 cv
255.218 299.301 255.9 298.905 256.66 298.464 cv
256.66 298.464 li
256.66 298.464 li
258.685 297.265 261.293 295.829 264.028 294.338 cv
264.028 294.338 li
264.028 294.338 li
264.028 294.338 li
262.454 286.891 260.966 279.118 259.441 271.267 cv
258.288 265.333 257.113 259.353 255.864 253.437 cv
257.489 213.505 260.619 171.627 265.402 127.819 cv
264.166 154.14 263.238 179.362 265.024 202.686 cv
267.993 179.117 269.43 153.382 270.406 126.491 cv
268.827 126.172 267.258 125.656 265.717 124.949 cv
265.952 122.831 266.19 120.708 266.432 118.581 cv
269.628 119.82 272.875 120.416 276.137 120.415 cv
277.641 120.415 279.149 120.289 280.655 120.04 cv
284.104 172.701 290.738 220.569 299.222 264.028 cv
295.018 252.511 292.051 244.758 292.051 244.758 cv
291.049 299.677 li
292.163 299.984 293.221 300.235 294.087 300.425 cv
294.722 300.565 295.254 300.646 295.627 300.72 cv
296 300.789 296.213 300.828 296.213 300.828 cv
296.213 300.828 296 300.858 295.624 300.911 cv
295.249 300.958 294.708 301.05 294.053 301.117 cv
293.202 301.206 292.149 301.297 291.018 301.352 cv
290.869 309.51 li
288.434 294.036 286.111 278.104 283.88 261.756 cv
282.724 293.964 281.978 324.908 281.898 354.427 cv
280.592 352.927 279.674 352 279.674 352 cv
279.674 352 271.253 359.988 269.147 367.5 cv
310.887 322.292 mo
310.887 322.292 311.324 322.023 312.057 321.571 cv
312.084 321.679 312.11 321.78 312.137 321.888 cv
311.352 322.142 310.887 322.292 310.887 322.292 cv
301.25 291.41 mo
301.25 291.41 301.872 290.682 302.815 289.577 cv
303.226 289.111 303.685 288.561 304.171 287.966 cv
304.269 288.418 304.367 288.865 304.466 289.316 cv
304.466 289.317 304.465 289.317 304.464 289.318 cv
304.464 289.318 li
304.043 289.602 303.641 289.866 303.273 290.097 cv
302.053 290.888 301.25 291.41 301.25 291.41 cv
.329412 .160784 .333333 rgb
f
289.038 364.73 mo
287.147 360.799 284.025 356.873 281.911 354.442 cv
282.039 326.82 282.77 297.923 283.88 267.902 cv
286.087 283.61 288.384 298.918 290.791 313.796 cv
290.39 335.768 li
290.194 346.475 li
290.137 346.973 290.103 347.468 290.168 347.928 cv
290.15 348.922 li
290.15 348.922 290.15 348.922 290.15 348.922 cv
290.08 352.736 li
290.08 352.736 li
292.646 353.164 295.199 353.421 297.693 353.547 cv
298.267 356.625 298.849 359.685 299.436 362.719 cv
297.086 359.572 295.007 357.333 295.007 357.333 cv
295.007 357.333 291.935 360.546 289.038 364.73 cv
.298039 .145098 .313725 rgb
f
384.899 367.5 mo
361.046 367.5 li
360.97 367.091 360.895 366.683 360.819 366.275 cv
360.494 364.516 359.231 361.43 360.077 359.834 cv
361.112 357.642 362.748 355.695 364.288 353.85 cv
367.292 350.955 370.048 347.843 372.883 344.817 cv
376.811 352.658 380.816 360.211 384.899 367.5 cv
357.89 366.558 mo
354.251 361.343 349.143 358.85 343.959 358.659 cv
341.384 351.497 338.9 344.084 336.494 336.42 cv
339.903 337.432 343.223 339.168 346.751 340.658 cv
349.022 341.618 351.244 342.692 353.402 343.884 cv
355.396 344.984 354.959 348.615 355.258 350.796 cv
355.981 356.076 356.98 361.308 357.89 366.558 cv
357.664 349.015 mo
356.889 343.969 356.246 338.902 355.911 333.806 cv
355.605 329.17 357.078 326.939 361.345 324.539 cv
361.836 324.262 362.334 323.999 362.837 323.746 cv
364.839 328.158 366.869 332.497 368.916 336.743 cv
363.423 338.53 358.939 342.628 357.664 349.015 cv
353.899 336.833 mo
350.85 331.223 345.689 326.918 339.082 326.918 cv
339.002 326.918 338.923 326.919 338.843 326.92 cv
337.096 326.948 335.421 327.283 333.877 327.884 cv
326.813 304.297 320.405 278.414 314.274 250.094 cv
305.65 208.87 295.72 165.458 288.221 117.14 cv
290.703 116.054 293.172 114.646 295.612 112.926 cv
301.014 138.722 307.506 162.905 315.208 184.824 cv
327.31 231.861 340.93 272.47 355.9 307.904 cv
355.52 309.529 355.195 311.168 354.918 312.814 cv
354.622 306.208 352.01 299.475 345.506 296.821 cv
343.601 296.044 341.613 295.673 339.632 295.673 cv
336.694 295.673 333.772 296.488 331.156 298.002 cv
337.706 301.596 341.752 307.671 347.808 311.94 cv
349.521 313.374 351.287 314.75 353.012 316.171 cv
354.894 317.722 354.091 319.238 353.93 321.589 cv
353.582 326.662 353.614 331.758 353.899 336.833 cv
355.636 322.237 mo
355.811 318.117 356.151 314.044 356.797 310.018 cv
357.625 311.96 358.452 313.873 359.288 315.784 cv
357.695 317.596 356.435 319.751 355.636 322.237 cv
.329412 .160784 .333333 rgb
f
333.984 361.173 mo
333.016 356.595 332.061 351.971 331.117 347.296 cv
333.32 351.387 335.493 355.478 337.638 359.557 cv
336.382 359.964 335.156 360.505 333.984 361.173 cv
f
225.671 367.5 mo
221.541 367.5 li
220.672 365.509 219.575 363.53 218.443 361.709 cv
219.253 361.556 220.082 361.465 220.934 361.45 cv
220.015 360.519 219.013 359.774 217.959 359.202 cv
218.832 356.314 219.717 353.413 220.611 350.508 cv
220.793 350.508 220.977 350.509 221.159 350.509 cv
221.375 350.509 221.59 350.508 221.806 350.507 cv
225.726 350.486 229.597 350.269 233.35 349.918 cv
233.305 353.372 233.254 356.805 233.198 360.217 cv
232.276 358.827 231.674 358 231.674 358 cv
231.674 358 228.578 362.13 225.671 367.5 cv
f
142.891 367.5 mo
138.496 367.5 li
138.507 367.462 138.518 367.425 138.529 367.388 cv
139.333 364.486 140.203 361.605 140.629 359.434 cv
141.123 357.246 141.448 355.805 141.448 355.805 cv
141.448 355.805 141.671 357.268 142.008 359.489 cv
142.393 361.653 142.619 364.521 142.891 367.5 cv
160.272 359.068 mo
158.133 356.465 156.34 354.667 156.34 354.667 cv
156.34 354.667 155.362 355.619 153.988 357.15 cv
152.364 350.407 150.144 343.574 148.26 338.257 cv
154.447 331.092 160.527 323.757 166.519 316.265 cv
168.409 314.188 170.313 312.121 172.235 310.061 cv
174.193 310.926 176.163 311.925 178.292 312.844 cv
178.86 313.089 179.428 313.333 179.995 313.581 cv
178.239 317.756 176.483 321.9 174.734 325.997 cv
174.418 325.982 174.102 325.975 173.785 325.975 cv
168.747 325.975 163.634 327.839 159.615 331.549 cv
160.462 331.483 161.312 331.452 162.161 331.452 cv
165.41 331.452 168.668 331.911 171.873 332.667 cv
167.994 341.672 164.131 350.473 160.272 359.068 cv
182.665 307.213 mo
181.201 305.948 179.576 304.889 177.869 304.1 cv
180.587 301.262 183.343 298.438 186.147 295.624 cv
186.496 295.921 186.819 296.23 187.096 296.55 cv
185.617 300.129 184.139 303.686 182.665 307.213 cv
188.198 293.883 mo
188.183 293.796 188.167 293.709 188.15 293.623 cv
188.238 293.536 188.325 293.449 188.412 293.363 cv
188.341 293.536 188.27 293.709 188.198 293.883 cv
.356863 .180392 .34902 rgb
f
440.924 351.242 mo
439.969 350.497 439.018 349.749 438.071 348.997 cv
438.069 348.993 438.067 348.989 438.065 348.985 cv
439.016 349.741 439.967 350.492 440.924 351.241 cv
440.924 351.241 440.924 351.241 440.924 351.242 cv
.741176 .345098 .462745 rgb
f
439.724 353.009 mo
439.218 351.654 438.658 350.307 438.071 348.997 cv
439.018 349.749 439.969 350.497 440.924 351.242 cv
440.522 351.808 440.118 352.4 439.724 353.009 cv
.537255 .270588 .490196 rgb
f
353.503 252.227 mo
352.966 251.286 352.432 250.339 351.903 249.39 cv
351.777 249.138 351.651 248.885 351.525 248.632 cv
352.176 249.836 352.837 251.036 353.503 252.227 cv
.803922 .352941 .384314 rgb
f
428.056 340.797 mo
422.375 335.995 416.843 331.05 411.472 325.943 cv
411.476 325.925 411.479 325.908 411.483 325.889 cv
416.858 331.006 422.395 335.967 428.069 340.776 cv
428.065 340.783 428.06 340.79 428.056 340.797 cv
386.487 299.499 mo
386.295 299.271 386.105 299.045 385.913 298.816 cv
386.106 299.044 386.294 299.267 386.488 299.495 cv
386.487 299.499 386.488 299.494 386.487 299.499 cv
.741176 .345098 .462745 rgb
f
411.472 325.943 mo
402.661 317.566 394.296 308.762 386.487 299.499 cv
386.488 299.494 386.487 299.499 386.488 299.495 cv
394.34 308.743 402.699 317.527 411.483 325.889 cv
411.479 325.908 411.476 325.925 411.472 325.943 cv
.694118 .286274 .431373 rgb
f
423.725 349.275 mo
406.82 333.413 391.875 315.229 378.537 295.306 cv
379.663 294.913 380.79 294.469 381.912 293.982 cv
383.229 295.605 384.566 297.22 385.913 298.816 cv
386.105 299.045 386.295 299.271 386.487 299.499 cv
394.296 308.762 402.661 317.566 411.472 325.943 cv
416.843 331.05 422.375 335.995 428.056 340.797 cv
426.725 343.111 425.137 346.077 423.725 349.275 cv
372.466 285.943 mo
372.141 285.426 371.819 284.911 371.496 284.392 cv
372.243 284.103 372.967 283.752 373.665 283.349 cv
374.141 283.992 374.62 284.632 375.101 285.271 cv
374.207 285.448 373.328 285.671 372.466 285.943 cv
368.94 280.227 mo
368.256 279.098 367.578 277.966 366.903 276.828 cv
361.702 268.058 356.67 258.921 351.903 249.39 cv
352.432 250.339 352.966 251.286 353.503 252.227 cv
358.504 261.158 363.935 269.722 369.76 277.957 cv
369.521 278.748 369.245 279.502 368.94 280.227 cv
.537255 .270588 .490196 rgb
f
265.402 127.819 mo
265.448 126.837 265.495 125.852 265.541 124.867 cv
265.6 124.895 265.659 124.922 265.717 124.949 cv
265.612 125.903 265.506 126.867 265.402 127.819 cv
.462745 .235294 .427451 rgb
f
265.024 202.686 mo
263.238 179.362 264.166 154.14 265.402 127.819 cv
265.506 126.867 265.612 125.903 265.717 124.949 cv
267.258 125.656 268.827 126.172 270.406 126.491 cv
269.43 153.382 267.993 179.117 265.024 202.686 cv
.392157 .192157 .388235 rgb
f
323.206 205.696 mo
320.406 198.999 317.742 192.034 315.208 184.824 cv
309.266 161.729 303.69 137.084 298.498 110.734 cv
297.541 111.513 296.579 112.244 295.612 112.926 cv
295.593 112.838 295.575 112.75 295.556 112.662 cv
296.55 111.05 297.492 109.321 298.365 107.441 cv
305.619 142.654 313.77 175.647 323.206 205.696 cv
.462745 .235294 .427451 rgb
f
315.208 184.824 mo
307.506 162.905 301.014 138.722 295.612 112.926 cv
296.579 112.244 297.541 111.513 298.498 110.734 cv
303.69 137.084 309.266 161.729 315.208 184.824 cv
.392157 .192157 .388235 rgb
f
94.699 358.681 mo
94.7015 358.663 94.7041 358.645 94.7066 358.627 cv
96.6729 357.182 98.6278 355.723 100.569 354.251 cv
100.57 354.259 100.571 354.268 100.572 354.276 cv
98.6267 355.76 96.6693 357.227 94.699 358.681 cv
.521569 .215686 .368627 rgb
f
166.041 290.753 mo
166.041 290.752 166.041 290.753 166.041 290.752 cv
166.276 290.451 166.511 290.15 166.745 289.847 cv
166.511 290.149 166.276 290.452 166.041 290.753 cv
f
150.025 309.625 mo
150.639 308.951 151.249 308.275 151.856 307.596 cv
156.776 302.172 161.502 296.558 166.041 290.752 cv
166.041 290.753 166.041 290.752 166.041 290.753 cv
160.962 297.261 155.614 303.546 150.025 309.625 cv
.466667 .196078 .345098 rgb
f
166.041 290.753 mo
166.041 290.752 166.041 290.753 166.041 290.752 cv
166.041 290.752 li
166.041 290.753 166.041 290.752 166.041 290.753 cv
166.041 290.753 li
.392157 .156863 .313725 rgb
f
201.628 233.943 mo
201.626 233.934 201.625 233.924 201.623 233.915 cv
202.41 232.33 203.189 230.733 203.958 229.129 cv
203.19 230.744 202.414 232.348 201.628 233.943 cv
level3{
gsave
clp
[-1.30785e-008 -291.304 -291.304 1.30785e-008 450 255.719 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.30785e-008 -291.304 -291.304 1.30785e-008 450 255.719 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
192.992 250.347 mo
192.978 250.331 192.963 250.314 192.949 250.298 cv
195.961 244.954 198.85 239.497 201.623 233.915 cv
201.625 233.924 201.626 233.934 201.628 233.943 cv
198.869 239.539 195.992 245.01 192.992 250.347 cv
.803922 .352941 .384314 rgb
f
181.198 269.67 mo
181.19 269.662 181.179 269.653 181.171 269.645 cv
182.122 268.196 183.06 266.743 183.992 265.274 cv
183.982 265.323 183.972 265.371 183.962 265.421 cv
183.051 266.848 182.131 268.263 181.198 269.67 cv
186.128 261.978 mo
186.115 261.959 186.103 261.94 186.09 261.921 cv
188.441 258.113 190.729 254.236 192.949 250.298 cv
192.963 250.314 192.978 250.331 192.992 250.347 cv
190.773 254.297 188.486 258.172 186.128 261.978 cv
.627451 .266667 .403922 rgb
f
177.348 275.333 mo
178.639 273.457 179.915 271.557 181.171 269.645 cv
181.179 269.653 181.19 269.662 181.198 269.67 cv
179.934 271.577 178.651 273.465 177.348 275.333 cv
.521569 .215686 .368627 rgb
f
98.4782 367.5 mo
93.7096 367.5 li
93.9502 364.825 94.2595 362.068 94.604 359.353 cv
94.6357 359.129 94.6674 358.905 94.699 358.681 cv
96.6693 357.227 98.6267 355.76 100.572 354.276 cv
100.594 354.466 100.617 354.655 100.641 354.845 cv
100.834 356.323 101.031 357.83 101.228 359.344 cv
101.504 361.256 101.797 363.167 102.106 365.033 cv
100.903 365.863 99.6953 366.685 98.4782 367.5 cv
129.018 343.942 mo
128.771 339.822 128.358 335.739 127.808 331.724 cv
135.575 324.684 143.006 317.331 150.025 309.625 cv
155.614 303.546 160.962 297.261 166.041 290.753 cv
166.041 290.753 li
166.276 290.452 166.511 290.149 166.745 289.847 cv
168.21 287.959 169.656 286.051 171.081 284.122 cv
172.912 285.494 174.678 286.942 176.451 288.387 cv
173.064 293.64 169.54 298.732 165.883 303.654 cv
163.963 304.525 162.161 305.932 160.586 307.97 cv
161.33 307.861 162.05 307.801 162.75 307.786 cv
160.727 310.4 158.663 312.967 156.557 315.484 cv
152.754 320.071 148.796 324.517 144.695 328.816 cv
144.568 328.505 144.5 328.34 144.5 328.34 cv
142.375 330.215 140.213 332.736 138.212 335.377 cv
135.217 338.303 132.152 341.157 129.018 343.942 cv
180.387 282.113 mo
178.456 281.029 176.255 280.393 173.866 280.296 cv
175.041 278.654 176.201 277.002 177.348 275.333 cv
178.651 273.465 179.934 271.577 181.198 269.67 cv
182.131 268.263 183.051 266.848 183.962 265.421 cv
183.313 268.699 183.412 272.25 184.467 275.225 cv
183.13 277.55 181.77 279.846 180.387 282.113 cv
189.14 266.811 mo
188.195 265.163 187.162 263.552 186.128 261.978 cv
188.486 258.172 190.773 254.297 192.992 250.347 cv
195.992 245.01 198.869 239.539 201.628 233.943 cv
202.414 232.348 203.19 230.744 203.958 229.129 cv
210.503 215.463 216.354 201.106 221.528 186.077 cv
212.641 215.933 201.994 242.842 189.14 266.811 cv
.537255 .270588 .490196 rgb
f
220.094 236.027 mo
223.516 218.823 227.311 201.2 231.23 183.071 cv
231.925 186.122 232.494 189.176 232.949 192.23 cv
228.982 207.358 224.722 221.978 220.094 236.027 cv
234.23 187.285 mo
233.067 184.953 232.109 183.151 231.468 181.972 cv
236.893 156.882 242.544 130.821 247.76 103.578 cv
248.782 106.061 249.91 108.342 251.12 110.445 cv
246.014 137.16 240.488 162.865 234.23 187.285 cv
.462745 .235294 .427451 rgb
f
242.215 205.308 mo
241.323 203.025 240.432 200.857 239.563 198.824 cv
243.96 171.575 248.889 143.347 253.091 113.597 cv
254.375 115.477 255.733 117.179 257.154 118.669 cv
252.862 148.835 247.816 177.661 242.215 205.308 cv
f
274.573 94.9167 mo
268.061 95.0381 254.815 100.873 254.431 100.801 cv
254.056 100.821 265.202 107.958 274.697 107.869 cv
284.194 107.916 295.218 100.729 294.842 100.711 cv
294.495 100.765 282.082 94.9844 274.573 94.9167 cv
cp
.294118 .129412 .27451 rgb
f
728.746 140.716 mo
696.726 140.716 664.706 150.489 632.686 150.489 cv
624.726 245.328 557.925 329.94 513.756 419.665 cv
638.738 466.134 773.696 469.205 900 428.89 cv
900 369.56 li
859.554 297.804 814.271 227.519 807.806 150.489 cv
781.452 150.489 755.099 140.716 728.746 140.716 cv
.45098 .192157 .258824 rgb
f
836.134 367.5 mo
828.797 367.5 li
826.713 361.905 822.297 355.591 819.866 352.345 cv
830.005 350.091 836.815 347.538 837.191 347.408 cv
837.201 347.404 837.207 347.402 837.208 347.402 cv
837.208 347.402 837.208 347.402 837.208 347.403 cv
837.208 347.403 li
837.208 347.403 li
837.208 347.403 li
837.208 347.403 li
837.208 347.403 li
837.106 347.056 837.002 346.703 836.896 346.345 cv
836.021 343.395 835.018 340.087 833.987 336.488 cv
833.77 335.73 833.551 334.958 833.332 334.174 cv
833.332 334.174 li
831.969 329.324 830.606 324 829.301 318.349 cv
828.825 316.288 828.357 314.183 827.899 312.042 cv
827.899 312.042 li
827.376 312.202 826.86 312.36 826.353 312.516 cv
824.637 313.045 823.036 313.548 821.716 314 cv
821.54 314.058 821.369 314.115 821.203 314.17 cv
820.188 314.505 819.363 314.778 818.812 314.962 cv
818.338 315.119 818.065 315.21 818.046 315.216 cv
818.079 315.197 819.424 314.412 821.439 313.243 cv
821.439 313.243 li
821.439 313.243 li
822.739 312.474 824.334 311.584 826.042 310.647 cv
826.501 310.395 826.968 310.14 827.439 309.883 cv
827.439 309.883 li
827.439 309.883 li
827.439 309.883 li
825.537 300.885 823.79 291.301 821.868 281.793 cv
833.301 303.94 845.75 329.724 858.349 358.722 cv
857.633 359.501 856.827 360.414 856.007 361.415 cv
856.007 361.388 856.007 361.361 856.007 361.333 cv
856.007 354.882 845.007 344.667 845.007 344.667 cv
845.007 344.667 834.007 354.581 834.007 361.333 cv
834.007 363.235 834.88 365.389 836.134 367.5 cv
727.765 367.5 mo
726.574 367.5 li
723.382 364.059 717.674 360.667 717.674 360.667 cv
717.674 360.667 711.873 364.013 708.697 367.5 cv
706.388 367.5 li
705.043 361.055 703.484 354.662 701.677 348.323 cv
702.176 348.26 702.682 348.22 703.195 348.207 cv
702.479 347.07 701.671 346.101 700.792 345.29 cv
699.555 341.144 698.209 337.02 696.746 332.926 cv
696.625 332.664 696.417 332.545 696.141 332.544 cv
696.141 332.544 696.14 332.544 696.14 332.544 cv
696.14 332.544 li
696.14 332.544 li
694.235 332.544 689.098 338.218 687.062 342.064 cv
687.055 342.076 687.049 342.088 687.042 342.101 cv
687.035 342.115 687.027 342.129 687.02 342.143 cv
687.003 342.175 686.986 342.208 686.97 342.24 cv
686.962 342.255 686.955 342.269 686.947 342.284 cv
686.933 342.313 686.919 342.341 686.905 342.369 cv
686.882 342.415 686.859 342.461 686.837 342.507 cv
686.834 342.513 686.831 342.519 686.828 342.525 cv
686.816 342.551 686.803 342.577 686.791 342.603 cv
686.776 342.636 686.761 342.668 686.746 342.7 cv
686.746 342.7 li
686.68 342.815 686.612 342.933 686.546 343.049 cv
681.506 345.045 677.311 349.626 676.612 355.57 cv
676.607 352.362 676.686 349.071 676.915 345.816 cv
677.403 345.84 677.896 345.876 678.396 345.923 cv
678.396 345.923 li
678.396 345.923 li
677.955 345.457 677.491 345.012 677.009 344.59 cv
677.123 343.207 677.265 341.835 677.442 340.481 cv
677.723 337.857 677.356 337.049 679.824 336.137 cv
682.099 335.297 684.208 334.104 686.429 333.143 cv
691.266 331.033 696.025 329.914 700.896 329.914 cv
703.791 329.914 706.724 330.309 709.737 331.126 cv
709.737 331.126 li
709.737 331.126 li
707.006 324.912 701.577 319.83 694.458 319.83 cv
694.415 319.83 694.373 319.83 694.33 319.83 cv
685.628 319.904 681.444 327.086 678.252 334.018 cv
678.702 330.795 679.215 327.581 679.764 324.373 cv
679.866 324.373 679.966 324.372 680.067 324.372 cv
681.05 324.372 682.026 324.412 682.998 324.495 cv
682.532 324.064 682.054 323.648 681.568 323.24 cv
681.114 322.824 680.644 322.439 680.162 322.084 cv
680.501 320.161 680.849 318.241 681.202 316.322 cv
681.759 313.296 682.321 310.271 682.879 307.245 cv
684.794 305.839 686.91 304.637 689.103 303.726 cv
694.883 301.326 701.094 299.827 707.29 299.827 cv
710.307 299.827 713.32 300.182 716.278 300.962 cv
716.278 300.962 li
716.278 300.962 li
715.771 300.002 715.243 299.001 714.591 298.129 cv
714.493 298.003 li
710.409 293.023 704.721 290.367 699.12 290.367 cv
693.6 290.367 688.164 292.946 684.432 298.421 cv
684.616 297.353 684.805 296.287 684.994 295.221 cv
690.382 284.843 694.666 276.547 697.199 271.633 cv
698.767 270.881 700.333 270.128 701.909 269.463 cv
707.51 277.031 722.679 299.952 731.746 336.906 cv
739.079 255.825 768.412 189.938 768.412 189.938 cv
768.412 189.938 782.598 210.255 803.282 247.209 cv
802.93 260.469 800.697 273.768 798.015 287.107 cv
799.286 287.519 800.506 287.854 801.509 288.107 cv
802.245 288.294 802.871 288.405 803.305 288.503 cv
803.741 288.595 803.99 288.647 803.99 288.647 cv
803.99 288.648 803.725 288.682 803.26 288.745 cv
802.794 288.801 802.12 288.91 801.311 288.989 cv
800.26 289.091 798.964 289.196 797.58 289.255 cv
796.515 294.467 795.394 299.685 794.303 304.91 cv
789.171 289.555 785.581 272.297 772.746 262.341 cv
771.88 261.635 771.061 261.337 770.309 261.336 cv
770.307 261.336 770.306 261.336 770.304 261.336 cv
770.304 261.336 li
770.304 261.336 li
770.302 261.336 770.299 261.336 770.296 261.336 cv
767.582 261.343 765.746 265.222 765.746 267.77 cv
765.746 267.77 li
763.084 283.668 761.435 299.568 760.695 315.42 cv
750.269 324.908 745.6 335.334 743.851 344.666 cv
741.097 338.941 738.34 334.667 738.34 334.667 cv
738.34 334.667 727.341 350.691 727.341 363.334 cv
727.341 364.646 727.494 366.047 727.765 367.5 cv
674.44 367.5 mo
647.318 367.5 li
647.303 367.338 647.289 367.173 647.276 367.01 cv
650.172 361.58 653.077 356.108 655.962 350.654 cv
657.774 349.864 659.606 349.133 661.517 348.496 cv
664.954 347.351 668.154 346.444 671.479 346.028 cv
671.992 346.591 672.487 347.172 672.957 347.779 cv
675.625 351.225 674.526 356.744 674.924 361.006 cv
675.056 362.418 675.227 363.814 675.434 365.196 cv
675.098 365.963 674.767 366.731 674.44 367.5 cv
676.712 362.325 mo
676.583 360.617 676.791 359.009 678.05 357.996 cv
678.375 357.756 678.71 357.526 679.054 357.305 cv
678.252 358.972 677.471 360.648 676.712 362.325 cv
809.205 355.642 mo
809.09 355.221 808.974 354.801 808.858 354.379 cv
809.777 354.245 810.683 354.103 811.573 353.955 cv
810.75 354.516 809.956 355.084 809.205 355.642 cv
661.441 340.273 mo
661.974 339.261 662.506 338.251 663.035 337.246 cv
663.71 338.121 664.401 338.969 665.142 339.741 cv
665.179 339.779 665.216 339.817 665.253 339.855 cv
665.181 339.854 665.109 339.854 665.036 339.854 cv
663.842 339.854 662.64 339.989 661.441 340.273 cv
675.34 336.025 mo
674 332.978 671.218 330.011 667.897 327.99 cv
668.282 327.255 668.668 326.519 669.05 325.79 cv
671.326 325.247 673.63 324.829 675.928 324.592 cv
675.965 324.658 676.002 324.724 676.039 324.79 cv
677.542 327.518 675.66 332.942 675.34 336.025 cv
678.942 312.135 mo
678.641 311.075 678.24 310.075 677.752 309.14 cv
678.654 307.409 679.544 305.702 680.408 304.041 cv
679.916 306.739 679.43 309.438 678.942 312.135 cv
811.857 276.892 mo
811.857 276.892 li
811.856 276.892 812.716 276.001 813.992 274.658 cv
814.575 274.064 815.23 273.354 815.918 272.59 cv
815.918 272.59 li
815.975 272.527 816.032 272.463 816.09 272.399 cv
816.102 272.386 816.113 272.374 816.125 272.361 cv
816.146 272.337 816.167 272.314 816.188 272.29 cv
816.338 272.123 816.489 271.954 816.641 271.782 cv
816.926 272.322 817.217 272.874 817.504 273.419 cv
817.029 273.727 816.566 274.024 816.121 274.304 cv
816.068 274.338 816.014 274.371 815.962 274.404 cv
815.962 274.404 li
815.426 274.741 814.915 275.054 814.448 275.327 cv
812.895 276.266 811.858 276.892 811.857 276.892 cv
.376471 .156863 .235294 rgb
f
768.915 367.5 mo
767.911 367.5 li
768.027 366.984 768.151 366.468 768.278 365.955 cv
768.497 365.167 768.714 364.383 768.928 363.613 cv
769.149 362.846 769.41 362.099 769.639 361.377 cv
770.09 359.933 770.596 358.605 770.996 357.469 cv
771.842 355.204 772.4 353.712 772.4 353.712 cv
772.4 353.712 772.663 355.223 773.063 357.518 cv
773.284 358.663 773.503 360.004 773.829 361.441 cv
773.988 362.159 774.13 362.903 774.316 363.659 cv
774.375 363.892 774.436 364.127 774.496 364.363 cv
773.594 363.299 773.007 362.667 773.007 362.667 cv
773.007 362.667 771.124 364.636 768.915 367.5 cv
802.916 360.817 mo
802.826 358.916 802.594 357.03 802.238 355.165 cv
804.463 354.961 806.64 354.699 808.745 354.396 cv
808.745 354.396 li
808.745 354.396 li
808.783 354.39 808.821 354.385 808.858 354.379 cv
808.974 354.801 809.09 355.221 809.205 355.642 cv
805.549 358.359 802.916 360.817 802.916 360.817 cv
789.777 329.14 mo
780.52 316.731 769.784 308.417 769.784 308.417 cv
766.352 310.669 763.339 313.014 760.695 315.42 cv
761.435 299.568 763.084 283.668 765.746 267.77 cv
765.746 267.77 li
765.746 265.222 767.582 261.344 770.296 261.336 cv
770.299 261.336 770.302 261.336 770.304 261.336 cv
770.306 261.336 770.307 261.336 770.309 261.336 cv
771.061 261.337 771.88 261.636 772.746 262.341 cv
785.581 272.297 789.171 289.555 794.303 304.91 cv
792.619 312.971 791.005 321.048 789.777 329.14 cv
.337255 .141176 .223529 rgb
f
765.746 267.77 mo
765.746 265.222 767.582 261.343 770.296 261.336 cv
767.582 261.344 765.746 265.222 765.746 267.77 cv
770.309 261.336 mo
770.307 261.336 770.306 261.336 770.304 261.336 cv
770.304 261.336 li
770.306 261.336 770.307 261.336 770.309 261.336 cv
.282353 .113725 .203922 rgb
f
706.388 367.5 mo
677.443 367.5 li
677.4 367.186 677.36 366.87 677.322 366.554 cv
677.166 365.273 676.82 363.764 676.712 362.325 cv
677.471 360.648 678.252 358.972 679.054 357.305 cv
681.126 355.975 683.529 354.999 685.891 354.438 cv
691.248 352.697 696.044 349.033 701.677 348.323 cv
703.484 354.662 705.043 361.055 706.388 367.5 cv
675.816 367.5 mo
674.44 367.5 li
674.767 366.731 675.098 365.963 675.434 365.196 cv
675.55 365.968 675.678 366.736 675.816 367.5 cv
700.792 345.29 mo
698.296 342.985 695.232 341.953 692.135 341.953 cv
690.245 341.953 688.342 342.337 686.546 343.049 cv
686.612 342.933 686.68 342.815 686.746 342.7 cv
686.746 342.7 li
686.761 342.668 686.776 342.636 686.791 342.603 cv
686.803 342.577 686.816 342.551 686.828 342.525 cv
686.831 342.519 686.834 342.513 686.837 342.507 cv
686.859 342.461 686.882 342.415 686.905 342.369 cv
686.919 342.341 686.933 342.313 686.947 342.284 cv
686.955 342.269 686.962 342.255 686.97 342.24 cv
686.986 342.208 687.003 342.175 687.02 342.143 cv
687.027 342.129 687.035 342.115 687.042 342.101 cv
687.049 342.088 687.055 342.076 687.062 342.064 cv
689.098 338.218 694.235 332.544 696.14 332.544 cv
696.14 332.544 696.141 332.544 696.141 332.544 cv
696.417 332.545 696.625 332.664 696.746 332.926 cv
698.209 337.02 699.555 341.144 700.792 345.29 cv
.337255 .141176 .223529 rgb
f
584.949 367.5 mo
574.043 367.5 li
589.79 336.265 608.315 306.594 628.37 278.482 cv
628.496 281.064 628.247 284.056 627.746 286.231 cv
627.486 287.448 627.223 288.66 626.957 289.871 cv
624.901 290.581 622.946 291.502 621.195 292.578 cv
622.854 292.845 624.498 293.184 626.134 293.556 cv
623.286 306.131 620.083 318.445 616.624 330.555 cv
614.681 333.423 606.007 346.832 606.007 357.667 cv
606.007 359.303 606.264 361.084 606.699 362.929 cv
606.647 363.087 606.598 363.239 606.546 363.397 cv
605.32 355.287 595.674 344 595.674 344 cv
595.674 344 584.674 356.492 584.674 365 cv
584.674 365.803 584.772 366.64 584.949 367.5 cv
.411765 .176471 .247059 rgb
f
844.027 267.953 mo
842.639 265.11 841.276 262.267 839.94 259.417 cv
839.933 259.399 839.926 259.381 839.919 259.363 cv
841.263 262.228 842.633 265.089 844.029 267.946 cv
844.028 267.95 844.028 267.949 844.027 267.953 cv
level3{
gsave
clp
[-1.30785e-008 -291.304 -291.304 1.30785e-008 450 255.719 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.30785e-008 -291.304 -291.304 1.30785e-008 450 255.719 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
848.764 277.457 mo
847.157 274.292 845.577 271.126 844.027 267.953 cv
844.028 267.949 844.028 267.95 844.029 267.946 cv
845.579 271.12 847.16 274.289 848.768 277.454 cv
848.766 277.455 848.766 277.455 848.764 277.457 cv
.803922 .352941 .384314 rgb
f
884.647 342.628 mo
877.575 330.283 870.524 317.956 863.714 305.596 cv
863.716 305.593 li
870.526 317.954 877.576 330.282 884.648 342.627 cv
884.647 342.628 li
859.58 298.03 mo
856.587 292.504 853.655 286.976 850.798 281.431 cv
850.801 281.428 li
853.657 286.971 856.592 292.504 859.583 298.028 cv
859.58 298.03 li
848.796 277.519 mo
848.787 277.501 848.773 277.474 848.764 277.457 cv
848.766 277.455 848.766 277.455 848.768 277.454 cv
848.778 277.474 848.789 277.496 848.799 277.516 cv
848.795 277.519 848.8 277.516 848.796 277.519 cv
.627451 .266667 .403922 rgb
f
898.372 366.678 mo
893.829 358.646 889.236 350.637 884.647 342.628 cv
884.648 342.627 li
889.235 350.635 893.831 358.648 898.373 366.678 cv
898.372 366.678 li
.521569 .215686 .368627 rgb
f
898.551 366.994 mo
898.492 366.889 898.432 366.784 898.373 366.679 cv
898.373 366.678 li
898.432 366.784 898.492 366.888 898.551 366.994 cv
898.551 366.994 898.551 366.994 898.551 366.994 cv
.466667 .196078 .345098 rgb
f
898.373 366.679 mo
898.372 366.678 li
898.373 366.678 li
898.373 366.678 li
898.373 366.679 li
.392157 .156863 .313725 rgb
f
863.714 305.596 mo
862.327 303.078 860.945 300.55 859.58 298.03 cv
859.583 298.028 li
860.949 300.551 862.328 303.073 863.716 305.593 cv
863.714 305.596 li
.572549 .243137 .384314 rgb
f
850.798 281.431 mo
850.126 280.127 849.459 278.824 848.796 277.519 cv
848.8 277.516 848.795 277.519 848.799 277.516 cv
849.462 278.821 850.129 280.124 850.801 281.428 cv
850.798 281.431 li
.772549 .368627 .541176 rgb
f
898.152 367.5 mo
895.007 367.5 li
895.007 367.5 li
895.007 367.5 li
888.329 367.5 li
874.045 340.546 861.34 312.505 849.746 284.059 cv
846.422 275.939 843.102 267.724 839.94 259.417 cv
841.276 262.267 842.639 265.11 844.027 267.953 cv
845.577 271.126 847.157 274.292 848.764 277.457 cv
848.773 277.474 848.787 277.501 848.796 277.519 cv
849.459 278.824 850.126 280.127 850.798 281.431 cv
853.655 286.976 856.587 292.504 859.58 298.03 cv
860.945 300.55 862.327 303.078 863.714 305.596 cv
870.524 317.956 877.575 330.283 884.647 342.628 cv
889.236 350.637 893.829 358.646 898.372 366.678 cv
898.373 366.679 li
898.432 366.784 898.492 366.889 898.551 366.994 cv
898.414 367.162 898.281 367.331 898.152 367.5 cv
.627451 .266667 .345098 rgb
f
808.029 152.984 mo
807.95 152.153 807.876 151.321 807.806 150.489 cv
807.876 151.32 807.974 152.146 808.053 152.976 cv
808.046 152.978 808.036 152.982 808.029 152.984 cv
level3{
gsave
clp
[-1.30785e-008 -291.304 -291.304 1.30785e-008 450 255.719 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.30785e-008 -291.304 -291.304 1.30785e-008 450 255.719 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
659.903 148.58 mo
659.881 148.58 li
682.509 145.777 705.134 140.858 727.762 140.719 cv
705.143 140.859 682.523 145.776 659.903 148.58 cv
level3{
gsave
clp
[-1.30785e-008 -291.304 -291.304 1.30785e-008 450 255.719 ]ct
/9 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~[o5c);F\#j7C,i[Z;F&r:dqTa7'B?RY"hBe9gc!V6`WmJW_5^X8j]IK6DmCAV+<nJ83s"@6)-q9Tgh;?
76mJ55b:>.SO5Z46U7,-5aao&R6X!(5X1Q!5*\>rPWh9q4[,#k4cqiiO?5Ud3]rE`4H2?`N&a"X3'3!V
4,GjWLG_,I2*-FK3e]COK/5N>1-'n@3IihDIk`p30K=J63.!8:HS.7'/N7o*2Kp]1Ft5Io.lMK!2KL<*
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~F"'"f.5l/o2K1'&D^[J\-oGih2/FWtCF:uS-T,Tc2/"?pB.#NJ-T#B]1h7pi@jX$A-8]-W1ghUd?R7L7
,r8gP1L)1]>9l".,VrRJ1KYkX=!KJ$,;N7D1/oJR;^4%q,;N+?1/K/M:EhMg+u)e80h``F9-H#^+YcP2
0h<EA7j'KT+>?5+0LR!:6Q\!K+##u%0L$U459;IA*\TYt00C:/3Z]q8*\TMo0/st*2]XM.*A02h/i4P#
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.487685 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.30785e-008 -291.304 -291.304 1.30785e-008 450 255.719 ]ct
clp
/9 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~[^NTNZa6sCZ*CR<YHP+3Xf\\+X/i8#WMl_mVl-DgUnjc\U8"BUTV.pLSt;LDS=H(<R[KP1R$a5+Q'ISu
PEV2nOcb`eO,o<]NK&mUMi*@JM2@%DL5(D9KS5#2JqAQ)J:N-!IXZ]nI!U*bH?jaZGBS.PF`heIF)l;@
EH,r:Df9N2D/F**CMR["Bk_6oB4kggAS#C_A7K+Y@UW\Q?sd8I?<piA>[(E9>$5!1=BJX+<`W4#<)cdp
;Gp@h:f'q`:/4MX9MA,Q91hfJ8OuBB7n,s:779O26UF+*5sRY!5!D.o4Ztni4$#A^3B9&Y2`EWP1c.$G
~>
<~;Gp@h:f'tb:f'q`:/4MX9he;T9MA)P8kMZH8P)HD7n6'>7Rfj:77BU46UO1,6:+"*5s[b$5<h@s5!D.o
4Ztni4$,Mc3]]8]3B9&Y3&iiU2E!EM1c.$G1c.!E1,:R=0ek@90JG.5/hJY,/M&G'.k<,".Olns.4?Sm
-n$Gj-RU8h-RU5f-71&d-71&d-71&d-71#b,pai`,pai_,U=W\,U=W[,9nEX,9nEW+sJ3T+sJ3T+sJ3T
+sJ3T+X&!P+X&!P+<VdL+<VdL+<M[I+!2RH+!)IE*Zc@D*ZZ7A*??.@*??.@*??.@*??+>*#oq<*#on:
~>
<~77BX66psF26psF26UO4.6UO1,6:+"*6:*t(5s[e&5X7S"5X7S"5<h@s5<h@s5<h@s5<h=q5!D.o4Ztqk
4Ztqk4?P_g4?P\e4$,Mc4$,Ja3]];_3B9)[3B9)[3&ilW3&iiU2`EZS2`<QP2E!HN2)R6K2)R6K2)R6K
2)R6K2)R3I1c.$G1c.$G1c.$G1c.!E1G^gC1G^gC1G^gC1G^gB1,:U?1,:U?1,:U?1,:U?0ekC;0ekC;
0ekC;0ekC;0JG170JG170JG170JG170J>(40/"t30/"t30/"t30/"q1/hSb//hSb//hSb//hS_-/M/P+
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /9 /Gradient get_res exec grestore
}if
np
632.89 150.489 mo
632.887 150.488 632.884 150.487 632.881 150.485 cv
641.88 150.474 650.882 149.694 659.881 148.58 cv
659.903 148.58 li
650.9 149.696 641.894 150.477 632.89 150.489 cv
level3{
gsave
clp
[-1.30785e-008 -291.304 -291.304 1.30785e-008 450 255.719 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.30785e-008 -291.304 -291.304 1.30785e-008 450 255.719 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
727.808 140.718 mo
727.863 140.718 727.92 140.718 727.975 140.717 cv
727.92 140.718 727.863 140.718 727.808 140.718 cv
727.995 140.717 mo
728.046 140.717 728.1 140.717 728.151 140.717 cv
728.098 140.717 728.048 140.717 727.995 140.717 cv
728.183 140.717 mo
728.226 140.716 728.267 140.716 728.31 140.716 cv
728.267 140.716 728.226 140.716 728.183 140.717 cv
728.371 140.716 mo
728.394 140.716 728.418 140.716 728.441 140.716 cv
728.417 140.716 728.394 140.716 728.371 140.716 cv
level3{
gsave
clp
[-1.30785e-008 -291.304 -291.304 1.30785e-008 450 255.719 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.30785e-008 -291.304 -291.304 1.30785e-008 450 255.719 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
699.219 165.509 mo
691.57 164.768 683.955 163.701 676.398 162.313 cv
676.399 162.311 676.399 162.311 676.399 162.309 cv
672.066 161.513 667.755 160.605 663.468 159.599 cv
663.467 159.603 663.467 159.607 663.466 159.611 cv
661.202 159.079 658.945 158.519 656.695 157.93 cv
656.697 157.924 656.698 157.921 656.699 157.916 cv
652.419 156.794 648.167 155.576 643.953 154.246 cv
643.953 154.248 643.953 154.249 643.953 154.251 cv
640.237 153.078 636.546 151.823 632.89 150.489 cv
641.894 150.477 650.9 149.696 659.903 148.58 cv
682.523 145.776 705.143 140.859 727.762 140.719 cv
727.778 140.718 727.793 140.718 727.808 140.718 cv
727.863 140.718 727.92 140.718 727.975 140.717 cv
727.982 140.717 727.988 140.717 727.995 140.717 cv
728.048 140.717 728.098 140.717 728.151 140.717 cv
728.163 140.717 728.172 140.717 728.183 140.717 cv
728.226 140.716 728.267 140.716 728.31 140.716 cv
728.33 140.716 728.351 140.716 728.371 140.716 cv
728.394 140.716 728.417 140.716 728.441 140.716 cv
728.542 140.716 728.644 140.716 728.746 140.716 cv
755.099 140.716 781.452 150.489 807.806 150.489 cv
807.806 150.489 li
807.876 151.321 807.95 152.153 808.029 152.984 cv
804.287 154.294 800.511 155.509 796.707 156.63 cv
796.707 156.63 796.707 156.63 796.707 156.63 cv
793.312 157.629 789.891 158.542 786.454 159.392 cv
786.455 159.396 786.456 159.4 786.458 159.404 cv
786.06 159.503 785.666 159.599 785.269 159.695 cv
781.261 160.393 776.095 161.118 770.246 161.908 cv
768.491 162.104 766.673 162.308 764.805 162.517 cv
762.937 162.721 761.026 162.976 759.061 163.099 cv
755.136 163.381 751.073 163.813 746.931 163.942 cv
744.863 164.041 742.781 164.141 740.697 164.242 cv
738.61 164.277 736.521 164.312 734.442 164.348 cv
733.403 164.368 732.366 164.389 731.333 164.409 cv
730.3 164.397 729.27 164.384 728.246 164.372 cv
726.198 164.354 724.172 164.336 722.179 164.319 cv
715.187 164.076 707.166 163.817 699.098 163.04 cv
691.027 162.342 682.897 161.354 675.664 160.245 cv
668.423 159.186 662.077 158.044 657.529 157.247 cv
652.987 156.419 650.246 155.919 650.246 155.919 cv
650.246 155.919 652.872 156.566 657.257 157.648 cv
661.652 158.691 667.812 160.158 674.934 161.573 cv
682.044 163.04 690.131 164.378 698.296 165.39 cv
698.604 165.431 698.911 165.47 699.219 165.509 cv
722.079 144.788 mo
699.756 144.788 664.412 153.385 664.412 153.385 cv
664.412 153.385 698.717 161.982 722.079 161.982 cv
745.441 161.982 779.746 153.385 779.746 153.385 cv
779.746 153.385 747.511 144.788 722.079 144.788 cv
.376471 .156863 .235294 rgb
f
705.746 216.731 mo
700.896 200.272 700.091 183.014 700.654 165.684 cv
705.141 166.213 709.63 166.566 713.961 166.814 cv
712.284 183.764 709.897 200.63 705.746 216.731 cv
.537255 .227451 .301961 rgb
f
811.746 223.247 mo
801.88 203.248 793.324 181.838 786.623 159.947 cv
786.829 159.897 787.031 159.848 787.23 159.8 cv
791.618 158.731 794.246 158.091 794.246 158.091 cv
794.246 158.091 791.743 158.534 787.498 159.286 cv
787.17 159.35 786.83 159.414 786.48 159.479 cv
786.473 159.454 786.465 159.429 786.458 159.404 cv
789.895 158.554 793.313 157.63 796.707 156.63 cv
800.986 179.12 805.945 201.486 811.746 223.247 cv
f
786.458 159.404 mo
786.456 159.4 786.455 159.396 786.454 159.392 cv
789.891 158.542 793.312 157.629 796.707 156.63 cv
796.707 156.63 li
793.313 157.63 789.895 158.554 786.458 159.404 cv
.45098 .188235 .27451 rgb
f
588.06 284.583 mo
588.06 284.581 588.059 284.58 588.058 284.578 cv
600.818 260.079 612.133 235.376 620.277 210.139 cv
620.273 210.158 620.269 210.178 620.265 210.197 cv
612.123 235.413 600.811 260.105 588.06 284.583 cv
.803922 .352941 .384314 rgb
f
562.364 331.23 mo
562.362 331.226 562.364 331.231 562.363 331.227 cv
571.216 315.706 579.931 300.182 588.058 284.578 cv
588.059 284.58 588.06 284.581 588.06 284.583 cv
579.932 300.188 571.217 315.709 562.364 331.23 cv
.741176 .345098 .462745 rgb
f
545.929 359.966 mo
545.929 359.965 545.929 359.965 545.928 359.965 cv
545.928 359.965 li
545.929 359.965 545.929 359.965 545.929 359.966 cv
545.929 359.966 li
558.422 338.127 mo
558.421 338.125 li
559.738 335.823 561.05 333.528 562.363 331.227 cv
562.364 331.231 562.362 331.226 562.364 331.23 cv
561.052 333.529 559.738 335.827 558.422 338.127 cv
.694118 .286274 .431373 rgb
f
545.929 359.966 mo
545.929 359.965 545.929 359.965 545.928 359.965 cv
550.077 352.679 554.259 345.397 558.421 338.125 cv
558.422 338.127 li
554.258 345.402 550.079 352.677 545.929 359.966 cv
.6 .239216 .4 rgb
f
541.654 367.5 mo
541.653 367.5 li
543.073 364.988 544.5 362.474 545.928 359.965 cv
545.929 359.965 545.929 359.965 545.929 359.966 cv
544.5 362.475 543.074 364.988 541.654 367.5 cv
.54902 .211765 .384314 rgb
f
552.282 367.5 mo
541.654 367.5 li
543.074 364.988 544.5 362.475 545.929 359.966 cv
545.929 359.966 li
550.079 352.677 554.258 345.402 558.422 338.127 cv
559.738 335.827 561.052 333.529 562.364 331.23 cv
571.217 315.709 579.932 300.188 588.06 284.583 cv
600.811 260.105 612.123 235.413 620.265 210.197 cv
608.406 267.205 582.111 318.36 552.282 367.5 cv
.627451 .266667 .345098 rgb
f
634.746 244.966 mo
635.46 214.728 639.742 184.489 643.953 154.251 cv
648.167 155.582 652.415 156.808 656.695 157.93 cv
649.519 186.979 643.1 216.236 634.746 244.966 cv
.537255 .227451 .301961 rgb
f
656.695 157.93 mo
652.415 156.808 648.167 155.582 643.953 154.251 cv
643.953 154.249 643.953 154.248 643.953 154.246 cv
648.167 155.576 652.419 156.794 656.699 157.916 cv
656.698 157.921 656.697 157.924 656.695 157.93 cv
.45098 .188235 .27451 rgb
f
656.746 255.825 mo
656.588 252.224 656.505 248.631 656.487 245.042 cv
657.224 245.311 657.952 245.6 658.675 245.905 cv
658.024 249.208 657.381 252.513 656.746 255.825 cv
656.483 242.959 mo
656.495 236.666 656.701 230.386 657.047 224.121 cv
658.864 225.037 660.72 225.857 662.572 226.565 cv
661.531 231.626 660.504 236.695 659.493 241.774 cv
658.463 242.099 657.456 242.493 656.483 242.959 cv
664.629 216.661 mo
663.484 216.548 662.323 216.497 661.149 216.497 cv
659.951 216.497 658.742 216.55 657.525 216.645 cv
658.896 197.607 661.376 178.648 663.466 159.611 cv
667.752 160.616 672.067 161.518 676.398 162.313 cv
672.408 180.361 668.441 198.46 664.629 216.661 cv
.537255 .227451 .301961 rgb
f
676.398 162.313 mo
672.067 161.518 667.752 160.616 663.466 159.611 cv
663.467 159.607 663.467 159.603 663.468 159.599 cv
667.755 160.605 672.066 161.513 676.399 162.309 cv
676.399 162.311 676.399 162.311 676.398 162.313 cv
.45098 .188235 .27451 rgb
f
722.079 161.982 mo
698.717 161.982 664.412 153.385 664.412 153.385 cv
664.412 153.385 699.756 144.788 722.079 144.788 cv
747.511 144.788 779.746 153.385 779.746 153.385 cv
779.746 153.385 745.441 161.982 722.079 161.982 cv
.192157 .121569 .184314 rgb
f
726.2 167.206 mo
724.813 167.206 723.449 167.198 722.114 167.184 cv
719.491 167.092 716.76 166.975 713.961 166.814 cv
713.971 166.721 713.98 166.626 713.989 166.532 cv
717.697 166.687 721.404 166.765 725.113 166.765 cv
745.403 166.765 765.65 164.442 785.269 159.695 cv
785.685 159.623 786.089 159.551 786.48 159.479 cv
786.528 159.635 786.575 159.791 786.623 159.947 cv
785.691 160.172 784.686 160.415 783.617 160.674 cv
782.312 160.994 780.891 161.243 779.396 161.558 cv
777.897 161.86 776.314 162.179 774.662 162.512 cv
773.835 162.678 772.99 162.847 772.129 163.02 cv
771.264 163.163 770.383 163.309 769.487 163.458 cv
767.693 163.747 765.843 164.045 763.949 164.35 cv
763.001 164.499 762.043 164.65 761.075 164.802 cv
760.102 164.921 759.121 165.04 758.132 165.16 cv
756.153 165.399 754.144 165.64 752.119 165.883 cv
750.094 166.135 748.041 166.242 745.991 166.425 cv
739.269 167.033 732.497 167.206 726.2 167.206 cv
700.654 165.684 mo
700.175 165.628 699.697 165.57 699.219 165.509 cv
699.698 165.556 700.176 165.601 700.655 165.645 cv
700.654 165.657 700.654 165.672 700.654 165.684 cv
.670588 .286274 .372549 rgb
f
725.113 166.765 mo
721.404 166.765 717.697 166.687 713.989 166.532 cv
713.99 166.53 713.99 166.53 713.99 166.528 cv
709.54 166.342 705.093 166.043 700.655 165.637 cv
700.655 165.64 700.655 165.641 700.655 165.645 cv
700.176 165.601 699.698 165.556 699.219 165.509 cv
698.911 165.47 698.604 165.431 698.296 165.39 cv
690.131 164.378 682.044 163.04 674.934 161.573 cv
667.812 160.158 661.652 158.691 657.257 157.648 cv
652.872 156.566 650.246 155.919 650.246 155.919 cv
650.246 155.919 652.987 156.419 657.529 157.247 cv
662.077 158.044 668.423 159.186 675.664 160.245 cv
682.897 161.354 691.027 162.342 699.098 163.04 cv
707.166 163.817 715.187 164.076 722.179 164.319 cv
724.172 164.336 726.198 164.354 728.246 164.372 cv
729.27 164.384 730.3 164.397 731.333 164.409 cv
732.366 164.389 733.403 164.368 734.442 164.348 cv
736.521 164.312 738.61 164.277 740.697 164.242 cv
742.781 164.141 744.863 164.041 746.931 163.942 cv
751.073 163.813 755.136 163.381 759.061 163.099 cv
761.026 162.976 762.937 162.721 764.805 162.517 cv
766.673 162.308 768.491 162.104 770.246 161.908 cv
776.095 161.118 781.261 160.393 785.269 159.695 cv
765.65 164.442 745.403 166.765 725.113 166.765 cv
.560784 .235294 .337255 rgb
f
713.961 166.814 mo
709.63 166.566 705.141 166.213 700.654 165.684 cv
700.654 165.672 700.654 165.657 700.655 165.645 cv
705.092 166.051 709.539 166.347 713.989 166.532 cv
713.98 166.626 713.971 166.721 713.961 166.814 cv
.764706 .337255 .435294 rgb
f
713.989 166.532 mo
709.539 166.347 705.092 166.051 700.655 165.645 cv
700.655 165.641 700.655 165.64 700.655 165.637 cv
705.093 166.043 709.54 166.342 713.99 166.528 cv
713.99 166.53 713.99 166.53 713.989 166.532 cv
.670588 .278431 .396078 rgb
f
786.623 159.947 mo
786.575 159.791 786.528 159.635 786.48 159.479 cv
786.83 159.414 787.17 159.35 787.498 159.286 cv
791.743 158.534 794.246 158.091 794.246 158.091 cv
794.246 158.091 791.618 158.731 787.23 159.8 cv
787.031 159.848 786.829 159.897 786.623 159.947 cv
.764706 .337255 .435294 rgb
f
419.674 348.667 mo
419.674 348.667 408.674 357.983 408.674 365.333 cv
408.674 371.785 419.674 382 419.674 382 cv
419.674 382 430.674 372.085 430.674 365.333 cv
430.674 358.581 419.674 348.667 419.674 348.667 cv
.898039 .419608 .423529 rgb
f
420.007 363.333 mo
420.007 374.407 431.007 390.667 431.007 390.667 cv
431.007 390.667 442.007 375.388 442.007 363.333 cv
442.007 352.752 431.007 336 431.007 336 cv
431.007 336 420.007 352.26 420.007 363.333 cv
f
435.341 364.667 mo
435.341 372.409 446.341 384.667 446.341 384.667 cv
446.341 384.667 457.341 372.769 457.341 364.667 cv
457.341 356.564 446.341 344.667 446.341 344.667 cv
446.341 344.667 435.341 355.846 435.341 364.667 cv
f
453.341 371.667 mo
453.341 379.364 464.341 390.667 464.341 390.667 cv
464.341 390.667 475.341 380.046 475.341 371.667 cv
475.341 364.312 464.341 352.667 464.341 352.667 cv
464.341 352.667 453.341 363.969 453.341 371.667 cv
f
478.34 352 mo
478.34 352 467.341 360.012 467.341 366.333 cv
467.341 371.882 478.34 380.667 478.34 380.667 cv
478.34 380.667 489.341 372.14 489.341 366.333 cv
489.341 360.527 478.34 352 478.34 352 cv
f
584.674 365 mo
584.674 373.508 595.674 386 595.674 386 cv
595.674 386 606.674 374.261 606.674 365 cv
606.674 356.871 595.674 344 595.674 344 cv
595.674 344 584.674 356.492 584.674 365 cv
f
606.007 357.667 mo
606.007 368.376 617.007 385.333 617.007 385.333 cv
617.007 385.333 628.007 368.875 628.007 357.667 cv
628.007 346.458 617.007 330 617.007 330 cv
617.007 330 606.007 345.465 606.007 357.667 cv
f
622.674 381 mo
622.674 394.099 633.674 413.333 633.674 413.333 cv
633.674 413.333 644.674 395.26 644.674 381 cv
644.674 368.484 633.674 348.667 633.674 348.667 cv
633.674 348.667 622.674 367.901 622.674 381 cv
f
574.341 353.333 mo
574.341 353.333 563.341 359.482 563.341 364.333 cv
563.341 368.591 574.341 375.333 574.341 375.333 cv
574.341 375.333 585.341 368.79 585.341 364.333 cv
585.341 359.877 574.341 353.333 574.341 353.333 cv
cp
f
727.341 363.334 mo
727.341 374.43 738.34 392 738.34 392 cv
738.34 392 749.341 374.947 749.341 363.334 cv
749.341 351.72 738.34 334.667 738.34 334.667 cv
738.34 334.667 727.341 350.691 727.341 363.334 cv
f
743.34 374 mo
743.34 386.154 754.34 404 754.34 404 cv
754.34 404 765.34 387.231 765.34 374 cv
765.34 362.387 754.34 344 754.34 344 cv
754.34 344 743.34 361.846 743.34 374 cv
f
762.007 382 mo
762.007 389.832 773.007 401.333 773.007 401.333 cv
773.007 401.333 784.007 390.526 784.007 382 cv
784.007 374.516 773.007 362.667 773.007 362.667 cv
773.007 362.667 762.007 374.168 762.007 382 cv
f
717.674 360.667 mo
717.674 360.667 706.674 367.012 706.674 371.333 cv
706.674 375.655 717.674 382 717.674 382 cv
717.674 382 728.674 376.038 728.674 371.333 cv
728.674 367.204 717.674 360.667 717.674 360.667 cv
f
845.007 344.667 mo
845.007 344.667 834.007 354.581 834.007 361.333 cv
834.007 368.085 845.007 378 845.007 378 cv
845.007 378 856.007 368.684 856.007 361.333 cv
856.007 354.882 845.007 344.667 845.007 344.667 cv
f
861.007 356 mo
861.007 356 850.007 366.311 850.007 373.333 cv
850.007 380.355 861.007 390.667 861.007 390.667 cv
861.007 390.667 872.007 380.978 872.007 373.333 cv
872.007 366.624 861.007 356 861.007 356 cv
f
201.341 374.667 mo
201.341 382.925 212.34 396 212.34 396 cv
212.34 396 223.34 383.309 223.34 374.667 cv
223.34 366.024 212.34 353.333 212.34 353.333 cv
212.34 353.333 201.341 365.258 201.341 374.667 cv
f
220.674 382.666 mo
220.674 392.66 231.674 407.333 231.674 407.333 cv
231.674 407.333 242.674 393.545 242.674 382.666 cv
242.674 373.118 231.674 358 231.674 358 cv
231.674 358 220.674 372.674 220.674 382.666 cv
f
261.007 359.333 mo
261.007 359.333 250.007 368.65 250.007 376 cv
250.007 382.452 261.007 392.667 261.007 392.667 cv
261.007 392.667 272.007 382.752 272.007 376 cv
272.007 369.248 261.007 359.333 261.007 359.333 cv
f
268.674 370.667 mo
268.674 377.893 279.674 389.333 279.674 389.333 cv
279.674 389.333 290.674 378.229 290.674 370.667 cv
290.674 363.104 279.674 352 279.674 352 cv
279.674 352 268.674 362.434 268.674 370.667 cv
f
284.007 376.667 mo
284.007 384.499 295.007 396 295.007 396 cv
295.007 396 306.007 385.193 306.007 376.667 cv
306.007 369.183 295.007 357.333 295.007 357.333 cv
295.007 357.333 284.007 368.835 284.007 376.667 cv
f
313.007 366 mo
313.007 366 302.007 375.716 302.007 382.333 cv
302.007 388.95 313.007 398.667 313.007 398.667 cv
313.007 398.667 324.007 389.537 324.007 382.333 cv
324.007 376.01 313.007 366 313.007 366 cv
f
145.341 372.667 mo
145.341 379.959 156.34 390.667 156.34 390.667 cv
156.34 390.667 167.341 380.605 167.341 372.667 cv
167.341 365.699 156.34 354.667 156.34 354.667 cv
156.34 354.667 145.341 365.374 145.341 372.667 cv
f
75.0072 358 mo
75.0072 358 64.0073 366.328 64.0073 372 cv
64.0073 377.672 75.0072 386 75.0072 386 cv
75.0072 386 86.0073 378.174 86.0073 372 cv
86.0073 366.581 75.0072 358 75.0072 358 cv
f
14.6739 371.333 mo
14.6739 379.166 25.6738 390.667 25.6738 390.667 cv
25.6738 390.667 36.6739 379.86 36.6739 371.333 cv
36.6739 363.849 25.6738 352 25.6738 352 cv
25.6738 352 14.6739 363.501 14.6739 371.333 cv
f
7.00723 385.333 mo
7.00723 385.333 18.0071 378.067 18.0071 372.333 cv
18.0071 367.301 7.00723 359.333 7.00723 359.333 cv
7.00723 359.333 3.14707 362.048 0 365.355 cv
0 379.312 li
3.14707 382.619 7.00723 385.333 7.00723 385.333 cv
f
896.007 372.333 mo
896.007 374.48 897.835 377.036 900 379.312 cv
900 365.355 li
897.835 367.631 896.007 370.187 896.007 372.333 cv
f
129.242 349.265 mo
127.934 294.771 96.1093 246.381 96.1093 246.381 cv
56.8737 296.951 72.1318 371.499 72.568 372.807 cv
93.3247 372.807 li
93.5458 368.593 94.0252 363.914 94.604 359.353 cv
94.8226 357.806 95.04 356.266 95.2533 354.756 cv
95.4751 353.25 95.7355 351.782 95.9646 350.365 cv
96.4159 347.53 96.9213 344.922 97.3212 342.692 cv
98.1679 338.244 98.7253 335.315 98.7253 335.315 cv
98.7253 335.315 98.9889 338.282 99.3891 342.788 cv
99.6099 345.036 99.8289 347.669 100.155 350.49 cv
100.314 351.9 100.455 353.362 100.641 354.845 cv
100.834 356.323 101.031 357.83 101.228 359.344 cv
101.908 364.061 102.693 368.772 103.566 372.807 cv
136.902 372.807 li
137.415 371.09 137.982 369.239 138.529 367.388 cv
139.333 364.486 140.203 361.605 140.629 359.434 cv
141.123 357.246 141.448 355.805 141.448 355.805 cv
141.448 355.805 141.671 357.268 142.008 359.489 cv
142.407 361.736 142.636 364.742 142.922 367.843 cv
143.048 369.516 143.156 371.214 143.253 372.807 cv
156.271 372.807 li
156.271 356.677 144.5 328.34 144.5 328.34 cv
137.089 334.879 129.242 349.265 129.242 349.265 cv
.843137 .309804 .266667 rgb
f
100.641 354.845 mo
100.455 353.362 100.314 351.9 100.155 350.49 cv
99.8289 347.669 99.6099 345.036 99.389 342.788 cv
98.9889 338.282 98.7253 335.315 98.7253 335.315 cv
98.7253 335.315 98.1678 338.244 97.3212 342.692 cv
96.9212 344.922 96.416 347.53 95.9647 350.365 cv
95.7356 351.782 95.4751 353.25 95.2533 354.756 cv
95.04 356.266 94.8225 357.806 94.6041 359.353 cv
94.0253 363.914 93.5457 368.593 93.3248 372.807 cv
103.566 372.807 li
102.693 368.772 101.908 364.061 101.229 359.344 cv
101.031 357.83 100.834 356.323 100.641 354.845 cv
cp
.509804 .207843 .184314 rgb
f
142.008 359.489 mo
141.671 357.268 141.449 355.805 141.449 355.805 cv
141.449 355.805 141.123 357.246 140.629 359.434 cv
140.203 361.605 139.333 364.486 138.529 367.388 cv
137.982 369.239 137.415 371.09 136.902 372.807 cv
143.253 372.807 li
143.156 371.213 143.048 369.516 142.922 367.843 cv
142.636 364.742 142.407 361.736 142.008 359.489 cv
cp
f
77.4722 350.109 mo
77.4722 350.109 77.1719 348.284 76.6708 345.238 cv
76.4176 343.712 76.1718 341.877 75.905 339.805 cv
75.7746 338.767 75.6369 337.672 75.4929 336.528 cv
75.38 335.38 75.2622 334.184 75.1408 332.949 cv
74.6426 328.002 74.3752 322.389 74.3941 316.733 cv
74.4315 313.906 74.5579 311.069 74.7587 308.307 cv
74.89 306.928 75.0333 305.568 75.1892 304.236 cv
75.3361 302.902 75.5123 301.601 75.759 300.349 cv
76.2184 297.847 76.7677 295.166 77.4224 292.583 cv
78.0765 289.941 78.8232 287.224 79.6446 284.524 cv
81.2932 279.121 83.3099 273.79 85.5082 269.238 cv
87.6662 264.67 90.0668 260.934 91.9378 258.441 cv
92.4181 257.827 92.8502 257.275 93.2285 256.792 cv
93.6152 256.318 93.9765 255.933 94.2548 255.612 cv
94.8201 254.98 95.1283 254.635 95.1283 254.635 cv
95.1283 254.635 94.935 255.07 94.5815 255.866 cv
94.2077 256.644 93.7456 257.816 93.1914 259.265 cv
92.1117 262.184 90.893 266.317 89.9406 271.094 cv
88.9493 275.86 88.183 281.253 87.4625 286.627 cv
87.0941 289.326 86.7278 292.012 86.3736 294.606 cv
85.9712 297.268 85.6305 299.682 85.2063 301.97 cv
83.3245 312.321 81.3493 324.255 79.9141 333.736 cv
78.4933 343.262 77.4722 350.109 77.4722 350.109 cv
.905882 .431373 .360784 rgb
f
132.075 350.763 mo
132.075 350.763 132.244 349.538 132.676 347.959 cv
133.09 346.344 133.862 344.562 134.821 343.359 cv
135.742 342.194 137.434 341.181 138.739 340.367 cv
140.072 339.56 141.23 338.992 141.23 338.992 cv
141.23 338.992 141.058 340.241 140.624 341.849 cv
140.2 343.474 139.422 345.266 138.512 346.416 cv
137.499 347.677 135.816 348.701 134.525 349.488 cv
133.196 350.265 132.075 350.763 132.075 350.763 cv
f
802.916 360.817 mo
801.608 333.063 769.784 308.417 769.784 308.417 cv
730.548 334.173 745.806 372.141 746.242 372.807 cv
766.999 372.807 li
767.22 370.661 767.7 368.278 768.278 365.955 cv
768.497 365.167 768.714 364.383 768.928 363.613 cv
769.149 362.846 769.41 362.099 769.639 361.377 cv
770.09 359.933 770.596 358.605 770.996 357.469 cv
771.842 355.204 772.4 353.712 772.4 353.712 cv
772.4 353.712 772.663 355.223 773.063 357.518 cv
773.284 358.663 773.503 360.004 773.829 361.441 cv
773.988 362.159 774.13 362.903 774.316 363.659 cv
774.508 364.412 774.705 365.179 774.903 365.95 cv
775.582 368.353 776.368 370.752 777.24 372.807 cv
810.577 372.807 li
811.09 371.932 811.657 370.99 812.204 370.047 cv
813.008 368.569 813.877 367.101 814.304 365.996 cv
814.798 364.882 815.123 364.147 815.123 364.147 cv
815.123 364.147 815.345 364.893 815.683 366.024 cv
816.082 367.168 816.311 368.7 816.596 370.279 cv
816.723 371.131 816.83 371.995 816.927 372.807 cv
829.945 372.807 li
829.945 364.592 818.174 350.159 818.174 350.159 cv
810.763 353.49 802.916 360.817 802.916 360.817 cv
.843137 .309804 .266667 rgb
f
774.316 363.659 mo
774.129 362.903 773.989 362.159 773.829 361.441 cv
773.503 360.004 773.284 358.663 773.063 357.518 cv
772.663 355.223 772.4 353.712 772.4 353.712 cv
772.4 353.712 771.842 355.204 770.995 357.469 cv
770.596 358.605 770.09 359.933 769.639 361.377 cv
769.41 362.099 769.149 362.846 768.928 363.613 cv
768.714 364.383 768.497 365.167 768.278 365.955 cv
767.7 368.278 767.22 370.661 766.999 372.807 cv
777.24 372.807 li
776.368 370.752 775.582 368.353 774.903 365.95 cv
774.705 365.179 774.509 364.412 774.316 363.659 cv
cp
.509804 .207843 .184314 rgb
f
815.683 366.024 mo
815.345 364.893 815.123 364.147 815.123 364.147 cv
815.123 364.147 814.798 364.882 814.304 365.996 cv
813.877 367.102 813.008 368.569 812.204 370.047 cv
811.657 370.99 811.09 371.932 810.576 372.807 cv
816.927 372.807 li
816.83 371.995 816.723 371.131 816.596 370.279 cv
816.311 368.699 816.082 367.168 815.683 366.024 cv
cp
f
751.147 361.246 mo
751.147 361.246 750.925 360.252 750.556 358.595 cv
750.22 356.929 749.788 354.576 749.535 351.826 cv
749.361 350.452 749.357 348.98 749.288 347.452 cv
749.304 345.928 749.317 344.34 749.477 342.758 cv
749.647 341.175 749.827 339.579 750.202 338.054 cv
750.378 337.292 750.523 336.525 750.749 335.804 cv
750.979 335.085 751.216 334.383 751.46 333.706 cv
751.948 332.308 752.512 331.062 753.148 329.687 cv
753.811 328.313 754.519 326.92 755.348 325.554 cv
756.112 324.178 757.094 322.873 757.971 321.617 cv
758.471 321.018 758.962 320.428 759.443 319.85 cv
759.685 319.568 759.924 319.288 760.159 319.012 cv
760.422 318.755 760.681 318.502 760.936 318.252 cv
761.445 317.765 761.938 317.293 762.412 316.84 cv
762.873 316.386 763.418 316.039 763.876 315.672 cv
764.825 314.965 765.625 314.324 766.413 313.934 cv
767.906 313.113 768.803 312.621 768.803 312.621 cv
768.803 312.621 768.151 313.432 767.074 314.774 cv
766.506 315.392 766.003 316.302 765.383 317.229 cv
764.733 318.131 764.198 319.269 763.59 320.411 cv
761.183 325.024 759.65 331.254 757.881 336.064 cv
757.648 336.716 757.397 337.374 757.131 338.037 cv
756.901 338.709 756.668 339.389 756.434 340.072 cv
755.908 341.423 755.542 342.849 755.061 344.236 cv
754.245 347.047 753.473 349.857 752.931 352.388 cv
752.641 353.65 752.375 354.834 752.179 355.905 cv
751.966 356.974 751.758 357.924 751.628 358.717 cv
751.325 360.307 751.147 361.246 751.147 361.246 cv
.905882 .431373 .360784 rgb
f
805.75 361.58 mo
805.75 361.58 806.166 360.779 806.848 359.797 cv
807.527 358.787 808.489 357.743 809.438 357.135 cv
810.22 356.632 811.357 356.325 812.356 356.085 cv
812.435 357.017 812.513 357.95 812.593 358.883 cv
812.151 359.347 811.683 359.757 811.23 360.048 cv
810.227 360.686 808.819 361.011 807.74 361.258 cv
806.638 361.492 805.75 361.58 805.75 361.58 cv
f
714.591 298.129 mo
714.637 298.187 714.66 298.213 714.56 298.08 cv
714.591 298.129 li
cp
.835294 .333333 .290196 rgb
f
714.493 298.003 mo
714.56 298.08 li
714.48 297.983 714.474 297.978 714.493 298.003 cv
cp
f
714.493 298.003 mo
714.591 298.129 li
714.56 298.08 li
714.493 298.003 li
cp
f
687.815 276.277 mo
689.871 275.11 691.982 274.044 694.136 273.071 cv
701.459 269.764 708.559 265.175 716.642 268.254 cv
714.893 262.574 709.8 258.786 703.854 258.599 cv
696.951 258.382 691.571 262.851 688.435 268.67 cv
688.721 263.618 688.824 258.507 688.421 253.458 cv
688.316 252.134 687.529 249.387 688.592 248.523 cv
690.206 247.211 691.811 245.887 693.441 244.595 cv
696.855 241.889 699.86 239.385 702.777 236.154 cv
704.889 233.26 708.064 231.33 711.19 229.731 cv
706.281 226.759 700.171 226.424 695.135 229.36 cv
689.693 232.532 687.707 238.79 687.457 244.77 cv
686.423 238.287 684.496 232.055 681.671 226.135 cv
687.567 226.94 693.109 220.997 695.011 215.96 cv
697.199 210.165 695.051 203.152 692.656 197.75 cv
689.719 201.712 686.797 206.158 685.121 210.824 cv
683.374 215.692 685.057 221.672 681.556 225.896 cv
680.737 224.197 679.779 222.661 678.791 221.179 cv
679.752 222.995 680.539 224.901 680.892 225.759 cv
672.763 214.405 659.708 215.75 647.591 218.101 cv
652.48 222.03 658.602 225.255 664.529 227.273 cv
670.565 229.327 678.615 228.196 683.207 233.365 cv
683.252 232.888 683.266 232.41 683.249 231.93 cv
685.513 238.982 686.484 246.369 686.686 253.76 cv
682.32 240.513 665.1 237.227 654.133 244.268 cv
657.904 245.37 661.438 247.094 664.911 248.907 cv
669.469 251.287 674.067 253.082 678.764 255.116 cv
682.025 256.528 686.764 259.248 686.555 263.256 cv
686.251 269.074 685.581 274.866 684.699 280.623 cv
682.404 269.577 670.636 265.785 660.674 268.254 cv
667 273.43 672.213 279.727 678.008 285.467 cv
679.455 287.027 680.705 288.802 681.774 290.638 cv
682.922 292.61 682.298 293.877 681.876 296.112 cv
680.869 301.448 679.908 306.793 678.942 312.135 cv
676.346 302.984 666.301 298.383 657.404 300.598 cv
662.498 304.8 664.886 310.463 669.082 315.352 cv
671.642 318.335 674.133 321.333 676.039 324.79 cv
677.542 327.518 675.66 332.942 675.34 336.025 cv
671.985 328.398 659.61 321.279 652.316 328.219 cv
658.613 329.241 661.159 335.593 665.142 339.741 cv
667.734 342.439 670.655 344.805 672.957 347.779 cv
675.625 351.225 674.526 356.744 674.924 361.006 cv
676.268 375.386 681.606 388.122 689.166 400.242 cv
683.292 389.609 678.795 378.706 677.322 366.554 cv
676.982 363.752 675.729 359.862 678.05 357.996 cv
680.327 356.311 683.136 355.092 685.891 354.438 cv
691.722 352.543 696.89 348.369 703.195 348.207 cv
695.725 336.333 678.113 342.813 676.612 355.57 cv
676.605 350.591 676.799 345.411 677.442 340.481 cv
677.723 337.857 677.356 337.049 679.824 336.137 cv
682.099 335.297 684.208 334.104 686.429 333.143 cv
694.14 329.779 701.655 328.934 709.737 331.126 cv
706.989 324.874 701.513 319.769 694.33 319.83 cv
685.628 319.904 681.444 327.086 678.252 334.018 cv
679.078 328.095 680.121 322.203 681.202 316.322 cv
681.759 313.296 682.321 310.271 682.879 307.245 cv
684.794 305.839 686.91 304.637 689.103 303.726 cv
697.698 300.157 707.245 298.58 716.278 300.962 cv
715.771 300.002 715.243 299.001 714.591 298.129 cv
714.493 298.003 li
706.383 288.114 691.951 287.392 684.432 298.421 cv
685.308 293.349 686.275 288.297 686.984 283.198 cv
687.305 280.895 687.572 278.588 687.815 276.277 cv
f
678.792 221.179 mo
678.086 219.846 677.287 218.568 676.492 217.784 cv
677.243 218.913 678.026 220.03 678.792 221.179 cv
cp
f
661.038 186.484 mo
658.691 194.02 657.627 203.136 662.781 209.762 cv
665.745 213.571 670.118 216.83 675.096 217.003 cv
675.545 217.018 676.018 217.316 676.492 217.784 cv
674.75 215.167 673.184 212.475 672.427 209.106 cv
670.461 200.352 666.616 193.528 661.038 186.484 cv
cp
f
643.042 280.614 mo
644.791 280.72 639.567 280.36 643.042 280.614 cv
cp
.890196 .380392 .584314 rgb
f
633.735 272.723 mo
627.114 271.663 620.23 273.707 613.894 275.439 cv
617.868 277.255 622.16 278.525 626.415 279.488 cv
631.993 280.751 637.407 280.202 643.042 280.614 cv
639.567 280.36 644.791 280.72 643.042 280.614 cv
645.092 280.738 647.285 281.099 648.87 282.507 cv
647.757 276.549 638.874 273.546 633.735 272.723 cv
cp
f
641.486 272.468 mo
642.839 273.649 644.24 274.787 645.528 276.105 cv
644.165 274.302 642.712 272.82 641.486 272.468 cv
cp
f
637.448 268 mo
634.027 262.498 630.62 257.883 625.926 253.313 cv
624.466 262.754 629.093 274.53 640.692 272.407 cv
640.942 272.361 641.209 272.388 641.486 272.468 cv
639.99 271.161 638.559 269.788 637.448 268 cv
cp
f
652.116 328.262 mo
652.866 323.998 653.71 319.747 654.275 315.453 cv
654.651 312.592 654.165 311.285 656.841 309.946 cv
659.011 308.86 661.246 307.941 663.506 307.062 cv
669.697 304.653 674.841 301.483 681.692 302.519 cv
673.877 292.608 660.388 297.692 654.981 307.234 cv
655.155 302.811 654.976 298.346 654.159 293.989 cv
653.631 291.177 658.971 288.693 661.183 287.282 cv
665.956 284.34 669.907 280.447 674.81 277.654 cv
663.718 273.171 654.47 280.516 653.72 291.877 cv
652.472 286.715 650.337 282.054 647.073 277.867 cv
651.389 278.386 655.567 275.694 657.494 271.878 cv
659.618 267.674 658.138 262.35 656.253 258.332 cv
654.329 261.076 652.453 263.992 651.018 267.022 cv
649.299 270.652 649.582 274.442 646.952 277.712 cv
646.504 277.135 646.022 276.61 645.528 276.105 cv
647.605 278.85 649.472 282.326 650.005 283.638 cv
652.077 288.735 653.199 293.817 653.492 299.32 cv
652.494 293.416 645.088 289.466 639.733 288.587 cv
633.584 287.51 626.467 289.339 621.195 292.578 cv
627.006 293.512 632.62 295.336 638.411 296.35 cv
641.451 296.861 644.559 296.912 647.567 297.624 cv
649 297.963 653.675 299.845 653.544 301.182 cv
653.571 307.035 652.929 312.589 651.914 318.261 cv
650.919 306.416 637.305 304.959 628.47 308.339 cv
631.241 309.71 634.017 311.062 636.717 312.573 cv
640.133 314.484 644.126 315.88 647.291 318.17 cv
650.409 320.428 651.112 322.195 650.432 325.792 cv
649.514 330.656 648.57 335.515 647.702 340.388 cv
645.516 330.445 634.972 327.764 626.404 331.211 cv
631.983 334.004 637.212 337.686 642.175 341.458 cv
644.008 342.85 645.619 344.582 646.679 346.636 cv
646.171 350.069 645.75 353.524 645.562 356.99 cv
641.451 348.539 629.756 344.76 622.291 351.468 cv
628.09 351.859 632.462 355.393 637.455 357.939 cv
639.753 359.11 642.122 360.294 644.035 362.057 cv
646.447 364.279 645.723 368.399 646.297 371.51 cv
648.272 382.197 654.034 390.784 661.942 397.996 cv
651.417 387.309 646.346 374.636 647.205 359.562 cv
647.308 357.754 647.477 355.951 647.68 354.152 cv
649.101 353.759 650.434 353.206 651.766 352.575 cv
654.988 351.051 658.128 349.626 661.517 348.496 cv
667.242 346.588 672.308 345.342 678.396 345.923 cv
674.059 341.344 667.61 338.762 661.333 340.299 cv
654.334 342.013 651.69 347.789 647.805 353.075 cv
648.418 348.064 649.345 343.099 650.284 338.141 cv
650.611 336.416 650.546 333.367 652.061 332.358 cv
653.813 331.191 655.69 330.208 657.653 329.445 cv
665.519 326.387 674.514 323.767 682.998 324.495 cv
682.532 324.064 682.054 323.648 681.568 323.24 cv
672.687 315.12 658.12 318.602 652.116 328.262 cv
f
681.568 323.24 mo
682.5 324.023 681.11 322.821 681.568 323.24 cv
cp
f
647.79 370.179 mo
650.846 367.12 655.182 366.058 659.104 364.575 cv
663.884 362.767 667.898 359.606 673.038 358.683 cv
671.556 357.538 669.846 356.735 668.037 356.26 cv
659.197 353.7 647.514 360.119 647.79 370.179 cv
cp
f
668.037 356.26 mo
669.639 356.681 664.841 355.334 668.037 356.26 cv
cp
f
359.105 301.043 mo
359.082 300.794 359.127 301.427 359.105 301.043 cv
cp
.835294 .333333 .290196 rgb
f
359.139 301.637 mo
363.49 296.827 370.88 297.591 376.626 295.923 cv
382.955 294.049 389.531 290.379 394.755 286.373 cv
382.685 283.797 369.27 282.743 361.353 294.256 cv
362.728 291.051 364.608 288.153 366.569 285.287 cv
371.339 285.376 375.538 282.704 378.614 279.225 cv
384.678 272.367 383.652 262.967 381.308 254.755 cv
376.024 261.107 371.928 267.859 370.259 275.984 cv
368.726 283.451 363.984 287.486 360.787 294.159 cv
357.36 289.929 359.023 284.011 357.245 279.178 cv
355.527 274.508 352.544 270.075 349.69 266.021 cv
347.147 271.386 345.121 278.388 347.324 284.19 cv
349.237 289.23 354.793 295.131 360.671 294.404 cv
357.777 300.193 355.991 306.446 354.918 312.814 cv
354.622 306.208 352.01 299.475 345.506 296.821 cv
340.776 294.891 335.536 295.467 331.156 298.002 cv
337.706 301.596 341.752 307.671 347.808 311.94 cv
349.521 313.374 351.287 314.75 353.012 316.171 cv
354.894 317.722 354.091 319.238 353.93 321.589 cv
353.582 326.662 353.614 331.758 353.899 336.833 cv
350.813 331.156 345.565 326.815 338.843 326.92 cv
332.792 327.015 327.605 330.804 325.704 336.525 cv
333.471 333.716 339.695 337.677 346.751 340.658 cv
349.022 341.618 351.244 342.692 353.402 343.884 cv
355.396 344.984 354.959 348.615 355.258 350.796 cv
355.981 356.076 356.98 361.308 357.89 366.558 cv
349.385 354.37 332.863 357.052 326.068 369.233 cv
335.172 367.011 344.873 368.478 353.509 372.077 cv
355.612 372.954 357.63 374.125 359.461 375.483 cv
359.983 378.307 360.502 381.131 361.027 383.954 cv
362.157 390.04 363.257 396.134 364.113 402.266 cv
361.128 395.674 357.202 388.749 349.076 388.164 cv
341.49 387.618 335.638 392.925 332.61 399.397 cv
340.687 397.282 348.097 398.163 355.826 401.333 cv
358.08 402.255 360.187 403.493 362.468 404.359 cv
364.684 405.202 364.48 404.837 364.765 407.33 cv
365.392 412.716 365.767 418.25 365.75 423.675 cv
364.177 410.845 346.709 404.988 339.151 416.478 cv
344.758 416.818 348.53 420.251 353.67 421.875 cv
356.987 422.923 360.312 423.653 363.289 425.55 cv
364.996 426.637 365.712 426.904 365.602 428.919 cv
365.491 430.931 365.317 432.94 365.059 434.938 cv
363.492 447.078 359.062 457.907 353.18 468.513 cv
360.806 456.328 366.027 443.656 367.42 429.232 cv
367.773 425.574 367.873 421.929 367.903 418.257 cv
370.087 414.665 373.309 411.894 376.268 408.97 cv
380.591 404.699 383.296 397.391 390.031 396.49 cv
382.792 389.363 370.335 396.657 367.027 404.297 cv
366.787 402.02 364.867 395.94 365.836 393.991 cv
367.604 390.594 369.929 387.57 372.398 384.66 cv
376.851 379.411 379.39 373.217 384.943 368.87 cv
376.033 366.348 365.903 371.357 363.422 380.481 cv
362.564 375.744 361.695 371.008 360.819 366.275 cv
360.494 364.516 359.231 361.43 360.077 359.834 cv
361.112 357.642 362.748 355.695 364.288 353.85 cv
370.209 348.146 375.16 341.597 381.672 336.525 cv
371.659 333.775 359.868 337.976 357.664 349.015 cv
356.889 343.969 356.246 338.902 355.911 333.806 cv
355.605 329.17 357.078 326.939 361.345 324.539 cv
365.934 321.956 371.089 320.53 375.742 317.992 cv
379.735 315.826 383.808 313.727 388.213 312.539 cv
377.253 305.134 359.892 308.992 355.636 322.237 cv
355.956 314.697 356.83 307.312 359.119 300.093 cv
359.114 300.41 359.11 300.726 359.105 301.043 cv
359.116 301.241 359.128 301.439 359.139 301.637 cv
f
226.129 279.297 mo
226.229 279.328 226.329 279.358 226.429 279.388 cv
226.14 279.3 226.082 279.282 226.129 279.297 cv
cp
.890196 .380392 .584314 rgb
f
226.129 279.297 mo
226.262 279.34 227.241 279.642 226.429 279.388 cv
226.329 279.358 226.229 279.328 226.129 279.297 cv
cp
f
226.129 279.297 mo
220.072 277.451 213.453 275.742 207.13 277.076 cv
202.282 278.099 193.969 281.175 193.205 286.987 cv
197.285 283.184 205.197 285.322 210.206 284.852 cv
216.268 284.27 222.609 282.361 228.185 279.937 cv
227.6 279.754 227.014 279.571 226.429 279.388 cv
227.241 279.642 226.262 279.34 226.129 279.297 cv
cp
f
209.672 262.781 mo
207.422 265.548 206.272 268.53 204.549 271.59 cv
203.52 273.416 202.124 274.872 200.641 276.256 cv
200.843 276.219 201.04 276.215 201.23 276.251 cv
206.191 277.2 211.604 274.63 214.227 270.329 cv
216.806 266.197 216.535 260.602 215.772 255.992 cv
213.604 258.115 211.585 260.428 209.672 262.781 cv
cp
f
196.333 280.333 mo
197.695 278.874 199.207 277.596 200.641 276.256 cv
199.316 276.501 197.758 278.246 196.333 280.333 cv
cp
f
189.102 306.769 mo
189.255 306.493 188.925 307.047 189.102 306.769 cv
cp
f
189.102 306.769 mo
189.013 306.908 189.051 306.839 189.093 306.77 cv
189.134 306.701 189.178 306.631 189.102 306.769 cv
191.879 301.777 200.316 302.612 205.041 301.637 cv
210.415 300.527 215.658 298.878 221.125 298.229 cv
216.229 294.832 209.666 293.064 203.734 293.644 cv
197.831 294.221 190.088 298.301 188.843 304.645 cv
189.014 298.897 189.942 293.158 192.199 287.84 cv
192.713 286.63 194.399 283.166 196.333 280.333 cv
195.883 280.815 195.447 281.313 195.04 281.846 cv
192.436 278.368 192.77 274.353 191.061 270.543 cv
189.555 267.188 187.452 263.977 185.425 260.913 cv
181.6 268.987 183.118 282.727 194.907 282.022 cv
191.669 286.332 189.605 291.411 188.506 296.669 cv
187.947 284.908 178.609 277.345 167.107 281.376 cv
172.445 284.716 176.929 289.049 182.013 292.739 cv
184.13 294.275 188.497 296.408 188.051 299.174 cv
187.313 303.75 187.179 308.415 187.392 313.039 cv
182.146 303.4 168.488 297.743 160.586 307.97 cv
167.451 306.96 172.228 310.227 178.292 312.844 cv
180.322 313.72 182.359 314.591 184.314 315.627 cv
187.02 317.041 187.621 317.217 187.988 320.264 cv
188.588 325.399 189.618 330.463 190.519 335.549 cv
183.963 324.251 168.88 322.997 159.615 331.549 cv
167.815 330.913 176.194 333.491 183.697 336.661 cv
185.823 337.56 187.876 338.543 189.803 339.823 cv
192.172 341.396 192.013 343.617 192.531 346.316 cv
193.572 351.743 194.6 357.175 195.322 362.655 cv
191.693 357.181 189.163 351.215 182.266 349.161 cv
175.804 347.235 169.048 349.859 164.562 354.631 cv
170.743 354.063 175.773 355.392 181.494 357.587 cv
184.897 358.892 188.052 360.45 191.285 362.121 cv
192.652 362.827 194.022 363.457 195.488 363.926 cv
195.782 366.327 196.009 368.733 196.127 371.149 cv
196.871 386.416 192.23 399.606 181.873 410.802 cv
189.473 403.393 194.938 394.691 196.921 384.134 cv
197.449 381.326 197.752 378.479 197.858 375.624 cv
197.975 372.499 201.519 370.576 204 369.111 cv
209.333 366.012 214.49 361.563 220.934 361.45 cv
213.76 354.18 201.626 358.303 197.69 366.818 cv
197.546 364.723 197.339 362.633 197.084 360.55 cv
196.926 359.263 196.052 356.632 196.634 355.487 cv
198.07 352.716 200.477 350.595 202.956 348.785 cv
207.465 345.493 211.4 342.045 216.495 339.634 cv
207.91 335.773 197.382 338.939 195.248 348.807 cv
194.437 344.344 193.572 339.891 192.724 335.435 cv
192.375 333.604 192.014 331.778 191.635 329.953 cv
192.402 328.567 193.286 327.364 194.379 326.215 cv
197.145 323.526 201.087 322.088 204.365 320.114 cv
207.51 318.22 210.749 316.599 214.07 315.041 cv
205.023 311.152 191.855 313.14 190.658 324.946 cv
189.582 319.032 188.844 313.165 188.813 307.077 cv
188.822 307.36 188.919 307.258 189.102 306.769 cv
f
191.211 377.914 mo
191.287 377.954 li
191.26 377.938 li
191.211 377.914 li
f
170.134 368.415 mo
173.6 369.122 176.658 370.764 179.683 372.533 cv
183.385 374.698 187.437 375.926 191.211 377.914 cv
190.734 377.662 189.226 376.863 191.26 377.938 cv
191.373 377.999 191.362 377.993 191.287 377.954 cv
192.884 378.809 194.38 379.841 195.641 381.15 cv
196.216 368.545 179.795 361.135 170.134 368.415 cv
f
305.412 332.148 mo
306.551 338.613 307.395 345.036 307.792 351.593 cv
307.886 353.674 307.886 355.745 307.841 357.811 cv
307.73 362.897 307.338 367.953 307.34 373.054 cv
309.559 373.089 311.777 373.122 313.996 373.157 cv
313.996 367.81 313.42 362.441 312.447 357.12 cv
310.884 348.576 308.296 340.155 305.412 332.148 cv
.27451 .203922 .129412 rgb
f
307.843 357.714 mo
307.86 356.907 307.87 356.099 307.87 355.29 cv
307.87 356.099 307.86 356.907 307.843 357.714 cv
.290196 .133333 .309804 rgb
f
307.841 357.811 mo
307.841 357.778 307.842 357.746 307.843 357.714 cv
307.86 356.907 307.87 356.099 307.87 355.29 cv
307.87 354.661 307.864 354.031 307.851 353.4 cv
309.154 353.302 310.414 353.178 311.622 353.037 cv
311.921 354.394 312.197 355.755 312.446 357.12 cv
310.911 357.367 309.376 357.608 307.841 357.811 cv
.243137 .168627 .121569 rgb
f
318.316 319.951 mo
316.576 320.474 314.927 320.969 313.643 321.401 cv
311.982 321.938 310.887 322.292 310.887 322.292 cv
310.887 322.292 311.866 321.688 313.353 320.771 cv
314.553 320.014 316.111 319.104 317.757 318.148 cv
314.606 308.026 310.995 297.275 307.495 287.213 cv
306.429 287.961 305.393 288.692 304.465 289.318 cv
304.043 289.602 303.641 289.866 303.273 290.097 cv
302.053 290.888 301.25 291.41 301.25 291.41 cv
301.25 291.41 301.872 290.682 302.815 289.577 cv
303.248 289.087 303.734 288.502 304.249 287.87 cv
304.871 287.106 305.536 286.271 306.211 285.432 cv
306.364 285.238 306.517 285.043 306.67 284.848 cv
304.733 279.311 302.844 274.021 301.103 269.204 cv
295.929 254.894 292.051 244.758 292.051 244.758 cv
291.049 299.677 li
292.163 299.984 293.221 300.235 294.087 300.425 cv
294.722 300.565 295.254 300.646 295.627 300.72 cv
296 300.789 296.213 300.828 296.213 300.828 cv
296.213 300.828 296 300.858 295.624 300.911 cv
295.249 300.958 294.708 301.05 294.053 301.117 cv
293.202 301.206 292.149 301.297 291.018 301.352 cv
290.39 335.768 li
290.08 352.736 li
295.368 353.618 300.6 353.774 305.373 353.552 cv
317.209 352.999 326.219 350.108 326.219 350.108 cv
325.638 346.814 324.765 342.957 323.676 338.707 cv
322.222 333.03 320.38 326.65 318.316 319.951 cv
.803922 .337255 .309804 rgb
f
304.804 287.184 mo
305.26 286.618 305.733 286.026 306.211 285.432 cv
306.364 285.238 306.517 285.043 306.67 284.848 cv
306.67 284.848 li
306.517 285.043 306.364 285.238 306.211 285.432 cv
305.733 286.026 305.26 286.618 304.804 287.184 cv
.32549 .164706 .356863 rgb
f
304.248 287.87 mo
303.305 281.621 302.227 275.393 301.103 269.204 cv
302.844 274.021 304.733 279.311 306.67 284.848 cv
306.517 285.043 306.364 285.238 306.211 285.432 cv
305.733 286.026 305.26 286.618 304.804 287.184 cv
304.616 287.417 304.43 287.647 304.248 287.87 cv
.670588 .282353 .301961 rgb
f
298.356 353.577 mo
298.136 353.568 297.914 353.558 297.693 353.547 cv
297.693 353.547 li
297.914 353.558 298.136 353.568 298.356 353.577 cv
298.356 353.577 li
.356863 .180392 .360784 rgb
f
301.531 353.642 mo
300.487 353.642 299.427 353.622 298.356 353.577 cv
298.356 353.577 li
299.428 353.622 300.487 353.642 301.531 353.642 cv
302.839 353.642 304.122 353.61 305.373 353.552 cv
306.214 353.512 307.041 353.461 307.851 353.4 cv
307.851 353.4 li
307.041 353.461 306.214 353.512 305.373 353.552 cv
304.121 353.61 302.838 353.642 301.531 353.642 cv
.301961 .14902 .329412 rgb
f
297.693 353.547 mo
295.199 353.421 292.646 353.164 290.08 352.736 cv
290.08 352.736 li
292.646 353.164 295.199 353.421 297.693 353.547 cv
297.693 353.547 li
.27451 .133333 .309804 rgb
f
326.219 350.108 mo
326.214 350.082 326.21 350.057 326.205 350.031 cv
326.21 350.057 326.214 350.082 326.219 350.108 cv
326.205 350.03 mo
326.201 350.006 326.197 349.982 326.192 349.958 cv
326.197 349.982 326.201 350.006 326.205 350.03 cv
326.188 349.933 mo
326.185 349.918 326.183 349.904 326.18 349.889 cv
326.183 349.904 326.185 349.918 326.188 349.933 cv
326.171 349.839 mo
326.17 349.834 326.169 349.83 326.168 349.825 cv
326.169 349.83 326.17 349.834 326.171 349.839 cv
.356863 .180392 .360784 rgb
f
301.531 353.642 mo
300.487 353.642 299.428 353.622 298.356 353.577 cv
298.136 353.568 297.914 353.558 297.693 353.547 cv
295.199 353.421 292.646 353.164 290.08 352.736 cv
290.08 352.736 li
290.15 348.922 li
290.339 349.001 290.53 349.078 290.722 349.153 cv
290.732 349.164 290.743 349.176 290.754 349.187 cv
292.175 350.65 296.109 350.859 298.041 351.18 cv
299.042 351.346 300.051 351.471 301.063 351.556 cv
302.178 351.653 303.297 351.702 304.417 351.702 cv
305.804 351.702 307.19 351.628 308.568 351.479 cv
311.573 351.17 314.549 350.468 317.389 349.439 cv
317.472 349.408 317.62 349.352 317.818 349.274 cv
318.297 349.092 318.77 348.9 319.24 348.697 cv
321.639 347.695 325.407 345.992 325.262 345.331 cv
325.262 345.331 li
325.262 345.331 li
325.611 346.918 325.916 348.423 326.168 349.825 cv
326.169 349.83 326.17 349.834 326.171 349.839 cv
326.174 349.856 326.177 349.872 326.18 349.889 cv
326.183 349.904 326.185 349.918 326.188 349.933 cv
326.189 349.941 326.191 349.95 326.192 349.958 cv
326.197 349.982 326.201 350.006 326.205 350.03 cv
326.205 350.03 326.205 350.031 326.205 350.031 cv
326.21 350.057 326.214 350.082 326.219 350.108 cv
326.219 350.108 li
326.219 350.108 320.239 352.027 311.622 353.037 cv
310.414 353.178 309.154 353.302 307.851 353.4 cv
307.851 353.4 li
307.041 353.461 306.214 353.512 305.373 353.552 cv
304.122 353.61 302.839 353.642 301.531 353.642 cv
.737255 .309804 .305882 rgb
f
290.168 347.928 mo
290.103 347.468 290.137 346.973 290.194 346.475 cv
290.168 347.928 li
.247059 .121569 .305882 rgb
f
317.348 316.84 mo
314.296 307.103 310.845 296.843 307.495 287.213 cv
310.845 296.842 314.296 307.103 317.348 316.84 cv
304.466 289.316 mo
304.466 289.316 li
305.264 288.779 306.141 288.164 307.047 287.527 cv
306.141 288.164 305.263 288.779 304.466 289.316 cv
.32549 .164706 .356863 rgb
f
304.464 289.318 mo
304.464 289.318 li
304.465 289.317 304.466 289.317 304.466 289.316 cv
304.466 289.316 li
304.466 289.317 304.465 289.317 304.465 289.318 cv
304.465 289.318 304.465 289.318 304.464 289.318 cv
.27451 .133333 .32549 rgb
f
304.371 351.694 mo
303.267 351.694 302.163 351.649 301.063 351.556 cv
297.512 351.248 294.013 350.447 290.722 349.153 cv
290.392 348.797 290.232 348.379 290.168 347.928 cv
290.194 346.475 li
290.249 345.998 290.324 345.519 290.35 345.063 cv
290.53 341.99 290.323 338.922 290.394 335.85 cv
294.002 336.932 298.033 338.362 301.852 338.362 cv
301.904 338.362 301.957 338.362 302.01 338.361 cv
311.185 338.266 307.496 319.51 307.185 314.423 cv
306.672 306.018 305.693 297.647 304.464 289.318 cv
304.465 289.318 304.465 289.318 304.465 289.318 cv
304.465 289.317 304.466 289.317 304.466 289.316 cv
305.263 288.779 306.141 288.164 307.047 287.527 cv
307.196 287.423 307.345 287.318 307.495 287.213 cv
307.495 287.213 li
310.845 296.843 314.296 307.103 317.348 316.84 cv
317.485 317.277 317.622 317.713 317.757 318.148 cv
316.111 319.104 314.553 320.014 313.353 320.771 cv
311.866 321.688 310.887 322.292 310.887 322.292 cv
310.887 322.292 li
310.887 322.292 li
310.887 322.292 311.982 321.938 313.643 321.401 cv
314.927 320.969 316.576 320.474 318.316 319.951 cv
320.38 326.65 322.222 333.03 323.676 338.707 cv
324.275 341.045 324.806 343.259 325.262 345.331 cv
323.378 346.662 321.356 347.784 319.24 348.697 cv
318.662 348.938 318.163 349.139 317.818 349.274 cv
314.858 350.402 311.736 351.137 308.568 351.479 cv
308.53 351.483 308.492 351.487 308.454 351.49 cv
307.098 351.625 305.734 351.694 304.371 351.694 cv
.670588 .282353 .301961 rgb
f
301.063 351.556 mo
300.051 351.471 299.042 351.346 298.041 351.18 cv
296.109 350.859 292.175 350.65 290.754 349.187 cv
290.743 349.176 290.732 349.164 290.722 349.153 cv
294.013 350.447 297.512 351.248 301.063 351.556 cv
308.568 351.479 mo
311.736 351.137 314.858 350.402 317.818 349.274 cv
317.62 349.352 317.472 349.408 317.389 349.439 cv
314.549 350.468 311.573 351.17 308.568 351.479 cv
319.24 348.697 mo
321.356 347.784 323.378 346.662 325.262 345.331 cv
325.262 345.331 li
325.407 345.992 321.639 347.695 319.24 348.697 cv
.615686 .258824 .298039 rgb
f
502.287 342.369 mo
503.788 348.034 504.785 353.63 504.882 359.365 cv
504.882 361.187 504.746 363.009 504.511 364.831 cv
503.933 369.317 502.746 373.817 501.46 378.313 cv
503.557 378.044 505.655 377.775 507.754 377.505 cv
509.052 372.871 509.308 368.293 508.839 363.759 cv
508.085 356.485 505.471 349.314 502.287 342.369 cv
.27451 .203922 .129412 rgb
f
504.785 362.098 mo
504.811 361.714 504.833 361.331 504.849 360.947 cv
504.849 360.947 li
504.833 361.331 504.811 361.714 504.785 362.098 cv
.380392 .141176 .278431 rgb
f
504.511 364.831 mo
504.629 363.92 504.721 363.009 504.785 362.098 cv
504.811 361.714 504.833 361.331 504.849 360.947 cv
506.055 360.738 507.221 360.514 508.34 360.279 cv
508.55 361.436 508.718 362.596 508.839 363.759 cv
507.397 364.129 505.953 364.497 504.511 364.831 cv
.243137 .168627 .121569 rgb
f
512.576 331.256 mo
511.095 331.748 509.69 332.221 508.598 332.631 cv
507.184 333.144 506.249 333.487 506.249 333.487 cv
506.248 333.487 507.053 332.928 508.267 332.092 cv
509.244 331.402 510.517 330.575 511.854 329.718 cv
507.78 321.081 503.04 311.694 499.208 302.696 cv
498.353 303.314 497.523 303.922 496.777 304.446 cv
496.438 304.683 496.115 304.905 495.818 305.097 cv
494.836 305.76 494.19 306.202 494.19 306.202 cv
494.19 306.202 494.66 305.571 495.377 304.619 cv
495.708 304.198 496.077 303.696 496.468 303.154 cv
496.942 302.501 497.448 301.786 497.966 301.075 cv
498.084 300.909 498.2 300.743 498.318 300.578 cv
496.257 295.612 494.506 290.803 493.173 286.381 cv
489.106 273.242 489.219 263.525 489.179 263.538 cv
483.803 280.109 484.541 296.739 486.156 313.432 cv
487.159 313.728 488.107 313.971 488.883 314.154 cv
489.452 314.289 489.925 314.369 490.258 314.441 cv
490.592 314.508 490.781 314.545 490.781 314.545 cv
490.781 314.545 490.599 314.57 490.277 314.613 cv
489.955 314.651 489.493 314.727 488.929 314.781 cv
488.196 314.852 487.288 314.922 486.306 314.959 cv
487.348 325.422 488.67 335.91 488.974 346.424 cv
489.124 351.607 489.026 356.798 488.525 361.994 cv
493.328 362.316 498.144 361.955 502.557 361.314 cv
513.521 359.696 521.854 356.457 521.838 356.47 cv
521.334 353.747 520.447 350.562 519.203 347.028 cv
517.548 342.308 515.242 336.959 512.576 331.256 cv
.933333 .270588 .419608 rgb
f
497.2 302.136 mo
497.451 301.787 497.707 301.431 497.966 301.075 cv
498.084 300.909 498.2 300.743 498.318 300.578 cv
498.318 300.578 li
498.2 300.743 498.084 300.909 497.966 301.075 cv
497.707 301.431 497.451 301.787 497.2 302.136 cv
.415686 .176471 .313725 rgb
f
496.468 303.154 mo
495.145 297.58 493.953 291.984 493.172 286.381 cv
494.507 290.803 496.256 295.612 498.318 300.578 cv
498.2 300.743 498.084 300.909 497.966 301.075 cv
497.707 301.431 497.451 301.787 497.2 302.136 cv
496.95 302.486 496.705 302.828 496.468 303.154 cv
496.468 303.154 li
496.468 303.154 li
.780392 .227451 .407843 rgb
f
492.196 362.114 mo
490.976 362.114 489.75 362.076 488.525 361.994 cv
488.525 361.994 488.525 361.994 488.525 361.994 cv
489.75 362.076 490.976 362.114 492.196 362.114 cv
493.833 362.114 495.458 362.046 497.056 361.926 cv
497.056 361.926 li
495.458 362.046 493.832 362.114 492.196 362.114 cv
.454902 .192157 .317647 rgb
f
497.056 361.926 mo
497.056 361.926 li
498.737 361.8 500.387 361.617 501.988 361.395 cv
500.387 361.617 498.737 361.8 497.056 361.926 cv
502.434 361.332 mo
502.475 361.326 502.516 361.32 502.557 361.314 cv
502.791 361.279 503.026 361.244 503.258 361.208 cv
503.026 361.244 502.791 361.279 502.557 361.314 cv
502.516 361.32 502.475 361.326 502.434 361.332 cv
.396078 .156863 .294118 rgb
f
492.196 362.114 mo
490.976 362.114 489.75 362.076 488.525 361.994 cv
488.638 360.826 488.73 359.658 488.804 358.491 cv
488.975 358.548 489.147 358.603 489.32 358.656 cv
489.329 358.665 489.337 358.674 489.346 358.682 cv
490.583 359.903 494.18 359.744 495.94 359.863 cv
496.676 359.912 497.419 359.936 498.165 359.936 cv
498.434 359.936 498.703 359.933 498.972 359.927 cv
501.294 359.88 503.65 359.606 505.977 359.12 cv
508.623 358.577 511.251 357.73 513.748 356.655 cv
514.531 356.31 521.111 353.276 520.927 352.527 cv
521.305 353.926 521.611 355.247 521.838 356.47 cv
521.821 356.47 513.854 359.562 503.258 361.208 cv
503.026 361.244 502.791 361.279 502.557 361.314 cv
502.516 361.32 502.475 361.326 502.434 361.332 cv
502.286 361.353 502.137 361.374 501.988 361.395 cv
500.387 361.617 498.737 361.8 497.056 361.926 cv
495.458 362.046 493.833 362.114 492.196 362.114 cv
.854902 .247059 .415686 rgb
f
521.838 356.47 mo
521.838 356.47 li
521.838 356.469 521.838 356.469 521.838 356.469 cv
521.838 356.469 521.838 356.469 521.838 356.47 cv
521.838 356.47 mo
521.838 356.47 li
521.838 356.469 521.838 356.469 521.838 356.469 cv
521.838 356.47 521.838 356.47 521.838 356.47 cv
521.838 356.469 521.838 356.469 521.838 356.469 cv
f
488.858 357.578 mo
488.813 357.162 488.859 356.705 488.923 356.243 cv
488.904 356.688 488.882 357.133 488.858 357.578 cv
517.016 341.307 mo
517.016 341.307 li
517.016 341.307 li
517.016 341.307 li
517.016 341.307 li
.415686 .176471 .313725 rgb
f
517.016 341.307 mo
516.8 340.78 516.579 340.247 516.352 339.709 cv
516.579 340.247 516.801 340.78 517.016 341.307 cv
517.016 341.307 li
.360784 .145098 .290196 rgb
f
519.203 347.028 mo
518.565 345.209 517.831 343.297 517.016 341.307 cv
517.016 341.307 li
517.831 343.297 518.565 345.209 519.203 347.028 cv
.329412 .129412 .278431 rgb
f
506.249 333.487 mo
506.249 333.487 506.249 333.486 506.25 333.486 cv
506.288 333.472 507.163 333.152 508.482 332.674 cv
507.132 333.163 506.249 333.487 506.249 333.487 cv
506.583 333.255 mo
506.928 333.016 507.52 332.606 508.267 332.092 cv
508.267 332.092 li
508.267 332.092 li
507.52 332.607 506.928 333.016 506.583 333.255 cv
508.485 332.672 mo
508.522 332.659 508.56 332.645 508.598 332.631 cv
508.56 332.645 508.522 332.659 508.485 332.672 cv
508.598 332.631 mo
509.689 332.221 511.096 331.747 512.576 331.256 cv
511.095 331.748 509.69 332.221 508.598 332.631 cv
511.179 330.152 mo
511.402 330.008 511.627 329.863 511.854 329.718 cv
511.854 329.718 li
511.627 329.863 511.402 330.008 511.179 330.152 cv
511.854 329.718 mo
511.007 327.922 510.131 326.094 509.241 324.244 cv
510.131 326.094 511.007 327.922 511.854 329.718 cv
.360784 .145098 .290196 rgb
f
496.777 304.446 mo
497.523 303.922 498.353 303.314 499.208 302.696 cv
498.353 303.314 497.523 303.922 496.777 304.446 cv
.415686 .176471 .313725 rgb
f
498.265 359.934 mo
495.16 359.934 492.13 359.521 489.32 358.656 cv
489.032 358.357 488.901 357.987 488.858 357.578 cv
488.882 357.133 488.904 356.688 488.923 356.243 cv
488.984 355.802 489.061 355.357 489.09 354.939 cv
489.293 352.11 489.048 349.316 488.982 346.499 cv
491.954 347.209 495.249 348.124 498.398 348.124 cv
498.794 348.124 499.189 348.109 499.58 348.078 cv
508.11 347.405 503.097 331.19 502.035 326.661 cv
500.55 319.263 498.565 311.87 496.777 304.446 cv
496.777 304.446 li
497.523 303.922 498.353 303.314 499.208 302.696 cv
499.208 302.696 li
502.243 309.824 505.848 317.195 509.241 324.244 cv
510.131 326.094 511.007 327.922 511.854 329.718 cv
511.854 329.718 li
511.627 329.863 511.402 330.008 511.179 330.152 cv
510.093 330.852 509.078 331.519 508.267 332.092 cv
508.267 332.092 li
507.52 332.606 506.928 333.016 506.583 333.255 cv
506.368 333.404 506.249 333.486 506.249 333.486 cv
506.249 333.486 li
506.249 333.486 506.249 333.486 506.25 333.486 cv
506.249 333.486 506.249 333.487 506.249 333.487 cv
506.249 333.487 507.132 333.163 508.482 332.674 cv
508.483 332.673 508.484 332.673 508.485 332.672 cv
508.522 332.659 508.56 332.645 508.598 332.631 cv
508.598 332.631 li
508.598 332.631 li
509.69 332.221 511.095 331.748 512.576 331.256 cv
512.576 331.256 li
513.942 334.179 515.214 337.009 516.352 339.709 cv
516.579 340.247 516.8 340.78 517.016 341.307 cv
517.016 341.307 li
517.831 343.297 518.565 345.209 519.203 347.028 cv
519.203 347.028 li
519.887 348.972 520.461 350.807 520.925 352.521 cv
516.614 355.725 511.372 357.992 505.977 359.12 cv
505.816 359.153 505.655 359.185 505.494 359.215 cv
503.32 359.631 501.133 359.877 498.972 359.927 cv
498.736 359.932 498.501 359.934 498.265 359.934 cv
520.927 352.527 mo
520.926 352.525 520.926 352.523 520.925 352.521 cv
520.926 352.523 520.926 352.525 520.927 352.527 cv
.780392 .227451 .407843 rgb
f
498.165 359.936 mo
497.419 359.936 496.676 359.912 495.94 359.863 cv
494.18 359.744 490.583 359.903 489.346 358.682 cv
489.337 358.674 489.329 358.665 489.32 358.656 cv
492.13 359.521 495.16 359.934 498.265 359.934 cv
498.501 359.934 498.736 359.932 498.972 359.927 cv
498.703 359.933 498.434 359.936 498.165 359.936 cv
505.977 359.12 mo
511.372 357.992 516.614 355.725 520.925 352.521 cv
520.925 352.521 li
520.925 352.521 li
520.926 352.523 520.926 352.525 520.927 352.527 cv
521.111 353.276 514.531 356.31 513.748 356.655 cv
511.251 357.73 508.623 358.577 505.977 359.12 cv
.713725 .207843 .403922 rgb
f
242.035 316.266 mo
242.9 326.045 243.865 335.703 245.014 345.604 cv
245.325 348.752 245.571 351.897 245.843 355.046 cv
246.517 362.794 247.314 370.574 249.648 378.341 cv
253.571 377.839 257.495 377.335 261.42 376.83 cv
258.866 368.839 256.206 360.949 253.618 353.137 cv
249.453 340.602 245.483 328.245 242.035 316.266 cv
.27451 .203922 .129412 rgb
f
245.843 355.046 mo
245.843 355.046 li
245.65 352.808 245.47 350.572 245.27 348.335 cv
247.474 347.96 249.601 347.558 251.637 347.14 cv
252.291 349.134 252.952 351.133 253.618 353.137 cv
251.032 353.794 248.442 354.448 245.843 355.046 cv
.243137 .168627 .121569 rgb
f
264.592 296.99 mo
261.777 297.85 259.099 298.677 257 299.393 cv
254.288 300.289 252.493 300.887 252.493 300.887 cv
252.493 300.887 254.154 299.918 256.66 298.464 cv
258.685 297.265 261.293 295.829 264.028 294.338 cv
260.88 279.445 258.077 263.246 254.628 247.729 cv
252.992 248.804 251.382 249.863 249.934 250.772 cv
249.277 251.185 248.649 251.569 248.075 251.905 cv
246.167 253.059 244.893 253.827 244.894 253.826 cv
244.893 253.827 245.948 252.731 247.515 251.083 cv
248.231 250.353 249.035 249.482 249.88 248.544 cv
250.902 247.41 251.985 246.173 253.067 244.939 cv
253.312 244.652 253.557 244.365 253.801 244.077 cv
251.829 235.516 249.625 227.232 247.216 219.618 cv
240.253 196.995 230.548 180.349 230.583 180.371 cv
237.779 208.893 233.691 237.553 227.896 266.37 cv
229.457 266.875 230.955 267.286 232.187 267.598 cv
233.091 267.827 233.859 267.964 234.392 268.084 cv
234.928 268.197 235.233 268.261 235.233 268.261 cv
235.233 268.261 234.908 268.305 234.336 268.381 cv
233.765 268.45 232.937 268.585 231.944 268.681 cv
230.653 268.807 229.061 268.935 227.362 269.007 cv
223.673 287.071 219.43 305.196 217.009 323.387 cv
215.816 332.356 215.065 341.341 215.043 350.342 cv
224.046 350.844 232.981 350.161 241.073 348.998 cv
261.166 346.066 276.028 340.388 276.023 340.41 cv
274.646 335.728 272.962 330.25 271.264 324.166 cv
268.979 316.04 266.695 306.825 264.592 296.99 cv
.933333 .270588 .419608 rgb
f
252.377 245.726 mo
252.607 245.464 252.837 245.201 253.067 244.939 cv
253.312 244.652 253.557 244.365 253.801 244.077 cv
253.801 244.077 li
253.557 244.365 253.312 244.652 253.067 244.939 cv
252.837 245.201 252.607 245.464 252.377 245.726 cv
.32549 .164706 .356863 rgb
f
249.88 248.544 mo
249.607 238.924 248.794 229.274 247.216 219.618 cv
249.625 227.232 251.829 235.516 253.801 244.077 cv
253.557 244.365 253.312 244.652 253.067 244.939 cv
252.837 245.201 252.607 245.464 252.377 245.726 cv
251.527 246.694 250.685 247.651 249.88 248.544 cv
249.88 248.544 li
249.88 248.544 li
.780392 .227451 .407843 rgb
f
220.611 350.508 mo
218.763 350.499 216.904 350.446 215.043 350.342 cv
215.043 350.342 li
216.904 350.446 218.762 350.499 220.611 350.508 cv
220.611 350.508 li
.356863 .180392 .360784 rgb
f
221.159 350.509 mo
220.977 350.509 220.793 350.508 220.611 350.508 cv
220.611 350.508 li
220.794 350.508 220.978 350.509 221.161 350.509 cv
221.376 350.509 221.591 350.508 221.806 350.507 cv
221.59 350.508 221.375 350.509 221.159 350.509 cv
.301961 .14902 .329412 rgb
f
215.044 350.169 mo
215.044 350.161 215.044 350.152 215.044 350.143 cv
215.044 350.152 215.044 350.161 215.044 350.169 cv
215.045 349.98 mo
215.045 349.969 215.045 349.959 215.045 349.948 cv
215.045 349.958 215.045 349.97 215.045 349.98 cv
215.046 349.79 mo
215.046 349.777 215.046 349.764 215.046 349.751 cv
215.046 349.764 215.046 349.777 215.046 349.79 cv
215.047 349.595 mo
215.047 349.582 215.047 349.57 215.047 349.557 cv
215.047 349.57 215.047 349.582 215.047 349.595 cv
215.048 349.418 mo
215.048 349.401 215.048 349.386 215.049 349.37 cv
215.048 349.386 215.048 349.402 215.048 349.418 cv
215.05 349.239 mo
215.05 349.221 215.05 349.203 215.05 349.185 cv
215.05 349.203 215.05 349.221 215.05 349.239 cv
215.051 349.054 mo
215.052 349.029 215.052 349.005 215.052 348.981 cv
215.052 349.005 215.052 349.029 215.051 349.054 cv
241.173 348.983 mo
241.267 348.969 241.36 348.956 241.454 348.942 cv
241.36 348.956 241.267 348.969 241.173 348.983 cv
241.638 348.914 mo
241.659 348.911 241.678 348.908 241.699 348.905 cv
241.678 348.908 241.659 348.911 241.638 348.914 cv
241.731 348.901 mo
241.763 348.896 241.796 348.891 241.828 348.886 cv
241.796 348.891 241.763 348.896 241.731 348.901 cv
241.836 348.885 mo
242.999 348.71 244.145 348.526 245.27 348.335 cv
245.27 348.335 li
244.145 348.526 242.999 348.71 241.836 348.885 cv
215.054 348.86 mo
215.054 348.832 215.054 348.804 215.055 348.776 cv
215.054 348.804 215.054 348.832 215.054 348.86 cv
215.055 348.717 mo
215.056 348.666 215.056 348.614 215.057 348.563 cv
215.056 348.614 215.056 348.666 215.055 348.717 cv
215.058 348.53 mo
215.058 348.467 215.059 348.403 215.06 348.339 cv
215.059 348.403 215.058 348.467 215.058 348.53 cv
215.06 348.337 mo
215.08 346.983 215.115 345.629 215.165 344.275 cv
215.165 344.275 li
215.115 345.629 215.08 346.983 215.06 348.337 cv
251.637 347.14 mo
251.637 347.14 li
252.717 346.918 253.772 346.692 254.799 346.463 cv
254.799 346.464 li
253.772 346.692 252.717 346.918 251.637 347.14 cv
.356863 .180392 .360784 rgb
f
254.799 346.464 mo
254.799 346.463 li
267.542 343.626 275.983 340.41 276.023 340.41 cv
276.023 340.41 276.023 340.41 276.023 340.41 cv
276.023 340.41 276.023 340.41 276.023 340.41 cv
275.985 340.41 267.543 343.626 254.799 346.464 cv
276.023 340.41 mo
275.87 339.889 275.713 339.358 275.552 338.816 cv
275.713 339.358 275.87 339.889 276.023 340.41 cv
.301961 .14902 .329412 rgb
f
245.27 348.335 mo
245.27 348.335 li
247.474 347.96 249.601 347.558 251.637 347.14 cv
251.637 347.14 li
249.601 347.558 247.474 347.96 245.27 348.335 cv
.223529 .156863 .121569 rgb
f
221.161 350.509 mo
220.978 350.509 220.794 350.508 220.611 350.508 cv
218.762 350.499 216.904 350.446 215.043 350.342 cv
215.044 350.284 215.044 350.227 215.044 350.169 cv
215.044 350.161 215.044 350.152 215.044 350.143 cv
215.044 350.089 215.044 350.035 215.045 349.98 cv
215.045 349.97 215.045 349.958 215.045 349.948 cv
215.045 349.895 215.045 349.842 215.046 349.79 cv
215.046 349.777 215.046 349.764 215.046 349.751 cv
215.046 349.699 215.047 349.647 215.047 349.595 cv
215.047 349.582 215.047 349.57 215.047 349.557 cv
215.047 349.511 215.048 349.464 215.048 349.418 cv
215.048 349.402 215.048 349.386 215.049 349.37 cv
215.049 349.326 215.049 349.283 215.05 349.239 cv
215.05 349.221 215.05 349.203 215.05 349.185 cv
215.051 349.141 215.051 349.097 215.051 349.054 cv
215.052 349.029 215.052 349.005 215.052 348.981 cv
215.053 348.941 215.053 348.9 215.054 348.86 cv
215.054 348.832 215.054 348.804 215.055 348.776 cv
215.055 348.756 215.055 348.736 215.055 348.717 cv
215.056 348.666 215.056 348.614 215.057 348.563 cv
215.057 348.552 215.057 348.541 215.058 348.53 cv
215.058 348.467 215.059 348.403 215.06 348.339 cv
215.06 348.339 215.06 348.338 215.06 348.337 cv
215.08 346.983 215.115 345.629 215.165 344.275 cv
215.482 344.369 215.801 344.461 216.12 344.549 cv
216.138 344.566 216.157 344.584 216.176 344.601 cv
218.541 346.7 225.213 346.384 228.487 346.569 cv
229.718 346.638 230.956 346.672 232.198 346.672 cv
232.814 346.672 233.431 346.664 234.049 346.647 cv
238.072 346.551 242.127 346.107 246.125 345.339 cv
246.125 345.339 246.126 345.339 246.127 345.339 cv
249.656 344.678 253.144 343.734 256.528 342.56 cv
258.026 342.042 259.504 341.478 260.955 340.87 cv
260.991 340.855 261.027 340.84 261.063 340.824 cv
261.07 340.821 261.077 340.818 261.084 340.815 cv
262.32 340.294 263.536 339.74 264.73 339.154 cv
268.678 337.3 274.253 334.502 274.001 333.623 cv
274.54 335.435 275.063 337.171 275.552 338.816 cv
275.713 339.358 275.87 339.889 276.023 340.41 cv
276.023 340.41 li
276.023 340.41 276.023 340.41 276.023 340.41 cv
276.023 340.41 276.023 340.41 276.023 340.41 cv
275.983 340.41 267.542 343.626 254.799 346.463 cv
253.772 346.692 252.717 346.918 251.637 347.14 cv
251.637 347.14 li
249.601 347.558 247.474 347.96 245.27 348.335 cv
245.27 348.335 li
244.145 348.526 242.999 348.71 241.836 348.885 cv
241.833 348.885 241.83 348.886 241.828 348.886 cv
241.796 348.891 241.763 348.896 241.731 348.901 cv
241.72 348.902 241.71 348.904 241.699 348.905 cv
241.678 348.908 241.659 348.911 241.638 348.914 cv
241.577 348.924 241.515 348.933 241.454 348.942 cv
241.36 348.956 241.267 348.969 241.173 348.983 cv
241.14 348.988 241.106 348.993 241.073 348.998 cv
241.073 348.998 li
241.073 348.998 li
235.014 349.869 228.484 350.47 221.806 350.507 cv
221.591 350.508 221.376 350.509 221.161 350.509 cv
.854902 .247059 .415686 rgb
f
215.231 342.694 mo
215.141 341.973 215.225 341.182 215.351 340.383 cv
215.306 341.154 215.266 341.923 215.231 342.694 cv
.32549 .164706 .356863 rgb
f
272.113 327.164 mo
271.831 326.182 271.548 325.182 271.264 324.166 cv
271.548 325.183 271.832 326.183 272.113 327.164 cv
.27451 .133333 .32549 rgb
f
252.493 300.887 mo
252.493 300.887 252.493 300.887 252.493 300.887 cv
252.506 300.883 252.781 300.791 253.269 300.629 cv
252.769 300.795 252.493 300.887 252.493 300.887 cv
.32549 .164706 .356863 rgb
f
254.959 300.069 mo
255.555 299.871 256.242 299.644 257 299.393 cv
258.099 299.018 259.356 298.613 260.709 298.188 cv
259.356 298.613 258.099 299.018 257 299.393 cv
256.242 299.644 255.555 299.871 254.959 300.069 cv
.27451 .133333 .32549 rgb
f
255.864 253.437 mo
255.46 251.526 255.049 249.623 254.628 247.729 cv
255.049 249.623 255.46 251.526 255.864 253.437 cv
255.864 253.437 li
.32549 .164706 .356863 rgb
f
259.441 271.267 mo
258.288 265.333 257.113 259.353 255.864 253.437 cv
255.864 253.437 li
257.113 259.353 258.288 265.333 259.441 271.267 cv
.27451 .133333 .32549 rgb
f
249.934 250.772 mo
249.934 250.772 li
250.091 250.673 250.25 250.573 250.41 250.471 cv
250.25 250.573 250.091 250.673 249.934 250.772 cv
249.934 250.772 249.934 250.772 249.934 250.772 cv
.32549 .164706 .356863 rgb
f
232.399 346.667 mo
226.804 346.667 221.298 345.983 216.12 344.549 cv
215.574 344.037 215.319 343.399 215.231 342.694 cv
215.266 341.923 215.306 341.154 215.351 340.383 cv
215.472 339.619 215.63 338.847 215.711 338.123 cv
216.252 333.225 216.33 328.392 217.001 323.517 cv
222.077 324.71 227.75 326.246 233.376 326.246 cv
234.141 326.246 234.905 326.218 235.667 326.156 cv
250.384 324.917 247.244 296.945 248.379 289.122 cv
249.518 276.347 250.187 263.584 249.934 250.772 cv
249.934 250.772 249.934 250.772 249.934 250.772 cv
250.091 250.673 250.25 250.573 250.41 250.471 cv
251.731 249.634 253.169 248.688 254.628 247.729 cv
254.628 247.729 li
255.049 249.623 255.46 251.526 255.864 253.437 cv
257.113 259.353 258.288 265.333 259.441 271.267 cv
260.966 279.119 262.454 286.892 264.028 294.338 cv
264.028 294.338 li
261.293 295.828 258.685 297.265 256.66 298.464 cv
256.66 298.464 li
256.66 298.464 li
254.155 299.917 252.493 300.887 252.493 300.887 cv
252.493 300.887 252.493 300.887 252.493 300.887 cv
252.493 300.887 252.493 300.887 252.493 300.887 cv
252.493 300.887 252.769 300.795 253.269 300.629 cv
253.687 300.49 254.26 300.3 254.959 300.069 cv
255.555 299.871 256.242 299.644 257 299.393 cv
258.099 299.018 259.356 298.613 260.709 298.188 cv
261.94 297.802 263.251 297.4 264.592 296.99 cv
266.695 306.825 268.979 316.04 271.264 324.166 cv
271.264 324.166 li
271.548 325.182 271.831 326.182 272.113 327.164 cv
272.757 329.413 273.389 331.566 274 333.619 cv
271.129 335.691 268.014 337.543 264.73 339.154 cv
262.974 339.979 261.54 340.617 261.084 340.815 cv
261.041 340.834 260.998 340.852 260.955 340.87 cv
259.503 341.475 258.026 342.04 256.528 342.56 cv
253.147 343.728 249.658 344.66 246.125 345.339 cv
242.132 346.086 238.078 346.54 234.049 346.647 cv
233.498 346.66 232.949 346.667 232.399 346.667 cv
274.001 333.623 mo
274.001 333.621 274 333.62 274 333.619 cv
274 333.62 274.001 333.621 274.001 333.623 cv
.780392 .227451 .407843 rgb
f
232.198 346.672 mo
230.956 346.672 229.718 346.638 228.487 346.569 cv
225.213 346.384 218.541 346.7 216.176 344.601 cv
216.157 344.584 216.138 344.566 216.12 344.549 cv
221.298 345.983 226.804 346.667 232.399 346.667 cv
232.949 346.667 233.498 346.66 234.049 346.647 cv
233.431 346.664 232.814 346.672 232.198 346.672 cv
246.125 345.339 mo
249.658 344.66 253.147 343.728 256.528 342.56 cv
253.144 343.734 249.656 344.678 246.127 345.339 cv
246.126 345.339 246.125 345.339 246.125 345.339 cv
260.955 340.87 mo
260.998 340.852 261.041 340.834 261.084 340.815 cv
261.077 340.818 261.07 340.821 261.063 340.824 cv
261.027 340.84 260.991 340.855 260.955 340.87 cv
264.73 339.154 mo
268.014 337.543 271.129 335.691 274 333.619 cv
274 333.619 li
274 333.619 li
274 333.62 274.001 333.621 274.001 333.623 cv
274.253 334.502 268.678 337.3 264.73 339.154 cv
.713725 .207843 .403922 rgb
f
809.529 327.74 mo
810.233 335.703 811.019 343.569 811.955 351.632 cv
812.208 354.195 812.408 356.757 812.63 359.321 cv
813.179 365.631 813.828 371.967 815.729 378.291 cv
818.924 377.882 822.119 377.472 825.315 377.062 cv
823.235 370.554 821.07 364.129 818.962 357.767 cv
815.57 347.558 812.336 337.495 809.529 327.74 cv
.27451 .203922 .129412 rgb
f
812.193 354.189 mo
812.183 354.078 812.173 353.967 812.163 353.856 cv
812.163 353.856 li
812.173 353.967 812.183 354.078 812.193 354.189 cv
.745098 .254902 .247059 rgb
f
812.63 359.321 mo
812.63 359.321 li
812.63 359.321 li
812.482 357.61 812.344 355.9 812.193 354.189 cv
812.183 354.078 812.173 353.967 812.163 353.856 cv
813.958 353.551 815.691 353.223 817.348 352.883 cv
817.881 354.507 818.419 356.135 818.962 357.767 cv
816.855 358.302 814.746 358.834 812.63 359.321 cv
.243137 .168627 .121569 rgb
f
827.899 312.042 mo
825.607 312.743 823.425 313.415 821.716 314 cv
819.507 314.729 818.046 315.216 818.046 315.216 cv
818.045 315.217 819.399 314.427 821.439 313.243 cv
823.088 312.267 825.212 311.097 827.439 309.883 cv
824.876 297.755 822.593 284.563 819.784 271.927 cv
818.451 272.803 817.14 273.665 815.962 274.404 cv
815.426 274.741 814.915 275.054 814.448 275.327 cv
812.894 276.267 811.856 276.893 811.857 276.892 cv
811.856 276.892 812.716 276.001 813.992 274.658 cv
814.575 274.064 815.23 273.354 815.918 272.59 cv
816.75 271.667 817.632 270.66 818.513 269.655 cv
818.713 269.421 818.912 269.187 819.111 268.953 cv
817.505 261.982 815.71 255.235 813.749 249.034 cv
808.078 230.612 800.175 217.055 800.203 217.073 cv
806.063 240.3 802.734 263.64 798.015 287.107 cv
799.286 287.519 800.506 287.854 801.509 288.107 cv
802.245 288.294 802.871 288.405 803.305 288.503 cv
803.741 288.595 803.99 288.647 803.99 288.647 cv
803.99 288.648 803.725 288.682 803.26 288.745 cv
802.794 288.801 802.12 288.91 801.311 288.989 cv
800.26 289.091 798.964 289.196 797.58 289.255 cv
794.575 303.965 791.121 318.726 789.149 333.54 cv
788.177 340.844 787.566 348.16 787.548 355.491 cv
794.879 355.899 802.156 355.343 808.745 354.396 cv
825.109 352.009 837.212 347.384 837.208 347.403 cv
836.087 343.589 834.715 339.128 833.332 334.174 cv
831.471 327.555 829.612 320.052 827.899 312.042 cv
.933333 .270588 .419608 rgb
f
815.918 272.59 mo
815.918 272.59 li
815.918 272.59 li
815.975 272.527 816.032 272.463 816.09 272.399 cv
816.032 272.463 815.975 272.527 815.918 272.59 cv
816.125 272.361 mo
816.146 272.337 816.167 272.314 816.188 272.29 cv
816.167 272.314 816.146 272.337 816.125 272.361 cv
.313725 .133333 .231373 rgb
f
815.918 272.59 mo
815.695 264.757 815.033 256.897 813.749 249.034 cv
815.71 255.235 817.505 261.982 819.111 268.953 cv
818.912 269.187 818.713 269.421 818.513 269.655 cv
818.513 269.655 li
817.726 270.552 816.94 271.45 816.188 272.29 cv
816.167 272.314 816.146 272.337 816.125 272.361 cv
816.113 272.374 816.102 272.386 816.09 272.399 cv
816.032 272.463 815.975 272.527 815.918 272.59 cv
815.918 272.59 li
.780392 .227451 .407843 rgb
f
787.938 355.511 mo
787.855 355.507 787.772 355.503 787.688 355.498 cv
787.772 355.503 787.855 355.507 787.938 355.511 cv
787.548 355.491 mo
787.548 355.438 787.549 355.384 787.549 355.332 cv
787.549 355.384 787.548 355.438 787.548 355.491 cv
787.549 355.227 mo
787.549 355.209 787.549 355.192 787.549 355.174 cv
787.549 355.191 787.549 355.21 787.549 355.227 cv
787.55 355.054 mo
787.55 355.042 787.55 355.03 787.55 355.018 cv
787.55 355.03 787.55 355.042 787.55 355.054 cv
787.551 354.886 mo
787.551 354.879 787.551 354.872 787.551 354.865 cv
787.551 354.872 787.551 354.879 787.551 354.886 cv
787.552 354.723 mo
787.552 354.72 787.552 354.717 787.552 354.714 cv
787.552 354.717 787.552 354.72 787.552 354.723 cv
.772549 .286274 .262745 rgb
f
837.208 347.403 mo
837.106 347.055 837.002 346.703 836.896 346.345 cv
837.002 346.703 837.106 347.056 837.208 347.403 cv
.345098 .145098 .231373 rgb
f
792.527 355.626 mo
791.004 355.626 789.472 355.59 787.938 355.511 cv
787.855 355.507 787.772 355.503 787.688 355.498 cv
787.641 355.496 787.595 355.493 787.548 355.491 cv
787.548 355.491 li
787.548 355.491 li
787.548 355.438 787.549 355.384 787.549 355.332 cv
787.549 355.297 787.549 355.262 787.549 355.227 cv
787.549 355.21 787.549 355.191 787.549 355.174 cv
787.55 355.134 787.55 355.094 787.55 355.054 cv
787.55 355.042 787.55 355.03 787.55 355.018 cv
787.551 354.974 787.551 354.93 787.551 354.886 cv
787.551 354.879 787.551 354.872 787.551 354.865 cv
787.552 354.818 787.552 354.77 787.552 354.723 cv
787.552 354.72 787.552 354.717 787.552 354.714 cv
787.564 353.325 787.596 351.937 787.648 350.55 cv
787.905 350.626 788.165 350.701 788.424 350.773 cv
788.439 350.787 788.455 350.801 788.47 350.815 cv
790.396 352.525 795.83 352.267 798.496 352.418 cv
799.498 352.475 800.506 352.502 801.517 352.502 cv
802.042 352.502 802.568 352.495 803.094 352.48 cv
806.32 352.399 809.572 352.043 812.778 351.432 cv
812.806 351.426 812.834 351.421 812.861 351.416 cv
815.904 350.847 818.908 350.019 821.814 348.984 cv
822.808 348.631 823.791 348.253 824.759 347.85 cv
824.847 347.814 824.936 347.777 825.025 347.74 cv
825.038 347.734 825.052 347.728 825.067 347.721 cv
826.053 347.305 827.023 346.863 827.975 346.397 cv
831.192 344.887 835.767 342.593 835.561 341.875 cv
836.026 343.44 836.477 344.935 836.896 346.345 cv
837.002 346.703 837.106 347.055 837.208 347.403 cv
837.208 347.403 li
837.208 347.402 837.208 347.402 837.208 347.402 cv
837.207 347.402 837.201 347.404 837.191 347.408 cv
836.69 347.582 824.756 352.06 808.745 354.396 cv
808.745 354.396 li
808.745 354.396 li
803.652 355.128 798.149 355.626 792.527 355.626 cv
.854902 .247059 .415686 rgb
f
787.701 349.263 mo
787.627 348.676 787.696 348.031 787.799 347.38 cv
787.762 348.008 787.73 348.635 787.701 349.263 cv
.701961 .258824 .258824 rgb
f
833.987 336.488 mo
833.769 335.729 833.551 334.958 833.332 334.174 cv
833.551 334.958 833.77 335.73 833.987 336.488 cv
829.301 318.349 mo
828.825 316.288 828.357 314.183 827.899 312.042 cv
828.357 314.183 828.825 316.288 829.301 318.349 cv
818.046 315.216 mo
818.046 315.216 818.046 315.216 818.046 315.216 cv
818.065 315.21 818.338 315.119 818.812 314.962 cv
818.32 315.125 818.046 315.216 818.046 315.216 cv
821.203 314.17 mo
821.369 314.115 821.54 314.058 821.716 314 cv
823.036 313.548 824.637 313.045 826.353 312.516 cv
824.637 313.045 823.036 313.549 821.716 314 cv
821.54 314.058 821.369 314.115 821.203 314.17 cv
826.042 310.647 mo
826.501 310.395 826.968 310.14 827.439 309.883 cv
827.439 309.883 li
826.968 310.14 826.501 310.395 826.042 310.647 cv
.313725 .133333 .231373 rgb
f
821.868 281.793 mo
821.867 281.792 li
821.199 278.485 820.509 275.187 819.784 271.927 cv
820.509 275.187 821.199 278.485 821.868 281.793 cv
.376471 .160784 .25098 rgb
f
827.439 309.883 mo
825.537 300.885 823.79 291.301 821.867 281.792 cv
821.868 281.793 li
823.79 291.301 825.537 300.885 827.439 309.883 cv
815.962 274.404 mo
815.962 274.404 li
816.014 274.371 816.068 274.338 816.121 274.304 cv
816.068 274.338 816.015 274.371 815.962 274.404 cv
815.962 274.404 815.962 274.405 815.962 274.405 cv
.313725 .133333 .231373 rgb
f
818.202 272.964 mo
818.721 272.625 819.251 272.277 819.784 271.927 cv
819.251 272.277 818.721 272.625 818.202 272.964 cv
.376471 .160784 .25098 rgb
f
801.681 352.498 mo
797.125 352.498 792.641 351.941 788.424 350.773 cv
787.98 350.356 787.773 349.837 787.701 349.263 cv
787.73 348.635 787.762 348.008 787.799 347.38 cv
787.897 346.758 788.026 346.13 788.092 345.54 cv
788.532 341.552 788.596 337.615 789.143 333.646 cv
793.277 334.617 797.897 335.868 802.479 335.868 cv
803.101 335.868 803.723 335.845 804.343 335.795 cv
816.329 334.785 813.771 312.007 814.695 305.636 cv
815.623 295.231 816.168 284.838 815.962 274.404 cv
815.962 274.405 815.962 274.404 815.962 274.404 cv
816.015 274.371 816.068 274.338 816.121 274.304 cv
816.782 273.888 817.482 273.435 818.202 272.964 cv
818.721 272.625 819.251 272.277 819.784 271.927 cv
819.784 271.927 li
819.784 271.927 li
820.509 275.187 821.199 278.485 821.867 281.792 cv
823.79 291.301 825.537 300.885 827.439 309.883 cv
827.439 309.883 li
826.968 310.14 826.501 310.395 826.042 310.647 cv
824.334 311.584 822.738 312.473 821.439 313.243 cv
821.439 313.243 li
821.439 313.243 li
819.399 314.426 818.046 315.217 818.045 315.216 cv
818.045 315.216 818.046 315.216 818.046 315.216 cv
818.046 315.216 818.046 315.216 818.046 315.216 cv
818.046 315.216 818.32 315.125 818.812 314.962 cv
819.364 314.778 820.188 314.505 821.203 314.17 cv
821.369 314.115 821.54 314.058 821.716 314 cv
823.036 313.549 824.637 313.045 826.353 312.516 cv
826.86 312.36 827.376 312.202 827.899 312.042 cv
827.899 312.042 li
828.357 314.183 828.825 316.288 829.301 318.349 cv
830.606 324 831.968 329.325 833.332 334.174 cv
833.332 334.174 li
833.551 334.958 833.769 335.729 833.987 336.488 cv
834.524 338.365 835.051 340.161 835.56 341.871 cv
833.211 343.566 830.663 345.08 827.975 346.397 cv
826.593 347.045 825.461 347.549 825.067 347.721 cv
824.964 347.765 824.862 347.807 824.759 347.85 cv
823.79 348.251 822.808 348.63 821.814 348.984 cv
818.884 350.024 815.852 350.845 812.778 351.432 cv
809.575 352.027 806.326 352.39 803.094 352.48 cv
802.623 352.492 802.151 352.498 801.681 352.498 cv
835.561 341.875 mo
835.561 341.874 835.561 341.873 835.56 341.871 cv
835.561 341.873 835.561 341.874 835.561 341.875 cv
.780392 .227451 .407843 rgb
f
801.517 352.502 mo
800.506 352.502 799.498 352.475 798.496 352.418 cv
795.83 352.267 790.396 352.525 788.47 350.815 cv
788.455 350.801 788.439 350.787 788.424 350.773 cv
792.641 351.941 797.125 352.498 801.681 352.498 cv
802.151 352.498 802.623 352.492 803.094 352.48 cv
802.568 352.495 802.042 352.502 801.517 352.502 cv
812.778 351.432 mo
815.852 350.845 818.884 350.024 821.814 348.984 cv
818.908 350.019 815.904 350.847 812.861 351.416 cv
812.834 351.421 812.806 351.426 812.778 351.432 cv
824.759 347.85 mo
824.862 347.807 824.964 347.765 825.067 347.721 cv
825.052 347.728 825.038 347.734 825.025 347.74 cv
824.936 347.777 824.847 347.814 824.759 347.85 cv
827.975 346.397 mo
830.663 345.08 833.211 343.566 835.56 341.871 cv
835.56 341.871 li
835.56 341.871 li
835.561 341.873 835.561 341.874 835.561 341.875 cv
835.767 342.593 831.192 344.887 827.975 346.397 cv
.713725 .207843 .403922 rgb
f
496.505 357.565 mo
496.583 357.556 li
496.344 357.578 496.398 357.574 496.505 357.565 cv
cp
.00784314 .254902 .388235 rgb
f
496.637 357.554 mo
496.757 357.543 496.836 357.535 496.583 357.556 cv
496.637 357.554 li
cp
f
496.505 357.565 mo
496.637 357.554 li
496.583 357.556 li
496.505 357.565 li
cp
f
31.8993 360.996 mo
33.0461 360.627 31.205 361.218 31.8993 360.996 cv
cp
.0196078 .352941 .517647 rgb
f
595.174 367.286 mo
595.157 367.225 595.126 367.113 595.076 366.931 cv
595.109 367.05 595.141 367.168 595.174 367.286 cv
cp
.00784314 .254902 .388235 rgb
f
595.011 366.718 mo
595.076 366.931 li
594.911 366.355 594.941 366.467 595.011 366.718 cv
cp
f
595.076 366.931 mo
595.011 366.718 li
595.095 367.018 595.236 367.517 595.174 367.286 cv
595.141 367.168 595.109 367.05 595.076 366.931 cv
cp
f
572.08 361.372 mo
572.22 361.589 572.301 361.699 571.931 361.086 cv
571.987 361.178 572.028 361.277 572.08 361.372 cv
cp
f
571.836 360.97 mo
571.931 361.086 li
571.846 360.966 571.823 360.942 571.836 360.97 cv
cp
f
571.836 360.97 mo
571.857 361.017 571.982 361.22 572.08 361.372 cv
572.028 361.277 571.987 361.178 571.931 361.086 cv
571.836 360.97 li
cp
f
703.545 367.899 mo
703.85 368.992 702.947 365.718 703.545 367.899 cv
cp
f
895.577 369.873 mo
895.639 370.165 895.689 370.399 895.567 369.806 cv
895.577 369.873 li
cp
f
895.54 369.698 mo
895.567 369.806 li
895.447 369.246 895.484 369.428 895.54 369.698 cv
cp
f
895.54 369.698 mo
895.577 369.873 li
895.567 369.806 li
895.54 369.698 li
cp
f
895.54 369.698 mo
895.381 368.961 895.204 368.228 895.007 367.5 cv
893.255 368.383 891.188 369.889 890.435 371.771 cv
889.709 373.597 890.617 375.644 890.007 377.5 cv
894.232 377.73 896.275 373.431 895.577 369.873 cv
895.54 369.698 li
f
867.735 366.496 mo
869.081 367.13 866.396 365.842 867.735 366.496 cv
cp
f
0 480 mo
900 480 li
0 480 li
.898039 .419608 .423529 rgb
f
0 480 mo
900 480 li
900 367.5 li
0 367.5 li
0 480 li
f
0 480 mo
900 480 li
0 480 li
.235294 .184314 .298039 rgb
f
0 480 mo
900 480 li
900 377.53 li
0 377.53 li
0 480 li
f
gsave
591.993 435 mo
592.188 434.925 592.388 434.849 592.583 434.775 cv
592.388 434.849 592.188 434.925 591.993 435 cv
268.03 432.867 mo
268.03 432.867 li
267.752 427.278 265.181 421.891 259.993 418 cv
259.966 417.98 259.941 417.961 259.915 417.941 cv
259.941 417.961 259.966 417.98 259.993 418 cv
265.181 421.891 267.752 427.278 268.03 432.867 cv
706.102 423.838 mo
693.807 422.099 681.444 421.149 669.073 421.148 cv
681.444 421.149 693.808 422.099 706.103 423.837 cv
706.102 423.838 li
669.059 421.148 mo
669.065 421.148 li
669.065 421.148 li
669.059 421.148 li
259.665 417.752 mo
251.717 411.757 243.48 407.754 235.037 405.116 cv
235.039 405.117 li
243.482 407.754 251.717 411.757 259.665 417.752 cv
158.333 401.271 mo
158.333 401.271 li
158.334 401.271 158.336 401.271 158.338 401.271 cv
158.336 401.271 158.334 401.271 158.333 401.271 cv
158.322 401.271 mo
147.169 401.271 136.025 400.582 125.025 398.025 cv
125.025 398.025 li
136.024 400.582 147.171 401.271 158.322 401.271 cv
clp
125.025 398.025 mo
706.103 398.025 li
706.103 435 li
125.025 435 li
cp
.2 .156863 .294118 rgb
f
grestore
235.039 405.117 mo
235.037 405.116 li
222.782 401.289 210.084 400.336 197.169 400.335 cv
210.086 400.335 222.782 401.288 235.039 405.117 cv
176.239 400.86 mo
176.308 400.858 176.377 400.855 176.446 400.853 cv
176.377 400.855 176.308 400.858 176.239 400.86 cv
176.468 400.852 mo
176.533 400.85 176.598 400.847 176.663 400.845 cv
176.598 400.847 176.533 400.85 176.468 400.852 cv
177.214 400.825 mo
177.269 400.823 177.326 400.821 177.381 400.819 cv
177.326 400.821 177.269 400.823 177.214 400.825 cv
178.067 400.794 mo
178.093 400.793 178.12 400.792 178.147 400.791 cv
178.12 400.792 178.093 400.793 178.067 400.794 cv
197.155 400.335 mo
197.157 400.335 197.157 400.335 197.159 400.335 cv
197.159 400.335 li
197.157 400.335 197.157 400.335 197.155 400.335 cv
125.025 398.025 mo
125.025 398.025 li
123.963 397.778 122.906 397.515 121.847 397.232 cv
122.906 397.515 123.963 397.778 125.025 398.025 cv
121.577 397.16 mo
121.565 397.156 121.553 397.153 121.541 397.15 cv
121.553 397.153 121.565 397.156 121.577 397.16 cv
121.453 397.126 mo
121.437 397.122 121.42 397.117 121.404 397.113 cv
121.42 397.117 121.437 397.122 121.453 397.126 cv
121.315 397.089 mo
121.303 397.085 121.29 397.082 121.277 397.078 cv
121.29 397.082 121.303 397.085 121.315 397.089 cv
121.17 397.049 mo
121.144 397.042 121.117 397.034 121.09 397.027 cv
121.117 397.034 121.144 397.042 121.17 397.049 cv
.168627 .133333 .290196 rgb
f
678.079 480 mo
635.29 480 li
638.414 478.195 641.642 476.517 644.993 475 cv
645.026 474.985 645.06 474.969 645.094 474.954 cv
645.129 474.938 645.162 474.923 645.198 474.907 cv
656.254 469.915 667.996 467.304 679.781 466.813 cv
678.645 470.668 678.007 474.425 678.007 477.999 cv
678.007 478.659 678.036 479.328 678.079 480 cv
.215686 .168627 .294118 rgb
f
678.079 480 mo
635.29 480 li
635.29 480 635.29 480 635.29 480 cv
678.079 480 li
678.079 480 li
.851549 .847782 .982668 rgb
f
900 480 mo
787.947 480 li
787.947 480 li
900 480 li
787.947 480 li
787.947 480 li
900 480 li
900 403.903 li
900 403.903 li
900 386.432 li
900 386.432 li
900 377.53 li
900 480 li
.770273 .763168 .973948 rgb
f
900 480 mo
787.947 480 li
787.983 479.33 788.007 478.663 788.007 477.999 cv
788.007 466.677 781.012 453.003 772.009 440.09 cv
779.822 442.76 787.57 445.645 795.232 448.696 cv
795.272 448.712 795.311 448.728 795.351 448.744 cv
795.394 448.761 795.433 448.777 795.477 448.794 cv
795.648 448.862 795.822 448.932 795.993 449 cv
795.993 449 li
796.029 449.014 796.065 449.028 796.102 449.042 cv
796.124 449.05 796.146 449.059 796.168 449.067 cv
802.066 451.309 808.367 452.372 814.706 452.372 cv
814.708 452.372 814.708 452.372 814.71 452.372 cv
814.71 452.372 li
814.71 452.372 li
814.713 452.372 814.717 452.372 814.72 452.372 cv
836.236 452.368 858.149 440.125 865.922 420.182 cv
865.926 420.173 865.929 420.164 865.933 420.154 cv
865.953 420.103 865.973 420.051 865.993 420 cv
867.415 416.365 868.812 412.454 870.086 408.372 cv
880.054 406.935 890.043 405.443 900 403.903 cv
900 480 li
635.29 480 mo
614.721 480 li
607.697 459.573 593.184 438.157 591.227 435.317 cv
591.417 435.238 591.609 435.158 591.8 435.079 cv
628.882 433.291 665.958 430.8 702.97 427.608 cv
693.063 439.779 683.601 453.858 679.781 466.813 cv
667.994 467.303 656.255 469.915 645.198 474.907 cv
645.162 474.923 645.129 474.938 645.094 474.954 cv
645.06 474.969 645.026 474.985 644.993 475 cv
641.642 476.517 638.414 478.195 635.29 480 cv
567.141 480 mo
540.492 480 li
551.926 460.877 568.252 445.105 590.592 435.586 cv
587.996 439.277 573.906 459.814 567.141 480 cv
.180392 .141176 .290196 rgb
f
591.8 435.079 mo
591.865 435.053 591.928 435.027 591.993 435 cv
591.993 435 li
592.188 434.925 592.388 434.849 592.583 434.775 cv
617.82 425.213 643.464 421.149 669.059 421.148 cv
669.065 421.148 li
669.069 421.148 669.069 421.148 669.073 421.148 cv
681.444 421.149 693.807 422.099 706.102 423.838 cv
705.059 425.07 704.01 426.33 702.97 427.608 cv
665.958 430.8 628.882 433.291 591.8 435.079 cv
870.086 408.372 mo
872.005 402.217 873.643 395.672 874.662 389.086 cv
883.101 388.228 891.565 387.341 900 386.432 cv
900 403.903 li
890.043 405.443 880.054 406.935 870.086 408.372 cv
.152941 .121569 .286274 rgb
f
874.662 389.086 mo
875.259 385.224 875.644 381.349 875.748 377.53 cv
875.748 377.53 li
875.748 377.53 li
900 377.53 li
900 386.432 li
891.565 387.341 883.101 388.228 874.662 389.086 cv
.129412 .101961 .282353 rgb
f
635.29 480 mo
635.29 480 li
638.414 478.195 641.642 476.517 644.993 475 cv
645.026 474.985 645.06 474.969 645.094 474.954 cv
645.06 474.969 645.026 474.985 644.993 475 cv
641.642 476.517 638.414 478.195 635.29 480 cv
645.198 474.907 mo
656.255 469.915 667.994 467.303 679.781 466.813 cv
679.781 466.813 li
667.996 467.304 656.254 469.915 645.198 474.907 cv
.164706 .129412 .286274 rgb
f
635.29 480 mo
635.29 480 li
614.721 480 li
614.721 480 li
635.29 480 li
567.141 480 mo
540.491 480 li
540.492 480 540.492 480 540.492 480 cv
567.141 480 li
567.141 480 li
.593049 .580961 .94762 rgb
f
900 480 mo
787.947 480 li
787.947 480 li
900 480 li
f
540.492 480 mo
313.175 480 li
326.214 461.184 344.422 447.467 365.256 437.276 cv
393.492 438.089 421.755 438.496 450 438.496 cv
496.995 438.496 543.966 437.372 590.92 435.122 cv
590.85 435.219 590.74 435.375 590.592 435.586 cv
568.252 445.105 551.926 460.877 540.492 480 cv
814.71 452.372 mo
814.708 452.372 814.708 452.372 814.706 452.372 cv
808.369 452.371 802.064 451.308 796.168 449.067 cv
796.146 449.059 796.124 449.05 796.102 449.042 cv
796.065 449.028 796.029 449.014 795.993 449 cv
795.993 449 li
795.822 448.932 795.648 448.862 795.477 448.794 cv
795.433 448.777 795.394 448.761 795.351 448.744 cv
795.311 448.728 795.272 448.712 795.232 448.696 cv
787.57 445.645 779.822 442.76 772.009 440.09 cv
767.675 433.875 762.876 427.836 758.17 422.323 cv
795.552 418.389 832.837 413.742 870.086 408.372 cv
868.812 412.454 867.415 416.365 865.993 420 cv
865.973 420.051 865.953 420.103 865.933 420.154 cv
865.929 420.164 865.926 420.173 865.922 420.182 cv
858.149 440.123 836.234 452.366 814.72 452.372 cv
814.717 452.372 814.713 452.372 814.71 452.372 cv
591.227 435.317 mo
591.169 435.233 591.122 435.165 591.086 435.114 cv
591.325 435.102 591.561 435.091 591.8 435.079 cv
591.609 435.158 591.417 435.238 591.227 435.317 cv
.215686 .168627 .294118 rgb
f
450 438.496 mo
421.755 438.496 393.492 438.089 365.256 437.276 cv
395.017 422.719 430.138 415.358 463.219 410.604 cv
551.254 410.327 639.266 407.28 727.157 401.464 cv
722.001 406.433 714.085 414.415 706.103 423.837 cv
693.808 422.099 681.444 421.149 669.073 421.148 cv
669.069 421.148 669.069 421.148 669.065 421.148 cv
669.065 421.148 li
669.065 421.148 li
669.059 421.148 li
643.459 421.148 617.824 425.212 592.583 434.775 cv
592.388 434.849 592.188 434.925 591.993 435 cv
591.993 435 li
591.928 435.027 591.865 435.053 591.8 435.079 cv
591.561 435.091 591.325 435.102 591.086 435.114 cv
591.034 435.039 591.007 435 591.007 435 cv
591.007 435 590.978 435.041 590.92 435.122 cv
543.966 437.372 496.995 438.496 450 438.496 cv
758.17 422.323 mo
750.318 413.126 742.722 405.391 737.968 400.734 cv
783.583 397.597 829.142 393.716 874.662 389.086 cv
873.643 395.672 872.005 402.217 870.086 408.372 cv
832.837 413.742 795.552 418.389 758.17 422.323 cv
.184314 .145098 .290196 rgb
f
463.219 410.604 mo
469.914 409.642 476.526 408.787 482.993 408 cv
520.993 404 556.993 399 593.993 388 cv
601.063 386.139 607.855 382.476 613.289 377.53 cv
613.289 377.53 li
613.289 377.53 li
875.748 377.53 li
875.644 381.349 875.259 385.224 874.662 389.086 cv
829.142 393.716 783.583 397.597 737.968 400.734 cv
734.894 397.724 733.007 396 733.007 396 cv
733.007 396 730.753 397.999 727.157 401.464 cv
639.266 407.28 551.254 410.327 463.219 410.604 cv
.156863 .121569 .286274 rgb
f
540.492 480 mo
540.492 480 li
551.926 460.877 568.252 445.105 590.592 435.586 cv
590.592 435.586 li
568.252 445.105 551.926 460.877 540.492 480 cv
814.71 452.372 mo
814.708 452.372 814.708 452.372 814.706 452.372 cv
814.708 452.372 814.708 452.372 814.71 452.372 cv
814.71 452.372 li
814.72 452.372 mo
836.234 452.366 858.149 440.123 865.922 420.182 cv
858.149 440.125 836.236 452.368 814.72 452.372 cv
796.168 449.067 mo
796.146 449.059 796.124 449.05 796.102 449.042 cv
796.124 449.05 796.146 449.059 796.168 449.067 cv
795.993 449 mo
795.993 449 li
795.822 448.932 795.648 448.862 795.477 448.794 cv
795.648 448.862 795.822 448.932 795.993 449 cv
795.993 449 li
795.351 448.744 mo
795.311 448.728 795.272 448.712 795.232 448.696 cv
795.272 448.712 795.311 448.728 795.351 448.744 cv
591.227 435.317 mo
591.227 435.317 li
591.417 435.238 591.609 435.158 591.8 435.079 cv
591.8 435.079 li
591.609 435.158 591.417 435.238 591.227 435.317 cv
865.933 420.154 mo
865.953 420.103 865.973 420.051 865.993 420 cv
867.415 416.365 868.812 412.454 870.086 408.372 cv
870.086 408.372 li
868.812 412.454 867.415 416.365 865.993 420 cv
865.973 420.051 865.953 420.103 865.933 420.154 cv
.164706 .129412 .286274 rgb
f
591.8 435.079 mo
591.865 435.053 591.928 435.027 591.993 435 cv
591.993 435 li
591.993 435 li
591.928 435.027 591.865 435.053 591.8 435.079 cv
591.8 435.079 li
592.583 434.775 mo
617.824 425.212 643.459 421.148 669.059 421.148 cv
643.464 421.149 617.82 425.213 592.583 434.775 cv
669.073 421.148 mo
669.069 421.148 669.069 421.148 669.065 421.148 cv
669.065 421.148 li
669.069 421.148 669.069 421.148 669.073 421.148 cv
870.086 408.372 mo
872.005 402.217 873.643 395.672 874.662 389.086 cv
874.662 389.086 li
873.643 395.672 872.005 402.217 870.086 408.372 cv
870.086 408.372 li
.141176 .113725 .282353 rgb
f
540.492 480 mo
540.491 480 li
313.175 480 li
313.175 480 li
540.492 480 li
.851549 .847782 .982668 rgb
f
321.993 426 mo
314.851 420.982 309.199 414.919 304.694 408.109 cv
324.489 408.795 344.294 409.34 364.095 409.746 cv
351.605 419.027 337.554 425.259 321.993 426 cv
.184314 .145098 .290196 rgb
f
364.095 409.746 mo
344.294 409.34 324.489 408.795 304.694 408.109 cv
298.677 399.016 294.703 388.589 291.947 377.53 cv
395.127 377.53 li
386.189 389.611 375.831 401.025 364.095 409.746 cv
.156863 .121569 .286274 rgb
f
313.175 480 mo
260.074 480 li
260.129 479.263 260.16 478.534 260.16 477.818 cv
260.16 471.035 257.588 463.28 254.018 455.783 cv
255.351 454.893 256.675 453.966 257.993 453 cv
264.485 448.131 268.05 440.92 268.055 433.902 cv
268.055 433.556 268.047 433.211 268.03 432.867 cv
300.415 434.872 332.835 436.343 365.256 437.276 cv
344.422 447.467 326.214 461.184 313.175 480 cv
.180392 .141176 .290196 rgb
f
365.256 437.276 mo
332.835 436.343 300.415 434.872 268.03 432.867 cv
267.752 427.278 265.181 421.891 259.993 418 cv
259.966 417.98 259.941 417.961 259.915 417.941 cv
259.831 417.877 259.749 417.815 259.665 417.752 cv
251.717 411.757 243.482 407.754 235.039 405.117 cv
258.249 406.307 281.471 407.304 304.694 408.109 cv
309.199 414.919 314.851 420.982 321.993 426 cv
337.554 425.259 351.605 419.027 364.095 409.746 cv
392.733 410.332 421.358 410.625 450 410.625 cv
454.401 410.625 458.818 410.618 463.219 410.604 cv
430.138 415.358 395.017 422.719 365.256 437.276 cv
158.333 401.271 mo
158.329 401.271 158.326 401.271 158.322 401.271 cv
147.171 401.271 136.024 400.582 125.025 398.025 cv
139.296 399.133 153.578 400.169 167.857 401.131 cv
164.685 401.215 161.511 401.271 158.338 401.271 cv
158.336 401.271 158.334 401.271 158.333 401.271 cv
.152941 .121569 .286274 rgb
f
450 410.625 mo
421.358 410.625 392.733 410.332 364.095 409.746 cv
375.831 401.025 386.189 389.611 395.127 377.53 cv
613.289 377.53 li
607.855 382.476 601.063 386.139 593.993 388 cv
556.993 399 520.993 404 482.993 408 cv
476.526 408.787 469.914 409.642 463.219 410.604 cv
458.818 410.618 454.401 410.625 450 410.625 cv
304.694 408.109 mo
281.471 407.304 258.249 406.307 235.039 405.117 cv
222.782 401.288 210.086 400.335 197.169 400.335 cv
197.166 400.335 197.162 400.335 197.159 400.335 cv
197.159 400.335 li
197.159 400.335 li
197.157 400.335 197.157 400.335 197.155 400.335 cv
190.862 400.335 184.516 400.561 178.147 400.791 cv
178.12 400.792 178.093 400.793 178.067 400.794 cv
177.984 400.797 177.904 400.8 177.822 400.803 cv
177.822 400.803 li
177.822 400.803 li
177.675 400.808 177.528 400.814 177.381 400.819 cv
177.326 400.821 177.269 400.823 177.214 400.825 cv
177.03 400.832 176.847 400.838 176.663 400.845 cv
176.598 400.847 176.533 400.85 176.468 400.852 cv
176.461 400.852 176.453 400.852 176.446 400.853 cv
176.377 400.855 176.308 400.858 176.239 400.86 cv
173.449 400.96 170.653 401.057 167.857 401.131 cv
153.578 400.169 139.296 399.133 125.025 398.025 cv
123.963 397.778 122.906 397.515 121.847 397.232 cv
121.758 397.208 121.666 397.184 121.577 397.16 cv
121.565 397.156 121.553 397.153 121.541 397.15 cv
121.511 397.142 121.483 397.134 121.453 397.126 cv
121.437 397.122 121.42 397.117 121.404 397.113 cv
121.374 397.105 121.345 397.097 121.315 397.089 cv
121.303 397.085 121.29 397.082 121.277 397.078 cv
121.242 397.068 121.205 397.059 121.17 397.049 cv
121.144 397.042 121.117 397.034 121.09 397.027 cv
121.057 397.018 121.026 397.009 120.993 397 cv
120.993 397 li
109.904 393.976 102.121 386.631 96.4851 377.53 cv
291.947 377.53 li
294.703 388.589 298.677 399.016 304.694 408.109 cv
.129412 .101961 .282353 rgb
f
205.257 480 mo
170.572 480 li
170.21 477.962 169.766 475.899 169.254 473.82 cv
171.457 473.86 173.661 473.881 175.866 473.881 cv
175.869 473.881 175.874 473.881 175.877 473.881 cv
175.877 473.881 li
175.877 473.881 li
175.88 473.881 175.878 473.881 175.881 473.881 cv
185.745 473.881 195.634 473.462 205.574 472.476 cv
205.305 474.28 205.161 476.067 205.161 477.818 cv
205.161 478.531 205.197 479.26 205.257 480 cv
.180392 .141176 .290196 rgb
f
117.634 480 mo
24.8264 480 li
26.5944 477.04 28.9328 474.34 31.9927 472 cv
31.9927 472 li
32.044 471.956 32.0962 471.911 32.1476 471.868 cv
39.6388 465.526 48.5478 463.723 57.8086 463.722 cv
57.8107 463.722 57.8133 463.722 57.8154 463.722 cv
57.8176 463.722 57.8206 463.722 57.8227 463.722 cv
65.368 463.723 73.1468 464.919 80.5843 465.831 cv
80.626 465.836 80.6669 465.841 80.7086 465.846 cv
80.7441 465.85 80.7811 465.855 80.8165 465.859 cv
81.2097 465.907 81.6016 465.954 81.9928 466 cv
81.9928 466 li
82.1109 466.014 82.2322 466.028 82.3503 466.042 cv
82.4447 466.053 82.5348 466.063 82.6292 466.074 cv
82.7919 466.093 82.9595 466.113 83.1222 466.132 cv
83.2166 466.143 83.3089 466.153 83.4034 466.164 cv
95.5645 467.585 107.649 469.075 119.698 470.363 cv
118.853 473.575 118.149 476.801 117.634 480 cv
f
313.175 480 mo
260.074 480 li
260.074 480 li
313.175 480 li
205.257 480 mo
170.572 480 li
170.572 480 li
205.257 480 li
205.257 480 li
117.634 480 mo
24.8262 480 li
24.8264 480 24.8264 480 24.8264 480 cv
117.634 480 li
117.634 480 li
.593049 .580961 .94762 rgb
f
24.8264 480 mo
0 480 li
0 478.04 li
0 478.04 li
21.1233 457.912 56.1335 454.546 64.9928 426 cv
66.2999 421.915 66.8861 417.911 66.8867 413.991 cv
66.8867 413.815 66.8855 413.638 66.8832 413.463 cv
91.5534 416.701 116.229 419.621 140.955 422.231 cv
135.603 431.171 124.929 450.495 119.698 470.363 cv
107.649 469.075 95.5645 467.585 83.4034 466.164 cv
83.3089 466.153 83.2166 466.143 83.1222 466.132 cv
82.9595 466.113 82.7919 466.093 82.6292 466.074 cv
82.5348 466.063 82.4447 466.053 82.3503 466.042 cv
82.2322 466.028 82.1109 466.014 81.9928 466 cv
81.9928 466 li
81.6016 465.954 81.2097 465.907 80.8165 465.859 cv
80.7811 465.855 80.7441 465.85 80.7086 465.846 cv
80.6669 465.841 80.626 465.836 80.5843 465.831 cv
73.1458 464.919 65.369 463.723 57.8227 463.722 cv
57.8206 463.722 57.8176 463.722 57.8154 463.722 cv
57.8154 463.722 li
57.8154 463.722 li
57.8133 463.722 57.8107 463.722 57.8086 463.722 cv
48.5467 463.723 39.6397 465.525 32.1476 471.868 cv
32.0962 471.911 32.044 471.956 31.9927 472 cv
31.9927 472 li
28.9328 474.34 26.5944 477.04 24.8264 480 cv
175.877 473.881 mo
175.874 473.881 175.869 473.881 175.866 473.881 cv
173.661 473.881 171.457 473.86 169.254 473.82 cv
164.365 453.969 153.259 432.882 147.607 422.926 cv
174.039 425.655 200.47 428.023 226.949 430.035 cv
219.72 439.398 207.919 456.694 205.574 472.476 cv
195.637 473.462 185.743 473.881 175.881 473.881 cv
175.878 473.881 175.88 473.881 175.877 473.881 cv
254.018 455.783 mo
249.466 446.224 243.291 437.085 238.751 430.907 cv
248.52 431.61 258.255 432.262 268.03 432.867 cv
268.047 433.211 268.055 433.556 268.055 433.902 cv
268.05 440.92 264.485 448.131 257.993 453 cv
256.675 453.966 255.351 454.893 254.018 455.783 cv
.215686 .168627 .294118 rgb
f
268.03 432.867 mo
258.255 432.262 248.52 431.61 238.751 430.907 cv
235.207 426.086 232.66 423.07 232.66 423.07 cv
232.66 423.07 230.294 425.704 226.949 430.035 cv
200.47 428.023 174.039 425.655 147.607 422.926 cv
145.511 419.233 144.165 417.07 144.165 417.07 cv
144.165 417.07 142.918 418.952 140.955 422.231 cv
116.229 419.621 91.5534 416.701 66.8832 413.463 cv
66.7873 406.209 64.6993 399.248 61.4814 392.604 cv
82.6472 394.572 103.838 396.38 125.025 398.025 cv
136.025 400.582 147.169 401.271 158.322 401.271 cv
158.326 401.271 158.329 401.271 158.333 401.271 cv
158.333 401.271 li
158.333 401.271 li
158.334 401.271 158.336 401.271 158.338 401.271 cv
161.512 401.271 164.685 401.215 167.857 401.131 cv
190.245 402.639 212.633 403.967 235.037 405.116 cv
243.48 407.754 251.717 411.757 259.665 417.752 cv
259.749 417.815 259.831 417.877 259.915 417.941 cv
259.941 417.961 259.966 417.98 259.993 418 cv
265.181 421.891 267.752 427.278 268.03 432.867 cv
.184314 .145098 .290196 rgb
f
235.037 405.116 mo
212.633 403.967 190.245 402.639 167.857 401.131 cv
170.653 401.057 173.449 400.96 176.239 400.86 cv
176.308 400.858 176.377 400.855 176.446 400.853 cv
176.453 400.852 176.461 400.852 176.468 400.852 cv
176.533 400.85 176.598 400.847 176.663 400.845 cv
176.847 400.838 177.03 400.832 177.214 400.825 cv
177.269 400.823 177.326 400.821 177.381 400.819 cv
177.528 400.814 177.675 400.808 177.822 400.803 cv
177.822 400.803 li
177.822 400.803 li
177.904 400.8 177.984 400.797 178.067 400.794 cv
178.093 400.793 178.12 400.792 178.147 400.791 cv
184.514 400.561 190.864 400.335 197.155 400.335 cv
197.157 400.335 197.157 400.335 197.159 400.335 cv
197.162 400.335 197.166 400.335 197.169 400.335 cv
210.084 400.336 222.782 401.289 235.037 405.116 cv
125.025 398.025 mo
103.838 396.38 82.6472 394.572 61.4814 392.604 cv
58.9499 387.378 55.7191 382.349 52.2085 377.53 cv
96.4851 377.53 li
102.121 386.631 109.904 393.976 120.993 397 cv
120.993 397 li
121.026 397.009 121.057 397.018 121.09 397.027 cv
121.117 397.034 121.144 397.042 121.17 397.049 cv
121.205 397.059 121.242 397.068 121.277 397.078 cv
121.29 397.082 121.303 397.085 121.315 397.089 cv
121.345 397.097 121.374 397.105 121.404 397.113 cv
121.42 397.117 121.437 397.122 121.453 397.126 cv
121.483 397.134 121.511 397.142 121.541 397.15 cv
121.553 397.153 121.565 397.156 121.577 397.16 cv
121.666 397.184 121.758 397.208 121.847 397.232 cv
122.906 397.515 123.963 397.778 125.025 398.025 cv
.156863 .121569 .286274 rgb
f
24.8264 480 mo
24.8264 480 li
26.5944 477.04 28.9328 474.34 31.9927 472 cv
31.9927 472 li
31.9927 472 li
28.9328 474.34 26.5944 477.04 24.8264 480 cv
175.877 473.881 mo
175.874 473.881 175.869 473.881 175.866 473.881 cv
175.869 473.881 175.874 473.881 175.877 473.881 cv
175.877 473.881 li
175.881 473.881 mo
185.743 473.881 195.637 473.462 205.574 472.476 cv
205.574 472.476 li
195.634 473.462 185.745 473.881 175.881 473.881 cv
32.1476 471.868 mo
39.6397 465.525 48.5467 463.723 57.8086 463.722 cv
48.5478 463.723 39.6388 465.526 32.1476 471.868 cv
83.4034 466.164 mo
83.3089 466.153 83.2166 466.143 83.1222 466.132 cv
83.2166 466.143 83.3089 466.153 83.4034 466.164 cv
82.6292 466.074 mo
82.5348 466.063 82.4447 466.053 82.3503 466.042 cv
82.4447 466.053 82.5348 466.063 82.6292 466.074 cv
81.9928 466 mo
81.9928 466 li
81.6016 465.954 81.2097 465.907 80.8165 465.859 cv
81.2097 465.907 81.6016 465.954 81.9928 466 cv
81.9928 466 li
80.7086 465.846 mo
80.6669 465.841 80.626 465.836 80.5843 465.831 cv
80.626 465.836 80.6669 465.841 80.7086 465.846 cv
57.8227 463.722 mo
57.8206 463.722 57.8176 463.722 57.8154 463.722 cv
57.8154 463.722 li
57.8176 463.722 57.8206 463.722 57.8227 463.722 cv
254.018 455.783 mo
254.018 455.783 li
255.351 454.893 256.675 453.966 257.993 453 cv
264.485 448.131 268.05 440.92 268.055 433.902 cv
268.05 440.92 264.485 448.131 257.993 453 cv
256.675 453.966 255.351 454.893 254.018 455.783 cv
.164706 .129412 .286274 rgb
f
259.915 417.941 mo
259.831 417.877 259.749 417.815 259.665 417.752 cv
259.749 417.815 259.831 417.877 259.915 417.941 cv
158.333 401.271 mo
158.329 401.271 158.326 401.271 158.322 401.271 cv
158.326 401.271 158.329 401.271 158.333 401.271 cv
158.333 401.271 li
158.338 401.271 mo
161.511 401.271 164.685 401.215 167.857 401.131 cv
167.857 401.131 li
164.685 401.215 161.512 401.271 158.338 401.271 cv
.141176 .113725 .282353 rgb
f
167.857 401.131 mo
167.857 401.131 li
170.653 401.057 173.449 400.96 176.239 400.86 cv
173.449 400.96 170.653 401.057 167.857 401.131 cv
176.446 400.853 mo
176.453 400.852 176.461 400.852 176.468 400.852 cv
176.461 400.852 176.453 400.852 176.446 400.853 cv
176.663 400.845 mo
176.847 400.838 177.03 400.832 177.214 400.825 cv
177.03 400.832 176.847 400.838 176.663 400.845 cv
177.381 400.819 mo
177.528 400.814 177.675 400.808 177.822 400.803 cv
177.675 400.808 177.528 400.814 177.381 400.819 cv
177.822 400.803 mo
177.904 400.8 177.984 400.797 178.067 400.794 cv
177.984 400.797 177.904 400.8 177.822 400.803 cv
178.147 400.791 mo
184.516 400.561 190.862 400.335 197.155 400.335 cv
190.864 400.335 184.514 400.561 178.147 400.791 cv
197.169 400.335 mo
197.166 400.335 197.162 400.335 197.159 400.335 cv
197.159 400.335 li
197.162 400.335 197.166 400.335 197.169 400.335 cv
121.847 397.232 mo
121.758 397.208 121.666 397.184 121.577 397.16 cv
121.666 397.184 121.758 397.208 121.847 397.232 cv
121.541 397.15 mo
121.511 397.142 121.483 397.134 121.453 397.126 cv
121.483 397.134 121.511 397.142 121.541 397.15 cv
121.404 397.113 mo
121.374 397.105 121.345 397.097 121.315 397.089 cv
121.345 397.097 121.374 397.105 121.404 397.113 cv
121.277 397.078 mo
121.242 397.068 121.205 397.059 121.17 397.049 cv
121.205 397.059 121.242 397.068 121.277 397.078 cv
121.09 397.027 mo
121.057 397.018 121.026 397.009 120.993 397 cv
121.026 397.009 121.057 397.018 121.09 397.027 cv
.117647 .0941176 .278431 rgb
f
24.8264 480 mo
24.8262 480 li
0 480 li
24.8264 480 li
.851549 .847782 .982668 rgb
f
0 478.04 mo
0 403.903 li
22.2615 407.346 44.5669 410.534 66.8832 413.463 cv
66.8855 413.638 66.8867 413.815 66.8867 413.991 cv
66.8861 417.911 66.2999 421.915 64.9928 426 cv
56.1335 454.546 21.1233 457.912 0 478.04 cv
.180392 .141176 .290196 rgb
f
66.8832 413.463 mo
44.5669 410.534 22.2615 407.346 0 403.903 cv
0 386.432 li
20.4851 388.641 40.9735 390.698 61.4814 392.604 cv
64.6993 399.248 66.7873 406.209 66.8832 413.463 cv
.152941 .121569 .286274 rgb
f
61.4814 392.604 mo
40.9735 390.698 20.4851 388.641 0 386.432 cv
0 377.53 li
52.2085 377.53 li
55.7191 382.349 58.9499 387.378 61.4814 392.604 cv
.129412 .101961 .282353 rgb
f
456.963 206.043 mo
451.084 204.789 445.295 203.055 439.635 200.957 cv
456.982 200.957 li
457.191 201.046 457.402 201.135 457.612 201.222 cv
457.405 202.831 457.189 204.438 456.963 206.043 cv
level3{
gsave
clp
[-1.30785e-008 -291.304 -291.304 1.30785e-008 450 255.719 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.30785e-008 -291.304 -291.304 1.30785e-008 450 255.719 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
456.982 200.957 mo
439.635 200.957 li
429.454 197.182 419.695 192.23 410.605 186.776 cv
415.719 185.284 420.794 184.712 425.841 184.712 cv
437.001 184.712 448.017 187.515 458.952 189.381 cv
458.779 191.159 458.593 192.937 458.395 194.711 cv
454.003 194.63 449.602 194.434 445.2 194.19 cv
448.807 196.894 452.779 199.161 456.982 200.957 cv
533.04 191.726 mo
532.735 188.78 532.464 185.827 532.229 182.869 cv
532.174 182.171 531.702 178.072 531.513 175.205 cv
540.755 175.475 549.786 178.267 557.635 184.305 cv
549.4 187.05 541.167 189.307 533.04 191.726 cv
level3{
gsave
clp
[-1.30785e-008 -291.304 -291.304 1.30785e-008 450 255.719 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.30785e-008 -291.304 -291.304 1.30785e-008 450 255.719 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
476.9 208.322 mo
475.439 208.322 473.96 208.265 472.46 208.147 cv
468.792 207.945 465.143 207.525 461.523 206.914 cv
459.998 206.657 458.477 206.366 456.963 206.043 cv
457.189 204.438 457.405 202.831 457.612 201.222 cv
461.862 202.981 466.338 204.263 470.904 205.036 cv
473.9 205.544 476.932 205.825 479.935 205.825 cv
480.048 205.825 480.162 205.824 480.275 205.823 cv
485.973 205.309 493.387 205.309 498.204 202.153 cv
501.196 200.726 503.914 199.168 506.43 197.617 cv
514.391 192.954 523.04 188.012 531.689 184.305 cv
528.201 181.354 524.599 180.209 520.902 180.209 cv
514.484 180.209 507.785 183.661 500.928 187.113 cv
494.069 190.565 487.052 194.017 479.997 194.017 cv
479.452 194.017 478.906 193.997 478.361 193.954 cv
474.748 194.392 471.078 194.601 467.394 194.693 cv
465.799 194.732 464.203 194.75 462.604 194.75 cv
461.202 194.75 459.799 194.736 458.395 194.711 cv
458.593 192.937 458.779 191.159 458.952 189.381 cv
460.994 189.729 463.032 190.045 465.068 190.304 cv
468.41 190.729 471.745 191 475.073 191 cv
475.307 191 475.541 190.999 475.774 190.996 cv
483.502 190.483 490.916 188.012 496.519 185.154 cv
498.738 184.007 500.854 182.879 502.914 181.817 cv
511.477 177.63 520.827 175.184 530.02 175.184 cv
530.518 175.184 531.016 175.191 531.513 175.205 cv
531.702 178.072 532.174 182.171 532.229 182.869 cv
532.464 185.827 532.735 188.78 533.04 191.726 cv
522.877 194.752 512.883 198.033 503.271 202.838 cv
494.73 206.041 486.189 208.322 476.9 208.322 cv
.803922 .352941 .384314 rgb
f
600.997 148.58 mo
573.895 148.58 li
560.31 145.005 546.294 139.512 532.602 139.512 cv
524.94 139.512 517.379 141.233 510.055 145.971 cv
508.311 146.897 506.536 147.781 504.709 148.58 cv
454.564 148.58 li
451.455 146.055 448.465 143.117 445.62 139.725 cv
447.734 138.034 450.025 137.415 452.345 137.415 cv
455.513 137.415 458.733 138.57 461.62 139.725 cv
470.169 143.999 478.719 145.858 487.127 145.858 cv
492.241 145.858 497.304 145.17 502.282 143.92 cv
504.914 143.259 507.523 142.441 510.104 141.484 cv
514.62 139.725 519.62 136.725 525.739 135.377 cv
528.524 134.71 531.316 134.342 534.127 134.342 cv
534.411 134.342 534.696 134.346 534.981 134.354 cv
549.617 138.473 563.981 140.347 578.796 140.346 cv
586.897 140.346 595.136 139.785 603.62 138.725 cv
604.62 138.725 606.62 140.725 606.62 141.725 cv
604.998 144.274 603.107 146.555 600.997 148.58 cv
level3{
gsave
clp
[-1.30785e-008 -291.304 -291.304 1.30785e-008 450 255.719 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.30785e-008 -291.304 -291.304 1.30785e-008 450 255.719 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
494.146 161.857 mo
480.075 161.857 466.442 158.228 454.564 148.58 cv
504.709 148.58 li
504.038 148.873 503.361 149.154 502.675 149.422 cv
500.12 150.419 497.454 151.225 494.62 151.725 cv
493.69 151.841 492.775 151.89 491.87 151.89 cv
489.532 151.89 487.274 151.564 485.068 151.239 cv
482.863 150.913 480.71 150.588 478.583 150.588 cv
476.58 150.588 474.6 150.876 472.62 151.725 cv
479.065 158.17 486.803 160.554 494.774 160.553 cv
499.17 160.553 503.637 159.828 507.998 158.66 cv
511.064 157.838 514.08 156.807 517.057 155.808 cv
520.034 154.809 523.016 153.92 525.898 153.15 cv
527.936 152.896 529.98 152.759 532.027 152.759 cv
532.773 152.759 533.521 152.777 534.268 152.814 cv
544.42 153.38 555.976 158.219 566.392 158.219 cv
572.753 158.219 578.691 156.412 583.62 150.725 cv
580.411 150.19 577.165 149.44 573.895 148.58 cv
600.997 148.58 li
594.734 154.591 586.542 158.344 577.726 160.166 cv
568.361 160.29 559.897 160.406 552.595 160.509 cv
550.308 160.036 547.992 159.437 545.62 158.725 cv
542.006 157.692 538.125 157.193 534.049 157.193 cv
530.231 157.193 526.241 157.631 522.137 158.48 cv
518.541 158.921 515.094 159.575 511.69 160.172 cv
505.828 161.24 499.951 161.857 494.146 161.857 cv
564.28 161.765 mo
562.328 161.765 560.388 161.655 558.442 161.442 cv
561.651 161.487 565.045 161.534 568.603 161.583 cv
567.151 161.706 565.713 161.765 564.28 161.765 cv
level3{
gsave
clp
[-1.30785e-008 -291.304 -291.304 1.30785e-008 450 255.719 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.30785e-008 -291.304 -291.304 1.30785e-008 450 255.719 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
568.603 161.583 mo
565.045 161.534 561.651 161.487 558.442 161.442 cv
556.504 161.229 554.56 160.916 552.595 160.509 cv
559.897 160.406 568.361 160.29 577.726 160.166 cv
576.698 160.379 575.663 160.564 574.62 160.725 cv
572.578 161.133 570.578 161.417 568.603 161.583 cv
level3{
gsave
clp
[-1.30785e-008 -291.304 -291.304 1.30785e-008 450 255.719 ]ct
/10 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~oYHmd^mFZ-QL_eVo"UL]^6\<'POZ>Mn@b%T]TV`qP4-#Gn%"VL\WH6iORBW?m'_r@[Z9^^NpO06la2Z;
Z]4:VNU!a+l*-*1Xc)GFMs.-qkbs:#W/'Q4L?>4bk+ROlSqcBuL#nkZjI:kaQ\+7`K&`&HifeuROauGQ
JDuN<iJ`9FN.9cAJ)H'2hh?L9KRM^1IGTO$hL9e-H[=LoHJEdigj+,!G'D\_G2%%\g2D/gDg'fNFkLPQ
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~fkY``CN\<EFkCDNfP,EYBlhm<F4OrEen0!RAolI5F4=cBdq*LHAT6"*E6r'5cXLk=@W9S!E6M[.b?o22
?Z4%mDoc7'a'N])?>mhfDoGq!_cpoo>AM)ZCVj7j^fkNg>&1lTCVEnd]i]$^=DGHJC:[D[\Q*CS<GJs@
C:-uTZr:YF;eWI5BWk6GXAET2:hZe'BV\F;Thf<o:M64nB:M_0Q;2(X:1o__B95c!O%X#?94WfKA;*Qb
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.487685 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.30785e-008 -291.304 -291.304 1.30785e-008 450 255.719 ]ct
clp
/10 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~oCMSFo()>@naZ/>nF5r:n*f`6mdBN2mdBK0mHs<-lg*m&lg*m&lK[["lK[Wukih6okih3mkND$kk2tde
jlPUcjlPRaj5]1[io8tWiSibSiSibSi8EPOhr!>KhVR,Gh;-oCh;-oCgtUT<gY:K:g=k96g"G'2f\"j/
f\"j/f@SX+f%/F'e^`4#eC;sre'landEp4ccd0q_cHXVXbfe2Pb0%iIaN)?@`l?$;`Pod5_SX1,_83t'
^V@Ls^:q:o]Y(kg]"5J`\[]/Y[^ENM['R*FZE^U9XfJM&WMcSgU7n6QSt2CAR[9;)P`h/jO,o<ZLkg_=
~>
<~^qd_"^:q=q^:q:o]tM(k]Y(kg]"5J`\@B&Y\@B#V[C*EM['[3IZa6sCZ*:F8YH=n-X/W%rVl-GhUnXQV
TUq^FS=H+=R?s5*P`q8nP*(ifNf8mSMi3IKLPCM:KS4u1Jq8E#I!^0cH$FRYGBJ"KEcH&9DJj<-CMIU!
Bk_6oBP;'mB4b^dAS#FaAS#C_A7T4]A7K%V@:<SQ@:3GK?=$rE?=$rD?!U`A?!U]=>$>*5>$>*5=]nm1
=]nm0='&I)='&I(<)cgr<)cgr;c6Lk;GpCj:esk_:JXb^:JOY[:/4PZ:/4MX9he>V9hS)N8kM]J8kDNC
~>
<~QBmi&Q'IW"Q'IW!P*1ukP*1riOcbcgOcYWbO,o?^NK&pWNK&pWN/W^SN/NRNMMd:KMMR"AL5(G;KnY57
KnY57KS5#3KS"c+JUrB'JUi6"It)rtIXZ`pIXZ`oI!g<hH[9s_H$O[\G]n7RG'8%OF`hhLF`hhKFEDVH
FEDVHFE;JCEcQ2@EcQ2@EcQ2@EcH#9Df9Q4Df9Q4Df9Q4Df9Q3DJj?0DJj?0DJj?0DJj<,C2.KuC2.Ku
C2.KuC2.KuBk_9qBk_9qBk_9qBk_9qBP1sjB4kjiB4kjiB4kjiB4kggAnGXeAnGXeAnGXeAn>I^@q0"Y
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /10 /Gradient get_res exec grestore
}if
np
620.565 104.087 mo
619.825 104.029 619.086 103.957 618.345 103.872 cv
620.104 103.855 621.859 103.838 623.621 103.821 cv
622.594 103.904 621.575 103.992 620.565 104.087 cv
668.64 97.5244 mo
660.097 97.4191 651.469 97.3185 642.813 97.2244 cv
646.3 95.5894 649.895 93.5939 648.689 92.9534 cv
630.291 83.1828 607.24 79.7158 585.03 79.7158 cv
574.329 79.7158 563.824 80.5206 554.128 81.813 cv
547.827 82.6527 520.09 83.7031 517.12 91.8598 cv
515.997 94.9463 526.636 96.0724 540.185 96.0723 cv
553.784 96.0723 570.315 94.9378 580.825 93.5126 cv
581.018 93.5107 581.208 93.5098 581.401 93.5098 cv
589.464 93.5098 597.233 95.1787 605.015 96.8596 cv
578.254 96.6369 551.974 96.5 527.808 96.5 cv
520.232 96.5 512.441 96.5134 504.501 96.5388 cv
498.768 93.8527 493.54 89.8395 489.012 83.9905 cv
518.831 78.4685 549.737 83.7944 579.582 74.5041 cv
596.198 74.5041 li
598.082 74.9916 599.953 75.4425 601.818 75.8606 cv
604.983 76.5703 608.143 77.1888 611.302 77.7185 cv
614.462 78.2486 617.624 78.6902 620.798 79.0467 cv
627.242 80.1533 633.99 80.3729 640.791 80.3729 cv
643.03 80.3729 645.276 80.3491 647.517 80.3253 cv
649.761 80.3014 651.999 80.2775 654.226 80.2775 cv
666.339 80.2775 678.087 80.9841 688.012 86.2391 cv
682.314 91.5813 675.715 95.1178 668.64 97.5244 cv
level3{
gsave
clp
[-1.30785e-008 -291.304 -291.304 1.30785e-008 450 255.719 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.30785e-008 -291.304 -291.304 1.30785e-008 450 255.719 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
596.198 74.5041 mo
579.582 74.5041 li
580.12 74.3366 580.656 74.1651 581.193 73.9881 cv
584.051 73.5853 586.864 73.3615 589.64 73.3615 cv
590.51 73.3615 591.376 73.3835 592.239 73.4289 cv
593.566 73.806 594.885 74.164 596.198 74.5041 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 480 ]ct
[18.24 0 0 2.88 578.88 404.64 ]ct
snap_to_device
<<
/T 1
/W 38 
/H 6 
/M[38 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~LPLY?LPLY?LPLY?LPLY?LPLY?LPLY?LPLY?LPLY?LPLY?LPLY?LPLY?LPLY?LPLY?LPLY?LPLY?LPLY?
LPLY?LPLY?LPLY?LPLY?LPLY?LPLY?LPLY?LPLY?LPLY?LPLY?LPLY?LPLY?LPLY?LPLY?LPLY?LPLY?
LPLY?LPLY?LPLY?LPLY?LPLY?LPLY?LPLY?LPLY?LPLY?LPLY?LPLY?LPLY?LPLY?LPLY?LPLY?LPLY?
LPLY?LPLY?LPLY?LPLY?LPLY?LPLY?LPLY?LPLY?LPLY?~>
<~0JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG17
0JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG17
0JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG17
0JG170JG170JG170JG170JG170JG170JG170JG170JG17~>
<~4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc
4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc
4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc
4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
618.345 103.872 mo
616.413 103.65 614.475 103.339 612.519 102.945 cv
609.814 102.401 607.074 101.698 604.263 100.855 cv
597.294 98.4967 589.776 97.692 581.98 97.692 cv
573.593 97.692 564.884 98.6244 556.204 99.5567 cv
547.523 100.489 538.871 101.421 530.587 101.421 cv
521.257 101.421 512.396 100.238 504.501 96.5388 cv
512.441 96.5134 520.232 96.5 527.808 96.5 cv
551.974 96.5 578.254 96.6369 605.015 96.8596 cv
610.449 98.0336 615.891 99.2136 621.444 99.8354 cv
623.922 100.113 626.407 100.279 628.886 100.279 cv
631.67 100.279 634.447 100.07 637.2 99.5756 cv
637.545 99.5138 640.148 98.4745 642.813 97.2244 cv
651.469 97.3185 660.097 97.4191 668.64 97.5244 cv
654.386 102.374 638.208 102.633 623.621 103.821 cv
621.859 103.838 620.104 103.855 618.345 103.872 cv
level3{
gsave
clp
[-1.30785e-008 -291.304 -291.304 1.30785e-008 450 255.719 ]ct
/11 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~m\Y6rV0M@&GO2,Ll_8UhTm,dnG3PQ@l(*"]Rrde^F6Ap3k*L/NP]GlMEo`F)j,n<?ODs3?E8lptiJ_^5
MJqF0Dr6@ghM?(+L2Pk$DVTh[gjs:rJSa(kC>+,Ofm@JeH>;)XB\7TDf6:oZG%]BIB@V$8eT,<OE+[R;
B%(U/dVEC@CLkh,AC,"#cXp\5ARj%tA'JOlc!b#(?XV)a@*;h_b$AAr>@5KS?H?2SaAuWf<aNdG>fK]I
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~``$-];d@:<>f9HD_baRT:g:e4>Ja0?_,":N:KtV0>JEp;^.qkF:0P;(>.[I3\kH;<9Nnu">.7..[nBf2
938Ml=0tM"ZUe0(86<)e=0>%pX@H<l7olWY<iAGfUd\=Z796*M<hMi]SO?GG6r]R@<0opNPsSH66<'%3
<0':DN^-O$5Z<M';hmP8Kg&Fe5#["q;gpl.I6CGR4]-Jd;0P*!FZWH@4&KuY;/\KmDE:U/3`'KK:hM^`
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.487685 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.30785e-008 -291.304 -291.304 1.30785e-008 450 255.719 ]ct
clp
/11 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~mHs9,lg*m&lK[["l07Eqkih3mkND!ijlPRajQ,@]io8qUiSibSi8EMMhr!;Ih;-oCh;$c>gY:H9g=k65
f\"j/f@SX+f%/C%e^`1!eC2jodaHRldF$=fd*U+bcHa_\cHXSWbfn8RbK@uLaiMQEaN)?Aa2Z-<`Pog7
`5KU4_o'@._SX.*_83q&^V@Ou^:q:o]Y(kg]=PSa\[]/Z\$i`R[^ENM['R*EZEgd@Ycb+0X/i8#WMl\i
USFQWTV.pKS=>q7R$X/*Q'@JpOH5H_NfAsSM26qAKnP)0JUi6!I=6HgH$OXYG'.nIEH,r9DJj<,BkV-l
~>
<~V59u`USFTYTqS-OSXl:@S=>t9R@'>-QBdYtPEV/lOH>NaNfK-YMi*@JLkphALPCM9K7\Z*J:N0#Isufm
H?sj^G^+IWG'7tKEcQ/>EH#i7DJa3*C2.KtBP;$jAS#C_A7T.X?sd5H?!LW>>?Y02=&r@%<E3$u;c6Lk
;,C%a:JXb^:JX_\:/4PZ:/4MX9he>V9h\2Q91qoN91qoM8kM]J8kMWE7n6'>7n6'=7Rfj:7Rfj96psF2
6psF26UO4.6UO4-5s[e&5s[e&5X.It5<h@s5!;%l4Ztqk4Zkhh4?P_g4?GSb3]];_3]]8]3B9)[3B/oT
~>
<~GB\7TG'8%PG'8%PF`hhLF`_YEEcQ2@EcQ/>EH,u;Df9Q4Df9Q4DJj?0DJj<.D/F-,D/=!'CMR^#Bk_9q
Bk_9pB4kjiB4kggAnGXeAnGUcAS#F`@q0"Y@q0"Y@U`eU@:3GL?XI/I?X@&F?=$rD?!U`A?!U]>>?b<9
>?b<9>?b97>$>*5>$>*5>$>*5>$>'3=]nm1=]nm1=]nm1=]ng,<`W7%<`W7%<`W7%<`W7%<E3%!<E3%!
<E3%!<E3$u;c?Un;c?Un;c?Un;c?Un;c6Lk;GpCj;GpCj;GpCj;Gg7e:f'tb:f'tb:f'tb:f'q`:JXb^
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /11 /Gradient get_res exec grestore
}if
np
162.733 143.543 mo
158.679 143.543 153.646 143.094 148.369 142.645 cv
143.092 142.196 137.572 141.746 132.542 141.746 cv
128.69 141.746 125.126 142.01 122.18 142.739 cv
118.638 143.133 115.115 143.372 111.509 143.372 cv
106.227 143.372 100.765 142.86 94.8041 141.574 cv
91.4788 140.941 88.1427 140.236 84.7978 139.507 cv
68.1 135.779 37.6738 137 34.7259 131.446 cv
32.5027 127.258 53.2226 124.147 70.7311 124.147 cv
76.1663 124.147 81.296 124.447 85.3288 125.108 cv
80.5157 125.195 77.8548 125.247 77.8548 125.247 cv
77.8548 125.247 81.2143 125.316 87.2378 125.43 cv
90.161 125.917 93.056 126.373 95.9191 126.692 cv
97.1056 126.762 98.2789 126.795 99.4344 126.795 cv
103.211 126.795 106.794 126.44 109.992 125.841 cv
120.971 126.03 134.251 126.247 148.997 126.462 cv
162.075 130.732 173.402 137.24 171.778 140.948 cv
170.915 142.922 167.501 143.543 162.733 143.543 cv
70.3981 127.024 mo
68.6871 127.024 66.6978 127.297 68.1108 128.873 cv
72.6838 133.974 80.3305 135.236 86.6275 136.895 cv
94.3688 138.935 102.097 141.7 110.179 141.7 cv
110.673 141.7 111.17 141.689 111.668 141.668 cv
113.653 141.582 115.596 141.261 117.521 140.828 cv
122.342 139.744 127.044 137.962 131.978 137.427 cv
136.089 136.982 145.528 137.871 147.503 133 cv
148.428 130.718 139.621 127.406 131.247 127.406 cv
130.945 127.406 130.641 127.41 130.34 127.419 cv
122.757 127.643 115.392 129.743 107.835 130.224 cv
106.373 130.317 104.91 130.359 103.448 130.359 cv
96.895 130.359 90.3495 129.514 83.8709 128.616 cv
80.0123 128.082 76.0967 127.297 72.2017 127.096 cv
71.879 127.079 71.1667 127.024 70.3981 127.024 cv
115.06 124.595 mo
116.901 124.027 118.673 123.475 120.411 122.977 cv
122.253 122.495 124.394 122.276 126.736 122.276 cv
131.005 122.276 135.94 123.003 140.948 124.19 cv
131.55 124.331 122.834 124.468 115.06 124.595 cv
level3{
gsave
clp
[-1.30785e-008 -291.304 -291.304 1.30785e-008 450 255.719 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.30785e-008 -291.304 -291.304 1.30785e-008 450 255.719 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
148.997 126.462 mo
134.251 126.247 120.971 126.03 109.992 125.841 cv
111.664 125.528 113.23 125.148 114.665 124.717 cv
114.797 124.677 114.929 124.636 115.06 124.595 cv
122.834 124.468 131.55 124.331 140.948 124.19 cv
143.64 124.828 146.355 125.6 148.997 126.462 cv
87.2378 125.43 mo
81.2143 125.316 77.8548 125.247 77.8548 125.247 cv
77.8548 125.247 80.5157 125.195 85.3288 125.108 cv
85.5296 125.141 85.727 125.174 85.9223 125.209 cv
86.3613 125.283 86.8 125.357 87.2378 125.43 cv
level3{
gsave
clp
[-1.30785e-008 -291.304 -291.304 1.30785e-008 450 255.719 ]ct
/12 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~m%&1_Rr[h`E9`m2l'HARQ>l&PDs*=&k*'`GO`'9BDWHjrjG\!9N,.F3CZ:1diJ;7,L2,V"C>X_[hLoS!
JnWtkB\\&LgO<eiI:q8\BA%TCfm.2^H"PZPACbp7eoYHQF(Ed@A(5O/dr/aED.:q0@aSt#ctd+;Bjf8#
@*`Fmc"18,AREYj?cukbb?nMs?<kTY>f^2TaBMlh>$K$L>K0`J`E-6^<Ed:==Mn$=_GF@O:ftP0=27R4
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~^eRtH:052(=2.F1^._S@9NJi"<kM(+]1Z2993/Vp<k1b%\O]]/86!#f<45:r[7=3'7oZf`<3eqlZ:.]q
78p9U;l`;bW^Kda6rU!M;klZXTgDVL6;a=?;4U!MRR'f=5uEq5;3aCDP<_p*5YmG):Q@V7N':$o5#6qq
:PCl+KKDq\4&1>f:4>6!HTFoJ3_jr\:3JWmFZE-:3D=HP9Q)j`Cc>%'2b[sE9P?=XB/WCn2G7I8940SL
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.487685 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.30785e-008 -291.304 -291.304 1.30785e-008 450 255.719 ]ct
clp
/12 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~lg*j$lK[Wukih6okND!ijlPUcjQ,@]j5T%ViSibSi8EMMhVR,Gh;-oCgt^Z=g=k97g"G$1f\"g-f%/C%
e^`1!e'ldpdaHOjdF$=fcd0q`cHa_[bfn;TbKJ&Nb0%iJaN2EBa2c3>`l5p8`5KR1_SX1+_83t'^q[Y!
^V@Ls^:q:o]Y(ni]=YYc\[f8]\@B&X[^NTO[C*EL['R*EZE^[>YHFt-X/`2!W2HPjV5'cYTV.pKSXl:>
R@0G.Q'IStP*(fdNfK-ZN/EIJLPCM9KS+l-JUi2tI!U*aH$FOVF`heIEcQ,;DJX*(C2.HrB4kgf@q&hR
~>
<~S=>t9R@0J1QBmf#PEV/mP*(ifO,o<\Mi3LOMi*=HLPCM:KS5#3K7\Z*J:;opI=6KiH?sj^G^+IWG'8"M
F)uABEH,u:DJa3+CMR["C2%?pB4b^dA7T1Z@:<PN?=$oC?!U]>>$>'2=&r@&<E)mp;Gg7d:JXb]:/+GW
9MA)P91qoN91qlL8kM]J8k;HB7n6'>7n6$<7Rfj:7Rfg76psF26psF16UO4.6UO1+5s[e&5s[e&5X7S"
5X7S"5<h@s5<h@r4Ztqk4Ztqj4$#D`3]];_3]T2\3B9)[3B/uX3&ilW3&``R2E!HO2E!EM2)R6K2)I*F
~>
<~EH,u;Df9Q4Df9Q4DJj?0DJj<.D/F-,D/<s%C2.KuBk_9qBk_9pB4kjiB4kggAnGXeAnGUcAS#F`@q0"Y
@q0"Y@U`eU@U`bS@:<SQ@:3GL?XI/I?=$rE?=$oB>?b<9>?b97>$>*5>$5!2=]nj.='&I)='&I(<`W7%
<`W7%<`W4#<E3%!<E3%!<E3%!<E)mq;c?Un;c?Un;c?Un;c?Um;GpCj;GpCj;GpCj;GpCi:f'tb:f'tb
:f'tb:f'ta:/4PZ:/4PZ:/4PZ:/4PZ:/+GW9he>V9he>V9he>V9h\2Q91qoN91qoN91qoN91qlL8kM]J
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /12 /Gradient get_res exec grestore
}if
np
192.975 121.84 mo
191.514 121.84 190.037 121.763 188.554 121.614 cv
178.777 121.151 170.151 117.512 160.397 111.786 cv
153.573 107.877 145.718 105.75 137.527 105.359 cv
134.042 104.902 130.72 104.719 127.447 104.534 cv
104.533 103.245 62.3407 90.3334 60.128 83.1736 cv
59.6257 81.5485 61.6257 80.9277 65.1703 80.9277 cv
70.9176 80.9277 80.7241 82.561 90.4953 84.194 cv
100.268 85.8271 110.005 87.4603 115.616 87.4603 cv
116.179 87.4603 116.7 87.4438 117.176 87.4093 cv
119.75 87.2257 122.298 86.9231 124.82 86.5061 cv
129.178 85.7085 133.994 83.8878 140.027 83.8878 cv
140.093 83.8878 140.161 83.888 140.227 83.8885 cv
140.366 83.8869 140.505 83.8862 140.645 83.8862 cv
143.574 83.8862 146.533 84.2278 149.522 84.9972 cv
172.339 96.4281 193.834 104.087 217.944 104.087 cv
218.119 104.087 218.295 104.086 218.47 104.085 cv
219.475 104.213 221.312 106.607 221.224 107.688 cv
214.208 117.515 203.995 121.84 192.975 121.84 cv
134.079 101.995 mo
136.39 101.995 138.661 102.072 140.912 102.276 cv
146.503 102.784 151.97 104.082 157.618 106.969 cv
166.12 111.316 175.849 117.955 185.83 117.955 cv
186.451 117.954 187.075 117.929 187.699 117.875 cv
189.281 117.739 199.597 112.681 199.674 112.681 cv
199.674 112.681 199.674 112.681 199.674 112.681 cv
193.26 109.985 185.29 107.284 179.243 103.863 cv
168.993 98.0636 157.429 91.2235 145.738 88.9439 cv
143.896 88.5847 142.075 88.4319 140.269 88.4319 cv
130.1 88.4319 120.411 93.2822 110.182 93.4705 cv
110.156 93.471 110.13 93.4712 110.103 93.4712 cv
108.548 93.4712 104.996 92.6878 101.233 91.9044 cv
97.4689 91.1211 93.4937 90.3378 91.0912 90.3378 cv
89.5602 90.3378 88.6677 90.6561 88.8763 91.4952 cv
89.717 94.8765 110.517 102.341 122.578 102.341 cv
122.984 102.341 123.382 102.332 123.768 102.315 cv
127.328 102.154 130.745 101.995 134.079 101.995 cv
level3{
gsave
clp
[-1.30785e-008 -291.304 -291.304 1.30785e-008 450 255.719 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.30785e-008 -291.304 -291.304 1.30785e-008 450 255.719 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
240.548 67.2758 mo
239.512 67.2758 238.482 67.2478 237.464 67.1904 cv
232.303 66.8991 227.211 65.6329 222.132 64.099 cv
261.411 64.099 li
254.501 66.0724 247.352 67.2759 240.548 67.2758 cv
284.02 54.5262 mo
268.75 54.5262 li
270.238 53.3648 270.924 52.2301 270.421 51.2406 cv
270.143 50.696 268.891 50.0915 266.85 49.4474 cv
291.636 49.4474 li
289.191 51.2767 286.649 52.9761 284.02 54.5262 cv
205.871 54.5262 mo
166.675 54.5262 li
165.665 54.4387 164.655 54.3487 163.646 54.2552 cv
153.449 53.3106 142.974 52.0455 132.987 49.4474 cv
160.233 49.4474 li
173.373 51.4718 187.901 52.9379 197.715 53.0417 cv
200.478 53.3758 203.192 53.8965 205.871 54.5262 cv
level3{
gsave
clp
[-1.30785e-008 -291.304 -291.304 1.30785e-008 450 255.719 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.30785e-008 -291.304 -291.304 1.30785e-008 450 255.719 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
291.636 49.4474 mo
266.85 49.4474 li
252.302 44.8569 197.616 38.24 169.229 36.7147 cv
165.85 36.5502 156.829 35.6188 148.209 35.6188 cv
139.318 35.6188 130.855 36.6104 129.463 40.4575 cv
128.305 43.2129 143.086 46.8055 160.233 49.4474 cv
132.987 49.4474 li
120.194 46.1194 108.201 40.604 98.612 30.7718 cv
105.621 29.6878 112.708 29.2719 119.848 29.2719 cv
131.656 29.2719 143.603 30.4105 155.543 31.5489 cv
167.484 32.6875 179.421 33.8261 191.212 33.826 cv
193.351 33.826 195.485 33.7885 197.613 33.7068 cv
198.1 33.6881 198.588 33.6742 199.075 33.6643 cv
199.637 33.653 200.199 33.6475 200.761 33.6475 cv
209.583 33.6475 218.345 34.9956 227.1 36.3436 cv
235.855 37.6916 244.604 39.0398 253.403 39.0396 cv
256.596 39.0396 259.797 38.862 263.005 38.4425 cv
265.772 38.0808 268.599 37.9229 271.392 37.9229 cv
286.23 37.9229 300.03 42.3866 297.666 44.5037 cv
295.729 46.2379 293.718 47.8897 291.636 49.4474 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 480 ]ct
[203.04 0 0 22.08 97.92 429.6 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 423 
/H 46 
/M[423 0 0 -46 0 46 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 423 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 423 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 423 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
JnTaLJnWbLX=AfOJh!lPei/1>JiA<@!,-stJnTaLfP%<8Jgu@%Xt%s\JiA9?KK&pEJnTaLJnWhNW[`TM
Jh!rRe2Mt<JiABBJnTaLJnWbLX=AfOJh!lPei/1>JiA<@!,-stJnTaLfP%<8Jgu@%Xt%s]JiJ?AKK0!H
JnfmPJnitRW[`TMJh!rRe2W%>JiJHDJnfmPJninPX=JlQJh*rRei87@JiJBB!,@+#JnfmPfP7H;Jh)F'
Xt/$^JiJ?AKK0!IJnosRJns%TW[iZOJh+#Te2W%>JiJHDJnosRJnrtRX=JlQJh*rRei87@JiJBB!,I1%
JnosRfP@N<Jh)F'Xt/$^JiJ?AKK0!IJnosRJns%TW[iZOJh+#Te2W%>JiJHDJnosRJnrtRX=JlQJh*rR
ei87@JiJBB!,R7'Jo$$TfPIT=Jh)F'Xt/$^JiJ?AKK0!JJo$$TJo'+VW[iZOJh+#Te2W%>JiJHDJo$$T
Jo'%TX=JlQJh*rRei87@JiJBB!,R7'Jo$$TfPIT=Jh)F'Xt/$^JiJ?AKK0!JJo$$TJo'+VW[iZOJh+#T
e2W%>JiJHDJo60XJo91XX=JlQJh*rRei87@JiJBB!,dC+Jo60XfP[`?Jh)F'Xt/$^JiJ?AKK0!LJo60X
Jo97ZW[iZOJh+#Te2W%>JiJHDJo60XJo91XX=JlQJh*rRei87@JiJBB!,mI-Jo?6ZfPdf@Jh)F'Xt/$^
JiJ?AKK0!MJo?6ZJoB=\W[iZOJh+#Te2W%>JiJHDJo?6ZJoB7ZX=JlQJh*rRei87@JiJBB!,mI-Jo?6Z
fPdf@Jh)F'Xt/$^JiJ?AKK0!MJo?6ZJoB=\W[iZOJh+#Te2W%>JiJHDJoQB^JoTC^X=JlQJh*rRei87@
JiJBB!-*U1JoQB^fQ!rBJh)F'Xt/$^JiJ?AKK0!OJoQB^JoTI`W[iZOJh+#Te2W%>JiJHDJoQB^JoTC^
X=JlQJh*rRei87@JiJBB!-*U1JoQB^fQ!rBJh)F'Xt/$^JiJ?AKK0!PJoZH`Jo]ObW[iZOJh+#Te2W%>
JiJHDJoZH`Jo]I`X=SrSJh4#Tei87@JiJBB!-3[3JoZH`fQ+#DJh2L)Xt8*_JiJ?AKK0!PJoZH`Jo]Ob
W[r`QJh4)Ve2W%>JiJHDJocNbJofObX=SrSJh4#Tei87@JiJBB!-<a5JocNbfQ4)EJh2L)Xt8*_JiJ?A
KK0!QJocNbJofUdW[r`QJh4)Ve2W%>JiJHDJocNbJofObX=SrSJh4#Tei87@JiJBB!-<a5JocNbfQ4)E
Jh2L)Xt8*_JiJ?AKK0!SJouZfJp#ahW[r`QJh4)Ve2W%>JiJHDJouZfJp#[fX=SrSJh4#TeiA=BJiSHD
!-Nm9JouZffQF5GJh2L)Xt8*`JiSECKK9'TJouZfJp#ahW[r`QJh4)Ve2`+@JiSNFJp)`hJp,ahX=SrS
Jh4#TeiA=BJiSHDJ,~>

%%EndBinary
grestore
np
261.411 64.099 mo
222.132 64.099 li
214.718 61.8599 207.334 59.0504 199.813 57.8709 cv
188.838 56.1493 177.735 55.485 166.675 54.5262 cv
205.871 54.5262 li
217.667 57.2993 228.789 62.1907 240.506 62.6154 cv
240.776 62.6251 241.051 62.6299 241.334 62.6299 cv
249.706 62.6299 263.752 58.4278 268.75 54.5262 cv
284.02 54.5262 li
282.724 55.2895 281.408 56.0166 280.071 56.7051 cv
274.409 59.621 268.02 62.212 261.411 64.099 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 480 ]ct
[118.56 0 0 11.04 166.08 415.2 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 247 
/H 23 
/M[247 0 0 -23 0 23 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 247 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 247 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 247 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
Jp3&qqCR:NO=g&aJiT/Xm!42.SpBELJh<fNhDp0JX?"mXJpF\Jcn0i$\h2#aJiUY-_Kg`YaEbBLJh>;#
ZoN^ueiBjYJpQ7!VCdBOj=QuaJiW-WR!O@1np5m>M(SQaJiSoQo6Q"7Q[8!MJh<QGjZ.oQV)dCYJpOME
f.DS+ZRsNaJiUD&aa/Pb_0WsMJh>%q]/bI'cT/@ZJpZ'qXY#,Vh(>KaJiVmPT6l0:l[,!NJh?OFJiSZJ
qKmg@OF-RNJh<<@loBYXSiPn\JpjJDhCX=2X=`$aJiU.td!^Lo\p_[PJh=ej_E!3.a>pk\JpksnZn6k]
eh+!aJiVXIVL=&EjF*XPJh?:?QoTaYni;;NM15:QJh<'9o/VC_QT=D]Jps;?jXl'9V(LOaJiTnmf7&=#
Z[U7SJhO\gaZ4r5_)]A]Jptdi].\ahcS)XcJiVCBXaYkNh0u4SJhQ1<T/hK`lT(>_Jq3EBJhMs6qDj-f
O?)o_Jq02<ln<rDShK1cJiTYfJ,~>

%%EndBinary
grestore
np
117.634 480 mo
170.572 480 li
165.468 451.289 144.165 417.07 144.165 417.07 cv
144.165 417.07 122.509 449.756 117.634 480 cv
.521569 .223529 .329412 rgb
f
232.66 423.07 mo
232.66 423.07 205.161 453.672 205.161 477.818 cv
205.161 478.531 205.197 479.26 205.257 480 cv
260.074 480 li
260.129 479.263 260.16 478.534 260.16 477.818 cv
260.16 455.638 232.66 423.07 232.66 423.07 cv
.521569 .34902 .282353 rgb
f
567.141 480 mo
614.721 480 li
607.181 458.07 591.007 435 591.007 435 cv
591.007 435 574.61 457.713 567.141 480 cv
f
733.007 396 mo
733.007 396 678.007 444.78 678.007 477.999 cv
678.007 478.659 678.036 479.328 678.079 480 cv
787.947 480 li
787.983 479.33 788.007 478.663 788.007 477.999 cv
788.007 446.257 733.007 396 733.007 396 cv
.521569 .223529 .329412 rgb
f
135.007 464 mo
135.007 464 134.295 461.529 133.717 458.276 cv
133.139 455.035 132.821 450.855 133.795 447.613 cv
134.757 444.385 137.47 440.74 140.258 438.548 cv
141.632 437.434 142.962 436.656 143.932 436.183 cv
144.921 435.722 145.507 435.5 145.507 435.5 cv
145.507 435.5 145.34 436.128 145.065 437.162 cv
144.811 438.181 144.531 439.582 144.31 441.105 cv
143.846 444.169 143.763 447.75 142.976 450.369 cv
142.085 453.348 140.132 456.71 138.375 459.424 cv
136.619 462.125 135.007 464 135.007 464 cv
.709804 .309804 .443137 rgb
f
218.507 466 mo
218.507 466 218.242 465.47 217.853 464.525 cv
217.659 464.052 217.434 463.473 217.198 462.802 cv
216.935 462.124 216.831 461.396 216.651 460.581 cv
215.886 457.31 216.058 453.129 217.217 450.112 cv
218.495 447.149 221.309 444.117 224.034 442.272 cv
224.707 441.803 225.309 441.364 225.92 441.024 cv
226.534 440.686 227.082 440.404 227.539 440.179 cv
228.453 439.729 229.007 439.5 229.007 439.5 cv
229.007 439.5 228.89 440.116 228.697 441.13 cv
228.597 441.615 228.478 442.194 228.345 442.843 cv
228.221 443.486 228.132 444.225 228 444.964 cv
227.71 446.425 227.52 448.082 227.202 449.6 cv
227.018 450.345 226.922 451.121 226.735 451.818 cv
226.563 452.521 226.334 453.166 226.085 453.751 cv
225.838 454.428 225.511 455.099 225.124 455.764 cv
224.933 456.096 224.72 456.426 224.506 456.756 cv
224.32 457.09 224.122 457.423 223.913 457.754 cv
223.497 458.414 223.041 459.067 222.569 459.703 cv
222.171 460.344 221.756 460.97 221.342 461.569 cv
220.455 462.765 219.862 463.857 219.344 464.674 cv
218.82 465.505 218.507 466 218.507 466 cv
.709804 .482353 .380392 rgb
f
231.007 465.5 mo
231.007 465.5 229.855 464.053 228.72 462.055 cv
227.585 460.062 226.468 457.501 226.536 455.464 cv
226.676 453.471 228.045 451.088 229.378 449.222 cv
230.71 447.355 232.007 446 232.007 446 cv
232.007 446 233.096 447.586 234.154 449.624 cv
235.211 451.664 236.237 454.15 236.105 456.017 cv
236.039 458.104 234.766 460.424 233.508 462.28 cv
232.249 464.131 231.007 465.5 231.007 465.5 cv
f
582.007 473 mo
582.007 473 581.759 472.526 581.398 471.696 cv
581.044 470.872 580.532 469.653 580.219 468.278 cv
580.045 467.586 579.881 466.841 579.743 466.067 cv
579.634 465.311 579.56 464.536 579.519 463.759 cv
579.419 462.188 579.58 460.707 579.942 459.429 cv
580.706 456.896 582.871 454.252 584.825 452.312 cv
585.805 451.332 586.723 450.512 587.396 449.929 cv
588.072 449.345 588.507 449 588.507 449 cv
588.507 449 588.637 449.546 588.803 450.442 cv
588.972 451.342 589.172 452.591 589.322 453.97 cv
589.615 456.744 589.779 460.001 589.118 462.202 cv
588.757 463.457 588.051 464.713 587.32 465.905 cv
586.947 466.503 586.51 467.092 586.109 467.655 cv
585.718 468.217 585.31 468.763 584.907 469.279 cv
584.063 470.312 583.426 471.225 582.882 471.904 cv
582.334 472.59 582.007 473 582.007 473 cv
f
713.507 462 mo
713.507 462 713.211 460.998 712.805 459.333 cv
712.401 457.667 711.868 455.336 711.486 452.682 cv
710.629 447.382 710.402 440.71 711.937 435.751 cv
712.35 434.518 712.91 433.252 713.573 431.988 cv
713.904 431.356 714.261 430.724 714.638 430.097 cv
715.032 429.472 715.459 428.855 715.894 428.244 cv
716.766 427.025 717.695 425.84 718.636 424.718 cv
719.622 423.608 720.633 422.566 721.599 421.61 cv
723.492 419.679 725.431 418.176 726.787 417.127 cv
728.153 416.081 729.007 415.5 729.007 415.5 cv
729.007 415.5 729.053 416.589 729.074 418.32 cv
729.083 420.008 729.095 422.363 729.109 425.032 cv
729.023 430.233 729.091 436.452 727.66 440.755 cv
726.132 445.71 722.511 450.863 719.412 454.993 cv
717.821 457.032 716.376 458.798 715.288 460.035 cv
714.205 461.276 713.507 462 713.507 462 cv
.709804 .309804 .443137 rgb
f
725.007 465.5 mo
725.007 465.5 725.087 464.655 725.22 463.251 cv
725.329 461.926 725.482 460.074 725.656 457.963 cv
725.997 453.87 726.24 449.227 727.63 446.193 cv
729.022 443.154 732.336 440.054 735.086 437.119 cv
736.448 435.671 737.696 434.292 738.58 433.241 cv
739.471 432.154 740.007 431.5 740.007 431.5 cv
740.007 431.5 740.468 432.229 741.142 433.547 cv
741.783 434.858 742.545 436.768 743.116 439.029 cv
744.25 443.505 744.361 449.336 742.629 453.069 cv
740.667 457.335 736.223 460.906 732.274 462.889 cv
730.302 463.902 728.474 464.565 727.151 464.959 cv
725.814 465.344 725.007 465.5 725.007 465.5 cv
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 /5 /6 /7 /8 /9 
/10 /11 /12 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 17.0.0
%%For: (Krol) ()
%%Title: (bg12.eps)
%%CreationDate: 7/31/2016 10:47 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6D6G#&E@(CnJc62+(Ba6PlFQOL;nEn)^@6H]YUi)GB=oo&%@U#54jtYqCpq%2?b^SU6tBmmQY]N6[UG69C9hcsXibt5N/X):
%-i`PZmbW?cqTH'Ks7Ym*s80.GEVX>:iA-GREd[l>TDdGmrT[H;^O:FHEH<,?G1a^%(Z2oPq>/o#hnFC+o%S*OhgGCbmC,<lh#Hg<
%lc[VHs&OU?r:9m#r;,_<s)P[IqY?'L-0O(_<VbYEX05ko^3TV@q7B;53@IR.nDq@]<mHj4n2'1nMnaQaU0kZ_pJ1-Eg?*O-op9n"
%-#n.]Ie"#aHMQ=!^4#bLq7Eie]`'"&N^IabWbU"tIeh60rIm*%ZV-DI-h>I(_opq"s6f2sHHjVo8q)0^k8,uFT.dtS#*NnM<g=$r
%DMN)?(]"j@p="QlemV@(_U%b8/m5CLb?mHk)Gq$Da!DPtFgMh!P7'YH'Ab"ki8;7rp!)+7hnA+Fb2p,^Q_29Vs6VmsY^?No(rsm`
%00_%fh:-c8mC4&,;QsY$Y)iMOT>,^J00d)Hf9aguI/2@-jmCfH^]*NuPAc1N+[*c^^\[BaQZ)oloiLVCV.i:a5Jth)I/3>KH,t.)
%j4DWQ@CKn1^NRQQ5(EIaQg^_3^A7UeI"e1uqVf3dS*s\^p%.(S7%Xj1O^EM-o(CnSq/<pnTD"d-FefD:5,9E0L3u2^:gICC.,,"!
%7aV:_pQcc4bqGn,ro3<H^]!Hjc\d,&Oq6lMJ,/f=03@UYn^@(P5/L%OrXSsDG:Lr;mbQ(<Id8/+EW>X4T-$!Vs#$tWm.H_>DdMB)
%I#HfBl/AhBo7-`$\+\Ra_r"$!hgK!q6GXIfo0uLMl89LZr3O/cht8XOq=St&bJ/H%k.>R2lLf)PI/_epDSLSjO"W0dmH'7MDr/Va
%rUTN;J,GqEoB2I4E"$(Pp?hGfdY@,7@r@lfp!'-/Sd+::hnHbeDrk6lb5ZsDs*r8g1-e90X9MZ#m.ETXr;+Ys>JjD1r:QDCs8Mr`
%2]pND0>Du8qYAkRIkf^Wl`^:jIe-fNfkPrW5,qcM3T%nNi^l8pl4Vuq_"Ogi]%$=qs!6=kjm+S7SZV5Ge]k/aA"*>gmp>tQS$0U'
%p=3tuQcu'do'YAJI/EaVYOsg2IeW4o?2jQBS$1G%ci`W9lQa/mVs!uI\]?o.I2@uPrnD;frqY/QJ+_R*cbK:RY?nlFrV-5=?K_LS
%IT.tH_70EX/"V5J0D>$sInSD`:A!nrY=/27?s%pI0u*^SkO2aTPGjgtI/Ej/="f'L=N'D$bu_)[WkJ?,]<C))>i4klX)DC7?%2`J
%cbG#J7m:f\Y'.u)1-t7?^e]IVq.K5<pNiGSrpoIJ0>E\Gj_'pPr8$\jcX2Oks/h,1<SD_j<+\('k0)(8qhNK^qnG>p/<"Nem_XBs
%#g^@t4CXC(`Y<JFZ,S+pO!EN$]6H!`6[TXkj't,J89.O!.An@o9hi'fA;X&*h539emaHf)cdH<LbXW/K`LJ^_'\R5=Z?=iTCq'48
%[X6[Knh\r?b9:(<EYG'pL'uq(;G*4Vak"W`\)gAnHeBI_Zgq3/fn+%FVCKj6TsZf3\nn.uf"668+(T`lq.KB**V*mRkq()ef%Z;R
%Y2-R"mBHoLU>/r:XlI`E^ZuF/EQH<A;/Wk'5&OrD+4"iDSG4abPBZbFGBXSgmt5H&ACH#MmiLqYqa:CsQPYY5B`BFYoaQshk.bBn
%l2URggt1"NQ!<;+G2MJt?+.S!rMOL.>/^EEIrF`CqWW2#C#%U:jEDu^m7E6!ZgaHrH-G+CrB0hGHRcYBIjTXeAA_1Rr;1a=38^P3
%\_ji.p.j5oI5(JLD>,FR_u/ao>(#8[\\#J=m;Dn[k5XNFbJ3heFFq-Is&X:ql'D0a\r1dKrfqDNqfr#)m_HTC4ifuSn6\"2jR95K
%gM`QudT(5WD;sGt)fC`,G^INHcXaouGSp1IIjUN&T?b4"@50<&OhXKa>Sm]l?[n=-@;`UB_7r?`BsUM<LVLqUE_EiPDAZOo/2@?g
%IRq?]DWX^&qr9uNB?+LA!rg+\_d!C`O^ZdN:e2+CU+N#gTIoG#;c$8WQ;AS&%AB6L?F>CMK?lcW5,cs7WX#I'D"K*8Goc?tgIMhp
%j#Y'/fRAQprV:(XE,9/)r/Kb5<^,dN8%(OaN:"Qg>rfK7q%b\M0Z"?KcQ)$MS%hPZ9XbO"?@!8";BE-B[eLCT%dCIKfT1/CFH/qO
%eAP3:j.:\iSipr7IO/m,pEfMVm5s0?Wq@1o/(.(dLIhHTA`%1L2n"/Y4lVmb]C[4kNa(fU<LtkeF%1H/UHQc+5DY3,P;b4lM_o]8
%7G^h'pCu=Y+6Ca1a;_dU2`X912L2L&b!!mONq0?6ngNu*6/MX4FQFZQUWHRdU61XeUJR!K.,XAW<7d[g_'*0kaVQQ"AWqN%O:R`]
%T)"k/$E&>JCd%=r!?G(@o#N??=qB-LpXJ`B]^"F?47tfW.JP-3agiSb?>qjU%c5YZk7ZS'"6Yt3DR[:!_7?Ib(95%%_E6'0PIU)&
%HOgrKR)AD%Z=-L,KoJ)f5*GPQD"=kl#P,,Z-V>UTs2Z0,j+)ag_[nW&N"9aQM)_]qEK^nc,A>.X_M5T;YD81XgVHFE5Q3#*>lJQR
%h/1p6[Z,.igXaq&/_4bhgU@,RgD77MCn%CBBlUi"oaZCsfX>W@jI>i0G2%c)([I(Xf!_\u>M6I``pF;oAA7up(O'e3&03^nNBP2L
%&#+OT!Y@'j6lp56@t[nD#>n\K2>JE"&P0j;.`WhT#MOe(s2?@!lL%m3d4rRe_6NQA+n5LdFe!N/0$=Z$PhmXfP_Q,Z8CA)>%GK<\
%:S4:7gst5u1/cp6rE-tE^"4rT0MKr-QnAJ[1]MhXkgKO].H)-Y#H*8hjr^IT9&gH2__V(!*]k6f0_t-*3FZ`ZdZZ@:W6'6:C)&(&
%'"nC"Y?r5rcb_K+/+qeTa+m1`f=#=t4kRL[@d3*kGPnL?afS8ch51o)IenQX5#*joc1kh53DM9mf[M-Mf`.#3M#T(p$BrXX9p93c
%-CH4\G+!+=a_%/cgbcjs@hXn?.E0Mo_D)n`.)EjDC$:+HkoJ[=h)%iPV\SX^aYH[fPQ%>*nN=SXmFA!SkG5jdH;+0!iCgebn]Te[
%bC4-QmrDL=SFRckQ+)T7?VgTlF@qf):\s#tSl"[-q=J,pba`8d\&lW;*1q?@\#IEG+5+TY*-:FeCUVd(Q+?]1OQI>QM<Y3.HrK?4
%>CWsG$=<SfHW9rBL&Y->?`F(+$/g7"n?KOAAM\AAcQQ>1\([DH-P#Z&3lD74i5cjXQ[!_3FkXR9C&PkAR7Cr1c/hoKk]&YPl<rm>
%\fA_%Y$p4X3H`7]\35JqJDMtsK"pLrM-;9&NDumLTWt0)meHO:g?kKc%Y#SrpQ<&WJ<o!G]%bK/>E52bG)t+'4%o?bRnKldhLiAo
%GLO+72`(>S\omGr/^rG`E-:SVJnK9+JA9Huhr?b_/(_n6-TFlql8Y3toYb_V1903k39@8</[t!21njr:dq!k2rM@qIlT_+jnk#C9
%IKrTY\H(mp9]P"=rs.#0DXr##N2diQa:G-k+5O;j2mEegDVDD-3H$r7Qm'%7GW4M[^FZ^^H6HR`fhW(DCX`-Z;>o"3Q9TJ:G=25+
%$#ShrHd(WM#.&D\B\7eFVJHUEARs58&$b/j3Y$FQ*8@;CYe;#CX(]Mt:J>UWBj8.*aP:.2>PiMZrqeR^T-aoo*tTlen+0kL*-/T@
%Z5Ma/r^<d'7b)]9$8748/#)/1(#1TBDAj%;8eZn*g+uTkFfI/r@[QXg^?*.Y@'iGK^;`.Y_e/7LHtPomB^3E]f@\A*o4[.*#8]7]
%3!M6`4)!j6dF<5)0@7!rDWlqoC,GAaA%DpJ]&=#A==-I6EfAV,_@*`4e8E[]:JF86\luJEgG\3VJ*qFUr%n0ChR3[DSt3;[hsQNR
%(>cf'?!hO7]j(KO<mI2AGa?j?g=h<@C%4R*l[R\:/UmWFj'su]nY;-Aq!Cj/IcuUfZ8>1HTp9=oWE+;;+Ve]XWFi[Sdg:aBbbcR2
%'9)F-1RHm!lKOV[L7:eI-uBH+TEtYnne=?VRA6\JV&1#KHZh?3g.)5N\!sEIc6h@Abo`d]M<a5H%[]Q5.ISjK:X*EFW5kN97kH:r
%4lonW:&dbBVJ?&%hTtT*[V'Z.oSkp!R%!ELM2mJJp--5CIpad&2JP`rZ$pY-+2.?T8W3NXgrB),dc0^UiXaj/]#Ba0,;"B(5Q?);
%pcTN!%b``('=CfNFRXX`<Pl+DDJ?;iQ&jEBk'DkR\Y&[I[9G]JEXc*H)6OmUE)kNlOmRKQMX(u,.c%JSh=&lDAVS]F,g;q4Y$%?9
%]@JQ,^I4!h/1mWCVD?Z11l_N<h=[j^*_tIr-QBIQg/06"o-*K75HnF-+R'O]VicG#I[Zb5pcZCj,I['mH@OH<V\]<?>!-M`:\a+"
%>7@t-i?o'uH/Qg9okl&r6"Xot[VXZ7$Y!;<.FVno1MjV=9H'q\+;9BkC,q,`VBO(,6%]0uj0YF66Sb3<r163D8(paPW_hG9M8187
%hW@\!/t[V?HEJslU07;=U2?LLG<;bT$GA?6:cfT#'FeZc96HM7.5i:e7K9;%U9651iYo_T]RNj]@-3;?n*<9Q/`Jf42pZ75S9Ai7
%m(Ze0\(_ulZTPm5HhRGu32$k$io/b7O5BHJCsq<5*G;=GO4^8IO$<8%;N%\T*ZlIG*q*VpCld[44bdU1cQ;/r%iGdEL1#7NI!C`*
%Jq.`ea:FDag]o%(]!R+ZD.)QCJ_NKJ\e:ckO=^OB#hO5DNtA>A5jalYZOj5DB^[n@LaBUMU@:"ka!A3uO<YOrh#k8uoiPUGKlr<M
%]\XUWI1jt63"68\MN0_B1ff/!_t]2!V2=nV&@5DHlYS)X;tB99EH[U(qbY/ro?TUf1b1Y4@S<9:o\&pcXA)m:s,X'^Gl5ANm!H2H
%R6;TTHFs3E9j7Inj$"%"HI'V'aX>pDGA-O:nP:(b:E&=j)Waa5j\rS^-]R[ENUeHVngBFfkuop'im<?gq_._o5Q$j94LCK&!#D6Y
%4;o=J[7Ds(UpX+q6TC0HJ'SYoJN\CLp5m*\;/o-n&c`4To+G,65I-"_P[@Zn^8[gee)Aono5gA-;.@5Wj!Mam:?Pm^cHeME'rKoE
%!dqlt5Cb,;f-"E%],i?DCK:/2R\&ECq/!H-EdYM!_m\6]7Y]3<^+XR!,g/"F_Gt3j/.+TS)Q[?)q[!;;[=J'&k\8Z'(4l+:7eo=2
%cFm6H4BN'=eb3piV%%fdht.m1ZQ:m:cM=N3^A'hQIFsH^a'KTj:19*j#%%L<0d?BA?Ym]0jg1Y&&#EJ#C_]AbQu_<!O&()G=c'!/
%<S+TW#dLE&a9D(0SjOEX*$pXj^?::G.Bu[sSq<_@3Jd[79aiIf',c(7,93ChUOnTVP3C3JEUn8tJ,%-/eK=\lTD!^2E#"f;HSqUT
%V=D2I85!]C'&=5ZhQ^'\fg(p\F[re,0W04hk"VMt4QkB4%fZ<@5@=Eb3L9Tm7)6J^!>:%bG8BmJ%/5f@YO_dJqtK+)s&I@teIZ&H
%k#%V5K3#kt(B[<E66I1e=LZ2J/Y6+IKhalCpKEbO\*=?K:G!""[qVkFgXDtHk)nu^Crssn">7,m<buHW`]_'gRMee]FLkDqYdoe>
%eY5r]Y3*.DFio'7(B&!\hP2B@*t80b=#B)7XsM\+fCLKs^FGecq7YuG7a[>P!9c$JSK1hGJs+h;G7n%6HS8H6X?T"iae1__`!qA5
%32F"ul#d$W510])Ub=XW>m,0;J1\L#hHJSo-8%H/5;)iN"g*gOpO^uVK-dYoVtu^4U;d/JfA=LcFccb4*ZQ_=TE%d`In0[5FW`u7
%dYePuGm0Sj+d"kEEJH,@T]"=Wklfl^'4C@;Ep0L*^"0Xd/Fn77nrt3tQ.GcDm0$aa5So#<()3Q]Ptc^g+4BH+H@:@coNUZINWn*<
%d#=k&fF?tS2*YYJ.iTJS'?WurIpi7(:M(06MWN#:8R.W&^1U>'0bHOT.Z_^.b1,h];n.Zug;2i#P,_'-cF[Qdk`Z]>CIJ7i6?cI)
%cksF;%+k];BV$q,F2nhcB;hX\S:[EU_;GQM(3b8>],u9AkP>E$%tsu7E"(HEof-uI7)hnM@kV#qrdfg\kVjsO\ed\\Z8U7?Xn`OA
%L_>C[6>'^q&J^6H;J9euMp%\ZI*W=>YK!%D6e_#!PI5,epCE:9e8U&>q3+9K]M3a6LH&6][")'5o9=3i_9[,NY0T3</?XGHiZ`c-
%ep`[<n/cbFha@=-oQNc([!<B5ff]ZY?,jAl23(>q2n@L]M)jH516*tAe/RYoPn/8Qec5UH^Yo.Ll&LrCrr);-s8SCWs//Ef7Jt!F
%cS,=f5E<pRTC]-ki;gWU2gflSl'(F=rq[o6qtfWlM>%A'%A:5mMnccMqsNFD(Z6'Vrq:Q&T4o#*0CI]0q&0[(p(G)98uF?1T"k&-
%nik0fpr0F-O8".^N;jRkbiet$he=SOqU!"(%M?$,YCU7H61c),CR1)N5!nM<Z3+6BaZ3>:kgE`hJ,`d.3krcN_Ta5.l(s1_393JU
%;=^5S)S2/a![`3L&T5s!C%D0F?c42'8R;8E;Jq)"b0(0af#s&OicHVH7M&>\kpFI)06u?/Y,W\EW5oT;\e3a9rOd,kZkP/bIbWM&
%j5jab.8bKNfVR%-SDS2s9"sr)Q>]ZbUFVRr>cl.KA88lTW&FlG.Qq.%4@VB;SL.637I_Ro]o-3R[GApB+"g\;%Ke95,TjK`#\*)u
%E"s*l0jet7!UTLmjlM.=4X5_$GpM1#*Kc6C?U$'rLt<O,S]=o%hmB,/"ZZ%[hW3&(,o$0\[JG1AAqUjN\-@D?S''`)>bo')Zb2cj
%jBH<rfFd7knkaRP57KQF"MD"hDiW92--N?R8PK>.-acD]3!b*M4&912`J4cE*[VsfinAoO<4Z/iIVuZ6I/2`./n%$'JV-X[(UT@E
%KY#5nnO@$2qV?2&WBL'$9Ar?`UsE&*^<*_'q>HCuC6fAY':DOnnmt8/<Oir1Z(<>V0>r0N("6CMX,K?iQd`m^'7l+m<"<W?8p:Y[
%ora**+cSd/?IC!X1o(6G/0B7E0F$0tV/sdQDI6.V9N84.$0d@'/'((I>YZp#jn'b#.S7ZjmqtuaTUmN<\gEgQ0Q4@VhC-G==tk2]
%JmNmhk'5a$FGrHJfC(X]+!%7ugq5[>V4SoOa0%50N#1_hG`]u_EQijs8TK#B5287+-&>bEh";'"Xq$kAj&'fP[3.V-XQ[0sj+>fm
%EB!2;Iu;q+eRP]d:SH[%erb0E6j6-UH?GNcm9jBY82ng3!qEdi#\5cDS(.]9mA.LRM8('soua<Y(YJEI4I='W(njN56fB@b0A*F?
%!^"_HCEDUs4r_(Z^@g^il0n-1hu*RsaBs?G;oUaLT>,aK-(&Ufl?N>[5CY:Aq#-\#IeUgNhf/-@(;]TY1Vj%fp](0o'9DdM;@hDK
%1.XK"8>Y3%d@HYE6qt'kp)-@_-(0F6`^*&ZORCUPNjA?>-&&TO>sW9G)2'GE7*jC9=u_?3jUoQgM06"?/;V0"6T_B@-c8n&.bae7
%$p-f%F/`9aG%/D.SjX3k8\eU_L?F``W>RbbFJ*_h4n.Z]Dc7haF^Jdm<&>-k^jPDWI5iiThTZ^.+FR$l$`JTN]O+MsYKg%N>bKMs
%.*O71NiTO;3D$rGmFlX&oMk-;#-Te=qO3C;JR*')ED"3i%3='kFq,P3o4#`uWn/99U\p]r4'.Jd4X@0k@7m8RiT,gBRg/8Pd`A23
%d+Vn+E[[YsnUpTIU=$@V7[\&RonpW2?lgtu:,01%o:7YIMRki(!pcSjdD[fU+#5FAG['V2#d-o5dGgN)3NGEE"jupE]S;P[,473P
%b"s0GVYVJ-KpWs**[Zdjmph.TOZDF<=\sL%b7J/T]M&onY)r(.$"o4\Z^43eBfbR%H%lU"87jfn=>9q%OQ3sc:f/f7b'opQF-N`K
%,`0;IY?/\7_5uD_^j0""jlnUT6$(*njP&^W/%do9n_feKjag':B1"V8U'snRmJAR!bAK'cc@a%j5T0K7`!(<943aVm[H08NAigGT
%3S/C2(YF"Z9C""@kLn/2UKr)XE4Pr0'.CTq$WN)X7`3=(i0"lO@e-@lX58NTae>J&6drD?dhJ/Z.r(]X_rPB0=@BJ9(YIj94I<Jq
%7)L[Y+gJY;FG4j#'A.SR=7[iTmFfe8dqpbcr&/t[T3r'4kr>M.C+IrSqBFm;i7h?/8n+e(dJ5O,o+$CtoeM1h$T/fu18Y9\MtISE
%FC6s;rER_@`IP[Z(h>BIl61d+FQD=oS-"*^n/Pglq,&o3W8CPEM89>S!:A6c8]CV,p^R>u.FimUo>I<e%F^*2juEqTp`V5Ga\P@D
%p1Y=UrIQ_^QR#1YcL]O7(=O0-1X8f!h[!s5Z.BAP+(C`mM4P(>r\"%r*@SDM9$WqLkn%\EnNKDjI]A=*>*<tuG[Pn%%-/V)8k+RQ
%nU-"?Drio/j"R`6bEQ1=+N[-f8K$!?FO!7N'D]49fU+QagKmf@jBG%oBPsE?@6()_*nW1!V<9_+G`6L2AN'l"4<]C)`(Yi)%l01+
%1UIQt9;_;-6Oc)f+2Q!]m,^:4%"N^h)='&IaX\#0?lXIpf:DU!ZjpGr4Z;4rc)m]dL7'KO<2&-:C'Z<`+Sm'HTh@0<9()I2lbFo%
%Tn]\O.BmUAR8YZ?,GfA4g(JJ8atVO%C(`UNhVC;55/;"$qFT;^#_T<0Z%F,ERamJfg^?0PMoEpV4!$'KOM3Ek8KqbQO7Ugo0udBM
%Q`Vt[+9B5\=#Gi*RVnjuqY`[IO>GDOC2?Mf=.S>rHaC!Q#hRD6]a#E6Hq30CV_2&"FdC0SL3jlt45b6ogl@a76/7HQDWubPV(r8E
%4KN`)_R#pbYj9!lcDT)9rM>IrC+.e7c0Le57_R^14Nqa!)nLL4hdbpLTE#e@ci]uA4eMuG-P"+SB>M,,WRVm5$<aGhET,1D/QfGj
%J;kGn;YNP)P6\I&k":-HkC==O)]9e#$YVhmnp2A)$B14*%QQtbW(s$"4esBbIfoW<$u&!=jb?MBXUm9>_!VddW8A<N*I'u1RLrp+
%'[`Xa7Jt:0>*r9L>/q%bq#O\^$Q:m8b`m;.@d##S'4s?W6l?D]e8m_[dahu!n9ENk*B]pI@>>QV3M$E)bSN2?=u*CFHC=:SN&8$l
%Vf7q1aF^VTd4A-&]lGH-0M?R&(+MAaZCiVoZ%?-,7S5Ob/5((H5M.EL-)Q!PR:\po&16f8&j27%o1-_nS`3a;c&WU\_E0lkR#rH2
%P3_!JUN?uV"h?GpRKp-MoNnefqXiu>+0uWQ!a,PqE>p]oKrOe0nmENZ$=\Xo;kN&OR+,deHQ5\]/5s';.$%k$)/;sF3U)n_KRAei
%9rZ1+coF-JPD,r%A@gt=`koA(CL>*bKM<'Eo0uu($8*p0`Lpg)*i8FcSRPanNn.),,i6i>URfrG=Ael6b?@dO5s]E90etj\,mLDp
%LgjDV6<V[G5VR#0*I?\pNXPR-dZRc:C,KNVWcc!<PVqoE*p'jogUVXAIohc6*tUgWi,F;dH=ULV4B5j")<qr8bY3#tKJ.`].R.T3
%(n.H=%q`^Ja`:skR;j?8+>5ne`XthKBIP8f3C$Qs9O:h=![4C\aQ5P#+<CoGWD&\"j.T5!jTT&YCX>N]6bpHn>4::Q*\J93=.%qO
%P@Bn!(&'.UT;X%.3,$AU4rc(?C1B&:&<6,f)L`_e?QhmMCqIVmlI-kD4#GrS)+1JR$\9n7-r9@\Z::1KfSInX:#k8C/^u)OGDI4F
%Ct!N76lKQN9)&:A1QXfMV`;W%]rYi(N:@S,laar/oGa8)Y%R=FSil+qBHtb)"O(GFnFKZ2%rMn8]Vk^I>`&LjGhrr8DCK]Tn1=)W
%F1^(d37B[56-]b)$aao)q+#f9:HWpjO%*U<2)P,aksZr^Yd/at6c>F^,=p:5E1UWYO":58h8c"S#sc^?>>39tJ=,A-HJEOk@UVeD
%&;PB<1rL6,hp64T3Bjrt@S+"n"r(VsQfjJ&@h>T\mNp)>3Zhko!pP?R!8*HcLb\Oi_m+##mFIH\Q4?:e0$B0Eq7o7J`F"ei"6mD7
%WL<QI=KXDt`@W7#nQO^a=;aDmo(9IT,oA?!*al)AU`^m#--TmDZ\!FLc22`h&C1<3kjG#Z`+qL+</R7bUpi2MS=UW5#@I+aQn^BU
%.(WE[-(hY/3>e1$l!\-.H"MWGdt7qmY&<=b6+#751bnTSLlg'BR2J>Z!QDkG37:J4`X!qjmV1eh,Lg:4p<SnT#XYbbT!O(U4jcZg
%BgR'G=^LsdkqN'TU(E*!R(^'DGF?GO=RbAkU*Y2aRDbSXF1Q<POP.FO.GM<^mO:N%"gMa]ar/&TAor<)DbA;X_sP6bo<Y^fVgM;"
%:qefc<QeD)&4%@\_O70W60@,A<[uE!kLAHOb]8;>92f;d4=:[0V$d^ueJ<P%&@Y<$i1)r8LWu<\/R:U&Ih8YRPb."(&u(NF_(flV
%=iBdJlbo$7=AB@o/6l_?]dXQ<8BLL3[D`KegBr-lFFH](#O@X14<PHh``us_=OQ9j3Y8hf\c^;;"nQpmKbb"0o/sF&5?2;I?<'``
%&jetldDBRAnu,@_W<<_@Oh#LK'DEg`3[paS"ND#Y*ahB*A-"Pb94E?F=/U6_.#P"AG?eu:ag%h=-'ee00t/(EU+0WngJqPM_ETO=
%DB7mN0\^pEUqaqkqBRM)A=(ppc8fXXPP'!DOrAV",9sAY=m@-L'*8eJBkkYhH)`6bTi\VU9h?g]-_',^S]in?Z"3<qQDpI=F/F7(
%kS`U*;3?#nC0N>q@XQb4kGBus*Q:4oq)*R[>od?G"6TFE8rUkRes3J2F0'#:Vr4)P?H7=THF:.+G0tBjRWC2N"LBg"fo5+i79slX
%?#Rd.#FK@65O"5p^4o)j[F)0?cRF%`F2fE[o0bNG#j:8o6G83$&?"[ts%I7S0g/=N2AgNt\XkU5kcX*-"hIKdW-CZ@o]1>8T0,":
%'sTbI89[1Es5\C8E4VSGRj6E?SOmE@',!_]Y7mV9Q>q-?_"mi^l[8Oqh\3Q#)B:baSP/=P,3(qI5IrY-+.1D>H_$*O_7s+X#1o3J
%Yph\YJXb<I`RU?fPj>=shfIW13cI:9D!_"$5F`/^6)"*Z$upnJ3:bV'Y/J[XbWKK5C0(!u0\R#(4]=,ro8L"n#Jpm7*cX%q-$Ih<
%=A1ggVGJ+f2C>brW4BKFeKm#_DopOTi-^42f_)TMLq3&3!F2D2LBg;QH3*#aN-;./TZn&^KBnZa#I.#/eU;5;>6m_:'<NIlKip4M
%q.!7W.cs@aX6p3t1Lso=o##KnL'B#9,9gcX.9sbS"EB)a9;`HT.u(4^DkO;F"h0#t)*u$*4L)m>`(c+O[11&$7/J\%N&N;+bkjE;
%#RT)oHQaMubG8C@"DRL5L^j]UH$c@?-U(N-6^^RcZhFb2_@nITB[U,da^Y.*I/unEn:.-*C;:)ff:J%S=fNQWX($$jKtp_''d+n:
%B=9N=Q@H]#5St4WAX"-P=J#V>36(%labp6^:L'f^VK\$T5)MF@G?mE`6F&m!N+pD34lWI,(_K\3Zp[[3/N`TOM*4I^DKI"),4DG'
%7[dY&X\3&M-7Rqf4"__GYrCbG];2"]dU[U\ePao-F^6_>PO3O+o=0)?Z`WQ6r"0C[=9*4]d%G61j:mZmi:K#XP+hcg`:p"!g`4^?
%0^)lW,1qh3%:*%'ViV]Wr'WN@Q1eeAbW/e,N7u.97+**H>d4r]D.jhsI(6enfoS@1a'AqYiBYMYQXC>(%*(?\OR5XK9rTb4oM@Dk
%VaLa;Z6>RE-+?f)cR01X0S_*05[g&YA8*t)f-&G=pKRTFjTiJ45O;6Q13H&JM)AClB`u7EGog9c)]QCf#/.tPKd37O3pb;q6_^48
%5]6DE5ZO7SAT'dM'L4\iTe1k0Z@3E,d*T$hj-'nLc8/J2ZuEqPjq5!@"l?/#/88%POqFsH?A?TXVkn4WIKgL*+B0q=*+Eh98Z1=f
%#(iXtatVc?jO$$Sdr,1bgRrlp[tdI_eF(kP=Jh_9Y`%-g)4j"\NH-\B4u/bY,rRaDKf:F2FeHriAT,`bdiKlY@6m%V\89D4&;AKe
%\t2L[`-Gka^j5OXZ0S=CZ@^MSR=@TMk>_0?8j"q`$MY&dG6h$0Li-@j_XjYC!#n4$8_\eOG[i`k2C3OsH)c^j>/70nUj!Da>uu0*
%Sa*\n%\/S6)nURMm6/PR)$TW;\<Fj?^,h0,JKmq4;6++CHr*3@>:5;<$Dn"eLgO9)aY\g`qeBn=r1\B"'Z3mZlG+>@+9Y`(?dn^C
%F82m5;<spgTdPo3?3+NL*S_]\QSj&CGS=^lcAG7/j%[Ea[*0,INDp?>0n"_b$%hh&-?Lij\f0<KG#^VHMBbg2Ib>W,=sB71W[<#M
%2f,r^&"J\gNBM^@m6)_jUnaZl`;fAWh@q33#9+^&nu/f)<^uBb-tomblB8f!l_ThLpB(`bkZ_Oqi`D\jKS_97Z5OCYar7F.;%m'[
%_Jd^1>E@kt4aGBr/Qa](h3^kK<ZF2Ph(bPD]p=@qa#$d(&m5]g8(8dVR1O>Q4'VrdUaG(Af_!T/nM\I8'Vg4mT_UI$H&$qX>A@X(
%n]iu_lC`>@S'"DI)<dXMQ<a#J^!e<;eXsb9TlebnL:uXC#frIEGD+s"'\Cf8oUb<ii8OH^%c&$!%W<bp';Rm7cK]r3:-AB;]U8.0
%1W+C/6//lW>iHQj%[DnJ%7"L*/\+nuZi^3#/t)ECa_<tW5*e-MrL=sQrBCSuT'<dFnZGNdW"XrVUPh]N)@Mrs,o.(I"T*A8J_X=*
%;dbs!1T+>%rd(B`elK+roX\_j_q+GAk&L"dB3X!6\S4,.O#)^sl-&)K3e1au`U8mf;/-Dn&fq'.`aCgQ"6J<:@`(SJ:9J"e0HjWV
%\$fQ"f:4=K;M=ZBAm6j\Drn62dNrK8qRt,UkP``HSil4t)#K[sCCDa<bYOK)2!,XVo[3_uSs$&IX>U((dT0rE`;rXs69EEV!8'i;
%`OO%mVSl.QXUeOS3V"7-]*78$1;_.U1,60gD!G.J5eBtn)ClGNP$J:gX:ddu?X46Ks5QJn$=/gPnARM4MT$&d@dg?i!2(V>%;(m@
%PaLQC<<DJO#QMhVJ;GTBLrM9_9H7r+OnKuMa<X`bX%34uUUomFMZf+[dD27g#pA8jRUsh0ke\e%g__[W!)A&8OBEhomj0,jiai1)
%I^q2>9E<EGL30Lh!8erQcrZV8jr1JD\7K5o!q>Vnhs(=uS+.hsp>2^0BEuoECBg#o]Xe`69*^?6M8n_BO0)Bs"gbrTh7jH+!e@DL
%.BuP"R8Y*\TD#\n$B'7V_N`]PIW+PfH2k4UlNc79#"QuAa-OWE,'@l)'[Hg\N!AE`2G)RPA<n&E14fmGA$FSt"^"h`M4JD>rp;s$
%!8&3ZP4M\OGi%:nCd,`/ZYo6JOn@j0/^G")&rUc4en'I(`<MX%%K"nrqbo7m(.%rc5d(8lN@fumon@TU'*jHGXMt`s]QI5<Qk#Lm
%2\2F>i/KmFf&'soJ!.*g1F193"stO3((O#/goMJT6fM_B^kBYNg49QeRgH\_,]6Wn9M!qi+./G*=[-lF`6A@8$&Y2e";;L4,m7jS
%goMZdR(-9f0JRQ'"*hi(H'uI$`6CW#$&P.,S.KZrJN+`\<YJ.pgf@1S,N<;u_*l5DJc\H\c&.)d,&UEq9Lt[T'MLpM/1EOZiato9
%j5IYL@)Cm8XPf%lo=BM[L\&B7M2(WMJhn7hCC;I)cAN&W'[E`ec:GHJ?8/'lZbBg6iF[YW#mrU!$ml[+<Z%q1]@RmiTl==K0Tg=\
%b$ZFPAspIQ#rh/Y-5(23)GDF3e'[u_KWX5'cUbQ?D"+h=m@OA;Y5gNaiF\e!3mMLI<a/5&"4K05+kUC:'BS?m4epuuc#(MG#Oo0n
%4R%-?+?9C[L>0Y$@<7gNUYKH9^^1E.CBi?u<`Q@]1aP4=D%dkAD7*q'[roe5$o`*@*]7ka2K\nV+7`Q9\eB'I;'$ccRUSZ8RMok9
%lR`R,o^oqWRDbg-Qj.$S%hobE;Vg)r'"d?79W2%t=_'X+2J+;QG1GD^=EirKXU"@(Sil6q5^ngXISILE:GHGJ!=aqEeWi+-E=u_E
%@N-'\E(<g@7BD-K,W"(_T%Q4;F(\3o@oHi<IGp;T'.9mfhARoK"3Q'mPLul+p?$qt&S>P)capmA+5jIL?$S8L?V28Tbq:`fBquIE
%rZ9NKE;+Gtb$fffQ^B/`1b/)^<[a9F27=cR<E&`H*]0SUAMkft2OO12X1H6PlF454oLE#C>sIYPX`?AT";;IRc`8QNhQijA7O^gp
%&n#O\Q8OUIZ%i@uVoSa$!m&:9fTb#gkN"S@]b7^9N?Moc[qk9CS`[ED#Aqdtc!3KpV])&VA8ZK[Z[pS]RX0*&#3(PLg'D9?Lj;iQ
%O9DV2Cm$ZkC,d4>^-i3kBOatM=.M(C.Ai$8g-TIrm+54Q<!RSbIb=?ng<fM&mP"3fGQHF=:0g2<KWHToeWgue\th4FM-3aP`\#oW
%SnZ-T`#M%3p?-GO@DK4O-*`BRCpf*=!Z0h$g-V/cQMm7!H/[&Th:t,35/;"#qFQ1D:5VT$\3o7BJ3h^a?REuXT-4@aISRSl)<pF9
%;%q]u4dXfX:$hOu&1U_,gKJTJ?#+cc.[At`RC`-9R[0kTX0oW)Ibp8[k=o/Bf2&j<I\Zbj"!p2gjZ01.b)WLD>'aEU]f0X0R,5(U
%9^N=4N9=Wb;KR%,[%SqQle-P975oe#RLN[j_.]Im1Vla#lYXnar5QFDlf\/M"sdjB_u,fMH^j]%@b?Fc$B-0L<,d,CW7K#:&Xmpc
%e8R9"au^-P9,N"[0!K+drMJ#?)#(//DH6W#P'u@Og$W\u3:D>TG5\)+aRlukTs88BS-D'LZEMP_7!+O1L:`ei;"+u)oZ.S=S-$#s
%Ol=Jp47(<nhU[i_r/u6c'Lt@4A[TKj;<lmn?"0`.]r_D"A'N#r+8!UZOJ,UROns`fFBR%*a:)UG!Q,CN(T=@#5nY!$9:2rl;VR8M
%YR=rZCJ*r^e!i0KOu7c)XN!M5)u=_T'A/`Ek2pZ4s0J]*a8Bp<-j)U;r?a6@>+\(H.98oP^&nfnK'N_Y\mUOmK,c]pZ"N*+06oeO
%Y[GppCeF&oo2HAn<>MViObe4Q\#[)NILEj&Fl7Y#g">u(I^2N^R&-Sb^P(LZ3_R(`6W=FsZ:HH\5T/)I94Gn3G.,A8TGV<LK%_-4
%'"d@dpS_2#*Vo5+@j5@'e@MYQ?MOKamB$KX$!(83&%^WU+'9]\6OM^7@=GOE[G)#A%>YsS<fZO4a$*\j$ePmg)X$B!Y.LH0V(Ye,
%,*3$I8.=#(n8T:gh(d_@/4=3Z"mH5,-ZI'=d9T%r6&>7FkUr[Sc3qsX?nISb%d-<)K]p#]RMu:s_spqbm4r[LBjnO[OSNuXG:9q*
%:Fd>'a^*.]R6^0Ig]QO]4-$oRXd6tYEOUMlR*n<@e'a!!4+XmR8iG1dJ[g=6/].X0'*EoDjVbuG+Ab1ZQ]8OF(j!(/*Q.j:b<Li/
%G/V1QLYEEr956b8&8nqjiNc<VT:XuM)q#B*5.S&B/U!mNAOB+p6`HF%+P3Y;6Y3IemHEq[>CP5;EGOd[oDP6`cjrLBLbh'lCcF_i
%Vq@]t""ZL=n&TA,4Li-.[uoX(2KIT].!V.=bCXSp%u@6*7fa`F6V#-ngL]Tf-5IQ\!&*mGfp3dG=;p;L"EM9eL5g5VCTM^57E5IC
%+'6PM@mRDOQ3Q9i&_Rcac8?X^hYY0!8%TE>=G%.-XNG[B>SPr]6I>8CPSXTe>:V',[NRUY./&*;p)9;(]\bO;)EkLiZ&mSI!5FEo
%YL2B49md"K[r1KHE7]>#N$LFMRM<`;>bS;hq34,k@fp!]E6Z9?F5<;l:6=d,rW0N/%_5o:dim==]B^-t!8Wq1\P@tH,rLoDaeUh6
%Fn7<?$#PYC9WN(QL3eHHY'-+=LH[Aj6)7RLL8&#+gX4UDY"Z?CgY-rDFR/`7kUWK7!Nh^<U!XWUTAXDt27..X[2?HUXB?*MR@ig%
%bS6QJeh2)9Zo9g=drr8X\D$AmL$PV<R4$=h*]pVJH\4;m3_:>!N?K,Mk&dtPb!q\B6<,6g(]&:h-9df'ZQ0jPnBFU@3,!6NJC=$u
%4.LWROrlNQ`#H79[.VqAh]c4`#thn,#(FQ"%6JAETV&LlVU^2F<eraHbF6sa%8FYKB3nJg4g0SK)832^,H042q-im7]qOcT>E=e(
%'_:lDn?`QDm4@9dGrQfUNSkZL<DUDE;1)Oc3tE!'kU7ASHO<LZjs;m`o5)L`d.;9>A:!*s+665WNEeX"LD#!Un4.MUT-0CllnCsE
%q?GYbNg,cR]XOK9&=#ekLYA'$K<:WunCH#%S?RuOl57UqOM`@,ohKJKF^Hb-p[1a=IE4Y,Vtojb5NG;*IBEq[4a[.([Ij:8X;#c5
%mo_/3K_-!]Ef"8Q1t3$&"/nJ126hpIY*T(UZs8]$QN,<CKD^m]JHZ*9>ut,+RGrLEJ%`>]Id+D"J(97*(hFGYFHBrfA'Hitb$A)[
%JdgsJAVOSg$nOgTImH>e-\XRVW/UfM33!''O@_2oJ>LgFi0.%m+[<2=HRk1mPq^!0Cqb7DE<'C`Ta*[X?Dl8F27fN#jM`Ul97d8t
%^sIW,Q-9hLh_ScX2:0RkD2<Bj7;rZ>j+0'.,)G:rJY4g(OOBZlH.kPu0(A2RH@QbV&5*0i[@r0df@)0SIF9Z'k%t;RTcd<kF!=!0
%>a2iaRnO9d,SD=1^&]?#_<X@leti2.AASr?9)`Y=37jfNVE@gUpf.ZWR>HW,e7h"PTOj8Vog$<31QO%eA(B(=agq9""0ZtXJLc!\
%XdI+LJ:W:f4Dd+V<aP='KM]BJEb&!7<M_.`@GsatM5"*bV&C"g]qpRpYLSMt=j;gt(LrG!V`-3YW;o?jjo6JglqCRG@t_``=:Ote
%0VPb3NtSK%669U,Rd!QNX9G.H*a;3tMqN"#<<oF)eBq!g*g:bAC9KGh9Ph/JH*M'+p>F+">Z5++AZuM-e=4X?Ho.(\_hgRW'k8Cf
%_Zr.<r:/VGk[7'[Ki@GDNS$&$c2lg%Oe%=T=Q$FjPIHs*/?=D<&Re1l']%ltlo'):WUj^&9M:-]=EmpY>qH0KAe\\-A(M5mdTfS@
%,Ncfj8b+B2'G)Sa%InNa6"1kpE?Mi_X$7jB-(le4ah@8_-'Z7j-^RC8LI`$R*b[Fs/5SEMPRk]P#])T0g(W]-*]8]hd0CE1(Us!6
%,]@WP;-QP*L[[+%_@pFPl@,>8?)14GJUtAjI3K[ijR,LG3d!PT08/n]iLc3R"*dJK)H7P(K#!o0ak:+1.Sp:kJ"MrHM$mOmMa0Q,
%"G@RH(B4`]!!,@p>:gIp)Pg)Y0hn*J3s>G7U9Bu@m)]RMP*S^7SW74dqFhQ`2+5N\E^@jN%_Y#1dXi)+Ba9(YY"-=/mY:AVUn#Cs
%p'_)#-o,RnN]@@X^(A-aUFTOee0ObRHma[adR0Ji1pKltG$5,Y,KtmLpc%+nK$"1C;1.@1?OY>`<]%eQ:`nMJl>V*_T\!sRHRNA3
%,B,*1#l"Kh&1HNC<rSIsOH<r@<<2@+#\Og>#WRn9NmJ=?qe8RDClH;bE]$V73%/o"ie&"3]<ejVCfQ:i[);,CAH8HSZeAFFb]AdQ
%<#p+uHWjAUbR0/!cqGN.6#]7ijT*hlX!0m@PSp:.:**b%K;c;+ArO8<Re*0PX+2j?hc_BJH0[gpZl!U=%<IQT'%1Vc0ZL-'Yut$)
%Y@W.gdDAkug+PI"AqICed#0YXX%'pLmdbWaB&oXGU(.9u%HH]V@"fPE-)A&X\[kr,#u(=RG*r_.MQ4fM]bKhFGlMKTS01Q&D3NAe
%Z0Dpn&QOf9K>WXOPH(m%:5j(=!_SFR9M&og\^K8uh*M5q?(%$@L.12AYs[%F_?OOAe_AY$K><6pk*/'"]NFPJ5lhUS;mC-R.BBPt
%rm6q9]%0;R?h>KQofP(>cT/.r^3F*Q4pb6:7_gi1M@YX9DPclcX).q$ak8nAY7VcN>%K;gJkHg?4R8Ccfrlg#^7aCLePIrH$3C^B
%T_dBf';a;8(Nl3!&[4J*i'Mjbg&Yf5Wo/TC!BT]G@9>(2A$Hl?%JU15jDL.D%mHh0&7I1/H8C4X_`U78VHQtaIu&?B$+@$mp->jf
%R;m747rS:Qj"&F_F6\JXgmYZ?"0/Zj'SRsNqPen=1oTunB-Al@.@>Z_f8Brr:Q)c9)4e;)GQ!-BU_UY=?qH0kdc^bn;<GFn10?D]
%_K:1JMWM.u9R8h<7"iQ\7e\)1C$=7rrK*A'o8^qkO!:u!L(/uYR\!#F7g.>A4:bdJAXt@=n`7,hAqio<n:_u%U?`ZU<M^@/MdV)0
%[MaBP0OZFGNSb.Bep!&L<ERD7F"2h6o/tlX*WA#q-UA#q(#]rS0HiEA^#$,WJKD<<cVK]fNcbP.Q]D.WS$6u\<k<K2T5V=EB/h(W
%UZUO6j>-8t>k3GWdrld5*L<$bIj,b`&I_F5mc%,+WLIK*)UC36TEYRQD(*"p9Y)dL(^N`.*&so=lLN0J#a<*s<"KD6!4nO?ntG5T
%`bC2lSuK8n6\,o)`Y<-C+RKHQ0=.Eu9c0!;9f3.urQ%$T7]&A<h.:5A5Op*(X$E+=Y9r;!Zf!r>%#KpWN,#=RT)b/[fPO3_3@(-u
%987E(5YkeM#Mt^:UU*LB<ik_IDm_!n0\`KP#olGR.NO-K8.(>S1)P<.]RbX!ID$L(5\IsC'9kJ[K0U<+5,%tlm'Lfsm331!qk`El
%b%=.I'^0;q.=IUnE`V[30i`@0l_8(&C(3=<7'5\Q@ieu\1KkeRU`?&c<ks6:TKDJ9FLh!Z%j=+sTX^fDi_bhi8/;T?,;Tf5ID/F[
%$UEOA,JuCX2m.*BV2Ng^=TVS$c5Ck!]=F%,m8ko%JZb#b.lH('h`A-4=7[PUF$(AF"C0Mh(2oTTYmn;7j@PWV1Yb>k8_u80@AW>>
%JVYmVWeiNO/fV"t3@ZT_H=k2sL6mLQ13:h7[RHY?JYTs]!OE3uik82rnFb&t_!6Hii&5NrAIJ8]8co4r6e@s`PSeW`?jIu?GuTEb
%AeK!^GK#XU7O!+.PBX9F3Xn1jf#&\oqe"5cKJC?Z:sQ]n`Z=:-&Bh$o=m_Ya0TVXd:VGPNGkcn6JkdakH5'?C;;b"f=X/:kN$oh'
%##IRn)XP_Kq/N&!ida/?)LR4:;#FHT:B4a-4b2ZQ?-qLAQJDk)g5^u<E.+SD3]\2t'P:rWjj9SIo!/N;H=7lUhc%+Hff-n'U8c\r
%2j8\*!0T-E02;nV"Mtd=A"?*4N5epsehFhFki!.rqEUcrl4$\>C*nINUO$+"e0-5gCW_[d&B)Eg^U/kk5t9$/"m2e_lhBntnK$S+
%;3"efRS2b;Bh!sa!=AUk.8^B?.@N;1o/*!ZNCAK$Yiri0aQ0D?oN9MkRi5LS*pbli>gt,':kQml=Zj1Y.kT)G53/5>F]<rDb4tPc
%iM#&W\T?,gI=Jgu>a'OV"IDGe,FLVM6)ja[b:9hJc\4g*%WKBJ-hQAV#$6QRQ:1u''+@4O%.&1-/WVZg_U:@UOr#`tWj".Bfhe.l
%F4<1aWh565H7l)qZQ/Bt(l=OQ*@6=p9oCU\&Gm5-KXd>@9UZ^b$^-Y_9o(VK"!G]j*s%O7Y4J$CKe)22.f&o5)EjR#-s9!1_h?VY
%fi]nCon,#edYU$H!V"j4L&*ekkbG#XQ9Ai+qC@s_1p*]fj:'heq&#"1B3T[ZBGg<qo.a?O!JR*:$!IhM>!k9Dc?tR:g8Xie_-/Bp
%kQ+&p-=DS,.EOa,Ufk0b`h5/meG;.b@:m2['_.l%1_g0QdU'=[!=U&^Rl$rI8faTqk\(`D62<rR5:2]80:H]BZ+ROoVe"jl(gpjo
%qZ_Ue,4]hl0ilfFl/EVK%Pg[Uc/j\5ehEcMV3>4BW/#&qMslaml]`<Q2(Hhej%7Bin@/+;:c>_iJ\Bac+D*97A#\^lUAqS)NtH%t
%``s:MmMh:5;%jloh8s9fA>>PQNhl/LZ;f%u>;YX7&/^-A<^R_NhlRT[``]7/Fa;q#2cZ&-nMUql;Ml&QXFCUL0HM$"6KacI+"Cl%
%N<dItM9Db./uOk#cEb%tN=8crBX)rFosB>o,EV%hXWceRKQ4g4/:uH3+I27FP,J\\5N[H($aT+899n1nNVSqJ!eaFW8JA/MJd'=0
%/EC&q2*0tr+0<36p`%Ii+'(?]bgtcqhhk!MFkH@s:2*8B3!Z?Y:#V&2aV3cd6ild27dLI\5p$h[!:&c=)Hku'jYZ0%Aq]Fde!5-m
%d+SibF_%TZB*q$ITmR):Df*7%/jDP^^coh+di`I+eS'YVk3aaL!0#BP>$\fH3=*Q57kl'BTOae7'Fr-)),\j?j<rKU!sA2sXNtm"
%fEqMF:@mDTO+S1=$jdMa2:Wc=08P?K)M2"K<m9UAr&+lnPsl.2Et0*\&aDV>%Gi?LZK57gc!"f'^cM^.)cs+`,"(jn&'3T_/1JY$
%K-is.!3"g!)iS"*a0W--.MmJ-OXk9Gcf;\eL6eU\L-O5hM8Vn!Xso!ld\co_SZuWF$Qua*GcnX^C0Oe8BFM'Gr+I!K6ddN$V>V6f
%7r7_aa<_r:i>V23TLRu"H=73cYY#)j#M:NadbD5UV`S[\kSm"CF,6Qf@T+$XMbADg"?&$d1P,2V8j>#<qbS7eGBpOiI8&Bu4ki$K
%i+7FhiL?.a`F)i2Q=s%8L`O;C@'CRJ&EX^.bSdM;&Q>L_p_&]GNV,,]6ul1>+Noj@V;Qbelr4.a^H^0-Y(KP%"Hr!of#`(p%'gdm
%]H!XaSr9oGnE\.Z*uinGOInMRb"jf8jRZJ3Ca;0Zm%^_%#W/h4A:n[=n'oTg+ptf!d$GVjJJ>U;#RbZ.+E0@[1M+d0&YsrT*u\-d
%BAkWkO3;gEGjt;aF=Mm<QD'3]ZfB`,0X1q134,UqcdS'JpWMdhA.B:??th;jiP>MQWqpf=!l$B_+S%30%o`jq<I^%V28*J,!'G:s
%U,4qB/7iM?QSD7#,Ye$Q4?Ha..KZ&>ALs4.Bb]]+Vi4\'[/hQ=WX+7Hp?:(9ZtD<IM!0jkm4BfLlB>(<1]N@+Gs!RI*aL'B1innn
%E=O]G"s9L6NK*Qk(JP6.3B>L-`^-W8X;PPSpa[f2AK<rL6<k@KK:%ONTi5'a4O>?_"F!JlljL`W"?hd%3D-fu+"Vp&cCXk6S"B\O
%T&!as`X-Z"@S-Z1%u>]@aIQJX]Yfo[R'USYi_*4p.%V#nLQJ*Brh-$>9C(8VS?j>/26HH[==K=9RqW'R0f6(Ol=$*d\p6=^(kAZ<
%W)$!RSRe)(;S(os6QQfLQc(bSh.EoG0B8eN@58V"#-?GdjO&(#RLNXhYnX>^#,VU;OF#9Y6ai!55OcH11H#RhAqtD#L5IOqL1*+q
%XW02jJUQuW&9?2a+[8>J/S\,-NacT2'_5p[_&#Al-M&V$Mb63^BQgFi>SkH_9Q[^Yk"nqh`fD;!%7A0gF_.ulYAh2`QNb>0!Dq'U
%=r\(,1B7t?TO[lm#*\m)lR5k(neA'=G&%Gh:gFt)`N(]I6K!CZGP4_+.$0YU0[4+h=Wt`LL9+M:^*64&`1=2&GC@G4Yis_8"3W/\
%^!Vk7Y/X.(KIc7(L7YgWZ9+@G5_Nc`?R*<.HtWX[$1V_8*L1Gt&WJ%91BeF7HSgEXga4$$Y%nY^bcF)$[(-5HU^:G[TG>]_0IC)"
%_/l)/-Nn:KrXI-P7S@7"TntqX<C(PePik$nQsTjh`$7&WUrt'G[\Rl-CPI/I%9=<J(u+fA*A`!FC)6J_LW5o`<+HjLZoISV-45CB
%5TqrZ4:ShOnd.-)).X!]K!CldBcZ/Tj^:(_&O:duh*l8gc#-+j$I`K-$E&G)UrYV637<0f?S0#Pr7m_="2"k[)7*5"1msg:$]'fN
%mK[s*`JEtoUKqCa*@]Q=2;:h=$0:l=C)WO[6>p3=R9,mA6+ogu%g'8(R2n*P%2HI?G!4"m#*,D$a'k_,R+gJ;N6\-jCUqiTW3EpL
%335:`Feo.<"PL:Cr@jJf^juTo<U%Z!7$fB#J`W_M(roD:?Z9@!#8"+JW,j'6"jXn>/Nsg582T7mGSFY!i&P<F%lQ.SK1'WdC,eVf
%q-XH"8U]d;[EKMcScY^2g:")=$ASX$ks*Pu#O#;<$D"7lL"b=&BR2`UrBbH9)gF05,==^%bf"PN!93WcQj(s;)g2Oj?jm^*hV^hF
%D9JG!qp!KrB[d.iF>fZm.,_rq#_2T.,uo56]#Q/5`PH[JNP:#^-[BRe`!#RB5$`)#_eO(Y*+aF1598@DJJ!sP2!.CIUeY?(]M=Jl
%FUQc>1hV`6.EnPlLOP\mLhil_krXY`!C=c\Q'"RM($!n7oB/W4f0^.<]JW*&BOQ4Y9<:3uOXFberNqC;cfcrf(rHP/#Zu-Hd+ZfK
%o-qgFUH36?+bH&HbC"_,J:P^`Tc(g#jJs_`"pBpe&oHYR+$<4Ad"qX/]iZ(EDiotH!lkTq,X3dfc_<cq8J)/jQ(182VmVf><2l9b
%<p$NYre]3Si_j6:'@D]X@P+*TBJrj';^:smqp$ucR5K/V:D(aN&R]Pg,A>!GF(.-LeNcf_'VV1<6,j+A!3Ho$(.`UM/r]VC1.Qd$
%'+_#ZbBc9,<FJt)BO*C!drHWumiY4&?Lu[3]+i^$pL1(AH*q6`#["^q([%3adHZT)nUZ5Y%0Qrq;%O3Y_8P"7O%(B+,BDI.#+^XG
%:WYWu=!8EqNXX#`YmZAs2(U@qIO7=S3!aWk$kc;6gcap0g_nB#AEH"e2R:1)+!<76'm:7gU1QfJ<]^X3F[8qQ,,6Rj*l.!tTkWh8
%)F8@tmUQo%TqG,[0Fkuf,O0H=K5bA6;*G'ZXj6U:5^LcI5lU4a9dNV,Xful&pB_dN'Qks']1?H@U0#"jTm7TJmSFP?[lcKs"tV:9
%Codu@,TA*$O"kL64@l1Gn/dEp!dG>"%?&(X8_CB'J.V@dhS(\lVkFTdb\'hM.Bo'=c5'"/oK8*>/::\hSH7!RFJ"-cCp:V_E'q^]
%eS0?g4I?GRpX\#kd@s)f(K!ZH,)7#(8(dlpelLnnh^g=8@EoaoR9^*khkq(:U:q&o`")H[Qq'oKF<Fu(Sq<@BCQ2@?P/`H3pHqel
%U?WHm%(^!o0+K"@qJ9DY)l'sB_1R+TVZN[MX&Y3:Nt.C[R-VaY$BkTh46@0<[R4Ml^s9%E@Gp/G=FB]s!YcdE`W4:&pmN`_#6Bd$
%,!VtC>FOQU8lBUId;CXYaF2<i4\s!!a1FK@=1e[k)u:0W%7J<#YuguL!Jgafqh?VZ9"%WM6*)4H.Ss)>9a[&`6#Bmh059JcSEF-i
%MqGs':?PJkZ/p\oXJu<>g#P+j0*+V,BE4:J1dk89NSV3&_<VhC<3A-=FOihB&:@kHkC>LXkn?G<LkMZ&O+"ljJ8qG@"]M#[oKDZ&
%gP#!rlMb:cm_K$R6I6F7IB5l:%Wh=S>9^7n2<l$s4*7;J`YZeE5_kbrQH6!?_:04i&r@N_Yp?t!j8`<p-Dn\<WYd-#B(3#5'Wqre
%K['Z#"5ja7)"RcQ-jTm[,(q)3c[^380c?$s[CXr4"6[7HfU*cM]E5rOmSX^KKkrsph_\rAAI?::U=DDV!q-^U0MXCe?tF0=E`e.O
%I6>YI52!LiceqJ#c@RpkAXYMSe">1;,Hq@^bRV%m`JF&]?ZmV)+_4=J;GL%CBiG]c#E+=5!,t3j/#"cQW`kR\MgQ]%`"c6/kJsg2
%49^:/(3Tqc^TjE0(!Vt`B=H6!;%e2!+EV:r5+6]b1*L6#0EC57`<$'9bet7"HXF>::OWY$EKG,=kEisYot.\?^&IE\-[0dD04'&#
%l;qo\4ibCjF_8?c$I"?C&QOPo?Fa0X$K5r.Wu4Vt0Ru&u#[OOpf\f1,_.?j!Ro'JaWa16J>"T8TqdG(njWJ^-+B#+m[0R_^VJ539
%J4TF\-"_0s`P\e;&>G$$l(NQmjh[s_IbjmHl>r\?$AsM.=7FaO#F?>8MA0S^0ZE:]"Tq*M*?Jt".@B./*l\Tm&AL9td"rKHJpf%U
%btmq7OJ!mLOAKF]InqT)\nVN+5HPi76jWt$IA#_r@AZW?=f;j"J0U=NZk"p4`BGX/'I_b)^9au44X`0K1Q.Mc&FA-aX+U"a0'bX^
%j%7L^ofStL&Kh(nP(L]%cGoR"8ZV3)dJ+N'M\/Bl*nuG?K&4IW[P0%`<Fl6Ob6jWS9PmIT>S@)=1k64B)31E,M499"41S?%!7slu
%rQmY8%[_;ZSR.9O@X.UD=iP2E*k!1<dq5-9m\^S#;1a1_/Jt8Bf<iQ/=^q(ITjU3UFe2ZGB"X5:!WAC7d9n5)9u`u$V]L1USKTT/
%R"sp!R#!.^_dWJ/b^ZQdUJX7h2-*acmc+?V"D)4L#k7N>%a_o>Ao]sB3hR$nXPO>)Ca*Nm1NK$3KWLtX6lf]lg!b(4"E8r6WX;lh
%#8FD>$.7;cY%:c:BH2.8KGbS/3jC"gQOKo@+LRUrCFA]EK0gs6P5m0:aut[-]ATX61+BH7DE]!.s)<_)O%n8Kn-kRRdauk1Um?sT
%jXou[!)\Pc3%%6&J765k%=j$#]Il5M1`<^HlZL/JJaJ:[%rtZl_P\-e#L6[5">]_h"&I/9M(44e9pZ!lM1,eM!"g?V0S@_tce;h#
%E]Mh7ZGN4Wke*st\qU830jmL&$kT60ip_2K=Q3b6$dOfhQ2t*>F&V6\J5lWO4_[.Neq(H^1q_t0CgZO!g@]WT#q^1RB48ja$WQ>a
%0>TF3@4S/TR&`WWPgRBH;=Ht0AFL3?`Rrgg-LF7n"-GSMBqFMh$j5m_8:?H-&h\2&+G1"*'E]L+,5a,2=j@4a6f67D4Yla:4P]Q0
%Onu,0Q$Eek0n7g)dT_tlm.4LI5iFFbHqJjJW$;@#D>7^9F()!lFH5.Z&$?J*+ZVXr!/h$@D_Q'Xn"3cVp^^C?j#N/7odh+D<00JR
%mIPHcqkgNaGs2F7f+[I!eJ`&uP`-EK2J^M]*N@$t?kO4O8:Vm]:M%gt.W$Q:@=rc`6o/RMdJK"=,d'fL!6(l;;kLYl<\2i(hcc/$
%7on7QbW+=T=:kU[2QdXJV-FQ9LFlrG$`FF7CNOq+F/Cs;Pj.-!VQNI-Y%=k3,XeLZ&P#4)`g#E!0M<H(/OmFhU%[';+(C/AC;)bZ
%(pRjpTnLa[]#N>Mft`'*4U-&^d']0r[&9IIkscK?.m[hF#q[kTo&57^&/)m$DqlkX,MlKaFO@N#;!2jkls)h42&,,Ka/LQ-RD^;'
%]G9F)bV+[K337J03#M9]%4)&'#9?@W(631!E"00#L,,CPW!W3kN^Io%KU$`)H'V'm90;?@KiMCm/k02*r2!uj-<S)AL%j>1=P&nX
%fY@tpa\3$=Ls`]K:(p\Zh*i+gRc;r%pr#AroWA2[#$='#=jfm47aNaR@@$]o?gtji19NW)TO1a+:&RJ`5U0rpK^9K56#!A8kh*bB
%3W[I41D&7]aPNRg.A2r01bkAoJrYQLPTh<Ro,&HOkF#E5c)ZA?U1H.OEi`_H0:8\6jr9)1``PAaBQ%TU:7i$+GqO-3q0V0c&4c,D
%[Z^7*^hLoR96r=Y%M%:B0aSO3"\Kd%>%G`SFeVYh91k'h_Ld(9`XPG2>>s79`$cOi_!CmZ&/R!i5Es@o^<O74Y'>k4CS0m+R,\fN
%`#3=k5[H*Q`Ik,ViQCgZOe?kuf+@GU1'p380Tlf:"s]$1(_;RaH-F_g@L;1S_D9B75e$ns1bP87j\PGBXQ$p0Qk,E.W9XY45<1^P
%QmEU9d*)eL!X"6eQnU<9m0\u7K2iMafj\2/prof,&&C6DP^[r6(eYiJ[.bp^;=_<`#>CS)+"jK>Xj$okXOX\`4>5=lfOgl!FWE=f
%2NOr58s'tBU<k"i1=mo'\El=RqgVbZD#+7Mob0]&:psC$r/.TGX#?mIL`.lQ<ie`q1+jKE&R,WBB'oCKlK9KB"]#X7UIN`D*RHP/
%J\2K".(pm!e,q7akV9$^82pW5O&IV5Ul9=_XeDJ>VLI%V<7qiS1`DOd:gR2O)KC4Sq/1?cX2QVjX(&[:hERT$nF-p><ephKOt>h>
%Hoo!.'K:N0q0gIAO:l%t(dMO?VeM-JWUU\qWE6kIn@fV0R:[1]nu-I_Jda3%Yk=9SZ!^D4Z$LlM.OVnmXUo&iPS&7j\nktPEXE^Q
%A)X=5NJ<Ta"ZdVr-6C2sXhn/3]JRBld?r.Sit9@F!:/=hP(c1Le246N]3;`P"@QCcS/K.T#c>km(cje9KR#WDe'S:iQ>^<14N7YO
%C_7GeO(W0#We$gR3#m4_b5Qs;6m!s\\S@nP.`MMEZ4,dSWdpA_("CJC7AM.E.taCj&U=kcQ60+I2\aNXE>R)80mX9jX(f+:0b?1B
%OU1l(#+o]?(<OWrm*eBT\BJ-!_kSo&0mLm\dOa$Tg)fBH:'ZV#g_;VO1(XKi/FA#h\K(rf=:N][7ql7N1)mm5FZCp-&Db;d.uBIU
%g1Oc43u[Z/jstO@8?0OiEDu(8Yh?*5:B<o#arJh<7iEj%=o<!*a2um_#Upn'XEc[>@YbNkgZ<5XlJuADL4)or==reDe2I2F=)b-A
%3(_$c!#)#Y"W!k.hT9P[.k;QhFIEdZ)L2UU,G3.'H;"J.o`fE2JGhR.8Me\&QiWJ/fucX+2_aL&mLp:rX9R#[S=ofm?AVj\`@sp3
%ka8*1Q[&dQRW%8W@3JP#H;1DX<YK&^pE#"Nn'_eT/daSC";Cut1YK>H.VN!n\<hJU+E:Ft$sR4((rP!7:oA!cOSO"0i5s@#%DGS^
%FE@tMe['!aFFCLQWciFt0U&@:0<N\`0s_VW.[)4u$FF_*/@jCbl\K,P'iB+KMoRpFdb$-$`)"#%je;5#DTlES@6G;Y,HSe%Sjlre
%lEY(i6]fEhCS1%KAH*7S![qc:a"rfn>^FiKd&FOPB@SO_B<5.(*UGKTCf)eiRfX(J&qgKmab9.-XQu<4hauf89Q6f[C)[a%7hDIc
%O23e2=t_L96Eb4n&R)*!LqNIj7&!@IOC(1"76_H9-pF$>)!3l[o$-]u\Qg>cC%X526t%[d7tDucNgXq=_a^uaU=HVdnX6&D^R6aN
%=mgP;*/..Ia<+=>5lE(,!)Ld?(ktNI<f5#+,P7?F7KG=Tg6qF;,k0a'2"NT87NpW1ZOAYCHL[JJ@\[Y.QHqZ#k9EPe-mAGo$[P"-
%Al<ZQUW7SJirRNb_G\(G`T70-o=BsoH.Y(j-AV.9er*>?YsHU2Zo`C`_QN*Qh<Wn4'a4-'a#ufF/PaZP\Usrc=P_OEVZ8V^5MNHb
%Q6A$)PqI-IH'jo8j*E:.JXtC,.0D#<Hn9Sr-,A'-X5Y$8Ju87kIL3k=Z>_fOcS,nSM6=Dc>?"X^2DuZfV&50d<n(/;?+X\h$iBQ-
%8XVe5l``,F8.B:TB>d!U+bs(5Tq+VNAHiO*9O-H_A8_$e&9$UA3,J@F(c,$Cka@;c5[MeEjHop68*6=mn0ETJh(ibh`LtqggUtl(
%ZA%T6=:ihglrI"Jcf;'\'SDg=FLW>J`4F0kopALJ2Zl4EJH\o>(0>+U+#*k]Fb9'`K-#brYQm"B2MfmD)Xa+]!oSeK"gWTgDI@Cr
%26Jl9/LcDm6[l[]<*PRq$]p=4KX:[#`Qk_Us+ba-?E0sK1eh$*\+fMHY`i(6Q3(G36&\H2\A0.?=?K"[h)QO;U8=f'mW<*BFGVH(
%AkpE0&364jbM?^GQb&lk!/0Wqi,!)"LTDQh`1'Q'/2P;!faLYD`fc#kmtS=Wh2((']9^7;WgDjGZ[,1aZN*9>EXUD]#JFoL;2eOV
%me^FrQuH2--N%I<8P&:?H&01HY^hSY*#De53"_)l3]JB%18YS&;`QoDihrnskTbC=)B9d?>Ae8F=];mW-)+.BN-2:0?(-5WM,FQD
%M3<$#;%4&0aof)I/8+UZl@ZuR,>d\'$E/=5Cu)3h*QP-W+=L%dC&m+_3duAlf,Gj-.e=*diEo-:Us're9?A?NQ#N*t8$7SW9IRiX
%fpN++*+=3oW7iE5%DW3;OkK*<AH&sT\Q",,6<)&C$d&k[)I8h,pRg4pqbJ;ENW*Ekq_pl.rKR*PO(:A%ZKPQD6Fmg21.EqdkK\Ps
%X&dV.r@roHA5q@;O42GYVir34rD^4AgrHX5JQga+O5ZH"e0jiB>[%mU3q4qP0_ddYhIAg48U5!Va4SGg3pSNo;:p##4m#=N&hn-V
%QCCem2aofh/&l'a.fit"_ILN)!@:RVirX`KL@7TU%.&2ZBsJbS>4bXE#QZC-E*Ht\j'>7q?S)-^9_>,AcH.JX:JAg^M3sju(rYi!
%8Y#!(>;#p!FNdFN'$`6D"BQ-nWC4eGB%dpG1#S]s.qCc_9Z-%tG`E@?;N7p0*$Z)Jb2:<]bS>\T?6mQZ#K2)1E==N$WD&iA\0t5<
%,WOq8]qRH_E/_bRN+QNPMqkfZi9ea*N$W_ij'gHWJ8HX1&WPK]Nh(2cm**J0Bq<2^ebHm,YAr*U\ML9@I"bN8V_M5*5AHgT`gEWa
%E(+Haft<9_B?YD(&=.7jCfm26NLTNp.%`5Oj4Yo>c56VIN1AR[@1d8^f#WfT\kEHVE>c6eZ)88#1!JrN3O72f04L?F0o:jOq+%=]
%`++a`d\_p.0Ua9a"8.#d@Z:94c5ah`LP=VX@>oA,HXI9%0XaejE?[+)<AUAp?]7:1RTl[C`k>l8SCi`#,fA(lGqhsF0m&quQnoq2
%nk\>c3`#&;1Ig&KoKaI\]N?=q`b%?T)i/_H7VUY"bm:BO5>r`X-h=R8aM=fB=e*)@Y9*m/c<ZAdN0*SdWJg<!8L\*T"kA/U#<?i[
%-ZN,=S=#47g@HR,L>W&dUe\e46Zq7B\sWG.&Jrp7!R,XIWJ2>;]Z'@c:o`oi`?;`7C<7U*-qXJ?k!WB8;#WTqMs3<[/a7r-UDqEm
%k:;8uA'=+oLWr02<fHo@,<K$_:]MUB0WnjnK1"C);B4%Iic-oSifS>]3)MF-&4Wtr'OrnPM0u$H#"pLp0kVpf6Q(<CV77B@abch'
%(g><YMF$Z\$Tgj5\/g+-4&H\.MlJd)0hS$W-"eXGrh4/&Mm<n^&^U_A5;CRWWD@hL=;A(3GBRHDFG2p#M6#bdSXLB-G,-ujeANmm
%Y0iYo!M)RU[H#cC'muNrM=[G&Qd/54$G!%A$H-M;B!Ctb.kqY@=W*7!TtlR_oeSC\M>a<!f.3<MKS@]BbfgF`PtFT;Zgn["pkY-u
%9rB4*fGgb0@j?`I<A=2Cn.!UCMV@)G\i(ut(%J[\\"]GuB>u4R@m(J;U[eNV,GcOf_a\&DdY.6CXCZ#f-D(M.)`8ba,bYk'nb(q<
%W4u]i`5Ss_c9R==On%=rKhF8:Z(6B3jWJ'<'XOa+`,*R[N9!"SO.CY8`V?ElaZYT_G(!RGb1'G8b*dJk*3/40`\Ul0o^'"VJDZ3*
%(aRRtV4;TDqc7FQ8-8KfWk'tr,P_j^$n!%WW(#6p&dck>SSf:`Js`a3D-/nRZ@4ge0G].3>'.?cL66P4Ol03V+>U+.**,u16!AdP
%d4hXC(n8f,$m!7(M9ualp\5RQQJnP@&'cngKH1JFV\h$h$$f8S_[pjMR@_8Z&mNX7%'>]=jMJ.JaNnVV_S?dnHoSMfLhXXtEafeR
%rf]rVM1ku4"I.A\KsRmSEM=0pcJlp/<>_).UCj>K8mL.*S2l9h@L40H;[Uun^tfp(0K;<X\9C8JT]T.4P>IX*T;>4F@I/'DgZaCO
%:jO3r'93u?F=q!lPKK:b(^h^cD]=fmP1VJUS4>OV_"C)?N8.]<DK^3_Wgj-S*OpuLNl<\r%cM/%:aS8[kCuiM%)N6r65io6_U<d&
%2PL>k<G1;_*t17sc<'AKL[sq/nmJL@S_V&:AlI%*_8^.IR=k$eo&:*BW;]Pn_6f;=SYX(eD^Ja$;/>_XSV7_g0Sk35DbS/Y,XcZY
%KY^$$Ra-;sLAc;,?k`Y'aV>d)7sLJIO]04hFfJgjPi?-Z7\Eth]+G3*ePVMX\13-lU^?bn'2,P;SKrGnCr#7a_7rTHBqkroB%Zl%
%juYOgnD)psJR.L3^o23=]9=8f]%i,^GVG2L-T<`X#%5e;2=NnU>"A$J?;;c1;Ze-6"EL$^^^!/CWLp/@0j^-gg:2]`MT[JrXcW]-
%/0GGe9Fd#%=Me=5)]3a#C6KR'Ja$(XbeTm9";p$PJYh7#2bm[eqW$gt()ZB(*FZ5T+%2LZ3*Cg+2&KFUYl]!kphl'?":XYPM?k>5
%a2,R3'e-@BQ%d0`Hl-:a;Z\1gPPU[Z(bodDXIKh=Ql^K/`Wloh"GX)n*AAf[\<5&@$l0$_8pPgr_GD\P\U^HWiFQ!(XS=-MJYE.K
%&'OW6"H8(5Bp/c=a_p3O1&u(:T[D$d%)WO5B?gR;=06^b%AEqQM;Z[9"5&<&!M$[DE0q?THn-Hpfq@g77A8Hq!AKTB:l`j$Mr0`&
%FQ`Zu(1D:\hdeV4cMib"57pk!"WjYSOUX&5?P!L)C"B545q,KSDeK''I0'l=`4sZDW:+\#hh"B#:>UhWC$_`DADVYXrq64'na@/1
%nSc7nOiQP]]f'qu*K56M&YJHt^Uhc`$^:<D&3j^<o^onKQPdt&(R+VQ!../-OV@cS3"kdBnLrHkj*Z2#rhVRka1DD0;>*QK="!tV
%/<;@PMYIu1NF=BQFs^J$2AYa7,sClNhHr)V$d!aTpK)'5NAXED1dlZ.HH#bS.eqN6jSd&cM1IePr?[_G$gEQCQXVTIjh/A'TsqUH
%J,)IVonrHEfmZk'[(h"(hT)Ahjfa:7C2nnqeEEdBBRcEQ@jc9M?[a-gd@Fs#Of;6]@AEe?]/mI#YLEJc(BBoa7/P.9?*&tWQSc#k
%Z#J9$/fud7khK<jEJ7`/bb26?ig('Pr]09t)[5'<RIrL,V\O=)?_Xp%XfnfD/E4*-]OLj$W@Y&g2G@G0h;;@b+UQup6^.20Cq4B/
%8:M3eeMsnAr\D2ib8'7p'6Q@=N:iOr,Gh+mf&%YNkCPZ@emHd'UbXr[_*8f)>Elm)SW#LR@f1qEWA5k!j^GPJ^0`^=:%gYbJW@kF
%bFk1;OVln-*e[J;RI58-)\^Nj4+`VD:9n6f,daX`kP@Uunh=#[;sp3dS&P#Xr><]md;Ofd\QF<mR7rh*QW]M1XuLl-^KtYW'YfUO
%Bt,mD$m-pL(9]-8q:+p?MrU.rNrsDT,*t.WH(t'S>*EY'^PILshd?T%fEZEAcL2,YWb@pZ(G3uB13R$1TH^,CPPYQY!KK4_I5N]s
%W=<.]Yc47>B(r-"X1!t^/h0:2J6jV80AdNZqMF$p0mj+hSDBM5`aI&^U&Z8*M;;8)5IjL3?VSm,R;]MJ%bPDim(TuHXp3kO^8s(V
%+fVgFi_d;HL_dNS=/UjXOJf'e'R!m:)7qQZ$O[/_H='9Q@2Q[2Zh=ZJ42!9M9O41PI3E`6i2X3Q:"a*KhNn:U+*Ms;+u``*PMVY,
%]0I/l^Fur#r2VWgY@9N.jC#p04H(S[`pXk@,tgu9^Q?n,E.VGNI-P-7[58Y53Uuu588H-=I47F;d.r)=J4"f1pk:%rmU@F9eTD^n
%d$M[)=F2#KkX=nJ.4^1Ei&?b025Nn69*'/'M;_O4I8#B&2T4lRA,(b.m/&/b?`mf<LXd8k[4DG<mE4qA[:,gs!uJkY/uD\?AGF,)
%7%D\riAZiC;d"A^__6StUP2;0)mYSY)oXK)ftV`g?V5C0%)7Z9O.&R8ZMEk*s!NP."c*CXG7[?_AY"Pk7Zu_3Z/8&91]5]#.oB<=
%JlT(3!mMbKpdL_Rg"jpn^CZ02N5"BJKuBjl_q1s8/)RlsI`#E?_C0ldQKLQaaTC!H'6km^?Tb8*@nuR;adNuu;uFK6@f>DFig8:K
%c6C!(#s925^t'?OnM2"!DE'BK!i0ba`Q%D*5#uDJMr?T/F0X"!^FU"l.Hh2T>^K0Y`Q%C?j'@u[fGK'iVr9#@0."m4nK_XkCA)Qu
%!V@q_o82F-GpPeF%)5WO1@[;9psj9/l^?^u;KQD]pdOKn.HN3#INdXfF^k,W!l$8)MDFB87Q9cE^FH2Xbj^PVO`/hhIQ:#\1^SUc
%GoWrXpjJRp/$2Qq?`$C^R,ks-:gF1-MrGQ<cLRJ>JmerR_[(]APg>K;r4W^`7`='S(hS#Wh%u_o(n!Ir039IL0JZ"@8:NoEfeM-5
%[Q$#=ei"0KjE,3-c>/r`=BV#ZNK)PV,e8?5$p[=cMe?]!r_Dc@AOc"?D0gB>??"Q6]fiXs[\?XaH&saT4/]:Nn!(ObArOHErs`WW
%A+]/DY!9Mfq0#[ScKEpm<IIX*Mg`7f':UXMU3gco^>6"G:?L:AmE$_.he!693L+M=&?mtdJq=#kJJ4/!=^?*;4MKTP_F$es&FW*B
%iPa^`+o8m9pgP>9`]8DY'IV#k:>sq;99'pEDmQ9SSACP#nJKOS^<#["hOVCt6P(R)cJRB(iJ3u<(URFIM)I4:$pQ2m8`![H!onLm
%?HSMoR+Z;G6T.JFmKK(XdC&?g'GJ,hWKtZ\Mu5%[i_%r5c8!ZuSQL5qGsjg!OnKu/XNMS5B5]TXnjM0S[;T3!X,OaBr$3ZV`I3:0
%rl!F3RfTFTdIgQ3)P+!s'Pmb8m:<o3G!kFLY$T\t!NBU/]rR9TWHYLOC.,bLUA-H5\+0*Bh#dZfd.B4DH8k\++RGeI:F*URUX@KZ
%K*E>LBBUY:(m8_t6*IR6%d3#oDIm[jo(.#l<h/B!+WSYE96sp;q[pSeG$`N)6`ls$Gu6M?n7e,V(Z$YYm]btjhqsiIVp'sB_3S"k
%<&5]fFBD;F]Yh7&S<Xn.SM!ZQ#RI_(d*plTGp1`""Z.Pq+A1m^Q'^>7VuN<QQ]tERW7UEu_pL?]b0)$Nm_?+!@^9LBfNEK.O[eGP
%A6C4kBRK^k-SO7-=N/S-bBl;B.'8PbIF4$CG83fe`[LZf32+a4d)A?l$ARPjQHl#5C15%E3I)d@\oUVQ$Fna)cH/^8NAkdG]Hj5%
%!UZDi:CNNcBuBk9S@f9]Td\p=a\+(hLrRQ;+hZGS"YTt!/-jukGo:f,CrSJ\ad^-/Q'6E&m2IEF?9C9^J#D@u*i@Pp,/QebPS5@H
%/rZcq%OlZP^hr6P5-,[RbbsZuEITqoYK$$qn2KX<T9X0N`5p+-(AapbnhS2bhp!$a)'m%'Ean+#VPQ$<Z9oP/6(%mi'-hM*1\0t^
%BPV*3!:PlZABBAm3\g1<AY57W<TuTdMB(>\jAd[k36mJq6p;6q&/Oi+JOX;5`M]NlFCO<"N=*<sVrU:7'tLKTrg2qFS`tBMXK"<&
%BmR[oKm%Dj?:Lp"Q;0%f?:In/O->QIJn^d8QNF='[FYCU81m&Z.'fCQjLYo)V.r3!nM2@l83Ub\;t)RTCbn+Y#.$WUoC4$Y_s0gg
%irqm&+D$Xd7T_aHC&CE>M\<&&W-B8E1+c0L?BFRKF=-"$/<P6JEW)ssbC/sN2B*G[)IB*'OFJr"?L2-,""3%28duI,M1`:jZ9:t!
%gQ4[[AMWa!P(VE.M1E'<YgrPn.nn/39`Ej_Z+UhL/kDR);e#C2eUiP$^.VM*G37ZC+u)?r..qIh<6'9.X(<2F[(Fl`K=pCa$^;e+
%j/fl&oqVtK0@F./?]CkPEUL,%4nM=VRgnY*@b`7P@'iM8M^9V\H?-`*&;c]t`O?4n'LU[?G2X*B5q6O%`BK7U'A5!70F7,/f.PEQ
%a:1/[/uW4MR:d<>U53\Kc#,gql/^J#('boTM..8f`9s.((Dn43D4E!j(a%e[>D;etCHf]$Fc3C_\t(')hTsug.&A:bh$?9GK`mrL
%(KE>GD"#<R+RQsuS6*2PikS<iMi&Xe`$\Sk#Vh4,<O^VVj.s8rP@Wa%1PH7Q4/.$jWJ^ml1PT2f/DsJu\pVdI^qoWj[l-QYGY%&-
%cDQT#>#91/k]B>!!/-%6LTSe]A@d:BP@&5UdtJ?Jf=?!+;`+'@dKKgo_7lI3QXK2Y-B[`#&A%Js@c&gqH$#Gk3"3%A2!D,A\C'N7
%ed5kg-Pg";0BTWDFGGu-3f3:/3:_nn(Kh(3-6C>?auSom>\26=n][\"C"Gf?Q*c4oVI<..?&$d9hO[8[\PtV!ND?4+H(SM0-deaj
%EP@u3G;WF7TFX(\N+-GIA^LR2*@DV.Qoa(a1h-a5*=*!bd@L*m'8nIp1p3t1<Z*#m,cB%<@bIlVfI*QD*L?"PZfiUoHPeIVe06*N
%?G&RrBGf1]bb0ktK#:VVe%3'J97.V,0$[r^k<trcb0?aU2q`8-;rB\c/n8s]Z(K*Y[5&rHm6Ic-Ke>UCF'#)MVpD1K:L&J"kL*jL
%&YQDl11F@fZu0mA12^3`'b4>2YU?OYQk;Z:JY/OTH#]#1C2m(2QcYgl$.nZ0Z01ZdQ3A.Q/fu(^NNqZlr=aN1_o^!84+"-]1Uf*l
%F.$!;BuSAhb6U4s%VuWk3u#'em("s>nV'a)\MU[D9m$)6,QV#&jT+>YJ<_MU>i&IQP<>2N2@+"VGqSCuTOgp[\Wh-A)gO%>e2Bdf
%9212YM%b.em6f[@PNP7D0hS!!(BO[):[GW6:QlDZ:mh?<!IrP^F/_(/k,9&D0&9O?4/^Cn05&O]e)tK.1QF8>/r;Wn(73M5C)T9h
%ae+J:!S,GO5F618=TLUa.m\N<\;g+CC2uVJg#C=(kQ9:@cC[`q;SHCA*kNhKmnTL5"J<DLUX(5`+:AmC4r6`Y24`rPJ^<96p.h7'
%4<S.Z_hihsL-n]=\mR@)-@Hp>@fu=s'BgVN_p39Hd"O<?AX!>/i*W2Zi=*:g))28:@aHD'*.1h#d"R!^ShoS.!/0Zp6'n*4=i8d[
%*L.mao&oQpQMp1J\Y5C-kPVk=$`6k^r40B[r/!S'fsIFG0Th=,kH'DjY+LB$+T^IbZ0+HR(Gkd?5Z473-@7?K#fiIfF!8g'i6Iq;
%_tXFp4dR`*V2&CD\O]Inf/\11^+Y%[:7jTO-iVmI2$.&?chN5Nis)6V@lb:e,,n4.D&sJ;!HJ7t-.iNGVpl#p",YH6-5hC&m$K.-
%?"R`i@aJ]&2=ftVTZct2eC(N(*2F:OSTF!M\H]gg3HUZ46_O7nU!%<aT9^J./ETD/auFM=>Blki&m`qD_3B*U>p]r%oi64o&K8M7
%gdlNYeT_3cPVaC1\t$<pk]1WFSpOg9,h%W)&maj)U_fRi(P67MV,aN(.5M.QU.^'>@nR"Z$4^o$DhBEP.b@dER0.'Tg0&NK]OSq=
%R7.o6>[`3/U.[t/V@1M/7@,\bbfV:K?"+c2*'9-4bWehg3fPaQ+dW3ke*'+lEp$#h9*mf,UsZ#lfXqlW/mHQUBN<a5!<6OLYLD]%
%_O/tNUJ'@+.9`Lo-&G_SB(1nO"XlBaX`bW=.@`6+S?@UKDQ@+W08tf"SnN3hf'[*+\e$QC0PPWSLr)o1)I86rWLQFZH.\PtlRKLM
%Jk24aM_5TmKF0\s/s%U5+-T0\j:BY(Am[C+$kK\MgM(bDd#F#,QNMb6^=2;oo/W+U(eA(ukYAsN6[)+]ed0H`pe&-aLJMaX+2J=m
%N>?e%2?mG=c4?+((WJYP2<W;fWbp&R\Q*,WP<HB)RXC:]G-q_'gpnVFb*8q@TNt3b-Za2"jXPK6geM2:m@;1r.qd*a/F/]][p(o3
%=ECa7MR'qJH;`-g!BXpH0]pIF)J:\>CP[-p)/V4Gf823u6J-f`R#>))d3i3Pl3T.KT@e188(Y,4P3$.[1K$i2Mga*CS[`^^3fK?t
%N%,X"HZYm*GIC'<M(+ee(g,;1V?A_9Ms7A-%;^TJK5BSi"b$`Q<N9la;!%-k\Z'Vcopm6Bp'-[E:6<XVq2R<-EBuL=0_^tV2]5q2
%ZJu#cN\Kn&$%W("L,1hBUmSEW)`QI0"d9la,t2C9WH$B0:6ri.8CA]^mQCd=E%ZdJe)KLu^`$_%AZ0IA8W&EK!.Eq!',PYL]GPWc
%FeeQ7,&+%X`_Lok&/$[.FLX;e?ta&feQBsRPMm8ZCH32KZ%WLT$FfduZn^M@0>m"e&`Ef.JUj-Zi525,i&oEF,4*HWS$ClQB.t)+
%/o"qU1S6(7Of+7c'&[489H;?-Mf[5Q:].\PksSb<N^]F>YHp-"^BLVg.R!,B^VrR7(ra%(nIdgA//jCRA^GQ+Qa;SUT2Jhks6RF7
%Y9(f*V>FPKrWBnD?it;Ynt%l58YS>%%qsW5c1kBX$j;G^WB'+;LX#P[f:R8h=:n]D\_4ZMO[-3J%gI(C?ram_c&@T`nH>$Z9W-J[
%gtOIB_$,2?e[!#j[pE;+d+^1?_M*9YXqmi<nhphc7D(4PlFmgJTg[,E_DE\E)E5(h]N`=&1$Dq_[fgfK'su_mel!!iD3A:5=LTt.
%B&T[mn2fL03U%<oPXN4pkIdgr^cAmn\_u(!jq\\?oa^&Kq?Uab`4,sU"lGFR\$ufj^Fk1D(tgc8J6NR?&[lntD,K<S_RFYqNT4mG
%2r[*>gYu!3)(p#8g_)TI%_"#q3XJ)VMD,8OZn6$c=:]%U,t4hC#MYum$D6=3CWk]B"RLp<J[#c:;f.XRmGl?rc#OAcBoB_<giT>D
%r^I\"6F>"f(4Q@lXa5PWBA5BGh8.bg_kN;LdF]+$\.5jANa]@HbI4)VfhnO0%<Eo0813(7nq?5EKk.etG+U\6[T^a(34?_N5?oqO
%c,/d4Yt^Zc"gOVqQbG.iX_o6b_KPKeh?;S);T9`-/_C_ihhti'X^j`ig1d"L47$.7r<0]T8?=%VD,u)7Q!E('2\P%Pa^Tm,9+gc$
%Cb<OBF]3'mAdN'$19RV6@FcXb]hZXP]XM\f+_!%r5339Y[[<EA]\9I?gMsX&Kl6QUX+_%ZO'pLIm6Nk.UM@EkRbU3ZhO[$86)nd\
%,pilIg:F3E/#_%;'Njf1</X#<3d@.Bj^;f,3M;j@bA;YaX5Ns@0^?Dd8FO+/Isg](A*VE=2b:=f0&RIb:p"f>S5Y>V)C;%h9J'<=
%E3Yp2Mi)MaZOWsOW^j]UC,%t*du0*[^gO8XC@V&&J)75eVA-]7Bp#YgaPZNpjL"Q*V:.=;G^=<IJ1?M6%\3c(7JX6KVO]/6ZSZ.Y
%c21lPSmVS-H%4f$_DhrXbBX/=-d-WW@LIu>b,R'n>"$^l4$&TAF[6G.Bd4npOQa7uC$2jgJKnmN@\"`GZQSpKhREQ"&]KAail4/V
%lKUK8s8.DCFedE!LZW$CbX-r>-0^+P$O%t(.l,C\O^'9]`ntD?XW*fu976/4JY=+/6lQpL/S)6=d'OK"JhVu,Z86/cS?oq@-QfWs
%0q/hiLX\?0S&MF7Co8:f#/V*Q3lfPjNl[f"U<c07f<)O8k0G6-="H8O&-r6\4m952=WZr;T1,C^?^S04Vn+NAHZlEYp]Wh(+DG+V
%Sn/,WGdX%VRA!@@_OYg]P%/.f<+@&Kc;&eM=6M1p_fu9R3=DW7ZB1*:`S]?8e=/Ej@k%ML?!%dI08n@*Wcm=2?#[,cGEl\&)e$Io
%4)C4*0<&5[ZN)gn90IW)T,!MMBm+5KGQl>eUM0mDG57lQ.C6*L;_O]D74(`r"g2=Yiga+2l%iKli\\Jc2e!OW85<ofpWKQn*&,!c
%ETYG>:MpLm4-f/PR&kf.(Uu"ASJHB&\Eln4#6Pi*WlT,qZn1u%U^jsN.A+#YZ;aJXFU'E)dKma>:6d,O7-2M.3K.HLm=p^J*4p1A
%TQc/[pk'uA1KYsh"Xr+?@h,/J5J5ED"j:=6,A"@3R'L![S3WNPfu\sAKd]U!%6)aF!p)<MfqTci<?ZN3b!Kf\Fk$Q9;P()%+`8m_
%0\ukIV_XBH8js!FdAOkoKeB>sd9g%^9`g)8aWec[!b*P!;RXNVo9gk^`$SML%[,qj8mA!fQEX!CQp^h'JuPJ+^tRk<9o'N$=Y*c.
%-?l?.<\2p&hKKqDX"+uR[S!-96-,cnU7Jh-J=_%,K'Zcek4'PL@JZ*/qhGbofr^/m5`E;D@U=bV!X)s<]B/l_9b,@PUg^^qWe=d&
%E]HU1.S!9ZZMh_+>bWkXdZHaS,3.F3D$"*l1i#]NGZBWX%h$N2-p6UBVpllB[95ZSMCU*@Qr(.`ET+1X4RFTc]1&Vjd!giYnlRb`
%bm+qiN%8Ho,_#khUZ@N,`"sI$*sfNb3fu5oV"L]j9B8If0]PDoFrIhFfVWm'g*L[.kK05GEg4YI>%Y%8%K[sCN!)dFVd1`09rbOM
%6#B<"k(R?\=VFKI^h5K8^aalZ;CQ7oM?j:QAK?p_7E$L+5(h[K6S8AI&m)'R:Q\2`C+nn$XFOlk8oaJJMukYU[R\1=D6419cn8-6
%>$mI1bPk1?^&k/GM_FDV"JKU38JIlKPi[MkYk0m9Zn/N=q\^X`$VmF"E?lsF@,X_75KWn`Y]R(4Z^tXFIZfCaI-BqJFf;hf(KG`o
%ccFU],n(a5Z`>CZ^BV:6VS.]&<5j[':Iff+j+Og(`hT97"J%k*rhc]jku;L?DBg75nf1$1bAha.S(U&n<<RpL]t1[B98^'0\&b_B
%Sq;O4_FjS(OqhBHe"0eO-3HG=0%BFLoc'jB4:9u*_R>O^g[p?2O=-%2<#j0:>iR(#P%V55?L6IL#%I@P=N>&o/P)%\PWjb,Uh'th
%ORZp"&.Hl9/D88u&"B2!VGE>FO?a0TNL?Wbp^h.rnp-Jh+SZJR8cHf,jW7EUpUDPn1Nci_77='q@a>/L8n-[Q&iWiIE\6,UPBW#X
%%AoPI/eFE1^#9>ed2LTpm.CXo"r[0fk3t&0gTFI:5:kg5%BZB-IKO()/IWd_8Q`TN>'P@PP(#m+B7sALqIGsY$Rc2f'tVn(bobVf
%"!ThnBcBf%qY5<g.0qGu#WC(h&6.Z+.B*>/e'=%hf\^5<i6N+HkZC=M8q\O,5H?L3rD4fcE0?7ZbT@3#\G1d:5t<jFS1>l2M<4EO
%ill!0"^P]f:L_.6QkgMY/#b<IUN(\4GYPDYYE:&_R@OgX[ac!BS-u$9K@kc'`e07eC9?-R<L#BsHNT6ZeJps@G$(X7L<)ipdB;/!
%Chs9n[WGV8YtG2g_eeI)"9L0sZD\\bZB5=[^0(N"AVlV'+'!%mr@LUrqKWd.RE7"3g$tu2"""o6BV:rlg^KJ]1H0&3!H^7V?L2P4
%Bc`+H2bl$L-7mFu0k(gcT'0q,L%1afCsdlF:.;/OhNHf2UClc@8?0MkQld!8aP@oN/P;ZJk.?]a&"jeikiJ6W1E3g'l(d6c>TNQ%
%<3@Q4@i7IC.!,lMM2,M*\r+`6=\:QIQ3\#?H9gu96a-OuqafWm&/1^j-jmV;Gp<SoG`Y0Kk,PgABmDriDn6!.R7iL1q3@Zk_-S>)
%c&=<l=%8I`F=&FqSZ3QW(1*oDbGt@p[.$pj.d$,00+R<.\k95$`rd&JM-ZR^GQ$p#nV!<>PjUL^6j%Er@5)U9!r]GQA*=o"$%[V\
%Q#\""csMEZrc'[LT'tspY?Zl2ldo_CS_I&5J9CPjZT^@SaR<kYi"?tQBPT@2$)=4DVVrI`pm4]!@?dT/C3<u[bh+3oX.'ub.SDM<
%[8-MDMcrN]`p$?hI^(..#2D)5H*T;_*Kbn=[P3?4#o8iKE>tpX;,oGB.)EKVltD\M0bLR[Y<WbNojjI[m0d9i71&mb3;\5L8_&4]
%7cPo@@DaUW9kMK&\i6ZU(O-;<=EVR-^.",@Q>#1d<oY=AT!mFoRPuhQPH-E?$oYsLp=#TB-Y6TKPcTZ=<@C\7VWM99>T:2Y,aUkI
%h`Yr3pH1%<9afS3A#]PlUs7K79Q7DleLlK1pqqQuW^#/GBNcW_lOsIqgZsUQNJ+kR>n1cnhKo9U"5UJiUt9*`EZ"\/03bj@1PQ-$
%V]CeaCu_N1%r3Z%/!.*=!/Iqnfgo[;:PV95M+PHuo+e6()Fakf7mC>N5*1_7SnooKPm:oFU:"QVhHabD&oSPGmtV'd\1:QgLnX;+
%VC)$Y<1fMW#l]Z<E`bQWXS^R)LNEum730U,FPuk<<uXJo(5#LYXat%\6EF?gG&N1[MOZ5Q^Q1mlZp";r+`0khH#6!8cU$Y@!DX=p
%(`Fd9EhpH*7KL;?Lb(oJbW\]2RO/Q*3V"M?AJ![R3Q84MetWt`P][V,^&Y=E<m\#;0iCG]W+6ZF%%7<1Mj4+Db[#0#]=l^g'oP,W
%(BUeUeC2;iLslL(oHj2:N$'Nu']pb=TkT5>@h@opFQ'aq@cV2V/HU`FQd%kX!0:\j.&jhcCY+qFm=M;?9o_nm50kE(`QH?2B:)[k
%a>biJ+DB$8PQ8(`k!mLf(Z52(]qJJ?oWq)Vg_LRABMZ)q&\?(:jA4_"kK5gA?D(`bFm,5';pndsAo%$*VNL,)MhNH[JAAeJ2GHF_
%J@p#1&RIJDM^g*%#?:N9;E(YsWk*GbV=%L;WuDS,M#pehG/4jJUECt$FO[;FT2m52G&g5,=+nNeh,]fs4nb5YMUWc.ZVPG<[8#W.
%K7tNIE'Pf-&K?+m3=1LQjK#+F4>#9P.X(5`UB*%a2]U$,YVK-\aE'W6-oHG*Q/O4@?1t1^XSC0+@17NZX[D'V;6$1BRXTmL'?_-u
%W!tT7h7ZM1`1ruVqIT0IX27iS$"t$s<XO]B:_U`T<A4VY`>s_1Nud]1J(R*eEe7`RbH#6QHl'n&`NJ(_O4j-We`nL>!jW2Ud@3P]
%O`A:5GT\P^H5c5]qeuG+X,5]4NSkW#M&;il#go&r!@c6G5u8k#.@\&Ak')gFr\2VkbVAh2_0fbq]J9&@VuXdr"H+Z5>[bXD[_Q>5
%3O'f#Y;n[?bcK5)l5.c@T_Q7!@?6qh,*YK"Gm)\A>(.;IU0,%"R))o2&%T'`>QFNC;L:3W$]Ih%gCPksn'e2ZXIHP]6.,Xs!Q)e*
%_uFgo<H=&S8rD`0lud\oBs:YL\I78Y+Z%&pWHN$tINb/X`FKb9/S!3_(5T[nCr-M6QN'sh]j.@;anX-uH=0/M@P,'UL'a8Qk)PtK
%C7u)]1:VD00IKI#'ppEB.^gRoA*ceKrFJdAl1bWXJ"rERO_u:bU`YgMVaP%s00&B:c<@1+3]KMO$Hr7aXqQ1<]V?A1PesI6].''H
%edO(6jB5HKIDTeu+^P<r,XlSo/MilMmlE&4,od%qN;hdl4E@p/T';mk^^1B<C0kXr;%%l<*DT55aT<F0q69J0^ISH^94g"QH`H?A
%O.K'T12;@OQ,J06/!NnOB=N\-(i\5pKQ1="dV7hn1^1gYW&i6u0.4A`*FS#VAo*663=e:u":?n]jLj![7-1YslB27:\ZVVDO`X^,
%h$_s)5[X`thg,bY/+#L1_M"<h7ii'/$<ZN2njaiV1lH.j17PU8nQV2'e/>Zt9<T<Im)/<Q\D`Cl7mN3A/eg`!,%<8l`*Wh(B@*]@
%A-p.mLEB!DL8,lRC^f5q3gIh3n@5iU=TqIEFmhm.(T\#\EkBPV\VYid8DZ[+oR4f9HJW:T`.eGk)a>-S/sA+rnOX8C-6g1[4dSGo
%/:1PVHjYrMX+&CuX_$5ki>T\$PI23YO`_f1YFM!a=IRY]@-[+81JO8THa9e"doC$C<_aPa8p<ku#><r;_[(P(_aC;P#n[f-d;LB=
%E/*sr4\GDKg9),KT\5nf_r]q&\l86gfW"Tn(B7s9A-X=SU)\cC>74k43Han0%].-PC&?qFGq_<6XeM3'ZEX2doY=F2S[N0kGDOL-
%n9u?O,7o!Hb&UqGiB'@g<"ar./i*kja#k/FHjC@Q!BQYm)=UGQjpB+t(#pAS+=9R%KbD[IOU1sb@7s!,H;u?RjRb'nB<gh4m=Jim
%@2gu)S_6PRAm+]h.jI0:pF<);N)$cmd7fkcSMlGRdB%.h:K3?89'H%e+GiQr^g%fT=^7I7604o@0qha,,Qk)M?aOgRVduM!GQBtc
%2S1%;\7YB?VWp&pA^/mdAH*Nb_la&S!P2e?&B]'J[CjHg"?XeQ<)9!.P4^fO=&(0RT'=[L)Dl1g$opT=m,C2cVno.HDslCX&HgVd
%jd^`!oi%4N$4.t/<mq7GLl#QKO)pbG-W?+5lr`eIFN,H6lS3ZPPg4su7?r*tX(lu:OTN&M#Wm%1`fO8M9S(mrrUA[D9jiI2KV6,J
%A_B<cjT)[A+C.\8`+.I:;g=W+9cpdpkr5ZRi5g^/9RtU"p[/SK'X!UAjoA'uH*AqHU6kZf2cY3d&'9GuH!/D&7TeP9<!_X.Ain1.
%04>tkL^>?hoWX1Kqj+&mp7A@!_#VgIC!@;?bERID_7X=aUD@(G8h17T>)[TF/if)7(h*a'kp]!GI):<U2L*pYL2[N+.#]cLTB,FI
%X!AU<rFT.&4drM5D`5$W-Xu)G\e`r&S8/V?A\XXq`]MFt;4*>r]!Y"i5)GU(X%a-7,V<k2WpZ'qbFHe:AR-N6gg3"&U>K@q0PhL%
%)Q[O+],oA;[cnl,M84CLf-b(<14C',WCO5pN4J],cn>Wo9_#qTp[tKfcJCH&1\(pGQ.sEt^]uD1jC22+OG@Qs^2RA^9$RQ^fT0@*
%&uT:FVLf^:o@oaOb7%F!*>XlKVa4EYQJUF`KEctcMp\Y+;?M5#d2bT8S26?'ha?4H@,[Wr9u^:^cQc(p^hOP.)4#F4%Ve'fHe;+e
%-L@`r<5iH+4Oi:tS)f/.2Tut;jZ2m^e1/`Fq98Li-4[![Kd1%^I^b[h!\LXQ^4!mrr<=kNDOJkXdaH#ErK3W2?SIt6&4L<_(j8dT
%?njVAj@\B,^hakcY*o_k_j.elA1ijAi;Kl-Wa2*YIaH_'c:-Bh!rWmGRj*Qr5sCY1SpS)'_94Y`/F!`J#XKniG[V=\(D@lr!1)[Z
%/ILE(*o!?W>EfQKgSsTEccuk&_nscJi"ri4C-HG`k83Im1St=fgH6d^/_?H9\tk6<+:l3G`#3X]m^I<K1JN"(7d.F!4-O-)X$fq]
%PRu@r&Z)*Bk;)fXBEU-]N4GTHnt:q,1e\%^\U(Q##')?I\]Eem[-2m?P"'9h-Z&"'!iH3;U&HJI7YDI*6g`57@G47>]][3G`.55#
%;7(1Q\R.$gR/S@4Xk;lA,nuA>"'L?7Ul7qi/OjB*RG;Bt4,0o9J*Wn,qIN!.Y@(SCT003K(/l2HTFSX8]L+Kq[rNl*"JY_.FS$^`
%VGCO&=KE!uEo'fU%>sgK,&!F.1ha"TKs4^V#Ko-Dg=;mq(.H^)aI?$^(Qu+cFuF^^(Z2f',t).lL0FN&6L?[+N"taH'b`hVSt88O
%QGc/KSDsi*XF9PQ;h&!;ftHbRdOcHG?n"^`fZSV*<]]&Doe9t7oK;JWYd>AJOE;C;ggF4+/6B.f44[@9WHd9,_H/1)&L0@g)H*U3
%ker5!;)b;?%B4TNIj(Dam8;)P/<Kb^BN3JRWJImc4KIKuJ*^<kh_eHPP&j6504U4p8)X$WD.4JPa,8T*T$*33S!*Ma3ZG@c5"$Y]
%js?9Bqp$aHSXI_(\qS!/QLT9D*i?J[3eCrQL:P%ca]`eS=N=G$N6A)<P#-.SoZ/0aD!RV(+YYI*Ql0^=:U2QfiLSf8Jd(g3$jAF8
%P[#]#JW]OEZU8KIp>=!dA7V921.p-M-:>VC\5'%YTf&K\&M$H0D2+DALa@2k^ca4)-(\`2]NNq60OljKL)(/g-34o"]FPMkmNg=G
%`SN0b=H.l.4[jAWnCJp^W%EJj:j8pcGUGaP"X450e_b_ff]2JMrfgZ"7QE'+h9EW^'kSp4HC"nt_9\lL<E'[pA:k<"`);rS.>hd&
%@jff%;'Rc`/b/1u!EUXqHYtlq78=LDa1^O<p>,nG`dqfiE-"mM'6BESGHRr"BG#s#d\=*a'XgV7gUsL2IY0+PPUfZ>>$S<790Z1V
%<1E_dc(3'Y:1R!"!mmsL##.7:($"$"l9;V"B!sWVgKRD68S/9HZZI3h*Uu0BQNV9iU4l>f<&PL.51Cg;\skJKY3$$O:5L`9G$?Dq
%Tq`o*XMCe-1QT$[[\6'3`e&'PoZ$Z28^UocNjZe2\;"/iJO[MD%]ts%c!.&X[nOfh`';8ZfE#V5#V?:I[1pI2RUZ^S",B=7)O1pL
%5l!dd`,o)be?kL?!-0O*bh.RN*+A+''RmC,i?;&O!aJJkZ4K*HP!_Da,8Ql8!S]7EMurN1(,*RWd1pjLMhAA=KnhD+@("W!$IRKM
%&.Q`1<ha8mB<Me82OgGhOsI[!/>:`g+GX`Dh@5AbP4d_cEQr%M#OKH.E(981ObI*tCBp8ab_4WeNeR`hMW[eI=".^#Q=L!40^5sh
%[AhRSYdnJ7QBT25Wq6:6X-<cSjQ+0-m)[aK2<e%nQFL)ccp[FlTi?D%P]as>ac9E(i>nFc#&@YPWH9OZaiPf`2[;.:dTUdap^+[0
%[CXiI$"R.]SoP[XK_\7*5p5l0Mh9ZZ"[F@^2(qt+H?Q"/k[b2((9,4JM/osM@KQR^:,!H1/Nac8=X62DIii^$PVWbKCr'SO?&PC.
%@o(R+$uZZ4FbOs^c,sBkaQb;"XYIjg`JW`7VH)gqkueV_O"24#KdpR!kYe=DHZO2HohSYk1$]Zmo#Xq=Ju<cq3l-b99:/G1&'L-T
%e5A7Laq7M)OQ.)B_HkUFR]5R#]YEfJrKV['Xjue?^p=AefoJ_NPGJC#WY8+`TB*8\JF$>\c"'Zr[)LOp%'/3ncjE,PPfX/9%-B:?
%J;:u^*KqnYU&r&rRS(VhB0egbW>h+Lf!2#D@1kWYDT+4jHFPJ1Bioc#qee^KB@29Bd2B$#=k[PgmVnMZLP6Gr`DCL<%hM[-m:H%4
%@`nW<5%17YFK%24P92mnLQB9G/60+CT@fE?_(]r$a\2_b',r^k_<Jr4jJk2ZCTI4IC.&gTRaf=JVm)b`HQbiDTp,WZD;*1VY'i=A
%?p^#eET+&ZYg4miJ>9.,h3"Qo/8haNnNbDtj>,4Lo9j68lsh$a)^j[`?=o>c>"h&19gW+mX6H738AYd62SBIKX.$,KY+gl2j6Qko
%Lmi0gRsgJ9fEWmdbO`GA@A^t32iir1](aG&:Q$r):QsJ#3(_i3b;nKrROl&92rK`tPI*:7Qupquh/U\(13T,C$[[:(.tV0U.lU6S
%C0L&i%9mGnd]9BEXF'_'BtkLWXRb,ISN&1VKA0*(/C\gK>-.+C+OOism$SOGY9'!,ilu"iPrW'XaKb!\_L-:"?p/;^Ci/Bm`brKY
%*rCtnS66RK5q^]$3a>?f-=K17@"jW0II;XT_&G(%Wm?kJBuuO_Br'>Zm]M>nW_&p8>+10)<EbVdq37tIFY$'`,rh,@_*;Faj1:@e
%'t:DVdZqQ!e$pkub&Psq,e7BaG3P,!/"%$c4ru/>kU[XIK&]Zh6s?$#14]VaFnW1d-'+!s$=m75cC,`Wf^21eWl6s,lU$La%I"ne
%Kf\mGH:@mE*62cP/g9PSGV>JMdVR)hBb[Si0NlFj(ihk.=h?.IMS8[U?#jB4!od&*9c.@=j:\#):"@%GN*42?^7>DH(5oVY!V8;%
%lkTgdPRGe%1kjkG;BS\;G&Y)kSe8RQ70$&d/8o%Xq8<IBe3kaAa+3)C8/-1\U7#LAl3%sT)i'>nWl/gC*5#BM>&=c3:OF-9E0<^r
%P!.ob=q\V+p,cX2VA2&3<`E4]9<"u#XO].d/k_<;-bMdF@K]HO"j+bXKcuf5VdsrYfmbMp2;C@ac&bA'U%6GCZ&CkOU*S'6HW-?6
%nnaSF%#s7Sm)b8s,u3Jp>`Qao&94DB(,;55J'1+&E=(sU,@Fqm>>2Jap;X7)bm/cL1G(/"ma6WLqBYE"YpCsAN*i+g"sY":>L\rQ
%`TUM3pBp_'X7%+c;I+HiR8b1RDn#.C7-"sB<$XNBZCM@N\/cgR+fN8^+0AT:%$eMsS<kP>_Q4=IPF)QT#HpEB^n^(9]HbtT%6QTr
%^e4u.mFbHtJ`2S;;Fi)gUB4JJ`16ij7I/QSDY4WEXIJF2K3a/k=K]b7&F!/j"[SC[L13NC[J>eWEC3J:'PGIl3Qt-ln]XIgN63cR
%B@iWr1gXmY%Bkr4J:UL9++PB?Jt=Ho6r$Q;/C^`E\MD<&^,#ropAIQ`07)8g-D\Z=;1?J;_b5Is^!9o0!^7joK4*YG<R7E^b"f/^
%Vd&@,@nP4I:5`Yu)_u=sR>/c])H`)Sg!sWE:DMh8I:f;T0.A%'#%:YF,B?W^-6mIB=dV;-"bN&3D=&i"'oaL#Bm7X1@43OiN=sA*
%)LCl467q@r,rok!k=o(QS+WU[@jsg1A$&*5,Tdqf%FhXKY=`p^$:fBki`-"pREqVTDlG2;d$RXW\3pQ(^*JMZokD-Bh7cug$TaZE
%]sq"%MQ2A>;HM?2Uie.`it30*KYM0ZdO@Hbr&pBs16fjsU+\Z8@:o-l$.9Pf[l@VTlO,/kZul#GJafpkjCV.bqbY^?,egU?>5TU5
%]>,gqaHRV').o_XBVA0DX"oXG;HfCP#r+_%*uQ>W)"[8C3/2&F$5$BE'V:mh.4Iru5eFO$q"L@3i&PZ)OsO7^S/2RtR(R_#33jue
%Df-M\M24<Yc:t->Oi3QO*B614a\;A&k.N2JDV,`3[&FYdh<(l7F%CkFWA!VGHuDICa'X4uOG(eI'^+CC\'e,s-#-J=A)mtN#h^:'
%lU,8BTfT)H!o'MQZf\8q%9K'qLC<L*A=RCj\mQgU'8N^U$#j3?pTche.e?f*OYq/'rDO"?\c>Th"(I2.]rSUTo%u-ZEbZ2*k)V8B
%PsdE_6EXCj?lE(3@9IM60B$?oFWqd"aq2`u5VUg'h]m`rLoXEuBKa/+>-FqERob]RN/#U%X@m$-`0utWGs?<9g,seNPn?8/!q.Mn
%eU+#E/;U>H+c+*u1-L`O*=\Jm41EOY8f<8bqq+%O%XHA3s"MiS<mS^GH/WN*;M0N!^FR/tote.^&j[;!_o`nIYa:>0)!_>#C7GVb
%/3fK6A-94p?&;saf-!Is0RL'*[&]+,@&?;I1]h,&8UYcl$/]tUeC(=bdF9k*HY3&,/-AP@WuAT)e\(Lmi;]%ZlA[@FN++E__!4?u
%_tZ.VG&O"t&k)SnZ@sj8nO2lk=:ltXF>9c_kk/R0f<gWep+RZ$!I?C<._KHR$"qd``3)Rda(!$l"I9>7c-\1Ccr?rE;s7&(o1(q`
%BTn_V7HGQOU=?h,n`K=P.1f_VFl;j0,!AW>$'>J!XMU\"+#O-^3/Orl1p%mW=p[`%a<tFq7an^]0qhk;@pl/DLQ#Hfc&tGY**^Ws
%%Egphi2#"9[4X:0:0AV3WC`#*Jt&)aBrHOJ&(TsVn3n33,+D-&._JHc",#epT,./:Uh+RIQuNdL..tOnZ0=a1bTg?YAB.Rqq\*Kj
%CY=Ar5bJQ`@q[m98P.<J^m_V%-E=?FSeG+sM5&dZ?"m=-%h94O&u!&H;&isf,ZW.ECk-!WHD)+Zl]:NKh7KdgXZ!`3@e+s$C$e'=
%K,od0^b8e;THu?)MXXcZ9Zuks1=S/g]Xq,h[38);.X0'!pfUUj4nVL^F"]%+Mh.Yi6g]oCJBjEuBh,/\*a$!Q-E,1`2S4.SMcd+#
%I(ch"?/7AI:FdrLfh0o.JR5qYR5A%CM.(rPm5]iYJLW@#%4=Z.k2`T.9G^ZF@0*'7MN<q.XK'q4L0\MVW`j7gnU6p+*lt98`s+>0
%%`K/*3*e#?pn:VF3%St[]2ic]-2kg[g7X(`r?R;taOBF$2Cu^9O>V&h[7%"f5YZ$Ia;W+7.SPcfMO9]0Je%%:P0.?\o>n%)/s*&i
%XMq@/D%WVFVO_I6;5n`D5'W1ZSpkbe*s/Q'?<mcG&(O#gEf:KXl_ub-:K<YK@.u6r,!4j.eD_e<S]*A.M+;rMX]1ZAJ@V\jMS>+H
%r*g:fM,W990=6'nY@R9,*fN&_e3>ZZT=f_u<SaX%W[-gIMQTFm29ds:L,d@+?M*l$G`N&G@[5]RicT9^.?e1!_Bkuc(12Dl_`Z2(
%eA]mZS@MXmc%rQ+XR7pQF4IP'nDei7Rh-lg&i-?AiL2X+8)cSS_*_uMVONJ?-*4$Qnj9`mGC$rV;+[2Wr[c?L[2Og>BW[4;g/oB8
%[/QYL=[c=!Y[Y^YaN_e)5d:QB=[nI->hJGf+aQ9$mbDPS(d5$&eSe1K@6(Dk^Me[,W(U4uGZ^ZNV;nm<leYi<r!AZ>PaSNSA#Ne#
%3FKR<OO<St*&i[qTLaHcCTOT,9/N1Z>?YmB!RNdhmB\6FYuI4;S$6_m#/Dj5RUC;29X-^#<Dt/F//;>a.ldH]8NdV#_au"[9A(s:
%N`4J]Zko-PkaWO=,pnV`\;sQ5AEIPf/<W>]LZ_-*GX@3Z>;fiX!D70P84DADJh=t0\1EJA.gPTeG\PRR4298G()EZh^p8A$Zn+r"
%[i<=.H!:c/^*,'JSoFId\F;CQ)ks_p/shfG-lS%=42&Vo]O77ckcUiNfM*@S"=,(T)/ot8DPoY0fBRXbYUMfR;Sk!IC'k'Q7=OC+
%gr/'2.>2:>SQ='d+"*IaR!HN<qOgk24LlXXE#'m[<^,^&Vg%`a)&3sp:a`KQ`F!:%LLFKeBn:LH:[d#aG]uet>55-CSLiK;#\X8q
%(>#M+X<+"Z@YS&+T#h@eD3p,Y(jRIYMO<[>-YjlD][7_<Lp`:8StT`Hf;Sl@Z:7R`]*Ll@;B$JHQVG+A'`lK%VS&\R#K!c?N,*1+
%.F"8)1[Z-_l$8%-`aNmKf@$Rgfk_iH7*$,4NBrm@0B4=3RoNRImmrU6B.5X9?VPR<QeVr9>*Z`kfoBY3l;E=\ltP/SUbl36EsRfO
%%BG@5'8p_[&%eI^]UA.?cqW,lJZAg&&=+MS`H\]3V4!?VVKf2IU3UGF[^:p&SR>rCO(@W#&KZkq!'<7f,2'56R3$qs&T1Zp)O[Vn
%m-V;l:V$T];s[3dq3u'/'a;$pX;SK+/^K.&6aWSQ%?SD8DYf5SUkD0<RM[/VffHU[=,YhVE_H7.BE5iqg+=4@L=io=+_Dgt>S/#&
%*nRD0]%'"4RPpHpe7uI:E)/@[@*tdg1/p0:7.O;Z0WebACX7pg)!k6i$_9!RYZfF4YpoiA8U$L=9#_#GWQr,5B3;J/<.a/MUu$qq
%N%pXcZ"5f2papi4>FSj"6j+%liP\ro)UI?A7AW0NAMG$lek$=j`>A]mKZ%80B8G;WGQe0ii>p,7PQN:c991NN_Do/1ga6p%8NJ7H
%IuPnH'+f6B;i2h5jI*%2Cd/A]O'qL\/kLZ@&p>`JR_?;U9)"<uS?:(V$]_aHls<pkT>.XTZOJOTdQ>[g9t,Eg_9kVpj@H0rcjh"3
%q%G+D;kFH_,@^$"nkbZ\o0?5]2V+KueT]%;Hi-BXnpWuqs'\H>0:]Nbbn5A6]n$:1&NJ*f05'02$_UaDk%-"9lSN\@qsEU!RDV<;
%5P)`I7qLs:k/[R7m]FK\A<,am7EQF.3=<#"4"?89<j1l*R)?_UkCPGOI`X'Z)">H%7j-!QFi@SaG6%L\P3iBnKUWg'FauJU$dW;R
%aQAh9a.^;8=!^-6?XBRt]@+m3<UfRZNiKoJ#QBiZSI<"K81=7CJM+.FRoq1h;l+!6U<Atp'KhgO$,QsKV(H_5o-sK//r,,3i7\O8
%;o)9^q8YHJb8mTsS:X_e4:CH,En$()TC:9MC+Jkf""e.E^,@pV*1cbCEFLs.l;q:PD/3un3KB57gU-MuWSnRmhQ"J-`%"8Zb;q/2
%<K>&Y&D:JZHC:,&Bp6]O./s;tmoGTs`K[-Y;%ZSFF753/'T@(VieQL0[i<>t^'RHK2NpdF_N$#dqFn&Fo&3Of#F)"OE\'qYaLr/`
%]SqlVl.IJZZWsm$jA*5q3;KL^a'@9XBF/d:HHul?D)oPoZlkS0@c7Y@a"kR14E8K03_2;tHl5B=$72V&Vhd9ls1lHP&K)M/etjG;
%=!IJ,)K6Ze%ZElDDbD/IO@o)$,@Ao7oR]QX8iof$:*XC1&7W%"1id@E;U)I%MZ)KW>GmV$6HIB97\8E*%N7>Ym/,fsEZ.UY4"m\J
%&GZ]'Nb(1;(_.e2MM_!p(D]$r)iKg'7]&U7+1H;*3W#4HOn]e_DIs[7$Q'A37EgLrIYX9'Slt,.Nt[A?SR*]GNkIJRk8+[i;!OjT
%3JVuNcGl[*-pjX*kX$H59QEI]0.d9X5ea,]lcoKN=M;Sh]/A7Ek4iqd%M*ZTO/"Eh=5OK0?X@j63pSXk_7uY`Q_T8*4?f7<63J?"
%oeMm*([a8Mc<T]rG.]F$bCgmslLG=*]LbmKl8Zj2r-='XK3Vl63R5k=k$^JEN]5pB"$$jDo-u[/'R:h%-5LRUgVGphSE`f5p!1'e
%-:F$>?P07(9&;UE*.`R9E%\53jIuAF3,0FR[A0'oJUfFr'?ad9`f[]=V6>NkX+F0a)+Q]#PK%]S`fUk4aeeX=;%DNFY*X\!!t<'j
%pCUlod9,i]`&L]Ch**X;Q<=@/(s!";NeO1?.cQ@2RqX0G_Mc=>,G=s$(XIN]8QiqF9m+8fJ'W2k&R26_i>GH9Ij'`F#\[D1QN%;r
%%*KKX.h5("6g+\(:5DTL+?<j\bb/R5c`tHkV][WdENGN5oQ?rhIZFk+#DKLPj3d8p`K>T-lf2$3B._;:')(GsLT`OSjEiGk/=:Z>
%?R\h28-`&5EZp8A<mK=DZ/I[C1KYV\EYTRA;oG0pB`Sg$_5hpNH\T?B"_WKJe.bWID@/+;\XZ83+MJ:tI^g2G#!T\F][Q-(XdK1R
%$4h(3Q-@q?^lrsC^e*15n(^>YLr+!EZk+$'E&^m_Q80(3SFkoS%q/tcEE4Z0BK-hKXP\56GcSuT?'+$Lg:&M?3"/BC$\hb<2VAMQ
%C#K3)A22#J.94H=B8$HHA5J+=.NI\^)r!dgYKd8o:j>]0T0ID6X/g@_'96=&;/n9[]&HZY"VM;R!-uE+#d9Dk#9pf?4T7YQ0.q]n
%69&/u>2?%UiTs\t4iHK8kG;45NX*n]X>/YkfWEe7G3'_#GFQlH#"LqXZ`6],nD[p=1D_#bJaCW#a9II[;MT[ECZBhsJp/TEa`qcq
%RZ23YeMZ1tor9tp_7@EuRg@laJC/W"LU)Y9*4W"i2\"R.QidPA-jb<5JVtkc;;_\-h[KXB(RFJs_!.nBHf.RL=8)&>7DDiN<m)dr
%(uUT$Dl]-Y"ScDmYtY4*9'9F[i%FkMr\p0.)ubg]WP5mdp0"Eh@"35RO^frYJ7bNr2brFPK`_GTh6!Q'F2,V3_1%0iWS^@B%VL&C
%(7E0#fP.pP'q<=;%c[4@S:KL*FP_5%b#cW3qeLJNI4pHZl6D(4A$&0_S?op?7QgqJhXXeh_o-$(qDOX,c("BSYQhY^407n'85+n>
%"T/0"=[00h7Jd;2_'\+Km2Kq8='H,tXEF"!l/YGALgO!9=KsYNihZ$3+4k%$pkBVf.$*e8^/8ci37L#%+JDQ]NYY)I^%#8YQu@4G
%Q9o];pH^dRM_,:j<"BWD>U\K`aAJ/kfeA'UQ)(gpJdPH)?P20u["]]NQY`K9!VjZBB'Q9Mh]&:*Jm05`?*_o=:A4rfh8Gmt\9IX9
%K[0;:C)%b&D]$.3l:qWEBW,'QYW'K&h6daB(H4e(/m*&eP,A6nOG63qe#o#pO@8O1q</1Y%]brr5d/$#C1hka507Tp71nUuPd-)%
%75\0JoYqYO@U+H?`T)m%o7fkh`T*!M`W\n"ZYMZ0l^qn/]Z\a]i@OF/jdf9*:sj7_F-8Hh6WafYLi+o7Ge"WR2qKG=AF7ZGE):?f
%/gTn&(!4'>`T\E(rLP7J?$-QLWnBFS]WL)>8/pVaKccf.43<u_7M\*k8Da,d)-[B02`<L/VN\[_i&RcD8D^_Z^;,$Lp:BE*,k&Zd
%gm7Dj]^`]f@CrpW(Lc#_hY__X(4D]\pr[7Sa;\%&ll8BN*E,1fXXI\3]ZJ2J(5Y<5P_C$473HNsO]],6!I<-f,`mYkq4pL;*,g^N
%Qik'A]IBrPEY#%@+fW<>"NR"$n<:P)]O>FDlem"dFF2LP*,eB&$kR^CGZ1qe;jTK#M4E\42THbTW)X7338W/"X+V]90JeY"(iKLN
%$"8;J',^tsNq%j/l6(c/1#<U.PO`e2Gf+@6>fV(f.`XfW0]&[tA$t#.j39_i<T=qb'YmA^Gf.DVh%et0$QD.";'$;&AW5G"h@rek
%:AdfUB)cHBX=RV,YaE8gL%.X"UXaJ*GU"b@g4ji*XK^.*W*o6ujGBH?hFg8C+F#Q=kl]k'j4pJTYN\han88I%(h@f=2m.cHdZr^L
%$7HGM'9'/Y".)FE-Mb/R,u_Uk&ToD`hr3Bfj@jEDBmLOb7A%]XB^fmOD3BIJI''&b@kYR*(MG`/JlE^LZ^VOsehT=nS%[d;41[,X
%H-uGl>qI.QLGr4@bc(p!^HII[SSb]jC>nfQZQ6YU/L3q@_7?_aDHL%1jh,INa5YC!lc-,2.FF"'SLBpdX@,dRKUb9m\8IdGPbd!B
%DPQQD>?Z3Y,EZHh_$n9aXoo"-$a(F\X*A_k2_Ci/$.hm=Q;DGY\nPb:QK,RP'/e_'R"C`">NO6If8[SSeZ1a6S$a1>+n0V1Wk>1P
%g9bbKMm1XMES[S/Y[;TZ2fFkER\"f\ae8^NlXkoq`ql7Xc/K25;`OB[=[Ee#DfZPG8fXAQ9adqW(LB$([1l=pYFGKa\.!Ie2s)`n
%pq-U=9k$bpR=O,Kd&N&&\"QkEkt:<>lbaHs'>$tsWsrj,TXBZh]n,"DRTgtD2[s'PZhR7HL9JO57efY@-t9[YA!s4Q1%Gq9<`:RV
%2R/aP.VhE::dh%EMg?AIC`O9$eJDc*RAUk&(>D[)]S>d-_<CV0A2g"4&0KiODHf%*ib`Jqir)V)aDU>C86Ce3h2I-B,8@GQb8_mG
%De(f7kD#fFZ^^f5qaSNjVSt`R1UES5Wm%Z#"c'nq!nkg?AS'p+fkloPA>QX?4AO)r#.!!jr.fU&#-s`d,JsWomDaQi7f<n*gVP-a
%Lcl'7&0*,cFGg6,2>oPBgHm2\Um$=PVs$VqAp4A]K%\E,$ko6LAiD?mS2k5*doW=I&dr#>^+A3U0Y=T?W'!(YItX)NQ,=6f:"11j
%U^OK_,0R$*A2i@),(9UHSQ^(qc3`1KU+l_Kh1K-'85@-am&')e*CS2omM%,T7s<@ue?C10hd872<YQC=q41lSh8i!=i6(U)+GEpC
%PWOM*0!]-d"kcU+)k75fNLukY/WeemE8nJR]4!%V-]m/k=E[T`DR2%]G"-Z87nMqRA2dD^'Q6":)_"5A?$HQs1F#N?[0+%-EbWAL
%`W4)KL^UP9'[I<5$B1;,*tc,3ocg4gYT).\OY>!D0T^J;\F*\4OF8bg](.ublg?qpq.<p*X"13^X&F>+]"tF/'O>?f$uOWW%p_HV
%,[Ja(X`HJH9UtN)>WCQo.Sf`^hD.e"D6U:H@IG)_4ds7WZ'dTC!U1*3L!dT9L?K]8PgC#u!-'^fH3SJT<aJOODFD%;,#3N'(i1*N
%j12E:kC(Bl:R;qZSU2E(q_)pVi=4;,bmal;[>P`f)o*7";\q2J=j5D_GeAqk,eG$k.jG@-H,amB8BRc-\RDEd;kWH6R'LeF2j8S.
%>PZ;rktnji5]Xb-S`,:D%HJPq,9=jb0Ip;e%ce]1+eO#75h:)*DAh9qhF#t1ggILpjP^1#VH"1KWWfW!@9A6C^)8K-Fs1jL?QTQl
%NR4m%DA,ei8E:Qq2moW$o-Xl(o'dD"&;5CDZ$U&$ZUspq)o:@D(>9)M3$FS->l`YB/W?1Eho;e\JDg3>)!KeJl.Z[R%/;a(.dPaR
%mIP<UH98\t4*c0t*m6Ru0gK!ZgI$:pi,0(5M?oY/MCLU.?`;_cWsTt->?i`aEZ9$eC-Bk\D53#l%GZ\hF0#JQVi+h5]PUb2*'%pV
%FWJ\63,T[7EN>'\e$`+B_ZbS.[^#I:qG"'Yq"oZshH#cI6-&5)[E&]`l-Z@9B6uXfat_XQR]<-lG;lCN5Hd/9D4#/djDd?*Kpmci
%=m4C)>s)W*@5Ul^A%#g>YU)!XgkLSD@C@oB>$0Q7gIl@^TPS+`A8U5MOR:dk>31Z0[Wu>pb7<2P"CX>(HWSP/l/]66A=F89p*F\!
%2BV-^Ms_&-k$qt>[NO=P5<+<WA=F?mOe*`NC_l;;@0-(3Wk_#amJ";la5L2".3[H)5VcGbJS`eOfiLJJ/M`a77VXa=BI1`4a>QCp
%<&ZgJ)in.:+ilQ\R!`<pN,@>PeT$MP]pHjdfX>^(%5CV/i9^E<SZtlsYFn=;Zs2Vbb1KHa[gC&4/1,7R`\pJ+Ver^OgUL,pff<L\
%YG#C0*3fsV:o3#]`:inU6Wo!7eR^&Ha@KY!F?s`8bX--PaYP^`NnB**<,NMj2Mi<1%le#[Oait(FOn%N6S-H4kCV@+.kKe<&DNEd
%>%;"b[dfjsFE^#eUKilP1hUX"DTt08.S4:I]LQ&;2DfH?M@s57DE*CcVeb=80i.dBf4GSN_n"g8)+:c*kScg%iL9F5f/>,o8]#97
%=Nt:.<Z[bg]Njs[N/Ou/M=\.Fg_k/A^@n#@5sGCY;,?97\kM6[B4Nu.S+T4l0\W#!NAa#o`7BYSP`ZYmCSP[c['[i54q94_FL!gJ
%(TXZORD=`hlt<IZejkIb;:($6'eO't('Ce&%`/CL4k*plR+apHCOst>OH#Bq'2]\XJN.O/:n.<B6bsJHSmB1X.o.*d1reaLVqm8d
%0SIn%8BoT5)lCl?<YQg9V2aN*5hb$-[24jH(LAU!dA^8Jrg5uK>__@dc4k+D.2ZQ:Lc1ENr2cE^?!Xsa6"lH:[nM_$fJW^<*0qV<
%?&(jKXoN>&]rX%mJTGN%=o[mam-8nQ$U#FI-%]8>Sdgh<e9TL8"516A!GA/qfg$A5AiJ`S3A_Z_.i-iFR+\]I&X[>&+gtj1cEYu_
%@i>7,%*WT=5m^k@;\/$>DT$Bu@G0%Ia][;&Z-kmK6iY"pr'JQG7I]I[Phj!c\oY/S@qMjGcC!t\J-s>-2kSQhP)V7I_IN#h4Jj#$
%8">^$l"LEl9qSA`&FYLtL=:)""GMeRH@3UNO:>J2("Hq\2X7Cr"J[sAC>OD:FR7PCc9B^^@:YbIiRl>#RQDJCR@.,5p6$ODaOj.2
%L]Cr&i'4]efM&Xl;Va'Lk,FI#@RH^K_5`L6T#9;k#`HA9F6Z`kjT5-4'H="mH\m%o"-WL[\6,5Y-b=dD-oT<YHoMg%O\M@sUOZf0
%-UFC%6H+]4nk)Zr-A!c4FYM&ES(gUO#OKm]I7.MK@Bo`rA$Ju'.f9YigX]*"DCd\ei,jeqMes.6U"rLm"lM%;o/L0`R<Z1&ES_#g
%4]c\0&-'^UCq(I$E-T3.0.R5;-oP00eqmF$lm5BY'oBU\J-QZ*#(m'dLqSIJ]^i:04^@j'@4u7s46;pY9-uqX1i,K58?Rs^_;Sp+
%=3"aA13mLR2V/\p5t!hOY3JL63,D&a]BVF9e!dOAlFS'lc*Jp3e$/)/QW<J,drLaL_ktEJTu1YMZH@(13,BA9=Qu5mfY$iB7(mQl
%@Cb=#Z)8]T_I;IlAH4]/fPn[,Q0b#\fJ"+WUH2XJW;p\kYj&Re;-e.nFR$rMF<!2((KU?E1i.'G7sDdXoAiNs2!f=_;DMq<XFfE0
%I&:?$C'0$#fX,`X^gOG,OY!SYV.%h!c)ODb[M2U#;UDXVZ-&"5%\&C@,4:;I'.aU:VHL@V^n="[fnG4+j`U9CGDgJUN?$6][ZiTI
%l,(>M4=5o3@7q'2Y;h1p&=ZKWN^jm.2F0VUW>6&7:c`C^+X"4iBW<LA2\;J<(]M$sfJF<$YIequCVk+aH.^37l8a+5,'b'+o<>KZ
%h6m\%Rug;3?"(8U,[E!"^Dqp7']$;2Yt6XEN\iY1cGt#N2V+Jn-=)G[$u6dl=@?u8VWO=,&f]4($aa3$fLCskGpBSnA$iGfVfu5k
%Btb^p9cMg07Ud<;C]grQUK*hTJ_5q+4!'s>ig-rPEZd9,U6a3[3,B7\Y-N'"4F8EH*/BO+R$E,*E7cl1-`^9Dc&:P6_ktDg'k\LE
%bX.O2%\)5+h%1'c#Ib<2N5Of3Lti`c@H5J!-rN1oD7BSN:M(3DnIl\FER6S\:p+k(@;Cb4KX"tZ1#@c>-d.p6^!0<jk,Qcr"X7Er
%]6e*u1HiHI88Nk[-ua,N2NsS4jbR.@8Mf6=LLN'?ag]BbfM"so.WL#KRj`cf%E2pn#_Q"b`TB'`4("r=VRR[q;mCOR18eS;!]F]'
%6cCBIeTt8PMTo*7>;S;SRpVqK&'eI=/.Nb$C`%C)K8Rp@)*;,/W7[%gZ+ZT9Z"^J"cEPqXQmgsQ`TC[7:1qc?IE`^<$]C"SJebk'
%Yh6mN<HViZnfOZb=\A-bC^bpheQoE3e=oc,j]lU]RqhpG/iEed7(Z^6fJ%@I+'`Vcpop9H9oHDd4EIcQ6jegAMp64"'r3Lt<n0*6
%\_-P.R5T7A2VEKE)<b=AAh^<[k*_.@c-F;j*6;02cGeq*A,h5j(E6t/hGF=](=RRi(Rs/U_fapIe')Ie>\lbJNjQXT<(-FA=D[7b
%=b6!CChShgecZeY\Y6*"/Xq[C(cb_&cGaBqo/bp7iH5QEK6ZNf0B#I=)U4NePo>Ab'RO''rBgN/mon"\o"EShT4$KkqgPnB=!VtJ
%>u$H4LlI0aMH0_^]8!(2&%a@i&if6\cudX=VgOIS%!sK#(dMjOq/6u@oG@!`_Of=_iO#*5MZ\Sp<EsUa?r'Q8$%pLsV.HQ46g\@Y
%OY[-pRD]-BL'EWISTCX6`-`@(2N.jr'EK.%W+0`E23V1Dgqd@\m`@T=Y@1PuP&%sF\%VrGpbf>9=9TT>)SJnE:lBC"^6UsXY>MJh
%LX4)ocCt[:Fn%r[([s<C?O01ap6t:0=uQ$lW2au/?C0f'VhisD4#oClROPCLhVh`V(UuHm)FY2G?9@Sd#_-lg?,K2LeR@(KQ&?-a
%7Ttb!]e?I&e,lbb8_6LOfYTnW&h7eO=m*Z4Y"N;Ja':EF\B:[RG?:YJ+P0.)e[6"@ON`fhkCi.R*T.ZOh6eX:^,>Uo+PuY>3&'BB
%(V4`.r\tY&Dr-K(g"&l=fG/7_G))[6@+5LORk^FWMib[ES1e,_/CZ4RBio.X":Am,KUTG,Xg*%Kr17d?f94[i"8%k`)rK'Ocl/UJ
%./71EEKrH0ERp3Zg6?l[=lYCOqR\Lk8jQ1X#X/?!P_q0lF_4dWJ1aCD'K%;T`&)9H!p%M/mb[WU1"O/ME/Jd^5iDlUbq;#q(*HkL
%m_Wj9SAi;J(PFY&W14Qm?k&ba':o]<DW2%0psfN"+SI11F`Smse#Ss2EA-fr=BUaSltT@6)#nZ!21@+\b<#+\a$N9+Y(f_Bl@sA\
%R8I=PY1.23:DinKBJl/Cr9TqV>pL5t,-+?nEYPbsFX[MS'sP8oMWt8E%ciiFWaW,g;9;*@(b*#RWf-TVE*>-_IN/e:<ZSF<$`b0\
%G#jBtP,'9N\k(A^lgqf?WjA`3SPu(b6/e2G3$3S(JQ-9-+p"ZtJO*ON<+kZhH9kNf498ZV#,/X)q^"LMis9gp:Ye!*T((5\"R2f_
%jmn:lOss7HV!/dis,O\6/MWcYGjK*Y"Kfa5^7_GAo<RUXOK#9aT`pg0W.WWc9APhG#V:,H]^8[58SG;(C+D`8'pG)C$/;4?;GU2%
%mLlLMBOTp0#?">L"<C#"Z2$I8C?`3Z76S<\KM^1OX7*2>l7QI?OJo"\$kP:[&+=M:)4C#89mk`bZiWRRpEQZ#DaUI#)b2`='6Web
%CC+Jm%7`fj%W)8iOaH0ilKitOo;>aD0CX/CVc!KGXV@$A("Pa"4bGoReJn,jHWou_7o)'u*7?00gQJZ#461,)\;[`8dg4D\p-<Tf
%2"di'>=,AZc%U)W3".@h5LIm-n%7q9r+,n`k2C)r7o*2tq1:`rTXXtt\*Q071Ns`<$"J#`3t6@hFds4i\p7HF"Zd*E#X'&<:'1r7
%BilOV@2R^-09DW\*sA*'$CKg*k=m1@lJ7?+MPkaaZ/YG<_/_pY72jFO4jb+Jl'X["D+<N4CY>NJPq4,!"\lnW!S0Qc0GnS,)(mUe
%=b2%<9J8\OJhi>V1^an11].?-4r;62<&nSFV?p4nA##ebqVX2P+\WE/0Z)ODN>d?30O4D$D@O8Ncs.[>BS_n`QG1/2+YL27OfU@<
%e!Qi*pRc*(Zs*V`4^8Z]>j:4oeI,CrK'V^+BhVL$3B^MABc+K#j2mY\ShlCk*j2D],i!'*XBpG*!.HZR,b?i-XfN:F3,*b1?2Y[#
%:jP#[im*ab+npt[B"\%TGA,D)+7X+\9R9a[DAu9<^$&\4_ib3He'dDG8OI+T$u1HOVr0(,OEBF'S0K%&9ZK\"ID&^>1s3:j3gY/(
%+Y1rl+Upe>`-rr,QUc:j+:X4ZiOnBuj-\SGiCC(mlV)\WKQ[%'l-[TG0XYnO7g"j=eRmCu:l!T%#TZ(9LqStHVt'/+)niU>$Z%X-
%.9j>\UWEmVgH7csEDe@[F_:7q-:kj+UR.W)JW*oA)<Aa"o78eRH?uI@H-oP^Z@G=>n8P3m6cmMHQqiPD]o?!!B0[!r;gDe?6`<7J
%W*>Bd?RJZ,2>1P9iC"oO`V?;adJ01G;kc[@_i)dcOD*^q]].^+Q%sltNeg0)N<RrN6?H:R4UBHkbO->^*JOqHH<UQ0mUA`kTbo:j
%7\)/fBQQ>?50=eF;!@"K9TG!1Ko9##1jE;#2j6fn/=^b<Ht]U[XE!2:%uk-<r4'O0A+aI,<[of(P!*(/cqQ!Q?pfS3A5.u9L8Lc*
%WVha1mS\B8)4J`2(&tN[S<-lbmC1l*IU#L7$ggUIi'MMTgrCEd1`"eU!;J^\fqA\'6<>U1Y=rVK]DUI[_0B!5OO/2WUW7k+kNele
%U&SNKoBl=&IJ^cDqqL\2^OH-XN^Q6eiA\N!oD0PH-i37SY$ZQ"qp1o7rq7k?J,/>)Iebl$D;)c'r9^uNHkj]uZiBRlp![!g^O.m;
%r27T1TDeC0a.n.\f:W''>Q4XQ+Sp?Ts4mV>J)>)BqPZUS]1;nmIiXTa]^>>es6Z^Kq4cXkCGZU8]mU.)BbZPVEVm6h4rl$BPIou3
%*!Q`3PIj?\O?F*F=ss.?\,X"P_9D*_BK)@H5HnmSgjQum"5r@N9Y%8?n/o,jT[UbK'85l,F+TIWf'*esFI<@or3t'B`nN/8nUSF3
%N9s`lN!WGF@m@hI+ejrnh"0Asck#""^U&DV/dU@U!H7D7d.;=pgm58!-[%CX0DH+SZ\Y]OZ(^3SrT5YN/uTV)qU+%I^M)X/^Vqf;
%^4dHR3-5Yrjq6u**:O:%*9Q4H:(X>Z%s2KJ;$ThgHoGs'a7NT&M`)RuCYBY:R6(16fleg:p?/AfpBH[Z-T/bc)h.^jFPe5r)Wc&O
%5b6@=e@5b)K\@%34h1)'*r@0k.NW([r[@r(pWDn!G/%VWHIf;1IrGOJkRbIX&'OX=qtGVWp;_0;Q2LAg]UmqM<&2=sj*,TdW42:f
%1A9tA"84HY@r5Cf%Z([a%c@<3)=3PS6**4b<*8#Fkc:r"'nt6pQ'U3MqcmYom%tpXDYMgC?>f5C8]uK@1Lc>emhn7K8[UU%OX^*6
%6[LKcXE*]S10#te9?ZJl4>+FZQi.T3`"iG!JN<R/)s0@&A)JJr$qBH,R^Qa]qJdJU?\@#D`V78Fh\ahCN75Q7o,,:2KX*Oin_E?G
%*8s*U?:A*Apt0nfJSiY3(C9oc]%b]^?(FrGl;=]p+5LHp80-bLaq$G>Uc3tGBTGCIM_SPTX"ODN/7:bN\NLu4b29@^[fsdA\fN/P
%3#P#s[R[mf?GR[9I6pIm5Bg>uaI$fMS&@Db)hPSE*5N_7[qG.Kqkp^gB^WQkoBUK[d:iirq=1B7M=/%0Z!r+op)<Y=r-_tod#://
%^N\c;LaRd63ZlKc?A8@?]#e8qaFFlG/3Pjr&P,AoO6l#`q2f[&:W/"c#eA+1p0k/fi28M2o%NJj!l(aK_DZbk[rAsg30"mTSR7$<
%]T/ZRDDae2b<G;eE.f2McOiC.:IdC:_`kd$Z`p^io[?/Ips>L"#<R='4I_p;X/.t"j.WA<^\^0(nX93E?h=k>U21.c5i0N8U0d:!
%m7@6"54B]=379t0gt]F3H;?FklIn4mkXrkR5KBtlhK+L"KuE<L6%^#C=)Pd$>rq`\hqX1Y5iD=9=iR<L$D1kVRmqbr)>p_jEY=d"
%lXaP:k8_cS*t'c>+N8F@?f)nnS%ba>ILuC'aqu?`a4hGdF0756*'P17\V>#B'?$FT38_;/(]N\`43-*f`g\pblaZs+A=5RbD;&(]
%JZa$lj?X9J*u!?iJ*?mth*\?cVe/[kYJQlchM9k6Pn+[ERoT-M[D@2Vj#Gg'34clo[--EflU=6q[/".tm<JXFp=U2H0<Qau,X4@i
%Gu^It&C#R]p=i2HLLP0`)7+fIPc`hijS2U!J)R?pm9dE[]aXR!Og2k:LbI)5Xi/&FHe5Xfe`-41iuGu(gr>S,^t-T,T>R>$,F@EQ
%;#TFAE!5UBMLC'/!7CZ[?\SI2;dA;;UH6HY'<X0&*.BD=R=9>4QpWXlmb?mn@-rZ$%8dYhm-`bXAhci^#l'Lj6Z;%NgXD:lP+e3k
%@k%9&a$DYC7L^odi73nK#hf0TRCHj[Z"i\l5+7D?Hd:U8;Yi&p@ujKCMp:W;b*^6&p\W;k,(&k1/CP4eb4EF]QB,r+F=DuP3-fU`
%luFQ@OaJjqEu!lAK!).KVJF][<Qs1QNYUFb\%BP.Da*%-IX&e^#J'TMnY6Yg1j>j1T)PT"lKE"m!b@pVrM\cKJ92>CTB5#0dCi',
%=%\%d4]dO?Ug7bGXkT_\AocMbp:i@0\4C3ocEDF1:%-ENc&Zi@WdNhF?X5knARILjnH[A,r..Z[VUmolRQI^dbr+s>$bu\4NA!g$
%8,anJ#OlR!:i6,rn+4]h\_52!DD8hQ$Ff$31n7D723r`p*XfKgRD?5pNq\1/4>oqZa/t1C*-phY;P/4V@<<GA2,0LD!HMm==3PSu
%b=#!8XDu9hY9#-\8$BXHng!YkOg4_;]&:$;&b_RBP>+[5`KGYK3S347<'HJW(\2V=!(Jq#RPp#)ns??#QLB<&E<N;0lta'r(cH6!
%pWr`^kr938He:EG9q]EI=*_rt04;rdiLaO6-66OIC9pD!9h#Y/*S&3t6gIYbEp^Of+r[mK5+j9@n'fULF/TSr]ADK#AGa*G[@HuR
%I9e\R=Z7RpDqiUGjHk5**aModHiKjRIkX(^$kk_T+PQJtNRR44@*.XA<\36Wh:G]fj.RQk4#T`*"j;n7("53\)+Vu-YC=p(OU7@O
%r>hG%(Q>_h#P2!?4HgcdiZ11(Fb%M+T3?AY:bq=R0%5A45`</RV2"in=B;0f.T<e]5&Tq0Vkg_]E*G3=7,GL5^4#>H/;>M<MXmJ.
%guj*=S#>4D_Xp:lA;_#6QTc1[<hoK17@k2iK`:8<&s")sr"qh:XkL-p57)WkqP=s3p0RJ*Ej@c`f2K-pfrX=uSiY\PoHTocEJ3A.
%#B[R;^G^lJWt+,!+Zmodg;Vt"I(G3i_i>u)dl5X[9r-.HFMAQL'5G_hOsof*41%[kp^=8a%I#0'?(6Z)&YCEJKQqnqA]s&ac081)
%%T,Q[BHMZY_%Sq)H8s\85-6^)l,\"cVkk@&_8@=6(PYFDH%\66hAH'AEG#]i-IJ-[qd`]!hac==6=8g)^#kJ=)+Mht0fQ!)19+qY
%Sac$\5B2$A5$5!FZOW.fhhpJb7[>5e=OL9bYckcRU#KEQm1HN@L@^'1`HluZ7B7494I5.hB!0%4>g`Gq6`K3hc72r(4UqVr5[9fH
%PLmJ9)u17ue]<?30p`Tg>dDC9k*-+#;S:Zo"Ld<5-sb)b@iSS")TFp\1pFgV#juJ9%./=%T-M<+N>XJ;/R6O(pNo!&+)k\)Fr/7f
%-u:-j:[g9`0/jq9e+DC+q&,nQ7m,I9UF%*90j?+]BZ@q;O(7r(NY\lUhE&SDT=B<1ZG+,W7ta@b)o7$l2ZLC/=[eYt_*8R2&[ZnD
%!$9NS7E()!0upMMh'7'NRLLc9GhL9<=2_2h!"oqHqB"/NO/"Acpc)kFPr;PAFWZacgTC'K#_du?lDCDQq$R03FmF@;PFn<lhA(]#
%@lKOXhtFQ@Pbn9$`dV;N`X(=Lo[FI^KmW[tT2_J.Bg%42,9@hiY5[s+5dtnFr_d/]d1O5%Xo0+6aR51(I;6c&>0Jhs52`oe?!Sc3
%GuKt&p^[OBS6Lj7bsu]9r-4T1d7"o<o_XC4looH-IcP'("Ze&F=I;"$R*fRAMmih9Z,IaJNH&hfS9K3T2IrMhg_a5b*)05Ih#n-:
%i?l@/4aT#sbq&#J(*>?Q7i5)nk[&.2,G$=Jh#?B3*YO-_mO6,6!jQ,a<G$L5L"(:<gZ5B-F<k,^DXKI%onU;2F[YR7#Da+R:])UR
%MiDX"JY0eSFj1XG''.NZf?U^*r1%&'Aph$Fd%M"mq&@jW/4./O)DrLG)rs9jMfG3e@Mr[H?Ih4ZThU#.\5G+m9f'MY3'o4Wm/=j7
%lA0f<@Nbe]G'=0PC\4::q2h*)P8u[n28>%%@nt-^+koaFn.W9tI/"%.`EYdp<=\IiZ!Udf*TSp3&ZY6WZcqfpM:d.[Kuk-,)HBTL
%TidLJh(L=*>VD[d7.1Xt3c9jYDCP@HSX',$PRAs_O"VoYE[t2`;$)s2'=XmLR6I,'&eVGj3'mYOnfrtb`IlJ5j-[RPgqf6>7q>Rk
%+%o"(+k+Y!kkAsfeU0aj8bE?rT_JM,eW]F?-9*o.Sf0>@k#p2R:B*0,9nEkX7Z?knK`N)PB0X9#H+7(N\GD6Spu";*mA\S<Quq[h
%T_R$Opo/(ille(QW'b<tpr'I?,)iEreI:UYp#OrL\XXB;6RBHl$T%dB\,=lCO25eR\7`&\C`FMWReG0;bN<:nhm,5Y;1.HLg#<bR
%V=lXX=ahC2Y.1^k8j/d5=^pa+!>ujNfQc(+Q:S%Hl26@5)NN2=Md-,B%QSfZB$1^3)dE6@mP3CfPVq$/C[$M/4WHZ,Xp>No)bC1W
%Ur6ePj(Y6V52Wn-'W_#7YO@QHg*?/F2:iW[[%0?,h;t&X(932>qN];7,P:6b!iRaL*VG8GR?InRm&:F/Xh))lgJPnhFfKg6)-a1c
%7]\#b+$nrO["\)f9IT;sMJ$G=XuciuCQ9XDjg/<b<eJ1&78fgl><nCrjBL%Mf+F+5T5i>?lpljc8aA6m2+Fh`CQd`E>"u5CbfFb7
%r%OV6=WlY_aR+_lRt2&..qYYfd>S/nPp:[;ji4DcRrtXpl7'g:1CCo2&Edei[)!=+cq#ND(0^DLlbdH9(4(,Q*YAu'>`a>k5i_'j
%g?0(AW^A-BN^KnKiR,db+Y,aLI=uR6aJFj6i0LU`o?]d`Ql;$o_Pl5GU%:77>E7$.)40UdDX7XOH%(1#9.1sHnU:4pH5g'OF5N:E
%a<!qrO"6ate!m5S4_FF%L*Pm<G1XfVO<!5;T@H^"YZGE+N6lpg2m1ta+>i4@h!M3'La/^:S4uj2(aItWE.o<Uql"2d\<"G1s5M-@
%+Id^cZ4pl.d377Gi"ZWP3.d&'==T_ej72!N6-W\[NGX/b#GhA33gMH$V</q9j<n_h2GYCU*(!<&Y]c\q4r5&[@\MH>R)TCJD"e6Z
%L.(^i8ofV)>28r@WEZ.*Q73)N&)#ls:HZni`jQoG_o%2`\G4d>Oh<&Zhu45`'4Ke7X5$HSY>CFkdJYH!bOrA'd[%j`>MI,Kh:Ekc
%Y>SK20H(tR2t!u^/FAsh0`*iah`'C]N.:JZh0n\QadB=]p4X!@`Jm8+fTrYarGr*DfbKS15F5m=:o',hQ4\m7aT>=_';6InfJ*"t
%PcXN,ALnFLfPqGU].3lH6(p#FUggS4)Il)a[?Q)m*@54Jo824-e1j']5i[ZB7rm)D5(rY.0VHjNTO,ci)=Ha3$_>q9/f5V,eN<.Q
%=J_g/_a6LQQHce`X.;%4X7Ugn/H`I6.t6(<UZkifXHDpBD)C.`L<p8PP3uhfd(.ta.P32d1;iPf?O6?G/$,o<"]*,c9"mSFK%ZlN
%*]5PmLIO]pq'U&%dRSEno>"=7MQ9l=#4$.K*9aoQES3<KcdAPdlT>L'Xt.[C'a1AO3^O2P8&Q$KbgdM$g#]Xo,-r`cf+.+i%m9A?
%L6/l6Zo#eF_a7mG1c<P&-\LI;`]]:)/Yg7HRr;PA<6]j$Z%ZE*9T+ob:[(*_%EBG3m=j-!F;]/DAKd:K+(IMiM9Mh0M7S`pprA\_
%i3!peFG+NqOe(n1L`#M&_O"H4RrD<pDFekNp!7H6H;`cuBdXK?*;.]ZjP)ib%HD0\/g5`)cS[@fR.55LmQrt?)f,5kq/V-,$gFH)
%EiQE@K2<P]/._DNclP\:>"DUD0$'$1(DF/j`=0)l;B4?+*(O[C?"Na8FcK8Q5)PEndTjW@L3nBY@5Z511leN-+ca5,FBj@n&U*QY
%&Vgfqc<5JK:5Q<po(OgZE=OQGdBgEGSba'ATLMg""Wf!!67o=X(bhCGJ5.K6hoYI!`a[ft'dZot3j7O\C:7e!N$FWfHr8o0UV#QQ
%Vrn@o00*A6]^iN"YG9TnZMP>oA@,&3'E+7Bc^RVZO5`goPQBu&<k^K[42kdRHZ\aLIbJ*X@3#r.,"l-7?;C<`ZJlj%T/!S9)_Z@q
%2@GJ2aA=L\;E1q-]2;X:Y,a5n>=>)uAG'UX5)QqeFIn]$nK"hmDF=JOfgeRjWWK&P:]P`\%,sF/OYnS_SrU&(3Lj)W"HF_$',EqS
%':jJ[g<EhfI[gK<WKa3<o5nR/P^>Pi#!&SGpR$(OOe5M?dp98fb46>i;phdYj7'VoH\&G>G;.\q"]91irmb>o^8lp*e8oFG"'F=+
%]fsd6MiN=>O;sH]Nj=Z(]%\O_LgAC"9._+heF$s&6]9AGPbS#+7"L:-Q_*QFe?B^?Ap!,f41+lnDr7EVi&OTrE-n_)hiCBrSW,1#
%[g#qq+1pg;G\\5r85o3?Q!Sh"E\A/G;1p)pIB4Y9C?1$'g?!R<,O0]=>(aiaFAn7S\eVgDRtlGR[F@='_%B9%)hF>dE?6%qG/6=%
%2]/<Y??:mPb`fR#O`bPQh>``4l=>B=3G"^e*M9tmO,PiVP%,nYZ!>29I<b^WdO$fZn6/_If7!Ktaja/"m]H8IW9baFj`i_D!"2V$
%d5f^*(8Z>gXBUC`N7f3[?O>Ll_P3+%qGjoO2,B&W0#q614n!,JC`/Lu]ZM(<Eqa?5WiB./n/Bd@FCSZTp:'.hYd^Ph_?*e[</R&b
%\%Il@m-:WhQ"d\'a#1IT1`uT,Qr'WM_akd#PP_#jQ[5t+=qXi!!B+oXlF4jIG5td#s'e!RAKb7;j(S$fSeQK(Oo9FTiRJ'a7I8^#
%qci:'8t<WNkf`pm/V%F,m8QlG,>$K]:SKjdPdoelN@n(9]"4Mo0`:p3182fJMFYNh6W2%H#tBYYB$Tu>dBYV)c`JV\.F!pBPs=a#
%AIL^.5;e/.bX(bL41qZ[4%dc'^HPYob-QhSURNB/%c?oY;;S-/_MlVq^5D(-otr_#H;/j,pQ+aphHGj(A$]--/2o\H`-U]f[$MT\
%j^F@6p$hRXY-jJ"hlD79al:WO/gt(\Z`of,Q3I.*g2T0jLIr69_sFOhj6EH:gQP8#2;/Z:E[McBOlUXWe3#qbjdTmP:IU=<Zhci1
%fo+b#/p%o]b!&_9n]f[3Hb^U"8EXPP.&S;cW9q,Yi8GV.+*>WBp>>F`&!sfPiX!ZX*8rV]-MJa,"ir$;c0%(Qq&H,dP,2M]gg1I4
%8Z<d),KG%QbUI%Y0qutbO\75mZhpIQ9"B7-'JM!udnsT)p(?*W30f-ALlcdU\+@OIgcpLIE.f-"O;E*sp?#.2>ho4V).cUXc8no_
%G1sH1.*7E(%\)U0aue,-?%.Qgf<1Lsi<q;A<;Bc=+kL`5Em<gsM;hu^N3AmjYC9Um8p9f])&Vl^Xeja7W<Q]*0&#OqA,.NmB]Y4-
%:7f?fg[)pbr:S72-lKP'.q[R=/],67ITmPD4NK8:j!r<5agXBdR+uWIIp)3mm/:cr47:AQAB(^U"P<)ho3Etm%s4lgQd\tT2MJ64
%>N@#\GoKkI7u;KKScQ,s+Klb&9[3)g13kW"luiMBR=.-ZBujE3=\X%ZhLXDfkJdXh0Q*W#mF)t/No^kGgELt3,OFEuV%k]b9@KpB
%%L)GrA/b=ogW==0ScSK+PZZ\6(qFqu2D;h-7usji\d_'T?1NfTX.NQl-IADB9%rE6Tct+3U@K#k_GAtD>P<nPT+iKcYt.#WID;e]
%C%eG<8"S1&&GmoudR#29bcCYn@IcR+Q^0b\hBhOk/R\mp]1G$L(D#VRH72j!7/BqK4jU68J:3[2rUcW!dA%t.%aT$;R5U#ebY*j$
%:p1dACsh@>WRWI@a`A^\4m'p-8%<semCdRCZ)!LEL2!CIhK"=q,18ua>_3qliTkcl1A!9n4:b3-EB8\eJ=F_iBM@r&lO3_HQ,AeM
%/XE/I7en(AOk#Fo@@D?h/#'^;-\J&/cFFt/q=Y^OAu%Rn:fWn-o,:<"*TP3^*tW8K4-&6^L^VB,R79oIbuf7'oFM<ec9_@&!#hY7
%T3%h7A0P"34:r9TbBRppLldO;5J29IS4V>nK,6&6D9EQV"dVa!&R+(5>PAi8#Cp9FJ?cR3Q!I7iMq1U"b>-HA)1B?QD"?'f;V'OL
%]@f\Vrfi27?S$QkcbbT6NarEV)FaH`eLc>hZUs_EgO6bri?XH=>)k=,7GI%LR:FEf3jK.SRgC"maM.Rh?Ejjtcsj%Ym=Q@kEgb+*
%S_tT=hc+6,LQ)>K(-a>jE_Q_/EM[cM`M_e+-q>o)Hbc0:L[:+c0r":GMM,9:4[s6M*F_lM$(4-So'j4:<g65ORoufBo!!mdeQ(*N
%[OC[CQ*oMb*6A\14_:]YgaYd@5CGgqP3F(EiDo[K<(5Z!PWIn_h"H32MS8(lL$VZ'@+`\gQG=f\A_*l8nAS%#RUraGK]M_iW.dk=
%2pHr_EJ/eZGg`IiM"WC_Q"]nmj_J?X;4;VN#[%ZcaQnA,H@K:]-qa^idpBn2)5&5+R/O5ppAM&\YOicj"5+L#F;SJ:cOX^ZA4@*=
%is@:rcGTSoibm`]X8Bam<*IgoiV!R8l.Tkdjtq-dFG(Eu]8!_+.)gquZE,8%"2>E9qFON4_X2(2REAXKB]Ct/.n7*Q:'\l!o5n%e
%is9.dj!/",A3r7TG)2Mn9Th\I>P5gG*C1UZeQ!-6*#?nr1&DUHE8;V=?LD]f649="Ed$"*-e+km\/S:21;)T&7R"7]Xe4Aq<n]`W
%HRnV89E';1#]&H!8`d?16hjbmdMU!df=C_JJbIHlYjB;e/0FI&P[rQ5kc(3gp)\\/ED15^K)IOsE[Jg3TcX/gBfWC?/brZ$KQplH
%a<O`eqp(u.W1Vhc;-A"B^i_N95OIU:a=Tm^!QH"N6\]7qq[l:hnVN\K)8aeG`phB6SOEDr;EZ+1qWBSrWJbbLE$G2+ZWg:2,+t)>
%!W;_#]62_'n+(XE)#3)P#p3\ggO58fS_O>Y"Q(1p5D%'j\d^uG"<U#d.*bZ_NZRA&o+lfr)da-H"gu0:o2ot_":iero$qX6[iOjP
%ArW.W]9kTK3hl?,@ci$:+lsCT4cYVBf?fNuH>ZPiLYUif.ggV+A!Dq]NItpldM.Ak1Uc(M;s8uP\=8oRb=L`Z?tYr7gTj9oH-;jg
%GF_Eh`-BpbH8-gZ`Y)FjA)ri^]h2G\/F$e9J,A__Ot66Io;R&S>Xm!;ghV[1EO7-jC*%n\EJ-Q[+pC*q(e\UCC*^H5DDu:$D&YSk
%X:bHZ\#kdn@;,6?.pPUdj^bO6N&CE/)o6Ck[:*FR?=0bpJh[BIo\e!X>.J7-r&DQR0HT3TY`#IcJEh.L3V3T*ee+Wq;Ka9S=X:1P
%GsX[56W'n(`7RSn73',O/"<AcU5!042r8BHbCYdSikm0N?BXKC#5/%J5j'2aR[9G:kLWh@k0ctq+mAAlP*hPXPH0S47o9<8KmnrH
%:M=Fq(J1Q3VB<["`\u?c<s/EqK"-'"OKh`VY;=iU8<lBZM=l(;ThS<([ON1hd(:NS29[O7pAIK,?B8f16p?4>@=sNl4EJ]KZ?763
%04/=MSshRo5138A`Q^BS5E&N$$oVEHbI)a1bJ,thG0B%pinAMl3-+L`"ggZ0Or*V2j7&FUUG(ldkm/^t@$n">00hn2)::N5,Jpso
%U<Uqk.rf+-,_`LlW6U,B90TZDX8-\A>q_-`3'H'_UH$V:^VNWUNpQc,Y?m0Z@$t^Hf1j"n7SffPD2Egsrk<RE6/cN)$@:_*S:-Xm
%`B"QQLG'OW((H[O*$9Q(&%KYfh41%ST8WFmb@SPV_o\8sW7a[3Z*L"HO3j%CQ&:r>kVuWA$dO+tKI02$D.;`u>ht;1(7eqQP>?Na
%&(SsbWZNSpc<-cP$)":e(RdEq=eH\fhCAn`R.WDjBcc+47Li4="gBrc7HkClFQG`)B(a&f=[]TI=[uTFfq<)BC.5GK?i#XjBnj9g
%AgqB5dIp'JBT._b)a&-;?GSJ;AC-Gd7A*,H;eY#DqKW+;,H&lg[9\lbN3$YVB2NLaA*0k>7R`rBLu*sP"_3HlbulD?K`In$cko:*
%T.G'Y]"2^oAUB29eGAl@mgJ!/'&oE*s4$)N_&a1]Vs9p`>_M-pek7E$cG?D@U6tUQhV;oUH/eOs8DS`G$3cacU)[M;Sb=8d<4h$`
%Ob@c-[tM0q&c-/bNKp&2D"dhl#b/oj//+b;V_>,75Z-1ra'X[5h]GOk.o'22\"Y^#Y<C$coPcV-\;mefDRBWTeEj0Gc_0&%N20A:
%1J%Ld/j*g%qhQKCrLcfB'_OF3*uon:?:EV$WOQX;7,Od?a,URE7`6J+DZO@CD55Guq#mAXOVjcT`aVO]F`,0Ol#nXI3#34AqdUBB
%"-K#iY@)a;[nU.!eBX?VBT3gd\^ZY9K:Ho7$AVWkmN+eX`HH-BJnHq.HGp#S-REAoAno0(DV9;"4<n@/$*'n>W&rFiZ(;5_Ahc4L
%`ob+@.e['5qaTqnFR:HIDmA7=D<)o@Q%U#B/%N_?;sg@_N0=U$NGQ?PJ*)QrUc4j[N7qU?N-'_uRM]85*7u5]I%M__%#hHgFWQCC
%Pp-hF-r.R%O(SA24(e9%5oc;TH#;,E0ok1#.#CE%g1#qe"KSFhL6fRgqq$'_$-bRuLB=J,oI#SfA,m?=Xp@d]o6SZA%*[+T5a:AZ
%-Tc7$9LncZ%=s)O%%Vo@7pokr!EI?Wm6GK=3G$se[$-^'NmgnSIJ.hd@BpnRkQ2T2(cgF/Q9or3UH\lE\]^SPmV(jd1g7/gJiuGf
%9<5;*Ws<Wgbm)gpNs]tIiW,Gfb'Dm'Gm$IaoLh="@lq*iF:-djSd>m2g^.\pL;oP<dH-?oil3#ji0%@n]HWrLQo^%+.K%V(6NqNF
%6oQVpQ*H'NW_uYK\,9LKVh?pSQB3E!:Y`Z3Ml)F8N%o;JE.qnG`NQE,p]f-0Y12s.LMuOSTL.%B;Wf.[)5rltBbql8ffIYr'O-EE
%:pq/Vqt35(a1jEB(<u&HE2>J\*oI/>JUPJ'3eT[I2P0268:FUrJ3oq$3'n+iERre;:6M0Fih"h;@&2Vl`aD0"aCS_>&BQ3;:uVaU
%iAb\E:X6\<G$7**^,)D=Ntpo+B,om7&O^a/)4um96r/=ggmoLl63i(-!5P#(#*p%$S=C:'pH:f6=9Mmb.6]UH#1elpP;@7=l]&D7
%h+<=`8<u$[0TKi3E<;)L4rC+X\L-3YKegq`6SNC0a(Dd?#WoCR*BlIFIdmJH3;2Cg?@(pg$JSJ^BSjof>bBDo<U:mgM>bIdR!B+0
%VHZ8.Vdg-H`G.O*TJj2!+>:B;H__d5``K!R3p8GSMuJ1,ZaO@R'AA?'eK*+nZ$DRodT7<1F,mrZkj/Ngn#kJP1l%\%/F+ucTq>C3
%>=ntoG*o-2)]2Y9'=._tAt3)JfHL:uqbEB/`.%Cu1'*'%Nk+PPH0Ei"6F7Vd9P+qIWq-[\E,]n"\=*:5a1A58bEIin_=C?PQ_-UR
%=2"@,:m^TMLS`qL?$Sm/@2ttYX2PTrRg_F%[hE5T8)Y>XVp5amMWNgb)BM`tVq[`"*Ycag,!2%65@EA_T.1[%J*][-j0[mUNFrrA
%ojFttF[GeG0^g4b/cq"p%s&`;K/4,\:3l-r,[t[RiU\)W*_HauXle"ps3e.Wat<=,iht%l12#?UV`((]%VR(-d"$u7CY2,gGR0Er
%h.-c5YueFFZDhr?At^GlJ9M=;M)-SX<ocT)5,-r^M8;<U&%<E8PG=nGd]$BN;L%3p&_AuP$]K3rUqBg^$(ojjP?(&7Dm,nA9O(nV
%,A]uOYeoaC+1930.#0`Dl?DJ;aLD<GXT`c9hI-L-,KSBHl"'-#q@OYO%qCpnLFlA6G"UZdI_p<@U8VS5#c,+oD(UF;lM)B06Ar^,
%<dJLWM;mYE.ctr_6j`:IqnF0Eli-+=a`0+S;Ai+e*rEa]1fd:'_2%O`.91lu7e,0/&L[9Kg&ng_lj-)KlLiEFLN>F,qd&"k6:S-]
%IhkbJXoP];;[m7,)WDWBP.lXW,Q+t[2`KAOZb!Ee5_G)C3^ShPRB]FADENLu[l\\)ITYknFbCGprXl\_*+A45!dZ"Ed5a]INBMBV
%j6d-5l.o!FSo<*,8LHnU:FqO1X$pZ],Er3(%'>,.MH2U`fHP<g?23&eSFEd4@?Q><$"b;sHF/feI3X=L-J$2Yd>O`BO9aYFAD$UR
%XnHNdE8g7qk'p)4I<tMnpNcM#>qqtc]$DG@Wj?^%@p>igbq<sZ=ic;N>[-cAOtXS'msZ$BLl4B4]PE^,LV7a@O+Zn^<N!Tf/7<ke
%p(>:"<P[LX69d<nB?\F*jkfR8-pP?e=sG@QG&g@'.1Y+AEDt([<,E*qrR-Nk*HA'rO)X83p&u4Y/*IPKFt4Wl=ruSo'F]p4!E)?B
%N=cLC-i``67rU9r3gtftfQsXJ#i)JcYWaY\>frrG65lo._EE!8UH>M>:]rgGIfJRt[G4Z]GOO;l]1$CpHMG\_hW"3.fL)l*jo*OC
%;.4/f@&t00d9cV8DE/&coB0BFjSG_A=?>S`loZl="a$i'8$"(&ZiJC"gII9rMhP6g=7P,k4us)..73jE*g"A&!FA\-A+hlnSmf7G
%!p-"?P0Le)lJ[cN5tUh$bP]Y\jr=<C7I$pj^CNZ%:RqROS3HbaELr\h"l99)7'j\7ia\<equZ@1KjVhBgm;F;S))HsfrNm(WQD-+
%X5"'pM=uLEckFejY_@:!!gsDmL8Pc!T@=MoW]1:D5,a0a'Odf9(6?Rjp407[a.ef#p;TAl?'L2j@k?'Uo*BnV3#dJsOj^cSom1LO
%cMb&O@(kcjjd"N'2j`iJ^H@1I8G!&uH<>B0ZYt_TLS'T4,.&:Wg^El*-i"gXl]p3p>cH?=XV'YI_j&7u"qe[78+&U3^6H6%P")B(
%L+-a&4bLf<#"SLqVoaZhD8.&sks:<P`nh?i4#!"mKUEuaKs@7.rSdp=OR>9<pi_3jgZ2cs@&!2X&WJ=u+g]<<8CChlqnYA*\eD>*
%qt$K>a?!elrA08MD&uuU!`O4'dth"6NOL&Ad6U'8DTq<_HZKD23.XSCgPU?,n_CPJc7]!)K!<IQj$&l]9@Tf8XWoemS"k#mai'6X
%&ipWchts/n<p%fqCBQ@CRMNV]grH<^AA.E=E]Q-(NV+/,B=f$qF$:BF<'Q0LrRJM\^N\a%>TSWqZ@D/e`HN@=[P7T;Nf,]Z[akP2
%a,UP]PhPRelV6g<m`"eQLHl<HmQ%\'f%E4rRs'j@egYWK2XLa/@?i8:oh'SHE[#Ce77'OQ)1&+W810]ifsQCfY;SgsXDctDH`)%Y
%Reg(0eWT[VjRVf]&),#bK&%DR[&%H3cG[XV6<5R]%?7&6e%5">F4auMYu.0?i:Bs9;e1&`O0Zj]=`9R8p=e%:RMS3QpPuk8Z'gL#
%k/k@7>6=o9ik$b>)UB9pS/e)2mQ&Q6B)>.7dIp$%+J:Y\Y6RsFWslLAG]NgmSt&t>DEjF@d-*L!b61Up0Ao0`SRt[SBous-G5*iJ
%Gj!.p``k_d=*ESggIlTbUZ^$upl+!H=%4Ph6_n)EDf*..f\Yg)LQ2.1Vd@,^%bpY>:?`r<@(gUXm_m?G\Ic=<-FhQ$5P`*7m'bf;
%;sVi'rV<4<qL@E"n,N$d^R`.8ldoMCr9^uNI.\"Ghn=C9p,/r]f&-Drc0Kk(qr7:\(U&>g`>>i[r;#eg]KZA=:OhrYYPE,$Y^cT$
%5Q8oWIIZlOW1X(MYN!;=rTDpBs7CM2Iei-LkPXdU]Qj/<`LGIThu<NIr6p.@oOn3tlK.?d5CRT6_7)(HqsD#Yhu*;F^US.UZaXkF
%hVI>I="dm/q=aW"DNQ%>e_e)i\,R'?oBtMNIa3H@Z^[0MTDnc9?iB85d+?%IDY,SX?[f&X^3]e<pKtW2^iloR^9Z"$BAaa.`@$'o
%s8(`uG@*MkC:)g;\sS7Xb.g1!1B.7$^4^u_^a8p5a1I"srU"NPp@@OQT)L'bs/!C'nc@?oNBYq4]_UspIfA]icej-IqTIVRrqt#r
%meuC=I`J_ZJ%U7#m[FGdgh#fdGhAj?C1H88Dr:QfgR$5n5C<D.GK9FRhV/YJs#=BED1VK\Qh&n/h`UqBDkI'%Df8_VOC@7rp)iV[
%n?fq0incm!k1c45RDF9gO**Idhu)cqMg*K21d.B^ko4O7hd=$Drf@Z^ZLu8L\GZ;,p%mEEJ,elkdslYi7@cAdi*c/M'2RM.inlsk
%56(*/2e\`,qn$eH-i=^mGl=<`Ga[Koe]3!T?G-::bBWXOo=%NQ]m9L*CY>2+X:+mTRr@1JHi>sBT76ahMe<QG6k=T1+8pP3r8uP]
%Dn^MemU;a2TBIiiXF1$Sr7*Hls6e9aq/IkX$!to<9=[j_&jDYY>lAXkp]$;Nh!a)`^%mF:J,/6G2a<hOg]ITi5Ha*s>g*)&0CAjN
%k`9Mi:\ZI:E@pqF>40G=go%`LX$<\ngk.6B1KhnLOadA3\VFJ/Vn\i#q=B)]rpj,t4oOrr^](JOFJ%T>k5e?22t+KY`UeS)nJ(0X
%+CF`Qq8[g0^O>qFLW9&6EFE7(!+QU**&$5gSppR]2_Uc:rqV>AeYhdn5N(Stnf]7;QQL3<I)n0-A8:u3,L0#%IeUHmT"k/_fB@;R
%j<$:3I4jFRht%G.Q='G\\AD)64aZekc.i9rY?u^&h/\o@s8D%H@Y<D&A%cFaOEl6FmG$M]IJ3S?c^m>eJhEOBXR#`FlfZUnrn@ss
%E'K?f+)b`bJ/@YIm(RoDo^1ZtYJ5AWo^tQmcMP5$[-KdpIY!"IDdU8)rVR2;^qIp(]&<?-*Ol(Cq(INXK<F2I?Ou$0oaeWms*2=j
%r5V>%1&g.VMq@Eh4=nAB(Os$Fpm"%n-h83?9;gq`>]>/_R=QHO5Oa<KFZfF2I4f<,5:k"JWJplgQko\s6dFK_6"$J6i0F0"8$J=5
%hYk@@(E[`75K=r6l.[$C^3]JMh*Y)0T@Hd3J47aJ5NIOqkE#DP4llM?;"3sp%JA2!%cnkc:d3_nr$VU@^VBB4g>)O["KXhS#PrYj
%hu<U8mc8$Fm6#c>rF%mN5Nu>KW:Ka]j`BnPU`YcBk<[GVP7MFmi#4fLT]XT"p,A&i]Qs>E\'L]H`rcrs5Ls]L&F).p&uGNU+*@A&
%#F%<bIJW&`D]eOLID_,S\GlR5._^<#o'&N)rh!2PiWlG3qn"e*^]*NCb;[1c^dS&+/jg[XL@O:Xp5(qp+,@+^3K3nrG^V?"f+.n,
%ou.G-&GqP:n_&k)%k:<O4?i8\=9\R(/<'Vr"8nBZI_7]_iba+@ebp#(5bH:Tp4KO8It3LUs/*7)PFY*+Q\jl]#8B:6V#L!44MUiV
%f&1V<E#s$3T?X&,a8X(Cb!eGNJUI(9igl-7[I`8sOF2BPe^N-RT>1<So9[dq4Y0(mr[o;YqL8-g"Q:GOIIHXqO_:.j]_LXTQVX5:
%J+`a4]>&^hok-;H]R"lcg]LGkruZUVg=AZtoaa9jn*A]b+c[oaLgAhB<S`7!69nB^";DBA(d`aD82(?kfJ!5rrE6nCWfp0`d*-Y;
%P0#l]Sq3WI\n]bVT6`=FST3k#QfSdR,C$Mm!]OESGe)n-gmK6ahiF*GQ@I+f)C-!"RE$nR)#3bm9]B[U\(qH>gPohP=c,d@Z?o/t
%b8D=$QUU]IA39Xb;;6Q>A>K0-]q-fcVgbD?DSO^ac>jDdG$X8Zf7,IRH(N+AVmK40Q''R,k&h\9B/n1CQ>Sc>lai*RY;N?A%(Yn=
%X]AaeZ_TRYVI&$5A2#@!=\O\72/7LVn7rit1WpDAOEoH#PX`!AJK^@1Q.+dB$dpBM-V@1KY%+l>CjK_Rg"p&;;u8/q\[k_ClVnb/
%\Fe13QbVKH>^jEdq:B@aPT.$j9\;8pGO8cH)REG`+ql7@K1qL\2_d@ZbkM;D-^cAAaZiuIO%bcmrb,]*)]BSX2V+iU=W4N(>V8Vq
%Kk<_@c\UbYAE),u58U.O%_3uj%P]_Dq.J1O[2^BCbqdC0RH1)9E`)hD\L<__a@43kLsZesA!r7L-FkP"_VZi,>a1ohd#H+8a`9D:
%_s4BJ(M+;T1o$F:PDO(6aBagLo=Rc-KThmm1ddZ&0>-ic`i=Ms@:c@T4\0aFZM/>Qj]<5Tjf!:C)9^;\A(l5(MHsg@I-iD2btRn9
%"qXK'g4ZY(ptA:.[A=Xu9[pK?;V.qYe-T3GE4(0S=.:URA#68$\CuV:rN!J43[1s&PLD'POh#$'_>bF:*N9%sKT*'/7Wq*f)*fl!
%UBqeIP0nUCO(s*V?N,"Y*3(annZVFe:QGQ1V_]U>a^-n]jiF:\N[XpC<KEX4f#`tXo9Po8o=^[BoPZBQs-odUl+_<3LYUdN)EDO"
%o!9h#`hU.=qZQk'/jIKLFa"^uc7$*???O$63<.aGIH5HI/U'gTO=iEb\rJ[_qD(B3?S9e_re2A"DOP=IS*^m?2dNuo#;"XLHp&^<
%]g%fi/0+It932U#h#,n$k4)$L:&<2iBnd/8NstiS9+dp;*6TaY7YD@)-<N3i>Te[Nkib,n@/;'$Bgh%*8F`s)lGHY?eN/K+eP6m"
%1K"W5_^-=7_7HCW7(Oq.i4QjAh\j;#I1PN&"889/\/E4L&X%VMn2F(]?BLk@b+29WrFX&2r]:VG/LU)G8c3cPikKlYL]I>/>fPNi
%`-eac'-3:(moY%d@hSC(`-ecU=Hf-@,j'H;^$[gbTqB8N8&Ek>M>?!r*g!)S=8TA4:\&3UCU`K@l.:W+HaWhNdk%++\af#<o1;E+
%'E%cAmnJcn\@Ys]2TY`2A@\0c:YamW#p*[>$[o@blVr@7lh0E/QQN>94#lTRK\6\nnn'l;huakYdS1A[A*"ktbFUe/<ND*>@QN%"
%16-,Tc+2_Hc$HcRf;e8`2-]1^\^?"clg/5nc6aXNS[crlY-WuNlsJa5bG9MZr+FWa/=?ni[q_I_bNO+Ac+Q#4)eD!-q7j>te'<4\
%*UL\NAEGb]BhC7kVH,ubf:&1,'(^"k;><\V]c'tE;>[.m+bA2_Y@<&;n[=Oap<T,nf9@;;JYjE5?GW+Qp6"[IiNaPEl&QKU=0H_]
%hBN]SbOmr'S=;qe0?ssCrg/K%A`@s&3*mqlQ\jb!3H;^%3S24>13's;^S`dlm8"]m'*lr#2mVZVSrr^hNE^]%GWLl)Y04bKY%^ij
%&4a@c7$d]9S).s*H`H&Lk@F6hB>%P3fC_%ZCi!p79P!D60^1<31X9sgHVBC_f1AG930$?RVCUq:,9n<Y?'n)H6;G*Gh$aTM%UGI-
%CW?B8iAc_bp+,Y&;7Y"EpSF;XN+)IWc,9*YoCpA)GQ(5#V,?;I)1$*nb1Wt*BqCQqhaEYg_hTH1cJps6kt6G1+(f(E6\_eHnt^']
%o_\OQC'SG%WpXFDP*$pdn`j/h``MhOZiU.5P)d\e?Hj=sBf@iFmc]L]2LZF1$G=!;A*@>Y>NSb+icW@$'kTJOn$Ti&l!&&^FWG'p
%kmW?hU.\de.[BB4=d7WUe7j8YN(FEAIu,8b9`,a&@*D=B(cP:mNlJkqOlZub5K:X&1%AaIr"p)3`qWl_`/cV[ILK=lST:SIY_dcd
%%eeS)X'FnRlYi6"/@>lVgnfPc/q5HCWf2RO_96J)Q*OV3=-m.A+/dXY-&W6r0`NJ,d)`03NTOiNeu>2&#OV,(@,=qdSuIiDhsBYi
%>aC+4NRQoF@NiKt3`ULs[@uJ8AGb1>[QdfPL,/;ArDrMLb=Qs4Fe*%O]*D'!#G$(1)pg\qTAch2SRrXsYBbPoR.LiVoF8A<I=nh=
%j8[!)6%>6]BBuq4HWhe!O0V]'I(Gr/?([3PDM/UAeR#B!CZ6be@Mt5._H3VpN(CfeQD<7)FK[5c\G=6Q4V>AK?=E:Nq.(iRKa^63
%>c*gH=ua@AHfOFLa)+P@nY>'%c]C`k^\Hfl;a6i*EbFIg`0U;@g"aN7Roj_FCMmV+9rtn38*IGE1+:'SCMk,n\M6bgoC<c&.nn0t
%M)k;h+"dX2:<^8*3B&\Ur[OD,Qui:2F&%d_3LAti,@\sCW\H3kZ5qreRrmE0k2&D)S4,\:m(%,?k;!hMhXnG*TK>r\8mK.02Pu23
%,MuR3*;X/'0.QT91L;tRO>1I2EO-Qo>`U\P:?nj,Q1sfd]j*RdbK3TPUg0mArd:6X[G1-I=jQ*(G4VjElS<p:pr9YLN9Bsdgu(68
%BGlUbP#V)*qS_06-YJnf$SIGGeVpn$*BSam<aIp5.`,kK0/#\16Mn-t?`m?e/*1T95i;5"6F,r"R(_b./b;P'L84]p'B+6=%2hi:
%\\#gmUYRAkq]3%-]6*P!)gj]_UTAj:Dt\=ElM&1iL$s/;Y\:o?7C"Ck\A8D*b+tLR%JUe#ck+?1BZ3oPdr-*EhPn';7Z]n?=^D#F
%mJ&M:@'_rdRan<6N>^Pe[cm;+hmj?]]W7'U-ed>bdcR_)7HB:H1q#14VJ8F(IU5=f48[+,SM,Vs9Qn&?a%<U7^!Zq.O,UAB1sq.,
%3mk]<-e`Z!4OQjL\0WPaV_U)PDXK#\e&9pf6Su?KoB)i%!gBbpXg1$sDa#PLf/i6Zg:>qu.'g*uX4B9nY%IMW^dt`:%*IU-(5+c\
%7XWC"L@]FpqT]Z/lnb0`5-"&[_=a@-9J]sE><$4\XICg^YGcM:"QVs9rhIWt6pTUfHar;A1-==llX]$(HB9Kr)n`.BchJ++W-r=J
%VI@C[p@&s_QE6E2:DlSAH)s+'N9+-h`q#&W,MngO\4k(Wk\Djb4T%3&h7b"ECD>IW<I"7tc[o%Tci#ZdVs_Xf-flGVn@`Al[9IhI
%B']+Y[!&e/`41!2(t3N8Z';U?h]lWS*1CE^Ah]EdHuk.PENY!9:D_^j2jsFkfJWeN2gDBCW3,UT&3P+rG#to*7YM_=FqTAKno=2^
%<2\1r+[^tEaRFk`Z+<f+U6/NUE@i:+X0(JeCReWnf>t17g'r8K]32p''&H2EQbfZI#C`;q]@Ak;R^pQ2BqqsgP&+[!O=Y<k?>eQG
%m.ge/XrGX8pbT89[3g[5M1^uLX]E![hTta=Kc>j>=&*3H$*T,SC<X'1Z1E<IbrQ[VUM[AD+.Vn&W7V%j\f!pEkGnGj<:G"Z;CqjF
%*F/+Z89YFlb1g'6lubOI`+']Q4)^RIF]sLR^!+(X@eHDF8H7d9s7bZ/rt``6f'B7+mkt*-$#QWFfA*LjMQPA$@IA9K;*LqeEbhd?
%g>caobfO3.bOp2K5QnZf]%(WJ+6A+08LL.b^rK=oSXoX#7m!=-ImSDs512Yuk>#OsH=FEkmN`;W>+N(@HF\+L2gb)!go<3Sp"XA$
%^"TF7lAm"Ind[2Rb'p#]%0/TT(_8U6YBOa\*H9s:QiEn&@P6O/?[R>Wq"fO?8\a'X)dfcDjg[O#\#+ZE[[@(Ze!kj\<=M;<D!h]=
%ac7J)hDIR.HTCsOQi)ITH^(:T.DEAefCr@l&^0'FbF</kh^1hlWmUaX_7tPj:DN/E[bKo7kF9D2hU"07fomi]XkK?<Lij!7s5)qi
%E8"J?-W?<Oe&!7L\N)I`+5?.H.n>pg<\1^qQ+gm7c(jRC&,H,rIBDTXcO<?T3aB"t;6;[3472QFAYM7r.]r'TTE"^O0DCWYqG(P8
%K@4)h5(E*CHiKd(DW$TJh`\%O(7ZVH5*]<PbFe%\@*lGSlfD/[kd_IuNP3eEkI`$Fr%Llm#okT^58NIRIZ9Xen<@m]Q=rC"S0a_E
%pK?U[$0;]qPIAKS#:9e!ZT<oUHlUl09C;pZ\cP.I+@*Q.@rTl$MF;!cWH[apdVm[Ug>:[$_#3dI74/SX-o<q;n!PS['n4M1)(_::
%g5@3PDksas0IM`FV4ub#nhibq@Ls:?e]-JG"=%730+_(IFM/tQ49dsToLH<0MTs3aPOCdIE4-r><Ok%gNe[P63SOaJXRB:bZ88\c
%DrX+N-Z=r^6]>49':,MW[4mE<MQTh(2$1VY-GtCm<'Q9krduoPT!<jC'D^4?N"7E3PS_@KRSWuM`si-iZ\[%XU@Ih@UW*Nq`mCu1
%qEP^(M]B;2";2*.VN#5Fk7c^jpuqjIq"\n1M2_r(7R$HmlY-S:'h*QO$IYNC*s!#6qS'WC,XL9/(RRTK#U6J^9lsn*6r1mZ:'M>V
%q-%,*Mst?\i\*(YlQigPkQ$8NkeI>FJ3:lCTiD,S#e$OB=m!sME?P8_B`>,Ip!]0/3o]%p-B'cbBG3cgY!2=VD%^7tMYnX!!>bsd
%!UK:9$P:16(de"DJe:@)+q14PZH"=4E9Nr.@;JJgA+lS5fXlr&fMTP@IfpX,Z<@1A3$fp&i`3)!`PY`?Cr@-tK>XKBoaNbsYCrN4
%M:5bsVr\:[4[+#6`-f+=6?![c-;CZj&0CBBc.f7@lIDN+^h_7tbV*H>"oO#9qbYsU:H>VE2hZT+-qW-\+0(\_oBKR;-4k#nb=$o8
%`^,Y6;a^#sX].KmkMf&1Vi>H)$ln&;8sh$g(@Qs79""@a^&4f+b4B_\I]5euk*lQsT!.O1hk5rmcLic2fe#E\];4\U;spC.#N7@&
%UY9UX4[Z2p66t;llT\_MJMVfDht\/J%(pL<n<0^H(V_kZVP@phB`G$nWdTqfA/iSCndjGQTJdP%;ZKh;q,7KI\;9]t7*kiY]),]+
%7A1Qtf7MoXn164tWRjr#*DUIn=9#3/kC7n1oGHK)2j!),HuF+%po%Uf(!$"$0osPqJO;o&)fP/R4'/)*ET$](,X@6:0#Fj.plQF;
%hX40aqi0S%55U7.a`RJ#JmqdlD&%8G`ne-LiT4CJ8lr&U:UW%upB$HIn)=?h0,FSrB]7j!)0UTK57K>pg!3^XL&N%YhL@F)rpt"e
%M#O(UrYN.*?BUI+8bADrq@"_IjSY^N5"P2MD/P[>mH"B_#5L4eBiaRh@GY'lr%H.`nW\kj&FRNO`9Q?LCg<=7Q]DRR+2B\SmeLL`
%fk23VT@Q)2dd1eVG'm3VYqmbtqCFnGVOuiX*-u(Zgab<KmQ1HI@kKY4;TY;mB6CADlW#-,3QCo5p3f_bhOs&bnN`cFnphnQiP0nJ
%ru_73J*WA.:n$,#09Eb0B8'BSnVpYcHZ3`[M3iQas!p;'gsCAPGOY%jY*R,>9)J(pJ\H60@G^pHq!1S!4aScdp0Z%Q<M',.o?ZIQ
%AfXPCJ*@sOJ^O)Gi(dKk<_e]I.4UTE"P11HO-0P%2Lb%o32(n&3QdFJT3pA>PIooss3regkq2'u@GK\LY_qT2cIBNsHfqkYX$(Z@
%#n9VK+"f-:mI$k-s6IaYC:DdHULRZfAs;?i82mT?2[klYi(?e;\IjU61`Mc_<RJI*ZZ9$Yo]rlsP@Wt)7#M!b&/Q*3h;-1rf/;&c
%B;1>9[sRM/&#N/`D0MGhIj81-&Z<8[l[/P6p/>GgPq`/T7FB0C13>k(:gu971%h03S'B.R'E6JX))"m*n,Ik.`VW@PPBOW?)':aX
%7\!#MP!II+a$-S:q%u*[,ais'3-ae8Q_*U=g>:q`BBMFfR5a,9Z^L:Md[%_^Ma).$\LtY#9D^]lgMb/Y<8sK1pH6(4%]N=+ec!cs
%X*/H-(BWI;fnXI(-G_62)D;f`lb47:"A-*BZ&dp[Vn>M\ekaplr',,^p7?>iAAYn,m!_haeuR=ai8XX`in=qA-qShhM0%cZB=D#]
%mH#hm@RJGe*OMj&UKfjjeMR_oeq$#7Wlj`&p7T^%2aG$Ccp9alPB%%<PbQFQp2]QSIl!]Dp!tom-Ld0tN4kEY5*<NrL_`O)':8os
%-fr%T*gDA0*1,DMK4F;4AnQ(a>d't<YJNo7E8#$g2TkD^[FI?8GC![dWEaJM\YB@si6B^\!MF^aEcu>j4"6e$>6LDTds<[tjP9EC
%m3YQ.&pUGC)Td;^=1I]U*[qaj6$IA/#$`]<IOhldH\Y[NRpBr4gXXkne_F3uO%sS,YLY/kf'9Y<+qfO"&qLLnST[a65RB[n#e>pE
%*V;/l&#K.EH<kA0?M;IikL\7tg?EVB04.V1aa<E$2TZ(^4lMp-::3A(_M@@9;@XlcFocUV_:<Sdi3[l.c)ip#deB7UkRH`qI2&7M
%q0BZa>HVmD:JU6ChY,91[t=c]?9UU\L9`;73o/r$GMP*rO*n"F-k,t8V!f0Oq6BLT2SSn5ZVkm9fH7bOo;5nS[tD0ES!tM.2r<0r
%]jBq$I=6+ak:aoXf.';@eke>B2,DXs8E5_sg[AIa8V0CUhl<dlpo+oVZp"'KH_SLC0`,(^dNM"*LmIj@6l3S6;QlW&k/1*sK8AT=
%^tTo<-pT_H(P'T]dkYl&[p&a4>/+Tj,5cbh;9cL/HJ:XX@f&$>c"d2G\O-WlYHPB88o=S!E35lsGI:R&f7C&PZdU_=?tnZOadjrO
%-^?W5f11O[jjSN=61+Es(=83C3eSlKe1o.+:+\t4.CY(+*!VH60o"Q7j=^D%9k(m.!M\^_QV*u)qQ//#:9'gEn=8R]%RfC++.`!K
%BT[GK5)MFO/Z-h-`TAk^(Q09C[kk;3T(#r14=iIp\l'GiksHN[DX:4rd<nnR3GIT)Dn6HOoSMMu[!&@=hiilGaiWB^/C#g!B2SA?
%IrIhr8+nNZk07"'k.+&\W:I2Xm+%J,4!k`2(L9,5P#rC`3U_O+Km<,]=h9kZfu71["2[l:oiA1.Sn4DEBqARK:RL>5l-`3sT7!Y<
%h']M]bO,:s/%#Xmds\e3?]`\j00k(PS/QRW4H3@N!S&ecl$IJ1c`DED)(+N!LREM>G3tqWT]DWXAok^fY@a2)DXZ.;a5rKm0cICq
%6$)b@F[G5&K>?5m*dH(P0_MrrUX#@W'j\EkR<F+f6`7Eeo$%qJd4PM4B'tl83c)8(gX@F&:?2>3BnaXIX`N7Ih+-pLHe%8Rf1j]<
%WaF%;.+/Ff<T[M(/jh/Gs$?W<bG<'RYInqSEEi8,C6q]nm1OrW.jt#4T,5kO9WBr'(D6mGlB!LMe[s-l-/Es^I$3@<`=ib8GjWVh
%nPPm:8!;aG11O!nG;EOMUBI/89KPsW."NGZgG#+a(?BY--XEr7O]i!t'UNZZ(IIu(8LMGWCQ8;TAb.CRk/h1U>,hF`9@ne7Z<M4S
%0>O!_g]`t8<Hs:kR@*I)18So4Vg6:Z3.Gs!PB_:5:@U_nmaB/;ekpd%f,82pG+E&^HIp&b^#/&7pZe)!?(#f_g2Al%jPQ?V52GT=
%HS>j;g2u,AN^"4VgA+52J;\(n')V(oD@MK\`@I)7l#7!F`KQ<j(pu$5@+r3/e8k;6_\jjsC`eu;WibPTd))l!#ASXq#_u2:FM36>
%G*m+Bj!6isT'9\PV.jJ9%TrBekKgrnesWN#9QW$RAV:K([GF<VhC`+J-4jBH4kXf2U@m5/N/D4(:YM/JXa*gTL`u>J^!d?'2k&,X
%4^h%\*SGUA6G:<M19ebE$<:lFe]o;HGhW.2UN-rYaWtLjG-PiXc?O6;d:ck1"aO:DoeP(SG[AUr/1hbT)`-gCeTlJg1%ESsJiZl-
%3)8dq_leQ&J-jgG(Ek!;97.nJj$/SW!+]hVZZFca7Mj-rP<J9:I`X`>G8:p?(l;NFNr$u5%"b-jr_S't\,9sP>&%*ji9ta9Z6L!]
%Y_D/[>fuk^R5o`1&HRT=bbB`JDSBbPeE`GpCEM)%a?"!>FK_(`,#Qj)=.A"+pu88Lg<6%FPsEPd4MOrX:%HMI:qpi7Y)ofP#..#"
%\f8nc2_S6JYiF!9LsNqdi$6AZ<\F$mpA:fHXbUttE/$5o-h3(PE!%^R2rI/t)t;),2<Vp3luVH;k=s^rM4(a2P37W'qpBc\=;D-)
%Q@3i+#2PqTgtPKfRob+UAmY`p=Yh;8AFeg^l^rA2`+2b8OLZ)2@?uAAmeQA(CO]=LldaR8[>26UG_=eeo;#Eggt6ZKLnVs_s&5sX
%;P>C4ECAmIfS8/WQ!Yl!AU3$qiu"+;bGige?3@`;I7.\664*eY\N_Oke%_\Vl_W^6Sk!.di_?$cFG:#IO0NnTZ)<8iW\sLuB/oWO
%Hn)>Lr4O7VJS-WIpnJ]o($?Xga/^N%L0?9S#-I7>Fk?>&>raZ>-7A\V"qf%\jtU;pn'0G2`[,f^H'!&dP=-A\LY2jKJ[GR2C14U)
%26t(,*duj\1b2gaER$.An8&`I/6#fth/[/9r+EEQs'H4+>?usZie'"J/i[R2Ma`l/d9.9.1egodhs8HWH1jk*6?Gj#>&Vu-(V7XB
%"h)^ms%=P$^:oii[V2kDE:_WJU3N(iRDugZ&b[1Hq?d8i9M!pUL!6&u!/JjWM$or0O.b&?T"b\%_m_VT.Sh,?4PduI1`Mtp5UY%"
%j&H3UIa0G\UYiJ[XFkC"\7a,nh[+h8<0g,l!!%pK\_]A04l1%?C\;iTTeV(".BoAL_97G2(N;'OlFeNKC9'"#mTd7^2@W0s)+JR&
%3a;"I"tsRmXpjgG'X,+CJPro3WCc"r,C`?Ld<D<8$-Gn'is?j:>.%i?Hoi?G$nil/d/*uOs&-*_S-1W=[ZmA<]GuOA@eiEtF)'55
%?$9;j[2A>*]85'MAX4-(]dt@dTAT!sDG2DD737CuZe\<fMq8CUkF<>4"1'2KF)l<SbhdIY0+L?k.5J/O1<c#9eLkr*F?(Z'olbKP
%IBE?mU2Orj&jGE5CZ[[5eXVPKjG4lXV:rK;&$([p]DNTrXk^tulQ1k3c.NB4Zs:/$5>$DRH;?KA/Y=8"NeQ`TD0`:&iBNg0\J%<>
%*/W@K?nlRe(-Oq7Lg!0;bG>c!-:]`W0$p9_k;l<g<2o"pm#ELWl=G8/:Sd@)*>(o#3,bEi%^FuX7Z!nm]uB'WmX9aYVmPdPIW%T]
%G4)_WKGsFZq'J\MZmr33a^s>:^+7F1NJmQT?Cg&pM*loj[52`r:WL%oqUUA*\h;GU[^^?tk\lOfVqb0,/=,+$fAK?HfjZNfAIFuc
%.k?`7OZC%oQ2GjDB5@6*:X<rD\Na0p0_7'0[l.GqBK\RDI!j;NolBlZbgcU1=ukKSA)=n$1:J>Y]R0YMFnk=nlEBqh0=4J)G'V2Z
%*Sj_(Gh_iDV=175)=Pkfgt2JAL&%.#p-SYAs+k!f0XlA/Q-=R-.3?-H]=K[<<]:h1:S(TZq>C2D1[eN'qa`BIV<,=MmAK-<de>E6
%nC-_tiOHGP0!&l4%]>qfgS`5knBQ4IHi<q%]r&1*^"aX>g)V.$g\5VNs'"&YbeHCBXm(+l^F[SN/UpoJgs.!;QY,ZW/l+XfgS`XW
%]U$;ECG,"(fs\lr6N+g^rSh6un^)__I1Z3tY>eB"58NCRh;=NPB[c@fY6SF(o[CJqV3S`Z>K,:ZqjkUdm-TODi^8"[P[5#QT:2o6
%<V5%F`PZY-DSC'K\2R]@1\5I0@Ia?/ji-NL_l)s1hEII1<6@`+WA_Gs^Nq<3<o0UWD:S'%HX-IEEj&T[qs=;uC\lZ3_Wp9s+#q&g
%Kt3P*!PQLs^&PB7BN4CA:Hs+fpW+EUqP7`jU\9.5BN8*_o[.1!?*[@SfmZ_YZhLMD47Mqbf+oHnl&sT_-W@?-eRI@;+3PNcY23Gd
%>a`@?]egC<ZsY;aHoAI+g;W4+l1t(#T-*sB\%hFD:E+NB85ILJgUNQqB%st8!)uaP7h<hF6dYRSX.K0.qfV.#H2c[kXm&V5]Z/k?
%?[3BX6Efp&Ip!*RQg(EkoBrOPmA3l>IrT)bS#kb%oN)<N5BtXQT.\C`V.U$/gd9akk3)HP^\Q$]g"eBb[oV##CM6c=ATnMhH<X3E
%:Gso-)Y090<@mMk\;B$)$dC'j]i*K4I@i.Z5C3!4WEd/eVeC82]oCY4IX"pr>:cqDp,?bO(4LXVHpFkaL**mJ"JDC2hP[1j2>t6+
%IOM9LQbID,/CqP)7s"RJG7TuUpE(l:iR;_rDX96-08qf=*5<u)XZh-?>^EXK8t_B`>"AWAcoK4_SUU:Hr'QM:e3rDP\ZO.1Krp]4
%e$FfK!,`,Va^oj5h+F!e,RR^Z7'DBB:O@9rr,;2Q9&B-B$N];(r3uL`'&gpLRH\0:r]5:2rP2-7DK6VH50j_nV[OrC-4QuAX3V/8
%0,<Nlr:J+d\)jUf=8@G,^\,]uE9HQ"m%b^Ik&_iN/l1:bH*DO,2NF*#=7aTuHmLiKfOSU#\[2T0>p/Dn^.3sjrF#0RE2d^;.do8&
%p636SGRs*nlL4Tcs5j()m*'?0lrrDDlDm@"9k!A\hD?sVVfA]GqXJ7OIX,[ChXceOT87.%p\a45la,g(=^QW^?CtFSkth<Ne*#W8
%%AS,(3`fmBH)[TVdEJc,BAShR0Ab%E>>($kSNJHPn*D&2l](Y`_Ud\$41*#.l0\U#9/FgOrpma*qmir9Is@S,qf8lRVH49Kl[2O_
%^]20tI[c,0&sqI)G`creHGcd:>J]mI_35DfpYSTTiSet=h;(]8J)7lU`n'=!oY!FMcePWM(\!mMK]YpG^3DJW;Ho`BY,5*urmSm)
%EZ-JS>>hP,H+TtI;bqjYpE\)#?\-R&*IC$jXDXVt&:L%>>A<O>s/t/.7<Mf6>hJuJEmahC/ppljJ$GB=.Grtq5?PU#<1cp0$Cdqt
%@ILB^)*EmJNYblaa7nZ;dY.J\j8?6k`J34$5F>?\?f)TMHaiDo!OW`oo>T5`r:JKcq-6)QWk4=aWL9a)BAKhj]dN#$]r=,Q?]3j#
%Mu4k#C,T/l\+o8&Gs$Ai,0#MG>%)l'g$78=L;3?EA-l2sGqsh#d;-<4/7R2"hEpcO]WcmFL$nZ,G+Y/^.G2p,n#:Zl!q1eK_^C^*
%@p=-T`To+7c1,P^fC0]2:eEW/pf@C%]A@/jRdT56cl=D%6([bBan'e1!m&BtgtOFm2Ar=Hf?=b1+&JX1[YET+?au&GRn-j1%fp"M
%`VCVbWd]adiH+[@jjgrGIQh9U$c>d3o^Zd[:%M0:-0;9-^C"jD&=eLskMc[mYBJ7B_j@(di]dF:cbf")*1&*&J]O&3WA/[8(gI;:
%[L9u#%VPqlA[";b?fP;hFr%]n(=XCM.o5S1*tZ#-AURYW["l:V+2B95+don/(>$076r90KODk5,pZg\N(hjiP$qO\b_6dY+O:Ts>
%dAnFc>YCEL*:)ZkDO<sX=Q?%7$?-R555t5S?RL5'fR!RtZ+P%j\j^eX^7U]5EM5\Ho3c_:gZso]QZ#%26`f6[;5+*8hB@<EFL89#
%qq](tmH`'7;W[,_4csS1*CG&%cSp'r]#aM%Rldk*qCNcFC?]."_)'IFf2j$kg(Sd\p6^&NiVi_SGk(9Fj&>3mWuo=QObu6N_FC<-
%[]oS8[0u*)^2U1M?Sfs(`T&m`I:n$&gN%B)YE+-Xn<j^8pErV!RB8tJ1ZQfY9M8C@4Xa;P0"pJJ>c^3(4H4]lESB*Ld9=](95>;R
%^VTu2lc[P$;;9AIn0+UJAt+ifDu<eS`h5SZ0!@M<0?-WhbCp\0s3Z)5@(@QJ?l)[QEB#\Sq^gg37m.5,WomS>gc`<^HfW\R%kijB
%iV#Oe>AEL5&%8q\MsJ?cV,p*,TAK'F\+k.*o>BSB]3dV#.YDNh+eVGs.ZF=%c)Z5+jh!,=+:#dd^iNRRBY:S<l`46D[<Je[m>4L?
%7sd<XcfPe#4uMJ2QO]T'lfR+]gBR;=Sp>9uX4=W+o:rotU9h?#E.:jNVjYj%P@&LnG^:uie%b>93B#+ZIE-/q(H1Ree+EFO%oq;-
%[cT6U]+mDKG3`S%i,o`?iZ.GP*Sk$ar:SWNg@<H`Jc]<MFPo9k5k4(21`7e/qdGgf*lDmj>!2AJh!4j3Mt>fc^#Q\ZX*WH38Xn`1
%r6heEmOEDUl^*C9Q^8Vg+A`#THlNHAc.mU:3O4q#Qc6H"$R@l!*ku]!4oKW7nFk,hH^Nm9+1Aoh%a<1ESio-j?2%Aqo(D25[;'L8
%eHpL2]_uKXRU4I^biOOZlgS3Tq"=>:I`%]MD!i5N^dW0+?<g&R^33D%;%-6YSsjrV^=@E<T>)0$\Q?,n5AZ$<o!O'OCJ-GkX^>DK
%=FU$Q-7%0M9a8tg?A$2H`q&]GK3O*jCToM-qmE]5rHA%oj2:-+)G.jA4/7.[=.aJT]U1:aCd%^Y0^UFJgff"R;nJ:L[ot[Fp.aKe
%Ma[9l>Xlh$cVJg@)5hWZ1+$eA\\D6^f*o85Aj:3Y0:.,=%P4$a)j"7tm4At5#oNuDe@_gQPfG8b"cHda_8l4DiRLH+-[5CIeXO8#
%hJkZAT]"<QABmF28rG??Mf>,%hKkV,LOj^)[\)d(eSk2^%TG+4*u4,;%7Q1m2HUchf>p&2]SjKTm<lVERC7TaCZ.eRlVpr=*Hn]K
%Gd+`"Q[f[O5R&5[m6:AGldos?It)&DhhgjQ""6uhqt8'C^H@j^G!9$./q%$[h'%bh%_QHS_,=juqm?u1`G^SJDF^EC\G$6;(Zq@'
%]2r/rY'hqfpE/s[[h%($$6*3u0KbraIK%2$O47JdXh]aCH1Io@np0mO1lr0<6G.VnF4g2]Xa>7MQZm?)qcMQ"O;7*/SXIpLW<ZA'
%o(9ElWtu"bNsIQ$?fq(NC`X(3CIhoWUV/M_d-R[l*U`6(VtbDnrLH]]qs%1mk(?m8Zb!dMK[sB'ftP5W^ZDSFIQm5Ok_`X=lb<A4
%^]1fes6XUMok"QSV2m8N%QdqQ4?ZEBRJYG1r9HeXhESAc.W]A-;s()e*uqQCmI?Zu\_>J*o91@VWE!A*07S7rgj+,do=fF:bo'ct
%h'UhGqG>\2BBI,'`A`_DT+)p!Mg_sMI3t6U`s1Al_N0r8ka(f1"Q=4iW9*frOF,%^TtW;EamtK/o;2;`mO?6F,/<!K<SH@.em,<T
%E^pdlLMMU`e!9&L7,kfZm]A>s-h6O$8#ifeGj3bq>k')AQFjiT:G&qcj&9p\KnB9/pSP;>Is\QpWS4mA!7LXhli%[a!ae/-RYPYh
%!OR<?l"X)nl`\"he$bjMUep1;',(elP5(u[ZrO@##4%I7V>[l?#\i69DSIiB0/"*T*%W`q*,N9to0f\pi^ZLmiDU'o^G!7W=t),N
%QTD,5&7<0MbJN<,lG5f/db8,2k)e2Vc1d=gMf<D/0^Dk1s6F$'rd"J8naocWquu0+O&'g=]=/Ldf3E(.`W)6CjSQWEp\S0mWPtKu
%Q`$\X`np(!j#>kV;OT]GCWlX]gfSZlRkEOr.'SP44=5@+G6Ra,Nt/3t^Eqg@L1uIV=?A+JptBVPAp0N-jr`Bhqi3B$j,`3ig/ED8
%C#8hUip>kB.o:;%MO7^pQZTa>8#?0d(>4>src*f0=5%#q4hnUVld\>fp=E&R^Y-a?_:t@<keR?(LH[7BmQV)*A<b_*ckn=h\"\1#
%htccTk5"l;Yk7kXh(%Y0Yn><!jo)*#GMTgkWKk/6(neWq>C7i!kJ+lq31]KjLtsa^n8RYYUg%opUb"\/?<C.FJ?89R7gnoa:N!(e
%1=;-GVnGSL5^Mgc:ZgoRE2fLC?bHWd:d\R,ZZrNXQi4%[6L'p!e](KU2sAeuq$0:FFh_<C?SBkkHsA<]$i<lc]S<*Z.QVL-.8m1Y
%K?(0n"-TcjpMOOdffnbHGB4f+FT(o>LWFbA;=OKrbAR]p^3NA:O"FX@G]E:!R68rOU1XUuSpt"DF8.Ie3MrF]r:D`J+;.%KMKQOM
%LFirO&2f8;fS?A4*?1&PpZGc:Z_i-cY?sE]MY6hf[fJQTKkVu5^:Uc<c/2=_pMNPIIjigi<Q$_3,M;#k2O^\;d`gF+]gRE43pggs
%:YtSVmO_Ff0ji#M\^akiMDecLC*5`ICojp&4h#ogmiGX+hb?m8)PRtZ-N:]Ck6o=G/l4Ce[[3lCmS=K)^Wp.Bn*+V^a&dKKe][bs
%YGTonhnHcX?XJ8D<mV(QgH;).6-DJ.h^lb(=MRTpD1@FiN"W3*Vg:,kp;'7$0Q/#_DEj_:\o'9=H)LY_&Ap?t"oI7dW=V42G7[<;
%?(Q@&qgMDU4)WAE+5]/W;f=ch^\[2U@ob7N6U.VNqcW)r+kf(>84a)!^RsAK?]YoQo]GjCX0"ZWgjE4MP^9&C@qNr9QfEjY2b=nE
%>[C_r+Cs@lh:fI\N=B+3$jg#BY6fumI8Wu*?PbV5(?fWG*]Ek$_`55,3W3Ne&C'?eJZ<AfOGr7!UKS(ep@c`-G@02sp=\G``P^#K
%^VC!LARYRTn?qoRebh)V\F\Wgd*n<(pQcTW^:Y\Me@qLIr0\WA@eu^W8.=sZ'K56&]8n8)5:j/`I/'Q1l=E65J%Kq\N4UE.!:-9D
%f$7t3DS+0JMbcqMgAE]jF8B[s4T4ehM9McN5F1K!.h4#?]W0/P')(C2>2.^Mlh@9K/D+<%S;]]pq6FZmpR:\MePGU\SaC\j+7JSs
%[N>>-L[2qUXP/""iR<Pdh+ag"oDcps2d^c)QbRr/4[]LpI5[[/)`(\A?Ujn/4oVC1grTJifkn>!G>j48mQnJ.kPCMBl6!?39]^-`
%Xo"^^g97CW_iK"u`P"G%rRG?1G%'^-h<KPE5$I`q8r#XfmW3FNdbhK)At=26JiE_l,iqR.GST\nDj;Bp*`_?85/&K^U6uatGHZbM
%0\(@>V":7O>`_n_Q:T%G<XNWG?6JZ^n.CcOqtB[U(QoN`cZA48k'*3&O-[N;?!`DX[AC&K%c7leRJf*Ur\sFdmIPPBCfZmP4a6GX
%#G&Ef;T1cF`RbVAe8/XVm5,dKK5U%bU^OhA^/%jZkL7lGa6905D?mKs'W?GN3@J^/g(2Gh=64'jaF^!-lYBi"^Tb>m6c<p*Frqeh
%.=J1D]U_BumQtahP70K9DiN]Bio.c2Ch]`[\36JhGlHH)D_Fo".Rpq;ohRBg'F=OtkbcNJC9US.ddG\Lm]jmJ=+>fWnR@PBh2*rL
%;p=YG[\O"DYMVS9GcCW.qb3^Rm+2%(\#D#ELuR%7b?OjMDhH0k4(%/Oem<0[`uj1*dV5`):3Rt:F+!#E#7!!U^BaCc?djIQoD&$G
%9Nb"LhO.\r4WP4/:!XA&D7,][:LDIHn*Zb%M;Kn5^(VT)_ign1]mrmCs0](R=Qs4[s6o3%\cn]i8j.62S?(;fQ+6j+J+_],J$$sb
%[m?(_rIp?tV,H"G;n^CO8`W6KOf$>A/.,*)0dK1-<>ksnDC=O8\$\SXhHX\K%r70"HFoBE1f%$Z_ka)GV/_a;[oUpgYc5LWc15f'
%f;J::mA+&?S11@!qtAMUHj2dYEYk?k_.in4qE,0f/]ma;dN>d$EDH=,cI\M6d260FrQkL<na)clOBZQU,\TQ_RVKTA.H/1I4F;iq
%b>GqnRf9JEiX?d^_&%Opb=*M%s3L_9G!C\Fq)_(00^[t^jbHu'enAEhEiXG$i)^HhOnl'K@6ZX1_g_:[4olZ,E>6RYrOdLt)17ou
%2M$lDTaka8S*p%Mr)i%_08T*D:jL?af5$qd.aEH%`fqn@FC'`bm@-J$W4[&Mbn^'?7On'%*j%YKU#N=NM=Z0-#CTO8$M$[8F2d`X
%(=5klb+&*gY8!RLM3jn1E*.'#n*;_Pr?%DkRp%AE,_`4%ABZ+<hbs4[P2-/I-=8Xal+M<Q9eQDfj8&F-r9K:g2t\<f@@KKPk/CNa
%$W4iT6\URkH.H&S^D01q7"1g)LG6MG55'+9o,"4lH)\"Y;[MQ!aFmt/-/H@O1>p,sm?oSe%fDca^@*Dq/%(4\.jbA?MCOSUg;]7Z
%@c5l1oR05>C%CPe+Mt67["3S4n$d-*@ij]CK=odX[rN!f4p_*8^6j:IR($MfpLCn?o3N7[jPph_JqtQ,7m;LPq(V;J7m7_A<4lT^
%jU(mG-#K0!-^To!@tY?`g*cel0Z8Wi09.')o_jrs>TJ([&o:Dl+/qL`k52Y_SHW0GYWMOlCf/.N]YK1&fFea48"o1fQ?-(V?Eb';
%$U$JXkVDL&Z=&SjGnp3>An;8R!%>[FJ`#8<eU_?d_3^63hABVn7L0iF*G.R(GR.6pWln]_1D2dj?:&,A;/H+@k.Ht:(TbO\j.#R-
%R%_!0$-'Wq,nj\_7&YLV[QCCf'E3,/m1$_G>1t"=K3:W%kD(Ac[]2=2)p\WPnSR.@"b'uQmII%%cu13%NQi-THXe45RG(c.>43\1
%,A[j;T-sL-5,+\AH>\Pio0"0X1e<Uth;CfCRWlYKNkY[&C&PjACd*kBm#Nu[0[QoU"?;="EBK;XM5Bl:f?-V%>uO+44JNY-eYYi.
%#L+2pV&&ubGr?`]&<4fte6;c#^`GuK$9rJS6[$ub,QAk*.IE<Ee.L'J?lo87:a2t@I7!`a!RN!a]CkdH%r?!::.LHr:PbZBUI<[Y
%gD^L`&^g:\/J&NT(DHI;P<D1G'AK<ajb"DRdnr<7JPY&,*5Vh6Uk:?lmiWLJ@&o"f=JnZESEUs^0QkfRq(2UM*S^loH:A*1s,1q$
%1DS&g,#F@P;a+&hbiG*1B+a=P#DAMNGT7A$VI&mYo5SJ>gpJQkgjU*%rT+V?a/!SBQY;X>pdDIZ6g1-Z#rM^7,C>eE/AelBaQXr%
%"ZCIiA9Gg72N##@5G(j:$'Mj?6=@(:_,!8Z/J4OS7BoGo/IJNAOO5R&-=_QV7"VZf;j;,'I+sIE311CE'hCNjM!n@5-pFMD0H(/k
%:^&S92#S!F/)3>`Sg(s?A8[.;-_DfRmO@3eBeZbH)O$j676JnWal;9Q!1F]7WBeQ:6%k@`nfr`kJ;JAMhZi]_hnud&N\ihm$2$"e
%72EAV*1\]'c[lQ6%SPT02G0$VUuB*]U*0RYd9"WAbNN3F4;n;BC!/F.8TeX$`h9/u"hZ$jA\\];;CjeN`6=g-ZldDR#1/4^<^OZT
%S0cq6`f-2d("0p8c3@[7/3^:H!\$$ddEo5RNJ@(h9[q0\5kp0Zg5>/[/4QBOFA#T)-_0dL7.9s(_@#mKWucgHB1^&M$rj,ift8Wh
%n["*4(6#*CJ2f+YR5P=OX,Ol3d'K&-a*QC;_@XfiAP&`9H(c\);*r<tr<5<Cpbn1H!5K&+=Y<'PL:J\L4M;oR-tue*Ze!$J`GWTr
%S7oi-Nqa3;2'>6F#Dk<-*l#N=m'(S2P,E;Y'DOs9FRbZP%'_[[Sh/T_!5d&3_Fqrn6En+_/^=MhKR5!:b+$H[G_hG'^a/3=qr=_7
%FF+4<+lQl9?D;IpJE'.I=<]<u@73JO[\DE,6gTX..aJa2VZDm?8,=n[d_oNaGV(X*Mea]_+:R?&'BMYHD#fVd^b^[[`2+"O)M3GI
%$D\7;gW&D":IPaB<#!JZ,EOZ*%irRaR&>d0`lnI>$#5I/!r=H5#fq"YI<h&jT4AR(I1fH]'at7fpD@@pL#F1=,-`"PEo4PfJF`g1
%+M@:J6<0UIZ3`me3#V*(Zb4A=pqA,:dT%`Whb&)YN.?(FIh#q"f#2-o!)SHu&45&N,h<%WM_Hr+Og35m7WhC\Dj\pf?\W$!;`"VG
%4YZG]d/%djFJ2<],0^WJOtD'_&3b\r8)3+B9S/@oU*6MX\F8rcZrmhFAgU![.3]BO[5]?7(G\/c1l/t7!/3Th#r`k999':o%*02L
%o6iS'M:E.pJQlOqiA*PJn"`ed'mKJ,;A]]bc$(8Y9<C>A1PpYD(a?BK;(lDWNUTs^CT!#bWNi.t(mTs.);_pmpgsr#N+[tZ)f9E.
%3\f"e>EtNd\jC6W:.@`a/X?s>YY_d0@_sf7_D-&!cm&N@i#ull1"\L;:-mMe4,o'r#>,PZ:*-XZ8$ik3JeJGk=q$XK`=t9UW@N)$
%b&)e7(?:#o"=&U]O<'P]6-;n)CD2ARUNnS"^*^LPU+QG]0(H#Sp(tn#EI)p;h)jpZ%+;qdX29sr4=*?,Y(3,JNt\N<N$Q?8M*t$,
%73Z7Wj:4a`ijjW++lBSQ`h4,p4HJD&I9@6C&gtOY"o0-HM!dE<^(*%%Aqt"*f>Z,+$+:m[U>!EGUI#hB8T/\>4F99a![#uWa;S:6
%\7j(3d_Ud<kNJ^`Ike^)fI-4&*!)8mO_"U$.OCUEU]kHq!.n"DN(44;:"7+-6(]!OJYP77nQrYo#r-CKr%-L/j_'Ehpb"p#80>;F
%'0?9SCN)s!<]:>V^h4:s-s[<YV#/Lu0@:D`_\_S?j24Ed==?LS1bA':?m(Ndd;3@`,il)s=9C!B3u73G'N?DbM+NM*@\-GSE0TPo
%dsSYa(i9^ECcp_K;8G9WSLSn]Z.k,F1qhc(V$`C9#^8&BJMEn,BPiFs?r"@A)MODc%S1h\G[_LEIKCCgG!h_/F%YKA9[#ei)T@eV
%U-pm2#\CA='PE%hL'X(r!_B-gai-#-Nu0e&*4mS/KG(/%,p(\XOUKZFTc^jV668'(^kC0#`*EAq);#jPXbpNcZ$m(o_\YimW0Jp.
%LfY83&]T1iKP'/)H:<-)4U[Pp1YkC`LZ2(TL.$%""+4_p"N1U5n0[NlR*nRn-C2iF-;gi6-tHN"U;s7`TuB,5VdL;Z0Imh0"$%X[
%Da[f'e7uQ$_KV=?:9>i]-LF)&rG"3X!lRE-dn&!R0SJ0rLt>Y-6UYofR+A>.>3OL#F,NFr-EDsp9?>nQ_ArE"brV[T@jmALC8KB&
%M,f(%7Oa=bX=7&-KUFi[3Q-K50[ZK39L]dL*H`+ZJ2P#"9I\2:m@*JmKph?7*b1a=Qif%2=?*cgQij;,Lh$*,bSVWs"t>7/-3hR'
%=:0e7-lT<"!eR#aMLS]9%Uf0'/;"Ui3?Tpl>(AE20F,b@T63b7%QmuU9CtV\%S4FD_XgY41P0]u#ZDWtk%Tl`RqU"_,%2>_CWmXg
%72m"r)$:r7DGFOc;$gM_l;s?-8uejc.EiW,JeO!X*-f1OQTg*`+=/7a>0p381$%jfFqs/T_oL_$4DBM;OYu81-OMY['/8*_'kX(,
%0oNB&_X,>0s%)Ct#e,,]\TJX!dT:)kQ6.Q0)/tR<bt/U]N-MEHF;8E%&mm"IK2\-<D<#FnV_M\;k4pHc):0^8[/Cn!7ZGllS]6U3
%\cb6o0k6#iXSXhd^-9GN/('`0*](W#@E+;TY&(kmN4\XDIVYZ4q\E9JV%dMq&moG'Y;#jtRROQ+$F<NUR/Ll-I2Q:C3,d0I0B56E
%`k8Is9I_R7&-cgB1Ll5?jeuO#7US;e`J4SD$q8bq'g`/Zi>AO4"C`I!#Uhc20[M&+*L%48F,U7t'i[SQ!`Vf8*hA$F.>FK`Z(4Lu
%KSD?]&W^_K;"9/DU6U`Ce7Qb8&)W"8pOj^,1T)pOA1Yg.@+%=d%$[?V/UKa(d=oYT!tW7Fk^ini-m3MY(-qri5q"C^E#>0;QlCr9
%'M"rA6;nTWK-<9#^DAHQ(Uu`hJu9W&)&q`6";a+lbsCgFljmM!+D1]#1(IJ>\f[nK5n:D9!X=3bIFR=sH_0?j,0JjnhD8]NVg6Ui
%?q(D`+PpO9=jDP&i+#^D0R]ssdNCEp=.Lg4"rN2:f$k=4'&i+Xm%9Ll8Ho2=,cdVq.S6@sLd[_s.S3eXhAc3iOt$T%A%%i)P)?F"
%$GUPKU^A:F6o"(COr,KJWoW/]?mD8AjG);4-btom)=,@HG!Q\_UEhn-nsrCSLl9_MU-<j'6.)Hc+bcP5$"IMgOMe#/eLWH90LA)]
%8/ZFb;E!aJj(RHU4Vam]35mpfA5dZAU4$2c`r1'#n^kDmFClM0?T;oSMGoUhZ$<0m<h*&a1;qCY<ZIi??4bk_'rMW71;&(YMBb\[
%i7)HsNYZ5dV.[aZT8ch&Do4ksM*j3Vi?Ic0ES!2Y%W'X<:[SWNpuX\>U_EWb3(jsC,3-m+$bGh[Id7HEeThFknOD:bADOS-]+NHC
%=@[e:)u+.j(*4'KKqAkKCdJCC(N&(^n/_5uOYA+[Igk'UK[p1N)DMio$Q4u!cj7>(B2YV5dK'0Ka`Og0:SU-ikaZ27&8kYpPlNIj
%]cSWQG[eP*'(X_Y8Sf4^$">e>S-]:%`E0Y.JcS4Q:I/I*"Q2^gc[9./7"tTj$O0TNVMl<0$.uB-[9YJ\#CP'\]cp5,+H7cR<S)+3
%ZUGhnpR<b=#-A.^B=/:NPPbkg<XU16\;!pOM\!9@UL[i?^oa\_%uJCp(5m)JB2TKQ)(\(pmYA_g+X@S$?gl]!=BcbQ.<EI`UIS?0
%M?Zj&"S3K-@'#$DcFK<4Ucd3jl.7'?Yd3-qTq<4d5(MinN1dn.;%g+nLe1AiQBT2,R5dR1Rl<`:8pglK&DFi7,&BVf&^d9/5foCE
%4bI8@J/8,Ne>YF%&]0)4""B%7d/?U88O1?lg)g1=#,AG7Ke2p?;$338E.rigPk`1QMBcIR)iJ$A66[!1_$H25+ZJMMZN8NF5YD\@
%3jo#F@"&PLLbLAh+!IG5Je'%<eeDi8-F./E?\0OX1^W>N'Zn.C!IQm.b?nCZ_=1L`mG]q='T'=FY%?6_&B>s$C!VXe+Qa&dm"i#>
%'I7&ua@M8F0#eVnk[5rr-X7UgZ\;6@&^ql)1BO$P@1396JjZ/,3%#+ocQeY_#YQCS#.Os8M=tu`DAFNs!S$(j.`6g!;VVSOoE2$-
%pJ'.FOB"]86W=PSd.jetYgbo\(-\.R%4J^o%E\NXR'$R$Lun\t!r1eI8$I!SqB#"T(k*0^]TLYC/R/]lZh..TCER1$qD!']OBkog
%0l";@#U@RE!MN$jHWKVY+:uY&im9Dm?",u,OZ!LZ'T0<=/jg%9Y\.*':gg]`#tW,[X9]:R^h1FF1i*Ru8`7caPZW1$);u#%X)&W,
%,2Ak`OJQZ^XTT62]&WjLMQk[2@3j=@\q;%57D_IP`KDcR9@g%nXbN2fS"^sA$CW_f?%Z2_cs'nZq=#=jV'&$S!>&Hln7W_p$)*as
%q"h79&:e^d^^Q5Id]WrWSeX@bZk6F(N$(4qOtFq6Kg,Pa1)mm%HPfdM87/f#YpCHD&RUI)(#UhfS=g(@DOt=fLK6=W<ah71prF'@
%='u-:fTNL[[nm\s*=-qTED0"-E3*;JBJ]id$ukj!8&C@[K1B:R+TfkrMqp^V![ne8P";jG%0?jq-JTDO0#T)&S>>%nK?TMF@RUsU
%D[qj4!Bd3s^!@n;&D1@pbRanBHHH5bBUp*\VoV(=nUR;r"Eiu`a&W>&krsm_4-1i^4Y=m1"=tF7!M$eg+K.VoVU!)NZWJQQ(ckWL
%>s96@cQK^B%8oH1%]/O0d5f9"No>`Z@k'mM_K^1>G_D'K]qW?4,gu"jCFuJ.\Br:)4^m)U9KC\`_gX;MOEmu@XqYQ\L1+n5#W#tF
%(O$a'31MYis4!QNR)is?kcVc9VX:_i%V@C?2!a`6PcY56A,p0KC2XZiH'ZMcc/8n9JTrB80H,O"LqKEbaq/N<\3(tC=qWb"hQ0?O
%pB&t_<kNH:*;;-=]g+omn6Hsp8?i"+]5Za)Z;>`C!+[3)Z3]fSXT#QHXo*9$GZLk)(9Jci6]8>ZO*+Im))<uW=f\4e3J3!POp""$
%4Sp]mkSF7.1&+i&N.>l&)ht\M@Ta#/&QTu.BL:TFXOoCa+]?0$;.Ll<U$&@LE)?b`R'6TW?r1u$_c<W7*B2GdK^Q$'J42AB9O%d@
%K[jZ[(.:7h/osdcA![XV%%pu9E?ZM\n=_@&E&Qbs":P@li%m0ZR=[tkV\(^TPg@='&m8k_C>foGq?eUH&`7*DjMRkQ1kNQG3pn(6
%4,FD4,UpM:$#WP/`HeDd,W&)kit;0t_,kd'*h.tLMm+UId#-n<KT(1<0^k+:K3KT^$cP9H\u-`F;0a]0fa[4.o`dTE(JcCW(GV-8
%gdZ+@jGCs<JK;p2?m07MHl*2fA"83NaM_(h@FuH@;C&si\1'NpGU'!p$2a?,E.iR("D_g!?t$iaaO4!Xg5a.+U`k6?puF7>YZO]P
%JcE`rDD6TTl%9p(QRWRjfCS?pP?W$=.:G>9T&Pu)a99cU2Ya-ld/dqBgj,\qjq.M+"c!f8=GrT%&<:<l-%,S$C+T87"j^m9)V04J
%"W`Gf`?M_g8=1X6X@P"!G7T^4/K7Ll:7U/'@aA/_-L`4a`=+k=0T1@?;pmc@'c&$O<#l>R,[CGhm3-N0l!aC37+^,r;coSuWG3#C
%j:&jAO\US2#gl#)j:td/j[k12NSmI/+pIP"`13oZ`urMWiGQ46iYf94=U*"0&;H&aeDgs-,7^'mK1F01bKAop6jtJ3EPuA4_Su_8
%rnU4ZL^5=fQi^,-f`Js(g;hlV<g"^nL/ZZn7p=e*6R-7g[q1*!,sV$T6pJ$b!X[\FrW,/$`'d!-82-U`W8O:HE*S;'$=6pt.LtQ]
%`X7HZ(0;$PDqS4X-:1V7Y>KsCL^6M@UY?'6muTET'"^HHXU3dHd(N"+)IqP\@Ur9SGWp'K!V6r6$bNbG-YNnr4`kJW3=Z?--YJA^
%ENmJ'4`X1aL=XA(F?pMTn;cGAA&?+hZ"!FXiDeMOL,;&_dkO0[mY-Pd3CeBo*#_=\+h2KF#rM>Yo8o>.HmE5EX;aG4&!V[5]l"lQ
%_>&]b*'AdFaY@=t^rL%h#]bSAL7o&?(-3Mt,#S]q3WH8fg4;aT9TjW[e&6Iu=?#5=ELpdRdkp]L=I[6olk*X`q$f^#:CFiVqh.U7
%;NlJfl(eke.0g&4*dk2tfHqsm"CP4JUs*^8%*$A"-W#rNj>`KeYX$9\$o_Xc"$T-LM04F_*'u&VeA@/QB$fXTE"3A/_r?\cQY(al
%!\8m(`2eXI7oEj4"UPmAL#`Y7N#:2cGS#*=]CdDIBt/Q65'da5-*hKOo]p5SJ5P7R'fPsm8W?g`A.G$Ca`l1HO;.q$q(`Subf!GR
%Wutn0J1_]/FVDBpM9&3g+<fp>dLIfTL3lBM"Tu>!m$8cOA0cmYC%3"]'`\c&G`sE96d7C5K+^X<7:=qk1-k>cTW/:?_"0,Y-Y,@X
%ji3C:NqfGkP6*'U7j#g3Zg>J\;a0,a%gF35A*CN_H&A\c>g1"mpNek?P=*Q^B@[MqH4:R%AWinJDZVjU?C:*-\qg@UbafSW7Be8f
%n%-Z'Uo`cu&ods9@M^nQ/C7.M1JeOr%9;U<)I!VfW0$<'-!0&#8_PLZOh:Dh5u$RfJYPSck[>,<'D=CgN@e4-a9$YJ1bZ[1p.tIb
%,rtlJL`gX<m9M_Wp2DrCj?g.7@@_@@Oe@jkY715g?dN%P_Q+p2(:!c]nIm3rh1C3q;o0t99RV_j^t/8825'k"M(XK/iPg?QNA(WH
%@(VbO:_t8r]cc9dS-.!]7KAkcC3U=%&$oN0JKZ6/Ltu]KkpQB`(/D#!&4,4k:Z*J37!bjTCT!DB#Rnn<M3B)iN"_.>EL;\SRbpaF
%WuEh8+osNK5B)S*,34Jk;)Ar*l5-?`&H>42%:PJ']*Fi(XFRFKPPoXTAH/7Fs50@,"3MCMJ]O:dHk<M]SF1=;E7G0&$tGdZ2":s`
%(H<9:St$(Q5baYh`a0E_HZ8,b\j6>;MqF@$0,@II\XH6t-*@fU%]$t;lZ?H,.ZP1?1kH!(F&7gu+acX@WW\JY?1q!$%n$'jo?HJ)
%hKJ(NJ_oj1,*7@%SfWof+AdlI*"0))Lq+p"P6D5Pm3t%W4##SV,`<j3.%!LlKG5X6*jc8baHGXPI$;c]:H[ph&OkT6i5mb@1.8WN
%ToO\Q:m$"<OB3.,&tZ8d0EH.EZ,fc\:1V0`p^E9d7.rWl8i^Ml6N0?4?5`$&*4"1+frIT\JOb,BC[@>1hcPV"P_#Wl_<W73iosoW
%(cWVZTcm5L$8/g>1t#T\l<J*-7G5\u?6L(8fH/lhY[r>1&[nm"X.Uem[SQ1\0ru&.*'k9I#+Jro%0E%C:IGbQ2&7IdH`/-nn7-Jk
%Pn?-pFX"L28K[R7kjsnem!FJi*M>eMVLr)`IsIW\.]+j/!$`4$dPC)T1U\t>\Xigh`%9s(OQ6=^n(eO]^of"0W#7NdOt%gMMr,,Y
%+TtLKdZ#E(1#i)I>V0u]=nX(X8,O4?HIUEM2A3pE-,CHf*)Qf/Og8Q:U5b6Bbaq%Dk;c:S\I&YQ6)#1CJaaZQ[=?d),HN>6'm.&4
%,d)f#@1^.]D2LuP:oK&S5PFXD89@>:'A+?Q+[l(9#WW+K0u4?F*YOK"pRi%^Y^Zb5M>69J%>9T^iWpeE64^(,&qcFhpIA>FF?u]M
%4"K*1![81IEE4]R*_WjSYm3E;m`UUsUqqDN>bp5=)NRR8S**I>:>(6AVCc2T>e+lc4dS,;2,$n_8EE*3KLS^teO`4C4DCUqd%*h8
%!XBWG#=`U2+8I\5W]\.4g1lrn76l]N!M\KrZr=.s$*@\1j7X;Mi(K+Ki9h/teKf2,9_YK:A0/OCDOA%?$1nE-7)<\LK[J.IOB<B@
%p.uU1Md0.;]/eh@^a8\Hn$#D@a&usJ)R^72G2ki'j9^o-#49ULWheb^6JfgOK\!*b82"f]c:BYfHSC7:a$FXMW1>%P_PW21M6+.l
%f:5B-dN'p'HjEtf`.7,j(lso^+uG+:f\muUBF,ZX5oO>dSh34D66=Nf,j@]_`-r[Gd=DDtS?NE<g`cpTGCCMq&+^7/[e*+h\?OAI
%aBXP\e'NjU?mUjfNhj@NZk_FQO2<(e,/ggmUjWi$=nEbdfSt8j08NdTSI+a2I#_&;4,[LT#1<b7C7GK\Xnp+&3IBIK(EnCnPYEkA
%[7m)n,W&';1B+T4M+hc>$H,H.d9q`i:In(s@kNLP)\=XI&qXn=(]l-5cq\TJnrciA:c_no\]!qNDM@F49Q5o5*,pp-.%HSSfa-il
%:s;9@/0V6,3)0SY'YE?!)&D9)?,dec1afP]C(?Bk*$Kq6@*%"A:lnu)c9+YJ#hB.!c+p9F0RY3&>EfBrd.3-#YRd6k0n>*)*X^;q
%a@]0^b-Mfk-,i39iUa@Gb)+rQ2qA*l*K#6"7mpIYejq1[SFfYa'l(Z2=Ci!FkJ,K#D,Z0i-mbX5(+Da)i^;!>6&>TIUtJlQ9^mT>
%RXJILOs0*sO^.!Uk]?9!^a\J8$="sR3CN,<]+>O(8]N.^l@+-(32n(@7<3Cm"'6HbM3L;;OY3F=QQ3pb,:/uqa*`(S$L0_[Zs(hE
%c@O3V#TPaYOOHP)7EAKRJLDWD*ae1:OJ9uFW8Y_H4r5&h5/T2c-$Pb&MR`IBp):b+K\%\SAFL)m70jY0=\Zi'0eOI1`ZT<=(n_i-
%I\,%/"GdX]i85`C6ni0uL]]/\VI5$7-OQ`U?'NA[,<tC$HjFe^h+ZHFCGI%a37_uX2utJ%`/@IlJ>4@MjEtD[MM<C2)^@=7<#K_#
%/C###-8fssAU+M/7#4Z\N(6a8CS1qE;4nO1^+@3N=@XSg'a8Q$)(WPs0#8`SL6I`5JgK/<EHtgqDdQ2BdHmk7ro)i<A9\WYXl7\-
%1XmP;8]\npaX5(hg/85s+^8nF&Iq^>c8h>RdPO+s6/a54Ot\m&MOXms9>o]m'?AWS*#W$)+[3lA'0m9S5'fq^M_%:d'gl.;&^*2a
%b[f%SM3'k[JTe1'`uO_S/s:1]1PipeYer/a?l22f$m%`uV,3FsL9VogiN?RI8hc!^-u]BP_^g->!@99BGhPSb,47a-p<R2rS3i]/
%Z&VdiO*Mu*,Ubp0>Xrq+Aoj7o#"[VXO\Wa)df:&/`X!\[3WcsmSn&q)m1(3GP6YM#=Z!5'"U:9B^_2J8%2jMg#D.@HSJi+I3Z9!/
%>`8edj4Q]h7*WG8lj;bW(f;7Vj6@RjK$rRbRct9mOG/GlC*56,QQ<mD@*!&3^?*:.85[3b?fWacABP4p09P'aRMkBq'sm[sP@Xg5
%-+?8Zi/AYGnp7;XHfot$n?Jb6f8A,r+RKT[i43#9B>Mfd[YiWi>W$:VD,.ua86eg.E7IN()AH.:(5&=`/tmn%J-5u(dJ@+fJM\0@
%<AAUXYWke>*+D#MMt%@7UE.nff:fHJdrW2B/8Dm#\C#0K:"u!72kXemG!H+a&H`/7ME'E/C0DHoSLrVFm%[(@,W)55`(lP,d+>uf
%N4A^$;-XRq^<fodM6.KfM63Sc[Sh4-Xn6\`*^U^:Xu?EH$;%!<k/f4^c3CV23jH+9<@A%t7hDGoh$=ionBMXi-UiqoZ'UgP6OXJ7
%oZA<==93MbfNI-7SlJNkpS,_X^;qmg/sW^&gOe=:'!hfb8!1jF/N]M%,>jcI"5mY4mO;T?C`bu9TNI"&`oXY'J-jaa;Dl_XM[3Ip
%K'lf?mBK7#Q"tWo+u7!8EQtuPC?S3="al*pa0Pmp,OHD:J44kr/Vc#FJKAUVB6N'O:S\j6bYl\t*=u6r5PS@I=#'bXU.4/!$YVtl
%R#tpH=ZGFCNHBR*?)B>/Af`/HM7EWOM@k[kiIH_+<^T%UQO=9\I6EV`YghernX-?kV*6!Fa&q?Q6af,4on'Xb!s\K#cU5Q6pOkl<
%XDnu1cq%Q#`KE"X+#+IK2Ad0aJ[lSU'O\d"U`%pkBuI?_=OPn,WF06Di2p62.&l%-/,ZbF>2lt0)F8$c/sWS!>gNa^@*"(nHGIMm
%bX[d3kY&@\Uq:YD$<[@jh'!]<>-;^$%Q9E-Jlg%X62-"#.@`7:1B?K]i4;78;m?oP7$;EjAu?op<Q^'k;7KdiO.:"N^gYkuW#.3C
%NXU@4b_H/3S.Fgl<_'<Q9d?KcR5`N_7*6(c<ikE#o,"oG3A*Z3IdSR"LqDh+K&'($$ssna5rXXrR1)tK/bC(ojtiq*V3VpT/AMq2
%_&,2dkTjQG:;CM_3-8$M4$I:s+]m#*aC$ifdMg'EO?B?OjE$T1(:Kp]%6<g`jF2%i!D.*]H=Nf3)J\q4N_NoG)d-mXmhWA>h*%\D
%Q>+QT*kWejX#q(8JE,Z5HcK!9YE7H'L+KnT^]s:55+)K<&?mD$-qN8;U;T\LdG$[!>X>hg.R!MD_b^n80rsHp*<ud9(Iptu51f;p
%O?kHnLam-#\\e(hO;L':osIE=,"BjCLl;ol5$ebbob"RRA4.klBa>#TV8!M,O3p'LSN+:`,@DK:&5]mtMQI.7jIPLVULQ6F9.Igb
%rRbqJ$sCJ'??rh4Ud6C\8In?A'VI_V_2^qfYEVoU&7I&-N)$=7B*H;Z,K+9RUES4q&i7sA:DbR)RI2?ZK5Mlb5E4,n8A$s!_6!aX
%d[JMg?5V`DZ70:.."JqZQ^.a;,@Xf1_V&[cd(utjTdbTs'r:@<PWCMUL"qoo'%H3cHsBEn6![F-<jSR,fI)D%6OC<D:857Th,3qd
%;:-ES.H!*O-5^&.7[!;_es[QpmQcVS6UnmJa`Rh>"Z^oGD)?3:-0\s6a0dpPeE:oJ!^@4/TioYiWtK4o1]TTMS'-KuS<F+*I]T)p
%$l6gn<%KoE0L#<\^d3nfYh+SK$N<WWSr=@o$$%?Q[NurW>?FElDcX?SbA'=lJWq;+BE7kIk'+lfHQ%M0W"o%c$"^k&>q4j3n@08@
%7RLjqcrNL[)[YImU=E)#)!ckGP]@Ja'tFWI_GE::.'?2*hA#H"J:VZ@6D8X"4&1DL.%XoX$9i8[+!\ll@,*/,7q]ZZ;33H&8q%Nj
%!0IZo>j^`reUsp[k*uSBD'JB,\>3=9adH^DcD^r!K1?PV.;i<-TrTutfd-qs`G!3+:EhMN:2#>#`;iWBY(AI&\Anq+7t'!@^^lS4
%0PD>fLjI7m#EEm9-)+]J*??sR?bio`6I$FBSiriPo(RBn/S!ELSuXf*q?r%:dMbt?/UYj\;`4<^F#4iO8#fFB^iciR$"@hKiH"sO
%fMP3c#rBr/20XKP7<-##:(j5H8IeFK#<3N,L7E$X7WgI)MEBC8bhN9LqA=LW<fs.OjnZ'c&%Z'N:=o$p9a@3,hS`RMBG_rcrmuf3
%@]7H0%ZFqkGYiJfjN**gNY$51/kDeC6B2nD5T;IG`%ilm\fWgrJ<lA,%tB<]a`Qb*@go[4TP\YM/Sku3U'PN0%'5ip<2#OX=Tk&<
%9c.u42?X:EYQbr>K*!fm/Y!$,NCZlG_T95EK7uAu!YOr*5E&mV1KY#>\K'7S,U95ELgEX-B@#rRSI`4mcuf$NkKpSeS'iPeQ*_nc
%?I+LQd>-D7L_%,*T\N%RLXTkG3\I_TC6=QEXN3.=kB8a[.o=*"=M^2'&rC5XEeqNPO;GF^766bm@)d(.=>j(+@H"cYUp#jAXtJu5
%Jrt,$&[socD44[b\K`5Pqoko9'RN"1diH(g?a@dF`T3(>plZ2GBT0u71q5lJJ)Ug3Iq6c`-'ngnNdBIl#;J_H,'.QPE5`'Fh$bdr
%\S2N56[,IQh,"g[kNYc0pC(acaVg/p^'7U?2n;CaK^m$3oRnN#&8AS3d0O)hF1D+^LuS+:MYl3KJBu=e8JOiYUjB`[K9FF9V0T(M
%^r$Z%N+"muR"7a'[J:f8E&C<-R=V&jEek=A"Vqh86q1h5[;@'go-7a=8$;fHk-tn*SI5/n8D8dU;(aWk6QRGH+QOSHLcQ+g\6^],
%(gr-"5m2lh#1+S4c&qYYa#mm\M7Fb$=_c-a)lmF<%j#aViTH;=>96-+q[>'uHXR\ZA.Ta]E#0Q3<V&<1i'Rh[k;(A@/gKV*$pa@?
%'/;#Uhbf-kEBtd(2gg9!@.d$U<C2KLkE/&.8Bf2]n6[S?/mJnff+5]$<[d:oME;;9+f=[#<@7Ve*)#J)Zj.stJ@ZJP]c4-#Jo;MN
%N;]c23uEiZ5f6+Z44cEB(6L;rlC?tE=NE?"n)c;7]5E$I8hi@f.Hcc^V*5trWur%k#/uc&#bAf2i=VU]Lr.I>j?p+RX&Teu5d4E8
%Tn3@egn>Tk'`+K^]QIrPOTnG%/e)9ViL[akK^=rQ`2#!p9c$ZjRCZQ]Op<_WHKfORrb?><.dYWFJA+K^%N5b04Y=g%pn^7-GMX?J
%1:fbC>9ZsO/QnEl..De/dfm+,ZZ4'7T#^t!I0NrY@"IZ/P_Km0ZUh[R>+]N^E/%`<N\I6)WWn0Hp]-=@dk(2RK@utqJQ#1&hSb!I
%4%:#15UYPL'I[65D)[U`#3p^Vl5#_<B.`lU@LkYHo!.PkMR_asU,Q87)t*;DOX1a"9+FuqCj85_GjJoaWC39*q;6R[!3q!kX21a`
%/o^rLNS"PFJQX&dGg6QPCjN4)6Z,EH.\pLo$lJLU5F/BB%_&Aj8RR*;6q#\f>=,D^i>Mdch.g3-90r=T+]/6[?IDYQ#o!UaD<=YS
%E`UjJ)(=+Q+b1p\<l^rqj94gKL-JWT1bM/"0]ITn.\BP)3+U?eP<O1@j8^0/"XnElEP]cW-P/U5L=FHC0!7V7lUqgP2s5`*eVd[:
%.FKu]+!gTT__-=3qrBXCS1fdGCTc$K]FpId3$ubT+WT`)bW:Rf'kAd-(Q:ec3Bb"7`M(tHMYALg*FgArQnu:`?iZs!Ungj!]@^a^
%Goj9*'_co^'%C)!mY[gQ>B]f"@Ys:E8B27N`uUn4$7lSpFHf`KUNf\:DNX@j3L[qOZ)HCM\=]G3b"-UBN#54+i_BtgQ7!<K""l-U
%g1HJ5M=bVDX9.P%8o\Ke+?A<q)E'&'V8rZr8CcjE(5$]qe:jr*8tb,W%S0`62`_`_TM:qrKoDN/j!Er#*]F;^*_VU@*h,HoWJ'rj
%iGDhaOX+=gVI\[posl5!(I?&G:PRJUMOPIlgs/\+5]S:&k99m1K^[Qo6!%Jq4Lf--jIbQO"k3h]IR'!tTe*K1T\3:LiH67`'.d$c
%'K;5_QK*FWpk8\`LF&0-KpT0S6sH$L@ai\Od"mk^U9hQ92dFFQNM1YXarB%58#Vj1p+[X$dfF%'JM.=["32E'HU,^rpL<5>!2-OE
%VBtS`L&q_@FH6CrnhC8hgd-]TDAL0].9Wm4`u_XP<fA6PE>n7mVZLb.MDTLPrjgU(X=M/tP9@CahV>i$UI+/jLmT-*;+#IYB98bA
%YiB#Z<Pr+,TT,_a0.n*,>9VU!_]]!j7XuCABrGb9BeP1C9^$^D[5Cd^?(WBE>#q*lUGe"!45pBJq@-LeWnJSC?!f4[)29V<e3a^K
%F&e4G=p:EpfH'OTE^R8s4RdLE#aG#jJ`[AgU_-)OdNrA!NE[/e.+cqH]N9\o`_)*sG9C<8JG+*KWTHS(NI;B`Oll4HCt*K])u1t7
%lZrdP#<O[b.&]sZ:rOZuL$W7lj?RF3k3PFRakm_?##K_>$Kg'1&:=Zo#&11?7?Zj?<SA$$=J9qm7O8;rMqfu-]n1&fPR^D9[0Rj+
%IE@6_b/9=sGC#-kA)Wbso$)97CrlfJhaF8D+qk(F$^#QAG,dsP$:F3l=eLJCI('8s),LLN8\f$m0EF?1*?ZQCO.tp[MVcIXR[Di"
%Bhndaghp8/fDjBO/I^=;6[&e9D@t1-4V8OK;4o.&;B`3=h&:AkEVb5N_kD["l&%n6=7*LM"<?mj3ZloU@1"/k/YBo\,2b6H/hc>k
%#07I;Xb-[iSW%@,V3/U2T!L]I$IM=!apm$C.agdIF!.QSN!^YST!U7K'"lUiNLb0Igqc7PTD7^nCp=KG`"!b>h!Z5?4KOHN@7qYC
%1a!U*>B`ErF3kIEF-/mq9ht^fmP?hbQWU/a]'#R"-m+2G,rT8D715J+DN*>3d7D^=%D>6-7@S\t60MW1,-dMh(kfRgkj,i(jnL5O
%9SVu;(5\Pt?ugHXYu&<mfqW`(Hs+Xo]J/EhTLes!88ojUZ9@0Sd&70i;J8M9'#&dEhP.6G/#Kk?%;%@.HP#6,)3^7]HjG8_U5\Qf
%g(!6u8rk+2`ohFOQRNMsQY7Y/68)s\,).`Urceq4YS(M8#T/5I"#4DMNIal*=RH/#9C=:a[o.t@F.,OtA-hmbOVTbN/Jki^\2g"u
%oq4!]4;Zl(E#G=1-5,RpgV$$7*Tg)<TS4:%F2,Wr&jnq8Fj^,oC+d]j`^u#<O\/oD]V/akqcRBgR-'3=]4pbg(c2`Af:u.[cYa?e
%Jq/T7/>n<Yp4mJL.fPltiAT_*S8ml8cm<J464U.l]JW3r;(CYZo!,?/!P\&r,$%t=`<,fD:oe'8EASVdB[qpBDn':"[)!8B;>4U`
%UcRMY+N]]mmBIK1h2mP5j*h[RSb(!dL_!Tlo[GRO5nZL__GJ%A%E,5Tf9$d)JK_uq&?CYiI9`q&(.g9%LiHS@?Z)',nfSW!LY=#u
%!=uU`II9t.\RJ"9*5MWPhn"#_!/[@]H5)BMI*g(_&E$U8;=Y_Y2p4]54"91X6B?ISOZh.+m25Fd(t]nncsAL>02ofKK/g%=)EA/g
%n0Oa[$XFL5L&oSlfj\[Uo(Ch:OP#9-UH\E:6-5R,hAC9E4?eJ;0hX*$gEr"_+hdQal+$*iNZ+pnmnF4_bsu"BG66kW.4!$nCHcCX
%rV]Rmd1AQo/quW5(u0mQd'0!%Hf%3\,3C5f65UUN(GHc(,f_`2%B_i)b!W>lm%k0+h-jtNLab^]BckjV:QWUp'fS[l6\p(K(P%EG
%m!!W;nCN#7NhM$"/3ZmQ%QP#ogG@>BS.,ne(IP^T=l(sQZ+to[meY)M'#@bs\\k>!9I(Kb51b`*N^]P8K-BuO)q#qk.64JK?V)OD
%8h$S15*U=7"q"L-/tS-J@.(I=I%/nfK_Dbc#rV(.ja;]:[2'C].$BqP%/;?hUUcL;-[OE9RRH^^)3<IDKej]'DU'*\e73atn[Z%N
%a8P82H3@VHHRF2l%o*C0Xs,l\)nihcL$6lt?sRh<6MI1B..#qO"!EnI`s,l]dRj6`KI/nV(57,o?lg@$9`U/nJiF`L%A]F04lNqp
%"^`cGjT`Hi(<G+^jNA#UfJD8hr;#p^I(`2Fo<d?h"jY<t&MJ[k7AoV>>rq>/e\F$CNY'jNE)^j/K\P.s:uL&Gm7d0)M?=Tn:s:5#
%(fgJo33JY0\)Q^Ki:qeW^@W(cT649uOdZ`Dlc0\anV3Mmi&5&`--CdJ'7hr:kQR8:$7R'$5q\q"g3?Y>-3Qfk1up=$\PFQh)(_CI
%j8=<"fhGl0PAm0AT0%j3]YX*!>ZqUO)Hglaa+@l1je7tN;PLde3'o0DP+;H0-IX.+-M"\$FOHN]SZa6&Lf'sUo=%WnIZ^(o?$EUd
%9u8.S[$u%F,"O<oe<:`K`eT!gP8CD3U_,CT+COV&qT)h7e!M:;)F(RiF.=CM3;K>'+m7#s.B51q8.%l0A0Gq"^*NCp_?$WLHriGU
%hg86eO4ePLFQSV=OFYMi>^6mnY[#10`83``&-l<6o\q)HW,WL+Z3WhajrUhgiP#U3KF-j0DY>O_c"TD4-*CJdEX5Rf8-p@GRd=_5
%i/\&]*.DQ!RbJbcEZZ&3D>7M-ib!Xs^I/B*J7Lpi<0,i(:gDKuS$6@ai]A)U4q)pj;O['\Knao31HUnt);S:>S9i1Y!ko?0^*4,]
%9e\a]-g?3;7%G:sTQhntK,JEZ-e4G0SbM2TWc665rb.f:\]nJ'AR3?DUb@Yc,',Id[4<lfQ=L3u_@:J&2m+<AaPVV3Zf/m</I<9l
%fP._Z89L1Opn3OmNkh;K&XJ(a1>C=*Ds5B@V38>IcR':.]-('`1j._E)T?u<kgSEn0H%_DKjb!sDY9T[%b]j^lc@kh*4qMKo#On=
%2UU&Bq-&^HjU54W6Y>\gB!aiS$&C`>i\4VU0&O-+:P-Bn[dY&,(bC0F/a;79UVe.a.$/'*R^TOVW]2k#83Vq8#Em%BVJP0OcZ9tU
%%65i`rLB1$)3`OGAKJ@E_E8A3o0B*,a:L,T`JMUVZ=:Yd9??@]4::c*E\RUP/9gU!a%'"X/mjt(&(=+)2gWu,aeOD1,-XTYk=?O&
%+gqBg.H$Fg`B'0$7>pZ91a'b*1_d7qIrk),CIs[olch)us)9<T>bE"oDtfrIF9Mpui+aAHW0,HJgS=s#8V*[8d(`Y0CRN6"kNp:T
%@WsQ+6)1dQm!-$q5KqB<X[QQ?3%$8kY+gn9f=mk2N,0DcrDcZ>.ku'XF[YIC$`=QU@N';P+;q[N3%Rbf[aA$4=m/Io&=9R%(<<_<
%EWIR"!i!e?WVZSoNVa.L,`Nfr2[&YN,fPqO,sW>AekQm[M3X*Y7kpgD5DbR+2=79X6rqrFK=21)aDX]i#sOg7FQ_m'G%(6d5Fd(5
%D!W4u0O+.2D35!ZW<hFVl-$pj9Dk-!mMmV-0:b?XFhf<SfbB9a<d^M4*d%k$WF(`Q:$!5ho:2Ak16Y)[N=_.3?)27>2hd`5A37?T
%Cg*5U`Wrh.)>Te:qE5%:b@\"'\Sr%WF(Lqas,bg;AhAiml3Z-K=GZ\m(:f+VQ&dhV,H0.i"D#;3kh>$9`8icn"*,?@e&$+kAlObe
%9u8^8;D^/**^LAM)1$T6HQMACA48i,BcYIa_Pf1Sk@'^1"luo3F%6uTrF3?B5UB,Ip>M^U^TQhbb$h"L8oD[)_!t[jZ6]^]<0%6/
%2@gSsZV\"H`iI<cI+T5?b#;?L,"X-XQOs3:O+FZ)Y_=",[h-8=Q5<u/;Idfn#r>9L1\PQtW:aOS<dhUr>#+<[B!sH$WVWdBV`9UN
%?u4,JNk*tGXI4_AA6UA!3*t)CN(M<=`")2aFWQ:rCo]H0L-*+XE_N'VB"DZMjQ.7@O!A23;[?kgFTtJm_3I/"@=1,Nr\+7Z*-3CL
%IZA+0="T;b:cX%72Hk&@AoH8a=@92laatH4B?/74p#RjGffnenVe=It3@ObGB"==_q%(jt%A@a70Ha[4gf+j!Eud=YWOoa:Uf,(k
%HM?:n<L";"gdZgd%ndGMaDW/L#I2C]MEK_@n[N=NOQF:$!BTnqoR*itQ/2a$H1Q'kHoHiN4*FIY%okMG79e^%%p%2:(iDSj_F2dR
%]HFK(rPN6aVC0j,j0oO`,jrW[pZ[],KC\9+AA/@.gq;LQ+4;aV9bc$1+0:YZr;+70aI4M&qDQUpkSD#Yf+2k&Sh0bnh`gs5HQk=8
%NuQZJ)a9jPCL1F7IXT0Wdks,&dC-u7Ffp"u>+DI)d5Tb$dsr=f>H@8a>\0L#qhEulr(sO.<E"r?K#>7tqKd08NZR&iifE=BW^c^j
%\pjMGeIa[`DpK3@U/a)E@>,b/OI=/&k#;$!oe`mT2]d_:q`S(N%+jB#^=s0$>N!QTM]YVa;2>+S!hP!&^'V@=PuK8"LM/Po'9!u.
%VL>dh++?ap)aW2US"21]0-;6kK*l#Tk08@r!9ms?oa3WOGQ%2e[1e_C1JSnK/tH37iI5cKqshQ1UV`4/hsoHV*tfNIEr5*]jk,!o
%Im[,R?2T#P+4)Nio(qr"f/S&]P!).4`7";'Vj']TeE^Ur.Y(:[agCO3mDBGpn&up)GhmP8*c7EgI_0mG+4<(r]C0GQ9ie4]>2\*A
%IB/,pVb8ZGcW3T)W![q-EBJsk').G/NZ"kk2g9XOEBKA2Iso9XZFiGY=mCal(7^2a+0;t)`$:*[KP<Gd>1_5A(/TN/e%XME%mQj.
%NhaPAc,sOGIX5`RJ8q1DDI2deN#5)OGN6h'S"?][%*G(JCR@(.s5Kg,rloDHouXRZp?fa.#rGIbn@2W&\k`hNS@R7\RlC4!4jl"@
%'@*r?,>ZlZ`CA7;cmEfMHR*YNH[*76nEQ3OhsoHV+0*tq5M_E]\d$@<ae8XEicHiWpg^ntg_KNTG?edTn[-n?Vu/YH54-G=2;^Uq
%OK]@[kbgKH8g-D/:>Iadc_dV04fkZ+,2DbcH9YqSJQ-g]NV2S&=g%5JWfM!mVQQ45K(WrN4pX@.ED.9*g[h<"_5]\gSo48+)P5jD
%DI2ePFA'ADCsL5Jp,JXd-Np&8UHCEnZ;*dPhO\WYF?Z':5Q1)!VmBSKVWU$)XG"9DTmqI'+4;B:6@O8/faci%Fc)glq65866$bJq
%0)IR>bBbr2Rsk2'6dheFX?>>*BubXJ._&/37rDZ%LFat6Fg"5ak?@38@9p[gWI^i4efLB(+JL1TiVJ,$77-BMg3<JgiJ.N7=n&NE
%*>(40jhk#PIQcP*?LPpVbL6GsQSXu#-4uK/CR=F+#0d6NJSuWZGeS?$;<H=QH>G;2BbDlIo(HU>^>[N\6>UhZh7V^-R7I4\,90dt
%jk38EQ--u6#eE0*:cq5;6`Sc#3T6Q'`t]Y@Z?GKCfB56l@/TXr8o7EZ\9Yb01LQe:MLNNJSuh"L.6(G]L>^UY4H=G]/5RqlAD6eS
%p>Led:<_boB'j;-cK@?-ioT"/h%/b8Ordq0hrQGN.-*qInp[/3Hdd5J_OGNd%\@RH*[a3Fq&dmj"4dEfHFdU8mXkUQ^lP\n6`*YZ
%%lZXYj5el#AK"!MQ?R3g2r2ueUC+9'"(B^Lq1dcjr/Q0RqKTpOE(-@ibY`qSS=<UX0coam0KZB*(rdSq_".3'%(Y5TTKJ1CTZYD_
%T3krJ5,Qg,6TWOODbl\>N?1Q'EKY*eI\RuA4?g@23CFRjOTK*i%'RJ"e(?)Il"?/;0E(Lu^-2LT$oM2&a5+D05+Y8e$lXIGDtRTE
%`94oSI5.A.j[%(^/GV?#4H)seZO,6sSi06!?4EB%Q?7eCDj.3Nhc]!-&:(S:alDQo,&+aH"o`t$CVT`/#(QSbL%#Cs+,W?VSXp_>
%Gu=sak\eiO0^:!?A4BfkWgA=9k;scg"2B,8n!EQ,R\#PUV`9pbPp-j&oI2b1'%7*l=&I)V2R94&WSgM:5qWP@6\TFYh/YG1*`?4n
%!m&e54:ccHqB==%;<.":Wl!%*/><am-7/fcY)%dTK9-\Dd1Hke(tRQ?Cf[jR0oS??G^@!^/Y[CNXtASE5gUc8P!foZ;,`Fak"YtC
%03MP'm"o&DUdfG;U8e"X/?4#^BjpeNW"-+j/qRS$k#GKhppB'e<&ZC^mR6J."^SV4(DpM'Qk1EH)JiHt:f[,_.aYh]-(C]alXlAC
%JhGB6<<;l8qhc3l&q.>>)clWW&[D*+q@l(^L%ZY4Gg8eNSI_">Eu`arKOik&$fX/Q\i4c<OgSt__\M\S80R%Rb+&(`G$bqu=>4kr
%)KYDND-qT!1nQLR1hJ7E9$gnXcX=\U/LeqGW[4J&PT,[6l2aR(*BBc'$G01eU$B_UqT%P=&b\T9lqcZ\18WDr(f9%^L.6$:'smGp
%WF(hDROIC-D?XsF`8:`Dib^.[BE3ssBLW:n#Yp2TMtK>tk)fOpr%*1OJHaDsL^Ui6LaCXA"&_rNl%`0E;^-JS)ZmbMAf`A*K^6a4
%F[N"E6CRFn"'h2FU2m?MZ[1sc!:eL)(IT8MA'grE0R(ke+OVrhQp(0mP@GU2;kH7T9b\:IV>=3!K[M*#Xn!9Pr\4k7YOJ:!h5hm:
%"@W,,DQoG*6FR<j2pVF==H\^f9=kt;@fS&i>nggRX45=+r45l<?UjG-fRB@oYES'k6@GAI?Z%7SGNSDXWW'1II+(^YH/X!N>AdN8
%]7oNm0tU`_4t_et9BUM"fMCi&lVd\eU,0eqB/=&aDVEu!%c:JZ?C%(M7HnFSqKl#F:XeduGNS/a-M5L*s1C[35/46G2s\_4(8dQ9
%lt2f8=V0K((jqk:5MLFh*dh9NDV(3/2<\YKqUDEM*l.$T!<3E:>i.[PZ^qkZ?J2(A5>eq^ao+hB9_tRoK_+9=P3_g9irQ+JMmSO6
%+=OsI8o1AF]@dpIU&dJAc)-Z*X:?=Vk7qpWV/QML+rCiVok>\3eLYu!_J(uIEt.c1$XQ8qSqWVdB1olM<%jCa*([s0TYbRc7L;M\
%a:P;d&dj^EnJW.`.aVrB-S_^2!eI#'JG$js_H6mlM*QqH'VH6fZP.ApVhI/gdu'%&bhOes!$^>,'CD:Q]GD[*gs*Y`,-"Tc2ZM-'
%%L7[k,WX"'C<<1Qk"qp*,ZK\Z;K<mC;2j\?i3,EHKpZ\A[Zp@U=g'8*W64btgom-XRTCV(WbUCLeJ80-C+;)t"Gr^ibrK\7,9:.I
%F(-j8+$<dse;>8m+1-BT)XpF6-rfO\mIJ1cW2b;uBl-+m6a4Uh"a#j9g4Dm7gKZ#0$D%ei8\I%[</;Cj@aX/2/n^p,.O#P_Y"E+`
%aW3V_7S80)<)g:kMlYJiTFs_r'(,dc>I&8Zb8*h+/UB$-1Z_6S<Xq\f9=GEdFsNE`A)@e1Cf'1@@`p;`kgOs8hV"./"<+9!T9kQu
%e3SV"^.?s;c)@,R:lQ)i14_*tJeWBQd#3*4);+7h3@u,IbfT[_+GI:2!]X*k651rP'RG=>')J?A@4R$4MXHH5.r4<U\`i_QHVrp]
%5#emVk'2S!TnMe5_CfR[93t/$>Mb826Rsh*Y+V7C.:,7?_DM.eG?Cm<`OLda^Rh6XaUTSic^.)e"!mNLT'>.=H3-t'WGR7R1PLoV
%Gr<R*MqcXPTf0ZNEHd)C?tYU<M,sX+H4*Z;,*O/5/5BLrSL8hrOb5I@#GmHqp`X@ZE*U?;c-)K\V$c+]F%e(._QB7gK3D1?G:ETU
%F#Khi4:Ok?UaPiJSTr9<H7i+FTWQhjXeY7]=Yl!c%GP-tn4/sF8h9!=9\Dh2O:($@rSjB<C-jQeWW5b&R*^]mC&E78rYA!9d@p0!
%A/6n7o28NtVcDLQ+2>g6*u+In*ImbPs-#o-4%9S8h"8lR[B3!6NBnc(1U[.\-Y6qhaamd`79\55^SoXl#kTdR1&uZ/.c?=d=kU.E
%6Li?)le2+j<jpAa837e1/&/sibRb[%rPO"ekA4s3=.oD_*lqi*?)bJD"@N=`bj9,3eiirbSt`B<<.O(YKU.sX4H.!4*(KZU.LqX?
%TJF^r#8$f8)FKaZQ+VbZDp,<[,e0@TP"`F!a;QTa5l#'Ci.,8(.->S!DJ`nT8_uiL5dh=5+)sjV>'/@[;Xrk:Kf.1.D:cDVVO0Bj
%Ls.+/!$l&>6gEfm!23l!6WR]E%a"lOhS$4V$H?%CgYEYr"P.b?E93q]5,:@#o0X1n&=1d&RIShmY#7M$B-RGHT_4j)(9&[%H,e`k
%*'I5JmCdof4k-aZ=a!1O4T\;_,r["sSl4q#oQHU^l6<Lt/4LUV)Lftr,hiTKrB,k&&Z-OZ[pfMZ#)+kVUIpUOI`Q,b"*(;T;I\i]
%2<Q978:h@N\"o\Fh<1O&GPmQFrtH'`7!0!:P)bn9kF?3@27#);O>&4nNRbmcoKkn(%FZ#NRmZiK1fCe^nAg!C.b!Qu]o5csYZf6b
%.0)FkbqLq;b)dNLOan.K^ush@GDd!e%)oEY^5Ua7Oo;sBn2aQek0p5bpZ4ImoR8:Ibk[UEiL:XLRoSP@>'%G,h5ss9leDA)Ge7GA
%XK-OQnBFT(ZC8NZqJ6>--hu"bL%K'sG[2feQ^#+Yk@T-g?-*$%1\B.<r;,5pHT/cZ<e?Yaj6sY9]W<\D/("5mFgIt$XF)ZojLZ4`
%:Xf;U>Ar)JRoSNu\[bk0?<47rIXV6s@KofdbooSE!ch?3``a[[^e+/0FTY!;gru/.\]DikFnEI+X/We3rED]FOp"!e.4PS(5(uS8
%dPZZXpc(AfIeUfT:OO9mD,A/ZW]>cI&@>EMU$1e#83Yt>HZroXaqeD$c,`j5E]4_U>&dGY&rCE_bnftjkM!/Ojpi)4d&(6O%d2tq
%9I*Uh6e%78e<@k;Yo\qIAbAlC0r6*&.c$ZX\iSYh4[GMdEGaM]M4*n0(k`T9F?B7+FZYb7R`"XfcD\a;oZ3RVXTXG&Ug$#,%cB\A
%#"=>K'@+]iM]tpU=Zn%D<>nI!kS!9b,VWkR4m@b.JO4Y]]Eh4nPc)#W/,E]E67,QhjP+6=:_u)eX;(agH=flG%L$r1]LGom(\_8E
%'PAC9PS-1:24Qq3-'#mj98ES94KBon7JI]uSg/KN"a,-PCYOk)8A&%OF64)BpJ[QXH=>7/TK'qGB2InPU^>PT]L0N>]W+?m%b'']
%U6en]P_='k*WQA@BkCAqfsT09&\KMY8]dh:1f%'EQ9m<<ni7$B3@9s!2i/@8F8*CUL"b%R9%2EWf?s:W.2L/TU^I5/;m-P#UEn-N
%L1s)$Qn[!F6,mV8b71)HBa.SD9rNu23m>TeoG"]G\[8o8^"RUfS&@4>hF`bM9['f`>cB3N/c3JbCIP[7hDT;O/!SY*6tTi*L_hBu
%^GCLY'>T,^ZHT`+=t,b;RCL9XRKZt4Iom"MQ+:\"HX/A&cEH5m/,?sbXV:P6XGoNhc!lfq#_9`kknS9-"<3Ob6!:ekU-cY&94JIC
%!*8YXa*UifK%$*U[*"9I":9;RW?,C'WjN#fm:dihR_r'2FR9LM7Uf]P^AZ#g`H'`AeV'_uR=KfO/ceM+eph=oIa;=W/&AQ$2@'iU
%,c[%(G-c%us$q`V?u;rU6j>t8mlG_ia4"U"_(l-cbtASR$K?Vn%V=JdpTZ8XL,F+c1^!stj@]V$<qk*\_cSpJfL;/Vn!=q1*\snX
%KhS#tS)7hT))GW%0:[o@oZ-OL`<c\/CmOD7,q[g:'n?W>iN.p07K/9+SnL\aR<hKUAd.h0*o9W]R-HdX]i,4K@9SGM@^q!7c>`Rl
%%k:V"Y4LEt7;T(OjO(]pA(i;o:5jY#-/s8m.4Q;E2rE[LMq75kc$9pn6DBu&Vp6sboX1Pmc$;E$MW-I)P>48_f-+"aFXN^_4[X:8
%P[n9IBFekp\V[D(Z8-PA,QOttRtR]j[%tL(\=XL^Z,5=1PN[J*)8m%E:\BD"&)(Q:ojQ5JrS!F)=?0k#X$+c__>!U#pSlWXCfRA0
%g,_,>l[k&ios'#?Fek.tf>40.ZZl-`Zh<cDnU#\(dpjJhZELrUo4u\-25S3RR=]ZiRciW(.,#Q!W]+lWo*tO0E<1njqge.JYA.Vd
%A[.88"P3n(PXOJdj$=bAT^S42;:[0&pGDOpGfTog`BoOoQfI:k7'Kf]3%:/\X;-R54O-s78a9<iKJS59#bc"6aQ%R-2Z+!SHV"X)
%[4%1jd.,L9>.Q8-<#nbiW>_$JeK^)qSEj'gT!i+AOtXPV,j"pm.Y'>(TdFf2\\#Y`_69<uT.kJum.2mc.DZ:N]E\$L?$],oie*)@
%\l#i2W[/2o3R/ntg=`Qp8PSfV@]c&(FP--gE5Q(\[ub$T\hlGc6!)k+/0PAu4;dh(p"o2FTH$O;.oA[k%b\h599Sj>+h^#u?9fHr
%S--p-H.=44U6e4VOA^`b*`LL([Z2o7]eHE-Qce`Z6"ti5,'MGI6'5<VL%2&%G.Ndg/VIjL1p,&5+/ud:f?i"(4h+^_ghIV,k>6Z*
%_^&[/6MN[Y(6WtRH(OF;>)0M&l%a5gku1-TWL:s_nZT*!$dj\\G.%:k@_>J`ZQ#FJ7._pX$VL:aCn]2;7'@Xc]cD69EK]5;>rk.Y
%^H7K%C'9O?=flPcb3$dHpRkSudF[Y7KmT'E+mp9Ff[SP/4?A?C$BoHk;6Fji5?.?0+.hZ\F$QG7>^S+B@^9]#dIHC3Q(<,?Vg614
%[uHq!9!iRdF-kr&5R[nV^-3*W?;Sk'6#L@^_]2-tUalQo3kF+:T7ebs=eVDQHoA)>6)uUQ9kd@o_jmTH9>_oPZC&[1>o4XL_RI1i
%PBE>FpmG&&K=RYV>60Al)c&b*4=O%/5PgapG_n.*,_ZHd/0Pg5OFP2jr\)dg7ggMET^A2hYj#b5TL;2I7h!!j*S-piF_*?p.<Q;Q
%C%\c.:dKWPW><Zi.[Sl=9.T(I-ZGD[T>DhY1-;3;l6\2=,Ml2#'+KgOq#i[uP&pCBI*.R_C`FHQN4i,N26FdgfhF;KejPG<NZ(fG
%*Y().FkkIl!sh.ING702_a)6);KjeE6ea<Y&HK:fl<Z=&Tgt\`iY/"]rO@?!L\q3T;>Ff4cKl(]&C2mL5UHtTK?a+FO@3OZ<9I^^
%:6U4ZHod5%R-&$jif-4!nkPtKITfn?46o1a'_jLrEJPcY1P]!_P5Z@69;)lG*snMH(I@hO%OGmDiBEnIj#jX5N<Aae/e`'$6nR_Y
%_uLQ<qo]Qm83uIHbLL_fN?I]^N^lc8D[0f?ql;\]V_tk)E9Gq-T'@<YX(FA!k`i\8D"(2O4D$i)TAagTS9C0mcHr.&/(W3)@,hqp
%6NQRgb-Zu<A2UZ^S0Z.[P@=+Oa"D((.cdqGZjBYir7F[GM=i,\XUrNmSp31)]V<]/%:qAWQp9.?+`,Vnp`:`c<dgLh#t=IK>h=nN
%neT\L*fb8+36=t5jc$LqKF'r$,GLH<>E/dZSFnsEZ@G/31e(G[\H_-Z+Ii2Gh_t3H75kB4QZfl++]_t_W0FR5S/]p46$KII2:B(t
%4NLJ,eQDDPh'+BMZfVg.0Xsh\`1D5AMI:0R'g7Nn`\PD&d'Mn23s)=gSp$`8'c!DVOr)XO'q`cA#NR!Y"&nW+OV#P%#D+[''8X.*
%+U'kc>4RJ=Pn&crS*m:B-]sI0d;0%OZL=J7%m!-MKn%LOmP#b2\fSe\=H<o?<3?PVfI5"%*&[[oS_sb0Bj"2i,O5pF8K40*qQiUQ
%jhT>W*`%8g]W^=BM:PYRg+r0g$?mg9i^ROLn@bA6`G>fqQ=(hGROPS+QfWj>[_"8oGrdu0O1@6U".l`(T%f\QoeR?O3?UB5?q`QF
%aCQp4-u>7lLk'p_P>!N#e]p[M3cL5ZF*Eu6[UE-*RXHigLErGp_-1m.&6H+^Xg/C1\''P6UL2`_>%g&`&R"2ej6\XJJW`oc#T1PM
%Ln'OcD&S3]3!trlL]T2IdFQZQ^!j9h\J#>q\t/e?qRYe2K^4?)@c(@IC?*OZi?]#Zc9ijo5.`Xe0?SMf5QuLQe_UD),Z;:iEr<O0
%-bc0!?]K)QfO>`lWH$gC<)^;bXfQd$M8.o6eie4*Jh](oGV&qkmFsu5Ua[3Pn*`mPngII0bO(3NlOnOh5%/4jp^#^\ja4=8p%`PE
%LX&sCoW,+:S7REsYmVo/fnO7>Z'!dLL)L(^Q=SS!*/5mBot)O-MORc07<Im3IE1sXH]qn[AP5XP]B3nq)J0fhTF=%V(W!J3d1<4V
%VDiQ+qbY'Z8j4%``^/Ga,"CSD+4<H''?fr7n=5d:OE+#1Io%25dqDaq'@o!M1JIqESYe_Ki]GrrV"+f#43?#'jKWj6C^;t(<E5!=
%(JYr8_jdeQUs0Mc`n-pVhi^u.d)VVnH;:Lu+l:>`.pkh_)c?#jj\^mk*Ptc.?pj=D?15W<bKn*;,UNB=KL/$G]NA<F"d.4nLomQ'
%K<J@jhqmg7IqPGtoi7g>RY)"44Qop/9S@#s1u8hq(n;X.$.Ms!*`>Y@'aYU%q2pV#=Q3aE8lCVp*71"tYrKii*m6=,oJ^Ci>W]ET
%g"HIPq5c=Tn4n2pe$V+Tn[Z!oYGCl"V>W33>b'".oL&mKa_FsGI8q17m;U(<94D^^/k]7\0r/Nfk7D%9^"r=bURJlReNN^='dU*!
%EFsdI^4QP5]94C"'/>qugcs]m*.Q(k:.OuV'6R\s[e%B<&=M8^O\55,M3Q`=F(<MEgWC=)[d1071jn>=-\kr;]M/)GV)g)"-u$KG
%VaKVl%T#b^nj4a5p(eLoJ\'=p7?dErI`I1YhSm=4Z[uj#%<TS#jEk>f<"SW_U6(XOWg<@]/W>EA,mR66r,d#P@9Qmc8#W+s?^huV
%7c_$A2X0!K>:M[Bq%1)-NjT6rE^]&%OGr8!RZ2V_]<+M$$b0t6,-aJ]:Ij.,hf/^77:bU*N.Lmmm;XS3C0N'jXJR9k=.MqpJ?\2H
%E^h^0RZp[-@r=5GKH7cAP8J*"e&c?:],D$Ukeu!!%U\FM(/d$,,'(7GF%18]0CcN(fKH[H_21E)$R?+V)^b5-@O1kjZj=_;J>OA!
%e=DS"p`MHg*:cN[a'q,>erjL/&&ItoW<_Y4XVGd:R@P\uQR,+DM?=1mnasW)!n8]dPgd_m?D#N0nEPg>n&bhm#GSlD?PO)'f/D[j
%rOlcGJQ9J%20p_i65D\hg5\2PfFiRDTf@d&ganQadKD0eHY)i+7_ZClIiO]?r1$ehNNmlBG%m"q/t@Vp=br)0r5UO1Z#OPt-KLhp
%H'8NE5;(Gg_J"dS6[AklU++#I\IinFQTNtM,S5$eFNK_"7C%'q,M#3`I!YLD&"O#$i&O;KLG^h@2?ts+A9T_]Pbh,"`$W4)Y`1W.
%cr77kQ8bk^lZP0m^5K0_D?;*(-/>el/W$G-1lB!Y?CSfV6m<>d,_E-o5n+`_MZ%D*a/reZ['klAi;P!Z`),T0>]RbNg2oB;A\U5.
%L(egi8[@`o1e(^oS1a<BFF[:u$=EP`g[Ci+/'i&8Yb^"9-$Mec#tnGr.=rqD7SK3b;'Mi=Vq/S^*(dDL!U<_LZ&_HBoE_f:,BKf>
%C_+-Ao5WF1QiC3"C<#<S_HfYk+^@(35ih%Ge"1[p@F^ih!5O5_"%L_Ul:[83ggr/sWFahJB'!3"1%V4O6>9+"fg=-S<H>-bRKT_"
%?+GDPoeJK=9[(3HNc6Et/F>I'icS9`$n3IO)tfK@Sq'-'6<kS:8g3,ko;YVOlm:(/9`aBJC?r_+6GXP8ekPS7aca"4(MV6<\JD<N
%3;oFuFC9>57R.rr;gZ!OdZdkmg57CTA(NF6#_5m66"Y'DSJ/;pnu\^hWmdmVR7/!ZiT#3UH50g13jEH7`<<4#VMMP%M&JO\d[cf/
%.fGa'bC/$m02Wak:5)544Zo&COV3'*RQTcF6P0GOA+En-RFjt2s,ZV&']UjhL(G9dbj6tc@];le7#1*QUGuK!?IljN*E(^Z"414Z
%8QRVP;:E)CbdjS]r9c!Hlkrr.FbrCK?p%Z30dr9b,:X0Zl$g#u)g4`-DQ08RknV0g/KK+4]tCm^ddmBY\@c5jLAnOHXf=+qoH`*'
%Rn-PcFSoBM<D.H@5]r/jj7m;==AW@SnZ#ceN_m;>76dlk'GG;\8JV]T'lDXWRlh<HLLXB(-#t'r,lkFMd"4sF5PUE]lUZ7fCDs'<
%9umoNQQmuq\tj?kaVi")"Fr'cnu.qI#$IGEB=FVJ8uZ$KLu$Q?8`@9RfdFVR[="6[Y?E7DcrG/N,.6Lp)E(Hh`KBjE(H7?%9+!^o
%=uYB'aiZ52:X/*6EkaJD!3<IBM]+%`/sag!75L+WOFi1KcA4O5a$S6RJ;l$5>V+-"Fl[G)*Q`dbi!8IPRsFm.e'VG&?;!I!re,Pb
%3D.\A*8S$g'0N>GQ-T/%P$/U/n/PF?U34l=l2(r?=VTb;<%'9g\FUCd`7`81YT2="R_JF\$muGt[u`&&JW,Oj='UC.2gGle/G.(5
%-L:<ulC,cHjn5KXj+ZK0Le[H@'HkLk@8QpZgUp_M]ZeuN2\Nb'q"WA]C-(e`i)XPMgu,+\mL6b&i-]RAG8D__qR[lS&bKE4Yc6\R
%1q"+Dmtt8HaN/&eRE(?f[t)g6nre$<j#m[FbLb]h;oVghIU)k^=sM%%?WsJLrlF#.e+2;oeCYc^HF`:l3,gho$Ogt=AAWn-o>h__
%`c&#.^V/[R)uK6Bp&+KET&OZBmCiQprG(BODh[EH3Yu$!/rqFOXXI;c?M]+p5JOYnmL/%%`?5dK#h<'NS27I?7C%D(OWZn\Di<F&
%/+Er_6-`XB7.&XnMh*chDl*lJWs=a[Zn)e"pb5UmW-S,kIHn\u/XH%!$Jh6RKs6X'EtpAgUT>)%4(fIpY,XnULR=%Qs..4X]%V6X
%@KJ'cLY8@DZRk@>5Z%.G@E@1+.Yjq]KG:8\WrkX*]l^XrVP]dUae-;fTiX(A_p)YR5[<W/5FZQ,00HhnQ9*eH4:X[B?#.Wr,""$]
%]L(j\Yak7=5.:gk"OEg^(?l[iMm%Z_L$kFf4Hb)*SeRp%F-MUR>@Q&"<Q^,R\F+GLhh&e>\@i441XG10k7FXD--k[7kL4k)Os5pp
%7X7$t#_&DGfR8]nU:WuZYid<"GBBiIT>?R\/tpRY=B]rc<UkM/.qc`8,-Gkj:4SUNC^F_k"jPSCdqGmm1eJ*oM&Z_H@efIQ+P^j+
%*X:5CVEJM9cRY(^56PRjCQHAg)btNgHY>i0>2M-T3id)>A$kIs$$9'?Za7tQ>\hAq/T>2J<9g1@,?]ng*7%MQO\a(28En&0MRN#Q
%[9pliKjs..*>Li6<5)itm)GDrnbTNR?Sr:,V"h;SU84es+J4GR=D7kd61o9c;NdKMXc?#bQ4mehNOX1<$Q.')JmdEKG"2%]+F8l.
%Ar0K,J\.\f7sg5aJZ5fAJ$@8X+p,;W\.Pa4Ft*lC(&lTdd=]q(o#Ef?*&X<;0Y]XdeFsP8]"qO']^`PZj>^`/>2m,Q-F\`F?aqZZ
%ZD%bJc\+8V02#R9@W51QgQA8(Ir`8`$$:Wt_"aPn[<h$CE[RT0\3*a\eOIp6N9*BR%GR9ps*UJ-Vc1[lB\]<_8sj[*R:2^CMSO$[
%;#Z/)S-3SR%LDC:kb<,/ja]dC&`9JdqFeXf/_+2ScGr*ue=d?pXqsK4+`^Oe(*=i-X(eaMa]YpeT89]joW(/&3^7+%T[[O&Y;iD;
%#,KjZ%/Ekj;:eQ^8?%_OG;Wmc?+_O8$m-I#MSLg[!XdXiBQF_Sr29-:5p=UfMi`(Hq]`;(l@go5Mp1P1>2KfYe!8/GcG&Te.aT4!
%)ei$oG?sMM*4-)-1#:]WbTqSRn`nr2KrSI$@*8*-DY`4J,)@nNBM_ACqG"fokWE2&+Uj[*_<eucR\jh$UkjKBTmU"(H52c^H^qZS
%F!Zb/B7fmWS>#:T+T-Qo(?4\t3>'mm$sjT5qo1hUbaiaB?o;DH@H,G2d#>T'@Nh_@K:6;"d2Y4nn9sN1[58PVpoii^<S;`K8"pt0
%lW!oL\4r;_@C7C711G-`SE^O/eal2T"X'/n#uFeTD0=\GIL;'tl"`lN`TABc'W,]k&M?o'PcDO+%Lo<?n4gA:M7N3FW4LWE,_iE-
%9&Hme+`+?9)p=p,*\$Td#I1u`?Uk^]ktP>iJLWo&c4SGiC41Q2e,cG6YnYP7-<J03`3u[oQqJrHKa"p&)mn)t-@<BXHY)%S5QQU!
%IhWEj58WafPs:Z8qUEb.^a_F1qK<UP*01Dt*9&OBgnQ4[TOMGj-69pCqbVl__uPloD%R%C`s&EHfW%*"K-d%5QF=[J>6&Y8AdLeK
%74[3i]AE1fL^JJq<.d*Y9-*2oH/]h1.4W:&SqU.#T$Q?L9NP('r:_@=</nqq")ZDNY[U'-;2KD_VQsMKbjZ5I84sK;VD&Yi7=nk*
%LNKpV<Q'^+ElBg6%AbZXH*Ktl\ZlF1%$.86CrNG!]VCU!Ve$5-ZG#;LCTOhY/r>$lWM^kG_*<),[>T]0q3r<2CL&6D@[gskpq^u=
%\O^9=WhdO](.b3A&&6]E'NH(mQ72Rn2,r*f:fW4BVMcnAOLk.1P)?EN`Ipu.YFaI*NOOIW-q4]m:V/]f@'^NO]+:NiVMg,dd.6$"
%gJ`sGYObHM(FH[M=)?V!k`UsON`(EHV6/26FG-ABf@mXi*<GY<2/VA?cj7BkI<9Hk-'M5sIBO:,-oL-(R@tbpM@(ns^%oP`\joTA
%Bat?nE3Z=L#9Q4.l-ba!1$>%MBlYj3Q:'?:..8`-e:A"Pr+qPQ<eO[F-V\IFWY5s--_dGt\[g:K8ZRh+O:cM27<n+%j9hj1Yo\8(
%;ta<DS"\0*.tEYso6gQHl`*\si9E&knTSIsb7)k?'CG\c!Her5h8KDb!GV1->B=t^M1j)5.ksKLC8`c6VCE^[9[g/?iU1LL40G8!
%\ft<)]]u!L3rSq+0-on>*^rR)H<p:0Q)]l5^X(/_h_afZoKK:$XA5\XYR7N[%[SBV=`=+4Tk"#a*55Tj1Hs%tS/arDK(*Yl=pF%R
%jg7nj59cDtB(4WuOjZ$t^h>L@Hl76]`&I.Y.ZQL`cK95UPgm=jc%,Zk;[@o'-n.q%%h:q"e7T0;[hYZsSo/=nd/gU7lZ?%b.*WD'
%^!=Ci82"?@H[UCF=:)<"9pXNN6%T75)YsUE(p]?f?-ZA39pIq;T?R%t%ZFB17qA&;p>KL,In'A9`6C]H\05;nM8;6R5]*Bt)cGEM
%lB/NSG+!H8O)&$NV"tEY9L@i+Xc_Qrcu,><,`q9g/66Fs]?g*FD"B?6K=_Q+Dl;Z!$"W8SBn_Xt3Pb3$3Rc3&m%Rf/s-uW?oA&I/
%U]UK\1HtQ<q`^.m2"#iCQmX44JIbp0Jq9Jje)Sc0J:^%c!KZ(2+?pQ:b]"RN+&nr^1a[ch&kICuW`Q_VE29!J+R%X4?`Z9'%QI;J
%Srk.+b>)@FH\Kf=p"K/p49#/YO1N$nbL9h$rBets':N+:#J:kiZoOT]3@H7IB(E4S+^3gsrJs[,$!JC`#-)XrL]GUD:abb*\4BWk
%kT*5.?::=kes,MS/Ko6,g;*'B%mt%`/A9'X_D@Y?67,mQ:RuR%p^tTB4/UA06FYUnT_4)gX*QX(V'It38>R[@d1aHBCILp8(-B`B
%7l"bBn10`q5_#-<R`25rgX1"%r.H81Rj;sXeCnCm77K:o#PJG_5/laCrQnaE7XtJGdX-'\<2ARR`lC.B5Y(MqW'UgiMI\Y=)&ru`
%eV\&R'"4%$=np`^SD_-39?d>Z9)]SDShqa+':9N"K[BR<G[8@TcgG3UT-Mk?%4Ol#e-htUP+?MT:/eNZk[!Y;#kNKqYVP#2]Thoh
%nZ?3<JTsf$g_FdMh2%'mh,RZa.`IB(]&Tk!?QP;1VQ&oe'V13B1<;;k8Mjm9i?n/Fk@&]3r@/%<9Li$+Fl@#R:aE$/'[L3`!^+;`
%9R%^12RFfa.8CHu4N_Oo"DgP=SSS2W15a7F+K,JeBEYHl<&FYX/e0l0QG'4k5^spAUq(2h(+c>m!^*OPZ5I0ZY1=5F4gYIK9uZGX
%22[K676kY<2?68o7jZ!WO/oBQ=qRetC3!NI"CU);Uc!q]@-(V!=9_Lg-fg3WAPIGfN=#].KiUGeSQXa,)CUIG\?uI-H>oH(g-A0Q
%Gm&1;mTU=ZakWSH.sEpd[cn+aFB:=HP/FCjR?jh7h4<ds1SUe74Y9373Ou)=R"h/=-V,Caj`]/O*[Ss9-L4j:'PZVN3)lV4X[iic
%Huo-"9;Y`0jeVUF`O4W7FE0_[SS(1plB>Hkg4/0O"]pp",(&%#$WfP<[AK3Q33N=.0R'J"'%JUiYLHj\PMcTR\eAItNM4FP0r+nt
%NemfF`0Ar[9M$REg)V65ZANiVM:a[U!K.dA=AS33_4&`J%rMf]\UofOY-b*/%aG^LbmNs8WPQg3T2\%D_^O(PJ^#2SjquD>67],B
%*,?QbZri1*bkiqektR>`K2:CRgpi`7bAr,gelX9?1C.qRQ#-1Bb]u\nceb1,lKNH@#dk]HF8-I"&Y='@(Fja=H56s>4tuO+AFAsn
%?)2N.FgYsZYhX4fZW!UI2tXN-E+qgY]Cr4:1[679jO`>dY3]+j"Y;]J&(+/f3MI/E;?3.:e//"i`UG7,=?8PUV7a;fW*NC\YYWWa
%,MI>*7WXTV<79`<p=t6Cj':p@S%UYL>.^MdD''g&^"BGYNF=;JPJ_N$<(t>S4GN7K&KZ.&W5.PuhiUssJbrd7-Ld'/g#b=c$n-'2
%.psdJ9&TWsd3BCQ-j.?t?`aRkA5&3Eb15r4peKpZiPChVgAqMpB>i8uX2R-InRp^,m7Kmq+H<'l!UY-g5n?hP_]!HN))13(/8+`W
%Vo-JW<9@C9*Pm:`_6qEeaIA[0#%7_e+FZdsppcWf^k<.b%^hss4pQ6s:a"L7EI&p,!sE`ToG3.r/4k']771"2UK"fgDDJn$k)@c:
%(cc2hb,/Z@+L&H<=M%'q2=4^f<WXE;H$]'C6Om$MMtLn0NR1%S>^!4O$<d&-k]Kju7A_Re[;E>jgMs7IG^:<+H+=@-OTVF0'sW<U
%W,804`c\qk/1q4Gl#mD'`k2t?723-hkNOJ.i^e(Xo`)VVnnc1O0oUnc)V1o_+)>2+r3D1uA?))#C%G;4C6s-oqN#4fDT.kZUV=$g
%l+2@!9oP_@Gj+egbV18?Ne`(2iAdN^$AepQY)pd(WEV@SUb:NtY'i;o!':O:Ic<1J[C)Z/;mob38?(j-Wlr]Ke[g!DW5daWn&%Zh
%;*kn!d\]iIgL:Fr@J@1=h,&j7=0**DbLG"rVXhF7Vcpf()<j972*LTbJE*H$8`$L'H%]7._J&?GGFh2Ml'&Ae&H3r47W,g4r<4"4
%#TT*eP$@3?[/f'T.Ufg8l%9lP;"-K%cr5cJ$4dr%SrbZ3jdk+9$]_8t*K8h:g4c8Y@>+UKG.$12\"h)&eh69*bBk2Zl(pa,ij0A.
%$5DWQb?q,s#Rs_b`O3U104)F<"=qI:&Zg_FRUMUN>J.atiHXM$d:e52!/RF^YM#.ZY=)[(i^tLThlZO[QFn>#QfKV%Whli$75c'.
%]@sH,!dj`snH\2WG&JW]3?Pa;<IuW$?MaF[#[,L@J`%C3D\X+LG_^At1%Qkk=>[C2<sCr'/UYYfJti#Ip$!uS^%i$2ode7uY7Nj"
%lk:&a(G[;qCT$*S.jT;46g@U*]`1tPo)1jU?O'm839YNN3l+<2?J?e"2bK$D'k-jI>mtl@gs_p`-L;rCIO0JA@=N#X#q8mqqNeh:
%3GX`7P[TC4bj-YE'6LMgTjBYo5Wo/e!lSVe<_*g0]$&+=$7p8Lo#'.?Gm&5hNrYYpM+#?#akE15RE^:Uk:qR_U_Mq6M0PY3-r'.8
%UqHts+\A-\9kW/^!3X&B&m5i&5lZHHO&?\WDGkBL@o\;03#WFJjf=t9He%JETK9$LWDPSt_LBaMODHp,,"-Ff=kOLAR+-"IH)TST
%37+s8-Z.,:Gpar88P3>H"ZD0)*7dj$3ZXa0%j28<b+od`Bu<o,H;:#>4ihFUa/>5-Eo&jX-+V=bKmC(9MY%Qd!rFO.%hj&`J/B[L
%;.<6?O_g7%.if$Ie]'-S+2d!$/bh>6X.YF#I]eKQF[:P6.NFDQ(g_4"C5m2<5[l4l3-(*VM9Qg&9?=sbkdeh"9hH*lU5E`b=Z9Tq
%^Zn.fAH:'&==NOjA_[@6AI1%=;[;mqShe?p\Ns[>iYXfrh`nDJXm8T03Amu+/?P:cN[mUXBJo*(\">A4l-%dKF&\N&102.Xj46tQ
%9k'C%iI8e@V!a_%R-T^S([#2>SjDlRYHR26\0?I;9FdDf]hZctV`WBWF[oT"&m+Oi&,-XLdQT1#bpa0SP6!Z'T5?_2p>DH-G49.Z
%@d,+Fou9GJ9E+D=9bi%e#r$:5.5iG<r@;ajV2i63doK!``QGO3ec1M*9O%kNPOoXg*ihkkQE<MiO@V2kl<0of(kGE_hBND()<N%*
%k/=o83VT+(WUrfG:_;T`pUi=.!:o3I9K'`ZSNTcTZ!F^+lg&BRs1b.amp=/B8>4/\'i(/J4Qfp]LHu*1Htd=8-g7k6*aom3PEAbh
%Ks1+@cO?uUBlGqFcZsog^OCR4[a2Eg8SAPn'8QW43Eq=h]/k]sNY:8Na<JW[8!KFtJ^jo(Jk(tWHYr8IBC^Q!*hIlI*a\m&p@/'m
%LX3YhO2#-7Dbk`T]?^q7))r*E"c&0Wij,pY1_'.!daXtA5gtHWl"u#iV$XKD+l:`':tp,<NC!ljg/B2I/$=uFIoqthe2k9O/'Ih2
%JMNN->*Z8XjYqe+0jl]CE)$/(5R."KS-aJ2]u6pHcs)8:WkAu&Tef/Oi_3F2nZ1%q$7825W:l"Oa`TY5`1jq+p6<Bd(MLAId^:n5
%)p#6*;<9^)Q8EQ/.mh?U]2_%h=TVa)agT7R3BJE[S36FY0Xb,W0kj#j'Al\h)l7M6`oJ.9(.^*2ZJH<uR8s,rmXDE;\aa^'hP,a'
%!WM&1,?q52IG'cR^L^d:^L^bt4rOCgVrWo:JgMa3O4)+t724,<)4_oOD9>2sfGpdY=iJM%-HaFEaKErc@Mr38](oIk\uBH[W9`X\
%S6lIn1]@bu?1EU+Yq,GVQPI5Z]j]=0TfQg[icX,i@)pX(Zo*aS0_u.&+N`@^fJ+5Nm22^>O=B>?3GJMdD+\gQCog`2#YT3n/#QsM
%DeU9Q@Z!ReY@r@@9JXg>i0e^IAO6dMXlm*EJ&h0ObpW:4=m,)u.)5`je/N4IQf]P2`cbUgikTZBY'oPqpT$O,?dKrNin?9L`ZB-S
%D$3.J5N3^s&-n6"S1U6SZMk/r>S1aYPuQdWqGh3Thb4=k=Z_V_BroGTB[gL\D2efX9,ZccccpL.TJ'TtQ<CuD#'_G.g,_h?4XOXs
%%Hjk=0\'l4r33WQlJ=b<aVL/:-U#E3G)0$t49?!T#L^#lT3!5oOXt3;-KQ3N.0[hr\Ai"Te#[Mq&%r32J/n%cEY%0D<=fnYY(To:
%MQ]8_I#,hrU\(^P+YeflZ^IBK*(1!I#j5$bAHK*-mosYr@/?o@'K(?l)@eAgkfl>DjCVq0b';HEL7Xq%18_F%_O3d90E,6q$Ff%Y
%ZSlmBEkP*nch*2=;@>8?_$P]1hW;!%`c7SJA\E*Xb7JW6IN@`pq(hReLE<1KfUJQa*5\c/#^W#A<"/H=h%t>\c>J#$9_gY+i/ogJ
%3]W0Z8[`'u:`c*1O#eYf%+<oXiA?6%W,ns]7Rl7rF9X'lL%W%Y>a\[6P"ffJ<RJNk8h,R^an_SZ#\ad/U4c$8OYJ^uKlTm?KF-9&
%ponn0?(l:t\X;7Yf^h^pKOnR\_LB32VWf$!<)%3Lmou>X"lBL28l^RK$Uau18B%X73Zm3]PTNucYZ#Kd1pS3'`TSc=euCSIrPQ0q
%aOs+.F<NY^.7a#KI[ObYBWQ_"omSE/.,[Z3ctUIq@iE7^#.ql&#ujG;L^G^T]5YUM^N+,nXdC?-s,*D*pB':ZGO+8pY008,=-'bd
%<Y]EA\it>po%"fc=\L#,Fcl'S8^(5gHcB7Z_55MkPFI8)9=<@i.Fgl7+tL6]mY#(F`c3gpdYp,'U@EME<*lpE/.!'bA!nkUJZ1a#
%g.XIE9E+u?ei;@4*c>RW#IREVB#S:$_T]i=Sok"jmo(M8F$;sEI?)[kl>hp%RjJ&X4ON%;'OS%tU:i/nl*mf0rNB<Pb3M[IYEbjK
%Q(gHCMYR+mUcK]WY?F/Sonuu:!T`(DpAS0tfkhTWe/M'l=N+t6;uHcfn"JAcU-RO#mX&oMCN-Gg_)_5A9\7qp[gp[^RtbN6SJB+g
%*8`SV6iL=p?I`_KA5_P]l:lHZQ"DjQ,"0*5'V:98Rp(\6GLCmbi)cJ6IQ8ig4":-;3[s+>8Z>K\8smV0Emm3Vqt=7jjgX=?>Pd'6
%M^oOZF(q!(d^SDf0$bjBRd2^^a!GZMV-]`ds)lp>^UPm8.JN2?j<rP*Y&,!Lg$Ca-TnIMULa/+]A`t/R5_0/V9.suL'ZsUWY+8U'
%Y]:DY6+h8sb0ORb`'tf)F8M'^im1VD'!=h@c-Q"ti,B01J4jL]gg=0_!X;C]^88H[8)Z$C=D6ub<S$O]Ph%;Sn,TS5#**JLki1;o
%qh*Xs?@2.rJ<r]mRCkAKJ`2c)(L]U4AXcYDWb\SJo<_M[_"+`R["4PO*d+sue.r^tQ$k,47Y'td@sRP`hVIkM9Np55\dr^B'F:1-
%2n$k%_80Q'VgSooE*C"ODQ[N"Ek,pHXGY't1j>XV30%IgR^Y@Zfj!&*]OSb]q;!(W#K@*+BH_^GWe>$m(1<,bm%]^OTr_CB18P0b
%?s&)S9[!P)dLhia@P)a`^ag"k`mdJ8K]ls<82I#Y@EbL8`#_hUQMRHu@7Pi'^R1B\^p1cD,dF61_/u-:i0g"Ih@p*[5e"$9l<9RJ
%j*63'+d1tToh/&,!!MY*fAFC`%ZA%)58^C/XfOd06qU@6aB=cAX#[[?%]\f_'t0ZF,JNF$h_A;Ro,58KT-=0&56Lib238%mCkI8R
%&0qf$ahHLjhsRm>hLDXpqOd/:mgQc+B8>:2*@f-nZaE8QW48CtkUCZaS><+e*(@FCiihT/'SGg5NaS__b(Oc_WYHMEK2dS%*.Bu7
%35G`\+geX_f!d2RX1C*U8KWSUk6Q7q)AVL>X)nf:4NX\rb0Hi(i[2T2dgjhDMEfnA,TqI:S&K`t.6"<UHj"%g]Ui:((qLL^SNLE=
%O_!-C(A%HE)D&iibFj*rH<+dXe;0ul6Jo*sX$/Wr!o3Rdo+0i4^s]1%bh=V5.tFJBZ""Q,e9rY<)J4>]!:-q)EaZ5qANlLT0[gOc
%C\Q%T<<P!J630._lVR1O&+Et64>BO"dR:b7[E.cd7_\0^B_/S4#l(B>9oKV6WB:t:KA+k#*^sj=dL#4!DWPuJd-Q^Q8GMsm1><d/
%E=d\)rtI!&;L0lsri4>^%>.rme0(#&'WiHe<odlXFc+V)-LD()9aJI[nt(RS8sXfMfIO1m/?*i:>Ts#27`qMA:o4hLa<IkmRR*='
%%tMqu?_U@3fUYX)%)\;::O4sB"kQ'Cf#1f#CmWPb6WQaG$j/dmK1Rl_FP=%c'@/Z9%$4Eag/RU"LBY1'ZR6t9\m.58Oj"[Xb4@dO
%qfF,-4dJ_NB&8K:gb838A,ibQ/T0eKR4a1Dl/qNod9HO1m7=#QI@'+OGpQiC`dZ$97?A[NPd//lo2&G\#QgGh$cm-"&2lripGcEX
%T9[R?Oe.j1(Z/2L/$9&Qb/(II.q#XdYRf'Vbh0H7Z+.?;mc_YP;;HWnXA!g1R2-r_JIms#=N!K0Ne>p.m7\h_*C[&>jR#[0JjBN2
%hN$Q'4\q,W=mS^9W*.%ZACG//X!tJtd$]W9Z"JU!J?*DW*%Wf^*!DOf\X1+fl</Ec%\;WAh+T"$[r-:(g58i\h/!S9@uqk"M=S#u
%I(bi&*6SK[+YOOuZW\bLq0-!jg:qp,#S1Bhjb7V^<*q,tA#2(4GC=>nGCTc>a>`HQM)obcK5M],`f`K<)2C;g<Br_IVP./eaP6l]
%1$sNPpV?E0/OnmtQ'"Y?_fnR^qh*@q,`=*eKeqOAVn0j/,q:*rI&m#Pj2*<eJ2m:EQC$*BjBk;oo%H\0&V_/!rFtJFI2Vm(&,`^<
%5&8m8JR@e*I.3"Q/:[ANkbZU3;18"mf(P!PG)A1ClD%9W05K6I;7X?6ZFuu[lP5E&/*bk>8s`c3I\U+8-[^)qI]HPW[T?E]YGc<I
%kfG?$pLI?;hD+lk\^NrJQE;C^jV8O!V@!IhltJC&kb:l6(M6Xt-t?I8QSP,DAX7C*otPa4/O%,dfGH)i2ogtjBN.7CB2k+d=pfTS
%h=\-$Y;l'NhG>N,Y(8mK0WVu-(7gGU9d)HG[E=cboDrd&Jfj#A?m4XIP/U\'D2:XI32-J%3_:K(?T&Fod"Ru$iD-h)pmKC7<.bT5
%p@aY-.I`"::qhno,;Bu2J?$Ws5^A3l9kgrA9=PqT,+TM$N:?J`RR#!I$oMk,i+W4Ccb'D/pfoPe%$W.L,S(7B_Ws7u[75sB=^gd1
%<Y`OKB"4mdMm)aLbE%Z3TU4Ca6^=JiX@TlIJuq/tj.%EI%q@MT^C?LZ[VC(@AuA,22hHJ%HT#D.2)p2]D&ZWTDQedWZE*\\!fj9_
%31Gd^K8U>0.^N>!,A(\^\dBnIA^&.^TI-#(F.#G3-7mm5b^nT%Vc$Tb>+cDeO`@AQ=^<[I$k^<fU7!VI;Snt@R:)Hb`@h!j]l>j)
%OMXSKfJtNFG6r+-MJ;.\Rm-fl@gY/eiTp.Sb3N[W^\Si)/`!LeO/jn\CnF;1W:_abo5_G.OS@t#^=I(TN'H&?1$IcCTUUF[eG\64
%KrME'-D!G`&><#'*L_a:AS6B-4Olc4.e96T3Ou_+q8;5P@U=R[)dsaAU^eVbLc-T>D40Nt]#OG@r=#b5?aDQ7i/Xn/P^$pp.paJk
%Kg2bblt0cJcDbqF8$1ONA>2--e`cdRY4/(;8^*AYb`0c(C2:/<[]W)mKOP9'=NF`na;\2&aas((qB<7p8'(^P2YSY'=;0sb$X2;V
%;^0kWdreCh$\tWS8onYof.FT9fJQkd;S(hQ3>S)eD]146D8$LNA8O)#C3NPF]4]MjA,SJb(D5lQ,aC)uQ*:/'Vb7oN(.?AN1$@=_
%Q<NFN?Q*-fIam#s#GDrpO@a(3MBPJ68UQL#';Jn&Y`hIn[cF27)7g`%c\1R9XHb4/Zq=E*.03c6qkW:/oe`gBXVLV'Y*%)/e]Xu0
%-(LI*Qel/t^&fYd>G*?nQrd>j5%eM%8JT\W>`P]WI70<*VI:Vi2!YU2^jS1lPW*Fao$I&HOCCqMhAE-G4g,bLO(Jp"%@-p6q\IsP
%pp#Ns874Y@U%%$&096Bu3Q\FhTr61EaS'_UB,W*;VKOqJKQYfC6O?.j'!0Q$<cWQ%pkNXfH!1*`Ogj+MVjJH&D?bJU<nYoM5m:ph
%$8o@u`*=qD8nsf*+)RCmZGQgs/i/'FL[J)o`,6nA2T$Eln2s\lTcU<_dW_":+NH_r-TE$_?Td0L2j'O8N_M#fmgj_gN9r+2/j(Zh
%*D(o0iTkdN;lHBra7\6:Baa7&*)_c5Y53`p+,bHCHJ^2<Yf`]*!pGs[Ssu%;LeLS&BIM=aXu'JY>/ZQJ'dW,h;qH&[M^mon'P9[c
%?W),lBc-S"8V]>6O3bfMGb24Mj<`Gn/b^o&`U=XSLh5UM24?IJXW$5'2/932BjAhNqfc7&'N=dJb=6tb2Sq+,jA=ic1P]QLP/3bM
%cj_1RYALr`1,-@e+IQ6cYJ?&#SX"@iW3-u*L+S7rn6D'(F_(2]AEF_s>@Y';Zgfe-T17s#0^HJj@#h":l9kk&MCD[1P_9Bp_F["j
%+2JXHj5A$S>j\k<<3<FB,\'W3%B.YTT/u7$dVq#?^L"fB?,M0ZiP2PS?ha=;+3/l@9'pYal?8H@G*V@FY#;uVQ0.0Xjm<oHb:umO
%2r('H\O#?&%JmNh+>Y\5n-nXgD2k/PlNaQ8&*g?I:jr"hg8uH][i\SY+4SI,K>s)so^5;B\lGIi>>@u&Si=''/t0EF$N;ji[ClA^
%'r%[T'=f`D6ZlN/VKV4hJSfm`3<@HTRs`@3;&;/&\16+<p]TFoEkkCq,U8(faqh.o,i`GcS*6_8XanN.M4tZuG*_)#[AV87%sDj0
%1XW+ENG-s<NZAX(hF<8M1kM7X4<L269X&3L[*33RYW^S9S!m%;Vd6jAfN4<"S&0bZ&-FIKS+6\p+:F@_V7q1/4?V&j_uQMrKiD`Z
%5uWS"1<ds>9uJK*_PUd&,E@a$8![jQk7O*J`>H+Qq:_%2(Gii4`YeV@jI!#Y%Xn4Xm5t3uYCm[u93(4\MdeJ6rSh)43T>%]MA%FC
%f:d6Jo8Hu/c-Zi^9T,#"0O&p4n#S<RCI!4t`.Xrrj*TN3FdjF3AP):A$E:R0T(k&U_hC<<eh+$KFQr\Ec"ief7912E.NAjFKBmqf
%>eg;&rCG[FPCD-.Qt+Tk]6W]%FhZ<fETY90U3iuAkl,;R\`rj[rpks@9tC'&2rEl&B9h#:)CSR7b,%,q</'o+TbEqHj_)aP.B5)G
%=rMoi`#"R&#9(.hb!@a&'!'U"3@OTr9ZJ]Y5kK(pWR9nphX>@Uo<m9MV*hkG[N$Ug,'4=j)HKdU@:`5uamhm#pCs*m"X!lA<F#*n
%+1bXV9@8.^g7%#EWj$bsXLha3F<M_Wf`:X(I1@p9=D<I_br?SM2rLXKo0+.spDjX:8#CMQE0mK7J+MHn(]&C*rB`G=^NmkdS'&=:
%,7ajU9q0s>7V^iLT^R!`CN$t2"&2'(+\Hnbfq,CUjg;nY-;ZUWL$;DVSo39%Q=!N4ZHmTLTkmio-=YrXX=*'HQY*6??68qamfN-h
%"Timj_cgU,:tgQCTUp/a^tTp'6,*@SkI,Bdn=1LSj\:oG+HjE`m%8\JmpeI0WBE(!k<2u4n=(c]p;C`j]sQi`](NJQYPiLrOE#rL
%ZIrA?:4KZo])7oT%Yp,HQ^:caBaUB"c-<Zb[s.JU1Ddl9Y7f#XrEjF/0&2&E#Gl"">_WQ!Xq&HVgUH1_jtZTN;m7H?*F*/RV?%?n
%-o]KNnp$k>8X9,jID8SuM,6&6q'/grHOdp'hg_8%03o2O5pjbWlZd](`gb$Jg%Pg@5'WMV"0G4>L8UqdH>2GaHfMN[mQ:0Nd5O5[
%Dei"N(_G^7+a?]V&<%N4$JAc[k:RIlQCWM]+\Y*I:eIV(W[-A:Ri3To-+^mTe?4A,P?MG9q9]]X%)WUfPn;pR,Cbb'*]gHZU(Nu@
%]dB0XPL9W$gVPfW2"k!sroOmMI)t(16f5a/6aiNHI<G[O0a`X-S@mroPO]:f!=3G<DQ\E&^#RGt[2eA1^a`.!26e]#'IM=fareEE
%$f*q`5*$BYg`qt?ZbuZ=SVQfckA.6\g$nUN^qW,6lh]#d?[qtLnI#6L,JdGEs#Y\ij:RC[ms(Ec5URUFKdu>,81I+D.b:jt-Hep"
%:(@(tc!Y?&s75hI+,s.gjub4_#6VN+Zo/mVbFlQD2E@?-\oM?gWhla&">L3@Is"&lVUSBVWS"OQ]""b/Wu2\fj1aaUk!f.PK0Tf6
%i,@*9TAMlI`$ID<3Q.Zls)7)FT9Hg(s7J$_GPZ8s'93hi/Ku8p^Zb=0d_TBpga=XjoY0O5l@nPQ^V(H_nh0\W($kr"'Sh/Ze3afU
%l23XQg9B^T#fajLZXLQVG%>rd+K<oT-8^Ihe3E6^#$P,/]?16r&IH\m%sYj7Kd!lcknH^4BLoC,4G'Jbg*Doh5<SnfFhT<NKh3DT
%KP,SuM#.CiZo]l]T+1aq,Aqi$cRg?ED8,s0g(2nTB@b3\gLXb7JLSS<V)66QD`X?t!2jhE,u`j=TGCY]V8dj@5r.!ZBBMkiUGXc)
%d:Pq(JL#X0QhT5HoD6jQL;rBeGk7&)8&E<,HiGl0m?D_5(pDLg21rjk6I6%p:k=nY&/-Aea,^1?)h/[1W=kfK?iGMI]SrbuG^VK_
%cErX>lDk)$+!:(67t)<X+,@q8iUaUBG9(\T>qc0!5Y0<M9:o;3Z2%mBL3=kW.ghZkPdnq_k)jbNJ6YBR+n9RjeoI<[1mh2&I/TCI
%;W0T4iCclhg9L'L(VUclZUq.R`t!U6S)QBErFSrTSiA.J4ut]JX5HVKSQEskN"7Gd%Z>]XFuS<9@O37Ilphf#qCqHhO"+mg26OHs
%K2bBN&llp7-k1TLNVD1-OXNC"Je)AbIdF`V;.!NlrV,WXp$iE<F\UTM"+L*VT>1?Lpp_83YJZ@Pf5$`PCg"&>?%;Ho5'PjX#JY_A
%S$0f:"R/JSoG6[F0>!\'3C9NoE^U)4klah\l0>7MV#fN3YE]Tk)0]_9TiUpFN:S!L2GcASrE0jff8YBC]3\j$8t"J<"o47kaSrC0
%f6I4=S8\4*]udrmpT`4oICa@1QC*+4YC,,jZ-M_,J!5LFhq2C\4N%jS+,8SJh6Qi;dr3fiQSmf83WF10\/j@sB>C\k#<ju1f_0A^
%I-@?O*Vcmd5Bd"KQhg:45(;"JDuO`IHlOalUZo[(q`#-oa6CiNIMqXYo7D,[!_PZF)\bgnlEldF,jJpC2[M:WX7GI@Mg@>HVWrg:
%SHdU9TK.)oTHA8$Zr`tgM>-2ZpTh0>Nl4_'p%);"=_g77Tu(T;S++kKf?SWU4Yc@on>\.DI-ld:IJ$3YrLa+.hZ&'ZG]84?3[FJO
%gr=?F@@WcHGrR6l8BP-akp71%dMNt75>c_Y'uET/JO$S5Tg49m,"?'P6L@)[qgdtj-^65_"f,smPkiZB&T7T+9=^CF^*S;l`)D2j
%01^Flb>lPcV5mJ2Zm$,\'uP2@(mUe*H)OfE2>`.rS.E,uI>4^<Sqb*r&uD'=$c<,TMFBanZjrT\l*.bYH%n]5gVai,$shEFBB$Ql
%iO!3na9f=RNfVA!Xs2rG<`&V`.]4Lc`Z7s,oW!.EbDAh'!@Nn>eL$s=+Tb"e'4&;gJjE,381K9Bk8@!A&L%;mU^B(`E?Pa[p$)3%
%?<IWukC<UUUgfprO.1fcfc?o>F'(r0Ok^`JHX^ik.U0Z*#9%so:!9GS&XbH[+;>;c6l_B(37j_G"Lk1(Q^!m[6i:_6$.LA8gGX\B
%7,T^!=1j_]2n`'^%r';!)G?CeaeZRTYt:]qULq%(b>r)a/-$iQ"Ig')&a.U>#E_2A635Y9ID6I>=$C^p&>PCpQ[/e:(_jth.V)Lk
%Ecj=%IJP,K!u`EpgrM6ZfrQ2X1h*E[&[<u1M__1U$m(`B6L$iGA;B+dOXri)dOT.'alH^o<8JcqQs<?hU[7#:;Qp1ChhlY;kGN5/
%\>2=59K3H<eCe:(f->1IXhXd`ra2:`TFTA7pja#OL=s,rL<>(LW6OYag:0gHR&Fh#W&YT,IQ:Ot;H2sTU!i-EJiF-)IU_QcbD$LR
%;6,Sa\P,JUY,?kMEf\_n['g8V.e7Pk>FgN<2GIE#L+9oa'?;[rM^D@_QCsqp[]Fkpqur5GQB>>sRE\<>f[S.rb6\";-5nuEZ4:(F
%qJB.='4@lmCHI4SZGJ[gocT2hl`d?,pBHUG<tGPc/W$[3X2nC@H[s,#C#17^!N)"uFU@^;3@uO:N^Zk&qE3Bq[GAs/eUK>;hRLP/
%cr'>=p,su'omu%3OD-gNa48m%a6,OmFa`]ofCkth*dF3!T<-*4@Jr<+Dhdi[do+5"'E]fqS*6JmojFn25f/C43MWtiR&Ag^0j;mV
%TT4]lB_t[2m-q<'Og/Kr4bPI`Y`lEA2$&rRDV$GYqo+dELU>UrnHhZlF="fPVC%$)Om+Ff($`'\<j8ARFbjDp%DW80E.@^6CfJ#Z
%+5L%kAp&2lSc/.-&:r^([BN]21^U30$-ku`S#2uMf)4f#X!IB+3=!Y;cua+t:e+?n5hils@[_@l]QmDD7)*3K3';$"j.l$RV`gKR
%L[2U%eXhNN\;#<JqqB*S099-"e%iIt-QtPu:\3%;<j<o2"9MUj7L0'ig>,c"7QsJ^S>X-Pd9Qg&q%F(;A9H<QpE>J%HuKlT/oCu(
%46h/PRnoaP&OPe9C29&-[VTGg$8,4#Vk;ou6U?A(QPNZnB/sS][/Lh!rNSpo**>)5JoRrenKQ*^ie'5:>c8QC`]e]mJ6,mMMe(SM
%X\I7K*ie\]^NoP\,mo0p;M+A;i%'l(!RHiAUt*$9/15eE1#3#M@hbWaF\]#e.)C[iJtd>AFJs245YB1fqomSj"@;N$i<Gff66\Xs
%6%oCH"\4oC`5sDNj"PnWkS+\Vq)k:[+;!g*RN()7T)UmUeUFQb_MmQbV<!*aG,!tdESoe_38NNB?UrGkb1$UF"oc#t.D6HXkKHl:
%HU];aVe6!S2`e!;?.sk$WhOPXZYjV%\o0!U\>!pLFNkAc"n)l*^bu_TX(,"<TYC(SAGIUWDEtO1Vd-eUH=nXWPGD*d3C""V8Qtjf
%D1)lo0sS(mRfY:'.9X<4c90Lqnf,TV.A*!:91:^Mj[j>%`AKkO7'<(t,jGC0j%oAbgdXRanWY<M^o'K@?$ad(p4Do8YPn<bfAAZP
%ERq;Pa\6A-%QhU#H`Pp:'t0]`:C03tm0OJ)K&02r.Qo=-R3I3gH5G7=P'6Q0^b_DhqXj,ta=u3bJRkCfW3'@.M*k'84d`%_ID3G[
%].e3d3`djPCC,;q&ZIp!",H&:g]HTg-(ZHe7iU.WJVuK<=]:M1E4umo4',s<'W3J:-*Y)"LESd<IOTF-Ead8TgU1?D+M$j^_Fl%[
%U;CCk$NY$*B_eYlY;keKV_9gkEl81I8-sgT:N)U5qJS>Io*CuVoG=X%=bbJ1[EVA'gWH"2GrO,"+UO\nl[BEJ]b7J>1m11Co_8b]
%,2.oWV[.4s%"bB5P9(kOaqWRT5`/ElQ4Gt.eWL8)<d:nXAo,&)q1Yb=gu>0OJW!VDX,7jAVPjde/.t';'LAteV]':n>Y<hI'M.KA
%9G?VW9f@2RCsWL_;35ZhqNq&N'h[ef_uS,3K[8^T=^V_"#EW0m\W;@;)SRZr@.dP,KH..L(^/1Qi1.7n4@uC)$."+2Pe0F3(8JDp
%S^F\.rY9jC\P\[^S.*T;aje-unJ5U]J4&Bn9/(QSBHmYf,MCFpp7Ks-j)C(j4,qE2.9=ON@3`b!ZWd`YQa#Nj6W8!K1uh4%:VOn`
%q^"<#2HLU_2.2U9_mKoo+lA6X%5pWrO+?q/dNskM@0#-Y)H<k@Plc;fC)57[aQa4#FN%PN\kT[U"`P#h"14Z-57rV?eqTMj(AM)*
%4/pu_H"_K<Sq(?.I8T0mA]A6]`Z:!6`)E<r1.VA:-A=;"_.hH+ZQHV#,-#VUYu49&02_bE:nd,KK!#RmkVRB/&XLq[-tK$4-bO;4
%2C")5)$T(]3<?*9)r9[c8K_\3[Fq]-B(R61^Zp5/9:_K3Usstq(b3W9"P(1o*Ir6Go)UC>-BY;^0q0Kod>MBqB?h$!n$#u'=U]BF
%AQT.kA<P-ag7Q=Ul5]m6Sgp]rX\gcB'7!.#1M)D/<_H<Eh\Q$dfeh(=a]audqL*<$OII+KDR4^6ifN8o2nqkT5us+Jd\hg#e:r#J
%R\-966I2tahi,2q7n'`+.KS\VVm-M!AaL^K?tae-BcRns>JdtABmTDQ2`Qu'J>L9+Cd%4AX*!4<K90G!=BMq\X1AU9']-.ne5X:l
%)m%GUYP'r:W!["G*YO@H<0HRpGUpm6b'JBC5gu[<b&Slj_,;4$`%DuI$]0'h_q-49G8rkgkVuBO`?m2\(=(C'Jrr26["p>kFKl@@
%Ld*Y++<Js5P!C//Q<On>G!aGN$!W^u9l>g(9Z"#UbRfVGppT#4,_U..>k.X]\Y`R=[;"9T3C#H)RTS8K.EA&06m7m#Bl37V,3`7k
%gjJYn6g3ha\6Hfq32#mGA:Yod;_<V"'DiMlC+/a5PN[$:@3L4)1dk`NfFG`*fWPEFPS,+UPZ5ko0#qs\a1,)8FF'U_`?g8E`(*4g
%WbX4/>9(@[=cr<?Mp"Mn@KlD"g,NXlcLHY#W5s>\oHZ49(eH2"Aq7Zpdl]l@19Cm?$MXlW8=`rfE(0pT[;ZI&e\YHcqBqb5pSSe<
%erUFP9b!bKbZ;@\A^%t:7P2)_n0F/l`e`k/E\h=_:EA0.o1&)5EoDlB*.H9de.b'p3$OOOJlPi+B!LbQh$P]apdQPD<C/G.Lc%PG
%1[o&%,8B\s,_UFBp"M]V:D@9-YF^D@o%$9:9f90m<E;MCFKlH8BiTl"[.Z_/XD3,3MXsi&jB,.J8h]9]0jHL1@>C$p)^#9NXlMn0
%D!2nGMkC>_Q#?(<!89'5EJH-%7`O.*V<YI_EKn"ir_5d?&gDt;D/_UIF>f!9RZ7S:8Q2dK?cO-l8O.c&+F`aFmiGL4>V&P?7i[u*
%:.Z9@"u\C1Na$aamFijA`fVGeoGp\mUfuUf\_aOHV9[mJ?!03T-mB-]3u1+bQEj]]jICige8Z+/@**2aIlQ80r2-ra2ugL\')NDg
%@R7Yo7eLim&Zna!W^[Xh>BW`eDI&);RS4crW,XM7W?<(O%^[_J8V>:5<_81?oCL)B#o"\jD]aEfVJDC$RIHGn>aFBgA>YtiQtOe^
%Qgp<n'Fdgj(U:mOj27uj%6p9?*PTJ"nZmc8^YLa3QQOS@6uA)8lsj^N<QH5BAp0;mb96d7E$qI[Zr[m25idT^QaF%iSIRd>O#R&4
%_r@j?oRfI`,LDc%G[p4,J;sh]F&+,3-sJ:afrAFro++:%_q-2A/W1=_2r^!F^AQ995/a,m<7d6'*:q(=]1U(M?K$f8?2(tJT69R.
%+5?Bk7`04>>R/^#7pE4jI*+;7IoolTW)qAmC??>l+N#oGp7n>/85,TX3R4u(h<<&ar?0sWW4.7#YM58iAur^&$X5%T0FgOucPN]%
%:^rb>D2M2ULJ)$?<)Od_M-M$`Z>1>6A?Z+MWY;:\)8IF7^OZqjqc4pq?)6dPbE=#]ClV?^kr_'gF0J+J8hi"O'dW:WV-@J(;$oUe
%BUK-+0YrXCk+B7Ud0a%7@m!I6.#.cDL0E+)&n:9r<-:GBVjZld*hkTr7;5W2L$WP:PKfDWOFe!iUA[AVNI*8':F2Zi.?Ns15I2sf
%<2/Mf]1'#K.T$m*.%J+uC*f3doD(%=_e0\#mlU#&d4V38QjITVQU_P3JW00d2AUkE&4.E-1Z`OCkbtl4l&D2XajaZY&KNC9(0!gc
%rTF5)&;%u<PP?Yp^O8]abs==5Zl+MWoNY'93@PcnqGp__pf28/W#a#b45!_KYr,BFDZ75DRMq5gS-fbIE7E#eSZ'J/V3"%/YYk[X
%WAb?1W<b,EVT<."[9UVe,Ti^uXc6RUa16t#fA_p8Jm@-HBnVp8,8Q,OE3i=7Nr:\h[D2K*-9`0IHu6J)"%Ps(X<`RuC(Ed)p_Qp%
%7'A-cPu%daT`N>n)<(ioWkR)4*JfunS#c5o5n;HJ!#h`Gr.,!*/i'Q9;*(HUa#7A[m,`nq<RJ$!*`2?%i_j9l(T%A0p!!a,0EK2"
%5tSgq-&:`8OdM8UI_+eJD"Q()c>]O"HWfC]KP;2<N5-PjKa0_.c-:3j9]E[T@dDudOS&S`[dM;$:a*V2jN6GJbn-fh:e`#N+#Cfs
%85.9I@o8d@!(fRQ6if8^NHgI)9=X$//jk"<qhJM.]<c^c-CV-%\[-U$ae%'/!W]<)Cq*<QB<=6<EL7i8MN6Ca7\q'`g8YuIeg(=m
%%'tSq4%2E#9EoKN3=Wn<f'+plf(5\t>*o,k]IN1Q>1]$kLW#gNQBgJk^es"Erj1.sek4na\m<1VQo]8\YD^eXbaMZ)_^3ZUW0!<h
%j`;<fRk=[V_d>DKE:V8eTu^XWJ,/_%$MV9%J]Q)R_diG2s*5,JHSe^aEthY>$>M!A%)fL-IWuEDU'i"b?:C?3/6899bN1,FfY2$_
%BPd@B`)6mt[b4fn>paRjbq,DT#Ra"[2d\tsS@oaF,_@K0TVn3H9Tjub(U"`2`L^utnnqH^dj:RR+s("rP?'CWQRBrF*aL=7q%$ik
%QiDkmd&\?(2.o#/U9&;'Hs*ThDY%'(X3M4m%Nk>Cf)"n@<'qUg9Zt^J")/S(7gKjN(B\?L_`_&A1m(b/>#?Ct8V'kRoJ!hZ7Jf^N
%E?*[77*UCdbNTM?W\$XLR]d\]aMdkj"0<]DRQNXP%b]8EfWUI7HsA+rSi/mEeqIhD(XPI;V^@TOr9Sr%1$cPS!%*Y'"['_"luQp?
%%p?29G/+7P#TeQGHLAGW+7rVSEi'2`Kl2Te.nuGS1?+\_bSZ2Y[O=XXLeri`?,OglD\u+:]u3s:oG`]u<n4/#ibqi0:W]Vi3+'Zr
%J)6rr'F95VHc1;4["6MB]*9\:\KfpF.Ap+!6F,(jEBcdA7k"Ff/@JLJcEm!":[cSSBPaL[?XXu#.VTHKX2JUs^*b8L>KbWlikL&n
%'&/XOJ\u@FehLc9OrRA_RP74=fYm;dYS:Y@=l!+;s,V%W4Qb.c92G5P@u`(Sa/>?u+0sCWa-K3S:Dd_&>R&kq_Ljg2W.@%'at=Z)
%d!+CB*D5j*g<eXs9%r5^a[6&MLSW\8#"3"&P&WI?2*Y/^ArWfLE604s'MM:Q#20*uH![>c;sE'e?caRY"5d(hA5t8.kn9&aM`N?B
%/-BtO33O5h"h?ZOK@P:_.Q&>=28n[t)\^SNDgILa=5^`W_eDGC$Do*%3,k`"*1@3jT=r%;3+[-9#*T+V\eMBM[OhR/Ug,Vhd57A2
%WG/dGkl\36l?j=o:e;t[iIpDCM5b.`k$hmp6^QBg/X<hmp8(SWpbW#4[(9?nQf_S^MbFIIW5FW:OTYJTZm2Js`dmAX/W3c6Gb"Ut
%>/sXU(OUX=16Qt7S0<L$0S-E#U=S\&JueAIB27t<i_nb$=!a#3cI[(DF"fT%FeYe<QD#.NCF.0f&^mR`Q0BR.lB`@@/&a4Wf2.ba
%5IZHA2p%<&0Yh'WE&4[jjZ/M^-d!s'oRprph8$<fU":dam9ot:P(;tl4cP!Sk;i5XZBYr*gT#_?m@c(b\W/K"_4+CQqOLh$VX<Fk
%^[2RsQfAA)8H-H!>ri<2do='PXimpuSqaY/M?]V)>tTjZ^j1RRMME]:LbtmV<U@le+Tq*(pY'N!e0+F`jW8V2AauH+$p<fu70d1g
%Zq(_:EtUgZe9sS-ru2%5>/OqZ=5XpA";1VJ".Np3&aUsf#lT36`kM)L"2YokeMim[\t,2k0p?gsVEkkn99(N*PkCL^h)\/u\6EmO
%$8"G3ojYTU\gU5M>fZTpDZG<pPVQ>1J,"][m#E<(5lplT7o3B5LE$nB)Ns)NiQ)aEO>5j/:S/L8V(/%.r42SF`Yrm8<oj@G`rPAF
%&//fLO+/4no%VE^qsD#NF+3-3s8Hs9e)1.Ks&8gPrl[P*\"E]qs8M8TJ,8Cdr9aO^a+*m5s74Kcr'12,5Q132r25&>QTorre(YuE
%nK7eq?iTo)J,6q*5J@$55QBtTrq2o_q+kr/o"Y4Rs+?#`Xpb7&Du\"1r?)(%5Q-':C]ls~>
%AI9_PrivateDataEnd
