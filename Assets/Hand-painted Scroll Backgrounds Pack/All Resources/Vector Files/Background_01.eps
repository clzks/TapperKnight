%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: bg13.eps
%%Creator: Adobe Illustrator(R) 17.0
%%For: Krol
%%CreationDate: 7/31/2016
%%BoundingBox: 0 0 900 481
%%HiResBoundingBox: 0 0 900 480
%%CropBox: 0 0 900 480
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 17.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 17.0.0 x256 R agm 4.7700 ct 5.3328%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.5-c014 79.151739, 2013/04/03-12:12:15        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Web</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2016-07-31T22:46:55+04:00</xmp:CreateDate>
         <xmp:ModifyDate>2016-07-31T22:46:55+04:00</xmp:ModifyDate>
         <xmp:MetadataDate>2016-07-31T22:46:55+04:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>140</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAjAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8AMfz4jNraaBriLWbT76ik&#xA;f5QEtPvgzELmQerSukhEiGqOoZT4gjbENb5Y1sp5d/Nq7l+zFZ6ot3TwjaUTU/4F6YltjyfSnnaE&#xA;3HkTXI0qzPp1xwA7kQsQPpORaxzfHcn7J/yhkg3loGhHz/gcUPoD8v8AzJDpfkXT9UllDRW6vb6l&#xA;CPtKnqMIJuIp0YhCe9etVyqO1rMWaeOW1zJea6bq5bk5Z7iZqdZHNSf+CbI5PpbE/N5bKpZn4gdS&#xA;cxOAsrTbQte8x65psvk3yxEVF5O0moanuFjhZVUrUfZB4Gp6noMzMMSBRap1dvYfL35Z+WdO8r/o&#xA;T0fV5nncXn2ZnlK0LhhuuxoF6U233ywtJlbz/wA+aobyLQra4kDapp8lxbagh+0JEeJA5HhJx5A4&#xA;lIerag3p+jcUJWJ6tTsCCK5DMao9yce9hLNFUvfFj1VWYn57fxzE0wubfm+lNX+LU4h2ijZ/+CIX&#xA;+GZZ3mPINA+lMLr+8HyywNajklTPTjW3+TEYoKEtxxaY/wAqN9/TFKHxVEDcwn6PuyKpD+YPkiw8&#xA;3+X5dPuKR3UdZLG6pvFKB/xFujDw96YArDfys89T0l8meZGMHmLT29KAy9Z40FQOR+06r/wS0O++&#xA;SQq/mXCJdStVJoRBt9LnISNFugNnmn5QXs2m+b7nT/jYzwz2rxxirExsJNhtvRGFewqcTuGuPNjX&#xA;5j3LXHnDUHZeDckQpWtOEYWh+7I4BUQnKfUxpep+Q/jlzW91/MTnbflj5WRwVZNJVHB7F4YEofpO&#xA;VS5hugfSV/8Azj19XtPK2t6jcOsMAvCJZnIVVWGJWJZj2HqZa1Bb5V1SLzP+ap12yjb9C6ZE9taz&#xA;uKB5JeQqAdxUSH3pStK5jCoGu8tu8t+4M4/M1CfJt44NDG0LV77yqu3/AAWXy5Ix80t/LyK+vtP0&#xA;qeaH09O06KcW7swJmuJJCpcKOgReS79ziGU9mQedfLEXmby5daQ7+k8oDQTUrwlQ8lJ9ux9sJawa&#xA;LAdI8/8AmbyWLfQvPOmyi0twILXWIR6imNTxTkR8L0Udjyp1WuAFmYg8nmn5rTWd151n1GxnjubS&#xA;9VXjmiPJWooPXxAIBHY4AebKL6M8vXn6c/Leznch3u9NCTUOxf0uEnT/ACgcWs7F8iSdB7EHCG4r&#xA;T1X/AFhhQ9Ds/MFjF+U8mmzxxy38t+62hYKXihVI5JXU0qKkcf8AZZWWQG9sMsor2V2aFigb7cnT&#xA;3xkQOapiulI1DcSvMR2JNP6/jlXidyae3fkfDFFoF+sahR9a7f8AGNctxGw05Ob1C1+wfnky1vKP&#xA;zjC/pfSCFUMTLycD4j8aUBPgO2Asos+1O9REmtgKuIebnsoZuC1/1vip/qnIZzUSyxj1BA6RNHB6&#xA;0r7miqijqxJOw+7MTTyEbJbsougmtrDKGeef+9kAHAdFUdBmZjieZ5lokRyCYXXVT7ZMMFDJKmOm&#xA;H9048Gr94xQVEqUS6bty4D/gsUoTFURF8SJT9ht/pyJVWl/u2+RwBWEeePy10LzQsM9wz2erwf3F&#xA;/BQSADdVcftAHcdx2IyS0858zeV/zK0p44oPMQ1No4R6ZmjVZSlTReUglqaju+UZDG6LbASrZgHl&#xA;zWL/AEDzxBqOpo0dzDc+pfK68W4zVEp4qB1jkYin0ZbtWzVvaTeZrmO68w39zGwaOe5mkRh0IZiQ&#xA;fxxxCohEzulydW+j+OTQ9y/OF2j8laREw4t9Ttoip8V4Ej/hcoI9QbP4SkX5W+VNc806E+l3FwbL&#xA;ylDdtPdCEcZbudlX93y3+FAqk7fefs3MA9YutO0vQIbe20+BbWytY1KogNB8RqzHqT3YnMHU/WKc&#xA;vD9Kl5xuxe+StXST7cMsaMBT7Jmjkip/zzdcy+K420gUUb+Xgp5O08dgJQPomfJROzGfNlvrWH/L&#xA;K3/I3/m3JMWrpLCWExXlsLmGUUaNiOJXuGBDA4Ar5f8Azd8v6Vpvmy//AETaizs0aKlshqqGSFGJ&#xA;XwBYnbpkb3b48nrX5B61Z3nkQaaHDXOmyyrNATuEmdpVan8rcmHzBxa5jd8230PoSzw15ei5TlSl&#xA;eLUrTCG0oeU0p8/1YQgsk8p+X5vMGtWGkRHj9afjJIP2YkJeVhsdwg298h1Zk0Gc+e9F0jT/ADLP&#xA;YabAbaytIoIooeXLpCpJLUBJYmpPjmLmnUlxiwkQt4F34j6d/wBeU8RZ09a/JS7tG0nUo3gLhLhS&#xA;rBuH2kp0of5czdOKG7j5ub0uNoWFYozGvcFuW/jWgy2TU8q/N+S3fVtPRY+LRxMXJPKpL0qNtvs5&#xA;VlPJnBNpJ5tUe61L0vQ026uE+pKxYySQ26UQsGC8U9QtIO5qOgHxQ1M/Tszwx3ZB5chshG888Jlk&#xA;5cUPPiAKCu1D45HSwFWnPI8k79aw/wCWVv8Akb/zbmY0L3e2UAyRGQH7ID8afga4Aqz1rD/llb/k&#xA;b/zbhVE2Ulu3MRRGOlK1blX8Bihq7mtkIjkiMgPxUDcdz9BxVD+tYf8ALK3/ACN/5txS2k9qTxih&#xA;aNm/aL8vwoMBVVqBuRUDqOlciqiZ7AmptmJ/4y/825NXnvns3E2tqLUGGFYUWhau/Jid6A98xsxj&#xA;e7kYgaSD82vKthqHkfT9ft4PT1TSoYUu5weRmgIEb12H2GPMb7CuXRNxFNExu8AudrincVB+jb+G&#xA;SHJgea1erfR+rCr1389ddtZhoelWg6WUNxPRuY+IEJQ0/a60+WQre/JkTtT1L8obS107yJY2k0Be&#xA;ZDI0pElPjZuTDYHoTTHHKxaSKTLzN6DTwtFGY1KlSC3KtD8h45iasbhyMHIsO812c+meWr24s4mm&#xA;sNQigjn5yVNvNBOODKKf3bJ8HGuxpvTbLsW8LYkeqmU/ljd2b+SrD1IGeRTMHYPxFfXcjah7EZfH&#xA;k1ZBu9J+r33/AC1/8k1ybUg7OO4M8yRzemQfibiDWh8D0yMebIvBvzVsIbn8wNStrsCYStbJI1OJ&#xA;IMEXhmPkJ4m6B2YZF+nfyj/MYrKWlton4yFBRbm0ZuoDbchSo8GHhlrIjiDAdUmSe7u5kNUlld1J&#xA;FDRmJG2EJPJBTdvpyQYl7D/zjQjSfmBNSTg66fN6TUDUJkjJ2PtXBHmjLyTP86JpoPzAvUk/eN6c&#xA;B9QjjyHpL2H3ZiZ4XJniPpYK94zKV4gVFK5UINlvbP8AnHWO4fSNY9Kb06XEVRxDV+A+OZuDk42b&#xA;m9An1GKW5nrKHigcQfWTRVaXlxZF8eLnj/rbdRkpFgA8w/OtZl13Rqt6gktBUUA4J6hp0+ZyGQDa&#xA;2UHoHnqKSKGxR5Q61cIoUIAAFG1Mp1nINmn6pv5XsbqPRLcpP6YkBkK8AftE03Ptl2njUA15jcim&#xA;v1e+/wCWv/kmuXtSCsY52mlEcvpsPtNxBrv4HIRZFG/V77/lr/5Jrk2KlcRXCKDLN6orQDiFp92A&#xA;pdbx3LofTn9NQaceAb8TiFVfq99/y1/8k1woUrqG7W3cvc81A3Xgor9OA8khKgaGuVMk6EF6RX63&#xA;1/4rXLmDyb8xrp4POAtp5A4kto3WQgLvVtvuGYmox9XKwy2pPPNKk/kxqTm5Bt20qQBOK05FCAOX&#xA;+vl8NoBpyfUXxxIayrX2r9+SDWuXv8/4YpZh5fivvMmvvquovz+rrGC1KD90gjhQeyKg+7KM06FN&#xA;mMb2+qPyxsbmPyXY+nc8UdpmC8AafvnHUn2y3DvEIym5Knnq1uBZW08svqhJCg+ELTmte3+pmPrB&#xA;sC2ac7li/mQyT/lTq8ZlpFFLCpi4jobiJgeXzOOnl+7ZZNppv+TkNyfI9uIp/TjWaYKnAN+3Xqfn&#xA;mTj3DTkO70HLGtLtPP8AplwPn/xLIR5pLwf81GKfmNqTDqrWxHzFvFmNl+puhyZb+c3lW08zafdW&#xA;0aj9LaepurWX4R9tuAhJNP73ieP+UMtlzRjNPlWVSodT1FQckG0oeXqPlXJBiXp//OPl89r+ZelK&#xA;PsXKywSfJreRh/w6jIjms/pLM/z0slPnx5GJHqWsLChHQVX/AI1zF1EiJMsI9Lzz6in8xynxGzhe&#xA;ofk95msvLem6unB7vUr2WBNP0+IVlmkCuAAOy1YVOZGDKAC05YWz7QfKsmnWtn+k7i4utQgijaSO&#xA;eXnFFOUrJ6aIFTZmYKxqad8uprMmGfnY5XXNK5jjxslpUjcCRshl5hMHoPn4SvFZSNGUVGkXrXdg&#xA;p/41yvWjYM9P1ZFps0q6daqlueAhjC79uIp2zLx/SPc0S5lE/WLj/fB+/wDsyTFAWMkiTylULE9R&#xA;4b5CPNkUb9Zuf98H8f6ZNCncSzOlHiKAGtcBVbbTSJyCJzrvt2xCq31m5/3wfx/phVSuZ52t3Uwl&#xA;QRufDAeShJp5WiiaQI0nGhKLu1K7kDvQb075WyVND80wXt5LYQSJdtGnrIyMOaoW4ski0qrIelR0&#xA;p3BywFBi8z/NkSP5wWR04cbWMAVrX4nyvIW7HyRP5gX8sX5BcFHFZltofUDdf9KUsP8AhSDhv0tU&#xA;vqfK0h/e/KmTDBUTv8/4YEvY7LRDoXl3Q1jSs+o2Yv7htyD60riOm+37tFrmLlAtycQFPePypuJp&#xA;PJNnyWvF5gKUFB6rH+OZGH6WnKPUmXnUBtBkLChV0K1p1rT9RyvVfQywfU808ySv/gXVYt+Pr2re&#xA;27N1+7MbTnYt+UbhmP5Mf8oNB/xnm/4lmdj5OLk5s5yxglun/wC9s/0/8SyEebIvAfzPuPV8/arJ&#xA;xpxkjSla/wB3EiV+njmNk+otsOT1DTdNvLvVrnX9Tjktp7lw1rpzkfuYlTjGZAB/ecWYkV+Hke+W&#xA;VvbDyfKPnSGKHzPrEUShY0u7lUUbAKsrKAB8hkot55MekP2f9UZMMSzL8qdQax8+eX7gdBfW6P8A&#xA;6kkghbp/kuciebL+EvXfz4Tj5zgav95YxNTw/eSr/wAa5iar6vguD6XnOYzc9g/5x/srJjq168Kt&#xA;dwmKOKYirIrhywU9q0FczNIBuXHznk9IvW5XUh9/1ZkS5tIeO/8AOQB/52PSx4WCin/PV8Zpg9e8&#xA;7RrPoRlXcRSJIG7UPwf8bZXqxcGWA+pMtBuBLo1k/U+iik+6jif1ZZhNwDDIKkUfyHgfuy1glumm&#xA;l1N7g/ryEebIplUf5jJsVO6FYG+/7jgKoWyNJqeIOAJKPySFOccoJB4qR+GAqx/KWbtU0rUZhZax&#xA;pMoj1KyjeP0XAMdxC5UtE1em6AqQf6iZutuaxIujyedebdQTV9W+szWpgmSNYpYZBUq6E8hvv18c&#xA;wsuQk9zl44UGP/m7d30X5Q6TbMFjtpNRIg4E8mSOOcnnvT+8O3yzIxEmItx8tcT53l/vDl4aSrwb&#xA;y/7PInkkPfb26vp9H8tLeW31ZoNFsYoTWolhEfKOUfNWoR4g/LMPMTe7fj5PWvymkZvKfE9EuJFX&#xA;5UVv45k6f6WvJzVfzAuysFraD9tmlb/Yig/4kcp1ktgG3TjmWFec7d4Py0M3Q3d/HX3RFYAf8Epw&#xA;YY1jvvKZm5sp/JgqfI8IBqRPMD7HlXMrHyaMnNnWWMEt0/8A3tn+n/iWQjzZF88/mBIsvnjWCAQP&#xA;rLIf9jRT+rMXJ9Rbo8nvupCl4/vT9QzIlzaQ+MvP6BPOOuoNwt9eAV67TyYA5PQe5i2WME20C+ew&#xA;1GzvUFXtpVmUdKmNuYG4PdfDK5M4vc/z71K1ufMunXNjNHPG9iELowcApPLVTQ7EE0IynURBNscN&#xA;gPMDczn9r9WU8Ibbe4/843u7WevciTSS2pX/AFZMytOObRm6PR7n4rmX3c0+/JHm1h5N+fqwHzTY&#xA;CXYfUV47n/f0lcGW72ZY+T1vVVL+T2D/AGvq0ZPzAU4c/wDdlGL6g7yXN6mgQr/vp3T/AIbl/wAb&#xA;ZHSm4Jzj1J7mQ1JZpn+9c3yP68rjzZFM8sYrZByjYeIIxVL7Y0nQ+9Pv2yASmWTQ0RUEeOKscIoa&#xA;ZQzTrTDW0UeBI/GuWx5MS8l/Mu8W3813C8OTNHE3gPsAfwzEzY7k5WKXpeefnTqkkvkvyfaj4UYX&#xA;8zrsan6wETtXYBsugKADTkPqLxST7bfM5aGlXtD8Sn/KH8MEmQe+a8buTRfKPAkj/D9kK1A6GQD8&#xA;Mxs1WL7nIw1T1X8nC/8AhJ0f7SXcgJ8aqjb/AH5dgNxa83NT8/S8tWhj7JCD9LM39mYesPq+Dfpx&#xA;6Ur/ADejNn+WunxLsy3FuGHiTFIW/HMsRqADVE3Mpj+Rp5eRw/d7qYkeFAo/hlkBQYZeb0AW953a&#xA;P7j/AFybVaW6ekrX8yKVDDlyJBpswyEebInZ86+dWr501jxF9Mp+YkIP6sxZ/UW+PJ9C6rG6XdGI&#xA;JKg7bZkz5tMXxn+Y8MsPnnX45Bxb67cuBUH4ZZGkU7eKuMjFyejEssYIm1biFb+Vv1b5CTOL2D8y&#xA;bSzC+XNUhT07rWNHtbu/CiiNOV4O4HixXf7+pOUZRyRA8x5sMytm9z/5xp+ODzDGPtI9oxr0owmA&#xA;/wCI5kYOrRm6PSQOd1Tryf8AWcl1YPJf+chYJD5p04KKkWIJp7zSf0w5CAU4+T19o3l8kLJXny09&#xA;HLE1J/chq74cu8D7kQPqHvQP5eM0lhdQg/3coen+utP+NMx9EfSQ26nmGWeg/tmY41pVpaFryYDq&#xA;Af8AiWQjzZFNfQf2ybG3eg/titpOQY5iO6N+o5Bkm/oSeIybG3ehL4jFbY5OpWeRT1VmH3HKS2BN&#xA;NHR3tm4kbOevyGWQ5MZF47+bKMvnGUE7+jF0/wBXKcnNvxcnjv5qXk0s2iWzN+6t7Fgi79Wu52J+&#xA;Z5fhkoNeTm88f7bfM5Y1KsHQ/PAUh9A6vFLJoPlJ/UKK2hWnEL4cpKZiZjRHucjEdnqf5Mwy/wCF&#xA;bgBgeN7IKnqf3cZ/jl+nNxa8x3QvmlHuPNT22xYtFEKeLKv8WzC1G+SnJxbQtb+e6NF5PtORUKb+&#xA;JRTb/dMx/hmwyjZxsR3V/wAjopH8luykcTeS0r/qpji5Iynd6P6Z/nOWtVpNpQLahNuQeLb/AOyG&#xA;Vx5s5cnzL5sm9bz/AKs4IK/pOcKR0IE5AP05SeblR5PpjXEK3SGtaoOvzOWz5uLF8Z/mcSfP+v13&#xA;/wBLk/XkQ5I5MNyxirwfYPzyJZRevef51bSvJKdW/wAPWjE9t3kH61ynN09yMfX3sQylsexf8423&#xA;PDWNbt+RAe1jmIFd/Scj5f7sy/B1ac/IPW7QF7uEeLrX78mObUXlv59qV822QqT/AKAnX/jNLkM/&#xA;Nni5PWNIjefyDZVY1l0qKoG32rYZaRcPg1g+r4pH+XMn+m3kHIjnGr0H+Q1P+N8w9EdyHJ1PIM89&#xA;M/znNi4dpNpA5X8tCR8Lbj/WGVx5s5ck59M/znLGFu9M/wA5xW0nvE4XMg671r8xXIFmE1hUvEjc&#xA;zuoP4ZJha/0z/OcK2xvUE43sw6/FWvz3ymXNsHJG6E1Wli5EGgYU+45KCJPHvzWk5edbtK1MUcKE&#xA;/ONW/wCNsqyc2/F9Lw/8xbgTaxaxg19C1WMjwJlkf/jfJQ5NeTmww7knLGpVg6HAUh7zDOJvKPlN&#xA;vUEhTSljbcHjwuZ1Cn5CmYec7t+Lk9b/ACWk9Ty/exAkcLstyB2PONBT6OOX6b6WGbmpxp9Z8+lW&#xA;J+G7bfv+6qR/xDMQb5vi5HLH8EP/AM5AxBvJ9khk+I6hGwU7kgQTAmn05sMhoOPhO6K/IlD/AIG4&#xA;ciAl3Mop7hW/jjjNhGY7onyx50vTdJZ6lL6iTELHO1AVY9AxHY+OUYsxuizniHMJomr2ulzNcXTF&#xA;Y3Jj5AFtya9v9XLOMR5sOG3y9ql202s3d4rVaS4kmVqDqzlq06ZWTu5QD6v1wP6kRbuCBT2OXzcO&#xA;L40/NOIxfmFryk1JumfbwcBh+vIByY8mFZYxV4Psn55EsovRvMd+13a+WY2XiLPRLeAEH7VJJHr/&#xA;AMPmNOVpiKSZ24oT4ZAMnpX5C3pt/OF5GCP9I06aOh/142FPf4ctxc2vKNnu+ngm9hA68qivtvl0&#xA;ebQeTx387dWhu/OMS1AENokSt2akslT9+U5DxHZtgKDJ/LGpXMOiWbWsxVZLVEcD7J/dhTUHbMfi&#xA;IOzZQKefl9FIdZndTThAwPvV1yWjHqPuXUH0vQv3/tmycLZJdFLm8cr1KH/iQyqHNnJOv3/tlrDZ&#xA;37/2xXZLNSVhcAt1ZR/TISZBVhvVgsg8jAKpKjxJ60GJkAN1qy1BrdvLIEqUJ2BcAD7wTkI5olJg&#xA;xTzVeSnVpYlYqsfHlxNKtxGY2eZ4qb8URSXDVr5YhGkrIRUGRSQxB7EjK/FlVMuAPMvM95LLr88k&#xA;rmRnfizMSxPFQo3Pyy6G4TyeS+dxTzFN/qx/8RGXR5NGTmxbLWpWg6N9H8ciUh6job8vK2iqD9iC&#xA;ao9zdznMWf1FzMP0vbvyEmc2WsQrT4JIHPj8auP+NMuwdWrUdEzuFktPPy/zPcoQf+MwH/NeYh2z&#xA;fFsG+P4JN/zkRcyRaRo6HjV7iVgP9VAP+NszsgtpwDcpV+XfmPULLyLHBaP6Ukt7O0kgArxVY6AV&#xA;8a5TOZiKDYYAyVcx2bJvN80cOkGR2VeLchyNOinMjJyacfN844HIe8yfnf5Pu15X95FBJHsscSyy&#xA;VDdakLTb55PxCebjeHXJ84/mJqtlq3nbVdRsX9S0uJg0TkFagIq9DQ9Rkg2x5MQyxirW/Rvo/jkS&#xA;yiza6vIbqLTPSPIQWEMLncfEteQ38CcxZfpZoKd6Hj2I/jjEILMvygufT8/aataCaOeNt6A0hdgD&#xA;9K5KPNjPk+ipLlraJ50NHRWKHwalB+OWSNC2kCy+f/zLk5+ZOO/7uCNd/cs23/BZXi5NsubPPJcv&#xA;qeV9PataRletfsOV/hlGT6mQ5Mk0jUJ9KuTNbEfFQSqdwy1rQ/2YMcjA2FmOIbvTnkURGQniKVqd&#xA;qZtLcJI9EkVLw8iByQqKmm9Qcrgd2cuSemWJXCF1DnopIr92WWGFLsKEt1anOPxoajvkZM4pPe14&#xA;Jv8ACCdvc/7WY2bo2RSu4v4IH4NUt3C70zGJbAEpvJRNcvICWDUNT16ZEm2wBBXV7ZWiepd3EdvG&#xA;f25XVBt7sRjSvNNbmWbUJZUYMrySMrA1FC1QQcy8Y2QXm3ngg+YHYftRxn/hcsjyaMnNiuWtSrB0&#xA;b6P45EpD0ny1cq/l2yUbm3SRGA8fWeT9T5jTHqczD9L2v8gZ6X2sQV2kihenb4Gcf8b5bg6tepGw&#xA;ZF50dYPNcEw24rDIT7qx/pmLqdsgLPBvBiP/ADkffRSXOh2aSKzwrcySoGBIL+kF5Dt9k5mzLXpx&#xA;zSP8v0LeUXcDaPUJQ7f68MJUf8Icx8o2BbTzeRX3nfzVek+rqUyKf2YSIR/yT45cIANPEUCNXvJJ&#xA;RJdSvcsoAVpmZ6AdOpxMUiSNj1hzuyAj/JNP65CmfGlOqXciNziUBWPWnT6BkohigeXJuX82/wB+&#xA;SZoPJsFa36N9H8ciWUWR6dRbZGJ249fcnMefNkF8jBmqOnQYAFRtumqWC2mpQvJac2f6pdIxRqr8&#xA;LcWU1GASFoIZPZ+f/wAwIovRi1dbyJhvHN6cjH5mRRJ+OEz23Y8CUazq+oanqf1q/VI7l1CyLHUL&#xA;8IAXYlvDxyzGBw7IPNmvk3z1oGn6VDpeoTPbzRF6OyExkO5YbryPfuMpyQJNsgWf6Tquk3jxz288&#xA;d5bowLrC6tUDfiaVpXKhsd2R35MmvfNP10kvGYkSnCINyqfGtFy2ebiao4qQqa0jtxkj4KT9qtaf&#xA;PYYJZbTwUji7OeZYsTvyJrXBaGQ2Or2y2kX1iWkv2T1J2OxNMy4ZRW7TKBvZA3VyJL25cn4I6AH2&#xA;WtcAlciyrYMS1LzBKvOeWdba1j3q5VUUeLM2YsshkW8QAYNrH5o6FC7/AFPnqU5JqYvhir/xkb/j&#xA;UHB4Z6rxBh2p/mH5qvqrBJHp8J2pCOT093av/C0yYiAjiLGZo5Lqb1ryeW4kY/FI7FmP0tU5K0Jy&#xA;dXhbiCjAKAAAB0H05MSATbBPM8ol1y4dTVT6dPojUZbE2GmfNIcsa1WD9r6MiUhONK8yXOlRmFY1&#xA;lgkYs6HY1IAqD9HhkDC22GUxe0/lf5hvrK6lms29CW5tAG5AFlHJTShqK5QZGPJyJxEhuzG8v7u9&#xA;l9a7laaWnHm3Wg7fjmJmkSd2eMADZ5p5+1CC81WIxTrccI/3jqwejlzUEgnfxzNx3W7AJJB581ny&#xA;7p81hYLG0V64kcygtxaMUBUAgVo2WcNsJmmOaF5Y1bW2kFjGCkPH1JHPFRyNKV8ab/LBkzRhzawL&#xA;ZF518iWmj6XbXlk7NwIiuuZ+0zVIkHhvtT+3KMGpMpEFlKNMNSMAgkmnemZRLBXuIbWW0kRTV+JK&#xA;8jvUbjAFBSWBqrTuv6skW2KHIoSMkxVbf9r6MiWUWT2c1nDpkEs4oDVR1P7RHTKCDa7sk8vaEmsS&#xA;yiHiI44ywkABBY7IK+5yjJk4VDPNU0G3u9Hi05AFWExiJqD4QpCk/wDAk5iQyVK2RCQ6n5GZ76NL&#xA;AKlo6VcyGoRloPmeWXQz7b80GLFNS0m6sb17eeiyJSlNxTqCPbMzHmBGzAhbG7qpV0SQeDio+jwy&#xA;M6KQV8Kwesrwxy21xUem9u55ciaCnQ/dkNwnZ6HpjeerARBr6G/hKkvFdKeaECoX1F+JifE1plBz&#xA;RPRNFkMWqXk9qrTRC3kkRecIbnwY7kcqCvhlM8nOuTJPtA1tnaOxnHReMUnckdj9HTLMWToWEop5&#xA;c3VtawPcXMqQW8Q5SSyMERR4ljQDMhg8s82/nxYW0c9l5cgF5K4MbX04KwgHY8E+F3+ZoPnl8IVd&#xA;sSXkWo+ZdV1af1dUuHuTWqKT8CV/ljFFH0DJCIHJSbRGk2t3qNwYbBfVlCl2QbfCvjX7shOQA3SE&#xA;9uPLOpwadbXjJVrggNAoPNC32Afn+GUDKCSGdJdNa3ENwbaWNlnU8TGRvXJggi0KSvB+lxpUkyR3&#xA;ZZowCQU9QdELCoqx2GP8PF0Re9MV15GTVp0YUYcKg9vgGZGPk1z5pLlzWqwd8iUhFabbpdatbwP/&#xA;AHfL46+C/Ew/DATQZQFyD1bQ7jUrczX+nxCRYFpMzqeFO47dvDpmJOUeRc0yBDHvNfmrzRqTMksn&#xA;oWBqFgtyQjD/ACmG7/fT2yzGIfFokSqy6B5gtNAs9Qit1dbgqotgGaRA5AjJ3351+jbAM0TIhlZA&#xA;Y/rX6QjuPql/b/V7mE7oag7/AEkEHxGXQIIsMJEnmy+L8xdXgXjFp9rGtalUVwK/Q2J7Oxn+ItrU&#xA;v5karKoWawtZFBrxdHIr9LYR2bDoShcvniUgEaZZUP8AxWf65H8hH+dJlQQuq+dbk2Fwi6dZqHid&#xA;S6xkMtVIqDXEaGI3uSCHm0TcXB7HY5YWAK1upwoVLf8Aa+jIllFMA19erBaoeS26lYl6Kqs5dmP0&#xA;t/DI0Buklmmh+Z9Q8vaYlnZ2duY1q0kp5l3Y9WYhhkTp8eWW5NoBRn/K0dZ/5Zbb7n/5qyf8lw7y&#xA;m1WH8zdXkrW1twR7P/zVkZdmQHUsg2/n69duT2NozHqSjE/8SwfkI95Sd1v+O7r/AKt9p/wB/rj+&#xA;Qj3laabz/dRjn9QtAR0ojVr9+EdnxPUoK3/laOs/8stt9z/81ZL+S4d5Y27/AJWjrP8Ayy233P8A&#xA;81Y/yXDvK25fzT1tSCttbgjoQJAf+JY/yXDvK21cfmhrNwgS4tLaZAahZA7CvyLHD/JsP50ltD/8&#xA;rAuf+rXY/wDIs/8ANWP8nR/nSV3/ACsC5/6tdj/yLP8AzVj/ACdH+dJVWH8x9SiJ9DT7SMt14Iwr&#xA;9zYD2bDqZLaJj/MjWz9q0tlX5PX/AIlkD2dj7yyAbb8wdQZxI1lalx0cqxIp78sH8nx7ymmBeY4h&#xA;JfS6jDCsEc7c5ooq8Uc9WUEmgJy/wuEVzcfJCtwl99fXV/dNdXb+rO4RXkNKngoQE070XrkIxAFB&#xA;rJS3LGCpCacj4CuApCYeWdSfTddtL1USRo2I4SCqn1FKbj/ZZGcBIUWWP6g9Fk/M+9th6a2luO/B&#xA;FYAV/wBlmPLRQHUuUZAIcfmWeJJ061B7j0zv/wANj+Uh3yY8YR8H5kaxLGHFlCAfsij9P+CwjQQP&#xA;UsxuhpfzA1KWXnJpto7jZXdGJoDtuWy4dnwH8UkJKbQdmP05kcbZwrDav2IOHjRwoq0tpjERxqAd&#xA;umVzmLZxBQmvRtFpVw7JTYCtP5mA/jkeJjMbMMCVjZvDpgtopZhQqROErX6MBCQWTaDDwsRKR8cx&#xA;LH5A0AyjId0FMsgqAltAHNDQdQM2eLLxRZgW1HCUcMG+e3bJmVsgEaLbkAVcEHKTNnSyWMRj7QLf&#xA;yjJA2goR4pHapI9hlokAwIW/VZDsCCfDfDxheFeun3J7D6dsj4oXgK8aXcd2UfSf6YPGCeArhpT9&#xA;5B9AweME8C8aV4tXB4y8C5dNUeH01ODxU8CoLMj9oD5DI+Inhb+pn+b8MeNeF31Qfzfhg414Wms4&#xA;WUqzVUihBp0OPGV4WI30Is76S3JqimqN/kncVyshwpjhNIDC1uxVWWKaJxJT+7YGvv1wWyAITORy&#xA;7s56sST9OQbCVuKGU6YzXGnCcsAUqrfMf1wiW9OZjNxtYLQd2Jy/jXhat9QtZzxR/j/lbY5WCiMw&#xA;VC71aGBiiD1JB1oaAfTgMmMsgCrpfmINMlvLEFEjUDg/tHYVByqQvdMM29FV84ycNFZf9+SIv62/&#xA;41wQ5tmX6WGBaR8fb8cm0UhsmwbAJIA6nFWZaaVNhBx6BAv0rsfxGY0uaSicihoxLJ1NCMycEqts&#xA;xhr6oP5vwy/jbOFb6JAoJDTwHT9eQOeLAyAXxafJKaIw26k7Uw+OGURfJEHS44l5SyA/OoGQOdkY&#xA;gc1gaJdlG3sKZWczDxAiktWdQysCp6HfD4gbQLXfUpP5hj4gTwrzps4j9QkBCaAnv8sHjC6XhWfU&#xA;n/mGHxF4W/qTfzD7sfEXhUZUSPbnybwA/XkoklBCKttKdrOS8uGIjVCYo12LGmxJ60yqef1CI5op&#xA;KHiQCskh+k5lcbE0ObaW8RUHeh6Vx4yoAYv5kjRb/wCDsqhh75Amy4mcepAw2byKGJ4g9O5yJLWI&#xA;qsVoUlDGjKP14kpEUSyhlKnociybxV2Kp5oUj/VZI/2OfL6aAZKIcnCdle41K0gYozEuOqqK0yRL&#xA;KWQBjoJUgg0I3BGVuK1iqvYKTewU3o6n6AanGrZQ5hN/N1ws2nQoFIPrqT4U4NiIU5OU2GM98WtP&#xA;LLQ7JLdfWT1JWFXYk7V7ChyszNtamvl+KO+imjNYAavG29NjSniK4+JsqbgACgFB4DK1bxVwJHTJ&#xA;CRHJIkQ2WJGE5CQkzJayDFUglMUgcduo8cWUZUballeVuTmp7DsMUSkTzWYoTzTLNnjEVaMFLfTX&#xA;p+OCUuEOZAUEDf3clpeQkgmMV9WPxFdx88uiLDDJMghMNe1WCH0VT4yUDoo2FG6E/dlGngd0yyAI&#xA;e1eWSBZJQAz7gDsO2XFnAkjdTvLgqDHGaORufDJwje6JFAWUiz3MUD/CzuqH6TTJylQJaozvZlGv&#xA;zx2+kyDpy4oij51p9wzXacXO2ycqDDIw88w5b+PyzZOMPUUzS0mYfZ4j32wGYcnhYVrZ56jdDqVY&#xA;pt4oOP8ADG3Ay/UWoGDQoR4U+7AVC/ArsVdirsVbqR36bj54paJJNT1xV9n/APIBP+/V/wC5dmT6&#xA;fJo9Xm1/yAH/AL9T/uXY+nyX1ea+H/lQ/Mej/hbn24fo6v4YfSkcfmvn/wCVG8R6/wDhjjX4ef6P&#xA;pWnviaT6/NS/5AF/36n/AHLsHp8l9fmv/wCQE/8Afr/9y/B6PJj6vNv/AJAV/wB+v/3L8fR5L6vN&#xA;cv8Ayo79n/DP0fo/H0eSfX5t/wDIEP8Av2f+nDH0eS+vzd/yBD/v2f8Apwx9Hkvr83f8gQ/79n/p&#xA;wx9Hkvr82/8AkCX/AH7X/Thg9Hkvr83f8gT/AO/a/wCnDH0eS+vzd/yBP/v2v+nDH0eS+vzbH/Kl&#xA;Kin+Gq9qfUMfR5L6/NEJ/wAqkr8H6Ar7fUv4Yy8PrX2Mv3n9L7VGf/lTPIfWP8Oct6ep9Rr79cI4&#xA;OlIPidbWS/8AKk+Q9X/DXKgpy+oVpTbr7Yjg6Ug8fmr/APIIP+/f/wCnLH0eTL95/S+1Tb/lTHI8&#xA;v8Ocu9fqNckKR+881If8qP8AUFP8M+pXb/jn1r/XE8KPX5q1z/ypviPrX+HeFfh9X6jSvtyyEeDp&#xA;ST4nW1kH/KlOR9D/AA1y78PqFfwyR4fJRx9LVv8AkEP/AH7/AP05YPR5J/ef0vtQUn/Kh/Ub1P8A&#xA;C3qVPPl+jq1rvWvfH0+TE8fmon/oXzv/AIS/7luH0+SPV5u/6x7/AO/S/wC5bj6fJHqd/wBY+f8A&#xA;fpf9y3H0+S+pcv8A0L/+z/hP3p+jcfT5J9Xm3/yAH/v1P+5dj6fJfV5u/wCQA/8Afqf9y7H0+S+r&#xA;zd/yAH/v1P8AuXY+nyX1eb//2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:b4f5d495-7a2a-5040-8a60-303b8b8a7fff</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:b4f5d495-7a2a-5040-8a60-303b8b8a7fff</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:e259474f-1d43-024e-b40f-61b193579be2</stRef:instanceID>
            <stRef:documentID>xmp.did:e259474f-1d43-024e-b40f-61b193579be2</stRef:documentID>
            <stRef:originalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3d5eafee-8f4a-b44f-a08f-9c41cd46573c</stEvt:instanceID>
                  <stEvt:when>2016-07-30T10:36:42+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:e259474f-1d43-024e-b40f-61b193579be2</stEvt:instanceID>
                  <stEvt:when>2016-07-30T11:20:45+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:b4f5d495-7a2a-5040-8a60-303b8b8a7fff</stEvt:instanceID>
                  <stEvt:when>2016-07-31T22:46:55+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>900.000000</stDim:w>
            <stDim:h>480.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -480 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 480 li
900 480 li
900 0 li
cp
clp
0 0 mo
0 384.667 li
900 384.667 li
900 0 li
0 0 li
false sop
/0 
[/DeviceRGB] /CSA add_res
.972549 .945098 .905882 rgb
f
0 378.391 mo
900 378.391 li
900 272.926 li
0 272.926 li
0 378.391 li
.992157 .984314 .945098 rgb
f
0 261.788 mo
900 261.788 li
900 237.97 li
0 237.97 li
0 261.788 li
f
0 227.671 mo
900 227.671 li
900 215.762 li
0 215.762 li
0 227.671 li
f
900 64.4153 mo
878.657 64.4153 li
878.489 56.7399 878.31 49.0643 878.132 41.3878 cv
878.128 41.2086 878.123 41.0289 878.119 40.8497 cv
878.119 40.8337 878.119 40.8176 878.118 40.8016 cv
878.04 37.4468 877.963 34.0925 877.884 30.7378 cv
877.837 28.7081 876.784 24.387 878.247 22.8183 cv
878.371 22.6854 878.513 22.5722 878.676 22.4819 cv
880.474 21.481 882.273 20.4803 884.071 19.4794 cv
885.185 18.8599 886.298 18.2402 887.411 17.6207 cv
888.064 15.4544 888.717 13.2881 889.37 11.122 cv
889.787 9.73596 890.205 8.35016 890.622 6.9642 cv
890.665 6.82122 890.706 6.67234 890.744 6.51839 cv
891.019 5.41413 891.194 4.05565 891.551 2.84736 cv
891.793 2.02675 892.119 1.27541 892.617 .720302 cv
892.898 .406902 893.447 .185201 894.064 0 cv
894.064 0 li
894.064 0 li
890.019 0 li
889.597 1.1257 889.178 2.25365 888.753 3.37919 cv
888.75 3.38757 888.746 3.39604 888.743 3.40442 cv
888.738 3.41831 888.733 3.4323 888.727 3.44618 cv
888.721 3.4642 888.714 3.48194 888.707 3.49996 cv
888.707 3.50038 888.707 3.50111 888.706 3.50153 cv
888.341 4.46584 887.971 5.42783 887.59 6.38463 cv
887.588 6.39193 887.585 6.39892 887.582 6.40622 cv
887.575 6.42431 887.567 6.4427 887.56 6.46078 cv
887.553 6.47872 887.546 6.49647 887.539 6.5144 cv
887.536 6.52189 887.533 6.52944 887.53 6.53692 cv
887.029 7.79039 886.511 9.03433 885.961 10.2611 cv
885.7 10.8466 885.399 11.4306 885.116 12.0234 cv
884.871 12.5373 884.638 13.0579 884.456 13.5916 cv
884.318 13.995 884.208 14.406 884.143 14.8274 cv
883.558 15.122 882.973 15.4166 882.388 15.7113 cv
881.74 16.0378 881.092 16.3643 880.444 16.6909 cv
879.493 17.1697 878.542 17.6487 877.591 18.1275 cv
877.463 12.6162 877.344 7.10411 877.224 1.59178 cv
877.224 1.59181 877.224 1.59182 877.224 1.59184 cv
877.212 1.06112 877.201 .530728 877.189 0 cv
864.754 0 li
864.787 7.00782 864.835 14.0145 864.89 21.0219 cv
864.934 26.886 864.982 32.7487 865.029 38.6115 cv
865.029 38.6115 865.03 38.6115 865.031 38.6115 cv
865.031 38.6115 li
865.03 38.6115 865.029 38.6115 865.029 38.6115 cv
865.097 47.215 865.162 55.8169 865.202 64.4153 cv
857.215 64.4153 li
856.607 62.5957 856.096 60.7201 855.491 59.0361 cv
853.12 52.4338 850.771 45.8231 848.421 39.2126 cv
848.42 39.2127 li
848.149 38.4484 847.877 37.6844 847.606 36.9202 cv
848.108 38.9874 848.61 41.0549 849.112 43.1221 cv
850.805 50.0913 852.499 57.0608 854.192 64.0303 cv
851.973 63.3467 850.104 62.2376 848.452 60.8687 cv
848.393 60.82 848.335 60.7712 848.276 60.7218 cv
848.162 57.3832 846.352 53.1744 845.675 50.4781 cv
843.363 41.2584 841.05 32.0389 838.737 22.8194 cv
837.551 18.0922 836.365 13.3658 835.179 8.63873 cv
835.619 5.87239 835.91 2.94501 836.114 0 cv
836.114 0 li
836.114 0 li
833.012 0 li
833.012 0 li
816.836 0 li
818.556 5.75394 820.276 11.5083 821.996 17.2621 cv
820.822 18.5818 819.509 19.7679 818.115 20.9617 cv
818.115 20.962 818.114 20.9624 818.114 20.9626 cv
818.098 20.976 818.083 20.9893 818.067 21.0028 cv
817.281 21.6752 816.468 22.3507 815.641 23.0537 cv
815.641 23.0537 li
815.641 23.0537 li
810.177 27.7052 804.759 35.3948 798.749 39.1809 cv
798.746 39.1882 798.743 39.1953 798.74 39.2027 cv
798.74 39.2027 li
798.743 39.1953 798.746 39.1882 798.749 39.1809 cv
798.047 39.6243 797.338 40.0278 796.62 40.3529 cv
796.62 40.3529 li
796.62 40.3529 li
796.369 37.058 796.771 33.4986 797.201 30.0012 cv
797.389 28.4668 797.583 26.9445 797.73 25.4616 cv
797.73 25.4616 li
798.57 16.9851 799.393 8.4956 800.208 0 cv
800.208 0 li
800.208 0 li
795.655 0 li
774.185 0 li
768.478 0 li
761.617 35.1418 li
761.979 23.4292 762.352 11.716 762.733 0 cv
762.733 0 li
762.733 0 li
749.415 0 li
730.95 0 li
714.693 0 li
714.693 0 li
714.693 0 li
714.671 0 li
714.671 0 li
710.881 0 li
710.881 0 li
710.88 0 li
710.796 .706259 710.712 1.41127 710.628 2.11744 cv
710.454 0 li
701.044 0 li
702.149 18.9667 li
699.758 20.0308 697.12 20.7215 694.321 20.9979 cv
694.317 20.9714 694.312 20.944 694.308 20.9174 cv
694.742 18.0228 694.675 14.4545 696.241 11.9832 cv
696.305 11.8817 696.372 11.7822 696.442 11.6846 cv
697.879 9.67755 699.34 7.68157 700.705 5.62475 cv
700.705 5.62475 li
700.705 5.62475 li
700.705 5.62475 li
698.496 8.09275 695.434 10.912 694.209 13.9827 cv
693.956 14.616 693.707 15.2504 693.46 15.886 cv
692.573 10.5804 691.71 5.28515 690.869 0 cv
678.656 0 li
678.656 0 li
678.656 0 li
678.656 0 li
659.411 0 li
659.395 .462723 659.38 .924585 659.365 1.38731 cv
659.359 1.58727 659.352 1.78723 659.345 1.9872 cv
659.345 1.9872 li
659.033 11.4872 658.721 20.9868 658.409 30.4866 cv
658.409 30.4866 li
658.364 31.8607 658.319 33.235 658.274 34.6091 cv
649.452 33.2748 643.148 29.6454 636.925 23.401 cv
639.21 0 li
632.382 0 li
631.345 17.1457 li
627.092 11.9307 623.276 6.40177 619.371 1.12479 cv
619.528 0 li
586 0 li
586 59.6384 li
578.417 43.5795 li
573.737 0 li
566.696 0 li
571.583 45.5009 li
580.514 64.4153 li
521.185 64.4153 li
526.698 48.6948 li
531.833 0 li
526.214 0 li
521.376 44.9843 li
512.743 64.4153 li
511.078 64.4153 li
509.791 55.5144 li
505.479 0 li
486.903 0 li
492.212 64.4153 li
435.257 64.4153 li
430.967 0 li
421.127 0 li
424.001 64.4153 li
379.956 64.4153 li
408.002 36.3715 li
414.038 0 li
408.97 0 li
403.332 33.9702 li
377.969 59.3322 li
380.572 39.5549 383.175 19.7773 385.778 0 cv
367.847 0 li
366.498 7.66039 365.149 15.321 363.8 22.9814 cv
359.411 15.4249 li
359.216 10.2514 359.063 4.89296 358.971 0 cv
353.948 0 li
354.051 5.29175 354.236 10.9726 354.438 16.2382 cv
354.462 16.8598 li
362.455 30.6202 li
360.846 39.7522 359.238 48.8841 357.629 58.0162 cv
357.263 60.094 356.897 62.1717 356.532 64.2495 cv
356.487 64.3047 356.442 64.3604 356.397 64.4153 cv
348.595 64.4153 li
349.407 61.0718 350.22 57.7279 351.032 54.3845 cv
351.032 54.3845 351.032 54.3845 351.032 54.3845 cv
351.032 54.3845 li
351.032 54.3845 351.032 54.3845 351.032 54.3845 cv
351.608 52.0144 352.184 49.644 352.76 47.2737 cv
352.981 46.3627 353.202 45.4514 353.424 44.5404 cv
353.424 44.5404 li
352.225 47.9137 351.02 51.2854 349.818 54.6578 cv
349.82 54.6574 349.822 54.657 349.824 54.6565 cv
349.824 54.6565 li
349.822 54.657 349.82 54.6574 349.818 54.6578 cv
348.668 57.8882 347.52 61.1195 346.365 64.3484 cv
346.365 64.3484 li
346.365 64.3484 li
346.357 64.3707 346.349 64.3931 346.341 64.4153 cv
335.992 64.4153 li
336.042 42.9434 336.092 21.4718 336.142 0 cv
336.142 0 li
336.142 0 li
324.317 0 li
324.116 8.64047 323.916 17.2809 323.715 25.9214 cv
321.551 24.8316 319.387 23.7416 317.223 22.6515 cv
316.971 21.019 315.779 19.0809 315.169 17.5283 cv
314.162 14.9555 313.158 12.3825 312.154 9.80869 cv
312.154 0 li
289.73 0 li
280.922 0 li
278.764 2.3567 276.582 4.69514 274.348 6.99033 cv
270.606 10.8344 267.091 14.1648 263.583 17.0382 cv
263.475 11.4081 263.367 5.77606 263.259 .145998 cv
263.257 0 li
207.657 0 li
207.657 0 li
200.077 0 li
197.98 8.35485 195.883 16.7108 193.787 25.0661 cv
193.324 23.6679 192.861 22.2697 192.397 20.8716 cv
191.493 18.1481 188.845 15.4183 187.217 13.074 cv
186.24 11.6679 185.261 10.264 184.279 8.86132 cv
183.069 7.13256 181.856 5.40589 180.641 3.68086 cv
181.238 0 li
176.172 0 li
174.905 7.81181 li
173.939 0 li
154.395 0 li
154.395 0 li
149.217 0 li
149.217 0 li
132.971 0 li
127.879 0 li
126.374 0 li
108.162 0 li
111.811 48.9924 li
107.823 56.1538 li
107.097 44.5404 li
107.311 0 li
88.8454 0 li
88.8454 48.1286 li
86.9314 38.9075 85.0171 29.6861 83.1024 20.4652 cv
81.9189 14.7649 80.7366 9.06471 79.5534 3.36427 cv
79.521 2.2432 79.4855 1.1217 79.4488 0 cv
62.7548 0 li
62.7548 0 li
62.7548 0 li
62.7548 0 li
58.4285 0 li
58.4285 0 li
59.9548 7.35604 61.4818 14.712 63.0089 22.0679 cv
63.1324 32.7965 63.2559 43.5255 63.3794 54.254 cv
57.2938 51.1793 51.4103 46.356 45.6002 43.4607 cv
45.5992 43.4602 45.5988 43.46 45.5979 43.4596 cv
45.5837 43.4525 45.5703 43.4458 45.5561 43.4388 cv
45.5547 43.4381 45.5529 43.4372 45.5515 43.4365 cv
45.5382 43.4299 45.5242 43.4229 45.5109 43.4163 cv
45.5089 43.4154 45.5078 43.4148 45.5059 43.4139 cv
45.4909 43.4065 45.4758 43.399 45.4608 43.3916 cv
45.4608 43.3916 li
42.8248 42.0918 40.3113 40.9394 38.0747 39.5622 cv
34.78 0 li
25.9047 0 li
26.3606 8.17209 li
26.0668 6.15097 25.7293 4.16537 25.2982 2.2454 cv
25.1301 1.49693 24.9634 .748465 24.7953 0 cv
13.6026 0 li
13.6026 0 li
14.1692 2.98823 14.7453 5.9742 15.3338 8.95522 cv
17.2503 18.6639 18.4721 34.6448 25.2299 42.3949 cv
26.2076 43.516 27.2838 44.5465 28.443 45.5046 cv
29.4979 64.4153 li
0 64.4153 li
0 0 li
900 0 li
900 64.4153 li
850.797 64.4153 mo
848.292 64.4153 li
848.238 63.7821 848.186 63.1487 848.138 62.5167 cv
848.149 62.4647 848.16 62.412 848.17 62.3592 cv
848.977 63.1159 849.846 63.8081 850.797 64.4153 cv
827.736 64.4153 mo
794.913 64.4153 li
794.92 63.8471 li
794.92 63.8471 li
794.984 58.298 li
798.913 46.7067 808.81 40.8558 817.827 34.2525 cv
820.41 32.3605 822.92 30.4074 825.198 28.2388 cv
826.747 35.1076 826.256 42.8297 826.703 49.7351 cv
827.021 54.6546 827.306 59.5392 827.736 64.4153 cv
772.509 64.4153 mo
760.904 64.4153 li
760.887 63.1273 760.869 61.8383 760.852 60.5504 cv
760.943 57.4693 761.034 54.3882 761.126 51.3067 cv
766.612 39.2309 li
774.175 .0512187 li
774.137 1.52397 li
774.137 1.52397 li
774.137 1.52394 li
774.137 1.52397 774.137 1.52397 774.137 1.52397 cv
773.478 26.9463 li
773.478 26.9463 li
773.479 26.9462 li
773.478 26.9463 773.478 26.9463 773.478 26.9463 cv
772.509 64.4153 li
690.331 64.4153 mo
678.265 64.4153 li
678.229 62.5495 678.203 60.6831 678.189 58.8162 cv
678.189 58.8162 li
678.176 57.065 678.174 55.313 678.188 53.5601 cv
678.188 53.5024 678.189 53.4439 678.189 53.3862 cv
678.189 53.3862 li
678.189 53.3862 li
678.195 52.7819 678.2 52.1777 678.205 51.5734 cv
682.827 54.9325 686.973 59.2749 690.331 64.4153 cv
657.437 64.4153 mo
615.146 64.4153 li
615.088 63.7915 li
622.764 58.4066 li
634.856 44.5884 li
635.661 36.3435 li
637.688 37.8568 639.864 39.0156 642.144 39.9332 cv
647.081 41.9209 652.496 42.7761 657.976 43.6794 cv
657.928 45.1476 657.88 46.6162 657.832 48.0845 cv
657.832 48.0845 li
657.832 48.0845 li
657.824 48.3274 657.816 48.5698 657.808 48.8127 cv
657.808 48.8203 657.808 48.8282 657.807 48.8358 cv
657.804 48.934 657.801 49.0318 657.798 49.1299 cv
657.795 49.22 657.792 49.3122 657.789 49.4022 cv
657.789 49.4054 657.789 49.4084 657.789 49.4115 cv
657.633 54.4127 657.521 59.4144 657.437 64.4153 cv
322.82 64.4153 mo
312.154 64.4153 li
312.154 19.3434 li
312.765 21.3686 313.375 23.3937 313.985 25.419 cv
313.985 25.419 li
317.191 27.2029 320.396 28.9867 323.602 30.7707 cv
323.602 30.7707 li
323.602 30.7707 li
323.634 30.8256 323.645 30.9167 323.645 31.0231 cv
323.645 31.275 323.582 31.6124 323.579 31.7552 cv
323.528 33.9754 323.476 36.1953 323.424 38.4153 cv
323.424 38.4153 li
323.344 41.856 323.264 45.297 323.184 48.7378 cv
323.108 52.0404 323.031 55.3425 322.954 58.6452 cv
322.909 60.5684 322.865 62.4921 322.82 64.4153 cv
292.661 64.4153 mo
264.49 64.4153 li
264.268 52.8349 264.046 41.2527 263.825 29.6722 cv
264.941 28.99 266.039 28.2572 267.116 27.4666 cv
275.627 21.2186 282.955 13.1305 290.228 5.31571 cv
293.903 44.5404 li
292.661 64.4153 li
205.132 64.4153 mo
198.059 64.4153 li
200.308 61.5072 202.817 58.7802 205.533 56.2666 cv
205.416 58.9782 205.27 61.6964 205.132 64.4153 cv
63.5045 64.4153 mo
40.1444 64.4153 li
39.1026 51.9059 li
47.2123 55.6824 56.3558 58.5459 63.4884 63.2548 cv
63.4937 63.6431 63.499 64.027 63.5045 64.4153 cv
614.817 60.8933 mo
613.289 44.5404 li
617.32 15.7656 li
621.453 21.1314 625.61 26.9049 630.461 31.766 cv
629.817 42.4095 li
614.817 60.8933 li
181.091 57.8141 mo
177.097 25.5313 li
177.162 25.1321 li
179.39 27.3022 182.107 28.9608 184.987 30.1132 cv
186.75 30.8288 188.583 31.3655 190.446 31.7478 cv
190.449 31.7486 190.453 31.7494 190.457 31.7502 cv
190.458 31.7504 190.459 31.7506 190.459 31.7507 cv
190.462 31.7514 190.466 31.7521 190.469 31.7528 cv
190.469 31.753 190.47 31.7531 190.471 31.7533 cv
190.478 31.755 190.486 31.7569 190.494 31.7588 cv
190.494 31.7589 190.495 31.7591 190.495 31.7592 cv
190.499 31.7601 190.502 31.7609 190.505 31.7618 cv
190.506 31.7619 190.506 31.7621 190.507 31.7622 cv
190.514 31.7642 190.522 31.7664 190.53 31.7686 cv
190.53 31.7687 190.53 31.7687 190.53 31.7688 cv
190.534 31.7699 190.538 31.771 190.542 31.7722 cv
190.542 31.7722 li
190.55 31.7746 190.557 31.777 190.565 31.7795 cv
190.565 31.7796 190.565 31.7796 190.565 31.7797 cv
190.577 31.7834 190.588 31.7874 190.6 31.7915 cv
190.6 31.7916 190.6 31.7916 190.6 31.7917 cv
191.15 31.9939 191.478 32.6318 191.691 33.4234 cv
191.56 33.9423 191.43 34.4621 191.3 34.9809 cv
181.091 57.8141 li
703.468 52.9791 mo
701.078 46.4254 698.746 39.9037 696.473 33.4124 cv
695.889 30.1117 695.316 26.8157 694.752 23.524 cv
695.746 23.3506 696.732 23.1328 697.705 22.8667 cv
698.706 22.593 699.693 22.2682 700.659 21.8882 cv
700.659 21.8882 li
700.659 21.8882 li
701.211 21.6743 701.751 21.4419 702.279 21.1911 cv
703.61 44.0362 li
703.468 52.9791 li
678.351 34.8458 mo
678.37 32.6746 678.389 30.5039 678.408 28.3331 cv
678.721 30.2968 679.037 32.2605 679.357 34.227 cv
679.022 34.433 678.686 34.6394 678.351 34.8458 cv
190.83 29.1834 mo
186.135 28.5595 181.031 26.7745 177.433 23.461 cv
180.476 4.69548 li
181.59 6.77345 182.708 8.84931 183.831 10.9228 cv
185.403 13.827 186.976 16.731 188.548 19.6349 cv
190.107 22.5139 190.27 25.9647 190.83 29.1834 cv
.835294 .788235 .733333 rgb
f
900 83.5023 mo
879.049 83.5023 li
878.971 79.3457 878.887 75.1882 878.799 71.0316 cv
900 71.0316 li
900 83.5023 li
865.336 83.5023 mo
850.661 83.5023 li
850.024 79.336 849.442 75.1763 848.963 71.0316 cv
856.141 71.0316 li
857.259 73.379 860.334 75.3993 862.206 76.8905 cv
863.26 77.73 864.712 78.5751 865.151 79.9375 cv
865.342 80.5308 865.399 81.2069 865.399 81.9026 cv
865.399 82.4338 865.366 82.9764 865.336 83.5023 cv
830.155 83.5023 mo
794.694 83.5023 li
794.706 82.4326 li
794.706 82.4326 li
794.706 82.4327 li
794.706 82.4326 794.706 82.4326 794.706 82.4326 cv
794.837 71.0316 li
828.423 71.0316 li
828.537 71.9638 828.659 72.8955 828.791 73.8281 cv
829.246 77.0524 829.701 80.278 830.155 83.5023 cv
768.325 83.5023 mo
761.187 83.5023 li
761.12 79.3445 761.057 75.1877 760.997 71.0316 cv
772.338 71.0316 li
772.233 75.0785 li
771.008 77.7276 769.651 80.6523 768.325 83.5023 cv
698.034 83.5023 mo
678.772 83.5023 li
678.737 82.2466 678.702 80.9908 678.667 79.7351 cv
678.657 79.3948 678.648 79.0528 678.638 78.7125 cv
678.629 78.3747 678.619 78.0366 678.61 77.6989 cv
678.577 76.5429 678.544 75.3873 678.511 74.2319 cv
678.511 74.2319 li
678.51 74.232 678.51 74.232 678.51 74.232 cv
678.511 74.2319 678.511 74.2319 678.511 74.2319 cv
678.48 73.1648 678.45 72.0983 678.421 71.0316 cv
693.998 71.0316 li
695.784 74.8833 697.16 79.0581 698.034 83.5023 cv
657.213 83.5023 mo
616.93 83.5023 li
615.765 71.0316 li
657.34 71.0316 li
657.288 75.1876 657.248 79.3453 657.213 83.5023 cv
586 83.5023 mo
514.492 83.5023 li
518.865 71.0316 li
583.638 71.0316 li
586 76.0332 li
586 83.5023 li
493.785 83.5023 mo
436.529 83.5023 li
435.698 71.0316 li
492.757 71.0316 li
493.785 83.5023 li
424.274 83.5023 mo
374.639 83.5023 li
375.132 80.4725 375.586 77.4393 375.986 74.4004 cv
376.134 73.2775 376.282 72.1547 376.43 71.0316 cv
424.266 71.0316 li
424.274 83.5023 li
353.414 83.5023 mo
339.696 83.5023 li
341.25 82.0828 342.804 80.6632 344.358 79.2436 cv
344.358 79.2436 li
344.358 79.2436 li
344.361 79.2401 344.365 79.2366 344.369 79.2331 cv
344.37 79.2318 344.372 79.2306 344.373 79.2293 cv
344.375 79.2271 344.378 79.2246 344.38 79.2223 cv
344.383 79.22 344.385 79.2177 344.388 79.2153 cv
344.39 79.2132 344.392 79.2111 344.394 79.209 cv
344.397 79.207 344.399 79.2049 344.401 79.2028 cv
344.402 79.2018 344.403 79.2005 344.404 79.1995 cv
344.412 79.1916 344.42 79.1837 344.428 79.1757 cv
344.429 79.1755 344.429 79.1754 344.429 79.1752 cv
345.491 78.1084 345.467 75.8574 346.071 74.4552 cv
346.071 74.4552 li
346.297 73.93 346.609 73.5204 347.102 73.3412 cv
348.751 72.7427 350.169 71.9568 351.421 71.0316 cv
355.337 71.0316 li
354.925 73.3707 354.513 75.71 354.101 78.049 cv
353.786 79.8369 353.568 81.6593 353.414 83.5023 cv
322.376 83.5023 mo
312.154 83.5023 li
312.154 71.0316 li
322.666 71.0316 li
322.57 75.1884 322.473 79.3456 322.376 83.5023 cv
291.468 83.5023 mo
264.855 83.5023 li
264.775 79.3444 264.696 75.1896 264.616 71.0316 cv
292.247 71.0316 li
291.468 83.5023 li
204.734 83.5023 mo
188.206 83.5023 li
189.467 79.1406 191.296 74.9632 193.59 71.0316 cv
204.828 71.0316 li
204.669 75.1934 204.595 79.3539 204.734 83.5023 cv
113.708 83.5023 mo
109.532 83.5023 li
108.911 73.5636 li
110.061 71.0316 li
113.442 71.0316 li
113.708 83.5023 li
63.8093 83.5023 mo
41.734 83.5023 li
40.6954 71.0316 li
63.6045 71.0316 li
63.6678 75.0066 63.7356 78.9807 63.8006 82.9569 cv
63.8035 83.1384 63.8064 83.3208 63.8093 83.5023 cv
30.5626 83.5023 mo
0 83.5023 li
0 71.0316 li
29.867 71.0316 li
30.5626 83.5023 li
335.953 81.2461 mo
335.953 81.2461 li
335.961 77.841 335.969 74.4367 335.977 71.0316 cv
343.961 71.0316 li
343.753 71.608 343.544 72.1843 343.336 72.7606 cv
343.336 72.7606 li
343.025 73.619 342.72 74.4795 342.408 75.3377 cv
342.076 76.2501 341.43 77.0488 340.64 77.7743 cv
339.205 79.0927 337.299 80.169 335.953 81.2461 cv
865.239 73.9674 mo
865.149 73.8954 865.057 73.8241 864.965 73.7536 cv
863.75 72.8251 862.35 72.0184 861.14 71.0316 cv
865.229 71.0316 li
865.233 72.0103 865.236 72.9891 865.239 73.9674 cv
346.898 71.4005 mo
346.928 71.2776 346.958 71.1545 346.988 71.0316 cv
347.964 71.0316 li
347.619 71.1647 347.263 71.288 346.898 71.4005 cv
f
900 97.0571 mo
879.284 97.0571 li
879.261 95.6209 879.238 94.1798 879.214 92.7437 cv
900 92.7437 li
900 97.0571 li
865.285 97.0571 mo
852.864 97.0571 li
852.623 95.6202 852.382 94.1822 852.144 92.7437 cv
865.328 92.7437 li
865.326 93.6725 865.319 94.6015 865.307 95.5303 cv
865.309 95.5298 865.31 95.5295 865.312 95.5291 cv
865.305 96.0383 865.297 96.5479 865.285 97.0571 cv
832.065 97.0571 mo
794.538 97.0571 li
794.587 92.7437 li
831.458 92.7437 li
831.66 94.181 831.863 95.6198 832.065 97.0571 cv
761.959 97.0571 mo
761.415 97.0571 li
761.39 95.6194 761.365 94.1812 761.34 92.7437 cv
764.004 92.7437 li
763.125 94.6119 762.41 96.1224 761.959 97.0571 cv
699.066 97.0571 mo
679.152 97.0571 li
679.112 95.6196 679.071 94.1812 679.031 92.7437 cv
699.084 92.7437 li
699.094 93.0383 699.101 93.3341 699.107 93.6305 cv
699.125 94.7608 699.112 95.9026 699.066 97.0571 cv
657.099 97.0571 mo
618.197 97.0571 li
617.794 92.7437 li
657.136 92.7437 li
657.132 93.1913 657.129 93.639 657.125 94.0867 cv
657.125 94.0867 li
657.125 94.0867 657.125 94.0867 657.125 94.0867 cv
657.125 94.0867 657.125 94.0867 657.125 94.0867 cv
657.123 94.3018 657.121 94.5171 657.119 94.7324 cv
657.118 94.8849 657.117 95.0378 657.115 95.1903 cv
657.11 95.8123 657.104 96.4351 657.099 97.0571 cv
586 97.0571 mo
515.795 97.0571 li
515.172 92.7437 li
586 92.7437 li
586 97.0571 li
494.902 97.0571 mo
437.03 97.0571 li
436.977 92.7437 li
494.546 92.7437 li
494.902 97.0571 li
424.283 97.0571 mo
372.217 97.0571 li
372.492 95.6197 372.762 94.1824 373.028 92.7437 cv
424.28 92.7437 li
424.283 97.0571 li
352.963 97.0571 mo
335.866 97.0571 li
335.868 96.6681 335.871 96.2787 335.874 95.8896 cv
335.874 95.8896 li
335.882 94.8409 335.893 93.7921 335.903 92.7437 cv
353.03 92.7437 li
353.006 94.185 352.989 95.6254 352.963 97.0571 cv
322.075 97.0571 mo
312.154 97.0571 li
312.154 92.7437 li
322.163 92.7437 li
322.131 94.1817 322.102 95.6191 322.075 97.0571 cv
290.621 97.0571 mo
265.117 97.0571 li
265.114 96.9416 265.112 96.8268 265.11 96.7113 cv
265.11 96.7113 li
265.108 96.7114 265.108 96.7114 265.108 96.7114 cv
265.109 96.7114 265.109 96.7113 265.11 96.7113 cv
265.098 96.1347 265.086 95.5582 265.074 94.9814 cv
265.074 94.9814 li
265.06 94.2347 265.046 93.4904 265.032 92.7437 cv
290.89 92.7437 li
290.621 97.0571 li
205.243 97.0571 mo
186.237 97.0571 li
186.243 95.6069 186.314 94.1683 186.447 92.7437 cv
205.081 92.7437 li
205.135 94.1818 205.189 95.619 205.243 97.0571 cv
113.997 97.0571 mo
110.38 97.0571 li
110.11 92.7437 li
113.905 92.7437 li
113.997 97.0571 li
85.2225 97.0571 mo
81.9805 97.0571 li
81.9434 95.62 81.9061 94.1808 81.869 92.7437 cv
82.3727 92.7437 li
83.2889 94.1916 84.2423 95.6285 85.2225 97.0571 cv
64.007 97.0571 mo
42.8628 97.0571 li
42.5036 92.7437 li
63.9503 92.7437 li
63.9705 94.1814 63.9895 95.6195 64.007 97.0571 cv
31.0048 97.0571 mo
0 97.0571 li
0 92.7437 li
31.0012 92.7437 li
31.0048 97.0571 li
335.873 95.8896 mo
335.873 95.8896 li
335.874 95.8896 335.874 95.8896 335.874 95.8896 cv
335.874 95.8896 335.874 95.8896 335.873 95.8896 cv
f
286.294 166.279 mo
279.564 166.279 272.709 166.261 265.774 166.23 cv
265.774 164.186 265.774 162.142 265.774 160.098 cv
272.94 160.061 279.938 160.041 286.684 160.041 cv
286.294 166.279 li
309.889 166.206 mo
310.276 160.112 li
314.011 160.133 317.787 160.158 321.596 160.187 cv
321.586 162.166 321.576 164.146 321.566 166.124 cv
317.622 166.156 313.729 166.184 309.889 166.206 cv
337.486 165.976 mo
337.438 164.093 337.39 162.211 337.342 160.328 cv
344.251 160.398 351.208 160.479 358.149 160.568 cv
358.426 162.29 358.689 164.006 358.931 165.722 cv
351.754 165.816 344.584 165.902 337.486 165.976 cv
207.829 165.698 mo
203.141 165.637 198.472 165.572 193.871 165.504 cv
193.696 163.961 193.521 162.417 193.347 160.874 cv
198.075 160.803 202.851 160.734 207.64 160.668 cv
207.703 162.345 207.766 164.022 207.829 165.698 cv
370.889 165.557 mo
370.8 164.898 370.71 164.239 370.62 163.58 cv
370.491 162.63 370.362 161.68 370.232 160.73 cv
389.129 160.997 407.608 161.313 424.326 161.628 cv
424.328 164.666 li
407.739 164.977 389.461 165.29 370.889 165.557 cv
437.858 164.407 mo
437.827 161.889 li
471.726 162.562 495.567 163.16 495.567 163.16 cv
495.567 163.16 471.597 163.744 437.858 164.407 cv
115.591 164.059 mo
115.245 164.051 114.907 164.044 114.566 164.036 cv
114.459 162.325 li
114.815 162.317 115.175 162.309 115.535 162.302 cv
115.554 162.887 115.572 163.473 115.591 164.059 cv
90.9383 163.49 mo
88.7484 163.436 86.8065 163.388 85.1328 163.347 cv
85.2748 163.223 85.4221 163.098 85.5722 162.973 cv
87.1339 162.936 88.915 162.895 90.8976 162.849 cv
90.9383 163.49 li
.952941 .921569 .882353 rgb
f
527.808 135.965 mo
525.69 135.965 523.552 135.964 521.417 135.962 cv
519.937 125.718 li
522.586 125.714 525.207 125.712 527.808 125.712 cv
546.218 125.712 565.86 125.815 586 125.993 cv
586 130.57 li
586.484 135.663 li
565.93 135.853 546.079 135.965 527.808 135.965 cv
498.103 135.895 mo
478.141 135.804 457.761 135.63 437.501 135.399 cv
437.39 126.332 li
457.714 126.086 477.897 125.898 497.271 125.796 cv
498.103 135.895 li
621.768 135.272 mo
620.936 126.365 li
623.144 126.392 625.337 126.42 627.547 126.448 cv
628.665 127.981 629.783 129.514 630.902 131.047 cv
630.902 131.047 li
631.968 132.508 632.092 133.617 632.146 135.135 cv
628.677 135.182 625.23 135.228 621.768 135.272 cv
424.308 135.241 mo
405.055 134.998 386.047 134.709 367.746 134.396 cv
367.737 134.062 367.726 133.728 367.712 133.396 cv
367.636 131.534 367.373 129.448 367.231 127.376 cv
385.838 127.053 405.049 126.752 424.302 126.498 cv
424.308 135.241 li
634.151 135.108 mo
633.931 134.086 633.712 133.064 633.492 132.042 cv
633.492 132.042 li
632.525 130.908 631.559 129.775 630.593 128.642 cv
629.972 127.915 629.351 127.189 628.728 126.464 cv
638.113 126.586 647.516 126.72 656.833 126.861 cv
656.813 129.119 656.792 131.378 656.772 133.635 cv
656.772 133.635 li
656.772 133.635 656.772 133.635 656.772 133.635 cv
656.772 133.635 656.772 133.635 656.772 133.635 cv
656.769 134.016 656.766 134.397 656.762 134.777 cv
649.243 134.893 641.695 135.004 634.151 135.108 cv
680.198 134.398 mo
680.131 132.01 680.064 129.621 679.997 127.233 cv
685.226 127.321 690.427 127.411 695.561 127.502 cv
695.302 129.718 695.046 131.93 694.791 134.144 cv
689.964 134.23 685.1 134.314 680.198 134.398 cv
353.625 134.148 mo
347.88 134.044 342.22 133.939 336.665 133.832 cv
336.615 131.867 336.565 129.902 336.514 127.937 cv
341.773 127.836 347.115 127.736 352.526 127.638 cv
352.593 128.114 352.668 128.589 352.75 129.066 cv
353.042 130.76 353.333 132.454 353.625 134.148 cv
321.717 133.538 mo
318.429 133.472 315.174 133.405 311.978 133.339 cv
312.154 130.57 li
312.154 128.42 li
315.312 128.355 318.5 128.291 321.742 128.226 cv
321.733 129.997 321.725 131.768 321.717 133.538 cv
288.384 132.832 mo
286.172 132.783 283.999 132.735 281.855 132.686 cv
282 132.549 282.145 132.412 282.291 132.275 cv
283.543 131.119 284.108 130.959 284.233 129.352 cv
284.242 129.239 284.251 129.125 284.259 129.011 cv
285.696 128.98 287.164 128.948 288.629 128.916 cv
288.384 132.832 li
764.233 132.782 mo
764.555 131.473 764.915 130.173 765.308 128.88 cv
767.172 128.92 769.019 128.96 770.838 129 cv
770.743 132.642 li
768.61 132.688 766.428 132.735 764.233 132.782 cv
274.407 132.516 mo
271.442 132.448 268.556 132.381 265.75 132.314 cv
265.742 131.352 265.734 130.388 265.723 129.426 cv
270.102 129.326 274.677 129.223 279.421 129.118 cv
279.223 129.3 279.006 129.477 278.777 129.65 cv
278.775 129.652 278.772 129.654 278.77 129.656 cv
278.768 129.657 278.766 129.659 278.764 129.66 cv
278.126 130.14 277.397 130.583 276.734 130.98 cv
276.734 130.98 li
276.177 131.314 275.667 131.616 275.299 131.879 cv
275.001 132.091 274.704 132.304 274.407 132.516 cv
794.858 132.108 mo
794.782 129.539 li
813.077 129.961 827.62 130.322 836.779 130.556 cv
836.805 130.741 836.831 130.926 836.857 131.111 cv
827.701 131.339 813.137 131.692 794.858 132.108 cv
.905882 .866667 .819608 rgb
f
770.73 212.762 mo
768.51 212.761 766.256 212.758 763.993 212.755 cv
763.923 210.681 763.854 208.605 763.787 206.533 cv
766.1 206.528 768.372 206.526 770.629 206.525 cv
770.649 207.73 li
770.73 212.762 li
797.227 212.761 mo
797.045 206.571 li
806.014 206.605 815.09 206.655 824.19 206.718 cv
823.966 208.725 823.742 210.732 823.518 212.739 cv
815.528 212.753 806.898 212.758 797.227 212.761 cv
841.887 212.685 mo
842.171 210.745 842.454 208.806 842.737 206.866 cv
849.277 206.925 855.799 206.989 862.273 207.058 cv
862.23 208.89 862.187 210.722 862.146 212.554 cv
855.465 212.613 848.827 212.655 841.887 212.685 cv
880.024 212.361 mo
880.015 210.661 880.006 208.959 879.997 207.26 cv
886.765 207.341 893.445 207.427 900 207.516 cv
900 212.067 li
892.891 212.184 886.317 212.281 880.024 212.361 cv
685.045 212.207 mo
684.074 212.197 683.106 212.186 682.136 212.175 cv
682.09 210.495 682.049 208.815 682.012 207.135 cv
683.228 207.121 684.433 207.107 685.65 207.094 cv
685.431 208.801 685.227 210.506 685.045 212.207 cv
656.078 211.859 mo
646.819 211.738 637.715 211.611 628.89 211.481 cv
628.55 207.837 li
637.509 207.706 646.743 207.576 656.114 207.453 cv
656.112 207.704 656.109 207.956 656.107 208.207 cv
656.107 208.207 li
656.107 208.207 656.107 208.207 656.107 208.207 cv
656.107 208.207 656.107 208.207 656.107 208.207 cv
656.103 208.717 656.098 209.227 656.094 209.738 cv
656.091 210.029 656.088 210.321 656.086 210.612 cv
656.082 211.027 656.08 211.443 656.078 211.859 cv
593.638 210.928 mo
565.677 210.463 543.367 210.032 532.089 209.807 cv
532.043 209.485 li
543.299 209.265 565.603 208.844 593.397 208.386 cv
593.638 210.928 li
.952941 .921569 .882353 rgb
f
0 212.067 mo
0 207.516 li
10.7597 207.662 21.1799 207.816 31.0966 207.971 cv
31.0995 211.505 li
19.4542 211.73 9.27207 211.915 0 212.067 cv
44.8587 211.234 mo
44.8242 208.192 li
50.704 208.289 56.3619 208.385 61.7442 208.48 cv
61.7206 209.283 61.6969 210.089 61.6733 210.892 cv
55.7559 211.014 50.1633 211.127 44.8587 211.234 cv
82.965 210.451 mo
82.9745 209.923 82.9841 209.394 82.9938 208.866 cv
86.8532 208.939 90.4772 209.009 93.8364 209.074 cv
93.9093 210.222 li
90.1544 210.3 86.5071 210.377 82.965 210.451 cv
.905882 .866667 .819608 rgb
f
894.687 322.589 mo
894.826 322.897 894.968 323.211 895.102 323.491 cv
894.986 323.192 894.846 322.892 894.687 322.589 cv
.733333 .639216 .498039 rgb
f
509.12 340.37 mo
508.27 345.433 507.588 350.285 506.96 354.495 cv
508.965 350.994 509.896 345.321 509.12 340.37 cv
cp
.882353 .823529 .67451 rgb
f
359.616 301.095 mo
362.088 299.453 363.836 296.884 365.044 293.914 cv
362.595 296.014 360.656 298.493 359.616 301.095 cv
cp
.8 .705882 .541176 rgb
f
599.953 304.739 mo
600.66 306.304 601.467 307.78 602.386 309.129 cv
602.115 307.445 601.224 305.983 599.953 304.739 cv
cp
f
707.636 293.114 mo
709.088 298.668 710.586 304.008 711.138 308.627 cv
715.177 303.271 712.098 297.26 707.636 293.114 cv
f
602.075 400 mo
615.4 376.071 617.457 340.989 610.6 316.247 cv
605.409 297.522 584.402 261.595 559.637 273.312 cv
547.036 279.274 542.992 297.273 546.388 309.809 cv
541.849 297.257 527.801 294.219 520.075 305.727 cv
514.281 314.359 511.197 327.996 509.12 340.37 cv
509.896 345.32 508.965 350.994 506.96 354.495 cv
507.588 350.285 508.27 345.433 509.12 340.37 cv
508.656 337.411 507.583 334.711 505.763 332.887 cv
499.528 326.636 492.532 332.546 486.428 335.325 cv
486.603 313.078 469.892 296.78 451.158 314.613 cv
448.508 305.197 423.875 296.813 405.667 317.039 cv
388.12 336.53 403.267 383.26 415.103 400 cv
602.075 400 li
.882353 .823529 .67451 rgb
f
424.371 230.873 mo
418.265 369.42 li
440.265 360.273 li
436.939 89.6606 li
430.967 0 li
421.127 0 li
424.265 70.3395 li
424.371 230.873 li
.882353 .839216 .760784 rgb
f
586 76.0332 mo
586 130.57 li
599.554 273.158 li
597 360.667 li
666.204 363.91 li
631 234.056 li
615.088 63.7915 li
622.764 58.4066 li
634.856 44.5884 li
639.21 0 li
632.382 0 li
629.817 42.4095 li
614.817 60.8933 li
613.289 44.5404 li
619.528 0 li
586 0 li
586 59.6384 li
578.417 43.5795 li
573.737 0 li
566.696 0 li
571.583 45.5009 li
586 76.0332 li
f
354.462 16.8598 mo
362.455 30.6202 li
360.846 39.7522 359.238 48.8841 357.629 58.0162 cv
356.453 64.6938 355.277 71.3714 354.101 78.049 cv
352.707 85.9658 353.21 94.561 352.783 102.615 cv
352.312 111.501 351.236 120.28 352.75 129.066 cv
354.177 137.347 355.603 145.628 357.03 153.909 cv
358.473 162.285 359.795 170.224 360.219 178.682 cv
360.803 190.339 361.388 201.995 361.972 213.652 cv
362.37 221.592 362.768 229.532 363.166 237.472 cv
363.504 244.217 365.153 252.588 363.898 259.19 cv
362.712 265.43 360.33 272.479 360.323 278.801 cv
360.313 287.377 360.303 295.954 360.293 304.53 cv
360.279 316.238 360.265 327.945 360.252 339.652 cv
360.248 342.816 360.245 345.98 360.241 349.144 cv
360.239 350.799 361.275 351.136 362.583 352.384 cv
367.263 356.846 371.943 361.309 376.623 365.772 cv
378.033 338.78 379.444 311.788 380.855 284.796 cv
381.349 280.029 381.844 275.261 382.338 270.494 cv
382.712 266.887 384.044 262.228 383.553 258.615 cv
382.7 252.349 381.847 246.082 380.994 239.816 cv
377.536 214.404 374.078 188.992 370.62 163.58 cv
369.822 157.712 369.023 151.844 368.225 145.976 cv
367.666 141.872 367.881 137.539 367.712 133.396 cv
367.567 129.82 366.73 125.416 367.387 121.878 cv
370.317 106.096 373.891 90.3178 375.986 74.4004 cv
376.29 72.0917 376.594 69.7828 376.898 67.4738 cv
408.002 36.3715 li
414.038 0 li
408.97 0 li
403.332 33.9702 li
377.969 59.3322 li
380.572 39.5549 383.175 19.7773 385.778 0 cv
367.847 0 li
366.498 7.66039 365.149 15.321 363.8 22.9814 cv
359.411 15.4249 li
359.216 10.2514 359.063 4.89296 358.971 0 cv
353.948 0 li
354.051 5.29175 354.236 10.9726 354.438 16.2382 cv
354.462 16.8598 li
.772549 .639216 .439216 rgb
f
131.528 57.3858 mo
146.493 82.4447 li
148.065 96.1548 149.637 109.865 151.209 123.575 cv
152.905 138.362 154.687 152.852 155.113 167.713 cv
155.458 179.74 155.803 191.767 156.148 203.793 cv
156.346 210.7 153.644 217.415 152.98 224.262 cv
151.406 240.475 149.832 256.689 148.258 272.902 cv
145.759 298.64 143.261 324.377 140.762 350.114 cv
139.933 358.66 139.103 391.454 138.273 400 cv
138.181 400.945 138.09 400.473 137.998 400 cv
137.906 399.527 137.814 399.054 137.722 400 cv
137.634 400.91 140.274 400.601 142.616 400.292 cv
144.026 400.106 145.329 399.92 145.863 400 cv
151.92 359.661 157.978 302.552 164.035 262.213 cv
166.713 244.379 169.391 226.545 172.069 208.711 cv
172.796 203.87 171.876 198.72 171.601 193.865 cv
170.901 181.49 170.2 169.115 169.5 156.74 cv
168.512 139.289 164.857 121.768 162.395 104.479 cv
159.849 86.6057 157.482 68.9347 153.602 51.3129 cv
174.605 40.8999 li
181.238 0 li
176.172 0 li
170.081 37.562 li
152.445 46.3064 li
152.195 45.0188 152.03 43.7246 152.08 42.409 cv
152.229 38.4858 152.509 34.5639 152.723 30.6434 cv
153.261 20.786 153.799 10.9287 154.337 1.07133 cv
154.356 .714219 154.376 .357109 154.395 0 cv
149.217 0 li
148.726 3.09345 148.236 6.18734 147.745 9.28079 cv
146.087 19.7343 144.428 30.1878 142.769 40.6413 cv
142.176 44.3811 142.44 47.1094 142.878 50.9297 cv
143.622 57.4115 144.365 63.8933 145.108 70.3751 cv
136.528 56.0067 li
136.528 18.3822 li
132.971 0 li
127.879 0 li
131.528 18.8619 li
131.528 57.3858 li
.823529 .713726 .560784 rgb
f
183.941 400 mo
189.778 375.652 171.647 303.141 158.203 293.66 cv
134.868 277.204 116.207 311.718 107.932 328.691 cv
109.432 307.281 94.5657 275.968 76.936 305.714 cv
83.402 278.719 28.4656 254.242 31.0554 291.691 cv
27.6281 280.297 14.5813 258.395 0 258.51 cv
0 400 li
183.941 400 li
.733333 .639216 .498039 rgb
f
900 400 mo
900 258.51 li
898.246 258.524 896.471 258.837 894.687 259.545 cv
875.931 266.989 888.311 308.567 894.687 322.589 cv
889.981 313.654 866.757 303.524 856.48 306.027 cv
847.04 308.325 842.74 316.777 836.181 322.965 cv
829.356 294.413 741.586 344.898 759.636 400 cv
900 400 li
f
31.1064 219.741 mo
24.9999 400 li
47.0001 400 li
43.6739 106.797 li
34.78 0 li
25.9047 0 li
31 91.3438 li
31.1064 219.741 li
.882353 .839216 .760784 rgb
f
97.9106 273.158 mo
96.2026 400 li
142.488 400 li
118.942 234.056 li
108.911 73.5636 li
124.507 39.2309 li
132.08 0 li
126.374 0 li
119.507 35.1711 li
107.823 56.1538 li
107.097 44.5404 li
107.311 0 li
88.8454 0 li
88.8454 130.57 li
97.9106 273.158 li
f
519.763 288.336 mo
525.382 400 li
571.782 400 li
537.452 246.916 li
514.027 84.8267 li
526.698 48.6948 li
531.833 0 li
526.214 0 li
521.376 44.9843 li
511.487 67.2436 li
509.791 55.5144 li
505.479 0 li
486.903 0 li
498.799 144.341 li
519.763 288.336 li
.913725 .878431 .819608 rgb
f
740.015 273.158 mo
738.307 400 li
784.592 400 li
761.047 234.056 li
751.016 73.5636 li
766.612 39.2309 li
774.185 0 li
768.478 0 li
761.612 35.1711 li
749.927 56.1538 li
749.202 44.5404 li
749.415 0 li
730.95 0 li
730.95 130.57 li
740.015 273.158 li
.882353 .839216 .760784 rgb
f
826.703 49.7351 mo
827.226 57.8211 827.66 65.8111 828.791 73.8281 cv
831.53 93.2423 834.263 112.657 836.992 132.073 cv
837.313 134.355 836.056 136.872 835.466 139.094 cv
834.472 142.838 833.478 146.582 832.483 150.326 cv
831.349 154.597 829.502 159.161 829.011 163.555 cv
828.291 170.002 827.571 176.448 826.851 182.895 cv
824.691 202.233 822.531 221.572 820.371 240.91 cv
818.729 255.613 822.695 270.795 824.801 285.385 cv
826.458 296.875 825.705 309.014 826.01 320.596 cv
826.258 330.008 826.545 339.421 826.937 348.829 cv
827.162 354.133 826.93 394.986 828.95 400 cv
830.68 397.944 832.511 398.692 834.599 399.44 cv
836.112 399.982 837.761 400.523 839.604 400 cv
840.879 399.637 842.16 399.806 843.443 399.975 cv
844.664 400.136 845.888 400.297 847.115 400 cv
847.92 399.805 848.244 400.073 848.327 400.342 cv
848.452 400.742 848.038 401.144 847.89 400 cv
846.361 388.187 845.205 328.651 843.99 316.803 cv
842.31 300.416 840.543 284.043 838.753 267.668 cv
838.143 262.084 837.533 256.5 836.929 250.916 cv
836.282 244.946 838.132 238.405 838.996 232.485 cv
840.784 220.24 842.572 207.996 844.36 195.752 cv
845.907 185.158 847.891 175.376 850.572 165.014 cv
852.762 156.548 854.953 148.081 857.143 139.615 cv
857.646 137.67 858.613 135.162 858.613 133.165 cv
858.613 131.457 857.916 129.542 857.635 127.842 cv
856.896 123.371 856.315 118.866 855.655 114.382 cv
853.135 97.2475 849.443 79.6611 848.138 62.5167 cv
848.892 59.0398 846.48 53.6874 845.675 50.4781 cv
843.363 41.2584 841.05 32.0389 838.737 22.8194 cv
836.828 15.2129 834.92 7.60654 833.012 0 cv
816.836 0 li
819.443 8.72248 822.05 17.4445 824.658 26.167 cv
826.857 33.5248 826.21 42.1261 826.703 49.7351 cv
.772549 .639216 .439216 rgb
f
445.898 400 mo
451.534 384.53 454.77 352.034 452.041 341.524 cv
446.032 318.386 416.179 317.038 408.293 339.13 cv
415.75 320.821 394.448 321.255 383.907 328.064 cv
391.89 320.541 398.599 300.647 390.005 291.684 cv
383.553 284.955 372.142 287.829 365.044 293.914 cv
363.836 296.884 362.088 299.453 359.616 301.095 cv
360.656 298.493 362.595 296.014 365.044 293.914 cv
367.426 288.057 367.669 280.611 366.959 275.427 cv
365.258 263.001 355.523 254.356 343.06 253.393 cv
318.125 251.467 308.703 285.772 302.973 304.463 cv
302.373 296.897 299.123 287.851 292.09 283.981 cv
287.729 281.581 281.288 281.057 276.597 282.886 cv
273.987 283.902 271.245 288.698 268.034 288.13 cv
265.019 287.596 264.676 284.252 263.054 282.21 cv
258.992 277.094 254.003 272.798 247.444 270.935 cv
233.936 267.099 230.496 275.51 220.96 281.295 cv
217.386 267.228 197.135 260.304 186.637 270.139 cv
166.932 288.6 154.781 376.122 161.565 400 cv
445.898 400 li
.8 .705882 .541176 rgb
f
765.813 400 mo
772.599 386.935 785.178 357.078 786.857 354.667 cv
795.628 342.066 800.766 327.198 799.001 311.605 cv
796.285 287.6 787.37 257.782 765.912 250.047 cv
756.492 246.651 737.612 250.498 737.01 263.132 cv
738.786 248.227 714.215 252.094 708.39 259.841 cv
701.713 268.722 704.572 281.395 707.636 293.114 cv
712.098 297.26 715.177 303.271 711.138 308.627 cv
710.586 304.008 709.088 298.668 707.636 293.114 cv
705.957 291.555 704.085 290.258 702.319 289.362 cv
690.549 283.384 676.492 285.191 667.595 295.132 cv
672.385 284.095 669.481 268.329 659.919 260.704 cv
649.102 252.079 631.269 256.208 632.205 271.878 cv
629.476 260.951 615.204 249.577 605.91 259.16 cv
595.765 269.62 593.705 290.89 599.953 304.739 cv
601.224 305.983 602.115 307.445 602.386 309.129 cv
601.467 307.78 600.66 306.304 599.953 304.739 cv
596.017 300.885 588.405 299.125 584.029 299.374 cv
572.825 300.01 566.396 311.874 565.042 321.827 cv
557.743 310.449 543.465 314.039 536.861 324.938 cv
522.019 349.431 538.783 385.523 551.575 400 cv
765.813 400 li
f
700.462 242.216 mo
714.667 400 li
749.615 400 li
716.432 212.067 li
713.667 39.2309 li
710.454 0 li
701.044 0 li
703.61 44.0362 li
700.462 242.216 li
.772549 .639216 .439216 rgb
f
282.058 234.056 mo
258.512 400 li
304.797 400 li
303.089 273.158 li
312.154 130.57 li
312.154 0 li
289.73 0 li
293.903 44.5404 li
282.058 234.056 li
.882353 .839216 .760784 rgb
f
425.536 397 mo
404.16 342.525 288.662 300.905 149.365 300.905 cv
94.4384 300.905 43.2179 307.381 0 318.559 cv
0 397 li
425.536 397 li
.301961 .227451 .14902 rgb
f
280.938 314.322 mo
278.877 314.02 276.803 313.727 274.718 313.443 cv
274.706 313.295 274.693 313.146 274.681 312.997 cv
276.781 313.428 278.868 313.87 280.938 314.322 cv
32.298 312.977 mo
31.8992 312.522 31.4991 312.07 31.1064 311.605 cv
38.9184 310.113 46.9268 308.764 55.1109 307.566 cv
55.079 307.986 55.047 308.406 55.015 308.826 cv
47.4318 310.003 39.8526 311.383 32.298 312.977 cv
206.115 308.076 mo
204.822 307.922 203.531 307.771 202.237 307.624 cv
202.156 302.939 li
203.534 303.047 204.902 303.158 206.274 303.274 cv
206.221 304.874 206.168 306.476 206.115 308.076 cv
84.6442 305.23 mo
84.6338 304.816 84.6234 304.402 84.613 303.988 cv
95.446 302.938 106.527 302.144 117.807 301.626 cv
117.621 303.421 li
106.621 303.667 95.6156 304.258 84.6442 305.23 cv
.470588 .352941 .215686 rgb
f
0 397 mo
0 397 li
0 318.565 li
9.96211 315.989 20.3458 313.659 31.1064 311.605 cv
46.7495 330.159 67.2359 339.742 89.0086 343.461 cv
74.6708 348.172 60.5319 353.278 46.6112 358.944 cv
44.6564 352.469 36 344.667 36 344.667 cv
36 344.667 24.9999 354.882 24.9999 361.333 cv
24.9999 361.361 25.0001 361.387 25.0004 361.415 cv
22.4267 358.275 19.9999 356 19.9999 356 cv
19.9999 356 14.0192 361.776 10.8778 367.5 cv
0 367.5 li
0 380.69 li
0 380.69 li
0 380.703 li
0 380.703 li
0 397 li
.254902 .196078 .145098 rgb
f
900 397 mo
900 318.559 li
833.614 335.73 786.131 364.006 773.183 397 cv
900 397 li
.301961 .227451 .14902 rgb
f
898.152 367.5 mo
895.007 367.5 li
895.007 367.5 li
895.007 367.5 li
881.007 367.5 li
881.007 365.355 li
877.86 362.048 874 359.333 874 359.333 cv
874 359.333 868.752 363.135 865.505 367.145 cv
862.946 359.96 855.333 352 855.333 352 cv
855.333 352 848.465 359.398 845.583 366.195 cv
836.138 361.334 826.606 356.444 816.878 351.651 cv
827.874 344.949 840.566 338.746 854.691 333.15 cv
854.661 333.501 854.631 333.853 854.601 334.205 cv
854.439 336.087 854.34 336.468 852.556 337.174 cv
852.338 337.26 852.118 337.342 851.896 337.42 cv
850.745 337.827 849.565 338.139 848.415 338.548 cv
848.415 338.548 li
848.415 338.548 li
849.777 339.38 851.117 340.252 852.521 341.015 cv
851.12 342.279 849.732 343.557 848.361 344.852 cv
846.906 346.227 845.471 347.622 844.06 349.041 cv
844.06 349.041 li
844.06 349.041 844.06 349.041 844.06 349.041 cv
845.736 348.908 847.416 348.832 849.096 348.782 cv
854.034 348.636 858.982 348.708 863.896 348.158 cv
864.001 348.147 864.105 348.135 864.21 348.122 cv
866.726 347.827 869.042 347.558 871.402 347.558 cv
872.899 347.558 874.414 347.666 876.009 347.945 cv
876.129 347.966 876.25 347.988 876.372 348.012 cv
879.396 348.586 882.357 348.75 885.37 348.75 cv
886.485 348.75 887.606 348.728 888.741 348.695 cv
887.759 347.521 886.499 346.436 885.952 344.969 cv
885.952 344.969 li
885.327 343.293 885.493 341.209 885.38 339.445 cv
885.293 338.091 885.206 336.737 885.119 335.384 cv
884.892 331.847 884.665 328.31 884.438 324.773 cv
884.438 324.773 li
884.419 324.484 884.401 324.195 884.382 323.905 cv
884.361 323.581 884.34 323.256 884.319 322.932 cv
889.417 321.406 894.647 319.95 900 318.565 cv
900 365.355 li
899.338 366.05 898.708 366.772 898.152 367.5 cv
.254902 .196078 .145098 rgb
f
900 397 mo
900 393.065 li
829.109 361.208 764.687 313.885 662.537 304.486 cv
655.18 305.311 647.824 306.181 640.473 307.117 cv
633.064 309.432 625.646 311.83 618.216 314.262 cv
560.836 333.273 506.589 353.94 457.168 397 cv
900 397 li
.32549 .258824 .160784 rgb
f
496.807 367.5 mo
496.807 367.5 li
505.416 362.053 514.147 357.075 522.99 352.47 cv
522.99 352.471 li
514.146 357.076 505.417 362.053 496.807 367.5 cv
.745098 .717647 .65098 rgb
f
522.99 352.471 mo
522.99 352.47 li
525.67 351.075 528.355 349.717 531.055 348.388 cv
531.055 348.388 li
528.358 349.716 525.668 351.077 522.99 352.471 cv
.768627 .764706 .788235 rgb
f
531.055 348.388 mo
531.055 348.388 li
535.721 346.091 540.423 343.886 545.149 341.765 cv
540.421 343.887 535.724 346.09 531.055 348.388 cv
.67451 .615686 .521569 rgb
f
578.336 367.5 mo
496.807 367.5 li
505.417 362.053 514.146 357.076 522.99 352.471 cv
525.668 351.077 528.358 349.716 531.055 348.388 cv
535.724 346.09 540.421 343.887 545.149 341.765 cv
552.461 338.483 559.841 335.396 567.289 332.451 cv
568.838 333.588 570.391 334.728 571.947 335.866 cv
562.485 339.054 553.085 342.712 543.767 346.954 cv
555.952 354.276 568.656 359.417 581.533 362.77 cv
580.465 364.203 579.343 365.821 578.336 367.5 cv
.27451 .223529 .152941 rgb
f
836.748 367.5 mo
834.966 367.5 li
829.782 366.033 819.472 362.826 807.224 358.977 cv
806.474 358.359 806 358 806 358 cv
806 358 805.806 358.151 805.47 358.426 cv
804.881 358.241 804.288 358.054 803.692 357.867 cv
807.128 357.698 810.563 357.461 814.002 357.085 cv
821.594 360.403 829.144 363.876 836.748 367.5 cv
.509804 .403922 .235294 rgb
f
815.395 367.5 mo
815.333 367.5 li
815.327 367.49 815.321 367.48 815.314 367.47 cv
815.343 367.481 815.367 367.49 815.395 367.5 cv
796.736 367.5 mo
779.991 367.5 li
779.951 365.129 780.089 362.843 780.372 360.616 cv
783.542 359.603 786.733 358.602 789.905 358.369 cv
793.643 359.67 797.383 360.989 801.134 362.328 cv
799.564 363.884 797.925 365.701 796.736 367.5 cv
681.903 367.5 mo
678.005 367.5 li
674.931 360.124 668.667 353.333 668.667 353.333 cv
668.667 353.333 667.589 354.577 666.109 356.549 cv
665.709 356.041 665.309 355.533 664.91 355.026 cv
663.447 355.999 661.981 356.969 660.512 357.937 cv
660.476 357.96 660.44 357.984 660.404 358.008 cv
660.362 358.036 660.319 358.063 660.277 358.091 cv
660.213 358.133 660.149 358.176 660.084 358.218 cv
660.062 358.233 660.04 358.247 660.017 358.262 cv
658.404 359.323 656.786 360.38 655.164 361.434 cv
655.164 361.434 li
654.35 361.963 653.535 362.491 652.719 363.018 cv
650.83 359.997 649.333 358 649.333 358 cv
649.333 358 646.304 362.163 643.425 367.5 cv
627.522 367.5 li
624.299 362.974 620 359.333 620 359.333 cv
620 359.333 617.14 361.911 614.336 365.334 cv
612.718 364.296 611.106 363.248 609.494 362.19 cv
606.235 356.65 601.333 352 601.333 352 cv
601.333 352 600.211 353.133 598.683 354.922 cv
589.649 348.718 580.737 342.297 571.947 335.866 cv
596.633 327.55 621.742 322.435 646.917 318.498 cv
647.381 318.591 647.849 318.685 648.313 318.779 cv
648.257 319.4 648.201 320.022 648.145 320.643 cv
647.998 322.287 645.159 323.458 643.946 324.367 cv
643.944 324.369 643.942 324.37 643.939 324.372 cv
643.939 324.372 li
643.939 324.372 li
643.939 324.372 li
644.188 324.407 644.438 324.443 644.687 324.478 cv
644.747 324.487 644.808 324.495 644.868 324.504 cv
644.868 324.504 li
644.868 324.504 644.868 324.504 644.868 324.504 cv
644.868 324.504 644.868 324.504 644.868 324.504 cv
647.823 324.924 650.801 325.35 653.786 325.592 cv
653.787 325.592 653.788 325.592 653.79 325.592 cv
653.807 325.594 653.823 325.595 653.84 325.596 cv
653.843 325.597 653.847 325.597 653.85 325.597 cv
653.864 325.598 653.878 325.599 653.892 325.6 cv
653.898 325.601 653.904 325.601 653.91 325.602 cv
653.923 325.603 653.936 325.604 653.949 325.605 cv
653.954 325.605 653.959 325.606 653.964 325.606 cv
653.977 325.607 653.991 325.608 654.004 325.609 cv
654.01 325.61 654.016 325.61 654.022 325.611 cv
654.034 325.612 654.047 325.613 654.059 325.614 cv
654.065 325.614 654.071 325.615 654.077 325.615 cv
654.09 325.616 654.103 325.617 654.116 325.618 cv
654.121 325.618 654.127 325.619 654.132 325.619 cv
654.149 325.621 654.166 325.622 654.182 325.623 cv
654.183 325.623 654.185 325.623 654.185 325.623 cv
654.204 325.625 654.221 325.626 654.24 325.627 cv
654.241 325.627 654.241 325.627 654.242 325.628 cv
654.28 325.63 654.317 325.633 654.355 325.636 cv
654.358 325.636 654.361 325.636 654.364 325.637 cv
654.38 325.638 654.396 325.639 654.411 325.64 cv
654.415 325.64 654.42 325.641 654.424 325.641 cv
654.437 325.642 654.451 325.643 654.464 325.644 cv
654.473 325.644 654.481 325.645 654.489 325.646 cv
654.5 325.646 654.51 325.647 654.52 325.648 cv
654.528 325.648 654.536 325.649 654.544 325.649 cv
654.554 325.65 654.564 325.651 654.575 325.652 cv
654.583 325.652 654.592 325.653 654.601 325.653 cv
654.61 325.654 654.62 325.655 654.63 325.655 cv
654.64 325.656 654.65 325.657 654.66 325.658 cv
654.667 325.658 654.674 325.658 654.68 325.659 cv
654.692 325.66 654.704 325.66 654.716 325.661 cv
654.723 325.662 654.73 325.662 654.737 325.663 cv
654.749 325.663 654.76 325.664 654.772 325.665 cv
654.777 325.665 654.782 325.666 654.788 325.666 cv
654.801 325.667 654.815 325.668 654.828 325.669 cv
654.832 325.669 654.837 325.669 654.841 325.67 cv
654.855 325.671 654.869 325.671 654.883 325.672 cv
654.886 325.673 654.89 325.673 654.892 325.673 cv
654.907 325.674 654.922 325.675 654.937 325.676 cv
654.941 325.676 654.944 325.676 654.948 325.677 cv
654.962 325.677 654.976 325.678 654.991 325.679 cv
654.994 325.68 654.997 325.68 655 325.68 cv
655.016 325.681 655.03 325.682 655.045 325.683 cv
655.046 325.683 655.047 325.683 655.048 325.683 cv
655.171 325.691 655.294 325.698 655.418 325.705 cv
655.418 325.705 655.418 325.705 655.419 325.705 cv
655.436 325.706 655.453 325.707 655.47 325.708 cv
655.471 325.708 655.472 325.708 655.473 325.708 cv
656.306 325.754 657.139 325.784 657.973 325.792 cv
657.973 325.792 657.975 325.792 657.975 325.792 cv
657.992 325.792 658.008 325.793 658.024 325.793 cv
658.026 325.793 658.029 325.793 658.031 325.793 cv
658.046 325.793 658.061 325.793 658.077 325.793 cv
658.079 325.793 658.083 325.793 658.086 325.793 cv
658.101 325.793 658.116 325.793 658.13 325.793 cv
658.133 325.794 658.137 325.794 658.14 325.794 cv
658.155 325.794 658.169 325.794 658.184 325.794 cv
658.188 325.794 658.19 325.794 658.193 325.794 cv
658.209 325.794 658.223 325.794 658.238 325.794 cv
658.241 325.794 658.244 325.794 658.247 325.794 cv
658.316 325.794 658.384 325.795 658.453 325.795 cv
658.566 325.795 658.678 325.794 658.791 325.793 cv
658.91 325.793 659.029 325.791 659.148 325.789 cv
660.267 325.773 661.373 325.757 662.47 325.757 cv
666.217 325.757 669.865 325.939 673.583 326.874 cv
673.583 326.874 li
673.583 326.874 li
676.473 327.602 679.39 328.186 682.32 328.688 cv
682.111 344.735 681.955 358.835 681.903 367.5 cv
.4 .329412 .207843 rgb
f
612.666 367.5 mo
611.86 367.5 li
611.361 365.719 610.507 363.912 609.494 362.19 cv
611.106 363.248 612.718 364.296 614.336 365.334 cv
613.769 366.026 613.204 366.753 612.666 367.5 cv
591.969 364.73 mo
589.072 360.546 586 357.333 586 357.333 cv
586 357.333 583.899 359.597 581.533 362.77 cv
568.656 359.417 555.952 354.276 543.767 346.954 cv
553.085 342.712 562.485 339.054 571.947 335.866 cv
580.737 342.297 589.649 348.718 598.683 354.922 cv
596.591 357.371 593.74 361.049 591.969 364.73 cv
.337255 .286274 .2 rgb
f
714.563 1.3471 mo
714.545 1.58548 714.56 1.39982 714.574 1.21395 cv
714.593 .981656 714.611 .749141 714.563 1.3471 cv
.690196 .556863 .396078 rgb
f
657.115 95.1903 mo
656.92 117.06 656.725 138.929 656.53 160.799 cv
651.709 157.508 646.961 154.11 642.212 150.717 cv
640.54 149.522 638.911 148.204 637.164 147.121 cv
636.189 146.517 636.14 144.584 635.938 143.611 cv
635.407 141.06 634.882 138.508 634.334 135.96 cv
634.053 134.654 633.772 133.348 633.492 132.042 cv
632.525 130.908 631.559 129.775 630.593 128.642 cv
627.799 125.367 624.983 122.114 622.135 118.885 cv
623.901 121.382 625.684 123.867 627.473 126.347 cv
628.616 127.914 629.759 129.481 630.902 131.047 cv
632.239 132.881 632.094 134.159 632.188 136.387 cv
632.225 137.251 631.989 137.235 631.417 137.218 cv
631.265 137.214 631.089 137.209 630.888 137.222 cv
629.838 137.286 628.786 137.31 627.735 137.266 cv
625.313 137.163 622.87 136.737 620.622 135.805 cv
616.884 134.254 614.248 131.528 611.983 128.264 cv
614.736 134.044 619.109 138.277 625.455 139.907 cv
627.236 140.371 629.039 140.669 630.872 140.823 cv
631.119 140.843 631.334 140.837 631.518 140.83 cv
632.114 140.808 632.393 140.786 632.438 141.699 cv
632.477 142.502 632.516 143.306 632.555 144.109 cv
632.597 144.971 632.347 148.392 632.989 148.987 cv
637.62 153.288 642.146 157.699 646.811 161.965 cv
649.34 164.278 651.887 166.578 654.52 168.774 cv
655.31 169.434 656.45 169.786 656.44 170.859 cv
656.322 184.11 656.204 197.361 656.086 210.612 cv
656.01 219.121 656.469 227.846 655.709 236.31 cv
654.557 249.158 653.405 262.006 652.252 274.853 cv
651.277 285.731 650.301 296.608 649.326 307.485 cv
649.009 311.016 648.692 314.546 648.376 318.077 cv
648.299 318.932 648.222 319.788 648.145 320.643 cv
647.998 322.29 645.148 323.463 643.939 324.372 cv
648.963 325.082 654.06 325.866 659.148 325.789 cv
664.085 325.715 668.776 325.665 673.583 326.874 cv
684.427 329.603 695.627 330.312 706.612 332.266 cv
702.717 328.954 698.722 325.754 694.679 322.623 cv
696.652 322.085 698.584 321.411 700.531 320.786 cv
699.528 320.409 692.104 318.179 692.011 317.326 cv
691.979 317.031 691.947 316.736 691.915 316.441 cv
691.732 314.758 691.549 313.075 691.366 311.392 cv
690.657 304.875 689.948 298.357 689.239 291.84 cv
687.536 276.181 685.832 260.523 684.129 244.865 cv
681.747 222.964 682.057 200.792 681.441 178.784 cv
681.313 174.225 681.185 169.665 681.057 165.106 cv
681.031 164.163 681.005 163.22 680.978 162.277 cv
680.956 161.486 682.477 160.185 682.95 159.578 cv
683.83 158.452 684.7 157.32 685.569 156.186 cv
685.983 155.645 686.397 155.105 686.811 154.564 cv
686.551 153.774 686.296 152.982 686.039 152.191 cv
684.298 153.286 682.54 154.355 680.787 155.43 cv
680.07 129.858 679.354 104.285 678.638 78.7125 cv
678.402 70.2629 678.116 61.8376 678.189 53.3862 cv
678.217 50.1958 678.245 47.0055 678.273 43.8152 cv
678.277 43.333 680.236 42.0359 680.624 41.6991 cv
681.982 40.519 683.337 39.3352 684.69 38.149 cv
687.047 36.0818 690.005 34.1027 692.046 31.7257 cv
692.82 30.8241 692.883 29.6529 693.093 28.4543 cv
693.322 27.0448 693.204 23.7902 694.667 23.5388 cv
696.711 23.1873 698.727 22.6482 700.659 21.8882 cv
707.466 19.2494 712.567 13.759 714.103 6.55008 cv
714.565 4.38062 714.68 2.20687 714.693 0 cv
714.671 0 li
714.635 .449034 714.599 .897843 714.563 1.3471 cv
714.611 .749141 714.593 .981656 714.574 1.21395 cv
714.56 1.39982 714.545 1.58548 714.563 1.3471 cv
713.696 12.5637 705.21 19.933 694.295 21.0005 cv
694.762 17.9731 694.652 14.1832 696.442 11.6846 cv
697.879 9.67755 699.34 7.68157 700.705 5.62475 cv
698.496 8.09275 695.434 10.912 694.209 13.9829 cv
692.551 18.1396 691.026 22.3501 689.48 26.5493 cv
689.027 27.7815 688.955 28.3752 687.89 29.0203 cv
684.703 30.9505 681.523 32.8915 678.351 34.8458 cv
678.453 23.2306 678.554 11.6152 678.656 0 cv
659.411 0 li
658.884 16.028 658.358 32.0563 657.832 48.0845 cv
657.316 63.7849 657.256 79.4806 657.115 95.1903 cv
f
694.752 23.524 mo
694.752 23.524 li
695.746 23.3506 696.732 23.1328 697.705 22.8667 cv
696.732 23.1328 695.746 23.3506 694.752 23.524 cv
693.46 15.886 mo
693.46 15.886 li
693.707 15.2504 693.956 14.616 694.209 13.9827 cv
695.434 10.912 698.496 8.09275 700.705 5.62475 cv
698.496 8.09275 695.434 10.912 694.209 13.9829 cv
693.956 14.6162 693.707 15.2505 693.46 15.886 cv
.607843 .584314 .654902 rgb
f
694.752 23.524 mo
694.608 22.6817 694.465 21.8397 694.321 20.9979 cv
700.301 20.4074 705.55 17.9246 709.214 13.9539 cv
709.116 14.7719 709.018 15.5918 708.92 16.4096 cv
706.67 18.7852 703.852 20.6505 700.659 21.8882 cv
700.659 21.8882 li
700.659 21.8882 li
699.693 22.2682 698.706 22.593 697.705 22.8667 cv
696.732 23.1328 695.746 23.3506 694.752 23.524 cv
694.308 20.9174 mo
694.023 19.2387 693.74 17.5626 693.46 15.886 cv
693.707 15.2505 693.956 14.6162 694.209 13.9829 cv
695.434 10.912 698.496 8.09275 700.705 5.62475 cv
700.705 5.62475 li
699.34 7.68157 697.879 9.67755 696.442 11.6846 cv
696.372 11.7822 696.305 11.8817 696.241 11.9832 cv
694.675 14.4544 694.742 18.0228 694.308 20.9174 cv
.501961 .411765 .352941 rgb
f
683.467 237.97 mo
683.465 237.97 li
683.284 235.838 683.126 233.706 682.986 231.57 cv
682.987 231.561 682.987 231.553 682.988 231.545 cv
682.988 231.545 li
682.988 231.545 li
683.129 233.688 683.287 235.83 683.467 237.97 cv
.705882 .701961 .807843 rgb
f
683.712 240.739 mo
683.625 239.817 683.543 238.893 683.465 237.97 cv
683.467 237.97 li
683.544 238.89 683.626 239.811 683.712 240.731 cv
683.712 240.734 683.712 240.736 683.712 240.739 cv
.721569 .729412 .843137 rgb
f
682.979 279.917 mo
682.303 271.603 681.917 263.261 681.916 254.908 cv
681.915 247.136 682.247 239.354 682.986 231.57 cv
683.126 233.706 683.284 235.838 683.465 237.97 cv
683.543 238.893 683.625 239.817 683.712 240.739 cv
683.638 244.365 683.559 248.488 683.478 252.975 cv
683.302 261.006 683.135 270.221 682.979 279.917 cv
.501961 .411765 .352941 rgb
f
678.421 71.0316 mo
678.421 71.0316 li
678.361 68.826 678.306 66.6207 678.264 64.4153 cv
678.265 64.4153 li
678.307 66.6208 678.362 68.8259 678.421 71.0316 cv
.796078 .784314 .843137 rgb
f
678.265 64.4153 mo
678.264 64.4153 li
678.228 62.5494 678.201 60.6834 678.188 58.8165 cv
678.188 58.8164 678.189 58.8163 678.189 58.8162 cv
678.189 58.8162 li
678.189 58.8162 li
678.203 60.6831 678.229 62.5495 678.265 64.4153 cv
.686274 .654902 .682353 rgb
f
678.51 74.232 mo
678.48 73.1648 678.45 72.0984 678.421 71.0316 cv
678.421 71.0316 li
678.45 72.0983 678.48 73.1648 678.511 74.2319 cv
678.511 74.2319 li
f
657.264 77.8762 mo
657.316 72.6595 657.382 67.4434 657.478 62.2276 cv
657.478 62.2276 li
657.478 62.2276 li
664.382 61.093 671.304 60.0326 678.188 58.8165 cv
678.201 60.6834 678.228 62.5494 678.264 64.4153 cv
678.306 66.6207 678.361 68.826 678.421 71.0316 cv
678.45 72.0984 678.48 73.1648 678.51 74.232 cv
671.498 75.6432 664.397 76.7808 657.264 77.8762 cv
.564706 .462745 .368627 rgb
f
687.89 29.0203 mo
684.703 30.9505 681.523 32.8915 678.351 34.8458 cv
678.378 31.8451 678.404 28.845 678.43 25.8448 cv
671.799 27.4922 665.075 28.8535 658.409 30.4866 cv
658.217 36.3526 658.024 42.2184 657.832 48.0845 cv
657.677 52.799 657.565 57.5133 657.478 62.2276 cv
664.383 61.093 671.305 60.0325 678.189 58.8162 cv
678.176 57.007 678.174 55.1972 678.189 53.3862 cv
678.217 50.1958 678.245 47.0055 678.273 43.815 cv
678.278 43.333 680.236 42.0359 680.624 41.6991 cv
681.982 40.519 683.337 39.3352 684.69 38.149 cv
686.744 36.3476 689.253 34.6128 691.215 32.624 cv
690.107 31.4342 689.122 30.1376 688.275 28.754 cv
688.162 28.8427 688.037 28.9313 687.89 29.0203 cv
.690196 .556863 .396078 rgb
f
658.409 30.4866 mo
658.721 20.9868 659.033 11.4872 659.345 1.9872 cv
659.345 1.9872 li
659.345 1.9872 li
659.345 1.9872 li
659.033 11.4873 658.722 20.9864 658.41 30.4865 cv
658.409 30.4866 658.409 30.4866 658.409 30.4866 cv
.686274 .654902 .682353 rgb
f
658.41 30.4865 mo
658.722 20.9864 659.033 11.4873 659.345 1.9873 cv
663.676 7.71727 669.728 12.2175 676.403 15.409 cv
676.934 18.9162 677.476 22.4282 678.03 25.9438 cv
671.528 27.5471 664.941 28.8863 658.409 30.4866 cv
.564706 .462745 .368627 rgb
f
659.345 1.9872 mo
659.345 1.9872 li
659.352 1.78723 659.359 1.58727 659.365 1.38731 cv
659.359 1.58688 659.352 1.78774 659.345 1.9873 cv
.607843 .584314 .654902 rgb
f
676.403 15.409 mo
669.728 12.2175 663.676 7.71727 659.345 1.9872 cv
659.352 1.78774 659.359 1.58688 659.365 1.38731 cv
659.38 .924874 659.396 .462434 659.411 0 cv
678.656 0 li
678.656 0 li
678.656 0 li
674.138 0 li
674.138 0 li
674.138 0 li
674.87 5.12809 675.624 10.2636 676.403 15.409 cv
.501961 .411765 .352941 rgb
f
676.403 15.409 mo
669.728 12.2175 663.676 7.71727 659.345 1.9872 cv
659.345 1.9873 659.345 1.9873 659.345 1.9873 cv
663.676 7.71727 669.728 12.2175 676.403 15.409 cv
676.403 15.409 li
.411765 .345098 .329412 rgb
f
678.511 74.2319 mo
671.498 75.6432 664.397 76.7808 657.264 77.8762 cv
657.212 83.2786 657.172 88.6816 657.125 94.0867 cv
664.452 93.5962 671.761 93.2324 679.029 92.6869 cv
678.899 88.0287 678.769 83.3705 678.638 78.7128 cv
678.596 77.2183 678.553 75.725 678.511 74.2319 cv
.690196 .556863 .396078 rgb
f
656.833 126.861 mo
656.833 126.861 li
656.852 124.711 656.871 122.561 656.89 120.41 cv
656.871 122.561 656.852 124.711 656.833 126.861 cv
.705882 .701961 .807843 rgb
f
656.772 133.635 mo
656.792 131.378 656.813 129.119 656.833 126.861 cv
656.833 126.861 li
656.813 129.12 656.793 131.377 656.772 133.635 cv
656.772 133.635 656.772 133.635 656.772 133.635 cv
.658823 .643137 .729412 rgb
f
657.119 94.7324 mo
657.121 94.5171 657.123 94.3018 657.125 94.0867 cv
657.125 94.0867 657.125 94.0867 657.125 94.0867 cv
657.123 94.3024 657.121 94.5167 657.119 94.7324 cv
.607843 .584314 .654902 rgb
f
656.772 133.635 mo
656.793 131.377 656.813 129.12 656.833 126.861 cv
656.852 124.711 656.871 122.561 656.89 120.41 cv
656.929 116.131 656.967 111.852 657.005 107.572 cv
657.042 103.445 657.079 99.3174 657.115 95.1903 cv
657.117 95.0377 657.118 94.885 657.119 94.7324 cv
657.121 94.5167 657.123 94.3024 657.125 94.0867 cv
657.377 94.0698 657.63 94.0552 657.882 94.0385 cv
663.134 97.4359 666.616 103.041 667.477 109.142 cv
667.477 109.142 li
667.477 109.142 li
667.615 110.12 667.686 111.109 667.686 112.105 cv
667.687 114.295 667.345 116.512 666.622 118.682 cv
664.648 124.603 661.075 129.457 656.772 133.635 cv
.501961 .411765 .352941 rgb
f
656.761 134.881 mo
656.762 134.846 656.762 134.812 656.762 134.777 cv
656.762 134.777 li
656.762 134.812 656.762 134.846 656.761 134.881 cv
.796078 .784314 .843137 rgb
f
656.762 134.777 mo
656.766 134.397 656.769 134.016 656.772 133.635 cv
656.772 133.635 li
656.769 134.016 656.766 134.397 656.762 134.777 cv
656.762 134.777 li
.741176 .717647 .760784 rgb
f
679.619 113.735 mo
679.59 112.708 679.561 111.683 679.533 110.656 cv
679.533 110.656 679.533 110.656 679.533 110.656 cv
679.561 111.683 679.59 112.709 679.619 113.735 cv
.796078 .784314 .843137 rgb
f
680.526 146.115 mo
680.526 146.115 li
680.32 146.106 680.115 146.096 679.909 146.087 cv
679.809 146.083 679.708 146.078 679.608 146.074 cv
679.539 146.071 679.469 146.067 679.4 146.064 cv
679.34 146.062 679.28 146.059 679.22 146.056 cv
679.202 146.056 679.185 146.055 679.167 146.054 cv
673.255 145.794 667.345 145.618 661.422 145.618 cv
661.418 145.618 661.414 145.618 661.41 145.618 cv
661.41 145.618 li
661.41 145.618 li
661.409 145.618 661.408 145.618 661.407 145.618 cv
659.955 145.618 658.504 145.629 657.051 145.651 cv
656.923 145.653 656.794 145.655 656.665 145.657 cv
656.697 142.065 656.729 138.473 656.761 134.881 cv
656.762 134.846 656.762 134.812 656.762 134.777 cv
656.766 134.397 656.769 134.016 656.772 133.635 cv
661.075 129.457 664.648 124.603 666.622 118.682 cv
667.345 116.512 667.687 114.295 667.686 112.105 cv
667.686 111.109 667.615 110.12 667.477 109.142 cv
671.489 109.705 675.506 110.22 679.533 110.656 cv
679.561 111.683 679.59 112.708 679.619 113.735 cv
679.921 124.528 680.223 135.322 680.526 146.115 cv
.564706 .462745 .368627 rgb
f
680.787 155.43 mo
680.7 152.325 680.613 149.22 680.526 146.115 cv
672.58 145.75 664.636 145.522 656.665 145.657 cv
656.62 150.705 656.575 155.752 656.53 160.799 cv
651.709 157.508 646.961 154.11 642.212 150.717 cv
642.097 150.633 li
640.784 151.756 639.394 152.769 637.925 153.63 cv
640.872 156.424 643.813 159.224 646.811 161.965 cv
649.34 164.278 651.887 166.578 654.52 168.774 cv
655.31 169.434 656.45 169.786 656.441 170.859 cv
656.392 176.258 656.344 181.658 656.296 187.057 cv
664.699 185.02 673.103 183.235 681.507 181.474 cv
681.485 180.577 681.466 179.68 681.441 178.784 cv
681.313 174.225 681.185 169.665 681.058 165.106 cv
681.031 164.163 681.005 163.22 680.978 162.278 cv
680.956 161.486 682.477 160.185 682.95 159.578 cv
683.83 158.452 684.7 157.32 685.569 156.186 cv
685.983 155.645 686.397 155.105 686.811 154.564 cv
686.551 153.774 686.296 152.982 686.039 152.191 cv
684.298 153.286 682.54 154.355 680.787 155.43 cv
.690196 .556863 .396078 rgb
f
656.114 207.453 mo
656.133 205.341 656.152 203.23 656.17 201.118 cv
656.152 203.23 656.133 205.341 656.114 207.453 cv
656.114 207.453 li
.796078 .784314 .843137 rgb
f
656.107 208.207 mo
656.109 207.956 656.112 207.704 656.114 207.453 cv
656.114 207.453 li
656.112 207.704 656.109 207.956 656.107 208.207 cv
656.107 208.207 656.107 208.207 656.107 208.207 cv
.780392 .764706 .819608 rgb
f
681.916 202.662 mo
681.852 199.26 681.796 195.858 681.736 192.457 cv
681.798 195.857 681.855 199.26 681.92 202.662 cv
681.919 202.662 681.918 202.662 681.916 202.662 cv
.796078 .784314 .843137 rgb
f
656.107 208.207 mo
656.109 207.956 656.112 207.704 656.114 207.453 cv
656.133 205.341 656.152 203.23 656.17 201.118 cv
656.212 196.431 656.254 191.744 656.296 187.057 cv
664.699 185.02 673.103 183.235 681.507 181.474 cv
681.598 185.132 681.67 188.794 681.736 192.457 cv
681.796 195.858 681.852 199.26 681.916 202.662 cv
673.28 204.275 664.671 206.088 656.107 208.207 cv
.564706 .462745 .368627 rgb
f
649.458 306.004 mo
650.39 295.621 651.321 285.237 652.252 274.853 cv
651.321 285.237 650.39 295.621 649.458 306.004 cv
649.458 306.004 li
.654902 .584314 .501961 rgb
f
653.82 257.371 mo
653.82 257.371 li
654.4 250.904 654.98 244.437 655.56 237.97 cv
655.56 237.97 li
654.98 244.437 654.4 250.904 653.82 257.371 cv
.811765 .815686 .878431 rgb
f
652.252 274.853 mo
652.775 269.026 653.298 263.198 653.82 257.371 cv
653.82 257.371 li
653.298 263.198 652.775 269.026 652.252 274.853 cv
.654902 .584314 .501961 rgb
f
682.986 231.57 mo
682.901 230.271 682.822 228.972 682.75 227.671 cv
682.754 227.671 li
682.826 228.963 682.904 230.254 682.988 231.545 cv
682.987 231.553 682.987 231.561 682.986 231.57 cv
682.242 215.762 mo
682.238 215.762 li
682.199 214.567 682.164 213.371 682.131 212.175 cv
682.136 212.175 li
682.168 213.371 682.204 214.567 682.242 215.762 cv
682.007 207.135 mo
681.975 205.645 681.944 204.152 681.916 202.662 cv
681.918 202.662 681.919 202.662 681.92 202.662 cv
681.949 204.152 681.979 205.644 682.012 207.135 cv
682.007 207.135 li
.796078 .784314 .843137 rgb
f
682.754 227.671 mo
682.75 227.671 li
682.53 223.707 682.366 219.735 682.238 215.762 cv
682.242 215.762 li
682.37 219.736 682.534 223.705 682.754 227.671 cv
.811765 .815686 .878431 rgb
f
682.136 212.175 mo
682.131 212.175 li
682.085 210.494 682.045 208.816 682.007 207.135 cv
682.012 207.135 li
682.049 208.815 682.09 210.495 682.136 212.175 cv
.780392 .764706 .819608 rgb
f
656.094 209.738 mo
656.098 209.227 656.103 208.717 656.107 208.207 cv
656.107 208.207 li
656.103 208.718 656.098 209.227 656.094 209.738 cv
f
648.313 318.779 mo
648.313 318.779 li
648.334 318.545 648.355 318.311 648.376 318.077 cv
648.355 318.311 648.334 318.545 648.313 318.779 cv
648.376 318.077 mo
648.692 314.546 649.009 311.016 649.326 307.485 cv
649.37 306.992 649.414 306.498 649.458 306.004 cv
649.458 306.004 li
649.414 306.498 649.37 306.991 649.326 307.485 cv
649.009 311.016 648.692 314.546 648.376 318.077 cv
.266667 .215686 .14902 rgb
f
644.868 324.504 mo
644.808 324.495 644.747 324.487 644.687 324.478 cv
644.747 324.487 644.808 324.495 644.868 324.504 cv
644.868 324.504 644.868 324.504 644.868 324.504 cv
643.946 324.367 mo
645.159 323.458 647.998 322.287 648.145 320.643 cv
648.201 320.022 648.257 319.4 648.313 318.779 cv
648.313 318.779 li
648.257 319.4 648.201 320.022 648.145 320.643 cv
647.998 322.287 645.159 323.458 643.946 324.367 cv
.329412 .27451 .192157 rgb
f
644.868 324.504 mo
644.808 324.495 644.747 324.487 644.687 324.478 cv
644.438 324.443 644.188 324.407 643.939 324.372 cv
643.939 324.372 li
643.942 324.37 643.944 324.369 643.946 324.367 cv
645.159 323.458 647.998 322.287 648.145 320.643 cv
648.201 320.022 648.257 319.4 648.313 318.779 cv
648.334 318.545 648.355 318.311 648.376 318.077 cv
648.376 318.077 li
648.376 318.077 li
648.692 314.546 649.009 311.016 649.326 307.485 cv
649.37 306.991 649.414 306.498 649.458 306.004 cv
650.39 295.621 651.321 285.237 652.252 274.853 cv
652.252 274.853 li
652.252 274.853 li
652.775 269.026 653.298 263.198 653.82 257.371 cv
654.4 250.904 654.98 244.437 655.56 237.97 cv
655.61 237.417 655.66 236.863 655.709 236.31 cv
655.709 236.31 li
656.068 232.31 656.155 228.251 656.155 224.184 cv
656.154 220.352 656.077 216.513 656.077 212.71 cv
656.077 212.009 656.08 211.31 656.086 210.612 cv
656.088 210.321 656.091 210.029 656.094 209.738 cv
656.098 209.227 656.103 208.718 656.107 208.207 cv
664.671 206.088 673.28 204.275 681.916 202.662 cv
681.944 204.152 681.975 205.645 682.007 207.135 cv
682.045 208.816 682.085 210.494 682.131 212.175 cv
682.164 213.371 682.199 214.567 682.238 215.762 cv
682.366 219.735 682.53 223.707 682.75 227.671 cv
682.822 228.972 682.901 230.271 682.986 231.57 cv
682.247 239.354 681.915 247.136 681.916 254.908 cv
681.917 263.261 682.303 271.603 682.979 279.917 cv
682.746 294.423 682.54 310.015 682.373 324.348 cv
682.201 324.224 682.028 324.1 681.856 323.975 cv
675.028 302.568 672.473 280.102 664.175 259.358 cv
661.273 279.092 661.672 298.826 660.153 318.56 cv
655.102 320.52 650.095 322.915 644.868 324.504 cv
.564706 .462745 .368627 rgb
f
658.247 325.794 mo
658.244 325.794 658.241 325.794 658.238 325.794 cv
658.241 325.794 658.244 325.794 658.247 325.794 cv
658.193 325.794 mo
658.19 325.794 658.188 325.794 658.184 325.794 cv
658.187 325.794 658.191 325.794 658.193 325.794 cv
658.14 325.794 mo
658.137 325.794 658.133 325.794 658.13 325.793 cv
658.134 325.794 658.137 325.794 658.14 325.794 cv
658.791 325.793 mo
658.91 325.793 659.029 325.791 659.148 325.789 cv
660.267 325.773 661.373 325.757 662.47 325.757 cv
662.47 325.757 li
661.373 325.757 660.267 325.773 659.148 325.789 cv
659.029 325.791 658.91 325.793 658.791 325.793 cv
658.086 325.793 mo
658.083 325.793 658.079 325.793 658.077 325.793 cv
658.08 325.793 658.083 325.793 658.086 325.793 cv
658.031 325.793 mo
658.029 325.793 658.026 325.793 658.024 325.793 cv
658.026 325.793 658.029 325.793 658.031 325.793 cv
657.975 325.792 mo
657.975 325.792 657.973 325.792 657.973 325.792 cv
657.973 325.792 657.975 325.792 657.975 325.792 cv
655.473 325.708 mo
655.472 325.708 655.471 325.708 655.47 325.708 cv
655.471 325.708 655.472 325.708 655.473 325.708 cv
655.419 325.705 mo
655.418 325.705 655.418 325.705 655.418 325.705 cv
655.418 325.705 655.418 325.705 655.419 325.705 cv
655.048 325.683 mo
655.047 325.683 655.046 325.683 655.045 325.683 cv
655.046 325.683 655.047 325.683 655.048 325.683 cv
655 325.68 mo
654.997 325.68 654.994 325.68 654.991 325.679 cv
654.994 325.68 654.997 325.68 655 325.68 cv
654.948 325.677 mo
654.944 325.676 654.941 325.676 654.937 325.676 cv
654.941 325.676 654.944 325.676 654.948 325.677 cv
654.892 325.673 mo
654.89 325.673 654.886 325.673 654.883 325.672 cv
654.886 325.673 654.889 325.673 654.892 325.673 cv
654.841 325.67 mo
654.837 325.669 654.832 325.669 654.828 325.669 cv
654.832 325.669 654.837 325.669 654.841 325.67 cv
654.788 325.666 mo
654.782 325.666 654.777 325.665 654.772 325.665 cv
654.777 325.665 654.782 325.666 654.788 325.666 cv
654.737 325.663 mo
654.73 325.662 654.723 325.662 654.716 325.661 cv
654.723 325.662 654.73 325.662 654.737 325.663 cv
654.68 325.659 mo
654.674 325.658 654.667 325.658 654.66 325.658 cv
654.667 325.658 654.674 325.658 654.68 325.659 cv
654.63 325.655 mo
654.62 325.655 654.61 325.654 654.601 325.653 cv
654.61 325.654 654.62 325.655 654.63 325.655 cv
654.575 325.652 mo
654.564 325.651 654.554 325.65 654.544 325.649 cv
654.554 325.65 654.564 325.651 654.575 325.652 cv
654.52 325.648 mo
654.51 325.647 654.5 325.646 654.489 325.646 cv
654.5 325.646 654.51 325.647 654.52 325.648 cv
654.464 325.644 mo
654.451 325.643 654.437 325.642 654.424 325.641 cv
654.437 325.642 654.451 325.643 654.464 325.644 cv
654.411 325.64 mo
654.396 325.639 654.38 325.638 654.364 325.637 cv
654.38 325.638 654.396 325.639 654.411 325.64 cv
654.355 325.636 mo
654.317 325.633 654.28 325.63 654.242 325.628 cv
654.28 325.63 654.317 325.633 654.355 325.636 cv
654.24 325.627 mo
654.221 325.626 654.204 325.625 654.185 325.623 cv
654.203 325.625 654.222 325.626 654.24 325.627 cv
654.182 325.623 mo
654.166 325.622 654.149 325.621 654.132 325.619 cv
654.149 325.621 654.165 325.622 654.182 325.623 cv
654.116 325.618 mo
654.103 325.617 654.09 325.616 654.077 325.615 cv
654.09 325.616 654.103 325.617 654.116 325.618 cv
654.059 325.614 mo
654.047 325.613 654.034 325.612 654.022 325.611 cv
654.034 325.612 654.047 325.613 654.059 325.614 cv
654.004 325.609 mo
653.991 325.608 653.977 325.607 653.964 325.606 cv
653.977 325.607 653.991 325.608 654.004 325.609 cv
653.949 325.605 mo
653.936 325.604 653.923 325.603 653.91 325.602 cv
653.923 325.603 653.936 325.604 653.949 325.605 cv
653.892 325.6 mo
653.878 325.599 653.864 325.598 653.85 325.597 cv
653.864 325.598 653.878 325.599 653.892 325.6 cv
653.84 325.596 mo
653.823 325.595 653.807 325.594 653.79 325.592 cv
653.806 325.594 653.823 325.595 653.84 325.596 cv
653.786 325.592 mo
650.801 325.35 647.823 324.924 644.868 324.504 cv
644.868 324.504 li
647.823 324.924 650.801 325.35 653.786 325.592 cv
.290196 .247059 .184314 rgb
f
682.32 328.687 mo
679.389 328.185 676.474 327.602 673.583 326.874 cv
673.583 326.874 li
673.583 326.874 li
669.866 325.939 666.217 325.757 662.471 325.757 cv
662.47 325.757 li
662.47 325.757 li
661.373 325.757 660.267 325.773 659.148 325.789 cv
659.029 325.791 658.91 325.793 658.791 325.793 cv
658.678 325.794 658.566 325.795 658.453 325.795 cv
658.384 325.795 658.316 325.794 658.247 325.794 cv
658.244 325.794 658.241 325.794 658.238 325.794 cv
658.224 325.794 658.208 325.794 658.193 325.794 cv
658.191 325.794 658.187 325.794 658.184 325.794 cv
658.17 325.794 658.155 325.794 658.14 325.794 cv
658.137 325.794 658.134 325.794 658.13 325.793 cv
658.115 325.793 658.101 325.793 658.086 325.793 cv
658.083 325.793 658.08 325.793 658.077 325.793 cv
658.061 325.793 658.046 325.793 658.031 325.793 cv
658.029 325.793 658.026 325.793 658.024 325.793 cv
658.008 325.793 657.992 325.792 657.975 325.792 cv
657.975 325.792 657.973 325.792 657.973 325.792 cv
657.139 325.784 656.306 325.754 655.473 325.708 cv
655.472 325.708 655.471 325.708 655.47 325.708 cv
655.453 325.707 655.436 325.706 655.419 325.705 cv
655.418 325.705 655.418 325.705 655.418 325.705 cv
655.294 325.698 655.171 325.691 655.048 325.683 cv
655.047 325.683 655.046 325.683 655.045 325.683 cv
655.031 325.682 655.015 325.681 655 325.68 cv
654.997 325.68 654.994 325.68 654.991 325.679 cv
654.976 325.678 654.962 325.677 654.948 325.677 cv
654.944 325.676 654.941 325.676 654.937 325.676 cv
654.922 325.675 654.907 325.674 654.892 325.673 cv
654.889 325.673 654.886 325.673 654.883 325.672 cv
654.869 325.671 654.855 325.671 654.841 325.67 cv
654.837 325.669 654.832 325.669 654.828 325.669 cv
654.814 325.668 654.801 325.667 654.788 325.666 cv
654.782 325.666 654.777 325.665 654.772 325.665 cv
654.76 325.664 654.748 325.663 654.737 325.663 cv
654.73 325.662 654.723 325.662 654.716 325.661 cv
654.704 325.66 654.692 325.66 654.68 325.659 cv
654.674 325.658 654.667 325.658 654.66 325.658 cv
654.65 325.657 654.64 325.656 654.63 325.655 cv
654.62 325.655 654.61 325.654 654.601 325.653 cv
654.592 325.653 654.583 325.652 654.575 325.652 cv
654.564 325.651 654.554 325.65 654.544 325.649 cv
654.536 325.649 654.528 325.648 654.52 325.648 cv
654.51 325.647 654.5 325.646 654.489 325.646 cv
654.481 325.645 654.473 325.644 654.464 325.644 cv
654.451 325.643 654.437 325.642 654.424 325.641 cv
654.42 325.641 654.415 325.64 654.411 325.64 cv
654.396 325.639 654.38 325.638 654.364 325.637 cv
654.361 325.636 654.358 325.636 654.355 325.636 cv
654.317 325.633 654.28 325.63 654.242 325.628 cv
654.242 325.628 654.24 325.627 654.24 325.627 cv
654.222 325.626 654.203 325.625 654.185 325.623 cv
654.185 325.623 654.183 325.623 654.182 325.623 cv
654.165 325.622 654.149 325.621 654.132 325.619 cv
654.127 325.619 654.121 325.618 654.116 325.618 cv
654.103 325.617 654.09 325.616 654.077 325.615 cv
654.071 325.615 654.065 325.614 654.059 325.614 cv
654.047 325.613 654.034 325.612 654.022 325.611 cv
654.016 325.61 654.01 325.61 654.004 325.609 cv
653.991 325.608 653.977 325.607 653.964 325.606 cv
653.959 325.606 653.954 325.605 653.949 325.605 cv
653.936 325.604 653.923 325.603 653.91 325.602 cv
653.904 325.601 653.898 325.601 653.892 325.6 cv
653.878 325.599 653.864 325.598 653.85 325.597 cv
653.846 325.597 653.843 325.597 653.84 325.596 cv
653.823 325.595 653.806 325.594 653.79 325.592 cv
653.789 325.592 653.787 325.592 653.786 325.592 cv
650.801 325.35 647.823 324.924 644.868 324.504 cv
650.095 322.915 655.102 320.52 660.153 318.56 cv
661.672 298.826 661.273 279.092 664.175 259.358 cv
672.473 280.102 675.028 302.568 681.856 323.975 cv
682.028 324.1 682.201 324.224 682.373 324.348 cv
682.364 325.127 682.355 325.904 682.346 326.676 cv
682.337 327.351 682.328 328.018 682.32 328.687 cv
.501961 .411765 .352941 rgb
f
637.925 153.63 mo
636.342 152.13 634.757 150.631 633.16 149.146 cv
634.757 150.631 636.343 152.129 637.926 153.63 cv
637.925 153.63 637.925 153.63 637.925 153.63 cv
637.925 153.63 li
637.925 153.63 li
642.096 150.633 mo
640.505 149.49 638.949 148.242 637.29 147.2 cv
638.949 148.242 640.505 149.489 642.097 150.633 cv
642.096 150.633 642.096 150.633 642.096 150.633 cv
632.974 148.973 mo
632.971 148.97 632.968 148.967 632.966 148.964 cv
632.968 148.967 632.971 148.97 632.974 148.973 cv
632.96 148.958 mo
632.959 148.957 632.959 148.956 632.958 148.956 cv
632.959 148.956 632.959 148.957 632.96 148.958 cv
632.955 148.953 mo
632.356 148.27 632.597 144.956 632.555 144.11 cv
632.516 143.306 632.477 142.502 632.438 141.699 cv
632.4 140.926 632.194 140.823 631.77 140.823 cv
631.77 140.823 li
632.194 140.823 632.4 140.926 632.438 141.699 cv
632.477 142.502 632.516 143.306 632.555 144.109 cv
632.597 144.956 632.356 148.27 632.955 148.953 cv
637.286 147.197 mo
637.275 147.19 637.264 147.183 637.253 147.176 cv
637.264 147.183 637.275 147.19 637.286 147.197 cv
637.245 147.171 mo
637.218 147.154 637.191 147.138 637.164 147.121 cv
637.191 147.138 637.218 147.154 637.245 147.171 cv
631.22 140.836 mo
631.112 140.836 630.996 140.833 630.872 140.823 cv
629.956 140.746 629.047 140.633 628.144 140.481 cv
629.047 140.633 629.956 140.746 630.872 140.823 cv
630.996 140.833 631.112 140.836 631.22 140.836 cv
631.327 140.836 631.426 140.833 631.518 140.83 cv
631.529 140.829 631.54 140.829 631.552 140.828 cv
631.54 140.829 631.529 140.829 631.518 140.83 cv
631.426 140.833 631.327 140.836 631.22 140.836 cv
625.455 139.907 mo
625.455 139.907 li
624.265 139.601 623.144 139.204 622.091 138.722 cv
622.091 138.722 li
623.144 139.204 624.265 139.601 625.455 139.907 cv
625.455 139.907 li
.705882 .701961 .807843 rgb
f
622.091 138.722 mo
617.526 136.635 614.22 132.96 611.983 128.264 cv
611.983 128.264 li
614.22 132.96 617.526 136.634 622.091 138.722 cv
622.091 138.722 li
.643137 .623529 .678431 rgb
f
628.832 137.288 mo
628.832 137.288 li
629.367 137.288 629.903 137.273 630.438 137.247 cv
629.903 137.273 629.367 137.288 628.832 137.288 cv
631.535 137.221 mo
631.497 137.22 631.458 137.219 631.417 137.218 cv
631.458 137.219 631.497 137.22 631.535 137.221 cv
632.192 136.55 mo
632.192 136.5 632.191 136.446 632.188 136.388 cv
632.18 136.194 632.174 136.008 632.168 135.828 cv
632.174 136.008 632.18 136.194 632.188 136.387 cv
632.191 136.446 632.192 136.5 632.192 136.55 cv
634.334 135.96 mo
634.273 135.676 634.212 135.392 634.151 135.108 cv
634.151 135.108 li
634.212 135.392 634.273 135.676 634.334 135.96 cv
.705882 .701961 .807843 rgb
f
634.151 135.108 mo
633.931 134.086 633.711 133.064 633.492 132.042 cv
633.712 133.064 633.931 134.086 634.151 135.108 cv
634.151 135.108 li
.658823 .643137 .729412 rgb
f
637.926 153.63 mo
636.343 152.129 634.757 150.631 633.16 149.146 cv
633.103 149.093 633.046 149.04 632.989 148.987 cv
632.989 148.987 li
632.989 148.987 li
632.984 148.983 632.979 148.978 632.974 148.973 cv
632.971 148.97 632.968 148.967 632.966 148.964 cv
632.964 148.962 632.962 148.96 632.96 148.958 cv
632.959 148.957 632.959 148.956 632.958 148.956 cv
632.957 148.955 632.956 148.954 632.955 148.953 cv
632.356 148.27 632.597 144.956 632.555 144.109 cv
632.516 143.306 632.477 142.502 632.438 141.699 cv
632.4 140.926 632.194 140.823 631.77 140.823 cv
631.77 140.823 li
631.77 140.823 li
631.703 140.823 631.63 140.826 631.552 140.828 cv
631.54 140.829 631.529 140.829 631.518 140.83 cv
631.426 140.833 631.327 140.836 631.22 140.836 cv
631.112 140.836 630.996 140.833 630.872 140.823 cv
629.956 140.746 629.047 140.633 628.144 140.481 cv
627.242 140.329 626.346 140.139 625.455 139.907 cv
625.455 139.907 li
624.265 139.601 623.144 139.204 622.091 138.722 cv
617.526 136.634 614.22 132.96 611.983 128.264 cv
614.248 131.528 616.884 134.254 620.622 135.805 cv
622.87 136.737 625.313 137.163 627.735 137.266 cv
628.101 137.281 628.466 137.288 628.832 137.288 cv
628.832 137.288 li
628.832 137.288 li
629.367 137.288 629.903 137.273 630.438 137.247 cv
630.588 137.239 630.738 137.231 630.888 137.222 cv
630.985 137.216 631.077 137.214 631.164 137.214 cv
631.254 137.214 631.339 137.216 631.417 137.218 cv
631.417 137.218 li
631.458 137.219 631.497 137.22 631.535 137.221 cv
631.57 137.222 631.603 137.223 631.634 137.223 cv
632.016 137.223 632.192 137.146 632.192 136.55 cv
632.192 136.5 632.191 136.446 632.188 136.387 cv
632.18 136.194 632.174 136.008 632.168 135.828 cv
632.108 133.933 632.123 132.721 630.902 131.047 cv
630.902 131.047 li
629.759 129.481 628.616 127.914 627.473 126.347 cv
625.684 123.867 623.901 121.382 622.135 118.885 cv
624.983 122.114 627.799 125.367 630.593 128.642 cv
631.559 129.775 632.525 130.908 633.492 132.042 cv
633.492 132.042 li
633.711 133.064 633.931 134.086 634.151 135.108 cv
634.212 135.392 634.273 135.676 634.334 135.96 cv
634.334 135.96 li
634.882 138.508 635.407 141.06 635.938 143.611 cv
636.14 144.584 636.189 146.517 637.164 147.121 cv
637.164 147.121 li
637.191 147.138 637.218 147.154 637.245 147.171 cv
637.247 147.173 637.25 147.175 637.253 147.176 cv
637.264 147.183 637.275 147.19 637.286 147.197 cv
637.287 147.198 637.289 147.199 637.29 147.2 cv
638.949 148.242 640.505 149.49 642.096 150.633 cv
640.783 151.756 639.394 152.769 637.926 153.63 cv
.501961 .411765 .352941 rgb
f
637.925 153.63 mo
637.925 153.63 li
637.925 153.63 637.925 153.63 637.926 153.63 cv
639.394 152.769 640.783 151.756 642.096 150.633 cv
642.096 150.633 642.096 150.633 642.097 150.633 cv
642.097 150.633 li
640.784 151.756 639.394 152.769 637.925 153.63 cv
f
714.563 1.3471 mo
714.545 1.58548 714.56 1.39982 714.574 1.21395 cv
714.593 .981656 714.611 .749141 714.563 1.3471 cv
.690196 .556863 .396078 rgb
f
106.853 138.862 mo
106.95 138.736 li
106.853 138.862 li
cp
.470588 .392157 .262745 rgb
f
106.95 138.736 mo
106.853 138.862 li
106.799 138.94 107.286 138.342 106.95 138.736 cv
cp
f
63.8043 138.341 mo
63.0342 164.562 62.2641 190.782 61.4938 217.002 cv
60.6671 245.141 57.7215 273.263 55.5858 301.327 cv
55.3506 304.416 55.1156 307.505 54.8804 310.595 cv
54.8331 311.217 54.7858 311.84 54.7382 312.463 cv
54.697 313.005 52.4872 314.31 52.0373 314.654 cv
50.0703 316.159 48.0604 317.6 46.0473 319.042 cv
53.4085 320.03 60.8206 319.661 68.1802 320.4 cv
71.8164 320.764 75.2271 322.214 78.7202 323.186 cv
82.4702 324.229 86.3612 324.841 90.2182 325.326 cv
88.0607 323.173 85.9196 321.002 83.8637 318.752 cv
87.0939 318.113 90.2547 317.144 93.4 316.184 cv
92.3904 315.823 84.8541 313.597 84.8327 312.751 cv
84.8199 312.239 84.8071 311.727 84.7942 311.215 cv
84.7323 308.741 84.6701 306.266 84.6081 303.792 cv
84.3925 295.202 84.1769 286.612 83.9613 278.023 cv
83.6118 264.102 83.2626 250.181 82.9131 236.261 cv
82.6049 223.977 82.9652 211.7 83.1641 199.413 cv
83.2743 192.613 83.3842 185.814 83.494 179.015 cv
83.5422 176.036 83.5904 173.057 83.6384 170.078 cv
83.6657 168.399 83.6927 166.721 83.72 165.042 cv
83.7346 164.129 87.6286 161.427 88.2763 160.835 cv
89.9035 159.349 93.0386 157.421 93.555 155.295 cv
93.886 153.934 93.7787 152.484 95.1355 151.957 cv
96.6387 151.374 98.0447 150.528 99.2996 149.518 cv
103.144 146.427 104.694 141.813 107.579 137.998 cv
107.369 138.244 107.159 138.49 106.95 138.736 cv
107.149 138.501 107.058 138.618 106.963 138.735 cv
106.898 138.814 106.831 138.893 106.853 138.862 cv
103.325 143.399 100.621 148.666 94.7243 150.483 cv
96.481 143.248 98.2393 136.014 99.9969 128.78 cv
97.8189 134.906 95.6163 141.023 93.4468 147.151 cv
92.6563 149.347 92.0932 152.453 90.8173 154.43 cv
89.3898 156.642 85.7155 158.572 83.6156 160.25 cv
82.9656 135.138 82.3161 110.025 81.6663 84.9125 cv
80.9764 58.2552 80.2863 31.598 79.5966 4.94095 cv
79.5541 3.29487 79.5027 1.64766 79.4488 0 cv
62.7548 0 li
62.9792 19.4874 63.2036 38.9749 63.4278 58.4623 cv
63.7342 85.0729 64.5854 111.739 63.8043 138.341 cv
f
106.95 138.736 mo
106.853 138.862 li
106.95 138.736 li
cp
f
106.853 138.862 mo
106.798 138.941 107.286 138.341 106.95 138.736 cv
106.853 138.862 li
cp
f
90.218 325.326 mo
90.0242 325.301 89.8303 325.276 89.6364 325.251 cv
89.8303 325.276 90.0245 325.301 90.2182 325.326 cv
90.218 325.326 90.218 325.326 90.218 325.326 cv
85.2132 324.602 mo
83.0248 324.232 80.8497 323.779 78.7202 323.186 cv
78.6247 323.159 78.5292 323.132 78.4338 323.105 cv
78.5292 323.132 78.6247 323.159 78.7202 323.186 cv
80.8497 323.778 83.0248 324.232 85.2132 324.602 cv
60.1003 319.914 mo
55.4129 319.75 50.7198 319.669 46.0473 319.042 cv
46.0473 319.042 li
50.7199 319.669 55.4131 319.75 60.1003 319.914 cv
46.0473 319.042 mo
47.9973 317.645 49.9447 316.249 51.8527 314.795 cv
49.9447 316.249 47.9975 317.645 46.0473 319.042 cv
86.2852 313.704 mo
85.4227 313.327 84.8387 312.986 84.8327 312.751 cv
84.8199 312.239 84.8071 311.727 84.7942 311.215 cv
84.8071 311.727 84.8199 312.239 84.833 312.751 cv
84.8388 312.986 85.4227 313.327 86.2852 313.704 cv
54.7382 312.463 mo
54.7739 311.996 54.8094 311.528 54.8449 311.062 cv
54.8094 311.529 54.7739 311.996 54.7382 312.463 cv
.278431 .184314 .137255 rgb
f
55.5858 301.327 mo
55.5938 301.222 55.6019 301.116 55.6099 301.011 cv
55.6019 301.115 55.5938 301.222 55.5858 301.327 cv
55.6158 300.933 mo
55.6218 300.854 55.6279 300.776 55.6339 300.697 cv
55.6279 300.776 55.6218 300.854 55.6158 300.933 cv
55.6411 300.603 mo
55.6468 300.529 55.6525 300.454 55.6582 300.38 cv
55.6525 300.453 55.6467 300.529 55.6411 300.603 cv
55.6659 300.279 mo
55.6716 300.205 55.6774 300.13 55.6831 300.055 cv
55.6774 300.129 55.6715 300.206 55.6659 300.279 cv
55.6895 299.973 mo
55.6961 299.886 55.7025 299.804 55.7091 299.718 cv
55.7025 299.803 55.696 299.887 55.6895 299.973 cv
.678431 .521569 .454902 rgb
f
57.9097 272.926 mo
57.9088 272.926 li
58.2188 269.215 58.5258 265.501 58.8229 261.788 cv
58.8245 261.788 li
58.5271 265.503 58.2201 269.213 57.9097 272.926 cv
60.5303 237.97 mo
60.5275 237.97 li
60.7347 234.536 60.9211 231.106 61.0817 227.671 cv
61.0847 227.671 li
60.9242 231.104 60.7375 234.538 60.5303 237.97 cv
.898039 .772549 .827451 rgb
f
57.6956 275.482 mo
57.6948 275.481 li
57.7663 274.629 57.8376 273.778 57.9088 272.926 cv
57.9097 272.926 li
57.8386 273.776 57.767 274.631 57.6956 275.482 cv
.917647 .803922 .862745 rgb
f
58.8245 261.788 mo
58.8229 261.788 li
59.458 253.851 60.048 245.912 60.5275 237.97 cv
60.5303 237.97 li
60.0507 245.912 59.4601 253.852 58.8245 261.788 cv
f
61.0847 227.671 mo
61.0817 227.671 li
61.0976 227.331 61.1134 226.988 61.1288 226.647 cv
61.1288 226.647 li
61.1288 226.647 li
61.1297 226.647 61.1309 226.647 61.1318 226.647 cv
61.1164 226.988 61.1007 227.33 61.0847 227.671 cv
f
55.7133 299.663 mo
56.3351 291.608 57.0188 283.545 57.6948 275.481 cv
57.6956 275.482 li
57.019 283.546 56.3353 291.607 55.7133 299.663 cv
.678431 .521569 .454902 rgb
f
82.9131 236.261 mo
82.9114 236.192 82.9097 236.122 82.908 236.053 cv
82.9097 236.122 82.9114 236.191 82.9131 236.261 cv
82.9073 236.024 mo
82.8393 233.239 82.8055 230.455 82.7961 227.671 cv
82.797 227.671 li
82.8061 230.455 82.8394 233.24 82.9073 236.024 cv
.898039 .772549 .827451 rgb
f
82.797 227.671 mo
82.7961 227.671 li
82.7896 225.756 82.7946 223.842 82.8081 221.926 cv
82.8085 221.926 82.8091 221.926 82.8095 221.926 cv
82.796 223.841 82.7908 225.756 82.797 227.671 cv
.917647 .803922 .862745 rgb
f
90.2182 325.326 mo
90.0245 325.301 89.8303 325.276 89.6364 325.251 cv
88.1623 325.061 86.6849 324.85 85.2132 324.602 cv
83.0248 324.232 80.8497 323.778 78.7202 323.186 cv
78.6247 323.159 78.5292 323.132 78.4338 323.105 cv
75.0404 322.135 71.7172 320.754 68.1804 320.4 cv
65.4923 320.13 62.7973 320.008 60.1003 319.914 cv
55.4131 319.75 50.7199 319.669 46.0473 319.042 cv
46.0473 319.042 li
47.9975 317.645 49.9447 316.249 51.8527 314.795 cv
51.9143 314.748 51.9758 314.701 52.0373 314.654 cv
52.4872 314.31 54.697 313.005 54.7382 312.463 cv
54.7382 312.463 li
54.7739 311.996 54.8094 311.529 54.8449 311.062 cv
54.8567 310.906 54.8686 310.75 54.8804 310.595 cv
55.1156 307.505 55.3506 304.416 55.5858 301.327 cv
55.5858 301.327 li
55.5938 301.222 55.6019 301.115 55.6099 301.011 cv
55.6119 300.985 55.6138 300.959 55.6158 300.933 cv
55.6218 300.854 55.6279 300.776 55.6339 300.697 cv
55.6363 300.665 55.6386 300.635 55.6411 300.603 cv
55.6467 300.529 55.6525 300.453 55.6582 300.38 cv
55.6607 300.346 55.6633 300.313 55.6659 300.279 cv
55.6715 300.206 55.6774 300.129 55.6831 300.055 cv
55.6852 300.028 55.6873 300 55.6895 299.973 cv
55.696 299.887 55.7025 299.803 55.7091 299.718 cv
55.7105 299.699 55.7119 299.681 55.7133 299.663 cv
56.3353 291.607 57.019 283.546 57.6956 275.482 cv
57.767 274.631 57.8386 273.776 57.9097 272.926 cv
58.2201 269.213 58.5271 265.503 58.8245 261.788 cv
59.4601 253.852 60.0507 245.912 60.5303 237.97 cv
60.7375 234.538 60.9242 231.104 61.0847 227.671 cv
61.1007 227.33 61.1164 226.988 61.1318 226.647 cv
68.4211 225.564 75.6911 223.981 82.8081 221.926 cv
82.7946 223.842 82.7896 225.756 82.7961 227.671 cv
82.8055 230.455 82.8393 233.239 82.9073 236.024 cv
82.9075 236.034 82.9078 236.043 82.908 236.053 cv
82.9097 236.122 82.9114 236.192 82.9131 236.261 cv
82.9131 236.261 li
83.2626 250.181 83.6118 264.102 83.9613 278.023 cv
84.1769 286.612 84.3925 295.202 84.6081 303.792 cv
84.6701 306.266 84.7323 308.741 84.7942 311.215 cv
84.7942 311.215 li
84.8071 311.727 84.8199 312.239 84.8327 312.751 cv
84.8387 312.986 85.4227 313.327 86.2852 313.704 cv
88.5324 314.689 92.6704 315.923 93.4 316.184 cv
93.4 316.184 li
90.3282 317.122 87.2421 318.068 84.0907 318.706 cv
84.0151 318.722 83.9394 318.737 83.8637 318.752 cv
83.8637 318.752 li
83.8637 318.752 li
85.9196 321.003 88.0609 323.173 90.218 325.326 cv
.435294 .321569 .239216 rgb
f
63.0944 29.4772 mo
63.2054 39.1387 63.3167 48.8005 63.4278 58.4623 cv
63.46 61.2381 63.5058 64.0156 63.5468 66.7923 cv
69.3358 68.9552 75.2951 71.0064 81.3261 71.7702 cv
80.9719 58.082 80.6175 44.3935 80.2633 30.7053 cv
74.55 30.8434 68.7948 30.2333 63.0944 29.4772 cv
.470588 .392157 .262745 rgb
f
64.5874 29.6713 mo
64.1804 29.6196 63.7728 29.5667 63.3663 29.5131 cv
63.3479 29.5107 63.3295 29.5083 63.311 29.5058 cv
63.2387 29.4963 63.1667 29.4868 63.0944 29.4772 cv
63.0944 29.4772 li
63.0944 29.4772 li
63.0944 29.4772 li
63.0659 27.0076 63.0374 24.5378 63.009 22.0683 cv
63.5352 24.603 64.0612 27.1366 64.5874 29.6713 cv
79.5517 3.35625 mo
79.3195 2.23748 79.0872 1.11875 78.8549 0 cv
69.9486 0 li
69.9486 0 li
69.9486 0 li
79.4434 0 li
79.4801 1.11884 79.5179 2.23791 79.5517 3.35625 cv
.435294 .321569 .239216 rgb
f
69.9486 0 mo
62.7548 0 li
62.7605 .481478 62.7661 .963181 62.7715 1.44466 cv
65.1708 .986163 67.5608 .498376 69.9486 0 cv
.470588 .392157 .262745 rgb
f
63.8674 87.1162 mo
63.867 87.1161 63.8668 87.1161 63.8665 87.116 cv
63.8476 85.9112 63.8285 84.707 63.8093 83.5023 cv
63.8095 83.5023 li
63.8292 84.7069 63.8485 85.9116 63.8674 87.1162 cv
.898039 .772549 .827451 rgb
f
63.8095 83.5023 mo
63.8093 83.5023 li
63.8064 83.3208 63.8035 83.1384 63.8006 82.9569 cv
63.8036 83.1373 63.8066 83.3219 63.8095 83.5023 cv
.772549 .643137 .670588 rgb
f
81.8198 91.8614 mo
75.7576 90.3657 69.7868 88.819 63.8674 87.1162 cv
63.8485 85.9116 63.8292 84.7069 63.8095 83.5023 cv
63.8066 83.3219 63.8036 83.1373 63.8006 82.9569 cv
63.7146 77.5675 63.6267 72.1795 63.5468 66.7923 cv
65.7547 67.6173 67.9874 68.4259 70.2394 69.1531 cv
72.0172 71.2944 73.4453 73.7531 74.4108 76.6359 cv
74.4187 76.6595 74.4268 76.6836 74.4347 76.7072 cv
74.4375 76.7155 74.4393 76.7209 74.4421 76.7292 cv
74.4478 76.746 74.4535 76.763 74.4592 76.7798 cv
74.462 76.788 74.4644 76.7952 74.4672 76.8034 cv
74.4741 76.8239 74.4811 76.8446 74.4881 76.8651 cv
74.4892 76.8684 74.4905 76.872 74.4916 76.8753 cv
74.4994 76.8983 74.5072 76.9213 74.5151 76.9442 cv
74.5179 76.9525 74.5202 76.9591 74.523 76.9673 cv
74.5287 76.9841 74.5344 77.0006 74.5401 77.0173 cv
74.543 77.0256 74.5455 77.033 74.5483 77.0412 cv
74.5544 77.0589 74.5604 77.0764 74.5665 77.0941 cv
74.5694 77.1024 74.5734 77.1141 74.5763 77.1223 cv
74.5828 77.1412 74.5895 77.1605 74.596 77.1794 cv
74.5995 77.1893 74.6032 77.2002 74.6067 77.2101 cv
74.6113 77.2234 74.6158 77.2362 74.6204 77.2495 cv
74.6244 77.261 74.6279 77.2712 74.632 77.2827 cv
74.6361 77.2945 74.6401 77.306 74.6442 77.3177 cv
74.6528 77.3424 74.662 77.3686 74.6707 77.3932 cv
74.673 77.3997 74.6751 77.4058 74.6774 77.4123 cv
74.6832 77.4288 74.6879 77.4421 74.6936 77.4585 cv
74.6959 77.465 74.6982 77.4714 74.7005 77.4779 cv
74.7063 77.4943 74.712 77.5105 74.7178 77.5269 cv
74.719 77.5303 74.7202 77.5337 74.7214 77.5371 cv
76.4778 82.4918 78.9519 87.2373 81.8198 91.8614 cv
.435294 .321569 .239216 rgb
f
106.853 138.862 mo
103.325 143.398 100.621 148.667 94.7243 150.483 cv
96.481 143.248 98.2393 136.014 99.9969 128.78 cv
97.8191 134.906 95.6165 141.023 93.4468 147.151 cv
92.6563 149.347 92.0932 152.453 90.8173 154.43 cv
89.3898 156.642 85.7157 158.572 83.6156 160.25 cv
83.0256 137.456 82.4359 114.662 81.8463 91.8679 cv
75.7746 90.3701 69.7949 88.8213 63.8665 87.116 cv
64.1339 104.196 64.3051 121.282 63.8043 138.341 cv
63.0342 164.562 62.2641 190.782 61.4938 217.002 cv
61.3996 220.217 61.2741 223.432 61.1288 226.647 cv
68.4194 225.564 75.6912 223.981 82.8095 221.926 cv
82.8622 214.423 83.0427 206.919 83.1644 199.413 cv
83.2743 192.613 83.3842 185.814 83.494 179.015 cv
83.5422 176.036 83.5904 173.057 83.6384 170.078 cv
83.6657 168.399 83.6929 166.721 83.72 165.043 cv
83.7346 164.129 87.6286 161.427 88.2763 160.835 cv
89.9035 159.349 93.0386 157.421 93.555 155.295 cv
93.8857 153.934 93.7787 152.484 95.1355 151.957 cv
96.6387 151.374 98.0444 150.528 99.2996 149.518 cv
103.144 146.426 104.694 141.813 107.579 137.998 cv
107.369 138.244 107.159 138.49 106.95 138.736 cv
107.149 138.501 107.058 138.618 106.963 138.735 cv
106.898 138.814 106.83 138.894 106.853 138.862 cv
.470588 .392157 .262745 rgb
f
769.764 158.117 mo
767.768 156.519 764.93 154.247 761.166 151.235 cv
761.1 151.128 li
761.082 151.097 li
761.033 150.963 li
760.934 150.692 li
760.802 150.328 760.666 149.955 760.528 149.574 cv
760.479 149.44 760.428 149.3 760.379 149.164 cv
760.148 148.525 759.91 147.869 759.665 147.191 cv
759.623 147.075 759.577 146.949 759.535 146.831 cv
758.979 145.288 758.396 143.668 757.797 142.005 cv
756.516 138.422 755.177 134.679 753.962 131.28 cv
751.543 124.479 749.615 119.056 749.615 119.056 cv
749.615 119.056 753.319 134.3 756.201 146.165 cv
753.769 145.416 751.049 143.926 748.871 141.753 cv
746.29 139.299 744.325 136.285 742.814 134.098 cv
742.063 132.996 741.407 132.101 740.93 131.493 cv
740.429 130.905 740.144 130.57 740.144 130.57 cv
740.144 130.57 740.399 130.926 740.848 131.553 cv
741.271 132.197 741.845 133.136 742.501 134.294 cv
743.825 136.595 745.531 139.783 748.018 142.575 cv
750.411 145.399 753.806 147.479 756.738 148.373 cv
757.172 150.161 757.58 151.839 757.942 153.329 cv
764.71 159.513 768.556 163.027 769.947 164.298 cv
771.218 242.914 li
771.216 242.914 li
768.555 348.981 li
765.01 350.497 761.447 351.866 757.856 353.151 cv
761.812 354.358 765.765 355.562 769.768 356.358 cv
767.168 359.205 764.508 361.898 761.83 364.57 cv
766.204 364.02 770.556 363.306 774.89 362.24 cv
780.091 360.96 785.413 358.5 790.676 358.328 cv
799.477 358.041 808.223 357.901 817.006 356.72 cv
815.72 355.799 814.434 354.878 813.148 353.957 cv
812.948 353.81 812.893 353.769 812.917 353.785 cv
810.645 352.115 808.394 350.39 806.159 348.616 cv
798.111 242.87 li
794.338 114.4 li
795.655 0 li
774.176 0 li
770.078 158.367 li
769.972 158.283 769.875 158.205 769.764 158.117 cv
.572549 .486275 .317647 rgb
f
814.483 357.024 mo
809.93 355.126 805.686 352.55 801.751 349.433 cv
800.098 343.753 799.458 338.074 798.827 332.394 cv
798.827 335.902 796.722 338.708 796.021 342.216 cv
791.867 327.381 788.226 312.042 785.5 296.627 cv
785.5 296.627 li
785.5 296.627 li
785.51 302.425 785.574 308.285 785.574 314.167 cv
785.574 317.577 785.552 320.993 785.485 324.41 cv
782.18 322.686 778.278 320.654 775.655 319.294 cv
775.655 319.294 li
773.832 318.347 772.612 317.715 772.612 317.715 cv
772.612 317.715 li
772.612 317.715 li
772.152 318.826 771.69 319.936 771.228 321.045 cv
770.651 317.618 770.08 314.194 769.513 310.773 cv
770.958 253.197 li
770.958 253.197 li
780.239 252.149 789.432 251.074 798.672 250.24 cv
798.672 250.24 li
798.672 250.24 li
806.159 348.616 li
808.394 350.39 810.645 352.115 812.917 353.785 cv
812.914 353.783 812.912 353.781 812.912 353.781 cv
812.912 353.781 812.912 353.781 812.912 353.781 cv
812.912 353.783 812.977 353.831 813.148 353.957 cv
814.434 354.878 815.72 355.799 817.006 356.72 cv
817.006 356.72 li
816.165 356.833 815.324 356.929 814.483 357.024 cv
782.047 352.498 mo
782.681 350.24 783.432 348.018 784.258 345.808 cv
784.091 347.394 783.903 348.975 783.691 350.553 cv
783.154 351.207 782.606 351.856 782.047 352.498 cv
.529412 .396078 .290196 rgb
f
780.372 360.616 mo
780.599 358.827 780.92 357.078 781.316 355.356 cv
781.537 354.395 781.782 353.444 782.047 352.498 cv
782.606 351.856 783.154 351.207 783.691 350.553 cv
783.903 348.975 784.091 347.394 784.258 345.808 cv
786.477 339.872 789.242 334.008 791.751 327.681 cv
791.751 327.681 li
791.751 327.681 li
791.746 327.677 788.942 326.213 785.485 324.41 cv
785.552 320.993 785.574 317.577 785.574 314.167 cv
785.574 308.285 785.51 302.425 785.5 296.627 cv
788.226 312.042 791.867 327.381 796.021 342.216 cv
796.722 338.708 798.827 335.902 798.827 332.394 cv
799.458 338.074 800.098 343.753 801.751 349.433 cv
805.686 352.55 809.93 355.126 814.483 357.024 cv
806.547 357.921 798.634 358.068 790.676 358.328 cv
790.676 358.328 li
787.25 358.44 783.799 359.521 780.372 360.616 cv
.505882 .352941 .27451 rgb
f
797.141 209.846 mo
788.32 209.809 779.469 209.464 770.673 209.204 cv
771.218 242.914 li
771.216 242.914 li
770.958 253.197 li
780.239 252.149 789.432 251.074 798.672 250.24 cv
798.111 242.87 li
797.141 209.846 li
.572549 .486275 .317647 rgb
f
771.988 84.5457 mo
779.706 84.5031 787.392 84.2774 794.706 82.4326 cv
794.92 63.8471 li
787.445 64.3739 779.971 64.6418 772.496 64.8986 cv
771.988 84.5457 li
f
786.857 0 mo
774.176 0 li
774.137 1.52397 li
778.382 .999906 782.62 .4977 786.857 0 cv
f
773.478 26.9463 mo
774.137 1.52397 li
774.137 1.52397 li
773.479 26.9462 li
773.478 26.9463 773.478 26.9463 773.478 26.9463 cv
.772549 .643137 .670588 rgb
f
773.479 26.9462 mo
774.137 1.52394 li
777.479 1.11135 780.817 .712274 784.154 .318281 cv
784.029 1.44799 783.908 2.57989 783.782 3.70853 cv
782.998 10.7622 782.206 17.8089 781.405 24.8482 cv
778.755 25.5234 776.113 26.2229 773.478 26.9463 cv
.529412 .396078 .290196 rgb
f
772.496 64.8986 mo
779.971 64.6418 787.445 64.3739 794.92 63.8471 cv
795.407 21.5198 li
788.053 23.1429 780.735 24.9535 773.478 26.9463 cv
772.496 64.8986 li
.572549 .486275 .317647 rgb
f
794.522 98.3754 mo
794.522 98.3754 li
794.537 97.0571 li
794.538 97.0571 li
794.522 98.3754 li
794.587 92.7437 mo
794.587 92.7437 li
794.693 83.5023 li
794.694 83.5023 li
794.587 92.7437 li
.898039 .772549 .827451 rgb
f
794.694 83.5023 mo
794.693 83.5023 li
794.706 82.4327 li
794.706 82.4326 794.706 82.4326 794.706 82.4326 cv
794.694 83.5023 li
.772549 .643137 .670588 rgb
f
794.538 97.0571 mo
794.537 97.0571 li
794.587 92.7437 li
794.587 92.7437 li
794.538 97.0571 li
f
794.522 98.3754 mo
789.705 98.1242 784.926 97.4732 780.17 96.6135 cv
782.005 93.1358 783.812 89.6424 785.495 86.1099 cv
785.852 85.3671 786.203 84.6234 786.548 83.8772 cv
789.306 83.5654 792.031 83.1072 794.706 82.4326 cv
794.693 83.5023 li
794.587 92.7437 li
794.537 97.0571 li
794.522 98.3754 li
.529412 .396078 .290196 rgb
f
771.408 106.962 mo
779.034 107.879 786.736 109.029 794.385 110.274 cv
794.522 98.3754 li
786.844 97.975 779.26 96.5585 771.72 94.901 cv
771.408 106.962 li
.572549 .486275 .317647 rgb
f
794.338 114.4 mo
794.385 110.274 li
786.736 109.029 779.034 107.879 771.408 106.962 cv
771.003 122.607 li
778.875 122.581 786.689 122.513 794.571 122.336 cv
794.492 119.672 li
794.338 114.4 li
f
770.648 136.351 mo
770.743 132.642 li
770.744 132.642 li
770.648 136.351 li
770.838 129 mo
770.838 129 li
771.003 122.607 li
771.003 122.607 li
770.838 129 li
.898039 .772549 .827451 rgb
f
770.743 132.642 mo
770.838 129 li
770.838 129 li
770.744 132.642 li
770.743 132.642 li
.835294 .705882 .74902 rgb
f
795.101 140.396 mo
786.932 139.632 778.811 139.103 770.582 138.885 cv
770.648 136.351 li
770.744 132.642 li
770.838 129 li
771.003 122.607 li
778.875 122.581 786.689 122.513 794.571 122.336 cv
795.101 140.396 li
.529412 .396078 .290196 rgb
f
770.582 138.885 mo
770.078 158.367 li
769.972 158.283 769.875 158.205 769.764 158.117 cv
767.768 156.519 764.93 154.247 761.166 151.235 cv
761.1 151.128 li
761.082 151.097 li
761.033 150.963 li
760.934 150.692 li
760.802 150.328 760.666 149.955 760.528 149.574 cv
760.479 149.44 760.428 149.3 760.379 149.164 cv
760.148 148.525 759.91 147.869 759.665 147.191 cv
759.623 147.075 759.577 146.949 759.535 146.831 cv
758.979 145.288 758.396 143.668 757.797 142.005 cv
757.771 141.932 li
757.074 142.515 756.337 143.057 755.566 143.549 cv
755.781 144.434 755.993 145.309 756.201 146.165 cv
755.215 145.862 754.182 145.43 753.156 144.886 cv
752.578 145.164 751.989 145.419 751.391 145.649 cv
753.137 146.904 755.015 147.847 756.738 148.373 cv
757.172 150.161 757.58 151.839 757.942 153.329 cv
764.71 159.513 768.556 163.027 769.947 164.298 cv
770.14 176.271 li
778.755 174.605 787.393 173.129 796.02 171.697 cv
795.101 140.396 li
786.932 139.632 778.811 139.103 770.582 138.885 cv
.572549 .486275 .317647 rgb
f
770.401 192.397 mo
770.14 176.271 li
770.14 176.271 li
770.401 192.397 li
770.401 192.397 770.401 192.397 770.401 192.397 cv
.898039 .772549 .827451 rgb
f
770.401 192.397 mo
770.14 176.271 li
778.755 174.605 787.393 173.129 796.02 171.697 cv
796.476 187.201 li
787.819 189.181 779.096 190.745 770.401 192.397 cv
.529412 .396078 .290196 rgb
f
770.401 192.397 mo
770.566 202.627 li
779.318 201.586 788.091 200.525 796.831 199.284 cv
796.476 187.201 li
787.819 189.181 779.096 190.745 770.401 192.397 cv
.572549 .486275 .317647 rgb
f
770.629 206.525 mo
770.566 202.627 li
770.566 202.627 li
770.63 206.525 li
770.629 206.525 li
.898039 .772549 .827451 rgb
f
770.649 207.73 mo
770.629 206.525 li
770.63 206.525 li
770.649 207.73 li
.882353 .752941 .803922 rgb
f
797.141 209.846 mo
788.32 209.809 779.469 209.464 770.673 209.204 cv
770.673 209.204 li
770.673 209.204 li
770.649 207.73 li
770.63 206.525 li
770.566 202.627 li
779.318 201.586 788.091 200.525 796.831 199.284 cv
797.141 209.846 li
.529412 .396078 .290196 rgb
f
885.961 10.2611 mo
885.302 11.7377 884.394 13.2052 884.143 14.8274 cv
881.959 15.9275 879.775 17.0277 877.591 18.1276 cv
877.451 12.0854 877.32 6.0427 877.189 0 cv
864.754 0 li
864.87 24.6651 865.182 49.3325 865.239 73.9676 cv
863.187 72.3247 860.481 71.1301 859.096 68.786 cv
857.408 65.928 856.611 62.1533 855.491 59.0361 cv
852.846 51.6705 850.227 44.2946 847.606 36.9202 cv
849.801 45.9567 851.996 54.9937 854.192 64.0303 cv
846.484 61.656 843.004 54.1515 838.135 48.4348 cv
842.944 54.797 845.895 63.0518 853.986 65.9891 cv
855.562 66.56 855.494 69.1359 855.896 70.4098 cv
856.713 73.0224 860.171 75.2692 862.206 76.8905 cv
863.26 77.7302 864.712 78.5751 865.151 79.9375 cv
865.626 81.4121 865.269 83.3982 865.283 84.9258 cv
865.322 89.1656 865.38 93.4072 865.271 97.6463 cv
865.035 107.048 864.791 116.449 864.551 125.851 cv
863.581 163.844 862.125 201.862 861.663 239.864 cv
861.453 257.215 859.728 274.4 858.246 291.684 cv
857.416 301.363 856.587 311.042 855.757 320.72 cv
855.372 325.215 854.986 329.71 854.601 334.205 cv
854.439 336.087 854.34 336.468 852.556 337.174 cv
851.2 337.711 849.786 338.06 848.415 338.548 cv
849.777 339.38 851.117 340.252 852.521 341.015 cv
849.635 343.62 846.8 346.284 844.06 349.041 cv
850.765 348.506 857.521 348.907 864.21 348.122 cv
868.444 347.626 872.11 347.202 876.372 348.012 cv
880.515 348.798 884.541 348.816 888.741 348.695 cv
887.759 347.521 886.499 346.436 885.952 344.969 cv
885.327 343.293 885.493 341.209 885.38 339.445 cv
885.066 334.554 884.752 329.664 884.438 324.773 cv
883.856 315.713 883.239 306.655 882.589 297.599 cv
881.326 279.986 880.282 262.399 880.193 244.738 cv
879.998 206.375 879.777 168.012 879.619 129.648 cv
879.497 100.039 878.807 70.4504 878.119 40.8499 cv
878.041 37.4791 877.963 34.1086 877.884 30.7378 cv
877.833 28.5361 876.598 23.6382 878.676 22.4819 cv
881.587 20.8615 884.5 19.2411 887.411 17.6207 cv
888.482 14.0683 889.552 10.5161 890.622 6.96397 cv
891.184 5.09912 891.283 2.20664 892.617 .720302 cv
892.898 .406902 893.447 .185201 894.064 0 cv
890.019 0 li
888.729 3.44672 887.458 6.91733 885.961 10.2611 cv
.470588 .380392 .278431 rgb
f
880.158 237.97 mo
873.999 238.282 867.84 238.498 861.681 238.669 cv
861.676 239.067 861.668 239.466 861.663 239.864 cv
861.559 248.46 861.082 257.015 860.448 265.562 cv
867.127 264.24 873.838 263.017 880.563 261.872 cv
880.359 256.166 880.221 250.456 880.193 244.738 cv
880.181 242.482 880.169 240.226 880.158 237.97 cv
f
861.681 238.669 mo
861.754 232.942 861.854 227.215 861.966 221.488 cv
861.966 221.488 li
861.966 221.488 li
868.004 221.708 874.041 222.231 880.078 222.731 cv
880.078 222.731 li
880.078 222.731 li
880.104 227.811 880.131 232.89 880.158 237.97 cv
873.999 238.282 867.84 238.498 861.681 238.669 cv
.435294 .309804 .254902 rgb
f
862.603 194.477 mo
862.362 203.481 862.142 212.485 861.966 221.488 cv
868.004 221.708 874.041 222.231 880.078 222.731 cv
880.032 213.979 879.986 205.227 879.941 196.474 cv
874.144 195.846 868.367 195.11 862.603 194.477 cv
.470588 .380392 .278431 rgb
f
879.941 196.474 mo
879.941 196.474 879.941 196.474 879.94 196.474 cv
879.912 191.028 879.884 185.582 879.856 180.135 cv
879.858 180.136 879.86 180.136 879.862 180.136 cv
879.89 185.582 879.913 191.028 879.941 196.474 cv
.898039 .772549 .827451 rgb
f
879.94 196.474 mo
874.144 195.846 868.367 195.11 862.603 194.477 cv
862.74 189.335 862.886 184.193 863.034 179.051 cv
868.652 179.485 874.279 179.962 879.856 180.135 cv
879.884 185.582 879.912 191.028 879.94 196.474 cv
.435294 .309804 .254902 rgb
f
879.941 196.474 mo
874.144 195.846 868.367 195.11 862.603 194.477 cv
862.603 194.477 li
868.367 195.11 874.144 195.846 879.94 196.474 cv
879.941 196.474 879.941 196.474 879.941 196.474 cv
879.941 196.474 li
f
863.889 149.744 mo
863.606 159.512 863.316 169.281 863.034 179.051 cv
868.654 179.485 874.284 179.962 879.862 180.136 cv
879.806 169.18 879.756 158.225 879.704 147.269 cv
874.415 148.096 869.126 148.875 863.889 149.744 cv
cp
.470588 .380392 .278431 rgb
f
855.491 59.0361 mo
853.12 52.4338 850.771 45.8231 848.421 39.2126 cv
848.167 39.2309 li
850.175 47.4973 852.183 55.7636 854.192 64.0303 cv
846.484 61.656 843.004 54.1513 838.134 48.4348 cv
842.944 54.797 845.895 63.052 853.986 65.9891 cv
855.33 66.4757 855.479 68.4174 855.742 69.7699 cv
856.946 69.5723 858.159 69.3813 859.382 69.1961 cv
859.287 69.0593 859.182 68.9313 859.097 68.786 cv
857.408 65.928 856.611 62.1533 855.491 59.0361 cv
f
848.167 39.231 mo
848.421 39.2126 li
848.149 38.4485 847.877 37.6846 847.606 36.9202 cv
847.793 37.6904 847.98 38.4607 848.167 39.231 cv
cp
f
865.029 38.6115 mo
864.982 32.7487 864.934 26.886 864.89 21.0219 cv
864.935 26.8852 864.984 32.7495 865.031 38.6115 cv
865.03 38.6115 865.029 38.6115 865.029 38.6115 cv
878.247 22.8183 mo
878.371 22.6854 878.513 22.5722 878.676 22.4819 cv
880.474 21.481 882.273 20.4803 884.071 19.4794 cv
882.273 20.4803 880.474 21.481 878.676 22.4819 cv
878.513 22.5722 878.371 22.6854 878.247 22.8183 cv
877.591 18.1276 mo
877.463 12.6161 877.343 7.10381 877.224 1.59184 cv
877.224 1.59182 877.224 1.59181 877.224 1.59178 cv
877.344 7.10411 877.463 12.6162 877.591 18.1276 cv
877.591 18.1276 877.591 18.1276 877.591 18.1276 cv
880.444 16.6909 mo
881.092 16.3643 881.74 16.0378 882.388 15.7113 cv
881.74 16.0378 881.092 16.3643 880.444 16.6909 cv
884.456 13.5916 mo
884.638 13.0579 884.871 12.5373 885.116 12.0234 cv
884.871 12.5373 884.638 13.0579 884.456 13.5916 cv
889.37 11.122 mo
889.787 9.73593 890.205 8.35002 890.622 6.96397 cv
890.665 6.82112 890.706 6.6722 890.744 6.51839 cv
890.706 6.67234 890.665 6.82122 890.622 6.9642 cv
890.205 8.35016 889.787 9.73596 889.37 11.122 cv
887.53 6.53692 mo
887.533 6.52944 887.536 6.52189 887.539 6.5144 cv
887.536 6.52191 887.533 6.52941 887.53 6.53692 cv
887.56 6.46078 mo
887.567 6.4427 887.575 6.42431 887.582 6.40622 cv
887.575 6.42438 887.567 6.44263 887.56 6.46078 cv
887.59 6.38463 mo
887.971 5.42783 888.341 4.46584 888.706 3.50153 cv
888.341 4.46578 887.971 5.42793 887.59 6.38463 cv
888.707 3.49996 mo
888.714 3.48194 888.721 3.4642 888.727 3.44618 cv
888.721 3.46406 888.714 3.48208 888.707 3.49996 cv
888.743 3.40442 mo
888.746 3.39604 888.75 3.38757 888.753 3.37919 cv
888.75 3.3876 888.746 3.39601 888.743 3.40442 cv
891.551 2.84736 mo
891.793 2.02677 892.119 1.27541 892.617 .720302 cv
892.898 .406902 893.447 .185201 894.064 0 cv
894.064 0 li
893.447 .185201 892.898 .406902 892.617 .720302 cv
892.119 1.27541 891.793 2.02675 891.551 2.84736 cv
.772549 .643137 .670588 rgb
f
865.031 38.6115 mo
864.984 32.7495 864.935 26.8852 864.89 21.0219 cv
864.844 14.945 864.802 8.86664 864.771 2.78928 cv
868.929 2.41214 873.081 2.02688 877.224 1.59184 cv
877.343 7.10381 877.463 12.6161 877.591 18.1276 cv
877.591 18.1276 877.591 18.1276 877.591 18.1275 cv
877.591 18.1276 877.591 18.1276 877.591 18.1276 cv
878.542 17.6488 879.493 17.1698 880.444 16.6909 cv
881.092 16.3643 881.74 16.0378 882.388 15.7113 cv
882.973 15.4166 883.558 15.122 884.143 14.8274 cv
884.208 14.406 884.318 13.995 884.456 13.5916 cv
884.638 13.0579 884.871 12.5373 885.116 12.0234 cv
885.399 11.4306 885.7 10.8466 885.962 10.2611 cv
886.511 9.03423 887.029 7.79046 887.53 6.53692 cv
887.533 6.52941 887.536 6.52191 887.539 6.5144 cv
887.546 6.49653 887.553 6.47865 887.56 6.46078 cv
887.567 6.44263 887.575 6.42438 887.582 6.40622 cv
887.585 6.39895 887.588 6.3919 887.59 6.38463 cv
887.971 5.42793 888.341 4.46578 888.706 3.50153 cv
888.707 3.50112 888.707 3.50038 888.707 3.49996 cv
888.714 3.48208 888.721 3.46406 888.727 3.44618 cv
888.733 3.43235 888.738 3.41826 888.743 3.40442 cv
888.746 3.39601 888.75 3.3876 888.753 3.37919 cv
889.174 2.26612 889.588 1.15059 890.005 .0374007 cv
890.254 0 li
894.064 0 li
893.447 .185201 892.898 .406902 892.617 .720302 cv
892.119 1.27541 891.793 2.02677 891.551 2.84736 cv
891.194 4.05553 891.019 5.41409 890.744 6.51839 cv
890.706 6.6722 890.665 6.82112 890.622 6.96397 cv
890.205 8.35002 889.787 9.73593 889.37 11.122 cv
888.717 13.2881 888.064 15.4544 887.411 17.6207 cv
886.298 18.2402 885.185 18.8599 884.071 19.4794 cv
882.273 20.4803 880.474 21.481 878.676 22.4819 cv
878.513 22.5722 878.371 22.6854 878.247 22.8183 cv
876.784 24.387 877.837 28.7081 877.884 30.7378 cv
877.942 33.2308 878 35.7236 878.058 38.2163 cv
873.737 38.463 869.382 38.5407 865.031 38.6115 cv
.435294 .309804 .254902 rgb
f
877.224 1.5918 mo
877.213 1.06128 877.2 .530518 877.189 0 cv
864.76 0 li
864.765 .929688 864.766 1.8595 864.771 2.78931 cv
868.929 2.41211 873.082 2.02686 877.224 1.5918 cv
cp
.470588 .380392 .278431 rgb
f
890.005 .037354 mo
890.254 0 li
890.019 0 li
890.005 .037354 li
cp
f
878.058 38.2163 mo
873.736 38.463 869.381 38.5408 865.029 38.6115 cv
865.108 48.5236 865.181 58.4337 865.219 68.3386 cv
869.681 67.6951 874.206 67.0413 878.691 66.2324 cv
878.51 57.772 878.316 49.3115 878.119 40.8497 cv
878.099 39.9719 878.079 39.0941 878.058 38.2163 cv
f
865.333 92.7437 mo
865.328 92.7437 li
865.335 90.2066 865.309 87.6698 865.285 85.1331 cv
865.309 87.6697 865.338 90.2068 865.333 92.7437 cv
.898039 .772549 .827451 rgb
f
865.307 95.5303 mo
865.319 94.6015 865.326 93.6725 865.328 92.7437 cv
865.333 92.7437 li
865.331 93.6723 865.325 94.6006 865.312 95.5291 cv
865.31 95.5295 865.309 95.5298 865.307 95.5303 cv
.772549 .643137 .670588 rgb
f
865.399 81.9026 mo
865.399 81.2069 865.342 80.5308 865.151 79.9375 cv
864.712 78.5751 863.26 77.73 862.206 76.8905 cv
860.334 75.3993 857.259 73.379 856.141 71.0316 cv
856.141 71.0316 li
857.259 73.379 860.335 75.3993 862.206 76.8905 cv
863.26 77.7302 864.712 78.5751 865.151 79.9375 cv
865.342 80.5308 865.399 81.2069 865.399 81.9026 cv
f
865.231 71.0316 mo
865.229 71.0316 li
865.226 70.134 865.222 69.2363 865.219 68.3386 cv
865.22 68.3384 865.221 68.3383 865.221 68.3382 cv
865.225 69.236 865.228 70.1339 865.231 71.0316 cv
.898039 .772549 .827451 rgb
f
865.239 73.9676 mo
865.239 73.9675 865.239 73.9675 865.239 73.9674 cv
865.236 72.9891 865.233 72.0103 865.229 71.0316 cv
865.231 71.0316 li
865.234 72.0106 865.237 72.9888 865.239 73.9676 cv
.772549 .643137 .670588 rgb
f
861.14 71.0316 mo
861.119 71.0316 li
860.454 70.4924 859.848 69.8986 859.362 69.1992 cv
859.369 69.1982 859.375 69.1971 859.382 69.1961 cv
859.87 69.8952 860.477 70.4905 861.14 71.0316 cv
.898039 .772549 .827451 rgb
f
864.965 73.7536 mo
863.745 72.8229 862.335 72.0191 861.119 71.0316 cv
861.14 71.0316 li
862.35 72.0184 863.75 72.8251 864.965 73.7536 cv
.772549 .643137 .670588 rgb
f
855.891 70.3938 mo
855.89 70.3916 855.889 70.3895 855.889 70.3873 cv
855.889 70.3895 855.89 70.3916 855.891 70.3938 cv
855.885 70.3759 mo
855.885 70.3747 855.884 70.3735 855.884 70.3724 cv
855.884 70.3736 855.885 70.3747 855.885 70.3759 cv
.898039 .772549 .827451 rgb
f
865.312 95.5291 mo
865.325 94.6006 865.331 93.6723 865.333 92.7437 cv
865.338 90.2068 865.309 87.6697 865.285 85.1331 cv
865.285 85.0641 865.284 84.9948 865.283 84.9258 cv
865.283 84.9258 li
865.283 84.896 865.283 84.8659 865.283 84.8358 cv
865.283 83.9425 865.399 82.9023 865.399 81.9026 cv
865.399 81.2069 865.342 80.5308 865.151 79.9375 cv
864.712 78.5751 863.26 77.7302 862.206 76.8905 cv
860.335 75.3993 857.259 73.379 856.141 71.0316 cv
856.044 70.8268 855.961 70.6195 855.896 70.4098 cv
855.896 70.4098 li
855.894 70.4045 855.892 70.3991 855.891 70.3938 cv
855.89 70.3916 855.889 70.3895 855.889 70.3873 cv
855.887 70.3835 855.886 70.3797 855.885 70.3759 cv
855.885 70.3747 855.884 70.3736 855.884 70.3724 cv
855.83 70.1932 855.785 69.9884 855.742 69.7699 cv
856.939 69.5734 858.146 69.3834 859.362 69.1992 cv
859.848 69.8986 860.454 70.4924 861.119 71.0316 cv
862.335 72.0191 863.745 72.8229 864.965 73.7536 cv
865.057 73.8243 865.148 73.8954 865.239 73.9676 cv
865.239 73.9675 865.239 73.9675 865.239 73.9674 cv
865.239 73.9675 865.239 73.9675 865.239 73.9676 cv
865.237 72.9888 865.234 72.0106 865.231 71.0316 cv
865.228 70.1339 865.225 69.236 865.221 68.3382 cv
869.683 67.6948 874.207 67.0411 878.691 66.2324 cv
878.879 74.9936 879.053 83.7544 879.199 92.5159 cv
874.592 93.6106 869.949 94.587 865.312 95.5291 cv
.435294 .309804 .254902 rgb
f
865.307 95.5303 mo
865.297 96.2357 865.289 96.941 865.271 97.6464 cv
865.096 104.627 864.916 111.608 864.736 118.589 cv
869.66 117.919 874.62 117.146 879.523 116.167 cv
879.448 108.283 879.331 100.399 879.199 92.516 cv
874.59 93.6111 869.945 94.5879 865.307 95.5303 cv
cp
.470588 .380392 .278431 rgb
f
879.523 116.167 mo
874.62 117.146 869.66 117.919 864.736 118.589 cv
864.674 121.01 864.612 123.43 864.551 125.851 cv
864.348 133.814 864.12 141.779 863.889 149.744 cv
869.126 148.875 874.415 148.096 879.704 147.269 cv
879.676 141.395 879.643 135.522 879.619 129.648 cv
879.601 125.154 879.566 120.66 879.523 116.167 cv
cp
f
844.06 349.041 mo
844.06 349.041 li
845.736 348.908 847.416 348.832 849.096 348.782 cv
847.416 348.832 845.736 348.908 844.06 349.041 cv
885.37 348.75 mo
882.357 348.75 879.396 348.586 876.372 348.012 cv
876.25 347.988 876.129 347.966 876.009 347.945 cv
876.129 347.966 876.25 347.988 876.372 348.012 cv
879.396 348.586 882.358 348.75 885.371 348.75 cv
886.486 348.75 887.607 348.728 888.741 348.695 cv
887.759 347.521 886.499 346.436 885.952 344.969 cv
886.499 346.436 887.759 347.521 888.741 348.695 cv
887.606 348.728 886.485 348.75 885.37 348.75 cv
863.896 348.158 mo
864.001 348.147 864.105 348.135 864.21 348.122 cv
866.726 347.827 869.042 347.558 871.402 347.558 cv
871.402 347.558 li
869.042 347.558 866.726 347.827 864.21 348.122 cv
864.105 348.135 864.001 348.147 863.896 348.158 cv
848.361 344.852 mo
849.732 343.557 851.12 342.279 852.521 341.015 cv
851.117 340.252 849.777 339.38 848.415 338.548 cv
848.415 338.548 li
849.777 339.38 851.117 340.252 852.521 341.015 cv
851.121 342.279 849.733 343.557 848.361 344.852 cv
.235294 .160784 .133333 rgb
f
854.692 333.144 mo
854.758 332.374 854.824 331.604 854.89 330.834 cv
854.824 331.604 854.758 332.374 854.692 333.144 cv
854.692 333.144 li
.678431 .521569 .454902 rgb
f
854.691 333.15 mo
854.691 333.148 854.691 333.146 854.692 333.144 cv
854.692 333.144 li
854.692 333.146 854.691 333.148 854.691 333.15 cv
854.691 333.15 li
.278431 .184314 .137255 rgb
f
851.896 337.42 mo
852.118 337.342 852.338 337.26 852.556 337.174 cv
854.34 336.468 854.439 336.087 854.601 334.205 cv
854.631 333.853 854.661 333.501 854.691 333.15 cv
854.691 333.15 li
854.661 333.501 854.631 333.853 854.601 334.205 cv
854.439 336.087 854.34 336.468 852.556 337.174 cv
852.338 337.26 852.118 337.342 851.896 337.42 cv
885.119 335.384 mo
884.892 331.847 884.665 328.31 884.438 324.773 cv
884.665 328.31 884.892 331.847 885.119 335.384 cv
.235294 .160784 .133333 rgb
f
883.662 313 mo
883.662 313 li
883.477 310.265 883.289 307.531 883.099 304.797 cv
883.289 307.531 883.477 310.265 883.662 313 cv
.917647 .803922 .862745 rgb
f
884.319 322.926 mo
884.104 319.617 883.885 316.308 883.662 313 cv
883.662 313 li
883.885 316.308 884.104 319.617 884.319 322.926 cv
884.319 322.926 li
.678431 .521569 .454902 rgb
f
857.027 305.908 mo
857.253 303.266 857.48 300.624 857.706 297.982 cv
857.48 300.624 857.253 303.266 857.027 305.908 cv
857.027 305.908 li
.917647 .803922 .862745 rgb
f
855.757 320.72 mo
856.18 315.783 856.603 310.845 857.027 305.908 cv
857.027 305.908 li
856.604 310.845 856.18 315.783 855.757 320.72 cv
.678431 .521569 .454902 rgb
f
881.044 272.926 mo
881.038 272.926 li
880.85 269.243 880.687 265.559 880.555 261.874 cv
880.558 261.873 880.56 261.873 880.563 261.872 cv
880.695 265.558 880.857 269.242 881.044 272.926 cv
.898039 .772549 .827451 rgb
f
882.35 294.224 mo
881.853 287.124 881.4 280.026 881.038 272.926 cv
881.044 272.926 li
881.404 280.026 881.854 287.124 882.35 294.224 cv
.917647 .803922 .862745 rgb
f
859.869 272.926 mo
859.868 272.926 li
860.071 270.471 860.266 268.017 860.448 265.562 cv
860.448 265.562 860.449 265.562 860.449 265.562 cv
860.267 268.016 860.072 270.472 859.869 272.926 cv
.898039 .772549 .827451 rgb
f
858.744 285.951 mo
859.125 281.607 859.509 277.266 859.868 272.926 cv
859.869 272.926 li
859.509 277.267 859.125 281.606 858.744 285.951 cv
.917647 .803922 .862745 rgb
f
844.06 349.041 mo
845.471 347.622 846.907 346.227 848.361 344.852 cv
849.733 343.557 851.121 342.279 852.521 341.015 cv
851.117 340.252 849.777 339.38 848.415 338.548 cv
849.566 338.139 850.745 337.827 851.896 337.42 cv
852.118 337.342 852.338 337.26 852.556 337.174 cv
854.34 336.468 854.439 336.087 854.601 334.205 cv
854.631 333.853 854.661 333.501 854.691 333.15 cv
854.691 333.148 854.692 333.146 854.692 333.144 cv
854.758 332.374 854.824 331.604 854.89 330.834 cv
855.179 327.462 855.468 324.091 855.757 320.72 cv
855.757 320.72 li
856.18 315.783 856.604 310.845 857.027 305.908 cv
857.253 303.266 857.48 300.624 857.706 297.982 cv
857.886 295.883 858.066 293.783 858.246 291.684 cv
858.41 289.772 858.577 287.861 858.744 285.951 cv
859.125 281.606 859.509 277.267 859.869 272.926 cv
860.072 270.472 860.267 268.016 860.449 265.562 cv
867.125 264.24 873.833 263.018 880.555 261.874 cv
880.687 265.559 880.85 269.243 881.038 272.926 cv
881.4 280.026 881.853 287.124 882.35 294.224 cv
882.429 295.349 882.508 296.474 882.589 297.599 cv
882.761 299.998 882.931 302.398 883.099 304.797 cv
883.289 307.531 883.477 310.265 883.662 313 cv
883.885 316.308 884.104 319.617 884.319 322.926 cv
884.319 322.928 884.319 322.929 884.319 322.932 cv
884.34 323.256 884.361 323.581 884.382 323.905 cv
884.401 324.195 884.419 324.484 884.438 324.773 cv
884.438 324.773 li
884.665 328.31 884.892 331.847 885.119 335.384 cv
885.206 336.738 885.293 338.091 885.38 339.445 cv
885.493 341.209 885.327 343.293 885.952 344.969 cv
885.952 344.969 li
886.499 346.436 887.759 347.521 888.741 348.695 cv
887.607 348.728 886.486 348.75 885.371 348.75 cv
882.358 348.75 879.396 348.586 876.372 348.012 cv
876.25 347.988 876.129 347.966 876.009 347.945 cv
874.414 347.666 872.899 347.558 871.402 347.558 cv
871.402 347.558 li
871.402 347.558 li
869.042 347.558 866.726 347.827 864.21 348.122 cv
864.105 348.135 864.001 348.147 863.896 348.158 cv
858.982 348.708 854.034 348.636 849.096 348.782 cv
847.416 348.832 845.736 348.908 844.06 349.041 cv
.435294 .309804 .254902 rgb
f
542.289 397 mo
450.371 365.157 366.305 318.544 233.658 309.223 cv
224.026 310.048 214.393 310.918 204.767 311.855 cv
195.066 314.169 185.352 316.567 175.622 319 cv
113.903 334.616 54.9552 351.36 0 380.703 cv
0 397 li
542.289 397 li
.32549 .258824 .160784 rgb
f
89.0179 343.463 mo
89.0147 343.462 89.0118 343.461 89.0086 343.461 cv
93.991 341.824 98.9958 340.235 104.026 338.686 cv
104.026 338.688 li
98.9989 340.237 93.998 341.825 89.0179 343.463 cv
.254902 .196078 .145098 rgb
f
46.6139 358.954 mo
46.613 358.95 46.6121 358.948 46.6112 358.944 cv
60.5319 353.278 74.6708 348.172 89.0086 343.461 cv
89.0118 343.461 89.0147 343.462 89.0179 343.463 cv
74.6767 348.177 60.5379 353.284 46.6139 358.954 cv
.215686 .168627 .141176 rgb
f
110.929 367.5 mo
44.8731 367.5 li
46.127 365.389 47.0001 363.235 47.0001 361.333 cv
47.0001 360.574 46.861 359.774 46.6139 358.954 cv
60.5379 353.284 74.6767 348.177 89.0179 343.463 cv
93.998 341.825 98.9989 340.237 104.026 338.688 cv
104.72 340.127 105.387 341.567 106.013 343.014 cv
96.6668 345.605 87.3695 348.481 78.1358 351.692 cv
88.8339 356.601 99.8362 360.53 111.009 363.596 cv
111.017 363.94 111.021 364.284 111.021 364.631 cv
111.021 365.574 110.991 366.53 110.929 367.5 cv
.27451 .223529 .152941 rgb
f
424.009 361.99 mo
423.207 360.72 422.347 359.503 421.507 358.389 cv
422.609 358.743 423.717 359.101 424.817 359.458 cv
424.482 360.312 424.207 361.161 424.009 361.99 cv
410.85 359.854 mo
408.592 356.897 405.534 354.267 403.869 352.93 cv
407.2 353.922 410.514 354.931 413.815 355.958 cv
412.906 357.072 411.871 358.404 410.85 359.854 cv
396.79 357.385 mo
379.866 353.318 362.591 349.183 348.707 345.969 cv
348.656 345.923 348.605 345.877 348.554 345.831 cv
349.945 345.075 351.272 344.21 352.622 343.386 cv
352.622 343.386 li
352.622 343.386 li
352.216 343.241 351.002 342.898 349.772 342.482 cv
348.625 342.093 347.464 341.641 346.936 341.225 cv
346.759 341.086 346.653 340.951 346.642 340.824 cv
346.592 340.244 346.543 339.663 346.493 339.083 cv
346.493 339.083 li
346.466 338.772 346.44 338.461 346.413 338.151 cv
365.937 342.381 384.296 347.147 402.143 352.419 cv
401.159 353.221 398.936 355.101 396.79 357.385 cv
316.354 338.73 mo
304.858 336.21 292.625 333.559 281.317 331.122 cv
281.116 330.962 280.914 330.801 280.713 330.64 cv
279.834 329.937 275.923 327.659 275.834 326.603 cv
275.818 326.415 275.802 326.226 275.786 326.038 cv
290.129 327.907 303.732 330.003 316.766 332.316 cv
316.628 334.454 316.491 336.592 316.354 338.73 cv
.509804 .403922 .235294 rgb
f
391.801 367.5 mo
314.563 367.5 li
313.623 366.56 313.007 366 313.007 366 cv
313.007 366 312.374 366.559 311.412 367.5 cv
296.058 367.5 li
296.235 366.64 296.333 365.803 296.333 365 cv
296.333 356.492 285.333 344 285.333 344 cv
285.333 344 274.333 356.871 274.333 365 cv
274.333 365.817 274.419 366.654 274.575 367.5 cv
272.94 367.5 li
274.158 364.072 275 360.63 275 357.667 cv
275 351.266 271.973 343.967 269.095 338.474 cv
271.524 338.452 273.952 338.447 276.381 338.447 cv
277.62 338.447 278.858 338.448 280.098 338.45 cv
281.331 338.451 282.564 338.453 283.798 338.453 cv
285.531 338.453 287.264 338.45 288.998 338.441 cv
289.469 338.438 289.94 338.435 290.411 338.432 cv
290.411 338.432 li
290.411 338.432 li
289.666 337.828 288.919 337.226 288.172 336.624 cv
297.472 338.513 306.79 340.488 316.109 342.541 cv
316.079 343.008 316.049 343.474 316.019 343.941 cv
315.928 345.361 315.837 346.781 315.746 348.202 cv
315.746 348.202 li
315.74 348.295 315.732 348.385 315.722 348.474 cv
315.492 350.654 314.244 351.554 312.668 353.44 cv
312.668 353.44 li
312.668 353.44 li
312.668 353.44 li
312.702 353.441 312.736 353.442 312.77 353.443 cv
312.789 353.443 312.808 353.444 312.826 353.444 cv
314.254 353.486 315.698 353.534 317.142 353.534 cv
319.397 353.534 321.653 353.417 323.85 352.973 cv
326.145 352.51 328.347 352.126 330.594 352.126 cv
331.634 352.126 332.684 352.208 333.758 352.403 cv
333.785 352.408 333.811 352.413 333.838 352.417 cv
333.846 352.419 333.853 352.42 333.86 352.421 cv
333.882 352.425 333.903 352.429 333.924 352.433 cv
333.931 352.434 333.937 352.435 333.943 352.436 cv
333.971 352.441 333.999 352.446 334.026 352.451 cv
334.027 352.451 334.027 352.451 334.028 352.451 cv
334.055 352.456 334.081 352.46 334.108 352.465 cv
334.114 352.466 334.12 352.467 334.125 352.468 cv
334.151 352.473 334.177 352.477 334.202 352.481 cv
334.204 352.482 334.206 352.482 334.208 352.482 cv
334.237 352.487 334.266 352.492 334.295 352.497 cv
334.296 352.497 334.297 352.497 334.299 352.498 cv
334.326 352.502 334.353 352.507 334.38 352.511 cv
334.383 352.512 334.387 352.513 334.391 352.513 cv
339.788 353.415 345.259 353.363 350.717 353.493 cv
350.716 353.492 350.716 353.492 350.715 353.492 cv
350.715 353.492 li
350.716 353.492 350.716 353.492 350.717 353.493 cv
352.63 353.538 354.541 353.606 356.448 353.745 cv
356.45 353.746 356.452 353.746 356.454 353.746 cv
356.482 353.748 356.51 353.75 356.538 353.752 cv
356.543 353.752 356.549 353.753 356.554 353.753 cv
356.578 353.755 356.602 353.757 356.626 353.759 cv
356.635 353.759 356.644 353.76 356.652 353.761 cv
356.673 353.762 356.695 353.764 356.716 353.765 cv
356.727 353.766 356.738 353.767 356.749 353.768 cv
356.768 353.769 356.787 353.771 356.806 353.772 cv
356.818 353.773 356.831 353.774 356.844 353.775 cv
356.875 353.778 356.906 353.78 356.937 353.783 cv
356.937 353.783 li
356.937 353.783 li
356.937 353.783 li
356.937 353.783 li
356.154 352.995 355.363 352.215 354.565 351.441 cv
367.535 354.583 380.542 357.872 393.609 361.302 cv
392.455 363.03 391.667 364.779 391.667 366.333 cv
391.667 366.712 391.713 367.102 391.801 367.5 cv
239.035 367.5 mo
234.633 367.5 li
228.429 362.731 li
228.429 362.731 li
219.278 355.697 li
210.206 367.5 li
203.283 367.5 li
202.865 343.571 li
213.658 342.845 224.416 341.89 235.186 340.84 cv
243.075 340.072 251.052 339.007 258.978 338.685 cv
256.078 344.339 253 351.738 253 357.667 cv
253 358.729 253.099 359.84 253.278 360.978 cv
250.388 354.008 247.333 348.667 247.333 348.667 cv
247.333 348.667 242.292 357.749 239.035 367.5 cv
202.78 338.712 mo
202.725 335.519 li
203.54 335.605 204.355 335.691 205.17 335.777 cv
205.17 335.777 li
204.385 336.764 203.588 337.743 202.78 338.712 cv
202.669 332.325 mo
202.533 324.555 li
203.548 324.425 204.57 324.295 205.585 324.168 cv
205.566 324.75 205.547 325.332 205.528 325.913 cv
205.502 326.675 205.477 327.436 205.452 328.198 cv
205.427 328.97 205.401 329.742 205.376 330.514 cv
205.313 332.414 204.749 331.977 202.669 332.325 cv
.4 .329412 .207843 rgb
f
111.009 363.596 mo
99.8362 360.53 88.8339 356.601 78.1358 351.692 cv
87.3695 348.481 96.6668 345.605 106.013 343.014 cv
108.824 349.508 110.837 356.147 111.009 363.596 cv
.337255 .286274 .2 rgb
f
362.028 56.8629 mo
361.909 57.0188 li
361.881 57.0584 361.964 56.96 362.045 56.8613 cv
362.163 56.7169 362.276 56.5724 362.028 56.8629 cv
.470588 .392157 .262745 rgb
f
304.29 6.97388 mo
305.609 7.63245 306.998 8.14029 308.446 8.42373 cv
309.516 8.65106 310.15 12.6901 310.486 13.8047 cv
311.652 17.6763 312.819 21.5476 313.985 25.419 cv
317.191 27.2029 320.396 28.9867 323.602 30.7707 cv
323.709 30.9556 323.584 31.5518 323.579 31.7555 cv
323.528 33.9754 323.476 36.1953 323.424 38.4153 cv
323.017 55.9497 322.609 73.4843 322.202 91.0187 cv
321.733 111.191 321.743 131.364 321.64 151.541 cv
321.466 185.887 321.291 220.234 321.116 254.58 cv
321.002 276.988 318.881 299.373 317.445 321.738 cv
317.005 328.596 316.564 335.453 316.124 342.31 cv
315.998 344.274 315.872 346.238 315.746 348.202 cv
315.593 350.582 314.309 351.477 312.668 353.44 cv
316.373 353.546 320.193 353.711 323.85 352.973 cv
327.208 352.296 330.364 351.787 333.758 352.403 cv
341.411 353.791 349.218 353.167 356.937 353.783 cv
354.222 351.051 351.412 348.411 348.554 345.831 cv
349.945 345.075 351.272 344.21 352.622 343.386 cv
351.711 343.061 346.72 341.737 346.642 340.824 cv
346.592 340.244 346.543 339.663 346.493 339.083 cv
346.277 336.562 346.061 334.041 345.845 331.52 cv
345.116 323.017 344.387 314.515 343.658 306.013 cv
342.436 291.757 341.214 277.501 339.992 263.246 cv
339.4 256.348 339.613 249.291 339.437 242.375 cv
338.997 225.142 338.557 207.909 338.117 190.676 cv
337.385 162.02 336.653 133.363 335.921 104.706 cv
335.777 99.0757 335.925 93.4277 335.938 87.7953 cv
335.942 86.0372 338.235 84.8375 339.461 83.7172 cv
341.093 82.2262 342.725 80.7349 344.358 79.2436 cv
345.908 77.8273 345.262 74.0088 347.102 73.341 cv
355.476 70.3012 357.901 62.4389 362.807 55.9488 cv
362.548 56.2534 362.288 56.558 362.028 56.8629 cv
362.276 56.5724 362.163 56.7169 362.045 56.8613 cv
361.964 56.96 361.881 57.0584 361.909 57.0188 cv
357.54 62.6354 354.207 69.1488 346.898 71.4005 cv
349.073 62.4471 351.249 53.4939 353.424 44.5404 cv
351.076 51.1448 348.726 57.7485 346.365 64.3484 cv
345.054 68.0141 343.738 71.6785 342.408 75.3377 cv
341.474 77.9084 338.039 79.5764 335.953 81.2461 cv
336.016 54.1641 336.079 27.082 336.142 0 cv
324.317 0 li
324.116 8.64047 323.916 17.2809 323.715 25.9214 cv
321.551 24.8316 319.387 23.7416 317.223 22.6515 cv
316.971 21.019 315.779 19.0809 315.169 17.5283 cv
312.917 11.772 310.674 6.01273 308.433 .252342 cv
308.335 0 li
306.326 0 li
306.764 1.45502 307.203 2.91027 307.641 4.3653 cv
304.386 3.92167 301.709 2.2508 299.483 0 cv
297.065 0 li
298.84 2.90667 301.16 5.41026 304.29 6.97388 cv
f
361.909 57.0188 mo
362.028 56.8629 li
361.952 56.9602 361.922 56.9998 361.909 57.0188 cv
f
338.757 215.762 mo
338.757 215.762 li
338.549 207.599 338.34 199.435 338.132 191.272 cv
338.132 191.272 338.132 191.272 338.132 191.272 cv
338.132 191.272 li
338.132 191.272 li
338.34 199.435 338.549 207.599 338.757 215.762 cv
.807843 .772549 .843137 rgb
f
338.859 219.741 mo
338.825 218.414 338.791 217.088 338.757 215.762 cv
338.757 215.762 li
338.791 217.089 338.825 218.414 338.859 219.741 cv
338.859 219.741 li
.823529 .803922 .878431 rgb
f
321.289 220.554 mo
321.342 210.185 321.395 199.815 321.448 189.445 cv
321.448 189.445 li
321.448 189.445 li
326.984 190.335 332.549 190.948 338.132 191.272 cv
338.34 199.435 338.549 207.599 338.757 215.762 cv
338.791 217.088 338.825 218.414 338.859 219.741 cv
333.003 219.967 327.15 220.22 321.289 220.554 cv
.392157 .321569 .243137 rgb
f
337.765 176.895 mo
332.308 176.228 326.905 175.204 321.526 173.976 cv
321.5 179.133 321.474 184.289 321.448 189.445 cv
326.984 190.335 332.549 190.948 338.132 191.272 cv
338.127 191.073 338.122 190.874 338.117 190.676 cv
337.999 186.082 337.882 181.488 337.765 176.895 cv
.470588 .392157 .262745 rgb
f
335.974 106.797 mo
335.957 106.101 335.939 105.403 335.921 104.706 cv
335.939 105.403 335.957 106.1 335.974 106.797 cv
335.974 106.797 li
335.912 104.329 mo
335.912 104.322 335.911 104.315 335.911 104.308 cv
335.911 104.315 335.912 104.322 335.912 104.329 cv
335.909 104.197 mo
335.909 104.19 335.908 104.183 335.908 104.175 cv
335.908 104.183 335.909 104.19 335.909 104.197 cv
335.906 104.074 mo
335.906 104.062 335.906 104.051 335.905 104.04 cv
335.906 104.051 335.906 104.062 335.906 104.074 cv
335.903 103.95 mo
335.903 103.934 335.903 103.918 335.902 103.902 cv
335.903 103.918 335.903 103.934 335.903 103.95 cv
335.901 103.83 mo
335.9 103.807 335.9 103.784 335.9 103.761 cv
335.9 103.784 335.9 103.807 335.901 103.83 cv
335.898 103.707 mo
335.898 103.677 335.897 103.648 335.897 103.618 cv
335.897 103.647 335.898 103.677 335.898 103.707 cv
335.896 103.587 mo
335.895 103.548 335.895 103.51 335.894 103.471 cv
335.895 103.51 335.895 103.548 335.896 103.587 cv
335.894 103.463 mo
335.855 101.329 335.853 99.1934 335.865 97.0571 cv
335.866 97.0571 li
335.853 99.1933 335.855 101.329 335.894 103.463 cv
.807843 .772549 .843137 rgb
f
335.866 97.0571 mo
335.865 97.0571 li
335.868 96.6682 335.87 96.2786 335.873 95.8896 cv
335.874 95.8896 335.874 95.8896 335.874 95.8896 cv
335.874 95.8896 li
335.871 96.2787 335.868 96.6681 335.866 97.0571 cv
.694118 .643137 .682353 rgb
f
321.898 109.502 mo
321.953 104.737 322.027 99.9726 322.121 95.2083 cv
322.121 95.2083 li
322.121 95.2083 li
322.121 95.2083 li
322.166 95.2131 322.211 95.2179 322.256 95.2226 cv
322.329 95.2301 322.4 95.2376 322.472 95.245 cv
326.743 95.6846 331.038 95.8902 335.336 95.8906 cv
335.34 95.8906 335.345 95.8906 335.349 95.8906 cv
335.349 95.8906 li
335.349 95.8906 li
335.35 95.8906 335.35 95.8906 335.351 95.8906 cv
335.438 95.8906 335.525 95.8905 335.612 95.8904 cv
335.699 95.8902 335.786 95.8899 335.873 95.8896 cv
335.87 96.2786 335.868 96.6682 335.865 97.0571 cv
335.853 99.1934 335.855 101.329 335.894 103.463 cv
335.894 103.466 335.894 103.468 335.894 103.471 cv
335.895 103.51 335.895 103.548 335.896 103.587 cv
335.896 103.597 335.896 103.607 335.897 103.618 cv
335.897 103.648 335.898 103.677 335.898 103.707 cv
335.899 103.725 335.899 103.743 335.9 103.761 cv
335.9 103.784 335.9 103.807 335.901 103.83 cv
335.901 103.854 335.902 103.878 335.902 103.902 cv
335.903 103.918 335.903 103.934 335.903 103.95 cv
335.904 103.98 335.905 104.01 335.905 104.04 cv
335.906 104.051 335.906 104.062 335.906 104.074 cv
335.907 104.108 335.908 104.142 335.908 104.175 cv
335.908 104.183 335.909 104.19 335.909 104.197 cv
335.91 104.234 335.91 104.271 335.911 104.308 cv
335.911 104.315 335.912 104.322 335.912 104.329 cv
335.915 104.455 335.918 104.581 335.921 104.706 cv
335.921 104.706 li
335.939 105.403 335.957 106.101 335.974 106.797 cv
331.282 107.789 326.59 108.691 321.898 109.502 cv
.392157 .321569 .243137 rgb
f
342.408 75.3377 mo
341.474 77.9084 338.039 79.5766 335.953 81.2461 cv
335.972 73.2795 335.99 65.3129 336.009 57.3461 cv
331.683 58.0691 327.32 58.6921 322.94 59.2455 cv
322.694 69.8364 322.448 80.4276 322.202 91.0187 cv
322.169 92.4154 322.148 93.8118 322.121 95.2083 cv
326.685 95.692 331.278 95.9074 335.874 95.8896 cv
335.895 93.1902 335.932 90.4908 335.938 87.7953 cv
335.942 86.0372 338.235 84.8375 339.461 83.7172 cv
341.093 82.2262 342.725 80.7349 344.358 79.2436 cv
345.492 78.2074 345.453 75.8881 346.071 74.4552 cv
345.133 73.9252 344.217 73.3663 343.336 72.7606 cv
343.025 73.619 342.72 74.4795 342.408 75.3377 cv
.470588 .392157 .262745 rgb
f
322.954 58.6452 mo
323.031 55.3425 323.108 52.0404 323.184 48.7378 cv
323.108 52.0405 323.031 55.3425 322.954 58.6452 cv
323.424 38.4153 mo
323.476 36.1953 323.528 33.9754 323.579 31.7552 cv
323.582 31.6124 323.645 31.275 323.645 31.0231 cv
323.645 31.275 323.582 31.6123 323.579 31.7555 cv
323.528 33.9754 323.476 36.1953 323.424 38.4153 cv
313.985 25.419 mo
313.985 25.419 li
313.375 23.3937 312.765 21.3686 312.154 19.3434 cv
312.154 19.3431 li
312.765 21.3683 313.375 23.3937 313.985 25.419 cv
313.985 25.419 li
.694118 .643137 .682353 rgb
f
312.154 19.3434 mo
311.598 17.4972 311.042 15.651 310.486 13.8047 cv
310.486 13.8047 li
310.486 13.8047 li
311.042 15.651 311.598 17.497 312.154 19.3431 cv
312.154 19.3434 li
306.157 4.06993 mo
303.56 3.38536 301.361 1.89911 299.483 0 cv
299.483 0 li
301.361 1.89911 303.56 3.38536 306.157 4.06993 cv
308.433 .252342 mo
308.335 0 li
308.335 0 li
308.433 .252342 li
.733333 .686274 .705882 rgb
f
322.94 59.2455 mo
322.945 59.0454 322.949 58.8452 322.954 58.6452 cv
323.031 55.3425 323.108 52.0405 323.184 48.7378 cv
323.264 45.297 323.344 41.856 323.424 38.4153 cv
323.424 38.4153 li
323.476 36.1953 323.528 33.9754 323.579 31.7555 cv
323.582 31.6123 323.645 31.275 323.645 31.0231 cv
323.645 30.9167 323.634 30.8255 323.602 30.7707 cv
323.602 30.7707 li
323.602 30.7707 li
320.396 28.9867 317.191 27.2029 313.985 25.419 cv
313.985 25.419 li
313.375 23.3937 312.765 21.3683 312.154 19.3431 cv
311.598 17.497 311.042 15.651 310.486 13.8047 cv
310.486 13.8047 li
310.15 12.6899 309.516 8.65083 308.446 8.42373 cv
308.446 8.42373 li
308.389 8.41265 308.333 8.40124 308.276 8.38949 cv
306.89 8.10038 305.557 7.60673 304.29 6.97388 cv
301.246 5.45302 298.968 3.04288 297.212 .237521 cv
297.162 .158655 297.114 .0794792 297.065 0 cv
299.483 0 li
301.361 1.89911 303.56 3.38536 306.157 4.06993 cv
306.638 4.1967 307.133 4.29598 307.641 4.3653 cv
307.641 4.3653 li
307.641 4.3653 li
307.203 2.91027 306.764 1.45502 306.326 0 cv
308.335 0 li
308.433 .252342 li
310.674 6.01273 312.917 11.772 315.169 17.5283 cv
315.779 19.0809 316.97 21.019 317.223 22.6515 cv
319.387 23.7416 321.551 24.8316 323.715 25.9214 cv
323.916 17.2807 324.117 8.64047 324.317 0 cv
336.142 0 li
336.142 0 li
336.097 19.1154 336.053 38.2308 336.009 57.3461 cv
336.009 57.3461 li
336.009 57.3461 li
331.683 58.0691 327.32 58.6921 322.94 59.2455 cv
.392157 .321569 .243137 rgb
f
351.032 54.3845 mo
351.83 51.1034 352.626 47.8218 353.424 44.5404 cv
352.225 47.9137 351.02 51.2854 349.818 54.6578 cv
350.223 54.5674 350.628 54.4769 351.032 54.3845 cv
.470588 .392157 .262745 rgb
f
351.421 71.0316 mo
351.421 71.0316 li
353.335 69.6169 354.86 67.8763 356.227 65.9775 cv
356.227 65.9775 li
354.86 67.8764 353.335 69.6169 351.421 71.0316 cv
.721569 .682353 .807843 rgb
f
346.071 74.4552 mo
346.071 74.4552 li
346.071 74.4552 li
346.069 74.4545 346.068 74.4537 346.067 74.453 cv
346.293 73.9268 346.608 73.5204 347.102 73.341 cv
348.751 72.7425 350.169 71.9568 351.421 71.0316 cv
351.421 71.0316 li
350.169 71.9568 348.751 72.7427 347.102 73.3412 cv
346.609 73.5204 346.297 73.93 346.071 74.4552 cv
.619608 .568627 .654902 rgb
f
356.227 65.9775 mo
356.227 65.9775 li
358.506 62.8114 360.344 59.2069 362.807 55.9488 cv
362.807 55.9488 li
360.344 59.2069 358.506 62.8115 356.227 65.9775 cv
.572549 .462745 .392157 rgb
f
343.966 71.0316 mo
343.961 71.0316 li
344.757 68.8272 345.552 66.6222 346.341 64.4153 cv
346.341 64.4153 li
345.552 66.6214 344.761 68.8274 343.966 71.0316 cv
.721569 .682353 .807843 rgb
f
346.341 64.4153 mo
346.341 64.4153 li
346.349 64.3931 346.357 64.3707 346.365 64.3484 cv
346.357 64.3708 346.349 64.3929 346.341 64.4153 cv
.619608 .568627 .654902 rgb
f
343.341 72.7641 mo
343.339 72.763 343.337 72.7618 343.336 72.7606 cv
343.544 72.1843 343.753 71.608 343.961 71.0316 cv
343.966 71.0316 li
343.758 71.6093 343.55 72.1867 343.341 72.7641 cv
f
347.964 71.0316 mo
347.964 71.0316 li
350.902 69.901 353.169 68.0498 355.149 65.8716 cv
353.169 68.0496 350.902 69.9011 347.964 71.0316 cv
346.988 71.0316 mo
346.988 71.0316 li
347.523 68.8261 348.059 66.6209 348.595 64.4153 cv
348.595 64.4153 li
348.059 66.6209 347.523 68.826 346.988 71.0316 cv
.721569 .682353 .807843 rgb
f
348.595 64.4153 mo
348.595 64.4153 li
349.407 61.072 350.22 57.7278 351.032 54.3845 cv
351.032 54.3845 351.032 54.3845 351.032 54.3845 cv
350.22 57.7279 349.407 61.0718 348.595 64.4153 cv
.619608 .568627 .654902 rgb
f
346.898 71.4005 mo
346.928 71.2775 346.958 71.1546 346.988 71.0316 cv
346.988 71.0316 li
346.958 71.1545 346.928 71.2776 346.898 71.4005 cv
347.263 71.288 347.619 71.1647 347.964 71.0316 cv
347.964 71.0316 li
347.618 71.1649 347.263 71.2879 346.898 71.4005 cv
f
355.149 65.8716 mo
355.157 65.8625 355.165 65.8531 355.174 65.844 cv
355.165 65.8531 355.157 65.8625 355.149 65.8716 cv
355.176 65.8409 mo
355.184 65.8325 355.192 65.8236 355.2 65.8151 cv
355.192 65.8236 355.184 65.8325 355.176 65.8409 cv
355.204 65.8105 mo
355.211 65.8023 355.219 65.794 355.226 65.7858 cv
355.219 65.794 355.211 65.8023 355.204 65.8105 cv
355.231 65.7802 mo
355.239 65.772 355.246 65.7639 355.253 65.7557 cv
355.246 65.7639 355.239 65.772 355.231 65.7802 cv
355.259 65.7499 mo
355.265 65.7423 355.272 65.7352 355.279 65.7276 cv
355.272 65.7352 355.265 65.7423 355.259 65.7499 cv
355.286 65.7192 mo
355.293 65.7119 355.299 65.7047 355.306 65.6974 cv
355.299 65.7047 355.293 65.7119 355.286 65.7192 cv
355.313 65.6887 mo
355.319 65.6827 355.324 65.6771 355.329 65.6711 cv
355.324 65.6768 355.319 65.683 355.313 65.6887 cv
355.341 65.6574 mo
355.346 65.6523 355.35 65.6474 355.355 65.6423 cv
355.35 65.6474 355.346 65.6523 355.341 65.6574 cv
355.369 65.6265 mo
355.372 65.6227 355.376 65.6185 355.379 65.6147 cv
355.376 65.6188 355.373 65.6224 355.369 65.6265 cv
355.396 65.5958 mo
355.4 65.5917 355.404 65.5875 355.407 65.5834 cv
355.404 65.5875 355.4 65.5917 355.396 65.5958 cv
355.423 65.5654 mo
355.426 65.5619 355.429 65.5587 355.432 65.5552 cv
355.429 65.5583 355.426 65.5622 355.423 65.5654 cv
355.451 65.5341 mo
355.453 65.5318 355.455 65.5294 355.457 65.5271 cv
355.455 65.5297 355.453 65.5315 355.451 65.5341 cv
355.479 65.5025 mo
355.479 65.5018 355.48 65.5011 355.48 65.5005 cv
355.48 65.5011 355.479 65.5018 355.479 65.5025 cv
355.505 65.472 mo
355.506 65.4711 355.507 65.4702 355.508 65.4692 cv
355.507 65.4702 355.506 65.4711 355.505 65.472 cv
.721569 .682353 .807843 rgb
f
346.365 64.3484 mo
347.52 61.1195 348.668 57.8882 349.818 54.6578 cv
349.82 54.6574 349.822 54.657 349.824 54.6565 cv
348.673 57.8878 347.52 61.1186 346.365 64.3484 cv
.619608 .568627 .654902 rgb
f
362.034 56.8562 mo
362.292 56.5536 362.55 56.2512 362.807 55.9488 cv
362.552 56.2491 362.296 56.5493 362.04 56.8498 cv
362.038 56.8519 362.036 56.8541 362.034 56.8562 cv
362.038 56.8513 mo
362.039 56.8508 362.039 56.8503 362.04 56.8498 cv
362.045 56.8439 362.049 56.8383 362.054 56.8328 cv
362.049 56.8387 362.044 56.8449 362.038 56.8513 cv
362.063 56.8224 mo
362.142 56.7298 362.174 56.6948 362.176 56.6948 cv
362.174 56.6948 362.142 56.7298 362.063 56.8224 cv
362.162 56.7146 mo
362.163 56.7141 362.163 56.7135 362.163 56.713 cv
362.172 56.7021 362.176 56.6956 362.176 56.6949 cv
362.176 56.6956 362.171 56.7028 362.162 56.7146 cv
.572549 .462745 .392157 rgb
f
362.028 56.8629 mo
362.028 56.8629 li
362.032 56.859 362.035 56.8551 362.038 56.8513 cv
362.044 56.8449 362.049 56.8387 362.054 56.8328 cv
362.057 56.8293 362.06 56.8258 362.063 56.8224 cv
362.142 56.7298 362.174 56.6948 362.176 56.6948 cv
362.176 56.6948 li
362.176 56.6948 362.176 56.6948 362.176 56.6949 cv
362.176 56.6956 362.172 56.7021 362.163 56.713 cv
362.171 56.7024 362.176 56.6963 362.175 56.6963 cv
362.172 56.6963 362.132 56.741 362.028 56.8629 cv
.34902 .282353 .235294 rgb
f
346.067 74.453 mo
345.133 73.9247 344.219 73.3676 343.341 72.7641 cv
343.55 72.1867 343.758 71.6093 343.966 71.0316 cv
344.761 68.8274 345.552 66.6214 346.341 64.4153 cv
346.349 64.3929 346.357 64.3708 346.365 64.3484 cv
346.365 64.3484 li
346.365 64.3484 li
347.52 61.1186 348.673 57.8878 349.824 54.6565 cv
350.227 54.5666 350.63 54.4765 351.032 54.3845 cv
350.22 57.7278 349.407 61.072 348.595 64.4153 cv
348.059 66.6209 347.523 68.8261 346.988 71.0316 cv
346.958 71.1546 346.928 71.2775 346.898 71.4005 cv
347.263 71.2879 347.618 71.1649 347.964 71.0316 cv
350.902 69.9011 353.169 68.0496 355.149 65.8716 cv
355.149 65.8716 li
355.157 65.8625 355.165 65.8531 355.174 65.844 cv
355.175 65.8427 355.175 65.8422 355.176 65.8409 cv
355.184 65.8325 355.192 65.8236 355.2 65.8151 cv
355.201 65.8136 355.203 65.812 355.204 65.8105 cv
355.211 65.8023 355.219 65.794 355.226 65.7858 cv
355.228 65.7839 355.23 65.7821 355.231 65.7802 cv
355.239 65.772 355.246 65.7639 355.253 65.7557 cv
355.255 65.7538 355.257 65.7518 355.259 65.7499 cv
355.265 65.7423 355.272 65.7352 355.279 65.7276 cv
355.281 65.7248 355.284 65.722 355.286 65.7192 cv
355.293 65.7119 355.299 65.7047 355.306 65.6974 cv
355.308 65.6946 355.311 65.6915 355.313 65.6887 cv
355.319 65.683 355.324 65.6768 355.329 65.6711 cv
355.333 65.6666 355.337 65.6618 355.341 65.6574 cv
355.346 65.6523 355.35 65.6474 355.355 65.6423 cv
355.36 65.637 355.364 65.6319 355.369 65.6265 cv
355.373 65.6224 355.376 65.6188 355.379 65.6147 cv
355.385 65.6084 355.391 65.6022 355.396 65.5958 cv
355.4 65.5917 355.404 65.5875 355.407 65.5834 cv
355.413 65.5773 355.418 65.5714 355.423 65.5654 cv
355.426 65.5622 355.429 65.5583 355.432 65.5552 cv
355.438 65.5482 355.445 65.541 355.451 65.5341 cv
355.453 65.5315 355.455 65.5297 355.457 65.5271 cv
355.464 65.5189 355.471 65.5108 355.479 65.5025 cv
355.479 65.5018 355.48 65.5011 355.48 65.5005 cv
355.489 65.4909 355.497 65.4816 355.505 65.472 cv
355.506 65.4711 355.507 65.4702 355.508 65.4692 cv
357.796 62.862 359.719 59.8356 361.899 57.0321 cv
361.897 57.0353 361.896 57.0369 361.896 57.0369 cv
361.9 57.0369 361.971 56.9517 362.041 56.8665 cv
362.091 56.8053 362.14 56.7442 362.162 56.7146 cv
362.171 56.7028 362.176 56.6956 362.176 56.6949 cv
362.176 56.6948 362.176 56.6948 362.176 56.6948 cv
362.176 56.6948 li
362.174 56.6948 362.142 56.7298 362.063 56.8224 cv
362.06 56.8258 362.057 56.8293 362.054 56.8328 cv
362.049 56.8383 362.045 56.8439 362.04 56.8498 cv
362.296 56.5493 362.552 56.2491 362.807 55.9488 cv
362.807 55.9488 li
360.344 59.2069 358.506 62.8114 356.227 65.9775 cv
354.86 67.8763 353.335 69.6169 351.421 71.0316 cv
350.169 71.9568 348.751 72.7425 347.102 73.341 cv
346.608 73.5204 346.293 73.9268 346.067 74.453 cv
362.028 56.8629 mo
362.03 56.8606 362.032 56.8584 362.034 56.8562 cv
362.036 56.8541 362.038 56.8519 362.04 56.8498 cv
362.039 56.8503 362.039 56.8508 362.038 56.8513 cv
362.035 56.8551 362.032 56.859 362.028 56.8629 cv
f
346.071 74.4552 mo
345.133 73.9252 344.217 73.3663 343.336 72.7606 cv
343.336 72.7606 li
343.337 72.7618 343.339 72.763 343.341 72.7641 cv
344.219 73.3676 345.133 73.9247 346.067 74.453 cv
346.068 74.4537 346.069 74.4545 346.071 74.4552 cv
346.071 74.4552 li
f
321.898 109.502 mo
321.783 119.494 321.733 129.487 321.693 139.481 cv
326.704 139.547 331.753 139.632 336.812 139.589 cv
336.533 128.658 336.254 117.728 335.974 106.797 cv
331.282 107.789 326.59 108.691 321.898 109.502 cv
.470588 .392157 .262745 rgb
f
337.765 176.895 mo
337.765 176.895 li
337.672 173.255 337.579 169.616 337.486 165.976 cv
337.486 165.976 li
337.579 169.615 337.672 173.255 337.765 176.895 cv
337.342 160.328 mo
337.341 160.328 li
337.165 153.416 336.988 146.501 336.812 139.589 cv
336.812 139.589 336.812 139.589 336.812 139.589 cv
336.989 146.502 337.165 153.415 337.342 160.328 cv
.807843 .772549 .843137 rgb
f
337.486 165.976 mo
337.438 164.092 337.39 162.212 337.341 160.328 cv
337.342 160.328 li
337.39 162.211 337.438 164.093 337.486 165.976 cv
337.486 165.976 li
.792157 .752941 .819608 rgb
f
321.64 151.541 mo
321.641 151.374 321.642 151.207 321.643 151.04 cv
321.642 151.207 321.641 151.373 321.64 151.541 cv
.807843 .772549 .843137 rgb
f
337.765 176.895 mo
332.308 176.228 326.905 175.204 321.526 173.976 cv
321.564 166.498 321.602 159.019 321.64 151.541 cv
321.64 151.541 li
321.641 151.373 321.642 151.207 321.643 151.04 cv
321.662 147.187 321.677 143.334 321.693 139.481 cv
321.693 139.481 li
321.772 139.482 321.851 139.483 321.93 139.484 cv
325.92 139.537 329.932 139.6 333.955 139.601 cv
333.959 139.601 333.963 139.601 333.967 139.601 cv
333.967 139.601 li
333.967 139.601 li
333.968 139.601 333.969 139.601 333.97 139.601 cv
334.826 139.601 335.681 139.598 336.537 139.591 cv
336.629 139.59 336.72 139.59 336.812 139.589 cv
336.988 146.501 337.165 153.416 337.341 160.328 cv
337.39 162.212 337.438 164.092 337.486 165.976 cv
337.579 169.616 337.672 173.255 337.765 176.895 cv
.392157 .321569 .243137 rgb
f
333.967 139.601 mo
333.963 139.601 333.959 139.601 333.955 139.601 cv
333.959 139.601 333.963 139.601 333.967 139.601 cv
333.967 139.601 li
333.97 139.601 mo
334.825 139.601 335.681 139.598 336.537 139.591 cv
335.681 139.598 334.826 139.601 333.97 139.601 cv
321.93 139.484 mo
321.851 139.483 321.772 139.482 321.693 139.481 cv
321.772 139.482 321.851 139.483 321.93 139.484 cv
f
338.859 219.741 mo
333.003 219.967 327.15 220.219 321.289 220.554 cv
321.242 229.827 321.195 239.099 321.148 248.371 cv
327.307 248.13 333.389 247.642 339.508 246.957 cv
339.494 245.425 339.476 243.896 339.437 242.374 cv
339.244 234.83 339.051 227.285 338.859 219.741 cv
cp
.470588 .392157 .262745 rgb
f
339.508 246.957 mo
333.389 247.641 327.307 248.13 321.148 248.371 cv
321.137 250.441 321.127 252.511 321.116 254.58 cv
321.085 260.711 320.9 266.84 320.624 272.967 cv
327.449 275.731 334.405 278.292 341.469 280.481 cv
340.976 274.736 340.484 268.991 339.992 263.246 cv
339.53 257.865 339.557 252.389 339.508 246.957 cv
f
317.505 320.803 mo
317.505 320.803 li
318.542 304.869 319.904 288.923 320.624 272.967 cv
320.625 272.968 320.626 272.968 320.627 272.969 cv
319.907 288.925 318.542 304.868 317.505 320.803 cv
343.658 306.013 mo
343.288 301.699 342.918 297.385 342.548 293.071 cv
342.918 297.385 343.288 301.699 343.658 306.013 cv
.662745 .576471 .501961 rgb
f
346.413 338.151 mo
346.413 338.15 li
346.223 335.94 346.034 333.73 345.845 331.52 cv
346.034 333.73 346.224 335.94 346.413 338.151 cv
317.445 321.738 mo
317.45 321.654 317.456 321.57 317.461 321.486 cv
317.456 321.571 317.45 321.654 317.445 321.738 cv
317.463 321.465 mo
317.477 321.244 317.491 321.024 317.505 320.803 cv
317.505 320.803 li
317.491 321.022 317.477 321.245 317.463 321.465 cv
.270588 .211765 .14902 rgb
f
349.772 342.482 mo
348.625 342.093 347.464 341.641 346.936 341.225 cv
347.464 341.641 348.625 342.093 349.772 342.482 cv
346.493 339.083 mo
346.466 338.772 346.44 338.461 346.413 338.15 cv
346.413 338.151 li
346.44 338.461 346.466 338.772 346.493 339.083 cv
.423529 .329412 .219608 rgb
f
356.937 353.783 mo
356.906 353.78 356.875 353.778 356.844 353.775 cv
356.875 353.778 356.905 353.78 356.937 353.783 cv
356.937 353.783 li
356.806 353.772 mo
356.787 353.771 356.768 353.769 356.749 353.768 cv
356.768 353.769 356.787 353.771 356.806 353.772 cv
356.716 353.765 mo
356.695 353.764 356.673 353.762 356.652 353.761 cv
356.673 353.762 356.695 353.764 356.716 353.765 cv
356.626 353.759 mo
356.602 353.757 356.578 353.755 356.554 353.753 cv
356.579 353.755 356.602 353.757 356.626 353.759 cv
356.538 353.752 mo
356.51 353.75 356.482 353.748 356.454 353.746 cv
356.482 353.748 356.51 353.75 356.538 353.752 cv
356.448 353.745 mo
354.541 353.606 352.63 353.538 350.717 353.493 cv
350.716 353.492 350.716 353.492 350.715 353.492 cv
352.628 353.538 354.541 353.606 356.448 353.745 cv
.333333 .270588 .192157 rgb
f
356.937 353.783 mo
356.905 353.78 356.875 353.778 356.844 353.775 cv
356.831 353.774 356.818 353.773 356.806 353.772 cv
356.787 353.771 356.768 353.769 356.749 353.768 cv
356.738 353.767 356.727 353.766 356.716 353.765 cv
356.695 353.764 356.673 353.762 356.652 353.761 cv
356.644 353.76 356.635 353.759 356.626 353.759 cv
356.602 353.757 356.579 353.755 356.554 353.753 cv
356.549 353.753 356.543 353.752 356.538 353.752 cv
356.51 353.75 356.482 353.748 356.454 353.746 cv
356.452 353.746 356.45 353.746 356.448 353.745 cv
354.541 353.606 352.628 353.538 350.715 353.492 cv
344.968 351.374 339.521 348.474 334.583 344.707 cv
329.406 334.317 329.044 322.492 325.272 311.805 cv
324.577 322.926 321.797 334.048 319.016 345.169 cv
318.028 344.182 317.042 343.104 316.148 341.94 cv
316.58 335.206 317.013 328.472 317.445 321.738 cv
317.445 321.738 li
317.45 321.654 317.456 321.571 317.461 321.486 cv
317.462 321.479 317.462 321.472 317.463 321.465 cv
317.477 321.245 317.491 321.022 317.505 320.803 cv
318.542 304.868 319.907 288.925 320.627 272.969 cv
327.451 275.732 334.406 278.293 341.469 280.481 cv
341.829 284.678 342.189 288.875 342.548 293.071 cv
342.918 297.385 343.288 301.699 343.658 306.013 cv
343.658 306.013 li
344.387 314.515 345.116 323.017 345.845 331.52 cv
345.845 331.52 li
346.034 333.73 346.223 335.94 346.413 338.15 cv
346.44 338.461 346.466 338.772 346.493 339.083 cv
346.493 339.083 li
346.543 339.663 346.593 340.244 346.642 340.824 cv
346.653 340.951 346.759 341.086 346.936 341.225 cv
347.464 341.641 348.625 342.093 349.772 342.482 cv
351.002 342.898 352.216 343.241 352.622 343.386 cv
351.272 344.21 349.945 345.075 348.554 345.831 cv
348.554 345.831 li
348.554 345.831 li
351.412 348.411 354.222 351.051 356.937 353.783 cv
.392157 .321569 .243137 rgb
f
317.142 353.534 mo
315.698 353.534 314.254 353.486 312.826 353.444 cv
314.253 353.486 315.697 353.534 317.141 353.534 cv
319.396 353.534 321.652 353.417 323.85 352.973 cv
326.145 352.51 328.347 352.126 330.594 352.126 cv
331.634 352.126 332.684 352.208 333.758 352.403 cv
333.784 352.408 333.812 352.413 333.838 352.417 cv
333.811 352.413 333.785 352.408 333.758 352.403 cv
332.684 352.208 331.634 352.126 330.594 352.126 cv
328.347 352.126 326.145 352.51 323.85 352.973 cv
321.653 353.417 319.397 353.534 317.142 353.534 cv
350.717 353.493 mo
345.259 353.363 339.788 353.415 334.391 352.513 cv
339.788 353.415 345.257 353.362 350.715 353.492 cv
350.716 353.492 350.716 353.492 350.717 353.493 cv
312.77 353.443 mo
312.736 353.442 312.702 353.441 312.668 353.44 cv
312.668 353.44 li
312.702 353.441 312.736 353.442 312.77 353.443 cv
312.668 353.44 mo
314.244 351.554 315.492 350.654 315.722 348.474 cv
315.492 350.654 314.245 351.554 312.668 353.44 cv
334.38 352.511 mo
334.353 352.507 334.326 352.502 334.299 352.498 cv
334.326 352.502 334.353 352.507 334.38 352.511 cv
334.295 352.497 mo
334.266 352.492 334.237 352.487 334.208 352.482 cv
334.237 352.487 334.266 352.492 334.295 352.497 cv
334.202 352.481 mo
334.177 352.477 334.151 352.473 334.125 352.468 cv
334.151 352.473 334.177 352.477 334.202 352.481 cv
334.108 352.465 mo
334.081 352.46 334.055 352.456 334.028 352.451 cv
334.054 352.456 334.082 352.461 334.108 352.465 cv
334.026 352.451 mo
333.999 352.446 333.971 352.441 333.943 352.436 cv
333.971 352.441 333.998 352.446 334.026 352.451 cv
333.924 352.433 mo
333.903 352.429 333.882 352.425 333.86 352.421 cv
333.882 352.425 333.903 352.429 333.924 352.433 cv
315.746 348.202 mo
315.837 346.781 315.928 345.361 316.019 343.941 cv
315.928 345.361 315.837 346.781 315.746 348.202 cv
.298039 .239216 .184314 rgb
f
317.141 353.534 mo
315.697 353.534 314.253 353.486 312.826 353.444 cv
312.808 353.444 312.789 353.443 312.77 353.443 cv
312.736 353.442 312.702 353.441 312.668 353.44 cv
312.668 353.44 li
314.245 351.554 315.492 350.654 315.722 348.474 cv
315.732 348.385 315.74 348.295 315.746 348.202 cv
315.746 348.202 li
315.837 346.781 315.928 345.361 316.019 343.941 cv
316.054 343.397 316.089 342.854 316.124 342.31 cv
316.132 342.187 316.14 342.064 316.148 341.94 cv
317.042 343.104 318.028 344.182 319.016 345.169 cv
321.797 334.048 324.577 322.926 325.272 311.805 cv
329.044 322.492 329.406 334.317 334.583 344.707 cv
339.521 348.474 344.968 351.374 350.715 353.492 cv
345.257 353.362 339.788 353.415 334.391 352.513 cv
334.387 352.513 334.384 352.512 334.38 352.511 cv
334.353 352.507 334.326 352.502 334.299 352.498 cv
334.298 352.498 334.296 352.497 334.295 352.497 cv
334.266 352.492 334.237 352.487 334.208 352.482 cv
334.206 352.482 334.204 352.482 334.202 352.481 cv
334.177 352.477 334.151 352.473 334.125 352.468 cv
334.12 352.467 334.114 352.466 334.108 352.465 cv
334.082 352.461 334.054 352.456 334.028 352.451 cv
334.027 352.451 334.027 352.451 334.026 352.451 cv
333.998 352.446 333.971 352.441 333.943 352.436 cv
333.937 352.435 333.931 352.434 333.924 352.433 cv
333.903 352.429 333.882 352.425 333.86 352.421 cv
333.853 352.42 333.845 352.419 333.838 352.417 cv
333.812 352.413 333.784 352.408 333.758 352.403 cv
332.684 352.208 331.634 352.126 330.594 352.126 cv
328.347 352.126 326.145 352.51 323.85 352.973 cv
321.652 353.417 319.396 353.534 317.141 353.534 cv
.34902 .282353 .235294 rgb
f
362.029 56.8628 mo
361.946 56.9685 361.909 57.017 361.899 57.032 cv
362.029 56.8628 li
cp
.470588 .392157 .262745 rgb
f
361.899 57.032 mo
361.853 57.1018 362.438 56.3823 362.029 56.8628 cv
361.899 57.032 li
cp
f
305.073 110.214 mo
305.11 110.166 li
305.44 109.689 305.11 110.157 305.073 110.214 cv
.470588 .34902 .172549 rgb
f
188.548 19.6349 mo
190.107 22.5139 190.27 25.9647 190.83 29.1834 cv
184.982 28.4063 178.499 25.8279 175.083 20.7374 cv
172.099 16.6408 171.042 11.9027 170.703 6.94347 cv
170.639 13.2696 171.917 19.4013 176.294 24.2327 cv
178.665 26.849 181.721 28.8064 184.987 30.1132 cv
186.75 30.8288 188.583 31.3655 190.446 31.7478 cv
192.009 32.0686 191.956 35.6181 192.231 37.1707 cv
192.4 38.0769 192.386 39.4393 192.841 40.2047 cv
194.68 42.6395 197.99 44.6096 200.297 46.5959 cv
201.187 47.3622 205.76 50.354 205.719 51.4474 cv
205.681 52.4437 205.644 53.4398 205.607 54.4361 cv
205.236 64.2648 204.381 74.1715 204.752 84.0065 cv
205.874 113.794 206.996 143.581 208.118 173.368 cv
208.433 181.72 208.748 190.072 209.062 198.424 cv
206.343 196.85 203.614 195.305 200.972 193.603 cv
198.918 192.281 197.378 191.297 199.256 194.166 cv
201.154 197.066 203.178 199.86 205.213 202.665 cv
206.434 204.331 209.439 207.226 209.375 209.169 cv
209.296 211.557 209.218 213.946 209.139 216.335 cv
208.674 230.431 208.21 244.528 207.745 258.625 cv
207.193 275.364 206.642 292.102 206.09 308.841 cv
205.902 314.532 205.715 320.223 205.528 325.913 cv
205.477 327.447 205.426 328.981 205.376 330.515 cv
205.311 332.489 204.703 331.939 202.413 332.37 cv
198.52 333.103 194.609 333.729 190.68 334.231 cv
195.509 334.757 200.339 335.267 205.17 335.777 cv
204.169 337.034 203.151 338.278 202.114 339.506 cv
201.116 340.688 199.442 343.434 197.859 343.892 cv
210.333 343.137 222.752 342.052 235.186 340.84 cv
243.456 340.035 251.824 338.904 260.127 338.644 cv
266.789 338.435 273.442 338.442 280.098 338.45 cv
283.534 338.454 286.971 338.457 290.411 338.432 cv
287.187 335.824 283.953 333.229 280.713 330.64 cv
279.834 329.937 275.923 327.659 275.834 326.603 cv
275.753 325.65 275.672 324.696 275.591 323.743 cv
275.177 318.85 274.762 313.957 274.347 309.064 cv
272.967 292.771 271.587 276.477 270.206 260.184 cv
268.438 239.318 265.773 218.399 265.774 197.446 cv
265.774 182.026 265.774 166.607 265.774 151.186 cv
265.774 150.263 265.427 148.541 265.774 147.663 cv
271.404 142.665 276.807 137.431 282.291 132.275 cv
283.543 131.119 284.108 130.959 284.233 129.352 cv
284.308 128.399 284.365 127.449 284.416 126.494 cv
284.457 125.65 284.498 124.805 284.539 123.961 cv
284.622 122.273 284.537 122.374 286.2 122.235 cv
293.516 121.623 300.368 118.594 304.264 112.138 cv
304.83 111.2 305.286 110.221 305.757 109.232 cv
305.541 109.544 305.326 109.855 305.11 110.166 cv
305.073 110.214 li
302.717 113.442 299.748 116.069 295.906 117.382 cv
293.835 118.112 291.637 118.459 289.447 118.552 cv
288.359 118.598 287.27 118.573 286.184 118.506 cv
284.68 118.415 284.806 118.385 284.868 116.908 cv
284.957 114.804 284.897 113.858 286.169 112.114 cv
287.353 110.492 288.536 108.87 289.719 107.248 cv
291.572 104.68 293.418 102.108 295.246 99.5227 cv
292.994 102.076 290.746 104.633 288.536 107.224 cv
287.067 108.947 285.598 110.669 284.129 112.392 cv
283.31 113.352 281.247 126.077 280.396 127.777 cv
279.831 129.468 276.634 130.925 275.299 131.879 cv
272.129 134.144 268.961 136.41 265.775 138.652 cv
265.775 124.094 265.353 109.536 265.074 94.9814 cv
264.47 63.3697 263.864 31.7577 263.259 .145998 cv
263.257 0 li
207.657 0 li
207.216 11.7078 206.775 23.4156 206.334 35.1233 cv
206.244 37.5136 206.154 39.9041 206.064 42.2946 cv
203.691 40.7339 201.314 39.1793 198.935 37.6276 cv
198.17 37.129 197.926 37.0128 197.499 36.2855 cv
196.926 35.3065 196.705 33.8778 196.352 32.8113 cv
195.613 30.5769 194.873 28.3425 194.133 26.1084 cv
193.554 24.3627 192.976 22.6171 192.397 20.8716 cv
191.493 18.1481 188.845 15.4183 187.217 13.074 cv
184.18 8.70153 181.115 4.3484 178.044 0 cv
177.966 0 li
179.91 3.64702 181.863 7.28864 183.831 10.9228 cv
185.403 13.827 186.976 16.731 188.548 19.6349 cv
f
305.11 110.166 mo
305.44 109.689 305.11 110.156 305.073 110.214 cv
305.11 110.166 li
f
274.68 312.994 mo
274.68 312.994 li
274.652 312.659 274.624 312.324 274.595 311.989 cv
274.595 311.989 274.595 311.989 274.595 311.989 cv
274.595 311.989 li
274.595 311.989 li
274.595 311.989 li
274.595 311.989 li
274.624 312.324 274.652 312.659 274.68 312.994 cv
.654902 .607843 .678431 rgb
f
274.681 312.997 mo
274.681 312.997 li
274.681 312.996 274.68 312.995 274.68 312.994 cv
274.68 312.994 li
274.68 312.995 274.681 312.996 274.681 312.997 cv
.223529 .164706 .133333 rgb
f
274.718 313.443 mo
274.718 313.443 li
274.706 313.294 274.693 313.146 274.681 312.997 cv
274.681 312.997 li
274.693 313.146 274.706 313.295 274.718 313.443 cv
.34902 .254902 .192157 rgb
f
275.706 325.104 mo
275.668 324.65 275.63 324.197 275.591 323.743 cv
275.359 321.008 275.128 318.272 274.896 315.537 cv
275.128 318.272 275.359 321.007 275.591 323.743 cv
275.63 324.196 275.668 324.65 275.706 325.104 cv
274.758 313.908 mo
274.745 313.753 274.732 313.598 274.718 313.443 cv
274.718 313.443 li
274.732 313.598 274.745 313.753 274.758 313.908 cv
.243137 .188235 .141176 rgb
f
285.124 334.183 mo
279.374 330.239 273.676 326.106 268.723 321.089 cv
266.274 305.737 265.832 290.385 265.752 275.032 cv
267.465 287.494 270.552 299.882 274.595 311.989 cv
274.624 312.324 274.652 312.659 274.68 312.994 cv
274.68 312.995 274.681 312.996 274.681 312.997 cv
274.693 313.146 274.706 313.294 274.718 313.443 cv
274.732 313.598 274.745 313.753 274.758 313.908 cv
274.804 314.451 274.85 314.994 274.896 315.537 cv
275.128 318.272 275.359 321.008 275.591 323.743 cv
275.63 324.197 275.668 324.65 275.706 325.104 cv
275.749 325.604 275.791 326.104 275.833 326.604 cv
275.923 327.659 279.834 329.937 280.713 330.64 cv
282.186 331.817 283.653 333.003 285.124 334.183 cv
.34902 .25098 .152941 rgb
f
202.669 332.325 mo
202.669 332.325 li
204.749 331.977 205.313 332.414 205.376 330.514 cv
205.401 329.742 205.427 328.97 205.452 328.198 cv
205.427 328.97 205.401 329.742 205.376 330.515 cv
205.313 332.414 204.749 331.977 202.669 332.325 cv
.298039 .239216 .184314 rgb
f
202.784 338.934 mo
202.78 338.712 li
203.588 337.743 204.385 336.764 205.17 335.777 cv
205.17 335.777 li
205.17 335.777 li
205.17 335.777 li
204.355 335.691 203.54 335.605 202.725 335.519 cv
202.669 332.325 li
204.749 331.977 205.313 332.414 205.376 330.515 cv
205.401 329.742 205.427 328.97 205.452 328.198 cv
205.477 327.436 205.503 326.675 205.528 325.913 cv
205.715 320.223 205.902 314.532 206.09 308.841 cv
206.475 297.178 206.859 285.516 207.243 273.853 cv
207.243 273.853 li
207.243 273.853 li
210.399 263.375 213.47 252.908 215.074 242.216 cv
214.464 270.866 212.686 299.517 211.424 328.166 cv
208.533 331.871 205.843 335.525 202.784 338.934 cv
.34902 .25098 .152941 rgb
f
274.595 311.989 mo
274.595 311.989 li
274.589 311.91 274.582 311.83 274.575 311.751 cv
274.582 311.83 274.589 311.91 274.595 311.989 cv
.733333 .686274 .705882 rgb
f
272.412 286.216 mo
272.204 283.768 271.997 281.322 271.79 278.873 cv
271.997 281.322 272.204 283.768 272.412 286.216 cv
272.412 286.216 272.412 286.216 272.412 286.216 cv
.823529 .803922 .878431 rgb
f
273.251 296.123 mo
272.971 292.821 272.691 289.518 272.412 286.216 cv
272.412 286.216 272.412 286.216 272.412 286.216 cv
272.691 289.518 272.971 292.821 273.251 296.123 cv
273.251 296.123 li
.662745 .576471 .501961 rgb
f
274.347 309.064 mo
273.982 304.75 273.616 300.437 273.251 296.123 cv
273.251 296.123 li
273.617 300.437 273.982 304.75 274.347 309.064 cv
.733333 .686274 .705882 rgb
f
268.078 237.24 mo
267.781 234.052 267.493 230.862 267.228 227.671 cv
267.228 227.671 li
267.493 230.862 267.781 234.052 268.078 237.24 cv
266.365 215.762 mo
266.365 215.762 li
266 209.66 265.774 203.554 265.774 197.446 cv
265.774 203.554 266 209.66 266.365 215.762 cv
.807843 .772549 .843137 rgb
f
267.228 227.671 mo
267.228 227.671 li
266.898 223.702 266.602 219.734 266.365 215.762 cv
266.365 215.762 li
266.602 219.734 266.898 223.702 267.228 227.671 cv
.823529 .803922 .878431 rgb
f
207.445 205.388 mo
206.631 204.366 205.749 203.397 205.213 202.665 cv
203.178 199.86 201.154 197.066 199.256 194.166 cv
199.256 194.166 li
199.256 194.166 li
201.154 197.066 203.178 199.86 205.213 202.665 cv
205.75 203.397 206.631 204.366 207.445 205.388 cv
209.062 198.424 mo
209.062 198.424 li
208.835 192.395 208.608 186.366 208.381 180.336 cv
208.381 180.336 li
208.608 186.365 208.835 192.395 209.062 198.424 cv
200.972 193.603 mo
199.894 192.909 198.958 192.309 198.583 192.309 cv
198.583 192.309 198.583 192.309 198.583 192.309 cv
198.959 192.309 199.894 192.909 200.972 193.603 cv
.807843 .772549 .843137 rgb
f
288.998 338.441 mo
289.469 338.438 289.94 338.435 290.411 338.432 cv
290.411 338.432 li
289.94 338.435 289.469 338.438 288.998 338.441 cv
.333333 .270588 .192157 rgb
f
202.865 343.565 mo
202.784 338.934 li
205.843 335.525 208.533 331.871 211.424 328.166 cv
212.686 299.517 214.464 270.866 215.074 242.216 cv
215.074 242.216 li
215.074 242.216 li
213.47 252.908 210.399 263.375 207.243 273.853 cv
207.41 268.777 207.578 263.701 207.745 258.625 cv
208.21 244.528 208.674 230.431 209.139 216.335 cv
209.218 213.946 209.296 211.557 209.375 209.169 cv
209.411 208.08 208.483 206.692 207.445 205.388 cv
206.631 204.366 205.75 203.397 205.213 202.665 cv
203.178 199.86 201.154 197.066 199.256 194.166 cv
199.256 194.166 li
198.363 192.802 198.243 192.309 198.583 192.309 cv
198.958 192.309 199.894 192.909 200.972 193.603 cv
200.972 193.603 li
203.614 195.305 206.343 196.85 209.062 198.424 cv
209.062 198.424 li
209.062 198.424 li
208.835 192.395 208.608 186.365 208.381 180.336 cv
227.254 176.415 246.505 174.453 265.774 173.285 cv
265.774 181.339 265.774 189.393 265.774 197.446 cv
265.774 197.446 li
265.774 197.446 li
265.774 197.446 li
265.774 197.446 li
265.774 203.554 266 209.66 266.365 215.762 cv
266.602 219.734 266.898 223.702 267.228 227.671 cv
267.493 230.862 267.781 234.052 268.078 237.24 cv
268.791 244.894 269.558 252.543 270.206 260.184 cv
270.734 266.413 271.262 272.644 271.79 278.873 cv
271.997 281.322 272.204 283.768 272.412 286.216 cv
272.691 289.518 272.971 292.821 273.251 296.123 cv
273.616 300.437 273.982 304.75 274.347 309.064 cv
274.347 309.064 li
274.423 309.96 274.499 310.855 274.575 311.751 cv
274.582 311.83 274.589 311.91 274.595 311.989 cv
270.552 299.882 267.465 287.494 265.752 275.032 cv
265.752 275.032 li
265.752 275.032 li
265.832 290.385 266.274 305.737 268.723 321.089 cv
273.676 326.106 279.374 330.239 285.124 334.183 cv
286.887 335.599 288.653 337.01 290.411 338.432 cv
289.94 338.435 289.469 338.438 288.998 338.441 cv
287.326 338.449 285.654 338.452 283.982 338.452 cv
283.851 338.452 283.72 338.452 283.589 338.452 cv
277.6 336.235 271.763 333.63 266.35 330.223 cv
257.099 307.954 254.996 283.49 249.269 260.58 cv
249.269 277.045 246.736 292.876 246.103 309.34 cv
244.203 301.108 241.67 292.876 239.137 285.277 cv
239.137 299.232 235.938 312.652 233.943 326.029 cv
225.151 332.757 214.996 337.585 205.464 343.384 cv
204.598 343.445 203.732 343.505 202.865 343.565 cv
.392157 .286274 .160784 rgb
f
191.691 33.4234 mo
191.478 32.6318 191.15 31.9939 190.6 31.7917 cv
191.15 31.9938 191.479 32.6315 191.691 33.4227 cv
191.691 33.4234 191.691 33.4227 191.691 33.4234 cv
190.6 31.7915 mo
190.588 31.7874 190.577 31.7834 190.565 31.7797 cv
190.577 31.7834 190.588 31.7874 190.6 31.7915 cv
190.565 31.7795 mo
190.557 31.777 190.55 31.7746 190.542 31.7722 cv
190.55 31.7746 190.557 31.777 190.565 31.7795 cv
190.542 31.7722 mo
190.538 31.771 190.534 31.7699 190.53 31.7688 cv
190.534 31.7699 190.538 31.771 190.542 31.7722 cv
190.53 31.7686 mo
190.522 31.7664 190.514 31.7642 190.507 31.7622 cv
190.514 31.7643 190.522 31.7664 190.53 31.7686 cv
190.505 31.7618 mo
190.502 31.7609 190.499 31.7601 190.495 31.7592 cv
190.499 31.7601 190.502 31.7609 190.505 31.7618 cv
190.494 31.7588 mo
190.486 31.7569 190.478 31.755 190.471 31.7533 cv
190.478 31.755 190.486 31.7569 190.494 31.7588 cv
190.469 31.7528 mo
190.466 31.7521 190.462 31.7514 190.459 31.7507 cv
190.462 31.7514 190.466 31.7521 190.469 31.7528 cv
190.457 31.7502 mo
190.453 31.7494 190.449 31.7486 190.446 31.7478 cv
188.583 31.3655 186.75 30.8288 184.987 30.1132 cv
182.107 28.9608 179.39 27.3022 177.162 25.1321 cv
177.162 25.1321 li
179.39 27.3022 182.107 28.9608 184.987 30.1132 cv
186.75 30.8288 188.583 31.3655 190.446 31.7478 cv
190.449 31.7486 190.453 31.7494 190.457 31.7502 cv
.694118 .643137 .682353 rgb
f
177.162 25.1321 mo
177.119 25.0897 177.075 25.0471 177.032 25.0044 cv
177.032 25.0044 li
177.075 25.0471 177.119 25.0897 177.162 25.1321 cv
177.162 25.1321 li
.682353 .584314 .521569 rgb
f
184.279 8.86132 mo
183.069 7.13256 181.856 5.40595 180.641 3.68088 cv
180.641 3.68086 li
181.856 5.40589 183.069 7.13256 184.279 8.86132 cv
.694118 .643137 .682353 rgb
f
180.641 3.68088 mo
179.776 2.45337 178.91 1.22644 178.044 0 cv
178.91 1.22644 179.776 2.45336 180.641 3.68086 cv
180.641 3.68088 li
.682353 .584314 .521569 rgb
f
191.691 33.4227 mo
191.479 32.6315 191.15 31.9938 190.6 31.7917 cv
190.6 31.7916 190.6 31.7916 190.6 31.7915 cv
190.588 31.7874 190.577 31.7834 190.565 31.7797 cv
190.565 31.7796 190.565 31.7796 190.565 31.7795 cv
190.557 31.777 190.55 31.7746 190.542 31.7722 cv
190.542 31.7722 190.542 31.7722 190.542 31.7722 cv
190.538 31.771 190.534 31.7699 190.53 31.7688 cv
190.53 31.7687 190.53 31.7687 190.53 31.7686 cv
190.522 31.7664 190.514 31.7643 190.507 31.7622 cv
190.506 31.7621 190.506 31.7619 190.505 31.7618 cv
190.502 31.7609 190.499 31.7601 190.495 31.7592 cv
190.495 31.7591 190.494 31.7589 190.494 31.7588 cv
190.486 31.7569 190.478 31.755 190.471 31.7533 cv
190.47 31.7531 190.469 31.753 190.469 31.7528 cv
190.466 31.7521 190.462 31.7514 190.459 31.7507 cv
190.459 31.7505 190.458 31.7504 190.457 31.7502 cv
190.453 31.7494 190.449 31.7486 190.446 31.7478 cv
188.583 31.3655 186.75 30.8288 184.987 30.1132 cv
182.107 28.9608 179.39 27.3022 177.162 25.1321 cv
177.119 25.0897 177.075 25.0471 177.032 25.0044 cv
176.76 22.8047 li
180.375 26.5412 185.834 28.5197 190.83 29.1834 cv
190.83 29.1834 li
190.83 29.1834 li
190.27 25.9647 190.107 22.5139 188.548 19.6349 cv
186.976 16.731 185.403 13.827 183.831 10.9228 cv
182.708 8.84931 181.59 6.77345 180.476 4.69548 cv
179.638 3.13145 178.801 1.56619 177.966 0 cv
178.044 0 li
178.044 0 li
178.91 1.22644 179.776 2.45337 180.641 3.68088 cv
181.856 5.40595 183.069 7.13256 184.279 8.86132 cv
185.261 10.264 186.24 11.6678 187.217 13.074 cv
188.845 15.4183 191.493 18.1481 192.397 20.8716 cv
192.861 22.2699 193.324 23.668 193.787 25.0661 cv
193.088 27.8517 192.39 30.6371 191.691 33.4227 cv
.392157 .286274 .160784 rgb
f
204.956 68.0623 mo
205.137 64.1257 205.364 60.1904 205.533 56.2665 cv
213.371 49.0116 222.934 43.531 232.93 40.5887 cv
232.935 40.5873 232.937 40.5866 232.942 40.5851 cv
232.962 40.5792 232.983 40.5731 233.003 40.5671 cv
233.008 40.5657 233.013 40.5642 233.018 40.5628 cv
233.037 40.5573 233.059 40.551 233.077 40.5455 cv
233.084 40.5436 233.089 40.542 233.096 40.5401 cv
233.115 40.5347 233.132 40.5297 233.151 40.5242 cv
233.157 40.5223 233.167 40.5194 233.174 40.5175 cv
233.191 40.5125 233.207 40.5079 233.224 40.503 cv
233.234 40.5001 233.243 40.4974 233.253 40.4945 cv
233.269 40.49 233.283 40.4858 233.299 40.4813 cv
233.309 40.4785 233.321 40.4751 233.331 40.4722 cv
233.346 40.4677 233.36 40.4639 233.375 40.4594 cv
233.387 40.4561 233.396 40.4534 233.408 40.4501 cv
233.422 40.4461 233.439 40.4412 233.453 40.4371 cv
233.463 40.4343 233.473 40.4315 233.483 40.4287 cv
233.499 40.4242 233.514 40.4199 233.529 40.4155 cv
233.541 40.4122 233.55 40.4096 233.562 40.4063 cv
233.576 40.4023 233.592 40.3977 233.606 40.3937 cv
233.616 40.3909 233.629 40.3874 233.639 40.3846 cv
233.653 40.3806 233.669 40.3761 233.683 40.3722 cv
233.694 40.3689 233.706 40.3657 233.717 40.3625 cv
233.731 40.3585 233.746 40.3546 233.76 40.3506 cv
233.771 40.3474 233.783 40.344 233.795 40.3408 cv
233.809 40.3369 233.822 40.3332 233.836 40.3293 cv
233.849 40.3256 233.862 40.3221 233.875 40.3185 cv
233.888 40.315 233.901 40.3113 233.913 40.3078 cv
233.928 40.3037 233.943 40.2997 233.958 40.2956 cv
233.969 40.2926 233.979 40.2897 233.99 40.2867 cv
234.016 40.2794 234.041 40.2727 234.067 40.2655 cv
234.067 40.2655 li
242.275 38.0154 250.51 36.1584 258.124 32.6842 cv
260.068 31.7968 261.972 30.8041 263.824 29.6723 cv
263.995 38.5713 264.165 47.4713 264.335 56.3701 cv
244.483 60.4312 224.768 64.5246 204.956 68.0623 cv
211.906 35.0213 mo
211.906 35.0213 li
213.303 29.488 214.696 23.9535 216.087 18.4187 cv
230.577 19.3599 245.145 19.939 259.635 20.075 cv
251.027 26.2599 241.96 29.8687 229.225 31.7388 cv
223.544 32.5731 217.189 32.5997 211.906 35.0213 cv
f
263.641 20.1013 mo
263.514 13.4496 263.387 6.79792 263.259 .145998 cv
263.257 0 li
207.657 0 li
207.434 5.92666 207.21 11.8533 206.987 17.7798 cv
225.796 19.1981 244.799 20.0315 263.641 20.1013 cv
.470588 .34902 .172549 rgb
f
265.108 96.7114 mo
265.097 96.1348 265.086 95.5579 265.074 94.9814 cv
265.086 95.5582 265.098 96.1347 265.11 96.7113 cv
265.109 96.7113 265.109 96.7114 265.108 96.7114 cv
.694118 .643137 .682353 rgb
f
249.39 97.3045 mo
248.847 94.9665 248.76 92.4028 249.269 89.6049 cv
250.639 81.3876 256.945 74.4881 264.63 71.751 cv
264.778 79.4946 264.926 87.2381 265.074 94.9814 cv
265.074 94.9814 li
265.086 95.5579 265.097 96.1348 265.108 96.7114 cv
265.029 96.7156 264.95 96.7197 264.87 96.7239 cv
264.837 96.7256 264.806 96.7272 264.773 96.7289 cv
264.726 96.7314 264.677 96.7339 264.63 96.7364 cv
264.595 96.7382 264.562 96.7399 264.527 96.7417 cv
264.481 96.744 264.434 96.7465 264.388 96.7488 cv
264.36 96.7503 264.331 96.7517 264.303 96.7532 cv
264.248 96.756 264.193 96.7588 264.138 96.7616 cv
264.121 96.7624 264.103 96.7633 264.086 96.7642 cv
264.018 96.7676 263.951 96.771 263.883 96.7743 cv
263.879 96.7746 263.873 96.7748 263.868 96.7751 cv
259.032 97.0167 254.208 97.1779 249.39 97.3045 cv
.392157 .286274 .160784 rgb
f
206.19 122.175 mo
206.19 122.175 li
205.895 114.356 205.6 106.538 205.306 98.7199 cv
205.306 98.7199 li
205.601 106.538 205.895 114.357 206.19 122.175 cv
265.334 107.395 mo
265.259 103.949 265.184 100.503 265.115 97.0571 cv
265.117 97.0571 li
265.185 100.503 265.26 103.949 265.334 107.395 cv
.807843 .772549 .843137 rgb
f
265.117 97.0571 mo
265.115 97.0571 li
265.113 96.9417 265.111 96.8269 265.108 96.7114 cv
265.11 96.7113 265.11 96.7113 265.11 96.7113 cv
265.112 96.8268 265.114 96.9416 265.117 97.0571 cv
.694118 .643137 .682353 rgb
f
265.663 124.82 mo
245.942 124.06 226.034 123.263 206.19 122.175 cv
205.895 114.357 205.601 106.538 205.306 98.7199 cv
224.872 97.4276 244.272 97.7545 263.868 96.7751 cv
263.874 96.7748 263.878 96.7746 263.883 96.7743 cv
263.952 96.7709 264.017 96.7676 264.086 96.7642 cv
264.103 96.7633 264.12 96.7624 264.138 96.7616 cv
264.193 96.7588 264.248 96.756 264.303 96.7532 cv
264.331 96.7517 264.36 96.7503 264.388 96.7488 cv
264.434 96.7465 264.481 96.744 264.527 96.7417 cv
264.562 96.7399 264.595 96.7382 264.63 96.7364 cv
264.677 96.7339 264.726 96.7314 264.773 96.7289 cv
264.806 96.7272 264.838 96.7256 264.87 96.7239 cv
264.95 96.7197 265.03 96.7155 265.11 96.7113 cv
265.111 96.8269 265.113 96.9417 265.115 97.0571 cv
265.184 100.503 265.259 103.949 265.334 107.395 cv
265.458 113.203 265.579 119.011 265.663 124.82 cv
.392157 .286274 .160784 rgb
f
263.868 96.7751 mo
263.873 96.7748 263.879 96.7746 263.883 96.7743 cv
263.878 96.7746 263.874 96.7748 263.868 96.7751 cv
264.086 96.7642 mo
264.103 96.7633 264.121 96.7624 264.138 96.7616 cv
264.12 96.7624 264.103 96.7633 264.086 96.7642 cv
264.303 96.7532 mo
264.331 96.7517 264.36 96.7503 264.388 96.7488 cv
264.36 96.7503 264.331 96.7517 264.303 96.7532 cv
264.527 96.7417 mo
264.562 96.7399 264.595 96.7382 264.63 96.7364 cv
264.595 96.7382 264.562 96.7399 264.527 96.7417 cv
264.773 96.7289 mo
264.806 96.7272 264.837 96.7256 264.87 96.7239 cv
264.838 96.7256 264.806 96.7272 264.773 96.7289 cv
.32549 .235294 .14902 rgb
f
280.884 133.604 mo
280.884 133.604 280.883 133.603 280.882 133.603 cv
281.206 133.297 281.53 132.992 281.854 132.686 cv
281.855 132.686 li
281.531 132.992 281.208 133.298 280.884 133.604 cv
.807843 .772549 .843137 rgb
f
281.855 132.686 mo
281.854 132.686 li
281.999 132.549 282.145 132.412 282.291 132.275 cv
283.543 131.119 284.108 130.959 284.233 129.352 cv
284.242 129.239 284.251 129.125 284.259 129.011 cv
284.259 129.011 li
284.251 129.125 284.242 129.239 284.233 129.352 cv
284.108 130.959 283.543 131.119 282.291 132.275 cv
282.145 132.412 282 132.549 281.855 132.686 cv
276.734 130.98 mo
276.734 130.98 li
277.397 130.583 278.126 130.14 278.764 129.66 cv
278.126 130.14 277.397 130.583 276.734 130.98 cv
278.77 129.656 mo
278.772 129.654 278.775 129.652 278.777 129.65 cv
278.775 129.652 278.772 129.654 278.77 129.656 cv
.752941 .705882 .760784 rgb
f
280.339 127.927 mo
280.34 127.926 280.34 127.925 280.34 127.925 cv
280.34 127.925 280.34 127.926 280.339 127.927 cv
280.344 127.916 mo
280.344 127.915 280.345 127.914 280.345 127.914 cv
280.345 127.915 280.344 127.915 280.344 127.916 cv
280.351 127.899 mo
280.352 127.897 280.352 127.896 280.353 127.895 cv
280.352 127.896 280.352 127.897 280.351 127.899 cv
280.356 127.888 mo
280.356 127.886 280.357 127.885 280.358 127.883 cv
280.357 127.884 280.356 127.886 280.356 127.888 cv
280.361 127.874 mo
280.362 127.871 280.363 127.868 280.364 127.866 cv
280.363 127.868 280.362 127.871 280.361 127.874 cv
280.367 127.86 mo
280.368 127.857 280.369 127.855 280.37 127.852 cv
280.369 127.855 280.368 127.857 280.367 127.86 cv
280.371 127.847 mo
280.373 127.844 280.374 127.84 280.376 127.836 cv
280.374 127.84 280.373 127.844 280.371 127.847 cv
280.378 127.831 mo
280.378 127.829 280.379 127.826 280.38 127.823 cv
280.379 127.826 280.378 127.828 280.378 127.831 cv
280.382 127.819 mo
280.383 127.815 280.385 127.811 280.386 127.807 cv
280.385 127.811 280.383 127.815 280.382 127.819 cv
280.388 127.803 mo
280.389 127.8 280.39 127.797 280.391 127.794 cv
280.39 127.797 280.389 127.8 280.388 127.803 cv
280.392 127.79 mo
280.394 127.786 280.395 127.782 280.396 127.777 cv
280.395 127.781 280.394 127.786 280.392 127.79 cv
284.708 122.609 mo
284.877 122.315 285.258 122.313 286.2 122.235 cv
287.167 122.154 288.125 122.031 289.07 121.863 cv
289.07 121.863 li
288.125 122.031 287.167 122.154 286.2 122.235 cv
285.258 122.313 284.877 122.315 284.708 122.609 cv
.807843 .772549 .843137 rgb
f
289.07 121.863 mo
289.07 121.863 li
295.275 120.762 300.883 117.741 304.264 112.138 cv
304.432 111.859 304.591 111.576 304.743 111.291 cv
304.591 111.576 304.432 111.859 304.264 112.139 cv
300.883 117.741 295.275 120.762 289.07 121.863 cv
.733333 .686274 .705882 rgb
f
288.312 118.576 mo
288.146 118.576 287.98 118.574 287.813 118.571 cv
287.98 118.574 288.146 118.576 288.312 118.576 cv
288.312 118.576 li
.807843 .772549 .843137 rgb
f
289.447 118.552 mo
291.603 118.461 293.766 118.122 295.809 117.416 cv
293.766 118.122 291.603 118.461 289.447 118.552 cv
.733333 .686274 .705882 rgb
f
286.064 118.499 mo
284.687 118.412 284.808 118.345 284.868 116.908 cv
284.957 114.804 284.897 113.858 286.169 112.114 cv
287.353 110.492 288.536 108.87 289.719 107.248 cv
289.816 107.114 289.912 106.981 290.009 106.847 cv
290.009 106.847 li
289.912 106.981 289.816 107.114 289.719 107.248 cv
288.536 108.87 287.353 110.492 286.169 112.114 cv
284.897 113.858 284.957 114.803 284.868 116.908 cv
284.808 118.345 284.687 118.412 286.064 118.499 cv
.807843 .772549 .843137 rgb
f
284.129 112.392 mo
285.598 110.669 287.067 108.947 288.536 107.224 cv
289.055 106.616 289.576 106.009 290.099 105.404 cv
290.099 105.404 li
289.576 106.009 289.055 106.616 288.536 107.224 cv
287.067 108.947 285.598 110.669 284.129 112.392 cv
f
290.099 105.404 mo
290.099 105.404 li
291.802 103.433 293.523 101.476 295.246 99.5227 cv
293.523 101.477 291.802 103.433 290.099 105.404 cv
.733333 .686274 .705882 rgb
f
280.882 133.603 mo
279.395 132.836 277.999 131.966 276.734 130.98 cv
277.397 130.583 278.126 130.14 278.764 129.66 cv
278.766 129.659 278.768 129.657 278.77 129.656 cv
278.772 129.654 278.775 129.652 278.777 129.65 cv
279.485 129.117 280.078 128.538 280.339 127.927 cv
280.34 127.926 280.34 127.925 280.34 127.925 cv
280.341 127.922 280.343 127.919 280.344 127.916 cv
280.344 127.915 280.345 127.915 280.345 127.914 cv
280.347 127.909 280.349 127.904 280.351 127.899 cv
280.352 127.897 280.352 127.896 280.353 127.895 cv
280.354 127.893 280.355 127.89 280.356 127.888 cv
280.356 127.886 280.357 127.884 280.358 127.883 cv
280.359 127.88 280.36 127.877 280.361 127.874 cv
280.362 127.871 280.363 127.868 280.364 127.866 cv
280.365 127.864 280.366 127.862 280.367 127.86 cv
280.368 127.857 280.369 127.855 280.37 127.852 cv
280.37 127.851 280.371 127.849 280.371 127.847 cv
280.373 127.844 280.374 127.84 280.376 127.836 cv
280.376 127.834 280.377 127.833 280.378 127.831 cv
280.378 127.828 280.379 127.826 280.38 127.823 cv
280.381 127.822 280.382 127.82 280.382 127.819 cv
280.383 127.815 280.385 127.811 280.386 127.807 cv
280.387 127.806 280.387 127.804 280.388 127.803 cv
280.389 127.8 280.39 127.797 280.391 127.794 cv
280.391 127.793 280.392 127.791 280.392 127.79 cv
280.394 127.786 280.395 127.781 280.396 127.777 cv
280.396 127.777 li
281.247 126.077 283.31 113.352 284.129 112.392 cv
284.129 112.392 li
285.598 110.669 287.067 108.947 288.536 107.224 cv
289.055 106.616 289.576 106.009 290.099 105.404 cv
291.802 103.433 293.523 101.477 295.246 99.5227 cv
295.246 99.5227 li
293.513 101.974 291.764 104.412 290.009 106.847 cv
289.912 106.981 289.816 107.114 289.719 107.248 cv
288.536 108.87 287.353 110.492 286.169 112.114 cv
284.897 113.858 284.957 114.804 284.868 116.908 cv
284.808 118.345 284.687 118.412 286.064 118.499 cv
286.103 118.502 286.143 118.504 286.184 118.506 cv
286.727 118.54 287.27 118.563 287.813 118.571 cv
287.98 118.574 288.146 118.576 288.312 118.576 cv
288.312 118.576 li
288.312 118.576 li
288.691 118.576 289.069 118.568 289.447 118.552 cv
289.447 118.552 li
291.603 118.461 293.766 118.122 295.809 117.416 cv
295.842 117.405 295.874 117.394 295.906 117.382 cv
299.749 116.069 302.717 113.442 305.073 110.214 cv
305.11 110.166 li
305.326 109.855 305.541 109.544 305.757 109.232 cv
305.426 109.927 305.103 110.616 304.743 111.291 cv
304.591 111.576 304.432 111.859 304.264 112.138 cv
300.883 117.741 295.275 120.762 289.07 121.863 cv
288.125 122.031 287.167 122.154 286.2 122.235 cv
285.258 122.313 284.877 122.315 284.708 122.609 cv
284.579 122.833 284.575 123.229 284.539 123.961 cv
284.498 124.805 284.457 125.65 284.416 126.494 cv
284.416 126.494 li
284.371 127.335 284.322 128.173 284.259 129.011 cv
284.251 129.125 284.242 129.239 284.233 129.352 cv
284.108 130.959 283.543 131.119 282.291 132.275 cv
282.145 132.412 281.999 132.549 281.854 132.686 cv
281.53 132.992 281.206 133.297 280.882 133.603 cv
.392157 .286274 .160784 rgb
f
205.464 343.384 mo
214.996 337.585 225.151 332.757 233.943 326.029 cv
235.938 312.652 239.137 299.232 239.137 285.277 cv
241.67 292.876 244.203 301.108 246.103 309.34 cv
246.736 292.876 249.269 277.045 249.269 260.58 cv
254.996 283.49 257.099 307.954 266.35 330.223 cv
271.763 333.63 277.6 336.235 283.589 338.452 cv
281.212 338.451 278.838 338.446 276.462 338.446 cv
274.007 338.446 271.551 338.452 269.094 338.473 cv
266.486 333.495 264 330 264 330 cv
264 330 261.56 333.651 258.978 338.685 cv
251.052 339.007 243.075 340.072 235.186 340.84 cv
225.281 341.806 215.385 342.682 205.464 343.384 cv
.34902 .25098 .152941 rgb
f
309.112 111.252 mo
308.938 111.312 li
308.1 111.615 306.045 112.36 309.112 111.252 cv
cp
.733333 .615686 .0941176 rgb
f
309.112 111.252 mo
309.373 111.156 309.227 111.208 308.938 111.312 cv
309.112 111.252 li
cp
f
164.017 22.6599 mo
163.6 22.885 163.181 23.1067 162.76 23.3254 cv
160.777 24.4019 159.691 24.9956 164.017 22.6599 cv
f
164.017 22.6599 mo
170.054 19.3756 165.531 21.8217 162.76 23.3254 cv
163.181 23.1067 163.6 22.885 164.017 22.6599 cv
f
461.333 348.667 mo
461.333 348.667 450.333 358.581 450.333 365.333 cv
450.333 372.085 461.333 382 461.333 382 cv
461.333 382 472.333 371.785 472.333 365.333 cv
472.333 357.983 461.333 348.667 461.333 348.667 cv
.709804 .627451 .376471 rgb
f
439 363.333 mo
439 375.388 450 390.667 450 390.667 cv
450 390.667 461 374.407 461 363.333 cv
461 352.26 450 336 450 336 cv
450 336 439 352.752 439 363.333 cv
f
423.667 364.667 mo
423.667 372.769 434.667 384.667 434.667 384.667 cv
434.667 384.667 445.667 372.409 445.667 364.667 cv
445.667 355.846 434.667 344.667 434.667 344.667 cv
434.667 344.667 423.667 356.564 423.667 364.667 cv
f
405.667 371.667 mo
405.667 380.046 416.667 390.667 416.667 390.667 cv
416.667 390.667 427.667 379.364 427.667 371.667 cv
427.667 363.969 416.667 352.667 416.667 352.667 cv
416.667 352.667 405.667 364.312 405.667 371.667 cv
f
402.667 352 mo
402.667 352 391.667 360.527 391.667 366.333 cv
391.667 372.14 402.667 380.667 402.667 380.667 cv
402.667 380.667 413.666 371.882 413.666 366.333 cv
413.666 360.012 402.667 352 402.667 352 cv
f
274.333 365 mo
274.333 374.261 285.333 386 285.333 386 cv
285.333 386 296.333 373.508 296.333 365 cv
296.333 356.492 285.333 344 285.333 344 cv
285.333 344 274.333 356.871 274.333 365 cv
f
253 357.667 mo
253 368.875 264 385.333 264 385.333 cv
264 385.333 275 368.376 275 357.667 cv
275 345.465 264 330 264 330 cv
264 330 253 346.458 253 357.667 cv
f
236.333 381 mo
236.333 395.26 247.333 413.333 247.333 413.333 cv
247.333 413.333 258.333 394.099 258.333 381 cv
258.333 367.901 247.333 348.667 247.333 348.667 cv
247.333 348.667 236.333 368.484 236.333 381 cv
f
306.667 353.333 mo
306.667 353.333 295.667 359.877 295.667 364.333 cv
295.667 368.79 306.667 375.333 306.667 375.333 cv
306.667 375.333 317.667 368.591 317.667 364.333 cv
317.667 359.482 306.667 353.333 306.667 353.333 cv
cp
f
131.667 363.334 mo
131.667 374.947 142.667 392 142.667 392 cv
142.667 392 153.667 374.43 153.667 363.334 cv
153.667 350.691 142.667 334.667 142.667 334.667 cv
142.667 334.667 131.667 351.72 131.667 363.334 cv
f
115.667 374 mo
115.667 387.231 126.667 404 126.667 404 cv
126.667 404 137.667 386.154 137.667 374 cv
137.667 361.846 126.667 344 126.667 344 cv
126.667 344 115.667 362.387 115.667 374 cv
f
762.007 382 mo
762.007 389.832 773.007 401.333 773.007 401.333 cv
773.007 401.333 784.007 390.526 784.007 382 cv
784.007 374.516 773.007 362.667 773.007 362.667 cv
773.007 362.667 762.007 374.168 762.007 382 cv
.909804 .384314 .45098 rgb
f
163.333 360.667 mo
163.333 360.667 152.333 367.204 152.333 371.333 cv
152.333 376.038 163.333 382 163.333 382 cv
163.333 382 174.333 375.655 174.333 371.333 cv
174.333 367.012 163.333 360.667 163.333 360.667 cv
.709804 .627451 .376471 rgb
f
36 344.667 mo
36 344.667 24.9999 354.882 24.9999 361.333 cv
24.9999 368.684 36 378 36 378 cv
36 378 47.0001 368.085 47.0001 361.333 cv
47.0001 354.581 36 344.667 36 344.667 cv
f
19.9999 356 mo
19.9999 356 9.00006 366.624 9.00006 373.333 cv
9.00006 380.978 19.9999 390.667 19.9999 390.667 cv
19.9999 390.667 31 380.355 31 373.333 cv
31 366.311 19.9999 356 19.9999 356 cv
f
657.667 374.667 mo
657.667 383.309 668.667 396 668.667 396 cv
668.667 396 679.667 382.925 679.667 374.667 cv
679.667 365.258 668.667 353.333 668.667 353.333 cv
668.667 353.333 657.667 366.024 657.667 374.667 cv
f
638.333 382.666 mo
638.333 393.545 649.333 407.333 649.333 407.333 cv
649.333 407.333 660.333 392.66 660.333 382.666 cv
660.333 372.674 649.333 358 649.333 358 cv
649.333 358 638.333 373.118 638.333 382.666 cv
f
620 359.333 mo
620 359.333 609 369.248 609 376 cv
609 382.752 620 392.667 620 392.667 cv
620 392.667 631 382.452 631 376 cv
631 368.65 620 359.333 620 359.333 cv
f
601.333 352 mo
601.333 352 590.333 363.104 590.333 370.667 cv
590.333 378.229 601.333 389.333 601.333 389.333 cv
601.333 389.333 612.333 377.893 612.333 370.667 cv
612.333 362.434 601.333 352 601.333 352 cv
f
575 376.667 mo
575 385.193 586 396 586 396 cv
586 396 597 384.499 597 376.667 cv
597 368.835 586 357.333 586 357.333 cv
586 357.333 575 369.183 575 376.667 cv
f
313.007 366 mo
313.007 366 302.007 375.716 302.007 382.333 cv
302.007 388.95 313.007 398.667 313.007 398.667 cv
313.007 398.667 324.007 389.537 324.007 382.333 cv
324.007 376.01 313.007 366 313.007 366 cv
.909804 .384314 .45098 rgb
f
724.667 354.667 mo
724.667 354.667 713.667 365.699 713.667 372.667 cv
713.667 380.605 724.667 390.667 724.667 390.667 cv
724.667 390.667 735.667 379.959 735.667 372.667 cv
735.667 365.374 724.667 354.667 724.667 354.667 cv
.709804 .627451 .376471 rgb
f
806 358 mo
806 358 795 366.581 795 372 cv
795 378.174 806 386 806 386 cv
806 386 817 377.672 817 372 cv
817 366.328 806 358 806 358 cv
f
844.333 371.333 mo
844.333 379.86 855.333 390.667 855.333 390.667 cv
855.333 390.667 866.333 379.166 866.333 371.333 cv
866.333 363.501 855.333 352 855.333 352 cv
855.333 352 844.333 363.849 844.333 371.333 cv
f
874 359.333 mo
874 359.333 863 367.301 863 372.333 cv
863 378.067 874 385.333 874 385.333 cv
874 385.333 877.86 382.619 881.007 379.312 cv
881.007 365.355 li
877.86 362.048 874 359.333 874 359.333 cv
f
900 379.312 mo
900 365.355 li
897.835 367.631 896.007 370.187 896.007 372.333 cv
896.007 374.48 897.835 377.036 900 379.312 cv
.909804 .384314 .45098 rgb
f
384.503 357.565 mo
384.609 357.574 384.663 357.578 384.424 357.556 cv
384.503 357.565 li
cp
.709804 .627451 .376471 rgb
f
384.37 357.554 mo
384.424 357.556 li
384.171 357.535 384.25 357.543 384.37 357.554 cv
cp
f
384.37 357.554 mo
384.503 357.565 li
384.424 357.556 li
384.37 357.554 li
cp
f
849.108 360.996 mo
849.802 361.218 847.961 360.627 849.108 360.996 cv
cp
f
595.174 367.286 mo
595.157 367.225 595.126 367.113 595.076 366.931 cv
595.109 367.05 595.141 367.168 595.174 367.286 cv
cp
.00392157 .215686 .415686 rgb
f
595.011 366.718 mo
595.076 366.931 li
594.911 366.355 594.941 366.467 595.011 366.718 cv
cp
f
595.076 366.931 mo
595.011 366.718 li
595.095 367.018 595.236 367.517 595.174 367.286 cv
595.141 367.168 595.109 367.05 595.076 366.931 cv
cp
f
308.927 361.372 mo
308.979 361.277 309.02 361.178 309.076 361.086 cv
308.706 361.699 308.787 361.589 308.927 361.372 cv
cp
.709804 .627451 .376471 rgb
f
309.076 361.086 mo
309.171 360.97 li
309.184 360.942 309.161 360.966 309.076 361.086 cv
cp
f
308.927 361.372 mo
309.025 361.22 309.15 361.017 309.171 360.97 cv
309.076 361.086 li
309.02 361.178 308.979 361.277 308.927 361.372 cv
cp
f
703.545 367.899 mo
703.681 368.385 703.577 368.007 703.473 367.63 cv
703.343 367.159 703.213 366.688 703.545 367.899 cv
.00392157 .215686 .415686 rgb
f
895.577 369.873 mo
895.639 370.165 895.689 370.399 895.567 369.806 cv
895.577 369.873 li
cp
f
895.54 369.698 mo
895.567 369.806 li
895.447 369.246 895.484 369.428 895.54 369.698 cv
cp
f
895.54 369.698 mo
895.577 369.873 li
895.567 369.806 li
895.54 369.698 li
cp
f
895.54 369.698 mo
895.381 368.961 895.204 368.228 895.007 367.5 cv
893.255 368.383 891.188 369.889 890.435 371.771 cv
889.709 373.597 890.617 375.644 890.007 377.5 cv
894.232 377.73 896.275 373.431 895.577 369.873 cv
895.54 369.698 li
f
867.735 366.496 mo
869.081 367.13 866.396 365.842 867.735 366.496 cv
cp
f
0 480 mo
900 480 li
0 480 li
.909804 .384314 .45098 rgb
f
0 480 mo
900 480 li
900 367.5 li
0 367.5 li
0 480 li
.709804 .627451 .376471 rgb
f
0 480 mo
900 480 li
0 480 li
.227451 .14902 .321569 rgb
f
0 480 mo
900 480 li
900 377.53 li
0 377.53 li
0 480 li
.584314 .388235 .301961 rgb
f
591.993 435 mo
592.188 434.925 592.388 434.849 592.583 434.775 cv
592.388 434.849 592.188 434.925 591.993 435 cv
268.03 432.867 mo
268.03 432.867 li
267.752 427.278 265.181 421.891 259.993 418 cv
259.966 417.98 259.941 417.961 259.915 417.941 cv
259.941 417.961 259.966 417.98 259.993 418 cv
265.181 421.891 267.752 427.278 268.03 432.867 cv
683.963 421.598 mo
679.006 421.302 674.037 421.149 669.073 421.148 cv
674.037 421.148 679.006 421.302 683.963 421.597 cv
683.963 421.598 li
669.059 421.148 mo
669.065 421.148 li
669.065 421.148 li
669.059 421.148 li
259.665 417.752 mo
251.717 411.757 243.48 407.754 235.037 405.116 cv
235.039 405.117 li
243.482 407.754 251.717 411.757 259.665 417.752 cv
.494118 .32549 .298039 rgb
f
235.039 405.117 mo
235.037 405.116 li
226.761 402.531 218.283 401.258 209.672 400.703 cv
209.672 400.703 li
218.285 401.257 226.761 402.531 235.039 405.117 cv
.419608 .270588 .294118 rgb
f
678.552 480 mo
635.29 480 li
638.414 478.195 641.642 476.517 644.993 475 cv
645.026 474.985 645.06 474.969 645.094 474.954 cv
645.129 474.938 645.162 474.923 645.198 474.907 cv
656.36 469.867 668.216 467.254 680.116 466.8 cv
679.53 471.184 679.017 475.587 678.552 480 cv
.537255 .356863 .298039 rgb
f
678.552 480 mo
635.29 480 li
635.29 480 635.29 480 635.29 480 cv
678.552 480 li
678.552 480 li
.850042 .840246 .986436 rgb
f
900 480 mo
799.001 480 li
799.001 480 li
900 480 li
799.001 480 li
799.001 480 li
900 480 li
900 403.903 li
900 403.903 li
900 386.432 li
900 386.432 li
900 377.53 li
900 480 li
.767905 .751326 .979869 rgb
f
900 480 mo
799.001 480 li
798.304 473.051 797.601 466.1 796.926 459.161 cv
796.926 459.161 li
796.793 458.505 796.659 457.848 796.526 457.192 cv
795.94 454.298 795.359 451.406 794.782 448.517 cv
794.933 448.577 795.081 448.636 795.232 448.696 cv
795.272 448.712 795.311 448.728 795.351 448.744 cv
795.394 448.761 795.433 448.777 795.477 448.794 cv
795.648 448.862 795.822 448.932 795.993 449 cv
795.993 449 li
796.029 449.014 796.065 449.028 796.102 449.042 cv
796.124 449.05 796.146 449.059 796.168 449.067 cv
802.066 451.309 808.367 452.372 814.706 452.372 cv
814.708 452.372 814.708 452.372 814.71 452.372 cv
814.71 452.372 li
814.71 452.372 li
814.713 452.372 814.717 452.372 814.72 452.372 cv
836.236 452.368 858.149 440.125 865.922 420.182 cv
865.926 420.173 865.929 420.164 865.933 420.154 cv
865.953 420.103 865.973 420.051 865.993 420 cv
867.415 416.365 868.812 412.454 870.086 408.372 cv
880.054 406.935 890.043 405.443 900 403.903 cv
900 480 li
635.29 480 mo
540.492 480 li
552.131 460.534 568.839 444.541 591.8 435.079 cv
622.754 433.586 653.699 431.605 684.606 429.134 cv
684.608 429.23 684.611 429.325 684.613 429.421 cv
684.704 433.926 684.359 438.442 683.809 442.921 cv
682.87 450.491 681.334 457.95 680.346 465.11 cv
680.346 465.11 li
680.268 465.673 680.191 466.236 680.116 466.8 cv
668.214 467.253 656.362 469.867 645.198 474.907 cv
645.162 474.923 645.129 474.938 645.094 474.954 cv
645.06 474.969 645.026 474.985 644.993 475 cv
641.642 476.517 638.414 478.195 635.29 480 cv
.447059 .290196 .294118 rgb
f
591.8 435.079 mo
591.865 435.053 591.928 435.027 591.993 435 cv
591.993 435 li
592.188 434.925 592.388 434.849 592.583 434.775 cv
617.82 425.213 643.464 421.149 669.059 421.148 cv
669.065 421.148 li
669.069 421.148 669.069 421.148 669.073 421.148 cv
674.037 421.149 679.006 421.302 683.963 421.598 cv
684.342 424.101 684.543 426.616 684.606 429.134 cv
653.699 431.605 622.754 433.586 591.8 435.079 cv
870.086 408.372 mo
872.005 402.217 873.643 395.672 874.662 389.086 cv
883.101 388.228 891.565 387.341 900 386.432 cv
900 403.903 li
890.043 405.443 880.054 406.935 870.086 408.372 cv
.380392 .243137 .290196 rgb
f
874.662 389.086 mo
875.259 385.224 875.644 381.349 875.748 377.53 cv
875.748 377.53 li
875.748 377.53 li
900 377.53 li
900 386.432 li
891.565 387.341 883.101 388.228 874.662 389.086 cv
.321569 .203922 .286274 rgb
f
635.29 480 mo
635.29 480 li
638.414 478.195 641.642 476.517 644.993 475 cv
645.026 474.985 645.06 474.969 645.094 474.954 cv
645.06 474.969 645.026 474.985 644.993 475 cv
641.642 476.517 638.414 478.195 635.29 480 cv
645.198 474.907 mo
656.362 469.867 668.214 467.253 680.116 466.8 cv
680.116 466.8 li
668.216 467.254 656.36 469.867 645.198 474.907 cv
.411765 .266667 .290196 rgb
f
635.29 480 mo
635.29 480 li
540.491 480 li
540.492 480 540.492 480 540.492 480 cv
635.29 480 li
.58902 .564844 .959708 rgb
f
900 480 mo
799.001 480 li
799.001 480 li
900 480 li
f
540.492 480 mo
313.175 480 li
326.214 461.184 344.422 447.467 365.256 437.276 cv
393.492 438.089 421.755 438.496 450 438.496 cv
497.289 438.496 544.552 437.358 591.8 435.079 cv
568.839 444.541 552.131 460.534 540.492 480 cv
814.71 452.372 mo
814.708 452.372 814.708 452.372 814.706 452.372 cv
808.369 452.371 802.064 451.308 796.168 449.067 cv
796.146 449.059 796.124 449.05 796.102 449.042 cv
796.065 449.028 796.029 449.014 795.993 449 cv
795.993 449 li
795.822 448.932 795.648 448.862 795.477 448.794 cv
795.433 448.777 795.394 448.761 795.351 448.744 cv
795.311 448.728 795.272 448.712 795.232 448.696 cv
795.081 448.636 794.933 448.577 794.782 448.517 cv
792.807 438.623 790.885 428.754 788.997 418.915 cv
816.077 415.776 843.079 412.266 870.086 408.372 cv
868.812 412.454 867.415 416.365 865.993 420 cv
865.973 420.051 865.953 420.103 865.933 420.154 cv
865.929 420.164 865.926 420.173 865.922 420.182 cv
858.149 440.123 836.234 452.366 814.72 452.372 cv
814.717 452.372 814.713 452.372 814.71 452.372 cv
.537255 .356863 .298039 rgb
f
450 438.496 mo
421.755 438.496 393.492 438.089 365.256 437.276 cv
395.017 422.719 430.138 415.358 463.219 410.604 cv
534.843 410.379 606.425 408.321 677.97 404.429 cv
678.155 404.751 678.338 405.073 678.518 405.396 cv
678.549 405.452 678.579 405.507 678.61 405.563 cv
681.489 410.785 683.142 416.163 683.963 421.597 cv
679.006 421.302 674.037 421.148 669.073 421.148 cv
669.069 421.148 669.069 421.148 669.065 421.148 cv
669.065 421.148 li
669.065 421.148 li
669.059 421.148 li
643.459 421.148 617.824 425.212 592.583 434.775 cv
592.388 434.849 592.188 434.925 591.993 435 cv
591.993 435 li
591.928 435.027 591.865 435.053 591.8 435.079 cv
544.552 437.358 497.289 438.496 450 438.496 cv
788.997 418.915 mo
787.607 411.676 786.237 404.453 784.876 397.244 cv
814.84 394.846 844.742 392.129 874.662 389.086 cv
873.643 395.672 872.005 402.217 870.086 408.372 cv
843.079 412.266 816.077 415.776 788.997 418.915 cv
.454902 .298039 .294118 rgb
f
463.219 410.604 mo
469.914 409.642 476.526 408.787 482.993 408 cv
520.993 404 556.993 399 593.993 388 cv
601.063 386.139 607.855 382.476 613.289 377.53 cv
613.289 377.53 li
613.289 377.53 li
657.522 377.53 li
661.285 381.913 665.127 386.377 668.714 390.962 cv
672.127 395.328 675.31 399.806 677.97 404.429 cv
606.425 408.321 534.843 410.379 463.219 410.604 cv
784.876 397.244 mo
783.633 390.659 782.399 384.09 781.168 377.53 cv
875.748 377.53 li
875.644 381.349 875.259 385.224 874.662 389.086 cv
844.742 392.129 814.84 394.846 784.876 397.244 cv
.388235 .247059 .290196 rgb
f
814.71 452.372 mo
814.708 452.372 814.708 452.372 814.706 452.372 cv
814.708 452.372 814.708 452.372 814.71 452.372 cv
814.71 452.372 li
814.72 452.372 mo
836.234 452.366 858.149 440.123 865.922 420.182 cv
858.149 440.125 836.236 452.368 814.72 452.372 cv
796.168 449.067 mo
796.146 449.059 796.124 449.05 796.102 449.042 cv
796.124 449.05 796.146 449.059 796.168 449.067 cv
795.993 449 mo
795.993 449 li
795.822 448.932 795.648 448.862 795.477 448.794 cv
795.648 448.862 795.822 448.932 795.993 449 cv
795.993 449 li
795.351 448.744 mo
795.311 448.728 795.272 448.712 795.232 448.696 cv
795.272 448.712 795.311 448.728 795.351 448.744 cv
.411765 .266667 .290196 rgb
f
592.583 434.775 mo
617.824 425.212 643.459 421.148 669.059 421.148 cv
643.464 421.149 617.82 425.213 592.583 434.775 cv
669.073 421.148 mo
669.069 421.148 669.069 421.148 669.065 421.148 cv
669.065 421.148 li
669.069 421.148 669.069 421.148 669.073 421.148 cv
.34902 .223529 .286274 rgb
f
540.492 480 mo
540.491 480 li
313.175 480 li
313.175 480 li
540.492 480 li
.850042 .840246 .986436 rgb
f
321.993 426 mo
314.851 420.982 309.199 414.919 304.694 408.109 cv
324.489 408.795 344.294 409.34 364.095 409.746 cv
351.605 419.027 337.554 425.259 321.993 426 cv
.454902 .298039 .294118 rgb
f
364.095 409.746 mo
344.294 409.34 324.489 408.795 304.694 408.109 cv
298.677 399.016 294.703 388.589 291.947 377.53 cv
395.127 377.53 li
386.189 389.611 375.831 401.025 364.095 409.746 cv
.388235 .247059 .290196 rgb
f
313.175 480 mo
208.427 480 li
208.132 477.423 207.825 474.849 207.5 472.278 cv
208.331 472.189 209.161 472.097 209.993 472 cv
226.993 470 242.993 464 257.993 453 cv
264.485 448.131 268.05 440.92 268.055 433.902 cv
268.055 433.556 268.047 433.211 268.03 432.867 cv
300.415 434.872 332.835 436.343 365.256 437.276 cv
344.422 447.467 326.214 461.184 313.175 480 cv
102.756 480 mo
24.8264 480 li
26.5944 477.04 28.9328 474.34 31.9927 472 cv
31.9927 472 li
32.044 471.956 32.0962 471.911 32.1476 471.868 cv
39.6388 465.526 48.5478 463.723 57.8086 463.722 cv
57.8107 463.722 57.8133 463.722 57.8154 463.722 cv
57.8176 463.722 57.8206 463.722 57.8227 463.722 cv
65.368 463.723 73.1468 464.919 80.5843 465.831 cv
80.626 465.836 80.6669 465.841 80.7086 465.846 cv
80.7441 465.85 80.7811 465.855 80.8165 465.859 cv
81.2097 465.907 81.6016 465.954 81.9928 466 cv
81.9928 466 li
82.1109 466.014 82.2322 466.028 82.3503 466.042 cv
82.4447 466.053 82.5348 466.063 82.6292 466.074 cv
82.7919 466.093 82.9595 466.113 83.1222 466.132 cv
83.2166 466.143 83.3089 466.153 83.4034 466.164 cv
89.8748 466.92 96.3221 467.696 102.756 468.45 cv
102.756 472.817 102.756 476.983 102.756 480 cv
.447059 .290196 .294118 rgb
f
365.256 437.276 mo
332.835 436.343 300.415 434.872 268.03 432.867 cv
267.752 427.278 265.181 421.891 259.993 418 cv
259.966 417.98 259.941 417.961 259.915 417.941 cv
259.831 417.877 259.749 417.815 259.665 417.752 cv
251.717 411.757 243.482 407.754 235.039 405.117 cv
258.249 406.307 281.471 407.304 304.694 408.109 cv
309.199 414.919 314.851 420.982 321.993 426 cv
337.554 425.259 351.605 419.027 364.095 409.746 cv
392.733 410.332 421.358 410.625 450 410.625 cv
454.401 410.625 458.818 410.618 463.219 410.604 cv
430.138 415.358 395.017 422.719 365.256 437.276 cv
.380392 .243137 .290196 rgb
f
450 410.625 mo
421.358 410.625 392.733 410.332 364.095 409.746 cv
375.831 401.025 386.189 389.611 395.127 377.53 cv
613.289 377.53 li
607.855 382.476 601.063 386.139 593.993 388 cv
556.993 399 520.993 404 482.993 408 cv
476.526 408.787 469.914 409.642 463.219 410.604 cv
458.818 410.618 454.401 410.625 450 410.625 cv
304.694 408.109 mo
281.471 407.304 258.249 406.307 235.039 405.117 cv
226.761 402.531 218.285 401.257 209.672 400.703 cv
214.613 392.59 221.08 384.995 227.316 377.53 cv
291.947 377.53 li
294.703 388.589 298.677 399.016 304.694 408.109 cv
108.478 390.941 mo
103.634 387.365 99.7082 382.735 96.4851 377.53 cv
109.893 377.53 li
109.415 381.999 108.944 386.471 108.478 390.941 cv
.321569 .203922 .286274 rgb
f
313.175 480 mo
208.427 480 li
208.427 480 li
313.175 480 li
102.756 480 mo
24.8262 480 li
24.8264 480 24.8264 480 24.8264 480 cv
102.756 480 li
102.756 480 li
.58902 .564844 .959708 rgb
f
24.8264 480 mo
0 480 li
0 478.04 li
0 478.04 li
21.1233 457.912 56.1335 454.546 64.9928 426 cv
66.2999 421.915 66.8861 417.911 66.8867 413.991 cv
66.8867 413.815 66.8855 413.638 66.8832 413.463 cv
79.8022 415.158 92.7345 416.768 105.67 418.291 cv
104.704 427.778 103.74 437.262 102.756 446.746 cv
102.756 446.746 102.756 458.151 102.756 468.45 cv
96.3221 467.696 89.8748 466.92 83.4034 466.164 cv
83.3089 466.153 83.2166 466.143 83.1222 466.132 cv
82.9595 466.113 82.7919 466.093 82.6292 466.074 cv
82.5348 466.063 82.4447 466.053 82.3503 466.042 cv
82.2322 466.028 82.1109 466.014 81.9928 466 cv
81.9928 466 li
81.6016 465.954 81.2097 465.907 80.8165 465.859 cv
80.7811 465.855 80.7441 465.85 80.7086 465.846 cv
80.6669 465.841 80.626 465.836 80.5843 465.831 cv
73.1458 464.919 65.369 463.723 57.8227 463.722 cv
57.8206 463.722 57.8176 463.722 57.8154 463.722 cv
57.8154 463.722 li
57.8154 463.722 li
57.8133 463.722 57.8107 463.722 57.8086 463.722 cv
48.5467 463.723 39.6397 465.525 32.1476 471.868 cv
32.0962 471.911 32.044 471.956 31.9927 472 cv
31.9927 472 li
28.9328 474.34 26.5944 477.04 24.8264 480 cv
.537255 .356863 .298039 rgb
f
105.67 418.291 mo
92.7345 416.768 79.8022 415.158 66.8832 413.463 cv
66.7873 406.209 64.6993 399.248 61.4814 392.604 cv
76.9445 394.042 92.4103 395.393 107.885 396.659 cv
107.139 403.868 106.404 411.081 105.67 418.291 cv
.454902 .298039 .294118 rgb
f
107.885 396.659 mo
92.4103 395.393 76.9445 394.042 61.4814 392.604 cv
58.9499 387.378 55.7191 382.349 52.2085 377.53 cv
96.4851 377.53 li
99.7082 382.735 103.634 387.365 108.478 390.941 cv
108.279 392.848 108.082 394.752 107.885 396.659 cv
.388235 .247059 .290196 rgb
f
24.8264 480 mo
24.8264 480 li
26.5944 477.04 28.9328 474.34 31.9927 472 cv
31.9927 472 li
31.9927 472 li
28.9328 474.34 26.5944 477.04 24.8264 480 cv
32.1476 471.868 mo
39.6397 465.525 48.5467 463.723 57.8086 463.722 cv
48.5478 463.723 39.6388 465.526 32.1476 471.868 cv
83.4034 466.164 mo
83.3089 466.153 83.2166 466.143 83.1222 466.132 cv
83.2166 466.143 83.3089 466.153 83.4034 466.164 cv
82.6292 466.074 mo
82.5348 466.063 82.4447 466.053 82.3503 466.042 cv
82.4447 466.053 82.5348 466.063 82.6292 466.074 cv
81.9928 466 mo
81.9928 466 li
81.6016 465.954 81.2097 465.907 80.8165 465.859 cv
81.2097 465.907 81.6016 465.954 81.9928 466 cv
81.9928 466 li
80.7086 465.846 mo
80.6669 465.841 80.626 465.836 80.5843 465.831 cv
80.626 465.836 80.6669 465.841 80.7086 465.846 cv
57.8227 463.722 mo
57.8206 463.722 57.8176 463.722 57.8154 463.722 cv
57.8154 463.722 li
57.8176 463.722 57.8206 463.722 57.8227 463.722 cv
.411765 .266667 .290196 rgb
f
207.5 472.278 mo
207.197 469.881 206.878 467.488 206.541 465.099 cv
206.535 465.058 206.529 465.017 206.523 464.976 cv
206.523 464.971 206.522 464.966 206.521 464.961 cv
206.516 464.923 206.51 464.885 206.505 464.847 cv
206.504 464.843 206.504 464.839 206.503 464.835 cv
206.498 464.796 206.492 464.758 206.487 464.719 cv
206.486 464.715 206.486 464.712 206.485 464.708 cv
206.479 464.667 206.473 464.626 206.468 464.586 cv
206.467 464.582 206.467 464.58 206.466 464.576 cv
206.461 464.538 206.455 464.501 206.45 464.463 cv
206.449 464.456 206.448 464.449 206.447 464.441 cv
206.442 464.408 206.437 464.373 206.432 464.339 cv
206.431 464.33 206.429 464.32 206.428 464.31 cv
206.423 464.278 206.418 464.244 206.413 464.212 cv
206.412 464.203 206.411 464.194 206.41 464.186 cv
206.405 464.154 206.4 464.122 206.395 464.09 cv
206.393 464.071 206.39 464.053 206.387 464.034 cv
206.384 464.009 206.38 463.985 206.376 463.96 cv
206.373 463.94 206.371 463.922 206.368 463.903 cv
206.365 463.884 206.362 463.862 206.359 463.843 cv
206.354 463.812 206.35 463.78 206.345 463.749 cv
206.344 463.74 206.342 463.731 206.341 463.722 cv
204.767 453.12 202.274 441.864 201.972 430.852 cv
201.971 430.853 201.97 430.854 201.969 430.856 cv
201.969 430.856 li
201.97 430.854 201.971 430.853 201.972 430.852 cv
201.946 429.909 201.936 428.967 201.944 428.028 cv
223.959 429.889 245.987 431.502 268.03 432.867 cv
268.047 433.211 268.055 433.556 268.055 433.902 cv
268.05 440.92 264.485 448.131 257.993 453 cv
242.993 464 226.993 470 209.993 472 cv
209.161 472.097 208.331 472.189 207.5 472.278 cv
.537255 .356863 .298039 rgb
f
268.03 432.867 mo
245.987 431.502 223.959 429.889 201.944 428.028 cv
202.01 420.563 203.214 413.248 206.544 406.366 cv
206.544 406.365 li
206.551 406.351 206.557 406.337 206.564 406.323 cv
206.566 406.32 206.568 406.315 206.57 406.312 cv
206.576 406.3 206.581 406.288 206.587 406.275 cv
206.59 406.271 206.591 406.268 206.593 406.263 cv
206.6 406.25 206.606 406.238 206.612 406.225 cv
206.613 406.223 206.615 406.219 206.616 406.217 cv
206.637 406.174 206.659 406.13 206.68 406.087 cv
206.681 406.085 206.681 406.083 206.683 406.081 cv
206.688 406.07 206.693 406.059 206.699 406.048 cv
206.702 406.042 206.705 406.036 206.708 406.031 cv
206.713 406.02 206.718 406.009 206.724 405.998 cv
206.727 405.992 206.73 405.986 206.732 405.98 cv
206.737 405.971 206.742 405.96 206.747 405.951 cv
206.751 405.943 206.755 405.936 206.759 405.928 cv
206.763 405.919 206.768 405.909 206.772 405.9 cv
206.777 405.891 206.781 405.884 206.785 405.875 cv
206.789 405.867 206.793 405.859 206.797 405.851 cv
206.801 405.842 206.807 405.832 206.811 405.822 cv
206.816 405.812 206.821 405.802 206.827 405.792 cv
206.833 405.779 206.841 405.764 206.847 405.751 cv
206.85 405.745 206.854 405.738 206.857 405.732 cv
206.862 405.722 206.868 405.71 206.873 405.7 cv
206.877 405.693 206.88 405.686 206.884 405.679 cv
206.889 405.668 206.894 405.659 206.9 405.648 cv
206.903 405.641 206.907 405.634 206.91 405.627 cv
206.915 405.617 206.92 405.607 206.925 405.597 cv
206.929 405.59 206.932 405.583 206.936 405.576 cv
206.941 405.566 206.948 405.553 206.953 405.543 cv
206.956 405.537 206.959 405.531 206.962 405.525 cv
206.969 405.512 206.974 405.501 206.981 405.488 cv
206.983 405.484 206.986 405.479 206.988 405.474 cv
206.997 405.457 207.006 405.44 207.015 405.423 cv
207.015 405.423 li
207.323 404.825 207.64 404.232 207.966 403.64 cv
216.995 404.162 226.006 404.653 235.037 405.116 cv
243.48 407.754 251.717 411.757 259.665 417.752 cv
259.749 417.815 259.831 417.877 259.915 417.941 cv
259.941 417.961 259.966 417.98 259.993 418 cv
265.181 421.891 267.752 427.278 268.03 432.867 cv
.454902 .298039 .294118 rgb
f
235.037 405.116 mo
226.006 404.653 216.995 404.162 207.966 403.64 cv
208.511 402.654 209.081 401.674 209.672 400.703 cv
218.283 401.258 226.761 402.531 235.037 405.116 cv
.388235 .247059 .290196 rgb
f
207.5 472.278 mo
207.5 472.278 li
208.331 472.189 209.161 472.097 209.993 472 cv
226.993 470 242.993 464 257.993 453 cv
264.485 448.131 268.05 440.92 268.055 433.902 cv
268.05 440.92 264.485 448.131 257.993 453 cv
242.993 464 226.993 470 209.993 472 cv
209.161 472.097 208.331 472.189 207.5 472.278 cv
.411765 .266667 .290196 rgb
f
24.8264 480 mo
24.8262 480 li
0 480 li
24.8264 480 li
.850042 .840246 .986436 rgb
f
0 478.04 mo
0 403.903 li
22.2615 407.346 44.5669 410.534 66.8832 413.463 cv
66.8855 413.638 66.8867 413.815 66.8867 413.991 cv
66.8861 417.911 66.2999 421.915 64.9928 426 cv
56.1335 454.546 21.1233 457.912 0 478.04 cv
.447059 .290196 .294118 rgb
f
66.8832 413.463 mo
44.5669 410.534 22.2615 407.346 0 403.903 cv
0 386.432 li
20.4851 388.641 40.9735 390.698 61.4814 392.604 cv
64.6993 399.248 66.7873 406.209 66.8832 413.463 cv
.380392 .243137 .290196 rgb
f
61.4814 392.604 mo
40.9735 390.698 20.4851 388.641 0 386.432 cv
0 377.53 li
52.2085 377.53 li
55.7191 382.349 58.9499 387.378 61.4814 392.604 cv
.321569 .203922 .286274 rgb
f
207.015 405.423 mo
213.983 391.903 225.867 379.944 235.135 367.886 cv
219.278 355.697 li
203.437 376.306 li
200.786 224.53 li
200.522 209.423 197.163 193.732 195.399 178.748 cv
192.45 153.702 189.898 128.6 186.63 103.592 cv
182.735 73.7851 207.012 47.6832 234.067 40.2655 cv
242.275 38.0154 250.51 36.1584 258.124 32.6842 cv
261.24 31.2618 264.253 29.5687 267.116 27.4666 cv
277.582 19.7836 286.258 9.31774 295.245 0 cv
280.922 0 li
278.764 2.3567 276.582 4.69514 274.348 6.99033 cv
260.093 21.6338 249.147 28.8132 229.225 31.7388 cv
223.544 32.5731 217.189 32.5997 211.906 35.0213 cv
214.853 23.3507 217.781 11.6756 220.709 0 cv
200.077 0 li
197.15 11.6598 194.226 23.3207 191.3 34.9809 cv
181.091 57.8141 li
173.939 0 li
108.162 0 li
113.438 70.8451 li
114.202 106.659 li
94.9104 77.3476 li
92.0596 73.0159 91.9907 63.2805 90.9608 58.3197 cv
88.3416 45.7014 85.7225 33.0832 83.1024 20.4652 cv
81.6861 13.6436 80.2714 6.82158 78.8549 0 cv
58.4285 0 li
61.401 14.3256 64.3759 28.6508 67.3495 42.9761 cv
68.273 47.4255 69.8292 52.204 69.7244 56.6653 cv
61.2928 54.7231 53.3107 47.2626 45.4608 43.3916 cv
38.7713 40.0929 32.873 37.7457 30.2768 30.2563 cv
27.2865 21.6298 27.3115 11.2126 25.2982 2.2454 cv
25.1301 1.49693 24.9634 .748465 24.7953 0 cv
13.6026 0 li
14.1692 2.98823 14.7453 5.9742 15.3338 8.95522 cv
17.2503 18.6639 18.4721 34.6448 25.2299 42.3949 cv
37.9622 56.9969 67.6273 56.3823 74.4108 76.6359 cv
83.4674 103.675 114.213 124.287 115.241 153.542 cv
116.922 201.392 117.333 249.338 118.265 297.211 cv
116.076 318.323 li
114.501 315.139 li
96.5736 324.005 li
104.097 339.218 112.669 351.979 110.747 369.617 cv
107.947 395.311 105.422 421.038 102.756 446.746 cv
102.756 446.746 102.756 469.868 102.756 480 cv
208.427 480 li
207.858 475.021 207.24 470.051 206.541 465.099 cv
203.8 445.688 197.479 423.924 207.015 405.423 cv
.160784 .0980392 .0745098 rgb
f
142.715 480 mo
107.307 480 li
112.514 453.519 119.211 427.536 130.007 403 cv
135.405 428.641 139.434 454.282 142.715 480 cv
.258824 .152941 .105882 rgb
f
148.007 174 mo
143.007 140 143.007 105 141.007 70 cv
139.702 46.5037 138.212 23.1999 136.779 0 cv
158.123 0 li
156.887 57.9567 150.844 116.139 148.007 174 cv
.243137 .145098 .101961 rgb
f
234.633 367.5 mo
234.633 367.5 li
228.429 362.731 li
228.429 362.731 228.429 362.731 228.429 362.731 cv
228.429 362.731 li
228.429 362.731 li
234.633 367.5 li
.521569 .423529 .25098 rgb
f
235.135 367.886 mo
234.633 367.5 li
234.633 367.5 li
235.135 367.886 li
.796078 .733333 .454902 rgb
f
96.5736 324.005 mo
96.5736 324.005 106.572 319.06 111.635 316.557 cv
111.635 316.557 li
111.635 316.557 li
111.635 316.557 li
96.5736 324.005 li
.392157 .290196 .180392 rgb
f
201.969 430.856 mo
201.943 429.911 201.933 428.969 201.942 428.027 cv
201.944 428.028 li
201.936 428.967 201.946 429.909 201.972 430.852 cv
201.971 430.853 201.97 430.854 201.969 430.856 cv
.678431 .458824 .360784 rgb
f
201.944 428.028 mo
201.942 428.027 li
202.008 420.563 203.213 413.248 206.544 406.366 cv
203.214 413.248 202.01 420.563 201.944 428.028 cv
206.544 406.365 mo
206.551 406.351 206.557 406.337 206.564 406.323 cv
206.557 406.337 206.551 406.351 206.544 406.365 cv
206.57 406.312 mo
206.576 406.299 206.581 406.288 206.587 406.275 cv
206.581 406.288 206.576 406.3 206.57 406.312 cv
206.593 406.263 mo
206.6 406.251 206.606 406.238 206.612 406.225 cv
206.606 406.238 206.6 406.25 206.593 406.263 cv
206.616 406.217 mo
206.637 406.173 206.659 406.13 206.68 406.087 cv
206.659 406.13 206.637 406.174 206.616 406.217 cv
206.683 406.081 mo
206.688 406.07 206.693 406.059 206.699 406.048 cv
206.693 406.059 206.688 406.07 206.683 406.081 cv
206.708 406.031 mo
206.713 406.019 206.718 406.009 206.724 405.998 cv
206.718 406.009 206.713 406.02 206.708 406.031 cv
206.732 405.98 mo
206.737 405.971 206.743 405.96 206.747 405.951 cv
206.742 405.96 206.737 405.971 206.732 405.98 cv
206.759 405.928 mo
206.763 405.919 206.768 405.909 206.772 405.9 cv
206.768 405.909 206.763 405.919 206.759 405.928 cv
206.785 405.875 mo
206.789 405.867 206.793 405.859 206.797 405.851 cv
206.793 405.859 206.789 405.867 206.785 405.875 cv
206.811 405.822 mo
206.816 405.812 206.821 405.802 206.827 405.792 cv
206.821 405.802 206.816 405.812 206.811 405.822 cv
206.847 405.751 mo
206.851 405.744 206.853 405.739 206.857 405.732 cv
206.854 405.738 206.85 405.745 206.847 405.751 cv
206.873 405.7 mo
206.876 405.693 206.88 405.686 206.884 405.679 cv
206.88 405.686 206.877 405.693 206.873 405.7 cv
206.9 405.648 mo
206.903 405.641 206.907 405.634 206.91 405.627 cv
206.907 405.634 206.903 405.641 206.9 405.648 cv
206.925 405.597 mo
206.929 405.59 206.933 405.583 206.936 405.576 cv
206.932 405.583 206.929 405.59 206.925 405.597 cv
206.953 405.543 mo
206.956 405.536 206.959 405.532 206.962 405.525 cv
206.959 405.531 206.956 405.537 206.953 405.543 cv
206.981 405.488 mo
206.983 405.484 206.986 405.479 206.988 405.474 cv
206.986 405.479 206.983 405.484 206.981 405.488 cv
.592157 .380392 .356863 rgb
f
188.509 480 mo
142.715 480 li
139.434 454.282 135.405 428.641 130.007 403 cv
119.211 427.536 112.514 453.519 107.307 480 cv
102.756 480 li
102.756 446.746 li
105.422 421.038 107.947 395.311 110.747 369.617 cv
110.933 367.912 111.021 366.252 111.021 364.631 cv
111.021 349.488 103.369 337.747 96.5736 324.005 cv
96.5736 324.005 li
111.635 316.557 li
120.445 341.346 130.434 365.77 141.007 390 cv
141.007 390 li
141.007 390 li
141.007 390 li
141.007 390 li
141.007 330 138.007 270 137.007 210 cv
135.652 139.54 133.361 69.5415 127.058 0 cv
136.779 0 li
138.212 23.1999 139.702 46.5037 141.007 70 cv
143.007 105 143.007 140 148.007 174 cv
150.844 116.139 156.887 57.9567 158.123 0 cv
162.422 0 li
174.928 135.775 186.275 271.366 185.056 408.103 cv
185.044 409.463 185.031 410.829 185.016 412.189 cv
185.013 412.459 185.01 412.73 185.007 413 cv
185.007 413 li
185.007 413 li
203.9 400.978 215.419 380.845 228.429 362.731 cv
234.633 367.5 li
235.135 367.886 li
232.667 371.097 230.013 374.302 227.316 377.53 cv
221.08 384.995 214.613 392.59 209.672 400.703 cv
209.672 400.703 li
209.081 401.674 208.511 402.654 207.966 403.64 cv
207.64 404.232 207.323 404.825 207.015 405.423 cv
207.015 405.423 li
207.006 405.44 206.997 405.457 206.988 405.474 cv
206.986 405.479 206.983 405.484 206.981 405.488 cv
206.975 405.501 206.968 405.513 206.962 405.525 cv
206.959 405.532 206.956 405.536 206.953 405.543 cv
206.947 405.554 206.941 405.565 206.936 405.576 cv
206.933 405.583 206.929 405.59 206.925 405.597 cv
206.92 405.607 206.915 405.617 206.91 405.627 cv
206.907 405.634 206.903 405.641 206.9 405.648 cv
206.894 405.658 206.889 405.669 206.884 405.679 cv
206.88 405.686 206.876 405.693 206.873 405.7 cv
206.868 405.711 206.862 405.722 206.857 405.732 cv
206.853 405.739 206.851 405.744 206.847 405.751 cv
206.841 405.764 206.833 405.778 206.827 405.792 cv
206.821 405.802 206.816 405.812 206.811 405.822 cv
206.806 405.832 206.802 405.842 206.797 405.851 cv
206.793 405.859 206.789 405.867 206.785 405.875 cv
206.781 405.883 206.777 405.892 206.772 405.9 cv
206.768 405.909 206.763 405.919 206.759 405.928 cv
206.755 405.935 206.751 405.943 206.747 405.951 cv
206.743 405.96 206.737 405.971 206.732 405.98 cv
206.73 405.986 206.727 405.992 206.724 405.998 cv
206.718 406.009 206.713 406.019 206.708 406.031 cv
206.705 406.037 206.702 406.042 206.699 406.048 cv
206.693 406.059 206.688 406.07 206.683 406.081 cv
206.682 406.083 206.681 406.085 206.68 406.087 cv
206.659 406.13 206.637 406.173 206.616 406.217 cv
206.615 406.22 206.613 406.222 206.612 406.225 cv
206.606 406.238 206.6 406.251 206.593 406.263 cv
206.592 406.267 206.589 406.271 206.587 406.275 cv
206.581 406.288 206.576 406.299 206.57 406.312 cv
206.568 406.316 206.566 406.32 206.564 406.323 cv
206.557 406.337 206.551 406.351 206.544 406.365 cv
206.544 406.366 li
203.213 413.248 202.008 420.563 201.942 428.027 cv
201.933 428.969 201.943 429.911 201.969 430.856 cv
194.093 444.201 190.595 459.912 189.007 475 cv
188.829 476.667 188.674 478.333 188.509 480 cv
.207843 .12549 .0901961 rgb
f
206.523 464.976 mo
206.523 464.971 206.522 464.966 206.521 464.961 cv
206.522 464.966 206.523 464.971 206.523 464.976 cv
206.505 464.847 mo
206.505 464.844 206.504 464.839 206.503 464.835 cv
206.504 464.839 206.504 464.843 206.505 464.847 cv
206.487 464.719 mo
206.486 464.716 206.486 464.711 206.485 464.708 cv
206.486 464.712 206.486 464.715 206.487 464.719 cv
206.468 464.586 mo
206.467 464.582 206.467 464.579 206.466 464.576 cv
206.467 464.58 206.467 464.582 206.468 464.586 cv
206.45 464.463 mo
206.449 464.456 206.448 464.448 206.447 464.441 cv
206.448 464.449 206.449 464.456 206.45 464.463 cv
206.432 464.339 mo
206.43 464.329 206.429 464.321 206.428 464.31 cv
206.429 464.32 206.431 464.33 206.432 464.339 cv
206.413 464.212 mo
206.412 464.203 206.411 464.194 206.41 464.186 cv
206.411 464.194 206.412 464.203 206.413 464.212 cv
206.395 464.09 mo
206.393 464.07 206.39 464.054 206.387 464.034 cv
206.39 464.053 206.393 464.071 206.395 464.09 cv
206.376 463.96 mo
206.374 463.941 206.371 463.922 206.368 463.903 cv
206.371 463.922 206.373 463.94 206.376 463.96 cv
206.359 463.843 mo
206.354 463.811 206.35 463.781 206.345 463.749 cv
206.35 463.78 206.354 463.812 206.359 463.843 cv
206.341 463.722 mo
204.767 453.122 202.272 441.867 201.969 430.856 cv
201.97 430.854 201.971 430.853 201.972 430.852 cv
202.274 441.864 204.767 453.12 206.341 463.722 cv
.815686 .556863 .419608 rgb
f
208.427 480 mo
188.509 480 li
188.674 478.333 188.829 476.667 189.007 475 cv
190.595 459.912 194.093 444.201 201.969 430.856 cv
202.272 441.867 204.767 453.122 206.341 463.722 cv
206.342 463.731 206.344 463.741 206.345 463.749 cv
206.35 463.781 206.354 463.811 206.359 463.843 cv
206.362 463.863 206.365 463.883 206.368 463.903 cv
206.371 463.922 206.374 463.941 206.376 463.96 cv
206.38 463.985 206.384 464.01 206.387 464.034 cv
206.39 464.054 206.393 464.07 206.395 464.09 cv
206.4 464.122 206.405 464.154 206.41 464.186 cv
206.411 464.194 206.412 464.203 206.413 464.212 cv
206.418 464.245 206.423 464.277 206.428 464.31 cv
206.429 464.321 206.43 464.329 206.432 464.339 cv
206.437 464.374 206.442 464.407 206.447 464.441 cv
206.448 464.448 206.449 464.456 206.45 464.463 cv
206.455 464.5 206.461 464.539 206.466 464.576 cv
206.467 464.579 206.467 464.582 206.468 464.586 cv
206.473 464.626 206.479 464.667 206.485 464.708 cv
206.486 464.711 206.486 464.716 206.487 464.719 cv
206.492 464.757 206.498 464.797 206.503 464.835 cv
206.504 464.839 206.505 464.844 206.505 464.847 cv
206.51 464.885 206.516 464.923 206.521 464.961 cv
206.522 464.966 206.523 464.971 206.523 464.976 cv
206.529 465.017 206.535 465.058 206.541 465.099 cv
207.24 470.051 207.858 475.021 208.427 480 cv
.258824 .152941 .105882 rgb
f
69.6826 56.6556 mo
68.8177 56.4544 67.957 56.1952 67.1012 55.888 cv
67.0973 55.8825 67.0936 55.8772 67.0897 55.8717 cv
67.9498 56.1808 68.8133 56.4531 69.6826 56.6556 cv
.611765 .501961 .317647 rgb
f
76.0073 65.9999 mo
72.5116 62.8929 69.6243 59.4815 67.1012 55.888 cv
67.957 56.1952 68.8177 56.4544 69.6826 56.6556 cv
69.6965 56.6588 69.7105 56.662 69.7244 56.6653 cv
69.7277 56.5258 69.7293 56.3861 69.7294 56.2461 cv
69.7325 51.9056 68.2441 47.2864 67.3495 42.9761 cv
64.3759 28.6508 61.401 14.3256 58.4285 0 cv
70.8829 0 li
70.8829 0 li
73.3174 13.5287 75.6648 27.18 78.0071 41 cv
78.2767 43.1562 78.4009 45.3851 78.3995 47.6475 cv
78.3955 53.7788 77.4681 60.1562 76.0073 65.9999 cv
.207843 .12549 .0901961 rgb
f
111.635 316.557 mo
111.635 316.557 li
112.112 316.321 112.545 316.107 112.922 315.92 cv
111.635 316.557 li
114.463 315.158 mo
114.463 315.158 114.464 315.158 114.465 315.157 cv
114.463 315.158 li
114.467 315.156 mo
114.468 315.156 114.469 315.155 114.47 315.155 cv
114.467 315.156 li
114.472 315.154 mo
114.478 315.151 114.483 315.148 114.488 315.146 cv
114.472 315.154 li
114.488 315.146 mo
114.497 315.141 114.501 315.139 114.501 315.139 cv
114.488 315.146 li
.482353 .352941 .211765 rgb
f
118.246 296.21 mo
118.245 296.161 118.244 296.112 118.243 296.064 cv
118.244 296.114 118.245 296.16 118.246 296.21 cv
118.227 295.201 mo
118.224 295.091 118.222 294.981 118.22 294.872 cv
118.222 294.983 118.224 295.09 118.227 295.201 cv
118.208 294.215 mo
118.203 293.948 118.198 293.685 118.193 293.418 cv
118.198 293.684 118.203 293.949 118.208 294.215 cv
118.189 293.246 mo
117.775 271.308 117.458 249.355 117.069 227.404 cv
117.069 227.403 117.07 227.399 117.07 227.397 cv
117.459 249.352 117.775 271.304 118.189 293.246 cv
.952941 .929412 .862745 rgb
f
74.7214 77.5371 mo
74.7202 77.5337 74.719 77.5303 74.7178 77.5269 cv
74.7196 77.5318 74.7197 77.5322 74.7214 77.5371 cv
74.7005 77.4779 mo
74.6982 77.4714 74.6959 77.465 74.6936 77.4585 cv
74.6954 77.4634 74.6987 77.4729 74.7005 77.4779 cv
74.6774 77.4123 mo
74.6751 77.4058 74.673 77.3997 74.6707 77.3932 cv
74.673 77.3998 74.6751 77.4058 74.6774 77.4123 cv
74.6442 77.3177 mo
74.6401 77.306 74.6361 77.2945 74.632 77.2827 cv
74.636 77.2942 74.6402 77.3062 74.6442 77.3177 cv
74.6204 77.2495 mo
74.6158 77.2362 74.6113 77.2234 74.6067 77.2101 cv
74.6112 77.2232 74.6158 77.2364 74.6204 77.2495 cv
74.596 77.1794 mo
74.5895 77.1605 74.5828 77.1412 74.5763 77.1223 cv
74.5831 77.142 74.5892 77.1597 74.596 77.1794 cv
74.5665 77.0941 mo
74.5604 77.0764 74.5544 77.0589 74.5483 77.0412 cv
74.5546 77.0594 74.5603 77.076 74.5665 77.0941 cv
74.5401 77.0173 mo
74.5344 77.0006 74.5287 76.9841 74.523 76.9673 cv
74.5286 76.9838 74.5345 77.0009 74.5401 77.0173 cv
74.5151 76.9442 mo
74.5072 76.9213 74.4994 76.8983 74.4916 76.8753 cv
74.4994 76.8984 74.5072 76.9212 74.5151 76.9442 cv
74.4881 76.8651 mo
74.4811 76.8446 74.4741 76.8239 74.4672 76.8034 cv
74.4739 76.8232 74.4814 76.8453 74.4881 76.8651 cv
74.4592 76.7798 mo
74.4535 76.763 74.4478 76.746 74.4421 76.7292 cv
74.4477 76.7457 74.4536 76.7633 74.4592 76.7798 cv
.698039 .501961 .337255 rgb
f
74.4347 76.7072 mo
74.4268 76.6836 74.4187 76.6595 74.4108 76.6359 cv
73.4453 73.7531 72.0172 71.2944 70.2394 69.1531 cv
70.2394 69.1531 li
72.0172 71.2944 73.4453 73.7531 74.4108 76.6359 cv
74.4185 76.659 74.427 76.6841 74.4347 76.7072 cv
f
63.3795 54.2656 mo
57.2941 51.1884 51.4102 46.3564 45.6002 43.4607 cv
51.4103 46.356 57.2938 51.1793 63.3794 54.254 cv
63.3794 54.2576 63.3795 54.262 63.3795 54.2656 cv
.933333 .909804 .847059 rgb
f
63.3795 54.2656 mo
63.3795 54.2656 li
63.3795 54.262 63.3794 54.2576 63.3794 54.254 cv
63.3794 54.254 li
63.3795 54.2581 63.3795 54.2615 63.3795 54.2656 cv
.752941 .611765 .372549 rgb
f
67.1012 55.888 mo
65.8513 55.4394 64.6118 54.8887 63.3795 54.2656 cv
63.3795 54.2615 63.3795 54.2581 63.3794 54.254 cv
64.6075 54.8745 65.8442 55.4239 67.0897 55.8717 cv
67.0936 55.8772 67.0973 55.8825 67.1012 55.888 cv
f
45.5979 43.4596 mo
45.584 43.4526 45.57 43.4457 45.5561 43.4388 cv
45.5703 43.4458 45.5837 43.4525 45.5979 43.4596 cv
45.5515 43.4365 mo
45.538 43.4298 45.5243 43.423 45.5109 43.4163 cv
45.5242 43.4229 45.5382 43.4299 45.5515 43.4365 cv
45.5059 43.4139 mo
45.4911 43.4065 45.4757 43.3989 45.4608 43.3916 cv
45.4758 43.399 45.4909 43.4065 45.5059 43.4139 cv
.933333 .909804 .847059 rgb
f
141.007 390 mo
130.434 365.77 120.445 341.346 111.635 316.557 cv
112.922 315.92 li
113.757 315.507 114.316 315.231 114.463 315.158 cv
114.465 315.157 li
114.466 315.157 114.467 315.156 114.467 315.156 cv
114.47 315.155 li
114.47 315.154 114.471 315.154 114.472 315.154 cv
114.488 315.146 li
114.488 315.146 114.488 315.146 114.488 315.146 cv
114.501 315.139 li
114.501 315.139 li
116.076 318.323 li
118.265 297.211 li
118.265 297.211 li
118.265 297.211 li
118.259 296.877 118.252 296.543 118.246 296.21 cv
118.245 296.16 118.244 296.114 118.243 296.064 cv
118.238 295.776 118.232 295.489 118.227 295.201 cv
118.224 295.09 118.222 294.983 118.22 294.872 cv
118.216 294.653 118.212 294.434 118.208 294.215 cv
118.203 293.949 118.198 293.684 118.193 293.418 cv
118.192 293.361 118.19 293.303 118.189 293.246 cv
117.775 271.304 117.459 249.352 117.07 227.397 cv
120.158 211.99 122.289 196.534 122.296 180.945 cv
122.3 170.365 121.326 159.724 119.007 149 cv
114.378 125.854 96.0613 109.848 81.5018 91.3438 cv
78.769 86.8824 76.4126 82.3084 74.7214 77.5371 cv
74.7197 77.5322 74.7196 77.5318 74.7178 77.5269 cv
74.712 77.5105 74.7063 77.4943 74.7005 77.4779 cv
74.6987 77.4729 74.6954 77.4634 74.6936 77.4585 cv
74.6883 77.4433 74.6827 77.4275 74.6774 77.4123 cv
74.6751 77.4058 74.673 77.3998 74.6707 77.3932 cv
74.6619 77.3681 74.653 77.3428 74.6442 77.3177 cv
74.6402 77.3062 74.636 77.2942 74.632 77.2827 cv
74.6282 77.2718 74.6242 77.2604 74.6204 77.2495 cv
74.6158 77.2364 74.6112 77.2232 74.6067 77.2101 cv
74.6031 77.1998 74.5996 77.1897 74.596 77.1794 cv
74.5892 77.1597 74.5831 77.142 74.5763 77.1223 cv
74.573 77.113 74.5698 77.1034 74.5665 77.0941 cv
74.5603 77.076 74.5546 77.0594 74.5483 77.0412 cv
74.5456 77.0332 74.5429 77.0254 74.5401 77.0173 cv
74.5345 77.0009 74.5286 76.9838 74.523 76.9673 cv
74.5204 76.9599 74.5176 76.9517 74.5151 76.9442 cv
74.5072 76.9212 74.4994 76.8984 74.4916 76.8753 cv
74.4904 76.8719 74.4893 76.8685 74.4881 76.8651 cv
74.4814 76.8453 74.4739 76.8232 74.4672 76.8034 cv
74.4645 76.7953 74.4619 76.7878 74.4592 76.7798 cv
74.4536 76.7633 74.4477 76.7457 74.4421 76.7292 cv
74.4396 76.7217 74.4372 76.7147 74.4347 76.7072 cv
74.427 76.6841 74.4185 76.659 74.4108 76.6359 cv
73.4453 73.7531 72.0172 71.2944 70.2394 69.1531 cv
63.0389 60.4805 50.1173 57.0352 39.1026 51.9059 cv
35.1971 50.0872 31.5291 48.0552 28.443 45.5046 cv
27.2838 44.5465 26.2076 43.516 25.2299 42.3949 cv
18.4721 34.6448 17.2503 18.6639 15.3338 8.95522 cv
14.7453 5.9742 14.1692 2.98823 13.6026 0 cv
24.7953 0 li
24.9634 .748465 25.1301 1.49693 25.2982 2.2454 cv
27.3115 11.2126 27.2865 21.6298 30.2768 30.2563 cv
32.873 37.7457 38.7713 40.0929 45.4608 43.3916 cv
45.4608 43.3916 li
45.4757 43.3989 45.4911 43.4065 45.5059 43.4139 cv
45.5076 43.4147 45.5091 43.4155 45.5109 43.4163 cv
45.5243 43.423 45.538 43.4298 45.5515 43.4365 cv
45.5532 43.4373 45.5544 43.4379 45.5561 43.4388 cv
45.57 43.4457 45.584 43.4526 45.5979 43.4596 cv
45.5983 43.4598 45.5998 43.4605 45.6002 43.4607 cv
51.4102 46.3564 57.2941 51.1884 63.3795 54.2656 cv
63.3795 54.2656 li
64.6118 54.8887 65.8513 55.4394 67.1012 55.888 cv
69.6243 59.4815 72.5116 62.8929 76.0073 65.9999 cv
77.4681 60.1562 78.3955 53.7788 78.3995 47.6475 cv
78.4009 45.3851 78.2767 43.1562 78.0071 41 cv
75.6648 27.18 73.3174 13.5287 70.8829 0 cv
78.8549 0 li
80.2714 6.82158 81.6861 13.6436 83.1024 20.4652 cv
85.7225 33.0832 88.3416 45.7014 90.9608 58.3197 cv
91.9907 63.2805 92.0596 73.0159 94.9104 77.3476 cv
114.202 106.659 li
113.438 70.8451 li
112.975 64.6183 li
111.811 48.9924 li
108.162 0 li
127.058 0 li
133.361 69.5415 135.652 139.54 137.007 210 cv
138.007 270 141.007 330 141.007 390 cv
.258824 .152941 .105882 rgb
f
141.007 390 mo
130.434 365.77 120.445 341.346 111.635 316.557 cv
111.635 316.557 li
120.445 341.346 130.434 365.77 141.007 390 cv
141.007 390 li
.333333 .192157 .12549 rgb
f
116.376 192.995 mo
116.375 192.976 li
116.15 183.335 115.893 173.694 115.591 164.059 cv
115.591 164.059 li
115.894 173.702 116.151 183.347 116.376 192.995 cv
115.535 162.302 mo
115.503 161.313 115.471 160.325 115.439 159.336 cv
115.471 160.327 115.503 161.311 115.535 162.302 cv
115.535 162.302 li
.996078 .996078 .964706 rgb
f
115.591 164.059 mo
115.591 164.059 li
115.572 163.473 115.554 162.887 115.535 162.302 cv
115.535 162.302 li
115.554 162.886 115.572 163.474 115.591 164.059 cv
.996078 .988235 .956863 rgb
f
117.069 227.404 mo
116.866 215.926 116.643 204.451 116.375 192.976 cv
116.376 192.995 li
116.644 204.459 116.867 215.93 117.07 227.397 cv
117.07 227.399 117.069 227.403 117.069 227.404 cv
117.069 227.404 li
117.069 227.404 li
.988235 .976471 .913725 rgb
f
115.437 159.297 mo
115.432 159.133 115.426 158.968 115.421 158.805 cv
115.426 158.968 115.432 159.133 115.437 159.297 cv
115.417 158.702 mo
115.413 158.563 115.408 158.423 115.404 158.283 cv
115.408 158.423 115.413 158.562 115.417 158.702 cv
115.398 158.114 mo
115.394 157.99 115.39 157.867 115.385 157.744 cv
115.39 157.867 115.394 157.991 115.398 158.114 cv
115.378 157.529 mo
115.375 157.429 115.371 157.329 115.368 157.229 cv
115.371 157.328 115.375 157.43 115.378 157.529 cv
115.359 156.948 mo
115.356 156.865 115.353 156.784 115.35 156.701 cv
115.353 156.786 115.356 156.863 115.359 156.948 cv
115.339 156.372 mo
115.337 156.308 115.335 156.241 115.332 156.177 cv
115.335 156.241 115.337 156.308 115.339 156.372 cv
115.32 155.801 mo
115.318 155.752 115.316 155.701 115.314 155.651 cv
115.316 155.701 115.318 155.752 115.32 155.801 cv
115.3 155.229 mo
115.299 155.209 115.298 155.187 115.298 155.168 cv
115.298 155.188 115.299 155.208 115.3 155.229 cv
115.261 154.104 mo
115.254 153.917 115.248 153.73 115.241 153.542 cv
115.241 153.542 li
115.241 153.542 li
115.248 153.729 115.254 153.917 115.261 154.104 cv
115.238 153.464 mo
115.238 153.455 115.238 153.448 115.237 153.439 cv
115.238 153.447 115.238 153.457 115.238 153.464 cv
115.235 153.384 mo
115.235 153.374 115.235 153.366 115.234 153.356 cv
115.235 153.365 115.235 153.375 115.235 153.384 cv
115.232 153.302 mo
115.232 153.294 115.231 153.286 115.231 153.277 cv
115.231 153.286 115.232 153.293 115.232 153.302 cv
115.228 153.214 mo
115.228 153.208 115.228 153.203 115.228 153.197 cv
115.228 153.204 115.228 153.207 115.228 153.214 cv
115.224 153.12 mo
115.224 153.111 115.223 153.104 115.223 153.095 cv
115.223 153.104 115.224 153.111 115.224 153.12 cv
115.221 153.041 mo
115.22 153.031 115.22 153.023 115.219 153.013 cv
115.22 153.022 115.22 153.032 115.221 153.041 cv
115.217 152.959 mo
115.216 152.951 115.216 152.942 115.215 152.933 cv
115.216 152.942 115.216 152.951 115.217 152.959 cv
115.212 152.874 mo
115.212 152.867 115.212 152.861 115.211 152.854 cv
115.212 152.861 115.212 152.867 115.212 152.874 cv
115.207 152.775 mo
115.207 152.771 115.207 152.767 115.207 152.763 cv
115.207 152.766 115.207 152.772 115.207 152.775 cv
115.203 152.696 mo
115.203 152.687 115.202 152.682 115.202 152.673 cv
115.202 152.682 115.203 152.687 115.203 152.696 cv
115.199 152.616 mo
115.198 152.607 115.198 152.6 115.197 152.591 cv
115.198 152.6 115.198 152.607 115.199 152.616 cv
115.194 152.533 mo
115.193 152.526 115.193 152.519 115.192 152.512 cv
115.193 152.519 115.193 152.526 115.194 152.533 cv
115.183 152.353 mo
115.182 152.347 115.182 152.34 115.182 152.335 cv
115.182 152.34 115.182 152.347 115.183 152.353 cv
115.178 152.273 mo
115.177 152.265 115.177 152.259 115.176 152.25 cv
115.177 152.257 115.177 152.266 115.178 152.273 cv
115.172 152.193 mo
115.172 152.186 115.171 152.177 115.171 152.17 cv
115.171 152.177 115.172 152.186 115.172 152.193 cv
115.166 152.094 mo
115.166 152.092 li
115.166 152.094 li
115.16 152.011 mo
115.16 152.006 115.159 152.002 115.159 151.996 cv
115.159 152.001 115.16 152.006 115.16 152.011 cv
115.154 151.931 mo
115.154 151.925 115.153 151.918 115.153 151.913 cv
115.153 151.92 115.154 151.924 115.154 151.931 cv
115.148 151.849 mo
115.148 151.844 115.147 151.836 115.147 151.831 cv
115.147 151.836 115.148 151.844 115.148 151.849 cv
115.141 151.757 mo
115.141 151.756 115.141 151.754 115.141 151.752 cv
115.141 151.754 115.141 151.755 115.141 151.757 cv
115.134 151.669 mo
115.134 151.666 li
115.134 151.669 li
115.128 151.59 mo
115.127 151.584 115.127 151.58 115.127 151.574 cv
115.127 151.579 115.128 151.584 115.128 151.59 cv
115.121 151.511 mo
115.121 151.505 115.12 151.497 115.12 151.491 cv
115.12 151.498 115.121 151.504 115.121 151.511 cv
115.114 151.421 mo
115.114 151.418 115.114 151.416 115.113 151.413 cv
115.113 151.415 115.114 151.419 115.114 151.421 cv
115.099 151.25 mo
115.099 151.245 115.098 151.242 115.098 151.238 cv
115.098 151.242 115.099 151.246 115.099 151.25 cv
115.092 151.169 mo
115.091 151.164 115.091 151.16 115.09 151.154 cv
115.091 151.157 115.092 151.166 115.092 151.169 cv
115.084 151.083 mo
115.084 151.081 115.083 151.077 115.083 151.075 cv
115.083 151.076 115.084 151.082 115.084 151.083 cv
115.068 150.91 mo
115.067 150.909 115.067 150.907 115.067 150.905 cv
115.067 150.907 115.067 150.908 115.068 150.91 cv
115.06 150.831 mo
115.059 150.826 115.059 150.822 115.059 150.817 cv
115.059 150.821 115.06 150.827 115.06 150.831 cv
115.051 150.745 mo
115.051 150.743 115.051 150.74 115.051 150.738 cv
115.051 150.741 115.051 150.742 115.051 150.745 cv
115.025 150.49 mo
115.025 150.487 115.025 150.488 115.024 150.485 cv
115.025 150.487 115.025 150.489 115.025 150.49 cv
115.016 150.407 mo
115.016 150.406 115.016 150.404 115.016 150.402 cv
115.016 150.404 115.016 150.405 115.016 150.407 cv
114.988 150.153 mo
114.988 150.152 li
114.988 150.153 li
114.978 150.07 mo
114.978 150.069 114.978 150.069 114.978 150.068 cv
114.978 150.07 li
.996078 .996078 .964706 rgb
f
117.07 227.397 mo
116.867 215.93 116.644 204.459 116.376 192.995 cv
116.151 183.347 115.894 173.702 115.591 164.059 cv
115.572 163.474 115.554 162.886 115.535 162.302 cv
115.503 161.311 115.471 160.327 115.439 159.336 cv
115.438 159.323 115.438 159.31 115.437 159.297 cv
115.432 159.133 115.426 158.968 115.421 158.805 cv
115.42 158.77 115.419 158.737 115.417 158.702 cv
115.413 158.562 115.408 158.423 115.404 158.283 cv
115.402 158.227 115.4 158.169 115.398 158.114 cv
115.394 157.991 115.39 157.867 115.385 157.744 cv
115.383 157.672 115.381 157.601 115.378 157.529 cv
115.375 157.43 115.371 157.328 115.368 157.229 cv
115.365 157.135 115.362 157.041 115.359 156.948 cv
115.356 156.863 115.353 156.786 115.35 156.701 cv
115.346 156.591 115.343 156.482 115.339 156.372 cv
115.337 156.308 115.335 156.241 115.332 156.177 cv
115.328 156.05 115.324 155.927 115.32 155.801 cv
115.318 155.752 115.316 155.701 115.314 155.651 cv
115.31 155.51 115.305 155.37 115.3 155.229 cv
115.299 155.208 115.298 155.188 115.298 155.168 cv
115.285 154.813 115.273 154.459 115.261 154.104 cv
115.254 153.917 115.248 153.729 115.241 153.542 cv
115.241 153.542 li
115.24 153.516 115.239 153.49 115.238 153.464 cv
115.238 153.457 115.238 153.447 115.237 153.439 cv
115.237 153.422 115.236 153.401 115.235 153.384 cv
115.235 153.375 115.235 153.365 115.234 153.356 cv
115.233 153.339 115.233 153.32 115.232 153.302 cv
115.232 153.293 115.231 153.286 115.231 153.277 cv
115.23 153.255 115.229 153.236 115.228 153.214 cv
115.228 153.207 115.228 153.204 115.228 153.197 cv
115.227 153.173 115.225 153.145 115.224 153.12 cv
115.224 153.111 115.223 153.104 115.223 153.095 cv
115.222 153.078 115.221 153.059 115.221 153.041 cv
115.22 153.032 115.22 153.022 115.219 153.013 cv
115.218 152.996 115.217 152.977 115.217 152.959 cv
115.216 152.951 115.216 152.942 115.215 152.933 cv
115.214 152.913 115.213 152.895 115.212 152.874 cv
115.212 152.867 115.212 152.861 115.211 152.854 cv
115.21 152.828 115.209 152.801 115.207 152.775 cv
115.207 152.772 115.207 152.766 115.207 152.763 cv
115.205 152.741 115.204 152.718 115.203 152.696 cv
115.203 152.687 115.202 152.682 115.202 152.673 cv
115.201 152.654 115.2 152.635 115.199 152.616 cv
115.198 152.607 115.198 152.6 115.197 152.591 cv
115.196 152.573 115.195 152.552 115.194 152.533 cv
115.193 152.526 115.193 152.519 115.192 152.512 cv
115.189 152.458 115.186 152.406 115.183 152.353 cv
115.182 152.347 115.182 152.34 115.182 152.335 cv
115.18 152.315 115.179 152.293 115.178 152.273 cv
115.177 152.266 115.177 152.257 115.176 152.25 cv
115.175 152.231 115.174 152.212 115.172 152.193 cv
115.172 152.186 115.171 152.177 115.171 152.17 cv
115.169 152.144 115.167 152.12 115.166 152.094 cv
115.166 152.092 li
115.164 152.065 115.162 152.039 115.16 152.011 cv
115.16 152.006 115.159 152.001 115.159 151.996 cv
115.157 151.974 115.156 151.952 115.154 151.931 cv
115.154 151.924 115.153 151.92 115.153 151.913 cv
115.151 151.891 115.15 151.871 115.148 151.849 cv
115.148 151.844 115.147 151.836 115.147 151.831 cv
115.145 151.806 115.143 151.781 115.141 151.757 cv
115.141 151.755 115.141 151.754 115.141 151.752 cv
115.139 151.724 115.137 151.698 115.134 151.669 cv
115.134 151.666 li
115.132 151.64 115.13 151.615 115.128 151.59 cv
115.128 151.584 115.127 151.579 115.127 151.574 cv
115.125 151.552 115.123 151.532 115.121 151.511 cv
115.121 151.504 115.12 151.498 115.12 151.491 cv
115.118 151.468 115.116 151.444 115.114 151.421 cv
115.114 151.419 115.113 151.415 115.113 151.413 cv
115.109 151.359 115.104 151.304 115.099 151.25 cv
115.099 151.246 115.098 151.242 115.098 151.238 cv
115.096 151.215 115.094 151.192 115.092 151.169 cv
115.092 151.166 115.091 151.157 115.09 151.154 cv
115.088 151.131 115.086 151.106 115.084 151.083 cv
115.084 151.082 115.083 151.076 115.083 151.075 cv
115.078 151.019 115.073 150.965 115.068 150.91 cv
115.067 150.908 115.067 150.907 115.067 150.905 cv
115.065 150.88 115.062 150.856 115.06 150.831 cv
115.06 150.827 115.059 150.821 115.059 150.817 cv
115.056 150.795 115.054 150.768 115.051 150.745 cv
115.051 150.742 115.051 150.741 115.051 150.738 cv
115.042 150.655 115.034 150.573 115.025 150.49 cv
115.025 150.489 115.025 150.487 115.024 150.485 cv
115.022 150.459 115.019 150.433 115.016 150.407 cv
115.016 150.405 115.016 150.404 115.016 150.402 cv
115.006 150.319 114.997 150.236 114.988 150.153 cv
114.988 150.152 li
114.985 150.126 114.981 150.097 114.978 150.07 cv
114.978 150.068 li
112.412 128.015 93.3873 110.746 81.5018 91.3438 cv
96.0613 109.848 114.378 125.854 119.007 149 cv
121.326 159.724 122.3 170.365 122.296 180.945 cv
122.289 196.534 120.158 211.99 117.07 227.397 cv
.305882 .180392 .121569 rgb
f
201.021 237.97 mo
201.021 237.97 li
200.89 230.51 li
200.926 232.552 200.97 235.065 201.021 237.97 cv
.996078 .996078 .964706 rgb
f
201.044 239.28 mo
201.044 239.28 li
201.021 237.97 li
201.021 237.97 li
201.028 238.398 201.036 238.835 201.044 239.28 cv
1 1 .980392 rgb
f
200.89 230.503 mo
200.889 230.455 li
200.89 230.471 200.89 230.487 200.89 230.503 cv
186.621 103.52 mo
186.436 102.089 186.316 100.669 186.258 99.2561 cv
186.263 99.2283 186.269 99.2001 186.274 99.1723 cv
186.274 99.1723 li
186.274 99.1723 li
186.33 100.613 186.433 102.061 186.621 103.52 cv
.996078 .996078 .964706 rgb
f
201.044 239.28 mo
195.991 201.598 183.961 163.131 183.965 125.711 cv
183.966 116.825 184.645 107.999 186.258 99.2561 cv
186.316 100.669 186.436 102.089 186.621 103.52 cv
186.624 103.544 186.627 103.568 186.63 103.592 cv
189.898 128.6 192.45 153.702 195.399 178.748 cv
197.163 193.732 200.522 209.423 200.786 224.53 cv
200.786 224.531 200.823 226.677 200.889 230.455 cv
200.89 230.503 li
200.89 230.505 200.89 230.508 200.89 230.51 cv
201.021 237.97 li
201.043 239.279 li
.305882 .180392 .121569 rgb
f
178.007 89 mo
178.007 60 175.007 31 172.007 2.00004 cv
171.928 1.33065 171.86 .666229 171.788 0 cv
173.939 0 li
181.091 57.8141 li
191.3 34.9809 li
194.226 23.3207 197.15 11.66 200.077 0 cv
210.126 0 li
204.128 16.9301 196.865 33.2616 192.007 52.0001 cv
189.007 65 184.007 77 178.007 89 cv
f
228.429 362.731 mo
219.278 355.697 li
228.429 362.731 li
228.429 362.731 li
.639216 .513725 .294118 rgb
f
201.651 274.062 mo
201.65 274.021 li
201.651 274.035 201.651 274.048 201.651 274.062 cv
201.64 273.413 mo
201.638 273.331 li
201.639 273.356 201.639 273.388 201.64 273.413 cv
.921569 .87451 .733333 rgb
f
201.505 265.673 mo
201.505 265.673 li
201.437 261.788 li
201.437 261.788 li
201.459 263.067 201.482 264.357 201.505 265.673 cv
.988235 .976471 .945098 rgb
f
201.437 261.788 mo
201.437 261.788 li
201.043 239.279 li
201.044 239.28 201.044 239.28 201.044 239.28 cv
201.151 245.425 201.286 253.153 201.437 261.788 cv
.996078 .992157 .968627 rgb
f
201.629 272.825 mo
201.505 265.673 li
201.505 265.673 li
201.545 268.003 201.587 270.396 201.629 272.825 cv
.921569 .87451 .733333 rgb
f
186.258 99.2561 mo
186.228 98.5219 186.215 97.7855 186.218 97.0571 cv
186.237 97.0571 li
186.234 97.7594 186.246 98.4647 186.274 99.1723 cv
186.269 99.2001 186.263 99.2283 186.258 99.2561 cv
186.447 92.7437 mo
186.428 92.7437 li
186.723 89.5894 187.321 86.502 188.188 83.5023 cv
188.206 83.5023 li
187.339 86.5029 186.742 89.5885 186.447 92.7437 cv
193.59 71.0316 mo
193.575 71.0316 li
194.914 68.7388 196.412 66.5288 198.047 64.4153 cv
198.059 64.4153 li
196.425 66.5287 194.928 68.7388 193.59 71.0316 cv
.988235 .976471 .945098 rgb
f
198.059 64.4153 mo
198.047 64.4153 li
200.299 61.5043 202.813 58.7745 205.533 56.2587 cv
205.533 56.2617 205.533 56.2636 205.533 56.2666 cv
202.817 58.7802 200.308 61.5072 198.059 64.4153 cv
.933333 .909804 .847059 rgb
f
188.206 83.5023 mo
188.188 83.5023 li
189.449 79.14 191.279 74.9636 193.575 71.0316 cv
193.59 71.0316 li
191.296 74.9632 189.467 79.1406 188.206 83.5023 cv
f
186.237 97.0571 mo
186.218 97.0571 li
186.224 95.6057 186.295 94.1695 186.428 92.7437 cv
186.447 92.7437 li
186.314 94.1683 186.243 95.6069 186.237 97.0571 cv
f
205.533 56.2666 mo
205.533 56.2636 205.533 56.2617 205.533 56.2587 cv
205.533 56.2587 li
205.533 56.2614 205.533 56.2637 205.533 56.2665 cv
205.533 56.2666 li
.752941 .545098 .243137 rgb
f
205.533 56.2665 mo
205.533 56.2637 205.533 56.2614 205.533 56.2587 cv
213.374 49.0076 222.937 43.5301 232.93 40.5887 cv
222.934 43.531 213.371 49.0116 205.533 56.2665 cv
232.942 40.5851 mo
232.962 40.5793 232.984 40.5729 233.003 40.5671 cv
232.983 40.5731 232.962 40.5792 232.942 40.5851 cv
233.018 40.5628 mo
233.038 40.557 233.058 40.5513 233.077 40.5455 cv
233.059 40.551 233.037 40.5573 233.018 40.5628 cv
233.096 40.5401 mo
233.114 40.5348 233.132 40.5295 233.151 40.5242 cv
233.132 40.5297 233.115 40.5347 233.096 40.5401 cv
233.174 40.5175 mo
233.192 40.5122 233.206 40.5082 233.224 40.503 cv
233.207 40.5079 233.191 40.5125 233.174 40.5175 cv
233.253 40.4945 mo
233.268 40.4902 233.284 40.4856 233.299 40.4813 cv
233.283 40.4858 233.269 40.49 233.253 40.4945 cv
233.331 40.4722 mo
233.345 40.468 233.361 40.4636 233.375 40.4594 cv
233.36 40.4639 233.346 40.4677 233.331 40.4722 cv
233.408 40.4501 mo
233.423 40.4458 233.438 40.4414 233.453 40.4371 cv
233.439 40.4412 233.422 40.4461 233.408 40.4501 cv
233.483 40.4287 mo
233.498 40.4244 233.514 40.4197 233.529 40.4155 cv
233.514 40.4199 233.499 40.4242 233.483 40.4287 cv
233.562 40.4063 mo
233.577 40.4021 233.591 40.3979 233.606 40.3937 cv
233.592 40.3977 233.576 40.4023 233.562 40.4063 cv
233.639 40.3846 mo
233.653 40.3804 233.668 40.3764 233.683 40.3722 cv
233.669 40.3761 233.653 40.3806 233.639 40.3846 cv
233.717 40.3625 mo
233.732 40.3583 233.745 40.3548 233.76 40.3506 cv
233.746 40.3546 233.731 40.3585 233.717 40.3625 cv
233.795 40.3408 mo
233.808 40.3371 233.823 40.3329 233.836 40.3293 cv
233.822 40.3332 233.809 40.3369 233.795 40.3408 cv
233.875 40.3185 mo
233.888 40.3148 233.9 40.3115 233.913 40.3078 cv
233.901 40.3113 233.888 40.315 233.875 40.3185 cv
233.958 40.2956 mo
233.967 40.2929 233.98 40.2894 233.99 40.2867 cv
233.979 40.2897 233.969 40.2926 233.958 40.2956 cv
.627451 .447059 .227451 rgb
f
185.007 413 mo
185.01 412.73 185.013 412.459 185.016 412.189 cv
185.031 410.829 185.044 409.463 185.056 408.103 cv
186.275 271.366 174.929 135.775 162.423 0 cv
171.788 0 li
171.86 .666229 171.928 1.33065 172.007 2.00004 cv
175.007 31 178.007 60 178.007 89 cv
184.007 77 189.007 65 192.007 52.0001 cv
196.865 33.2616 204.128 16.9301 210.126 0 cv
220.709 0 li
220.709 0 li
217.781 11.6753 214.853 23.3507 211.906 35.0213 cv
211.906 35.0213 li
211.906 35.0213 li
211.906 35.0213 li
217.189 32.5997 223.544 32.5731 229.225 31.7388 cv
249.147 28.8132 260.093 21.6338 274.348 6.99033 cv
276.582 4.69514 278.764 2.3567 280.922 0 cv
295.245 0 li
293.566 1.74025 291.898 3.52097 290.228 5.31571 cv
282.955 13.1305 275.627 21.2186 267.116 27.4666 cv
264.253 29.5687 261.24 31.2618 258.124 32.6842 cv
250.51 36.1584 242.275 38.0154 234.067 40.2655 cv
234.067 40.2655 li
234.042 40.2724 234.015 40.2798 233.99 40.2867 cv
233.98 40.2894 233.967 40.2929 233.958 40.2956 cv
233.942 40.3 233.929 40.3035 233.913 40.3078 cv
233.9 40.3115 233.888 40.3148 233.875 40.3185 cv
233.862 40.322 233.849 40.3258 233.836 40.3293 cv
233.823 40.3329 233.808 40.3371 233.795 40.3408 cv
233.784 40.3439 233.771 40.3475 233.76 40.3506 cv
233.745 40.3548 233.732 40.3583 233.717 40.3625 cv
233.705 40.366 233.695 40.3687 233.683 40.3722 cv
233.668 40.3764 233.653 40.3804 233.639 40.3846 cv
233.628 40.3877 233.617 40.3906 233.606 40.3937 cv
233.591 40.3979 233.577 40.4021 233.562 40.4063 cv
233.551 40.4094 233.54 40.4124 233.529 40.4155 cv
233.514 40.4197 233.498 40.4244 233.483 40.4287 cv
233.472 40.4318 233.464 40.434 233.453 40.4371 cv
233.438 40.4414 233.423 40.4458 233.408 40.4501 cv
233.397 40.4532 233.386 40.4562 233.375 40.4594 cv
233.361 40.4636 233.345 40.468 233.331 40.4722 cv
233.321 40.4749 233.308 40.4786 233.299 40.4813 cv
233.284 40.4856 233.268 40.4902 233.253 40.4945 cv
233.244 40.4972 233.233 40.5003 233.224 40.503 cv
233.206 40.5082 233.192 40.5122 233.174 40.5175 cv
233.166 40.5197 233.158 40.522 233.151 40.5242 cv
233.132 40.5295 233.114 40.5348 233.096 40.5401 cv
233.09 40.542 233.084 40.5437 233.077 40.5455 cv
233.058 40.5513 233.038 40.557 233.018 40.5628 cv
233.014 40.5641 233.008 40.5657 233.003 40.5671 cv
232.984 40.5729 232.962 40.5793 232.942 40.5851 cv
232.937 40.5865 232.935 40.5873 232.93 40.5887 cv
222.937 43.5301 213.374 49.0076 205.533 56.2587 cv
205.533 56.2587 li
202.813 58.7745 200.299 61.5043 198.047 64.4153 cv
196.412 66.5288 194.914 68.7388 193.575 71.0316 cv
191.279 74.9636 189.449 79.14 188.188 83.5023 cv
187.321 86.502 186.723 89.5894 186.428 92.7437 cv
186.295 94.1695 186.224 95.6057 186.218 97.0571 cv
186.215 97.7855 186.228 98.5219 186.258 99.2561 cv
184.645 107.999 183.966 116.825 183.965 125.711 cv
183.961 163.131 195.991 201.598 201.044 239.28 cv
201.437 261.788 li
201.505 265.673 li
201.629 272.825 li
201.632 272.997 201.635 273.159 201.638 273.331 cv
201.64 273.413 li
201.643 273.617 201.647 273.816 201.65 274.021 cv
201.651 274.062 li
202.425 318.345 203.437 376.306 203.437 376.306 cv
219.278 355.697 li
228.429 362.731 li
215.419 380.845 203.9 400.978 185.007 413 cv
.258824 .152941 .105882 rgb
f
185.007 413 mo
185.007 413 li
203.9 400.978 215.419 380.845 228.429 362.731 cv
228.429 362.731 li
215.419 380.845 203.9 400.978 185.007 413 cv
185.016 412.189 mo
185.031 410.829 185.044 409.463 185.056 408.103 cv
185.044 409.463 185.031 410.829 185.016 412.189 cv
.333333 .192157 .12549 rgb
f
780.84 375.787 mo
777.324 356.893 785.365 343.782 791.751 327.681 cv
772.612 317.715 li
772.152 318.826 771.69 319.936 771.228 321.045 cv
769.97 313.571 768.737 306.113 767.529 298.669 cv
765.257 248.104 763.025 197.645 762.429 147.327 cv
762.276 116.709 788.19 92.1599 793.943 62.1889 cv
798.425 39.8541 823.025 36.8492 832.067 19.3283 cv
834.58 14.4403 835.61 7.27219 836.114 0 cv
827.659 0 li
827.499 2.338 827.261 4.63273 826.885 6.84636 cv
825.443 15.3075 820.848 18.6298 815.641 23.0537 cv
809.54 28.2513 803.487 37.2493 796.62 40.3529 cv
796.259 35.6125 797.25 30.3248 797.73 25.4616 cv
798.57 16.9851 799.393 8.4956 800.208 0 cv
784.189 0 li
784.052 1.23535 783.919 2.47386 783.782 3.70853 cv
782.26 17.4062 780.706 31.0793 779.118 44.7182 cv
778.489 50.078 778.898 60.3697 776.698 65.2627 cv
776.801 65.3456 761.539 98.178 761.434 98.0981 cv
761.21 85.5742 761.016 73.058 760.852 60.5504 cv
761.444 40.3743 762.076 20.1887 762.733 0 cv
710.881 0 li
708.683 18.4268 706.478 36.8212 704.262 55.151 cv
701.593 47.8659 698.997 40.6203 696.473 33.4124 cv
694.496 22.2255 692.633 11.0916 690.869 0 cv
674.138 0 li
675.851 12.0061 677.688 24.0581 679.673 36.1624 cv
676.572 34.8913 672.937 35.0091 669.403 35.1267 cv
668.162 35.1679 666.934 35.2094 665.746 35.1907 cv
649.732 34.9469 641.334 29.3578 631.409 17.2244 cv
626.827 11.615 622.754 5.6385 618.533 0 cv
605.116 0 li
608.41 4.40044 611.8 8.79525 615.302 13.1862 cv
621.428 20.8712 627.366 29.915 635.283 36.0554 cv
637.417 37.7108 639.721 38.958 642.144 39.9332 cv
648.065 42.3169 654.673 43.0719 661.258 44.2345 cv
682.757 47.9313 702.341 71.3901 698.669 101.996 cv
695.39 127.544 692.725 153.018 689.71 178.358 cv
687.915 193.524 684.57 209.399 684.177 224.536 cv
683.706 224.59 681.477 376.604 681.948 376.552 cv
676.174 369.302 670.495 362.127 664.91 355.026 cv
659.308 358.753 653.659 362.436 647.962 366.072 cv
657.72 378.474 670.633 391.239 678.518 405.396 cv
689.347 424.806 683.024 446.13 680.346 465.11 cv
679.662 470.053 679.077 475.02 678.552 480 cv
798.99 480 li
798.293 473.05 797.602 466.102 796.926 459.161 cv
791.231 431.15 786.016 403.356 780.84 375.787 cv
.121569 .105882 .0705882 rgb
f
790.796 480 mo
755.081 480 li
756.784 456.573 759.191 433.167 762.735 409.746 cv
774.166 432.161 783.03 455.776 790.796 480 cv
.196078 .164706 .101961 rgb
f
733.309 170.777 mo
729.352 113.39 724.456 56.7574 723.886 0 cv
740.237 0 li
739.315 20.8601 738.426 41.8018 737.692 62.8594 cv
737.692 62.8594 li
736.35 99.1604 737.07 135.361 733.309 170.777 cv
733.309 170.777 li
.184314 .156863 .0980392 rgb
f
799.001 480 mo
798.99 480 li
798.293 473.05 797.602 466.102 796.926 459.161 cv
797.601 466.1 798.304 473.051 799.001 480 cv
.580392 .372549 .360784 rgb
f
799.001 480 mo
798.99 480 li
798.99 480 li
799.001 480 li
799.001 480 li
.620208 .586621 .948327 rgb
f
781.168 377.53 mo
781.168 377.53 li
781.058 376.949 780.949 376.367 780.84 375.787 cv
780.949 376.367 781.059 376.949 781.168 377.53 cv
.796078 .733333 .458824 rgb
f
796.526 457.192 mo
795.94 454.298 795.359 451.406 794.782 448.517 cv
794.782 448.517 li
795.359 451.406 795.94 454.298 796.526 457.192 cv
.580392 .372549 .360784 rgb
f
794.782 448.517 mo
794.782 448.517 li
792.807 438.623 790.885 428.754 788.997 418.915 cv
788.997 418.915 li
790.885 428.754 792.807 438.623 794.782 448.517 cv
.678431 .458824 .364706 rgb
f
788.997 418.915 mo
787.607 411.676 786.236 404.453 784.876 397.244 cv
784.876 397.244 li
786.237 404.453 787.607 411.676 788.997 418.915 cv
788.997 418.915 li
.592157 .384314 .360784 rgb
f
784.876 397.244 mo
783.633 390.659 782.399 384.09 781.168 377.53 cv
781.168 377.53 li
782.399 384.09 783.633 390.659 784.876 397.244 cv
784.876 397.244 li
.505882 .317647 .352941 rgb
f
683.97 421.598 mo
683.965 421.598 683.968 421.598 683.963 421.598 cv
683.963 421.597 li
683.968 421.598 683.965 421.598 683.97 421.598 cv
683.97 421.598 li
.643137 .419608 .364706 rgb
f
684.613 429.421 mo
684.611 429.325 684.608 429.23 684.606 429.134 cv
684.606 429.134 li
684.609 429.23 684.611 429.324 684.613 429.421 cv
.580392 .372549 .360784 rgb
f
684.606 429.134 mo
684.543 426.616 684.342 424.101 683.963 421.598 cv
683.968 421.598 683.965 421.598 683.97 421.598 cv
684.346 424.1 684.545 426.616 684.606 429.134 cv
684.606 429.134 li
.494118 .313725 .352941 rgb
f
683.97 421.598 mo
683.965 421.598 683.968 421.598 683.963 421.597 cv
683.142 416.163 681.489 410.785 678.61 405.563 cv
681.503 410.797 683.153 416.17 683.97 421.598 cv
.592157 .384314 .360784 rgb
f
649.098 367.5 mo
649.098 367.5 li
648.715 367.024 648.336 366.547 647.962 366.072 cv
647.962 366.072 li
648.336 366.547 648.715 367.024 649.098 367.5 cv
.796078 .733333 .458824 rgb
f
657.522 377.53 mo
657.522 377.53 li
654.615 374.145 651.756 370.809 649.098 367.5 cv
649.098 367.5 li
651.756 370.809 654.615 374.145 657.522 377.53 cv
f
668.714 390.962 mo
665.127 386.377 661.285 381.913 657.522 377.53 cv
657.522 377.53 li
661.285 381.913 665.128 386.377 668.714 390.962 cv
.505882 .317647 .352941 rgb
f
652.719 363.018 mo
652.719 363.018 li
653.535 362.491 654.35 361.963 655.164 361.434 cv
655.164 361.434 li
655.164 361.434 li
655.164 361.434 li
654.35 361.963 653.535 362.491 652.719 363.018 cv
.521569 .423529 .25098 rgb
f
647.962 366.072 mo
649.551 365.057 651.137 364.039 652.719 363.018 cv
652.719 363.018 li
651.137 364.04 649.551 365.058 647.962 366.072 cv
.796078 .733333 .458824 rgb
f
782.047 352.498 mo
782.681 350.24 783.432 348.019 784.258 345.807 cv
784.258 345.808 li
783.432 348.018 782.681 350.24 782.047 352.498 cv
782.047 352.498 li
.670588 .509804 .352941 rgb
f
781.316 355.356 mo
781.537 354.395 781.782 353.444 782.047 352.498 cv
782.047 352.498 li
781.782 353.444 781.537 354.395 781.316 355.356 cv
784.258 345.808 mo
784.258 345.807 li
786.477 339.872 789.242 334.007 791.751 327.681 cv
791.751 327.681 li
789.242 334.008 786.477 339.872 784.258 345.808 cv
.654902 .454902 .333333 rgb
f
785.485 324.418 mo
775.654 319.299 li
775.654 319.297 775.655 319.296 775.655 319.294 cv
775.655 319.294 li
775.655 319.294 li
778.278 320.654 782.18 322.686 785.485 324.41 cv
785.485 324.412 785.485 324.416 785.485 324.418 cv
.670588 .509804 .352941 rgb
f
791.751 327.681 mo
785.485 324.418 li
785.485 324.416 785.485 324.412 785.485 324.41 cv
788.942 326.213 791.746 327.677 791.751 327.681 cv
.654902 .454902 .333333 rgb
f
798.99 480 mo
790.796 480 li
783.03 455.776 774.166 432.161 762.735 409.746 cv
759.191 433.166 756.784 456.573 755.081 480 cv
701.189 480 li
701.058 479.168 700.938 478.338 700.805 477.506 cv
700.226 473.864 699.531 470.176 698.688 466.478 cv
695.939 454.419 691.613 442.267 684.627 431.361 cv
684.627 431.361 li
684.631 430.714 684.626 430.068 684.613 429.421 cv
684.611 429.324 684.609 429.23 684.606 429.134 cv
684.545 426.616 684.346 424.1 683.97 421.598 cv
683.97 421.598 li
683.153 416.17 681.503 410.797 678.61 405.563 cv
678.58 405.507 678.549 405.451 678.518 405.396 cv
675.751 400.429 672.365 395.632 668.714 390.962 cv
665.128 386.377 661.285 381.913 657.522 377.53 cv
657.522 377.53 li
654.615 374.145 651.756 370.809 649.098 367.5 cv
648.715 367.024 648.336 366.547 647.962 366.072 cv
647.962 366.072 li
649.551 365.058 651.137 364.04 652.719 363.018 cv
653.535 362.491 654.35 361.963 655.164 361.434 cv
662.274 371.085 669.128 381.374 677.043 391 cv
684.401 399.948 692.674 408.324 702.917 415.079 cv
702.917 415.079 li
702.917 415.079 li
702.917 415.079 li
702.917 415.079 li
699.958 346.376 701.175 277.936 704.641 209.298 cv
707.736 148.335 712.603 87.2213 717.846 25.6006 cv
718.577 17.0725 719.314 8.54673 720.057 0 cv
720.04 0 li
720.04 0 li
723.886 0 li
724.456 56.7576 729.351 113.39 733.309 170.777 cv
733.309 170.777 li
737.07 135.362 736.35 99.1606 737.692 62.8594 cv
737.692 62.8594 li
738.426 41.8018 739.316 20.8601 740.237 0 cv
747.679 0 li
743.959 69.1125 743.267 137.958 744.649 207.523 cv
744.649 207.523 li
745.337 239.062 745.671 270.597 746.33 302.166 cv
746.977 333.133 747.936 364.131 749.848 395.187 cv
749.848 395.187 li
759.722 370.669 768.487 345.385 775.654 319.299 cv
785.485 324.418 li
791.751 327.681 li
791.751 327.681 li
789.242 334.007 786.477 339.872 784.258 345.807 cv
784.258 345.807 li
783.432 348.019 782.681 350.24 782.047 352.498 cv
782.047 352.498 li
781.782 353.444 781.537 354.395 781.316 355.356 cv
779.875 361.616 779.436 368.24 780.84 375.787 cv
780.84 375.787 li
780.949 376.367 781.058 376.949 781.168 377.53 cv
781.168 377.53 li
782.399 384.09 783.633 390.659 784.876 397.244 cv
786.236 404.453 787.607 411.676 788.997 418.915 cv
790.885 428.754 792.807 438.623 794.782 448.517 cv
794.782 448.517 li
795.359 451.406 795.94 454.298 796.526 457.192 cv
796.659 457.848 796.793 458.505 796.926 459.161 cv
796.926 459.161 li
797.602 466.102 798.293 473.05 798.99 480 cv
798.99 480 li
798.99 480 li
798.99 480 li
.156863 .137255 .0862745 rgb
f
790.796 480 mo
790.796 480 li
783.03 455.776 774.166 432.161 762.735 409.746 cv
759.191 433.167 756.784 456.573 755.081 480 cv
755.081 480 li
756.784 456.573 759.191 433.166 762.735 409.746 cv
774.166 432.161 783.03 455.776 790.796 480 cv
.254902 .211765 .12549 rgb
f
733.309 170.777 mo
737.07 135.361 736.35 99.1604 737.692 62.8594 cv
736.35 99.1606 737.07 135.362 733.309 170.777 cv
.239216 .2 .117647 rgb
f
680.346 465.11 mo
681.334 457.95 682.87 450.491 683.809 442.921 cv
682.877 450.498 681.353 457.97 680.346 465.11 cv
.713725 .454902 .423529 rgb
f
701.189 480 mo
678.552 480 li
679.077 475.02 679.662 470.053 680.346 465.11 cv
680.346 465.11 li
681.353 457.97 682.877 450.498 683.809 442.921 cv
684.284 439.088 684.606 435.227 684.627 431.361 cv
684.627 431.361 li
691.613 442.267 695.938 454.419 698.688 466.478 cv
699.531 470.176 700.226 473.864 700.805 477.506 cv
700.938 478.338 701.058 479.168 701.189 480 cv
.196078 .164706 .101961 rgb
f
698.688 466.478 mo
695.938 454.419 691.613 442.267 684.627 431.361 cv
691.613 442.267 695.939 454.419 698.688 466.478 cv
.25098 .215686 .12549 rgb
f
796.62 40.3529 mo
797.338 40.0278 798.047 39.6243 798.749 39.1809 cv
798.746 39.1882 798.743 39.1953 798.74 39.2027 cv
798.041 39.6427 797.335 40.0297 796.62 40.3529 cv
796.62 40.3529 mo
796.369 37.058 796.771 33.4986 797.201 30.0012 cv
796.771 33.4986 796.369 37.058 796.62 40.3529 cv
797.73 25.4616 mo
797.73 25.4616 li
798.57 16.9851 799.393 8.4956 800.208 0 cv
800.208 0 li
799.393 8.4956 798.57 16.9851 797.73 25.4616 cv
797.73 25.4616 li
.886274 .85098 .792157 rgb
f
791.962 51.0533 mo
791.962 51.0533 li
791.356 48.7136 790.818 46.2822 790.366 43.8036 cv
789.22 37.5191 788.632 30.93 788.914 24.7523 cv
788.914 24.7523 li
788.924 24.6226 788.934 24.493 788.945 24.3634 cv
788.955 24.2302 788.966 24.0975 788.976 23.9644 cv
789.607 15.9328 790.238 7.95181 790.875 0 cv
790.875 0 li
790.875 0 li
800.208 0 li
799.393 8.4956 798.57 16.9851 797.73 25.4616 cv
797.73 25.4616 li
797.583 26.9446 797.389 28.4668 797.201 30.0012 cv
796.771 33.4986 796.369 37.058 796.62 40.3529 cv
796.62 40.3529 li
796.62 40.3529 li
797.335 40.0297 798.041 39.6427 798.74 39.2027 cv
798.663 39.373 798.586 39.5435 798.509 39.7133 cv
796.702 43.676 794.584 47.4869 791.962 51.0533 cv
791.962 51.0533 li
.156863 .137255 .0862745 rgb
f
775.654 319.299 mo
772.612 317.715 li
772.612 317.715 772.612 317.715 772.612 317.715 cv
772.612 317.715 773.832 318.347 775.655 319.294 cv
775.655 319.296 775.654 319.297 775.654 319.299 cv
.811765 .623529 .415686 rgb
f
764.921 237.97 mo
764.921 237.97 li
764.786 234.538 764.654 231.102 764.526 227.671 cv
764.526 227.671 li
764.654 231.104 764.786 234.536 764.921 237.97 cv
.988235 .976471 .94902 rgb
f
765.402 249.873 mo
765.401 249.873 765.401 249.873 765.4 249.872 cv
765.237 245.903 765.077 241.938 764.921 237.97 cv
764.921 237.97 li
765.077 241.936 765.238 245.905 765.402 249.873 cv
.996078 .992157 .972549 rgb
f
764.526 227.671 mo
764.526 227.671 li
764.493 226.797 764.461 225.923 764.429 225.048 cv
764.429 225.049 764.429 225.049 764.429 225.049 cv
764.429 225.049 li
764.429 225.049 li
764.429 225.049 li
764.461 225.923 764.493 226.798 764.526 227.671 cv
f
767.529 298.669 mo
766.797 282.392 766.07 266.126 765.4 249.872 cv
765.401 249.873 765.401 249.873 765.402 249.873 cv
766.073 266.129 766.802 282.395 767.529 298.669 cv
.921569 .87451 .745098 rgb
f
794.984 58.298 mo
794.984 58.2978 li
798.913 46.7062 808.81 40.8556 817.827 34.2525 cv
808.81 40.8558 798.913 46.7067 794.984 58.298 cv
.933333 .909804 .85098 rgb
f
793.943 62.1889 mo
793.943 62.1889 li
794.217 60.8216 794.567 59.528 794.984 58.2978 cv
794.984 58.298 li
794.567 59.5281 794.217 60.8216 793.943 62.1889 cv
793.943 62.1889 li
.827451 .764706 .454902 rgb
f
779.118 44.7182 mo
779.887 38.108 780.649 31.4907 781.403 24.8663 cv
780.649 31.491 779.887 38.1085 779.118 44.7182 cv
f
798.74 39.2027 mo
798.743 39.1953 798.746 39.1882 798.749 39.1809 cv
804.759 35.3948 810.177 27.7052 815.641 23.0537 cv
810.175 27.7101 804.748 35.4167 798.74 39.2027 cv
815.641 23.0537 mo
816.468 22.3507 817.281 21.6752 818.067 21.0028 cv
817.28 21.6753 816.468 22.3506 815.641 23.0537 cv
818.114 20.9626 mo
818.114 20.9624 818.115 20.962 818.115 20.9617 cv
818.115 20.962 818.114 20.9624 818.114 20.9626 cv
.933333 .909804 .85098 rgb
f
832.017 19.4235 mo
832.034 19.3915 832.05 19.3604 832.067 19.3283 cv
833.562 16.4198 834.533 12.7034 835.179 8.63873 cv
835.179 8.63873 li
834.533 12.7034 833.562 16.4198 832.067 19.3283 cv
832.05 19.3604 832.034 19.3915 832.017 19.4235 cv
824.705 13.4293 mo
824.706 13.4278 824.707 13.4269 824.707 13.4254 cv
824.707 13.4269 824.706 13.4278 824.705 13.4293 cv
824.724 13.3951 mo
824.729 13.3854 824.734 13.3753 824.739 13.3656 cv
824.734 13.3753 824.729 13.3854 824.724 13.3951 cv
824.742 13.3606 mo
825.704 11.5525 826.443 9.44109 826.885 6.84636 cv
827.083 5.68255 827.242 4.49628 827.372 3.29328 cv
827.242 4.49645 827.083 5.68253 826.885 6.84636 cv
826.443 9.44089 825.704 11.5526 824.742 13.3606 cv
.909804 .847059 .631373 rgb
f
749.848 395.187 mo
749.848 395.187 li
747.936 364.131 746.977 333.133 746.33 302.166 cv
745.671 270.597 745.337 239.062 744.649 207.523 cv
744.649 207.523 li
743.268 137.958 743.959 69.1125 747.679 0 cv
762.733 0 li
762.076 20.1887 761.444 40.3743 760.852 60.5504 cv
760.852 60.5504 li
760.852 60.5504 li
761.016 73.058 761.21 85.5742 761.434 98.0981 cv
761.434 98.0982 761.434 98.0982 761.434 98.0982 cv
761.576 98.0979 776.711 65.5374 776.699 65.2643 cv
776.699 65.2635 776.699 65.2629 776.698 65.2627 cv
778.898 60.3697 778.489 50.078 779.118 44.7182 cv
779.118 44.7182 li
779.887 38.1085 780.649 31.491 781.403 24.8663 cv
782.205 17.8215 782.998 10.7687 783.782 3.70876 cv
783.919 2.47386 784.052 1.23535 784.189 0 cv
790.875 0 li
790.238 7.95202 789.607 15.9328 788.976 23.9644 cv
788.966 24.0975 788.955 24.2302 788.945 24.3634 cv
788.934 24.493 788.924 24.6226 788.914 24.7523 cv
788.914 24.7523 li
788.631 30.93 789.22 37.5191 790.366 43.8036 cv
790.818 46.2822 791.356 48.7136 791.962 51.0533 cv
791.962 51.0533 li
791.962 51.0533 li
794.583 47.488 796.702 43.6761 798.509 39.7133 cv
798.586 39.5436 798.663 39.373 798.74 39.2027 cv
804.748 35.4167 810.175 27.7101 815.641 23.0537 cv
815.641 23.0537 li
815.641 23.0537 li
816.468 22.3506 817.28 21.6753 818.067 21.0028 cv
818.083 20.9893 818.098 20.976 818.114 20.9626 cv
818.114 20.9624 818.115 20.962 818.115 20.9617 cv
820.72 18.7311 823.041 16.5252 824.705 13.4293 cv
824.706 13.4278 824.707 13.4269 824.707 13.4254 cv
824.713 13.4154 824.718 13.4051 824.724 13.3951 cv
824.729 13.3854 824.734 13.3753 824.739 13.3656 cv
824.74 13.3638 824.741 13.3624 824.742 13.3606 cv
825.704 11.5526 826.443 9.44089 826.885 6.84636 cv
827.083 5.68253 827.242 4.49645 827.372 3.29328 cv
827.49 2.20789 827.584 1.10892 827.66 0 cv
836.114 0 li
835.91 2.94501 835.619 5.87239 835.179 8.63873 cv
834.533 12.7034 833.562 16.4198 832.067 19.3283 cv
832.05 19.3604 832.034 19.3915 832.017 19.4235 cv
828.741 25.7136 823.455 30.1303 817.827 34.2525 cv
808.81 40.8556 798.913 46.7062 794.984 58.2978 cv
794.567 59.528 794.217 60.8216 793.943 62.1889 cv
793.943 62.1889 li
792.82 67.8132 791.018 73.2703 788.818 78.6172 cv
785.093 85.6256 780.918 92.3309 776.88 99.0501 cv
768.679 112.695 761.037 126.4 758.846 142.842 cv
758.846 142.842 li
758.846 142.842 li
756.798 156.932 756.586 170.71 757.69 184.352 cv
758.794 197.994 761.213 211.501 764.429 225.049 cv
764.461 225.923 764.493 226.797 764.526 227.671 cv
764.654 231.102 764.786 234.538 764.921 237.97 cv
765.077 241.938 765.237 245.903 765.4 249.872 cv
766.07 266.126 766.797 282.392 767.529 298.669 cv
767.529 298.669 li
768.737 306.113 769.97 313.571 771.228 321.045 cv
771.69 319.936 772.152 318.826 772.612 317.715 cv
775.654 319.299 li
768.487 345.385 759.722 370.668 749.848 395.187 cv
.196078 .164706 .101961 rgb
f
749.848 395.187 mo
749.848 395.187 li
749.848 395.187 li
759.722 370.668 768.487 345.385 775.654 319.299 cv
775.654 319.299 li
768.487 345.385 759.722 370.669 749.848 395.187 cv
746.33 302.166 mo
745.671 270.597 745.337 239.062 744.649 207.523 cv
744.649 207.523 li
744.649 207.523 li
745.337 239.062 745.671 270.597 746.33 302.166 cv
.25098 .215686 .12549 rgb
f
791.962 51.0533 mo
794.584 47.4869 796.702 43.676 798.509 39.7133 cv
796.702 43.6761 794.583 47.488 791.962 51.0533 cv
791.962 51.0533 mo
791.356 48.7136 790.818 46.2822 790.366 43.8036 cv
790.818 46.2822 791.356 48.7136 791.962 51.0533 cv
788.914 24.7523 mo
788.914 24.7523 li
788.924 24.6226 788.934 24.493 788.945 24.3634 cv
788.934 24.493 788.924 24.6226 788.914 24.7523 cv
788.914 24.7523 li
788.976 23.9644 mo
789.607 15.9328 790.238 7.95202 790.875 0 cv
790.875 0 li
790.238 7.95181 789.607 15.9328 788.976 23.9644 cv
f
764.429 225.049 mo
764.429 225.049 li
764.429 225.049 li
764.355 223.04 764.282 221.029 764.211 219.022 cv
764.282 221.031 764.355 223.04 764.429 225.049 cv
764.207 218.93 mo
764.203 218.795 764.198 218.665 764.193 218.53 cv
764.198 218.664 764.203 218.796 764.207 218.93 cv
764.184 218.259 mo
764.181 218.17 764.177 218.08 764.174 217.991 cv
764.177 218.08 764.181 218.171 764.184 218.259 cv
764.163 217.657 mo
764.159 217.568 764.156 217.483 764.153 217.394 cv
764.156 217.482 764.159 217.568 764.163 217.657 cv
764.142 217.06 mo
764.138 216.956 764.134 216.847 764.13 216.742 cv
764.134 216.848 764.138 216.954 764.142 217.06 cv
764.122 216.488 mo
764.116 216.315 764.109 216.14 764.104 215.967 cv
764.109 216.14 764.116 216.315 764.122 216.488 cv
1 1 .984314 rgb
f
764.096 215.762 mo
764.096 215.762 li
764.062 214.758 764.027 213.758 763.993 212.755 cv
763.993 212.755 li
764.027 213.758 764.062 214.759 764.096 215.762 cv
763.787 206.533 mo
763.257 190.194 762.835 173.87 762.572 157.559 cv
762.573 157.56 762.573 157.561 762.574 157.561 cv
762.838 173.873 763.259 190.195 763.787 206.533 cv
763.787 206.533 li
.996078 .996078 .968627 rgb
f
764.102 215.923 mo
764.1 215.871 764.098 215.814 764.096 215.762 cv
764.096 215.762 li
764.098 215.816 764.1 215.87 764.102 215.923 cv
1 1 .984314 rgb
f
763.993 212.755 mo
763.993 212.755 li
763.923 210.68 763.854 208.607 763.787 206.533 cv
763.787 206.533 li
763.854 208.605 763.923 210.681 763.993 212.755 cv
.996078 .992157 .960784 rgb
f
762.494 152.298 mo
762.494 152.297 762.493 152.297 762.493 152.297 cv
762.47 150.641 762.448 148.982 762.429 147.327 cv
762.429 147.327 li
762.429 147.327 762.429 147.327 762.429 147.327 cv
762.449 148.984 762.471 150.641 762.494 152.298 cv
.996078 .996078 .968627 rgb
f
762.574 157.561 mo
762.573 157.561 762.573 157.56 762.572 157.559 cv
762.544 155.805 762.517 154.051 762.493 152.297 cv
762.493 152.297 762.494 152.297 762.494 152.298 cv
762.519 154.053 762.545 155.806 762.574 157.561 cv
.956863 .901961 .52549 rgb
f
780.17 96.6135 mo
780.164 96.6123 780.157 96.611 780.15 96.6099 cv
781.987 93.1297 783.8 89.6385 785.495 86.1099 cv
783.812 89.6424 782.005 93.1358 780.17 96.6135 cv
.952941 .733333 .478431 rgb
f
774.514 107.348 mo
774.51 107.347 774.506 107.347 774.502 107.346 cv
776.341 103.765 778.259 100.192 780.15 96.6099 cv
780.157 96.611 780.164 96.6123 780.17 96.6135 cv
778.279 100.199 776.359 103.767 774.514 107.348 cv
.956863 .901961 .52549 rgb
f
771.327 113.749 mo
772.344 111.607 773.409 109.474 774.502 107.346 cv
774.506 107.347 774.51 107.347 774.514 107.348 cv
773.418 109.475 772.348 111.608 771.327 113.749 cv
f
764.429 225.049 mo
761.213 211.501 758.794 197.994 757.69 184.352 cv
756.586 170.71 756.798 156.932 758.846 142.842 cv
758.846 142.842 li
758.846 142.842 li
761.037 126.4 768.679 112.695 776.88 99.0501 cv
780.918 92.3309 785.093 85.6255 788.818 78.6172 cv
787.793 81.1401 786.674 83.6346 785.495 86.1099 cv
783.8 89.6385 781.987 93.1297 780.15 96.6099 cv
780.15 96.6099 li
778.259 100.192 776.341 103.765 774.502 107.346 cv
774.502 107.346 li
773.409 109.474 772.344 111.607 771.327 113.749 cv
766.219 124.464 762.332 135.419 762.429 147.327 cv
762.429 147.327 762.429 147.327 762.429 147.327 cv
762.448 148.982 762.47 150.641 762.493 152.297 cv
762.493 152.297 li
762.517 154.051 762.544 155.805 762.572 157.559 cv
762.835 173.87 763.257 190.194 763.787 206.533 cv
763.854 208.607 763.923 210.68 763.993 212.755 cv
764.027 213.758 764.062 214.758 764.096 215.762 cv
764.098 215.814 764.1 215.871 764.102 215.923 cv
764.102 215.938 764.103 215.953 764.104 215.967 cv
764.109 216.14 764.116 216.315 764.122 216.488 cv
764.125 216.573 764.128 216.657 764.13 216.742 cv
764.134 216.847 764.138 216.956 764.142 217.06 cv
764.146 217.171 764.149 217.283 764.153 217.394 cv
764.156 217.483 764.159 217.568 764.163 217.657 cv
764.166 217.768 764.17 217.88 764.174 217.991 cv
764.177 218.08 764.181 218.17 764.184 218.259 cv
764.187 218.349 764.19 218.439 764.193 218.53 cv
764.198 218.665 764.203 218.795 764.207 218.93 cv
764.209 218.96 764.21 218.992 764.211 219.022 cv
764.282 221.029 764.355 223.04 764.429 225.048 cv
.231373 .192157 .117647 rgb
f
757.69 184.352 mo
756.586 170.71 756.798 156.932 758.846 142.842 cv
756.798 156.932 756.586 170.71 757.69 184.352 cv
758.846 142.842 mo
761.037 126.4 768.679 112.695 776.88 99.0501 cv
768.679 112.695 761.037 126.4 758.846 142.842 cv
.372549 .305882 .168627 rgb
f
684.697 215.762 mo
684.696 215.762 li
684.801 214.579 684.918 213.395 685.045 212.207 cv
685.045 212.207 li
684.918 213.395 684.801 214.579 684.697 215.762 cv
685.65 207.094 mo
686.302 201.998 687.09 196.88 687.853 191.794 cv
687.09 196.88 686.303 201.997 685.65 207.094 cv
685.65 207.094 li
.996078 .996078 .968627 rgb
f
684.177 224.536 mo
684.252 221.635 684.436 218.707 684.696 215.762 cv
684.697 215.762 li
684.436 218.707 684.252 221.635 684.177 224.536 cv
1 1 .984314 rgb
f
685.045 212.207 mo
685.045 212.207 li
685.227 210.506 685.431 208.801 685.65 207.094 cv
685.65 207.094 li
685.431 208.801 685.228 210.506 685.045 212.207 cv
.996078 .992157 .960784 rgb
f
694.044 140.661 mo
694.06 140.525 694.075 140.39 694.091 140.255 cv
694.075 140.39 694.06 140.525 694.044 140.661 cv
694.091 140.255 mo
694.323 138.219 694.556 136.181 694.791 134.144 cv
694.791 134.144 li
694.556 136.181 694.323 138.219 694.091 140.255 cv
695.561 127.502 mo
695.561 127.502 li
696.552 119.01 697.577 110.507 698.669 101.996 cv
697.577 110.507 696.552 119.01 695.561 127.502 cv
.996078 .996078 .968627 rgb
f
694.791 134.144 mo
695.046 131.93 695.302 129.718 695.561 127.502 cv
695.561 127.502 li
695.302 129.718 695.046 131.93 694.791 134.144 cv
694.791 134.144 li
.992157 .984314 .941176 rgb
f
683.821 239.324 mo
684.031 230.202 684.178 224.536 684.177 224.536 cv
684.177 224.536 li
684.252 221.635 684.436 218.707 684.697 215.762 cv
684.801 214.579 684.918 213.395 685.045 212.207 cv
685.228 210.506 685.431 208.801 685.65 207.094 cv
686.303 201.997 687.09 196.88 687.853 191.794 cv
688.529 187.279 689.186 182.788 689.71 178.358 cv
691.202 165.823 692.608 153.254 694.044 140.661 cv
694.06 140.525 694.075 140.39 694.091 140.255 cv
694.091 140.255 li
694.323 138.219 694.556 136.181 694.791 134.144 cv
695.046 131.93 695.302 129.718 695.561 127.502 cv
696.552 119.01 697.577 110.507 698.669 101.996 cv
698.669 101.996 li
698.863 100.479 698.98 98.9846 699.056 97.5012 cv
699.056 97.5012 li
699.056 97.5012 li
699.608 101.222 700.012 104.973 700.284 108.749 cv
700.286 108.771 700.288 108.795 700.289 108.817 cv
700.291 108.84 700.292 108.861 700.294 108.884 cv
700.296 108.912 700.298 108.943 700.3 108.971 cv
700.301 108.988 700.302 109.002 700.304 109.019 cv
700.305 109.044 700.307 109.073 700.309 109.098 cv
700.31 109.118 700.312 109.134 700.313 109.154 cv
703.245 151.298 689.897 196.621 683.821 239.324 cv
.231373 .192157 .117647 rgb
f
710.628 2.12197 mo
710.628 2.11744 li
710.712 1.41127 710.796 .706259 710.88 0 cv
710.881 0 li
710.797 .707427 710.713 1.41464 710.628 2.12197 cv
.984314 .972549 .909804 rgb
f
704.262 55.151 mo
705.82 42.2659 707.372 29.3484 708.92 16.4096 cv
708.92 16.4093 708.921 16.4089 708.921 16.4086 cv
707.372 29.3472 705.82 42.2651 704.262 55.151 cv
709.214 13.9538 mo
709.685 10.0101 710.157 6.06435 710.628 2.11744 cv
710.628 2.12197 li
710.157 6.06682 709.686 10.0113 709.215 13.9528 cv
709.214 13.9532 709.214 13.9534 709.214 13.9538 cv
.976471 .94902 .729412 rgb
f
708.92 16.4096 mo
708.92 16.4096 li
708.92 16.4093 708.921 16.4089 708.921 16.4086 cv
708.921 16.4086 li
708.921 16.4089 708.92 16.4093 708.92 16.4096 cv
709.214 13.9539 mo
709.214 13.9538 li
709.214 13.9534 709.214 13.9532 709.215 13.9528 cv
709.215 13.9529 li
709.214 13.9533 709.214 13.9535 709.214 13.9539 cv
.968627 .937255 .654902 rgb
f
708.92 16.4096 mo
709.018 15.5918 709.116 14.7719 709.214 13.9539 cv
709.214 13.9535 709.214 13.9533 709.215 13.9529 cv
709.117 14.772 709.019 15.5897 708.921 16.4086 cv
708.921 16.4089 708.92 16.4093 708.92 16.4096 cv
.94902 .764706 .584314 rgb
f
706.318 86.3684 mo
702.977 78.6119 700.115 70.8621 697.963 62.7519 cv
696.917 58.8076 696.039 54.7775 695.356 50.621 cv
695.356 50.621 li
691.9 32.4312 686.756 17.1288 682.908 1.1957 cv
682.851 .95748 682.793 .717756 682.736 .479238 cv
682.698 .319561 682.66 .159817 682.622 0 cv
690.869 0 li
692.633 11.0916 694.496 22.2255 696.473 33.4124 cv
698.997 40.6203 701.593 47.8659 704.262 55.151 cv
704.262 55.151 li
705.82 42.2651 707.372 29.3472 708.921 16.4086 cv
708.921 16.4086 li
709.019 15.5897 709.117 14.772 709.215 13.9529 cv
709.215 13.9528 li
709.686 10.0113 710.157 6.06682 710.628 2.12197 cv
710.713 1.41464 710.797 .707427 710.881 0 cv
712.613 0 li
711.894 7.05641 711.176 14.1049 710.495 21.1414 cv
708.378 43.0201 706.621 64.789 706.318 86.3684 cv
706.318 86.3684 li
.231373 .192157 .117647 rgb
f
655.164 361.434 mo
655.164 361.434 li
656.786 360.38 658.404 359.323 660.017 358.262 cv
658.404 359.323 656.786 360.38 655.164 361.434 cv
660.084 358.218 mo
660.149 358.176 660.213 358.133 660.277 358.091 cv
660.213 358.133 660.148 358.176 660.084 358.218 cv
660.404 358.008 mo
660.44 357.984 660.476 357.96 660.512 357.937 cv
660.476 357.96 660.44 357.984 660.404 358.008 cv
.639216 .517647 .298039 rgb
f
683.017 280.382 mo
683.004 280.227 682.991 280.072 682.979 279.917 cv
683.135 270.221 683.302 261.006 683.478 252.975 cv
683.33 261.134 683.173 270.511 683.017 280.382 cv
.8 .647059 .509804 rgb
f
682.377 324.351 mo
682.376 324.35 682.374 324.349 682.373 324.348 cv
682.54 310.015 682.746 294.423 682.979 279.917 cv
682.991 280.072 683.004 280.227 683.017 280.382 cv
682.79 294.757 682.565 310.168 682.377 324.351 cv
.827451 .72549 .529412 rgb
f
682.346 326.676 mo
682.355 325.904 682.364 325.127 682.373 324.348 cv
682.374 324.349 682.376 324.35 682.377 324.351 cv
682.367 325.126 682.356 325.908 682.346 326.676 cv
.8 .647059 .509804 rgb
f
699.086 92.7437 mo
699.084 92.7437 li
698.976 89.555 698.617 86.4682 698.034 83.5023 cv
698.05 83.5023 li
698.631 86.4699 698.986 89.5548 699.086 92.7437 cv
694.016 71.0316 mo
693.998 71.0316 li
692.918 68.7041 691.689 66.494 690.331 64.4153 cv
690.345 64.4153 li
691.704 66.4938 692.936 68.7052 694.016 71.0316 cv
.988235 .976471 .94902 rgb
f
690.345 64.4153 mo
690.331 64.4153 li
686.973 59.2749 682.827 54.9325 678.205 51.5734 cv
678.205 51.5723 678.205 51.5714 678.205 51.5703 cv
682.83 54.9305 686.983 59.2746 690.345 64.4153 cv
657.976 43.6794 mo
652.496 42.7761 647.081 41.9209 642.144 39.9332 cv
639.864 39.0156 637.688 37.8568 635.661 36.3435 cv
635.661 36.3434 li
637.688 37.8566 639.864 39.0154 642.144 39.9332 cv
647.081 41.9207 652.496 42.776 657.976 43.6793 cv
657.976 43.6794 li
.933333 .909804 .85098 rgb
f
698.05 83.5023 mo
698.034 83.5023 li
697.16 79.0581 695.784 74.8833 693.998 71.0316 cv
694.016 71.0316 li
695.804 74.8848 697.18 79.0592 698.05 83.5023 cv
f
699.107 93.6305 mo
699.101 93.3341 699.094 93.0383 699.084 92.7437 cv
699.086 92.7437 li
699.095 93.0374 699.102 93.335 699.107 93.6305 cv
f
635.661 36.3435 mo
635.534 36.2489 635.408 36.1528 635.283 36.0554 cv
635.283 36.0554 li
635.283 36.0554 li
635.408 36.1528 635.534 36.2488 635.661 36.3434 cv
635.661 36.3435 li
.952941 .933333 .866667 rgb
f
678.205 51.5734 mo
673.009 47.797 667.212 45.2627 661.258 44.2345 cv
660.163 44.0413 659.069 43.8594 657.976 43.6794 cv
657.976 43.6793 li
659.069 43.8594 660.163 44.0413 661.258 44.2345 cv
667.204 45.2571 673.003 47.7906 678.205 51.5703 cv
678.205 51.5714 678.205 51.5723 678.205 51.5734 cv
679.673 36.1624 mo
678.917 35.8527 678.13 35.6254 677.32 35.4605 cv
678.13 35.6254 678.917 35.8526 679.673 36.1622 cv
679.673 36.1624 679.673 36.1624 679.673 36.1624 cv
665.898 35.1928 mo
665.847 35.1922 665.797 35.1915 665.746 35.1907 cv
665.797 35.1915 665.847 35.1922 665.898 35.1928 cv
.87451 .811765 .568627 rgb
f
658.274 34.6092 mo
649.452 33.275 643.148 29.6456 636.925 23.4011 cv
636.925 23.401 li
643.148 29.6454 649.452 33.2748 658.274 34.6091 cv
658.274 34.6092 li
.933333 .909804 .85098 rgb
f
636.925 23.4011 mo
635.1 21.5698 633.281 19.5135 631.409 17.2244 cv
633.282 19.5135 635.1 21.5697 636.925 23.401 cv
636.925 23.4011 li
.952941 .933333 .866667 rgb
f
665.746 35.1907 mo
663.055 35.1497 660.578 34.9577 658.274 34.6092 cv
658.274 34.6091 li
660.578 34.9576 663.055 35.1497 665.746 35.1907 cv
.87451 .811765 .568627 rgb
f
631.345 17.1457 mo
627.092 11.9313 623.276 6.40228 619.371 1.12527 cv
619.371 1.12479 li
623.276 6.40177 627.092 11.9307 631.345 17.1457 cv
631.345 17.1457 li
.933333 .909804 .85098 rgb
f
631.409 17.2244 mo
631.387 17.198 631.366 17.1721 631.345 17.1457 cv
631.345 17.1457 li
631.366 17.1721 631.387 17.198 631.409 17.2244 cv
619.371 1.12527 mo
619.092 .748767 618.813 .373743 618.533 0 cv
618.534 0 li
618.813 .373369 619.092 .748655 619.371 1.12479 cv
619.371 1.12527 li
.952941 .933333 .866667 rgb
f
702.917 415.079 mo
692.674 408.324 684.401 399.948 677.043 391 cv
669.128 381.374 662.274 371.085 655.164 361.434 cv
656.786 360.38 658.404 359.323 660.017 358.262 cv
660.04 358.247 660.062 358.233 660.084 358.218 cv
660.148 358.176 660.213 358.133 660.277 358.091 cv
660.319 358.063 660.362 358.035 660.404 358.008 cv
660.44 357.984 660.476 357.96 660.512 357.937 cv
661.981 356.969 663.447 355.999 664.91 355.026 cv
670.495 362.126 676.174 369.301 681.947 376.551 cv
681.869 376.343 682.032 354.095 682.346 326.676 cv
682.356 325.908 682.367 325.126 682.377 324.351 cv
682.377 324.351 li
682.565 310.168 682.79 294.757 683.017 280.382 cv
683.017 280.382 li
683.173 270.511 683.33 261.134 683.478 252.975 cv
683.589 247.892 683.704 243.282 683.821 239.324 cv
689.897 196.621 703.245 151.298 700.313 109.154 cv
700.312 109.134 700.31 109.118 700.309 109.098 cv
700.307 109.073 700.305 109.044 700.304 109.019 cv
700.302 109.002 700.301 108.988 700.3 108.971 cv
700.298 108.943 700.296 108.912 700.294 108.884 cv
700.292 108.861 700.291 108.84 700.289 108.817 cv
700.288 108.795 700.286 108.771 700.284 108.749 cv
700.012 104.973 699.608 101.222 699.056 97.5012 cv
699.115 96.1949 699.131 94.9057 699.107 93.6305 cv
699.102 93.335 699.095 93.0374 699.086 92.7437 cv
698.986 89.5548 698.631 86.4699 698.05 83.5023 cv
697.18 79.0592 695.804 74.8848 694.016 71.0316 cv
692.936 68.7052 691.704 66.4938 690.345 64.4153 cv
686.983 59.2746 682.83 54.9305 678.205 51.5703 cv
678.205 51.5703 li
673.003 47.7906 667.204 45.2571 661.258 44.2345 cv
660.163 44.0413 659.069 43.8594 657.976 43.6793 cv
652.496 42.776 647.081 41.9207 642.144 39.9332 cv
639.864 39.0154 637.688 37.8566 635.661 36.3434 cv
635.534 36.2488 635.408 36.1528 635.283 36.0554 cv
635.283 36.0554 li
627.366 29.9147 621.428 20.8705 615.302 13.186 cv
611.8 8.79548 608.41 4.40044 605.116 0 cv
605.116 0 li
618.533 0 li
618.813 .373743 619.092 .748767 619.371 1.12527 cv
623.276 6.40228 627.092 11.9313 631.345 17.1457 cv
631.366 17.1721 631.387 17.198 631.409 17.2244 cv
631.409 17.2244 li
631.409 17.2244 li
633.281 19.5135 635.1 21.5698 636.925 23.4011 cv
643.148 29.6456 649.452 33.275 658.274 34.6092 cv
660.578 34.9577 663.055 35.1497 665.746 35.1907 cv
665.746 35.1907 li
665.746 35.1907 li
665.797 35.1915 665.847 35.1922 665.898 35.1928 cv
666.051 35.1945 666.204 35.1953 666.358 35.1953 cv
667.355 35.1953 668.376 35.1611 669.405 35.1269 cv
670.434 35.0927 671.471 35.0585 672.501 35.0585 cv
674.147 35.0585 675.775 35.1459 677.32 35.4605 cv
678.13 35.6254 678.917 35.8527 679.673 36.1624 cv
679.673 36.1624 li
679.673 36.1622 679.673 36.1622 679.673 36.1622 cv
677.688 24.0579 675.851 12.0056 674.138 0 cv
674.138 0 li
682.622 0 li
682.66 .159817 682.698 .319561 682.736 .479238 cv
682.793 .717756 682.851 .957479 682.908 1.1957 cv
686.756 17.1288 691.9 32.4308 695.356 50.621 cv
695.356 50.621 li
696.039 54.7774 696.917 58.8076 697.963 62.7519 cv
700.115 70.8622 702.977 78.6122 706.318 86.3684 cv
706.318 86.3684 li
706.621 64.7893 708.378 43.0203 710.495 21.1414 cv
711.176 14.105 711.894 7.05624 712.613 0 cv
720.04 0 li
719.304 8.54347 718.572 17.0775 717.846 25.6006 cv
712.573 87.1867 707.72 148.327 704.641 209.298 cv
701.158 277.917 699.92 346.343 702.917 415.079 cv
702.917 415.079 li
.196078 .164706 .101961 rgb
f
702.917 415.079 mo
699.92 346.343 701.158 277.917 704.641 209.298 cv
701.175 277.936 699.958 346.376 702.917 415.079 cv
677.043 391 mo
669.128 381.374 662.274 371.085 655.164 361.434 cv
655.164 361.434 655.164 361.434 655.164 361.434 cv
662.274 371.085 669.128 381.374 677.043 391 cv
717.846 25.6006 mo
718.572 17.0775 719.304 8.54347 720.04 0 cv
720.057 0 li
719.314 8.54673 718.577 17.0725 717.846 25.6006 cv
.25098 .215686 .12549 rgb
f
700.313 109.154 mo
700.312 109.134 700.31 109.118 700.309 109.098 cv
700.31 109.118 700.312 109.134 700.313 109.154 cv
700.304 109.019 mo
700.302 109.002 700.301 108.988 700.3 108.971 cv
700.301 108.988 700.302 109.002 700.304 109.019 cv
700.294 108.884 mo
700.292 108.861 700.291 108.84 700.289 108.817 cv
700.291 108.84 700.292 108.861 700.294 108.884 cv
700.284 108.749 mo
700.012 104.973 699.608 101.222 699.056 97.5012 cv
699.056 97.5012 li
699.608 101.222 700.012 104.973 700.284 108.749 cv
.368627 .301961 .168627 rgb
f
706.318 86.3684 mo
706.621 64.789 708.378 43.0201 710.495 21.1414 cv
708.378 43.0203 706.621 64.7893 706.318 86.3684 cv
697.963 62.7519 mo
696.917 58.8076 696.039 54.7774 695.356 50.621 cv
696.039 54.7775 696.917 58.8076 697.963 62.7519 cv
682.908 1.1957 mo
682.851 .957479 682.793 .717756 682.736 .479238 cv
682.793 .717756 682.851 .95748 682.908 1.1957 cv
f
425.875 444.959 mo
410.012 425.346 369.387 454.524 359.361 470.717 cv
363.675 456.538 351.452 447.851 341.662 443.368 cv
320.525 433.69 315.397 448.576 298.234 456.645 cv
294.85 458.237 295.223 463.35 291.491 464.062 cv
287.69 464.788 285.827 456.677 281.512 457.096 cv
274.259 457.801 270.772 453.073 266.859 463.325 cv
269.069 436.138 259.812 383.095 229.01 384.311 cv
203.354 385.323 197.776 432.482 206.826 454.885 cv
194.455 445.587 189.592 458.618 190.869 472.292 cv
178.071 462.42 158.947 445.505 145.604 464.812 cv
143.022 468.549 141.808 474.462 141.546 480 cv
418.703 480 li
427.114 468.911 433.259 454.089 425.875 444.959 cv
cp
.384314 .313726 .2 rgb
f
78.2023 441.011 mo
64.192 423.781 30.8203 442.98 27.1143 456.686 cv
22.7941 447.212 11.5039 441.541 0 440.971 cv
0 480 li
75.5167 480 li
82.6346 465.904 83.6804 447.748 78.2023 441.011 cv
cp
.25098 .196078 .133333 rgb
f
900 440.971 mo
889.26 440.438 878.333 444.351 872.717 453.815 cv
866.985 448.067 858.828 450.139 854.048 454.451 cv
857.465 438.14 855.049 412.314 842.717 396.519 cv
843.159 396.209 843.574 395.897 843.928 395.584 cv
845.4 394.431 846.468 392.893 847.6 391.427 cv
848.15 390.681 848.613 389.867 849.113 389.112 cv
849.626 388.369 850.101 387.617 850.538 386.888 cv
851.365 385.388 852.282 384.183 852.846 383.206 cv
853.431 382.227 853.779 381.645 853.779 381.645 cv
853.779 381.645 852.836 381.702 851.26 381.871 cv
849.703 382.054 847.401 382.284 845.032 382.877 cv
843.824 383.154 842.543 383.477 841.239 383.845 cv
839.991 384.248 838.745 384.708 837.52 385.204 cv
836.909 385.452 836.306 385.711 835.719 385.978 cv
835.154 386.256 834.626 386.553 834.109 386.852 cv
833.677 387.104 833.271 387.363 832.875 387.625 cv
828.188 384.782 822.68 383.034 816.258 382.799 cv
786.974 381.727 782.376 422.348 789.893 439 cv
787.908 436.142 784.8 432.775 781.077 429.824 cv
782.159 428.185 782.949 426.51 782.964 425.086 cv
783.149 422.522 781.346 419.558 779.503 417.162 cv
777.658 414.774 775.774 412.978 775.774 412.978 cv
775.774 412.978 773.643 414.641 771.462 416.984 cv
770.373 418.15 769.271 419.492 768.42 420.854 cv
767.495 420.265 766.517 419.726 765.566 419.264 cv
762.732 417.867 760.173 416.978 760.173 416.978 cv
760.173 416.978 758.966 418.839 758.026 421.185 cv
757.687 422.052 757.369 422.971 757.142 423.877 cv
749.024 428.102 750.485 440.647 752.66 446.302 cv
732.444 428.079 703.97 437.419 706.347 458.887 cv
707.041 465.157 709.532 472.81 713.561 480 cv
900 480 li
900 440.971 li
cp
f
489.707 463.521 mo
490.318 459.892 491.045 456.185 492.082 452.884 cv
493.1 449.585 494.415 446.675 495.558 444.62 cv
495.85 444.104 496.113 443.639 496.344 443.232 cv
496.598 442.834 496.816 442.493 496.994 442.215 cv
497.356 441.645 497.554 441.333 497.554 441.333 cv
497.554 441.333 497.211 441.44 496.583 441.636 cv
495.947 441.832 495.025 442.141 493.907 442.639 cv
491.659 443.601 488.556 445.319 485.443 447.987 cv
482.301 450.624 479.283 454.212 476.866 458.135 cv
474.478 462.062 472.714 466.3 471.822 470.18 cv
471.125 473.223 470.833 476.597 470.848 480 cv
486.263 480 li
486.886 477.909 487.455 475.853 487.902 473.879 cv
488.618 470.756 489.117 467.171 489.707 463.521 cv
cp
.631373 .478431 .294118 rgb
f
511.72 469.019 mo
512.929 466.401 513.925 463.966 514.58 462.206 cv
515.225 460.423 515.554 459.333 515.554 459.333 cv
515.554 459.333 514.482 459.706 512.79 460.35 cv
511.073 460.983 508.719 461.864 506.079 462.997 cv
503.446 464.119 500.534 465.555 497.788 467.277 cv
495.054 469.034 492.466 471.072 490.593 473.374 cv
489.633 474.481 488.789 475.85 487.976 477.254 cv
487.501 478.131 487.067 479.057 486.656 480 cv
505.995 480 li
506.566 479.066 507.133 478.093 507.688 477.069 cv
509.127 474.464 510.501 471.645 511.72 469.019 cv
cp
.341176 .262745 .223529 rgb
f
479.716 473.41 mo
478.424 468.518 474.572 463.303 471.007 459.553 cv
467.443 455.779 464.22 453.333 464.22 453.333 cv
464.22 453.333 463.546 457.153 463.142 462.071 cv
462.761 467.003 462.523 472.963 463.766 477.636 cv
463.972 478.4 464.265 479.195 464.592 480 cv
480.366 480 li
480.428 477.655 480.247 475.381 479.716 473.41 cv
cp
f
444.696 464.087 mo
443.592 462.754 442.887 462 442.887 462 cv
442.887 462 442.582 462.964 442.15 464.524 cv
441.704 466.091 441.091 468.262 440.503 470.756 cv
439.848 473.521 439.253 476.737 439.042 480 cv
454.238 480 li
452.826 476.477 450.73 472.758 448.678 469.59 cv
447.217 467.343 445.778 465.421 444.696 464.087 cv
cp
.631373 .478431 .294118 rgb
f
611.868 457.066 mo
612.044 454.873 612.362 452.728 612.57 450.527 cv
612.671 449.425 612.873 448.387 613.003 447.315 cv
613.167 446.263 613.241 445.164 613.453 444.174 cv
614.121 440.098 614.943 436.388 615.657 433.7 cv
616.424 430.977 616.887 429.333 616.887 429.333 cv
616.887 429.333 615.421 430.094 612.966 431.563 cv
610.561 433.063 607.284 435.425 603.938 438.66 cv
597.129 445.024 590.719 455.26 588.667 464.2 cv
587.696 468.655 587.374 473.777 587.769 478.807 cv
587.795 479.206 587.831 479.603 587.863 480 cv
606.775 480 li
608.102 476.306 609.345 472.668 610.1 469.163 cv
610.994 465.601 611.357 461.365 611.868 457.066 cv
cp
f
634.998 475.647 mo
636.272 473.522 637.406 471.191 638.631 468.906 cv
639.878 466.64 641.012 464.255 642.185 461.963 cv
643.387 459.697 644.52 457.433 645.579 455.261 cv
647.841 451.056 649.734 447.146 651.241 444.458 cv
652.699 441.718 653.554 440 653.554 440 cv
653.554 440 651.881 440.603 649.087 441.769 cv
647.706 442.369 645.975 443.041 644.153 443.982 cv
642.317 444.907 640.274 445.98 638.095 447.192 cv
635.944 448.432 633.738 449.89 631.435 451.435 cv
630.271 452.198 629.157 453.048 628.042 453.93 cv
626.922 454.809 625.799 455.717 624.683 456.651 cv
620.276 460.43 616.163 464.797 613.055 469.413 cv
611.625 471.393 610.427 473.741 609.236 476.189 cv
608.653 477.424 608.058 478.659 607.535 479.979 cv
607.527 480 li
632.419 480 li
632.667 479.608 632.914 479.214 633.155 478.807 cv
633.764 477.779 634.351 476.704 634.998 475.647 cv
cp
.341176 .262745 .223529 rgb
f
585.73 476.903 mo
581.856 473.168 577.525 469.92 573.558 467.274 cv
569.555 464.65 565.881 462.653 563.214 461.331 cv
560.52 460.031 558.887 459.333 558.887 459.333 cv
558.887 459.333 559.49 460.945 560.564 463.535 cv
561.594 466.09 563.047 469.692 564.737 473.884 cv
565.543 475.831 566.378 477.892 567.24 480 cv
588.806 480 li
587.822 478.938 586.797 477.9 585.73 476.903 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 17.0.0
%%For: (Krol) ()
%%Title: (bg13.eps)
%%CreationDate: 7/31/2016 10:47 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6CTeaKFsZohJH!I^@\DL4FZ\V(;)9&>]Hl;SfPSN;GC*^S"Ic(.l4ug>-/%>Sos<9(O2sGMWa`N7L1aaPG"K5_AE57Ma*t,'
%ifF*&q>9Wqq=:S)IeEX;s8@l1EVk$Pl*cW4G's;B+8sT:qWb9@rq^>ej5DtX;mR;/hgGIlm5Nr$jbNSKhZ!B'O70i4s5DSE\39i7
%lYgZjrq]^eQe/_Hlg<;2^]3KOo<2N9q&aY&ZTi;6]_^pZ\$+Y<Gk_'H>CSU\/77o-^\P:-,otpY.3DppkrTLUo'LYYadku[]^B/*
%an,*MEHh3Vm-jr=mB=8#olhKaJ+qLjDuSK5UZo*LmFq4dhgYH+rudm2ig/["1\p(u`S5lerVb@*kr!CkQ2KfhIsaU"s3'd_^4kY"
%4KHYZ&q>]8oI.rqq![APs0nI\r@e(m^6MpQlhojO^;)V32X&2`2YhF&'@N'P5k6_f,i7Hd^O>kDf<;r9bO8Hcn^)/<cP?I@+*_;k
%#&K[Y_bk>:De2''I[fAB=T-fi?nM+CIeuoJ^&@,$h#>dWf3c8j@,LP.L[T]fec-lO%"gl9Ll)/sqlen+pmZ39qG(@cG-pltr;$4C
%hgR-f\PI_JokT$/dkgQEXi4Y^rpZtthoThbs7Q-]$GX*q_uKG&^OPujYQ*]9`a#g-r5H-`^\R3is+NE.o5ku<2NDdpj/6qYgQM#<
%?Y[`1:$qQV]iT<,%_V+YO7S\n$NK,'=24UsRpS#JZE50+56']]='tCS3V%%Ps6pmIk3;o4s1dBi4SX-X^&>t>4ln=<s84_#O,#t"
%-*I1:RkGl@^V^l_2%H8%&H>3hs4?^hAUiM@r0qfurO;JK'R]GChoc=5I=mPEs6Mu9hrY`)q=XLQa$9ChrqgX6oUC>Ts7p:lHhQRu
%^OLV-05o`qp\oemdk>Whnb<&h%fZ7s1JYgA?[m>!7f&5,B_1`iX)J%5[ra%Eq;L^8s!m4&;#^D(q"L\V0/HRl`U6!f0>I=\[pQoM
%p=+(Q?@VS.mD$C7nEm,qrg.!,roWm/)ugIts4LKR,_((kYAEsIAY7JSN1=hJ-1N7h\\#duBQ3gs-XH$1GQ0)Vp$F\Fr]5AW_n2C>
%iMUenbC=g3p[>lrlIYL!_m:Wfq\/Gd]=/lrq291`2EuThl[QSGp&"Jjmh_Z,lqdL'J+udbq)<AWB`,+Ca<1HLG5h:5l`\)"eVDc6
%ro7'u51]a(rZ2mPJTF%i'YWI0s4A'iIu9.I4lbGJFaOb6r:2@8IQoNgIq+sTrq#IEhYa.IQbWRiqSQBQJ'2*8kP^1>^6,hsp<2p>
%qX3bM?LQd"$et%AbC=p</];>ulI9kKgV/aQik,9hr9(h?BdgIRhjdpKabSJTIO/dU05a#ORr?#drD$CI?^^+)bH"n0j)S<$g?n^&
%T7?QYT7?RLJ,\,PJ+?HtG)ToOc]6'+<D'6dQ:>'BH$W.;o8u\K\`]6Mk83r*3D(a&oJ4V]nlT5LUS_41X.qlUr3Q74^8N^>d;l:i
%[F&$%hHoiLVk/8&XcL3mZi8TaoU#NA(]e@3;+DRRN3UC/nU*HZ(ZXU>At"#-cTdn1<r'-`k+#(ncfXip3+'mro@85rNg5pcg+'/+
%`a<'Tc.6(EjS)o.O7IW@^R+M<p%`7deU$m^*qia"?^>'XYO^<?lhh4kVYsQnr1E0Kqtr8GhadRWYi!XIn!3pE+.$@2q![h#T'%K9
%o$LhCJR?%gUrTO3J'r95n5"B.Ttej%h+r@po[`>,Ia[7([JTUR++!jY(B;G+-qSMQ&ZsJKX1T"WEho4?BU7iG7=$8k-&Zq\H,p\K
%Q65_Ar2M$i0@_n<BG;?F020P'd5)eh7^Yp<eP_TcU1\eA1A.9]^j^)Qg.U]Mf/R&XcD9$:/pc^No?UD1M"ZDf.A;10R++BpKB2cA
%]V6a)/h3QOUcW<9dmp.-FAP:S]l;4ah/lIXWJ4:k[C$_@PlIWZoH3>F</nZLa8!?Phokf.nfN#.&Xr+X'-3?6^[dLorIJ=&ntUAm
%*r?KI`[CfKr^i1BGPnT#r0&1O98h^#pW5RInitR_O8R?(5C35:)WeMCPaBlIC8jlEi/_KNUp*mkd9_)Ep.D2G))?bEOjt@N96hi[
%,b*UF7@u]"2E@^3.eUnCl]_%"g8'Bcq+VdHFc'q!Bj0WoDq->?=%'BN7T&RDm%RWhnoq9A[XNd^.2OS2H:B`NBU#W5r1?,WYBo?M
%jnJ>fO4m(jW/K7&+mkJCi-2)MA5%B>7f$uu.=T_*DtrY5iqJqMhS8@MLE?J.om"k45N4oBZ,^Cib[9>4dc9WBAniJPUJ=`<kt&*`
%;n#cUDG);gI'FKbiNd,VfM%JimP4(*Cn=d29aA;P/LU)47'VUA1c]7k`I<+Jp/;]S#7Cl+*;](,oj'mSo[jA5#TSF4nq36$6[BG0
%#;%mu\Ll3HO48(:h%&_X7^!7cW1?HX7"^oq;I-,&MB.LBd=5+';:h1)EK/puhS6$?0_<6"qg+smQAc.F>hcSGHVS3lkj#q<>IUM[
%`"L'S00\rRq=3A&nJcu;iBHC"rmag?8WTLnm]h9,:O;s"[f;qFFH,kVeZ0LiT$(S&?F<kr<I4K+jU:nV9.!#i.@=GSHLX=VaHB!)
%^SigVMrX?Xj,:t@1<cZg;]j1mHN$N+bG1#u7Gk\7%prkc*m\08BRVQ<d1gB,ak/8PU)pW2^5tAG9P2J4\^P*.04G/+@N2tE=nZ)O
%LF!_SO;V/3-6eJ5jrp&29:;X&`?&/;/Vd$e-FQMYRjF%]/=;bZ^E5JbT?3%a1@r+k!)X]0$*n5tUWEUq4nPJ*e\eBX9VsHiq@F*f
%Ik!<J(<r#r!?ED6RQRka2hWJ2Go+[FZ+:.NV,jVUfp+&]-l/4!4fHCFY7]J]F;TJtJiIIQ(9$5CJf4JP:%=s3h%]f8j!V9Aif@h5
%^Z+].IkU0O;p3'0Y%lafRdm.ep\AJ"GE6)mrT`WK0#.:5df)h!q"O=NQX9X+n)\Kc]o^e)`@([,5NO7UIT!d"#\SSH-Tup!gODFN
%^3]GWNUd=6nct0F#EA:ap%ScOnct0F#EA9ZNUl-&BH!`(rof:'+$T_k3;m4Ts82cppidp2(qIopCf^"INIq1D1(#0BUG`$@3ng,"
%,QEmEm6Jr9*<NM=`K/R,o3]\3!hNG1/Nk)JgYrii@W0rK6]uq:V*=P$lD==Thu&ufIC.dJq04<5NQX?VJ+I_":ikfS']?1@?YnMK
%@g>1<:QU&+:QU,T-mq-.X:P0^nW.IEjRK_XI'l"(Er>\,]D\HON=9+mq+[9H-Wqebl"-3HZAQNF0+V2;AbhQ*;jKs<)K&CSjthJH
%rca5bH:FZ4'Q>fUVNJ[W(*%W4^R+]0J$V<6"NG-%DgID(fa*G<F8]j?0-4soL:qiofF)O@Dg0@9IjPtXPcsXMDC6\(.:6o3IH@fW
%'8X1C:Gq5O)]!EE@Yj"BLi':eXRrL'As<L]X(\-#[LW(H9k?V2[(;:qOoP3D')PQ&K2RfFg&Y0ZF<u[+p5+_jd'-%*e^2'O=qTRN
%-Vck]aR=S`?1mr@Jfj`8r;J1Ob`?L0&PM<[U`_7gj[jPiJG[,_<Fli[LRTUeXtZc&8`g3'.F*2Vn>PB3,2?i.q=9T=A'%M@"?]j#
%TJ60@gqs&EiVk^o3]*\>RF*\4KRQD>\XUtTEuCkGbQ"R)SCJ0WNTO(q]W][/%K%_Y8eV8@?+ZY[q2HYO!k<UYEk'_-6meIr_=-(@
%r)BII9m&V2/1MlJm^CZ/SZq<8?$ak?6Mf^G*N2JW>BI3=,+3PNnE^"@E3&JN'>F1qWc_[HIIq:-YK#nAZK//p1TkE:Rp8Uh]s$U#
%9R]u&Fn*0/0P8^p0EC;hb.AEj;;NZ?`?k7Yjnaa;mnp4fkHIK10BLU>%Mj$di<1bND,!Kj(l%&F]o^RKA3;afPt>4CEU`%oVMnW9
%No\eeQ7=,l-kTj?FBN7nCg"pI"]K#g--[EI[,fa;eG+UqJV+L7Us:GgB)i8iJr^r^IK[GO`iSu[II5KgUFpR0_$^JU(b!0ur]d1Z
%Y<%af8f>SPT=b8"Sfs5/^uH<@(dPpaMWFos=okjPgp!n&e@#&)p(?#%_b*^ddZ9#QHT^c,J<p?$686K8JrG5Im<eaSXa[J*2i(/B
%`>Qb%+WDAhnIttMJpHV:`CN#,nN<MhFRfsD+77/WJlK"&=XJtEPJ`GT$5Y%@OoBdNP](,b(J.o.E!t.%Mof$G<KR]L]41hSLOU0=
%M851,I6PAsXSXl.+e9DP#sDoDB/4k`(pqBjdkEoUK&N)0%)*.)==QZdM'8"J$sGdn_qk9_GBYd;]?H%(q^rnIp0BnC3['VG;]<;m
%;-U#YO8K4l]epm(Wr6HjrcijkC"qqsH4bjJ4f&JN=PfX^=o",AL>'i1ZIb=*nfR5%kD,=$3T&kXeu+qn^NUBfV["ct5AF`Jqm?*B
%LdT_^W1m8d4=qRbnT,[ul8(*`;WgRLj,&]`A+]J!>_M">SqA>Z=u3+R.4;=9,\N1T7CTZG<mU(ik!SOLgiBM-LWlMt:AmIJEp!P^
%T'=#hp7LmDn+FK^<<)Z!o_AHNs8MI2rFbX*Dh!65]Dm'0^AOL6r=p7GQ+Z/34%PuKn+LB1Z/=0*S\+ZqnCdo#>JBlncTZaNii>!d
%-[ksP?Z*X*.+Wlqrr2lJ-jmDLn:_YJI.@.-S,XZ#P9mPBr"TS`s&Y`\^Ys\%\c9SAg<0kPkeGIFOfLIFq!,n^7'C%/<gcO\5a;@#
%#E[1?X=$u`RPJ,cJ,<FH]"Z:Ld_d44l)fdh393JU;=^5[3kD`lct.(+M6Zu/hV+(S:\?%UnO&`(YI=.d6rVt!n?gji6ku%mb;+]h
%g+3alpN`h*6$-*C6%;Eog=Pm<\hj5/ler[,hhq>SYku8[jn[9/pqV0tTO0[.4GYUcG1rl*AOu+s,pl^ZEYVa2D^F^D5u?::[j$l1
%NbYJK<)c`/a_.6?=)oAnZLFbrQ&!6[bIu!;D&Iq1VE\=P.DKo:ec#R$m4HN)8P;NB9b6ec\.<@PRcn*C.m8^?RGuM5Dk_/>e%c$T
%ptd*-Rd69.I+dBT]`,-58N0lVJ&P,^nMG.3hlKi79e5cd37ha'M=]f%nE,1k*`>XU@q@hDD=h%t="0&r#ina,cSBJO"DN%N]_[X!
%PD24o4W_PL6/f<^YK#T`E8UH]bJ.;uKYR[;=XJ(NV2>S%PDeF[k#1laeb7@&naBN,K,ht"lgfKnnRae2*n!ifnc<;FP9j5CXJiW]
%(W.WOo47Kigi&rtH(02H3Q_);ReV%MOL\QK+oQL#DJAIbPqaY^1MG'<3TQ<g%"MLBK<H6V!!fh=:0G^+bK5a#lBO:O@o681H,trf
%a^q?>hW.ZO)0d.W,O5?ZoAiR=,&751XjJjAV>]`iPNQTrjnEhVkP^%YnJD&pkJOCA`$q38mk.KUB8G>_kc?6)70XVN,kFGEEGQjk
%mV^.%MafIglDY:8qLrCW6RK]qFYp?EAAj<>SbI83Y_OdtAiK=ZLlUmECHm&8o0KaD]ZVKK5_dn&X0h-l'9b_:ENKe.a#ug5Za%]X
%G(G'')/j!DT:/cno'XR&G!.q5V>29IBThR-4]E:&VsBbdcL]eJAq&dfdG=E]8,j*LKE(n>hdHuidpL:]na5)_hnAt$A-]PbI(\F1
%^QoW4nborso#:KUi8S6hUY"%.Jb%c<s6C1H4>Kf<5@>;L,b5=OLlC(3\e?TSW2Yp6H,U@k8JWIVEU"7m8;>U/4K:<*[hQiR$jEnQ
%A.k2K'0XsFB]15jQS";/''il]=;$=OQO[+\:St+7e?o)a/8LsB\Pt+k4#(5R0-X!D,bV1L_fJKCe-[4?Bda'e)]hrH/L4e%c[DZ`
%70@N2`)BIq_f^=sDOtMC)11pX5lQl,rJK$KGEn'I!gT'>@9.Al>braJ8b.;rd%3UjVquV:]ZMG`.lmuf?#.2p9#\eE'A)f(%\:RY
%Z/[[ApDl[Q^ZXhDma:I#`8)Oe7C4e>*&2c_UA`OFWDa:1)l1DC9iN_D6i72:kW/jQXL7VF7H%:/bqr@sR+n&):0Cgj>oaZ2F]$p2
%@T_P!=dESI_As`?e`e5\*"*rl'e$I8HG59gYc97m;\holl79tS^LY"ho>Akk@Su37/5[Oq7bkK\M@X]2@P!A&.0@m31-Di"XHe5,
%''X's=.LedOC8jFl@p**L*-WII``$5eT-o>kD?QX\[j>T#lO1<?(;V1]!F#ZGP>.0/jl!_LKm0Kh%%!4];lVVNoaId\5a"s%&5Ar
%&7sLCr$GbDOB""RM.IfEim`emlrnS$9BBs4CUcet"#%4YI5MhnH$W,qQ/?ZTF8'ABK.l&PIJY6;^B=pDN:fKSaPPj@2YghQV.HSh
%UrgSa@Rrl8N7LW-9SYL5:NeO>R2m&?o]$"bS=SiknUP<JD0I7KGE\`)Y@dnucgE8dq/&VdG>EF/M<;;39DfCaE0>e$7]*VG4fg:L
%%L9^rQ`h[3=q[AZb:rB=M,u?/=L?G:=XnK=@C"PLO?p?`J2R/t1@iD7I`Rme1*uc?P9irahg,c`^(>N!YaN.h9I8uu;LDn,JN,pX
%A\b*NrcEOC"T+Eu^Y3sB:sFRQ6WA-.!ssFt-t;aG&[?i>`DsYq%-&q]18&EQ)IbG'JM?*k[IB0KFqK)7U&-.Ul'CP4?u)4*mrq.0
%c-^:f!_J12,SBKTV<4\eR&["(J:n0I8&.N1nu6/CL_7s'8GH57__M`1a0[Cs*<q[SjG-X</BQg4A3#dU$\aRO1QBk!b(kAFb_G9B
%M&M[97VBViaY"fVi5B,rel`K8FMJPV#YiN2./,"Y83Xqin?lde+#;B>UZ[be506[h$cGj3q.-YOC*p,X*.W1q%GVKFVoq,K&WYLs
%9+A@f[MWVR4AprX)lb'[glprC'SUErN0QHoBm.BF0;5:B?QlXhg6j+Mf25/OSb`t?[`^Kg?.:-CC><)ON!G0am[nU9N3rAK$4$@R
%Z<@/$cEgqu]3*j)Z/b@`%iGbU>pNnAboE?&`0b>Hh+jN_"A/C;^8ackeFJ\ieXmf'Jm>!MG@r)0?8]Z@HdPtY_Ypg4hLj#k^*@W]
%bEONl]1V0:_nAe6*UpWjDF[BW,jn.<Y]N0EWJV!%c2,pC*$'aKY4op@T1Y$#QaUeDUMN^@f/&!&HG?Rqju;]Kh*9e8Z1NLK!#N;p
%"/2`95RZ:A*/]Pb_7=5joE]-,.b:*!E7]UU/6ajE<WoeZrK,Ff!A0\L1>_:RTS;6'7>S_\>0s+YSk$.#,:0'O/eK\8;s6U[C!#C"
%!'_GH/I8Z;cm>EOEeOZV4e`,Q>I(mDO(_BHilb[Q>#_SZ?WfW%MosHEML_!O35r4s;/=-CC%j36/j_ZLi`R_RA=0E)j&qJ(.4^"j
%ZbgnTGS[.s;M`qL(0!(s>QhEEAg-g[nLVm@\0mV^Q;#ASYN!q\;%'^O-"&E"%L]cq0<m&VMK8&kQLn$HY9(k"h9HOS$"\sm5%LLH
%8/B(<;dP%\Z=NpT\>`+@/#i?L"'Kl(`tU>X"'K[C#@s(%JZL,`k!\f+<g(i\[aGSF:@p7GnKj9^i#.RjE@`ZKa-6i#3*$Y2S:gYN
%a24Q?bLkiWEb/CjAO^qblcE+Q]$/:3*%BER*%Rg+K>QQ6(eb^>8t"q<9,J'&>4-I@8I1e0f&rU6i"B;K;N!h059?ZlMd9dpEC[X+
%5Df,Us(GJV/lkrb`j3&&6;Z$u7>qY9;2N+=*ho$eQV\H>/eAGhAqs];pZ$jHBPC*k!jt+q(tH@W3Kt8&'s7DBUS#/rqu9V@lh:Z/
%L]YX2B'<*Kc1=nkM.N]2/2<:HO9K"2(0#b2J1rf[CEC]SMc/ZZ:c%E&Jj<Xi>)X]5@aS()E7.!N=X5XO2h@&g461FR?kABQdo7)V
%\ae0:@!Mbiq\lihAdJ/B;<r:,f#%Z,i<g0G0I`m@d;beaoSH1<O+W/qikr;_Upa$q%ANB65f6+0G_MNMH(62[;P+.:`h<uGX;GD8
%=U8i%7<sbT;)Pr/`(#K1*?$"9CS>[']gLjO@%6S=)/5%.=*j47N'R5;TAgF2p9qSa1WE3-f5le>kVj7dpG7)-:S.,)[#lO5!HVBZ
%r-F_&KA/a&mqG"n.iFu\chkPoD66;0cOt`5[YkTO1Hk>rjG]nF5arQlJ&GFX`09B`BI"@"6^*"%?=\%N48T7A7'*AT6(7e*o.4[(
%hYBD"52KNi!3p^<@VVJ8`#:#Hj!b3](5<4uEEH_F+iYYb5/*lTpu(.g,rp,e:m@YYSl=(l+Ac"m98JuSNtJofqHtuW:<>c>(hViJ
%//q-l[FKXs#9j7Oj[D['0[X:uQXonW]'aNP+s.*6<S":"8dJJ1(,m1U7SoC5I4e;%-EOcKd<8EL&WN)#RE2HP*aeM&Sed"N^G:PU
%-O0)ZNuCX<1P>=c(7ruRKAtgIrXgq5EeC)j`EMhTbEIRH.@cfLG*$>p83B%k_!W75SfU:LF%@+0+%1dHr_?u0AH`bMcf7QY,0Up"
%VVG,2#W'tA@eS-2KEsn`QsR+P#X-R'NAMe@eg`?Op2lc&E2!n<36g=9M5Mob!%`A8%abnQ;^Cm"E_R@A)DW7VlH5.SMW^3Ie:Lf0
%CZc,b)`,&Ff*f\XCNsS22]nUH5NPBJL[qS/%T9p^*$WJA5o;VnS7EW]BrCN,E(qA@AsO)mob8%Nj>D4=0AU#Dn%R`7UjTbL$*Mt!
%h(3G-HFeUKIj\9`-p>c.'gs9pJ7IE2Z\ZASf81gJYac]g=h)N]HW),WOco3A[7;+?;ndu;qkE[4_E4EhB6ZZoVOb99*3c0Za5%<;
%6+R0F2@\tr1PM,5'Q]euVOo?=(9]3c*X*]2KP4dN4F,GSr`"H(L<*U]:(-efS9.Up?O2T8%_U44;>gT3U:/#<S>f9PDCCBV_KXd`
%D96cq6X))P6=XnW<^g$L<)6S<aW(8Y]Y!"F+!CE+nta%>*r8`3eAs7^86g5cLaVNOp*;Nd$:dNigU#C$N$e`RmaBUD=n>Tg5XVa=
%YR=$:k<TmCl@[;:e[\[%T9cGdaYd#1)gV]LF&nO3Ul<bNgL>Q]G0Wflbr_ABY3Tm"iH03s.1M[-]/q__n(`-(3n@EZ,)>*F[,114
%+2.R*'"d?bEQtnY+bJnd7Q0:PISgndF4[=5nGptgrKI4kl"arh;&f,Po*hmNSe6m&cP+3L+e4JR$2#K+6OqEUrgDE/.m-VG2AgPJ
%\=O:#FOr<XJaQG\.R"CH]ss['-]aIDMV&m_UcY/sI.9:((iC_<jp6*`1Weuo6)*T&FWtoc.deo-`p7]LoB?Y]8E?ddE9-;,DR$g2
%Mutg6kftIQK*hLWf?#ucr0uLr\\=$J6?;St:L\A]GA$>Am]0ZAc[C/P@6@\7G5nX.S.,G26M%T&iW`8!jK%1oM4p'!H*!Uem-9^@
%[N.&K65&g6``Z(H@0Rj8\2t(T>r<=SM&4#C$=hK/ACV;Mf2#Ij8OW;)\Jbq;&YcW/BDi-Xiu&N?B6=^qb[C)F`#2_1W<S622FfA.
%Y%OUR`&_1'pLD!V+WP%s>"(mgZY#$bkG5[hba$CR4V,&7aMMQMLZS(8%0g>f,A2l[>f/`.EMPlnB+ifHL9B<MU9AkMD?5<pP(#34
%@Z;akS!83`=GT\-p0l;cDckk`O)osd$EbQG6:*;k8\%D!dce(N*KW>Rp.2Lp5#hGI=\At*pB;#b$+??\Bs)tsZ2MYUJ7J`V^JQ=@
%@0VR(cc<gN2%T?00tF/J?os5Q&<t7uD9Rgt+#"fK7YO@#ji0etR]^.**g++JT_$*E.OD`CjRuI+J\.EJ=V6fkqHuui4rk52?,qnk
%!hpu];B=;]hcoGE$4N[3d1U^h"#\O!JpZAV)`'np8#LMJd>W-J0!J"&M(UB7#MqUT?!I%<o4bHmh-%+C]8s\o+7gj:,]a'tJO"j-
%1*f3qHiW-t2(=\sqS^>HU7aXhfi'RA?aD!0Mr5%M=%&sJ(HhU`32N2>ANH6#YZMdNKe\F[3sN6)-fE_*1rT<2GN34$cD1Pd2]U"l
%P"RIE&ZQ\.Fg3+1SJ[en>qd.iC@m6K-IT=G[s/Ur;_?<C*Bc*3.?d#*R.Fd$%g1E+d&?]nrI3imoV1r]7s.DeN,]GFYS,+bJsGmh
%]U3lNc;#8L'(6WsJ3N8(:BM#^I[UALj[0,M-*GD<IP<1#F<3bQ"OU3I,W_Wm@uJ>S),?/I<On(\_!pKK[2]A,V[b9B;nJ21Z$fr5
%asraSC=.J7'[RDk(*a<o2jKWNm8a<TdQM.Y0Eug2_>89+5LhY/T"saPOVkKQG:/^<B/8ftG"dU&%t(/-$^ZpsVf[bi%XI"8MKLkB
%[B,q2ZK#tc'=tEASgrPkh&m8_d+uF-8aOC*Z"Ot5+._4PjXD].j-TR#N-m6hn*\+e6`>Om0QW!L7EZO64Y&WJ,R2mlMFooePf]EL
%V6c99<T@$l&%-q3B1VJ8d(6FG&j+W^D`<VFLsGF\p%0<do;m[h=klSX1#H9U=MPLrjfI":$pH'`LLUt9&VA@0#Or26SLfDL]C3I#
%iYT"$6OZnMW<;StJ.Pg;ISDm^c/H.oXnG,-7o(1I^B2?$-b)>//pm*snOZto3@c^ZN&M2!d5"3k2H)KC`:OZ$-4&27R*`7rqsNer
%Z)cTX+jMbFkO$b:dLrCIYA04ZI`$>Ud4cWX3d^_)VtX#LP0Ss9'*$!NHQbjP%lQO,jO&#nXGk^N:s`\ModtILek9elT,SEg0i+?o
%`31*!KS_97Z9&`%ar7FmW!P"hiA]rEp1&AD:EK-U$PilF)iI:M-3"<qa*K*,g,@Y*b>`CNA3&Ec;3*IW+lIlp\-bo$"l^QToJRQV
%2TU4\UOd*Op_q)`_a&o-'ps3X1X3QnkT+M5MZf2ohAL41]l)=]D'E$Z3U@bY\#ar/4._L`XMDLo'UPN'T"^q[/6<#da+)I0]0bE6
%%2F#;'PPcl*UqduUPIo)]RR!kVhPCm5P=+N^M#T+-Ct_JQ0l<H>'\I%oS^:+m)N/M\Qq=`GBNqU5OA7H-ocIKkAoKd[ocKT%QVQ@
%PHhJQ1-Hlu&MXFcWM+muG?5rl9A5dWQA*'qj`]p)=?(V6FI^8"EHBM[DEn!/J'O7d6h%V&30:BrDQX(467d;HS;L3;5a:aDLbU7"
%GoeBs%Z*mn;)kt];o=3#q)n?3!l&?G/4pN&".3s"KX"P/q3!?bF3sA-)TM_GB29T@-]EHVe/B!Y#kL]#!0&uC/%mb>Z_nNf5-#-C
%ZZN3&p#5tK+/'^L3WM(d)EI9WJ<6.4V"Fc#SKn/CZ!0KM,qE8+-PKG5_PW>3!SX+0f3".8PjC<TUIkNcIW\(!r/V@S.s+EF_A@3,
%LrBibnsm<a!2(V>%AHH;,\B&>Q,%;$i;YnJ0X2oFd0QMj`9DgiBeL+?9L>#YMZa#<lMH%D8-#V$%Es*[!&>U,=SA8F/tA)g)rj?g
%^^1PY&k)lo?4)92?7(3j[i5ul!e=$"UgmC+p^SaL\]Y,[epoWt/M!k8J9To6WD3Go)/nO!k^=A+FoX\>AjY1m]0!:-FJ.7l1d7OZ
%SOs&j&EAK.rnYd*!)>\2`%Gb:L,c_.m<o!LQI"Y!+gFuEhKHfHs6/hK5u17.UZ[2<X!t&>*S_ar-ih&!?k2?FC$,hk/OkDPi.C/$
%(-A5jql2!J;[qN3C1mbNVp7VL]kWA`p7em<K_oCF]a%'U@jm<T+nR?%jT_eZJF^Y`QDk>jgVNb1$(XMHs).%C!5#QhZ)bV/+_]kG
%Z'sM%@?7n$C(etrEI6(e*l0pbnuTUFB`:lO#-O%IY8[a8>SIYN,VCPOY)p.A*=,2@e.)U,/eW>/86f+)"=,VB#6GPTo`J8h>SI_P
%-nZtT!YjfD"BS9%e.;a0/uf0Y',MP%.jiQb"9K2PK`hF5M^B6.>U0m@+ekDJ&94UgJhnT'l3RM([gNN_&Jl/c(IVM-'Ef],.gc=i
%(F95$5[;eQ3$-A'$3C_#AHc-lSC\JY*6np"!Y+=h"]mCJf+nK)cAN&3$KoqC=!V%8(BbF)l3dY#(Bk!Z-sRH'";EI<%!ML'CCI@B
%3%m#m,[=:d";3?0%'E.2W&"])>SJ(Z'(5#Nr(+]UnG$'1gdu>O[=IrU^s+A0Y!BKF'\MfcQ=0Hp-"gW>8Se[@kU]PJIaKYa/oL+,
%/fqh*HLdl`omu'!.iRh$2@Q(mr#Ol7`;g].>gs2KAl_oNl6mojAD0Uk&@UD]U"o>fcX=8mZ"Ol]*Za'$it(se45G`QT-t520817j
%MP15XRsI`N,<[jQ@OAAD!g\C"c4*3rQ."!,Ku>UT!u!/M8X:5iM9a=53*l2n2!hjGG5D<QY:!+lRNTA3kC-4?78L0f*<?8"i8'q`
%BlObp5%5HgrGY8(^I>5VZ6^+L1!_Bh@dWODgf[27Wc(!tB]>a$_5GQsm!s8nW_)R,\@lPmNt@l<5O8-IrZ46RdZqjLpSEl2f'F.s
%S46Zoi:!q@"*[NWU)aFtFGY9`:88F2=eXLEWO"1]X.%I\nY-??Dn@ffN5_m-?e$HG<PQ6'clZ\?G5nWkD,mLe-<QopH/@A6nWjVq
%[otS.QNUfV[B+(ZM*27i4u8fM&jW&6SV>"b)N.sYB.%B?4%%50T!#'5G+.<W2`a*cF`[SI5M"W&-Zc%M=q-ukeC;)l0b@\#dq1#/
%6-P7MJJ;5BlQk-sXJ\]Yn0L,o6otd5>r?(b+f:10qa+t>SZf#E:^;/^hX'l6g<ok/SmU^Mis"3g4*:i9'!e7YGB[Krl\a8X(M68#
%)inh$HDM5B&p"%ifoL=*@DL:BQInVN>A`AN^dYj%^(BGOm<hWl]Q*,fDCujI"%6Mj:\p7a;FG!4*>0.i%'#oq11A`+$n3UpF8??k
%aAi1tRb3Yf\\q5_@]r9H<34;`lGWpMXml6g.au!bFmo8;/Pk8*)s@(m\0mK[9j9jV:Nk%^B(`8B8q8,I),b`k8(V9'4g'Ld>;QFU
%n(7f@G*b80d0s-7WK)XT'EYn<S``lZ'BlI[#SRP7HX+l"OY#)<MIq=thU2;nrDXGn/+R+t9:)E;oq>jIL><2q13-?5H&euWa"\0p
%G=cJX?5Vd`L3O$jgm8E8R\AV<3Y^V'l=jE:s1[PVELiWf/K2Y-7q_Q,qBMCLpFe?^%>*&:7o]3<<K)_Ddb&O5C0CuDTn/dQ_T<rT
%>88$ig.om&:$%plEf"/Oc4"^Tj4nfbN#%\(\u&-e<55ou0HM`*]782"b!LhXm7-B)!pR"efoR)m/d$j!Zn>0T07tN&0UK"ODl%Gk
%LM<++\Z_+I28bn?0p4DEC@'52@%6<CU*d*#j6!),hg]`jpR"1i!+hhdT\h$W_jCJC%^@c]o,VL8&R8,adfjN'=lc51M*2e:H`?1_
%LBX/jB-FO\`i1<1W[r=++qa:VT!%@Ap_J1&]4!fgFE[\c5M@:ibYliA?btXW?)?#L+h@h/=X7!)TFC,`/MUb23nn+#']TTq:oDT*
%@Mb#KO,E&LOWSLc-5)V<mAmhZNSgqrhJR"&Yku"Yd/=/u`sTB7Vss(Db\p7SG.U#O!HB@2b)tNNfZ-O("1nS!j'$lIF\gMeb`1mW
%"S*Z;M1N5C4q>K5B2#d.$W.gP6b:+f$(PuX\iXR[#k:(\\f9n>lc*uj=NdMG_mtmM+o:VYk!f@KE;UJF]1Q=?fi[YHA3M$Z1R)+H
%V\KZ$jR20*"H^4tpOG6F)94mj<\%t'\AuI89P(!/Bk]s!>sR0N,o^UC5hnq^Q>(u]M#fr]nd=@\&1AX?bJmd3N&fVSNo>HXje'IR
%-Xu#P_jqCp>A?HH&8mMR_I]L6^-'5M&#:QaHueJ5>F\0,b)Wpg%&MfYK3[l*%$eN0G=HN>g[\rrj4;VAkPHh;T\g9R,0oBRYi,Z>
%%^AC1(Kbe?fTFq0H1:S;gd[#;g;n9gU>TV=C`BfW4s6lF1C=+B)`fa7g29P:(0GCs"2)\_A6Yr/@VM'"$ci?E0Pltph.*k9=`eJ1
%p2Pl34uOZ*BP@IL*0HfNmbHj-iOs.\G.'JPJ2R,+bc9HbW(jPq/d*2E/p2fNX7^La?lO]MJnFI1Yh-ZYi;HuUf,1K^Y)U*6"o)@C
%G`<<UC>oWjH;%6BL:bG5@O0'(f;'g4m1+7jb,6O@)&qcXJSR/bbk2r&\3R21q$5hY3TPJs:5<(=*Ni2F"*@V`kIMe=\("7&,a19?
%X+uJP/nf$Z?s8!+%.s`nhu.B-)>_"B#*Ia_)2``Imu4]8]/&?ZD<pB,e*Z<gTWbbH#IN>cLIPKI4i#MpC)H[^CGBj4=gK:&Z9J#(
%2^,[4XBk+QB^[?Gdrr8P\D$AmL&7aLRjZOj+1n`uqZLnfGEFp#)H/=5birg*;N37!JuV:V0$R<F/:9.bU)t1VnBG0P3,%d$JC8GB
%1RpLDaW&3_GUN6H[\"K1>9n!s5cM6B^s@8!kmX$ckbjsPdqV-)/&[BY<O4`uUC`sSbZehdkM;7DU\FH,#jQhBhCNR"41]pUrTK&)
%+]!Rg:V5!$c8&akLXQ:O#`b$So`CX!`M]Q;d7d6-URa*k+h0e)\(%(rd?0!Rj)SeRFPN*>ngEs&m[id#&q%diB6&i9+I-0t0LuoS
%-JE$kPa$<<N`kf^Pt80X5.5QbXde,8el)i,fZ'"6"u85[Qt0Ij!iOiJjl1^WhUU)1r)`bP599'FgrR[bF^q)2hgB-$IJtZW"l8`>
%p'MEUI0GpAU0+cR[6s*Y.SsGGSuJ*XV>n,C(M&ophf[Zr^SG4EK7GT+eQmYk*&mY*k<;'^]lrp1FlOT6=[ab[UtDd$1C^5Pe=E`b
%_gYXO+kR/)9@Lab&.mEc0S^@M&YL18FT;QM87i.3eJ\U=;@3Kr!t0:4#,tW0"$FKhVoKSi!%+4^YgX\:3DE\P/,D_AXKoJQ3,es.
%%>\B5)Bnf;1BuV:c-4soGSa9]a0IiL=OSFF9R[QZ-5-c``2_/4%SCMh?\dJOZljp%.[Xcu'pQA':?h&%AtcJI1LLLmTh:g_)$8uq
%h"B?2BiqL!(h)qD!"fND#ElJ14mjR/c6ucbB02#e:O6KL9-oR)V1G#%==?Y0:8^#B/5j2'#T.Gk]4Np$6Tp`=]73!5RZE]CP?64j
%BflV;-tpHGQG[(k'o+)gncb1$K-I<G9duO-UW=aM@\&d!9[*0,!cQu.'f!%`'q$\o)M]q`>--0RMFu%k6[mZY=m0@k_`h0up6)YQ
%Z&XkXWsh<9@\6ig:*o61>qI,P8W\k\DV8#+QW_hcKi=%$],.m,R=$>>gYBG(1_>$'AL-[m&SN'K6BLm&.O-#;-0T<BO)Dp=Lt1tq
%%L.E1oDgp3MLOM>VcG%fMQ_*:2cXC$@0m]oCf9a\1QQ*i:a74O.$CH_S=7nR%jaAV(;R:t=Mr-j1JP7c`1'VWl-*'j>V!(O^dQD!
%;3Kp?kU7Q'*#mo%A:h`Hk2SdM\TWHn,YC=)6BZ]WLFXd,78C"K*Y+;VN'5O&p*`a!FI"SuE<pAB[+Z2WhjH?WQSA[Zba2,gPt^&m
%dB`J+e.1GM>(n?D5hG$7\Qu"+4+Vs*i-cdi[cHjW[5rFma)$G"[H4$BF9?b\\/J<`.tYR,3Q]r_[44uVrVSi.4UO-ViXgZkr!<W^
%<,DQ!Mua!3Skc[aHteZP"i^u8QMhB]Q^YX#,-lh7JgE">R^sKX&G257*c$Rn8*,Ji;]U12\=s-OnC%mDkYk^%X.G(<Whc0(9D/bs
%V'n)<LX%mc$GI(g"D]Jk)Up$mHb>Q[$L&]cG+)O3lZCh`?mA+\Du:Pn*C8cf^*l0bLG+BqenCN3+/k5A96Ia-?IJ/!Td,f,KpB._
%<!N8O+UAeP""Sj()'l#FHl^!`1;_^r-3C?F]H_M$_>1HJ<-Caj6+ImMAMbmcMYNhJcu5.,Juo@lQ#SdsU.dh2DcXJbSU%?*JZ>IM
%]OtcO_!HT],gGsi&Hl/L<=Vk(\1/\e>F@dWqrI:$1Pgph=2pV_TfEVjYRC6Wp1$eEOcR$e7>o9Be$.uu.Nu]1"DdCn)d>2]hcf/t
%&1pQZm/9hGAgU&a$G@i<[;$D'k:*$9@RXUl,FU:d`\O.b%T^)n=$hd;>H<MgT#B\CA!aTCVPpMr1.oBsMt^R&jTK;FDd//YN`D/8
%N2UJ:)&u],?;uo<3O,H@#q.Y<YU#odk"=r=FpendF<rP`/;qY,@Y^rkKFQ"aWjf*7#([:jbUIs"H*KD(Oocm?Vde=/;H?emrFm`m
%Fmkg,^?J!-l?R&ZT5349IIY7-HkNHRNIYS>'H]6p4dF$"m^<Fl-Wg=A^.*)*CR)G(#]<LACXb.aZ<pI$I6k]#WhEts'Ejq88bKK^
%-VA;d/Xj+O,%,m3^kMVM[0+YJ<5BMt"*EAlB%SYbF0QUP%JU15j_g4D:VNWE&n*@pH8C4X_`U78VH[%bs!-QT!c6a)*J%U01ZRPH
%N]nK,M!mGV`R5.kGms(u##o6_.1/q&oi(`YBi*of7j0Ju.9M-tf8Bfn:Q)W5)4c.9T)&W.U_UY=@7uErdc^nr;<>Lq10HJ^_K:1)
%MWM.u/D;.R,!od$UO/D\Z?1#JH,rXtGt0RRUIad6BgX)7U$'hP&HT9hcbig6<S'ii4Lm%HRA!LgHm&c]kW4HC<U"&E,+.;0S.%QO
%QnXeo`buVAl_h`#3\9C723l#R30/:@QTn6r71b&_7JI;u9F-YqY7DX`TEfASo2B1YA"NeQj^Wn[->ZV;Poec*kM'mr)32eYW-L?P
%\OntI[sVT:[%2tXLZRXGT-snP"G7Af]=?BdRALjb`q)k;W'LIC=N^&rMf+G$#(f_d-SDES\iasN@5:rV)FD7S5Sk)%^@XOh39/B+
%1GtM@.WD*.Qm)tOU`G$]ATeck#r?Ue:icWbYGuAOB'NmY>u"Gp,@Am'$`"+$C,3Q7$:Zg+,V#*7Whns-!n\.DCeJfp+W2QX15%Ff
%H3,T]n>9G4SOEmm@f<t8f#XQmX*n`G^i?6FdP7_OUsLM9K96u5/PN82qoqA+3YT5uUr7Nl"Nh;"JGLY"e(UM)Mb"uYQ^VD5RiQ3?
%TW=caoOWp%fth1;<7R\UMk]152>!7J[A*\^FaRuLCj![XEe8mI!>>Zhl)^4,jK>OHK_XVYifZK`XYL'J//IG><ZDHY]M5U<5i#ik
%__oClmVj:[LstA:!`]-<$67K.DBqOFS_HnIW2&9Cbr._n!H$t!1bq#1UB+T7D-`l\bG9r2d#BDKWcVS+*b%_3O]`,DAY0H#Cm@mm
%S;D;IJ0h-sBc/T[-^HO#'RZ.d6.=R(BlOB<rX&eP115pa6%-T$([$A"!M.&Di%`@in55DS#l]VI5BB_3i+[]bN:c2Y%;K'<\?4U&
%6UmH"jK0ss`3SVan8-__b=(cf7?8>+#QmFSEB26)d*j/(dljut28*B=1XhtB\J9AaK-5b;.8Y=)F;[s68RGIBHi/gN+?N;jKPWNu
%RoT(?53^#eH)<Io#Z7;jZ_'>\I!,)^L>-fAK1FR;-Ridl,Po7TQ&=nkC1L.CR8oM>H_SU),$Yt=Fch/LkrN9iMR,`MCN=5,r@.dm
%=1hk0Q<4HH/V_h?NKtHAYG/+,Hth9O,oH927-E&=VP;U7!96QCZk03(;#3)7*G6LNK`up@'pjN2Q6?U:;d&k`iMY]t_VLq+Z^kh`
%Q&fMo.2i=7kSpBe+i'umlC>h-\i^mh#$G@hI_h,f=,H%DA#Knq[d6-/EsT:S:BmHrPm+I<DUir7SlpK_=C$&MJh5(>o&/K#gsrrV
%0V&)$g`u5Y*f])UaD)u9LF+GB(j/t5Wq'EI2!b3DCiVgKc=h00Gb;:?i-Bo?Lm<POcD]i%L=KE&7RH[cD,1o?`A/BI'5!7/f2qX/
%;,Ya-'O[6Er<FRP'#12POJZ`um2PUY`=F-[/Lclqa8:IaPsZ3/"3:I5.ecG`jG84*/$a,2>u)b2^KtDNP:S#\W%h"kNE)P"_KJ.W
%M^b3u9-+)J@p#\%X+NTNR;1DbV5M(+R6oA[>"6fQ]j-VpLj\om(PRSecTNA&[1uNj7A!u;Uq8L[,O<Lm(o3^[c]P<L`f2#n`G>Qe
%LmjJfZRqXEFO?VC#*rF7m20HdqaD)=b!es%E$OaM3u,R#A[]]WMP)^:HA%;j@2>)7[f']Vg\deb-5=XMRrV,5mY(["G._`)\/$8a
%f."^s)EHVY"3WuABr\`!OO+mM1qQK1M^J*.m<8"?WcFY.UU!@C=a3&#>71A\;%LgH0hu+pN\lPP$J8K!HE-0nXheKMRZ\E?U=4N8
%&he$0K;:TZ/=^H31WN?,SkGB,#e4H@%SqpiaCR5^$00i6JSCXNY$%)M*ck7;R1sQAJL731+iOAhO<ik+@3d\TXRf7CUM=V4RjKbC
%7_"s\&in/"=u8$3NN'nf3S)Y3JrDs`hmJ3'lOi7_40T"E0S39l]1AYCK`7A=Ke:BO?Yi_S>;k%W&d/K8<g+;"SL"Z0,?W$p)LHSS
%Rm'r&J)YB'RseGuj>'qtbPc*$iRMAgY?957Q>mC0URK%;?'?YY!Jpm9AW57^VLgu]h>l'Q;)GSo&'AJ1"3_&$0r?JiJ>'@k^miDK
%0<Q"F3^WWpP2=p_XPA8P`Pas]68K`(<7U2dETZLIIfPE`H!9+##<<(.@okH-MPOdWb7kHKFB_ns2<6.8VZR%o!NaUeB\3XORSNJ6
%^5n0eSdYo;D\[!tq%lH:+AGEX7Q]2kAUYR%LruFrIlIZBV$M2dRg*eo*SGV<V,o6*A`0,2FIH:4FWs3BTb#5lZ7IHG3eJSSFTJH!
%+WJX0YfF)W0e4&f/X\\;;:":9.#+%oc_`r#!6N/L2=;oGRaRnMaITSF*ZH6-J2m8Y!jsU2-Zk)E!IckbWZc(W[F0N+_A9'EGNK[&
%NGo@%&l>?KEPF2^!a):No`K"FE9ZcEOjfl/9Cr\"lT%@19=#oPS&LY6Scgr,p+q9li(cKj[c^O.0b8Q9pj4WkZY$UnXMN'[!Q-jk
%m#/]c+tZYCabUtR&7D^\it1>fG0F*jg_!Iq555nU1l_/bKLBQPBd1`^/Z%BR5jVGRUq],dE7[B((';VM&aNslS-DuQ3F31m%F7Jr
%H2)ICR*UD$?H>n^AEB_W&+Y!^)n(V^0`,PK)Zl!M$/+5TniKRPQ\`L!SFeC"/s$,n"CXYm"p@]A@&AmN.Y8B(oLktEq^d,,jDh_j
%1_5$VLFu#WoX8j_A.C^`'.,V'%u1o8id"!jrdL:6PK[I0*@qZ^.6JGt=]M(H5iDC5#t,g]jFKA.Z0KXi\u&Qq(4\nm<0ZNU_q(.9
%Hl:sD8^VWuXte9aG7i3/.V$<]9VX:s3b>rRW=:!'=%*sZ[n!n;Zb<qI5t#otC2Zt#<1f+QRebQWbi;Rbo]Ro1BpbYXNH9mV1&(`)
%1cEeJgb^GpjlF>s>6h.iWb.?8j0,0cQ[S[-#]X@u%:Ue*L/)0"ZCsk.#bI9>(^n8-,]1T?*$sD!&!fG#B2<r,PFhiG?JSt3`X-Z"
%@S$T0%u>]@aIV#.]Yg&_=L3A+i_*4p.%V#nLQJ*BrhQlR>O0sf>dGP$^$P>#==K=Y>A4ig0m'U:l=$*dIe%SO0E>/V;4glG438Y"
%X`VZ$L--T!084a<]?Oen?H,F%_dk<#%9TkSaJ7u$2&j>[@OYQ!#,VU;OFGQ]6ai!55OcH1&K?E<X$\t#Tq]].@@3'Z.qai>i7Q'^
%KNp?1aNm]Aa;U;L<m9o]66<gXp]?9+AGmcu;<athc#,CulN14>L!C1Q*%G^?GT5)e0Qas0=(]MB$KGF%/1D>?J9!9kicrhA!J#\$
%*BU\g=Od)tX^Dmc;j=97XUnm8]!h<j=(/Lr^]DuX*19>p+=GKL>1_'+6AX5&=gQ%p8!X@94(X>AqMMOdd;_>Z/?9'LAnsh@NKoA,
%=3r`S4m`s)T%Ge!&Y>h/NVnCtTb0[=`+Mbd<2q661m.j_'MO&Bd1cq,RrF=amR^NcZ3&9,@L!`@$c&i8/".Vh9Y+efk72i6#f\4i
%>FPT:QGsn;'73ubP27N7cZ.YN?NBo?UG<dagEhriUiD`:L3fal<Z"r+gQ+N<.n0\W(A2^'`h#e'A/PNW3:U#NKgB.AOI:KfL>3O>
%"GW3N1'@ft3h=9%*T;/&?o\o55^k@L6uWFfSs"gKVT2";:'4KeO\]k6V"l@O>(1Jd\WQgm]E`3iZVl`=R@=?fLlMl2#BsCkLnF'&
%]?"A@;QQ^1[[STVaRL"qZo$`pdCqOpn$^SqHBE(e"E5Y;#A-,CeEC)iodl#g3/8t*LP_lQ[)(]<SO;erp7O3=@<p[J=E?Lf8d2't
%Wc;m%1R-M,JHN5YS'%BlQ`<l5eZEp1a"HXan5pG2&?oTCo,--aY/$/8?\NVJ)Xo:o`E4"&c5?S69oRVqcs$bbLM/Rfm,0\!n!pnS
%3Q'>i5\ar%[M;Zu112@*-^rrn4mPG.Mj:8<>?_S3Ds+!)#Ys@ZDann\#RH!L=<8AG%'PCg0TE[&OPgJc0TkQn?;rjYR8[\3=kX[O
%RcK"ETo/mSh"V'3ms/A6<M#cGYmGAhE$%`Jmi]VA?5kjY!W7ePRtGEWc#&Z>9O%&9EM"*cnT[\WG/>AE$L?\oETF9,Y_KJE>Js3D
%*T]KW@BLfW=cT3E*;0L<'5pra*hcSm?T66%+!n(F+u4FZM"8p0oK8IBG8qf&baukZLd',J/RK@D"tU&4ErOG>c`$XRj^(fT[Zh?>
%9?Un[^*>m.jLW`t@M\N?8>-&M,HF5eprE]0B`o?Z5O93PK('Pdq(?WVJ3rh5_XMA&<Kn2+0j2UeoJ*GLU8CPdUp;ao(%kA0mL-K:
%93d9r4;N;&e4-dDPF*8f=58"Z&7sDEBtZn_X%%WU4cH$CH`r.bE)ZqM(fH$=GmZ;:3!8B8&@+^0]67].(R@)P>?H,8c.MaMRAgP*
%U1>4+R=ge5#t>.s!q;XG=.Z6j<d5$ONSCKCUI)cQotEF^S49P0>JpaJ\i10C0Le>hfResd2]dr,+@bG#OUO9.7A#`c!j4jFIN=i>
%.Bj29[gd.+CORTqU1aZjFU!\S5PH.?"n%=]F>7hX?5m&+P>;`,W!^/YTr8ikU",/i8DVXWM9'L*JING:4>^og:Eq:5d%)^SBbZN!
%$KEs*1nnl3\Hk^F)s&<[hjW>=$DdDI&*1JHp/1sG1`?USGb;3K<`@$?[>RGm+F;"R?CJ@NjUNTQI*51SB>Cf^aQBX59!VkLs-UtY
%Op<H.+5S4s9E7lJUL@(\-4+<b)\@UHY.&>.oP(7V-1dC$BaS[QJ?),d2]\eNJVB.XW&(*7=RJg;J.;4]!H&2=[iVC_c@_O8H>d(0
%"taRhEtMt?/96QGH*e5md/*$4r.ftP1!R8g%C6G9rb!'F,O<MQ:@(e!LO%ri8d>F;lR@XKfGLt>OYgYYHle/;'31t*B@&4DH#`%q
%dq@^<gR-5[%3FTj\.g(QhQ;*oH$#_G;X>>1.81@>m?gO7g(&sN!^!HSLP_&rYk[37!YccJ`W4:&pg,L##6Bd$,!Wu(D*r;FXXL]=
%BK$bgjM'cn?3;puq/26P'e]U^L;&=."&UgL//CKA!+GrHI_q@]-!TWU+P%)T'dtQ0(BmD'UpdFs=#=q,c?&E[7;QF;Qh./af^m+"
%G1?TPCiUSrQN/:&2?:l:)PUrC`ZEs(i:WOW.bBGF3r>Ud#X0r5F248Lpr&7(,,+9#j-Xd,@%:q)_3ARso:5QpD*iGiFoQGTpE0I.
%&.D!>++$qd_jp\C[`BCdNB.:6%c(iVnV+D.cs`fK,r3&#0Qfmu6D=Zn/.!s63C$StM<V7A.L+%L)*D^;L$M)2@IQOt!&t)n@m0l'
%"[PCRKFe:Y):6\lK(4Xul[-B/E3:.9NVNV$.j06$/i<Z3aS+Za9k/?MVBF)->2Actn/`/Dj!'*Vf%)9U%LZ-hO%7mF-egT@)4[\A
%=g2MJKkZ`.rRhWC!c-`0lHlG5N0nP[AHRJh+`d^HEe2A%UQQHRfJJ6_J-5Z'&WQ"TCIsP(nqC`jG>Qh[+2btd'Eg$kfH%L$_/Z2M
%1fMP\_a:h$.2^ltd%RT<B\pSKKTt<1!0hsl$NrRH'6h+WA*%;eq`+Yr8\Y-Fhu;Xh^\dNN2nus&m.p6cDr,mAm]YJspDT%[lcaaS
%'UTQa,,u%h]Q:@;'[ksKehEPEA,pK#&@u#jEInu]"BTG5Dal$$l#mL[Bdl'Dm"YnUSV,F_K1MQ)p*OV:R\lX.!$^5`Q^GnB'b@Y*
%+[hNRdmO'dbCaphrHe,-eE96]'GLj:YN3==/oEP0'Ih+F@*.B4,m-Km*?Jt".@B-4*l^kX&AL<ud"N3DJpf%Uc-Pl_OJF0POAKG@
%^S_fO;`+^GT2lCVU4`R#0i7Jg0OYT8'q.c-i(.Dlm=U@&Z]E3f"U]IjGLi=k(SsT6B!H@^P'pPDF`:ZhD4ejr4K8.VSk!l[!X-;@
%;D<@>e_$IrBU/O4)ZM""0qp)6A(sgdd(<E(2TFg^W_C3Q=TNT2WJs?.HNHH_%T)."i><K'\9UVfOB_AXE4rX7&'`"b6*,KVH84`T
%iRruu)7pK+fS5beRrPQW$m3!S"Sj`U0PAA.BoVei`9]cV_1FLZSC_=`]TKc+j-Y;C@O,2Q`hH)'+6S_H6X!SH&(?k!&Q+^GB)It=
%J#H,;;'4X5.k@jtEJ"FHZ7@L0pj293kh^2-\X`pFcj2@,mtE_Z&Ia1-\PEi)<mi^sN\JE<l)#X+\3M]IKrgdH$<Yc1(i"&(R2,c@
%=5T"AiZ_#CeqE1K@C7AV2XAK=ao)(0d)ko*5g+[ucXuJq39mOq$7r<;7g&`4cLCJ:$(DErTe]49*]fM7P'QN/"WeX+$5!a1!XSl]
%%+qQ\0Mn?"7H]1JU\D:T<%JU5Sf%)B=2cG4>![Por'a*uF$DeV`/L=e;HV[q8T:.9Vsjm%!TFSF#bB;A"'.'VMd<J8r#(+.];hlH
%-pSCIG/VB#6&I<*O,&N;2T&a<IRNf:^_30,*o?ru"gI]rrPVnFmS;7#RPV6ZYod]3gK>l1a<@./+VSZgTprbAbIFHK.1O't/Sh2A
%2ChM<'>opJ>HefOA*98%2U)bCjs6aLU'E@]FBBa[Z!o(ciqbqFPmf&F6;BrD@4njU%F0^BTn#9]pBNfcpjbp6ou,!8L?t;B)f"X)
%8f<ZbW?7e<bn?Y3T-NZ\!)4EHg"'Dql3Nq*\*K5.-"KOV%g9[W_>IMrRm6bIee7t7<Q04.ULZM\B+>[;dVO9C%VX`T2)ES!!:+r>
%4f)?"XIk[OK%$I64O]E2]E'?VEJt#K'(o5dXJaKqlCKnYf17`nVA,d93C2ZI_uNVm)DLhq.W<:L/b#kWa`pd=rP4AeNJ\`"OD!Sp
%J_8*K@;sj3VRqAi+L">u2_\m5'1\H#?>l6hjQ9bagI+A=WY9BZ'PpGL4q+dYM:#e^$QNo"mJ8""34n=bZ[rdeNYY7^S7QG_NKOt-
%:UA*7/mGp=16M:;F0OH``d06$C*1e8'-\MnkQi=d/GI/tniPiZj[1tDgAlA6Vo6E:1fHb-*SO7g.F'1S.Fh??5/mFtLl0*]kDk0d
%cdYc(+FVUfPaoU16PHVZ[_u)+e"/GUT%%c$%ZR^@N`]qn`4<:.mT%oi7H%kN?,L#Q[Vg[;>Z5m^28d/B,fU%3O@giFn0?LH'm?%U
%>Nmbp@+#b(%`Kghq2atOY\o!Q;jJ^=l84*1@1T]g5P^$=As@;])$9c:RVh=;H3G3Q)^Jt'#S0O3[6Vbjk0sPWp<Gp:HQd`g6)B*4
%C=0n+Q3nrsVGiA.ZHm$"CnG?HQ$9D5k)$OkaNLiG6+p[#5+-=o)B*,YjJ'>a+ZXs3i9%SlM<=8hpHT^@,2,Z70*A*e9.oJJ=?<s2
%91KOA1($u?gU5+cWTlgB.S<=%-c2$m"3(d?T\E;sNl!1_[_SBqb98Lp\:,io#CN"hQW*Dian@pKe$-h,P)(pF!e@pi`/4dsgV]TJ
%P9N<[XJmB$ARuL)N*mtkQ4.@@%58ij)=r[5/7JqJMT.ErX?a8t<\uF5D<F^c:@-uRC7#Nr-E-57GX"2JbDHo@%VY!X2h;"J0MIiO
%c?=n8`keg6eS6fk&:E&7pP3,r@S/jL*fMBT.b_oVMC<aUo`Kg.gSYGE8c,a-*G[O7/C+^t!O`:K\aH3s`TE:?<%/I?g(YGn608*!
%)OHHTFSrV=bGILc>X'r"#%cP3bjWUk^Zoc!O0%<7AAq^t/*!Lh)R6\8A^up8Z[QeD;Xj=/0PX#Scj?973KQ1N(8[@.M0a[u$9\Ud
%)$q[`kAdJTJ<Wp6X>Nrkd+$CQSLQ^1Sjl*<(<W[m=sM=r0Ak%"A[RoMC/mr/5PiFL#ThhgdL&iZ?A\nlR;[is;tA%;Apth;%&CgD
%'*_:#_\lXQ@VWPdIHhhl"MCpKIAWrp0-9d,7Z`2G'2E$`Be1)8Coj4h>32KfV\Pq"O"t1J:KPf".8E0]BIs)RU<uf#W'H,JbJ`F#
%;603:(GF&%Ai(9El.?(5$t)6=hQej"Jm+I?A9TP*JUf-VPVXQ:$piPDN1n/L/QepW4rm@Z@eiJob%$H^`ti(aqfnFHU`)crL;TG2
%XR%$r7uY8rQ)cgd]4)bq/^#hCm0Zs0;aK6p;+(V/ZSL/mNQ?03[JZte]:iq.Ne^^hS'c$(=[UA4RXq,7NC;][1\apZYUDu4@\58g
%_.D/s)n*Vh`S`=,9=&#E)s8n>E]Q`2iMNR<MLc<]?tgD[aR)5(@5UTV[aMbN@Q&HMqf5YJ+M,`Z.Z'(Lg/m0O3ud`0jstO@.]U@C
%EDu(8Yh?*5:B<o+arF$,,7To8/H-@HEO#0D64*uM)dWtX(o"q<l#O39Fn)[\_nN&tlkX^HC7F7/._*tZS>'G@J-f&h!fKnln)Cag
%SWsXL3^lGk7NMWnaQKjb*X`!=]g:F%i:p&^d_pD>1S?M.>$2.""t"cK@tFc>eGu%hPB8q(.oC)h)+H%o*E1P[1=*aiq*rXI(*ZJT
%f;/7T2,Q5Ymm23tH2.Kb70+d%J:`;k-JMTf"[`Y+cXi[d8;q;CAUB@`@i.99lBEk?&l5DESh.S2jSOUC8(XtI]rK)jco:j(lS(g0
%1MKJNdO(Lu1L":j13oUf5l1c/P)IepNnC44&QK@QH+^I9Xg:HMq!$;?4>ac6NS/(rXG6jhKQS3QBuDm%/rM&5"I5Lgp?D!>p7K,N
%J<ErX49N^FV'eV>K8P#%G0Qb%`>["S_%)+D2W\t`-/d,t6$SKV9F*;g]'`SiSKtqb!_8-ME?YJE%"d!m0c3DMn')#0kd?V$K\kr>
%,4BpsOXQD+jHiY7dE_q<M@Tb+_d$hU^,\A6[nDB4m9W89.'09?.'UYI&Lh@0[YDI2XespDcQitu7D=jq\`XFK$A07Z5GZ5KqCbGA
%?FI,C%#m<M'U*6$kV7!F!Ak8^$$ZUdG]6rCq3p*6&8uksL7)kkprg1Od>UZ?-X,JV,cM%q`0b_aXI%C09($h\ph=M+!#jWpC,WK0
%>[Va3e9MkTetFcXPS^T249W\2@M[DVe@c."@K90,G6:nXb`A1<)<,@MJn`FL'YqSS[_Fd*YkdG3N\.[KO[6-lS(l(t=q6VZNO/k4
%hGC!VUqlN*kREgXGF.`TCLd^>g/H$<#bT2Tjd\HV5_p\sk3d.j=Y[oW!HBO,AAksO[T_tM%3&D/VM@^br0XV0aoihEUa;WFa!?FF
%<WRu)2GKGS/4_O9IkQnodITZ:NU,T0l-!I.TF*D/'l/?4TG>O&!JH$J2$;f/"F6kUf'J8c[GS?6TBB2^e`3nWTZ&mmUccr_X+h=P
%R?_m(*H]62bcLK):8&JT*nJ,Y-r#UMX4iV:J]TshpT$Rj6U03*)FYU`l5VC"c6*.,6]2"K5M]+CDnS$r2ps9,L)NF.]PLPOPUm3(
%XIY$Nn]K,%EBsPZFh(hYW8.kV<nk+XoI[;2>t:1^?l;8S>>;WC*\ge[717p3+-3:qW+t`oB<--2.>hP/82N`[VV$&NQ11VakUHS+
%jsE&l)X&?F#<hV9b::\oZ!\'Zdu^hFUW',SmQie+3:EgmE3/?$\MUBoP&3*"#XrX1gZP5RXYbpgb0'ZBSLZ$lQB_c+(f(d-]6kZo
%Y8Jm!U9s'BQ6B!+1PcMN$&4E'KA9GONe-uiQm_M<4Wk2o0'+ZD[`ka#?'5gt-SWOY]2uJ8h_.gK?p.B8:*ZcI'<40&45+jI&$%lR
%9JlmJcEDc0=0C-'`mf!5.Ktt:"eZ(XrMehTc+)X2)-*)C(`WKAH6d&+R9E2m$*Alur&SjU'OsHQ7a94HaPf[fpQ)<p6JMQg:_]>"
%/kkD_/^CI*1_HHS^0+9E):7U(CjQ$,%C?*(K<3K#Rbn%g:f'A&55nV=*^A>"Y%o3:K`E!s(\i(75L*Q8ka_Vh6"Mf$T%T1JdKHJ3
%+(P=Mp2&O)Y\AYl3E%$;0:ue[o.aKS'GEOt0mk\M4Vusb5`eQ_BXGf>`n`]A0of,`F^[Gq8SSklCkeO:;]H<:40L`c@mDOF??X1q
%`,Yl):qkroJ/P6QM=)55mo2ra*MZg1:kT)T.FiBA=0gkmPVg,,q@f7[TK96p.!@7;a46$6S`q!0mPIM*kdXeKrlT?,9V2sC1(XRi
%&3$RVa3@Z=$dg]eTLp_F4NC.5f<fg`&I)-mE2GWb,QsCI_/da?JS*^`a$^0nH,jn50EA(GSDq%-;.pL\o=3]*)cO8tAiE1<H+$Fb
%g^N[qjYk*o4QQ#dC1G%;$e'o$D%+H[3@E+r`f=aB@cMA(hna*`[:J^JC(+IC[*<<D*T<&CK@1U[oTAPINObLe[J>baY*RN0XbTW/
%/"uKPrXe0I7WI3cD:9@iJ<H$FRkZI'9u.a90m8m4WGX?K;)S&hTe_@JI4.Uo)Z*5[PHoe](n#kal7Y9>W$i[tM#a;BEkG5`k:FV4
%:?0K*N,r+rXVAe=(UXLf?jpNQFVYbpj4Q:7lMSVge>Tp#qI85AB#o\>(dKi=XcjR-6l8kCac!\RJg^Rb?EEIgmQY3G*Cq:5($*=@
%Gr%A=+E&C^/K(DTcoiVX#CN=6E(o?S]T@\eKsE[^0j['MG+?/]HPdpdIASX:@i(tt,ns<+[PW$e@P6Z=ZFMY*X)uo8(l$rKL85&_
%fqCIq6=%fTZ\aTSiW*S:3iT$KYIqjD,Z(N.[)F0!+DT"@Zm\NH<ou_P]MSSJN5bF[`0PM^i\_2-Flk3/&9H%ZMO1G3c;oo$5UU3M
%@\<]d$t*>ZQj/?>bG7+jIDk0;R#4tmWT$=b*(-+8b#=8<'INC)VALkhnAUoo\1M:aFdD$!oHtH<iaujm-Rf81""rp[`Sbn>f'Yk%
%gaoJf%)jW?`g*'f(rqE;M/LI&A4Ag'i;CM]c^,OA`3:_!kF^Fa8^ir:O:ui_:HC?f,4%j9>c<K^@be:G'*C:LqJ4-N="F'Un.O>?
%b:fEQ(_h!XCDDZK+O+;d=&rcU%&u'&;aZ*PU$H?'&ei;Qq6"ou`sE-EOdMOOi%((S\5q]7^@2^Ne!j*&N3G6;42s_uMlU:W?/QZ(
%=V\?bD00VlE[p'q;f5)g%F0o$I-,l(,"CZ!i($C,%#0b])PhoU/$.jV6;0QPei.>/Sk26pYiG&i8Ql)-X,3<S>Fg<^=!H\>0akI,
%Ht-gg@?uPIbu2c[AeMF!q_42rE'MY/_^NMX@g2T\WnR,_Yp`Op0l'kM@;r/SHl:7Lj4:Q7,6IcqUr+=C`[^)?_`5(s91BP5bYltI
%j"QYr@)d0&@Er%U]dT"N*1lDL;(ROrb1VNgo-3LeP7;$na.c##Rqij$G8LW]2%1\hDVJS7<?J"?\.B+el@H5)4N#N#9UlsE0`I)n
%EFB`&9(:aY_arFrE-I2u<gAd0_CuBA-^j3J*$_`Mr5-f1oh$hF$]Y(c`[qTM+m+PY$\OfN]He;*@H9YPKU#XVcq6P`SQE>T^(_Ae
%@H&hu)Q^fk4;a&+ePkGhL?Zi0$kc25fpks-NW\_#(kod,b/o&Y'F&<Te/X.YAGg6qpk3Y2ea?*YS<q\$31Fm<&>O:Qj.+Q#9Z#FA
%&S'ROKTX3-C$.Uq`;m%W)I_^pZ?!9m&9m4M#^5,Yei>Y+4ECdPUOk8S5s.)b@Ufs53"jBF@h=sR9<o-U&FR+B#CS;q!4C[g#9V++
%(Z`D55oSOpLLsJgeA9.<(X0^?7<S2++&m_+emMZP]a&7*d$mH_7+@[<8n[*L)%>M3X;etmN.aahRkT(9:XbR^fWa7.(Q9Q2)I1,3
%E.jR3(HGKC<2U(8UQRQ70EU'Vh%NZT:`U95_-Ip(K-o630.aplFHYRYYlUX""og&hV%Z::2T*P(R.&r9_/Xkb#Blfi"/E^>r<>?f
%%Clj,n7!HN"ue67#%5e;2=NnU>%d:n?3V%bWIYS+!]:3?n3N.?R9+-2bZEo32K%HFj0Hg6CZN89$]%`lOoqI!Q7s-<#)4.!7Sj1C
%0\tHJ)&SU$!95"QY`'Od`o%#t5@3bkJ[*PXOb+>C+MteR?j2;9?sr*5$HtZnVfejJ0X,UK,(P=e#6Q&lUqk,PQ8U,[@>'&($&me:
%R9)jc`2F9SE^F/AHJm0f+#(&6(qqVE^fYR67QMJB=;Y-gjn1nF6^;]R!m\60QVddiig\F%M?:RJ/Ct7A0KL\#":m2Lh9*oO!7[l3
%UGE93$o]l33=@NI[Gn_SL^p('JiabY?l(j-E8`^m.4B`B<_-J9K#.U(Kjj!E^d'A73BI0nr_C>Y1]MBu#b0<C(9;G!p0Zn\M4cn0
%i/t#Yfb!3C"b?ZAArZX'Pesg%cHO&-:S<9/p_OhZoc;?BgCQrla_0U?)Z+(RRJ/lWs8)8>pc!jqr7eGte.oX2pL`j%K+X/&ij1H.
%YASG;;XjZ4ieNJZT)KPq&o1V3,)C^^YZCrG3UncVOc[nGJ$G=Yf@qhG0?)$mhA&S?Z:ArM3q7,tH">*B`4l:d/7\L`1Z>'f[<[6N
%R;(OJrh@<c8D\-p^Im6qXD+,r+jqV045O=B_3_]apD7HX#4e;YQW1C<Prmi0MRi\PoD[`6k3/<.QiGHK^SCa-[bjt@m4TQ#cF%A9
%q57bQg)ON=27fW%g0Z2C3(TS5QQM$2F;NY<A?(l0fP#d)Xq#@7la4Df"G#XEd/GdfQhtCn--[u3/=cC"gBT8V3mXnB\AE(;B$aY0
%ED$Ncs.&bKSV$:ib5.U5dgA/%02Yp+p/ffR(3*P/hm*1O<#/In)^_c)iU<k_OJM.9Tj[gF>:quodU.Yr29tQi^Pji>G";DP7%MUR
%A,U!68?&PIolnNm\KT7PobTG"V$6$8pa:,$S+7B-POV*qN5(H0<T\tLCt@A'qaF$LAA?;GkQn=u#/.C"`9;[?+C&riFMDVES8bpo
%Q'=ZkaF988d'Afjf.UTqLS;SPEhC;+Co1PZkM5K]IOBNgc13s@A."K,Akg:Vj7l(AHL#9Dr%^1.iPt4=I&$m7^8(Jb;s,BBNaI6!
%:<;'UY%Znf6Lh[p-IW6L&I2g[_$GL0%-!d5^Fs,rU2bKdoKY4RfR:knMMUhkgc#fSE:b:Ie\Jho2KVU0Tml!dh3Ua9gGY)'W>'UX
%Ae0&l^+Cc*$bJ'%p]r?0].X>H_4!GS!BfEN]<C@Hl3MQ?:!bkfDm^8hfOll(^:8%J#3"p_X>3*cWO)K];5W?/2RtJbVoW&'Vl=,>
%G$s#A].`%L$O4rL^6HLO0R@)<m1J].H=$rF]"$,a6L(Yf?#/8OZHG;B0*TQ`SEYHYg`3F$]e=SRJM(nj?YC,J=''iX`H$RP_2)IO
%N$Y1;n!gU/9.g@^OOE<2JmX4ZC9sU;)On*=pjF<][Gh%t'Hfg-r4Wl\Tt_0:6B`pDYn?p!4q('I94Ab)4UrKS+o$bUQ,?AdS&jDh
%8eCnu!8W!1pf6Q`_=5X.=FFll^CZKTs2+9K4Y5Nq3lA.eKqP;K)1K+TCfY6-B)'p$e63<9?gL.u-/BGf'0.h5Q$5%^''R"u$B!_?
%NHEi%IX00-IAZe9[,tck<P3S-4G&a@=""!^0`3Cc4DDBZ8.oh+['VNM%)7\u53A-hQhFe0WqmF2MG4dumPr6?l3,2rG3/LQ3#,rq
%--%Ya[X9+0?[^c+cHYmK@fHb0pgmg(#?<,Z<5VDf>pt0lTPBEG`@i$C=qFI!$O_d`QPYNd@^ES%ppMO=E-)1dA,+$d(u2X[_XIqp
%^/5[c__9#3l_SHQhpflh\ha2h8;O.91]2:^2,+c(__7!nh(mp,n=)NL*t5oK%)^,LOQiatIrYjgB/-#3%)9q8O]jI:6Li485Fg\6
%LV`=YL0mP-N1JoD]s"/p^L[+nJ.'t_iKjlKW>$l*TQ:t+]JKJcT[t^30<RgZ?"`ro/3-<6r*o1U7_eHi1=OiE%t7l_8Q,ue?>-::
%!SC-:$[$*-:("fkK_JmX^E(J[-s(k)#S/0>S_Af9*bG'LkSQeORG=.@&o&8OTff-cTT-#^%\YI,beAKn6@kYe_oR+_ZPP\21UD)\
%od*2t>V6-*Oo+.kR=9O\oaR>:qG(7dSZ`hL[W$.<XM1HDPWB^#e$O2mqXL!%2e9ql/,)8YAhcd4H0G7&-U-F%.`;(0kFnp%l$RK0
%Q[3*3`CY0tNQlYcf#>aYkFj-r_W<jqK-R;b*<lRg-=9S'+>[s[ng1>P/]$Jj@jO6J":Oa;U`D'=^(=c/4,GVN0kd)p(I<&(r15?b
%a'm(eU[T;422sEe1+]$GQ,"3(4l![@pL4K(K\ZBMLN!*0VXF[?=')+j%10pJW]eFMHWFPPRCee@AN=?\)s<:ld[5BtVUT^+]7=@B
%GHCEP]Y2Ci+sX7t^#0k4mF$]rQ^C:mo,;<r1<-oMTlTi:F"K&0^"iLN'tDE=gW`N7_Hu"&=RRnj]t>5%RMfCL2m:W^H:bpW&Cd,L
%QdosjSAs+&RQ)FTN2h)GEan<nh+Na+f67on@Wi\d0A&E!huHL?E2%QOhZ^k<ReK.s$SWJ>*H/=KGWA,E)9%\R3tq69bMdJj?6".>
%-7_=L1h=RZSeo8?CqQS,"hGfGHY;LFh([@DKq&s%'*k.!\U!/IEoRY1T(_2#1N1?nQksR!SO>=9M5S73U#fS"[H"@$E9hUe>!kQ:
%-%_`fR?\Rdh-N?V@K`F4)6CLC<k/("=a<S!`Jo3"%QPM7A$!=Z6$E8a.k_Z"L5MOe(D^^c*_2Mr_McFS^Mrb\m=J@)S@lM46X+8Q
%2!g-7/@rH$!]ENs2o#TVk(R[oi_V<C#E3]bjAcR4cf!l<JEkE?Gq%Z`#A6e<RVBE[j5_Ku"Uo)-jF(L94GF=:;f_Fa=GNW,$R[U(
%bT[rQYD2Q;#RXlBk#`+>k2^+/"gAm-j<\^K]2qba<HW+_.!b@Ho_tDE2`sd;AOV93/1;<,?JQGs/KIa[;LmN)&O,P"euY5%TlGQA
%-*P>WPjgWt[\'+*ikid[#StFX1\*<@!8l$=Go7mD>&n'4%F``BGrZuVe=b"e[#'o)4#?H!V:kR^?i]%$H-)3Mj`P"m--EqOiN(CN
%O;0d8@,t<;OM%`T]L4pr]9"rARt4%AjMe$mj)e_j7?%Ye;lA\FR2*98[JlNi9jR".JZS,t+)-&=VM02411!GLWg6Ct11!FLqTQdq
%)dli^j/%8f>+KGZ-mY.N658*K1\+fVf2=J5fQ\8HCa>X[qC23-#dtTk08!CV?28^Wm:#[`dIDf4CQUAC5pNHOd5:hLj$a8Sh,M#h
%8XY]mMAKh#ZWr?3+Y0@[;-Z>dc0>]YhI6$86Gj1q*V'`\_M^eJCZ$JN5cJ1c^2WQOgU>-OGR"k[\HN'g+utI=>R5S0"^@OI\&6-H
%;Xj-uMsXg6G<tdfRM)CQm1qO#p0FsjN@X`U2i.S#7B(JmUH6]4gF^m!U##+U+65l*fUrA@+(sEKXV]e9I$<u=s(WhHN,t=Cl=gIa
%DDeBEKlNH0J2Mpt(L'ESo]1D3+;/PeNc,`j.&ON'mD:6dL/cI,MdmUo(U@>>?kD1=Y$I^,O;i5?>u8Gi/'fgT6kS6uRb`_pdbra]
%('boTKjkib`9s.((Dn43D4E!j(a%e[gP,C(C-KT#FdqeZH9+Q6HsX@+;+aWO\e0I7$OJl#/uiXlffg)8K!YUrEaIR6RfbaS/h2J2
%&mna`+iGpP<o%AGNg&bf:5Y2*71'o_G=;+_;ATYb@19cP=hq"5FShS&J:m$]Df(0=n;o>ASPL&%[@lHhd-7]D!=0&L0&)f9a`IPd
%-GSE*9G^$o?0BXI:!ot,V$d\iJph8Y?%TIg$R4D<+`unp`N`buG]]>j3"3#K2!D,9\C'N7ed5kg(D^<+0@mF3FI/+=3f3:13:_bj
%(Kh%b-6C?*auSom>\27(q9#C(l-rGoQ*c4oVJ-3h/jnkWD_EBIgaX>L7OQU&]$IUQPNYnp38^,lGB_WOTFX(\N+-GIA^LR2*>]Js
%Qo[Dj1h-a5*=*!bd>`PDKgh=D)Y[8N]*scOP1/VYZ0ZX1lpmr#?'affZKNLnHPeIVe06*N?G&RrBGo7^b+OYrK#;b!e%3'N>C7<<
%0$[r^k<bfab0?[S2q`8=;rB\c/n8s]Z!YRn[5+K=;a]p+KcqQ)\NA2\VU)(J:L&J"kL*jL&YQDl11Jn<Zu0sC12ba"'b4>2E#,P]
%L^50?^e[be\esM==r]Bj/_G+ni?#]Lp0=3*Z63Z'jb%'R1%sB^^9HcUS;[lhZfc'do2ri#bG6%L/'dLlN50N#^u5j;6U@cuSkF,B
%?g,@u91'*>6tah7&qG+,%PU'T=F"?$j^",ajLHhM5tJo8F'5sP/UJYeV3J=BaE&f'[P@>XC-!&(>f^u#+6).J4;WU.=mG(Y&.i6!
%@F(cs>*L.]ap][,pleIF9=6K38%%T&l)s%%3INML3GTD#5$'P4H!TZU8^r=)\=>`ae*ndiIkHle<&YWm>dC2*"mi1j"RRAl2U7qq
%aT^4,Rm374$WMI5IkCmnq/UV)m&'EgBDPjYq"1*rI4g?X=eKI#\S/h2FJ7"a5(f?Z4+/aQJ;cKA-i-sa%_3/7K$fOFoOnG="7)Zp
%kTUPT_/^^GKs["SPQ\SU?_RS[%(\tI0a)W-cm8c6Hrjt-Kn*d,1[%^:K^4=XQ^gTH_pr!4Pp@gRF*SPEIa7l%WL7Vdr4+3`VGlLP
%\[im\KftdU[&!CLOc6s9WeQ/oT7i1I!T1Yrk<c0b1\TTl;P:=I4dQ5'@kR,YOB-aJB?t-F^&_`iA^<s4Tf7<NP*=C<cCTs_944=>
%kD%p3T=^phTSr4Uhf*2_6kjbr<ruYQF_RgDZYU,5'Bj>MR6W^,:8"(IPQiqc#]sQa?79o`SR%^NQNc!^UH=)\dq`)Z^G^%m;Rgnq
%U!)L8r#4bFAVLVEjpQqsLHU#gEp0fr)_!2qd,eWnM-`_p8M:9Hg.?CS/C`KWh18(0#da"gU._N+,:T?tkZ#ssbah.gPKWOPkFG!j
%XU$0!`F28_d7JF'(`$6-V94lT;rB4<'\GUXAFQ>Od#RC*nmkJV)N-4h^e@roM_:*8X;JUUki.4F/C7OAabVWm,?_>9&r)-@q8/k!
%C]g2;VpU4oVhn]WdD[6h2IKT)?&2)?*&P6ki6qgg/g\Hu?"e?5A"?)ib(0cl+7"0B7Mc]W`6L3NZqZs_2&]b`LlH!N&%PhnP!dme
%9VWQDT[DkA[;:%krK;D6gjJTXUC4=:0;HpKJDl-Rd:EuFSXaD9.H[OK)I;H5)b-p0lkTjNh6&<?6j+,Pi%2H)Y#'TNN@r<pZ>Ik#
%Blk46AnAI#kgH,.-[o;q!'^4H7[K^mZ%^@d$:1C*Jd[A%Q5Zk;[OLa;F?'i'f]GDL(Vgq@np$ZAFL=(m"bA:bI<o\STA*B#>j6=A
%`\N-/[k!n0aE+95"]t+s&IrBp<=7*P-.0Q!4+4``1NDh.0Cn@t_5]"ubr%'<Pr3bh3lG-AZ'gKT^"@d3fhqi`c<Oc$Ol&%A>_L]?
%m;t,;Ck/\s@kNG=!M(n\Z+siR>qYCKYZbDdEe-a4[$6a8i`J!78sYBFe<sUPElgA$SbA!l(PmDHT=?u;V#8)obBs^LC1U<FR[h@h
%<qHU)^r8lgilM@Q#c(J#Cs,`<mj,H?F2RZ,6S@^7,_)=,Q[A9D-2;IG2Ma']PodCO?6\$A!ImTV2ekZ%5`"AkNXI::/Eb#)[Wt/X
%j-HF<X=H/G=iAFF(`,bI7+H_(+<AaE0[@&8FW%F'=E,3n>9ug[&HnbfI-/@9gnSaV>ZBPCqQ*5VDLeu"+"i3L9Gnj':*LP/fPi^6
%ZE@`Jc+mN.L"gER6Dq\;^(?j&E.O?ao\PCC!T?:/b^"/9;.=QPBQ+Q,AZj9[E.KfIRfaHaZLF88'Y)65k8FK53!9nMoAAOIN5>u&
%/RUWm[^fnq-MHcl_qAsZ.a(Ep]?,!]O=3S<mT[=,c6J7%,$:7T?c)3s,/U6WQ:r&JSR,suhKGYV\Bs)UgTnXuDnWU58T25'.9niN
%\Z8/u6$XCQZGq,nXK)07GRGd+<\@("6=AiN<h8[pEF1-M$f*B@3mnADgLaY_3SA7*#j-j,(.,qjSE^l;*O++bkn[>m`dA`FH*spZ
%kIH;k"hVcgDG_!Hmmq>QNrZW*3,ZQbJpCl@[s/8t?PeH$#e=`.&_qs]'4H7N[k3nj\a\?7@?&ajiYZYXUUS2cJd`H=>J(RcX%mP:
%]&=on[&"Va_1gSY2,LB0e$>-GW+%-_7?&%Zie?!M`=E7,&)RU]6NGDHMkk&/=&.Ld#(gpMiY]L+VmODtZHsCWgK`;)$UWT_"%`6(
%)\p^?SLlTJ<`3OGm"lii-aP+Z@C@\QD8ShR7uaN-XIZR>S]MY0-U]%/9X]jjpLt;o<XlSCO6t<-+0IH/9uH;5@[h1.2%nZCGj,Tk
%Xk!rWTWjt,c'uOmOt#FO^_Y]=,el;;g8QA+`a1_A1N^ZCX0A4hXrR_t1$72+ohefQg9,fJ6!S30f\ikXM#!XNQJme6=_i.k$-l^b
%>Z8DtX@:?[SLA8.DRho`1"I!+;sjp,Mcr-d=.=("G.Ll.6FV8PWs'!/O5R$lmm27dVlK,fCN;pF/)R#N@&e(&,pk"><PPHo.oEF#
%.H'Y4;(Vj7[Y)%5>n3/)Wr]f"C74I-.Q-erF=?IiYou7bNIQ?A)`i,/WuFa?!%qXb3DlpM<]Nr-P%fT"SnVrufu(aKQ<I7H_jkk4
%g1L#6(QMZIW24`9j&09heer4B4S6tSqe2:IGCE_+/.qGsH<TmHoQk)HD-#TZ_.aH[5pJGT/8/$7?acqJB8Y1iL%)eO*ji]r>X38s
%0>+Y'%OIM(3e?=e\SafO6/ma,WXC=/,3W,LSWjn45n'Ag,:)lBkdjU=cDdCd;ppheFcPCK"]Gr_N=-m]U3J@^>hGr@?(I&-O"YU^
%/p'#*@I(/(bQ<D(Qh8-`$Nqn'.jgcX,Iu)f)olS8=r041/a7?>$6%XG'XVjgT`pC`.Q&f/KOC07B\>CZaZ-3qQCVj5VT!As5W]CF
%j*\0Ml:"M&O_.G"!_VYJZ\TiH:G?:N"`1C.hI`7,(.#U-Yt9[0Gas,bcSB*XZn(r'!c=<5c947+pEf!oS[P$_KmK%Nd^kroQ5Nfd
%X6$A&$uK/ahHB#8En]2,D.=]$SXhY`YGAM_)9)r$c<3ut+q*Y"ZT-5KU>Cj8'W)LrZO9NjdEBCR7+Dbu[gV$Yg:PM4oSmCq]fXmu
%lX!K$Em93/.;S5%bPJT-e<spHH%T1mfr8dk5r6..l#E"l<i4PV3ZEuN2IRB2)TODsM3X9"0oK5*B&p=g@MU[h/o$gC9<0n>@!;9a
%k*MX1gba?1BuqDDPP$AS+dWA.;o9);/j#92_4Z`-eX5;Je?\"6+mYdoOn)YE=-dOaZ0l::_)0$5T<l\'HGmsg8`qdf?*tV:k&Kb)
%>p[0G1r:>nZ6IXfedJ0f[hs/tb4`_'9s%e`"D:?[/Q>KuDL=E0BaV>5NqS0(Q=(Xi1M6dN2GUPJ6_mn>fTf;L8:.J>2F:Q`o.=j9
%<sp+i[fG0^9Ve(SZ-M#!FE0dE/ub/2^N.FS"#pFK/95PT+Ef)7_NpR54u:;)YmKm>M.GjQ=Xt3:P-!)Pb^oaY_,RZu^tRk<'o3S]
%Z>a#)-?j'aX`2rlhJXA8XXc=?fkU#p$\^-T8^oi2"JBD!S3cl*S9b%[%Al?DaSp&cZJ;R?3C%7`=>B829E5-.#eT6q'MT(Zd\L=&
%kc+["/Bd-3RaZ<L,Yuua9S6"1AUnm`:QENkG,&mU_=hQR.1OD";Cm37.'o&Q'-;Bj*AU`dD,7_%#`<2`:m=Z6Knm9c3n&?22*,#p
%mAD?TO&_CTq1-F#j%3A^a\.05-ojjoidaP9#6:rD4-;>pAH&QF/WgR%L+*Z*jA+`=#2:]#KC+g\cLW=,)ECFNX]d4%U^dGPg_gE]
%P"qnfCmqHN!Wq,r"?nI]qb9#c6k"I_V@;qq\61<?%.K&Q!+3<)181ZA`5$#)\)MoGJ6Rk:.e6O<072m<haFdBqtp-Zq4.1%Q6g#s
%3FII#"9sLp2R!Q^O<rQqQ6dct)pYM!?,*E)R;j58JQ5h.F.[MmX!`!bL[#6(!g*K1?C^mp'UB>$MGl]*)rQFop11D$[+7EAcq$E=
%Pkl<:=QF,3nWdKSp@-%HSB0+.PE71XX5T@;]SBJcL-$u=CpWFE&jln!TN^STjP`NR3%<gKaNmC'OiGL_:,/@_M*NP<FCa]X,e4a%
%<F.4X>"bDU_B<h\Z<EF[08"-dp:[:8p*qDKH_Q<LauI5:O6KS/=<]t`!;N$K17BO&>=[M*%k`$c=E9a,mrC=mR'NfV+rKoOV)=LI
%p2*B)6rm&?_,(H=Q085k.o;(hn<\2JPC]Sa%dN]FjV\bXl1c)7512bE*cI[8(,G(5P)(0=dp1?Idu\4<\5&0s>7ub>j?Xb-la=e[
%#tSc#d#0</A$-)c1DQ!,gd>I@QFtZ)rJ?CT;g:o*5RAkX4bP026puk@T;N5A;Z9TL]DR4OM^ni8]VdY2S#Nt6YsnlQ6caNq\WW&`
%'?#keA9'8]$[1uro,Wd!"M0\I3K4sd+?6LN3?5RN$*F<K4k4OOc%37fn=>VCj+WA\d=IlTCElHE6;iuN>cMDp7!4`U1L0oKUl2-5
%)=4"b-jEj)Uo?O*Imj,BEjDGj\RHbA5($[I$DJ2r<ApP<<)>1W:9Gj-LY8*N2#(uC<9R-0G*.tDji[fa=g$cjA%dns`1]qh44j/3
%+FjhUN'=Vn#"%cN0$c/elcG$JUhjD"<k@im3\UZ571>4+Q-=d*`o1.N0VN!'?u:QrN(f#3a/:5J?nWdt2fc@BMrA9Qa51"n;FFNZ
%(tKYsZ%Y,,/EV+*8N8Y^a-7ORe7013;?7pm*?Cc6V1J-R8EL*Z!_Q_+U<6[%0j0%H)]K>#QC)(MK9mLYrbNhiU\lT4`@tm)bYEZY
%44#;V)@^u<_;1&BI(OGuX="&)\X3SE_usf0$"l250.CgAfOsQ.%D]R`;4Brjbt3^*4`o"<ZrAl"61EscLuKmLWhIlr-53&n&V#*j
%P`Uq[`e)6U!86mP)-i#[R@.7ob+un'*%:5:Q>e^D1K)6U`1f;i!d5W^&i*N3=Wg&1@e#bg&dmfP^kX:m"Y)eZ$$la="Af.6"V!^M
%6P)fHJP0N`S6CPEI!LN?*_Hg%ABoo&9Nt-*#X!o2DoR/2$lOo/KeNgWdmRZblW3:]G$2U9%8-+=i@:_hAIAQTVKEW7AI'=kOlR]Z
%F/2rg,IMbo0q;)b`F4leO?/U5=P>&+rOaDnkSu&V"G05W.7[n[aD4`Vq:K?:SmJGEY;h?MS?Ik@46EIO^cM%=E?6)K&\0EV">7,,
%.;db_66)b:;G>(h`)aS\`CZH6dMti$_F_t5--h]jAdGF/I<N/e(Ns>^qEhilf7RjbTu=oZJ4o8f&%6)oGD'E:.Eol4M+S=+LH=q)
%VPp4K[[plh+PA2H!h>+Gob[b(n5jZW#ug`&/<-;*9IT6k7(\-(I%Z>9.51u5YD@"X=Eh5FPLWJFGW;cJl3Nf+I=\IC7"]e>?k/@5
%P)n@>k&jV:&uRH6@FtjKfI-T6YUN4D'63>(IMFi@-LB!.r4'CYH/`i^Modn^\9L1bCtqJdcJ`ae$/iq5R?O$F>g6TtblAsEiFd-%
%-aEb!S-YGPKMb=.SJu$4,S]LkV=<&<F"bo"!&6)=UXu4]3LKbt_%q"X)9)bUVB)b)8E20I*lM%!V1b@-"?<r8LV-N)cI5lpV(R^U
%*q*1';TU[<!.N)2$f2++@ppb.4A!L%N9irHk'!ZUFV<*?Es^EALQsj/'OG7E6dOmhi2ZDlnTf!p"Fh4BEcca=4R'>r_icV[VCrh2
%@dsQ`koK7+$F:RpMFhPj.1q27^dd"Y,,J5VAf9oZFDOS(]SpW3gY=L5fSVq)%X=!8hukD57cW-(:?F3j<WRg(!*Mc,17jl51j)eY
%VT9^'.?s$ibjcRoa#R=;89#u=6k@'6T,$EbPo/IKj%.6B[?tV?E*J"-+2Ze::;Yfp?SnC_%`j?S(9mOTX;Jm/*D@VLA1K>_61Ic$
%%Y]AQ^;;.*!9sc1@=2=un8*\j+b4MpO%Y!C^qH*B-/MpJBd@I@Hl(F.OPQ&XSr^@b,sI*LbE]M<64'@KKbf>>1Vb8$^7[#H8r3t(
%Q1M;=E^GDK"j1@V_@A;@V3Zj&kQ\X1O.b0ePHu:CKSCYL6b[9YShutER1m8aBuGJA5-#tAJ:Lr61R`iI!2Ad'dI<$dQbpq&joN,B
%W?fPe4WN"+gSL&rMfX$iLOu4M8oSsI0:K"p6t(_@%aY*,K-V_5>Uh:+;Mei="ql*gW.TYReAsM-Vck:DD1!<d&1E-e6Zh<]@mb=e
%Es7B=jJu5gnL0MmiPggM".K:X%Q@M5K:'PM;$*<k`K%g5O"Q-t$?VVNWjs*saRh/7^(WM^P2$7CD(h3NhaGMi`tgX21MA=;n^8/E
%GRA,7s"a,q"&Vtt-QoI_a.\U%*6Q:ZE"i_u<N4$\;%FQ5^jjEFq>D9AP6\9:42k;)99h-[<.D-DgIjPEJj_k7JbEY#6$@q<ckh*Q
%Q-e-Hoq&GgS.@YgVg%o*?q*OLN$k>2JhUUL,[1Zo"MA:(asJnle6^&(+#@QLmP-i`W7^VWn-7Eu$P-';LT!Th#<6/G/,=^JaE(`Z
%>T)\F4HXk$3Wf?#HkIidG;nY[%U0O!7!!SUSO;K5_;#<ge,@o>*.dV?0$Q'dK)9lRm0tX"@<B.A/$LB_c-n&j31D^Z5sbF7!cgt.
%,:e7YBctDMA1R3':;t-@`6f\h4a<+)Rlk^IUk'uZeB%JTg,qAhHGXgrB[^?)Ls/;fJdn62s+.uZ4CA"e4ITnZ4Wkr'F=h+O^`_\5
%8Z"ME;H@Xr,XX^b-*W6#"<NpElK.Vkpl>&?Ghs7>"IortE92"1-LH`KJ@uM7O9]u%dS/!fVnVgd3N,h;YXFWi(AeKKPPAZF7Qif1
%ph5qsRloR0CLRdY`*3B0p.<6i.YLiaL;Xn5&1*1R,oGqra\p!<!uSCpF@Y+Hiihc95U-F[Q-`-_VM=BcJqkPfM');#5ntPjnGCWe
%iWD\FL,MZ,Pc-hCoLKVT;(N8m-0ZN0$@*>+a1-kg1#RF.#ifTb/$J1@Ju0[R7uBA%?s\#e"dsr[j,DY$.GHuSNCZq)!C`$G3p]g@
%,tXa^#?6Y'%>m`@:*lFuL!oCNK,#,/e70q!h<[b(0W>m-8)0$X/#WSK/07FOKj:?9A0-o?ON2:tZ9]L7q]M.I#6]Ctp`/R<B]lKa
%&\9S%MC+;glMsNV$6VHq?9UoG<"Q+G:PGkZVgq1>0aMD)_)")^4>'6^=[aX!(M$UaKo8Qs/4;W3P;s<Y^*E%t.'\%>4@aGKHf0_!
%XH3oH>r]BR/%ZP1FKE35Uu.3^Q2rrrE`thY8g#WPrD4-6d,R0_XqBKqbNX_Z&9/hW?eL&H+I+OL*1.p\mn).fdp@m@&eC]toW]U9
%;2L[P`931RU+Bpo+><BWaO1'@#RJD6DoWU.)8.ug;*8-W\Y[dV+^^'[>^T:BH3t8u1A*[ll[PTUaV9jS.#u*^3JB/VS0IH>*&3@K
%8XN4i.ZRpX83!=\pL:OVK'`T9\00`\4ZeC[m"<<5'?UXb5<lDndCOrb!^)\t(b0F#-]g@@\M3Np+V>J4-Y+J)rPWEA#[*AFooB_.
%]$TjP9%ZLg7,m)cHpg@g'M'Q]=6X!=:404bBG\6]&p$M*[65d59KXcoEjH2D3:rL!VIIpZ3*A(sV)5%e,NOLt2D/?9"Eb'F_qZ@Z
%)B8jB<7ZL$(OON%@T/LK+lj2+-rrL!dEJ^f`%;[eQ_4S^PN=#4Xr/Le7,g*e\2AV<&c$'9#?_3Y"_ae)-V&HPYYn3#6Ol1,kGV.#
%j)I*"&^>>]_<%/`Eh4Tr2$j\_"g'#-HRsL^8X/kkb]`%T".'bafR4%j-X#.*Ee1#!NbP7$lV(!k4?4'uipkrgmdn-Y1Eh^>b?\X;
%DfSIj5mpGQ1fOR6mI>]@T`-:G',G@encE)qW0i'Y1q.3J@"5827"O<[PSZY*%Y.G`Uj_r`_S(36pioFo;ci?CpWS.VE3b9c9gGo*
%j3A6K.#CQdR=elSXt'<2dcbtD`1]SGJ.IL+,pHoSau,pbNR\A5EIq^_.>M5-!?a]_+MjpF<S6)nZ:Q4O&eQ_&^nX&$W.pP$4oIJk
%o2<:?I'Md2nJ.m08MM!cE/Bhgb7HGM->G;8b9r.-*\X+tJW[MI+r%.3A3TN-V-UVu_r,/sP'deZSFP3@[P'OJi41$l?rKW\k.kKm
%2_<B6VK"COAs5NO;ko.u&k]I-L'#aFUEshNJ]]7,1<2c%Z:J#&&pm&t'`&8U(lYR@\V<j8*jQhQ_WL6XNY3,jmAYRj/Q^.,,?:c(
%ncB$M]*Hk>(*!k1#Bc=)i<S^`g&qqT?]nPh:J.;TTFrerp/4YI8'spGE07pcYnI6p5I>["a;m'M.gYL`gl-&5Ag$*V@AOYn%8mME
%V+3!XOq.QB(NIBeP-UamluWK_,PDOIptr>en"CB\H)M@rBm-?5M44O?9sA97eMU6$S"nQP.!K3r9-k+6cT<%n<6N0kQOA&Bd=)Zu
%G`G<[Ot)J,q69OH0H@qOPQVSAj4=nZ7*$13:#B,/%^^jdT!pE;EG2>hLjj-0`*ZKfY(RLR"s:`RW.%^_Dut&]ZLS,51Bp(,QjYgi
%q*A$n[PUC'7h1#G\MP!r5Ou(7SdVc0;=q2\/J1m:(5U0\I*\m#8rFM_THL2j((_Y1[6QiY.PP/^p`KV\,Tg\s!`!u[<Zmt!M_Q?T
%-ZLg3m5T(3Q9[<GnI&K>+T#RqiVWcSU)fF4ZXK"Q<3r^Wj3gp)+rJBgZe36WR7Qe%BjT&K87lI3>t7eR?*T3d"B9RhNi62l[Iacf
%F.msoBETmVd()u'U]WOWTja+9)lG&aB9:Al1Dd$>#:8rT#YBYe!B+cb-aG]`.eVd#j9gj%9W1dqP>;d-)f@4>B,;_I(=J(.d9M`L
%^ViZoq%I!jT3mp0U$,g67939';Wssu/-]MbQJ@R%G#2Hl3nHZke7OlE]dVVtI\ajf[:&!E!B$/DJ0%<F4'*D!!tir9JN;Er$Dq]I
%<5Q4-.e3+s8n%mpo-48m%@8pB[<>],N@6q>aW">,a\W]HU.n!!DeR8BOW8YR4iU"Nn1@?LK*W2b761:>"MWX_@Ye\fXr%Nl_X!%.
%MiDtW361k]-&?u1dZ"#9g++CBHU-^//6Z$4MZJP;DuO'\Y(%aQ.Is?_0olMs]0QpHEsmj@E(aX$$9?!6-e0A=4Sfl`<OfLD,MSO*
%OqL;,*Et6ue.(VRZ$>fSrrmYM0O)M`a$T3C]GgU/9$%mp7]KK0h>-H'^>O4'eW>Z-$>qM=PSB..m0@e#3^su;JhWMZ&rRIi\sgA_
%?f4Mq#HJ/mi`*QiO`r,e[54meKPlA$"i>LA3fg_[OSoGO:,%XuD<,_p/p>fC06-2eh)ORaKdBVSLK&f2cE8JsVNMX\)6+A2gpT1r
%\#7(XPu.Ah<5DB<\`t['&OoMKoFt1:BC\.ZT$Y]68d:V>Ura20ODQAX1!/#IIZ&<26uPH+$pi+&//m#N^1N3l0l5^&m"_%WAI/Pe
%X?:V/\,bX(Q(U^=KQiL'@g`Hr`ZS8ESDoXh0,+YF+LDZ%,Wf#aBI5u%"d0L_:4FX%Ysg1@rCAOs[%+5NN``qXYf6*>La$hjKC[KJ
%`2grq2('#IBSen;!]pSK=if6u`(n-=+:e4'a('k63hE53L(NR,d"KXu4)u#.?593YJHuYKAmYV1@&mhOF!)&!U".!aienEb[BP4l
%eV9MlP+D\-=:/,a/#]Wm4&chQ3F++QI>I$/=]BR\Q6ll&)";7$]a*f?QtC28R9DC&o8*'a<5\=G6O7SNjuT"nlu5SI,lg"C8g$Nb
%QOW87*Q\lu^DfD_/nIUNECt1+7^a%=@d$YJMR*AkeofNQpddbBeeqMsL$W_OdhNQ+ki!(G9F=ke/OG=a^mH*%.0H$*Z9LET17V29
%a7M)AKemucZ45$AUBmEmZ*o0<i39X=KVnqmT_,#-`oM(A<5L"]!Q_fPbtM-A^]BamjOA*a3-<*<QP<[s87E;q4VCCOQ,NCS#rc7@
%!lHEW?\dQN.\YCXHGU=*;PkjaQrunTX?3.A1o(DQK]I)QK$u4+?8<MjDG$%W+PHS5&kX>Za@WaJkm"s70'D-6oU7CF+5i05_\otb
%^6Clt7dM6KOWGW'p-M4NqP);e6X0Um(1g'@5T"?!@E,\]`!6:a9dB2iK]?_gjoP7Z_C^k>SCFg$/jsHM^m1lk^;M2L%bXE;(0)hY
%*k6@G6PJ?/i.Q;"N'^Z?-+oM_U85_>i`TuUMQrENJ[CU^JMA&G.eKY?R7]4rA^''FfIPnk6I%bc;%Q.T$UBiIn9G<c<0%tj5'ieO
%!N`8qo+Tp,66R]6*tX%gYSUJ7Ko-Hf*c(a=Z>maP.@,cA.cJUS5,0^sQ0]"oCO/6,=)`=a:[FEeACV?*k$q.6'b6E$AQpIq77^HE
%qGRd^5TNjX[3JC?38>I.1Rrq=M)@aB")g@Ea/mWhb8m.PR,TZrQp'u=,aB#9QD,1I4!KA:G]j?^K"FEj(p[3`*:F9%EdhTT54d<a
%"9=K2^m#ofr]Hcs!lYd"l=td276L\A;opm16&jr0$t#9eA+s-6!`]BYj=OYrMW7f$i5rm-1+'ib$6J\#HW/&"P.X.J,b],FguF>>
%Oa*6q5Mq9L?#Y!<Y2H+lq@1]]76Z.$*=,e06`4+@2R9=:MT`!!Kg`=A90IWO&2=pN?=\QXfe_MXT2Z)GdSt6C_>&SJ;"tlmLm9IJ
%kT>.#_Lea(k=etbn4]hfUBe4D^(R>Q]3]Qs7kBM<XG+ZRK]`ldH=ZFi=1$%paq4V*iPCGRI@e]88M3T9(QN#/7S2a"5_?!]n$Zg8
%L\3!^:HY?6i8bMDrlhrWGBbm_M'bupM4J[DLorp'O&-SW>tUs[ru;D<(i%2iL'$P<"tLp]TF@mAa_n%,C8?CiGttYST29MeSjt5V
%R#0cG@YkQ5&FX&8:KYX?Ii8isM-Y,gb/-/0emu8R8=i-<BYZ7f+_OJ00"5G=c0pU^L@g(&hh2^fA^GuD-QLX#Wh^I&0cME9+AjPW
%4Zq!bIR-19Ltp#7`2P"[j`W$Q/F_spZri\!":9J\h]=Zf4Omku&ip[U<nM5r6j0!8;j_4j6s5S<2a/1\TeYQ^GDgbj-taO=#EVTo
%1`[P_Bd\HufKk1N,l>e"_@AULAljDn>jS=cij$i9?i/lM3au-4`T[^U+fjTK[)eNR-^SmWgB4EC$-$F+Tq?%S_mp@k'eM_iUjDmc
%Q-<5OUE!#lY..`Q<1D#XNB(NA!;?,MieWVf0mIXsOq&'MTmUAN$ZKem\_3h;OeEU%15I8I9Fe>[q4YMjMd^OjLAK+NKQP9E<U+"e
%('.V!YYN[4@bl@g]]X;a>dN,S,ca`a(+.>:8HiFb]/#0fiksqVT1YDS._u/&OeeIG@/!G:dBV:+ZLGEKXFiR+?\6iEf!YnfB$m4'
%=V'MJ/_H7\;l"dQ'1aOcm)8Fkn-jXm;ZnKT(>E]YH/:uA"8G9@&e>>cbTPk;7NiIUD5B2mW:aUiSTFpQIZ&o4B+L4HRm['#9b&Yg
%-;SqZjHTBb,ls:LfpML[9e1?!T;XkD>RJ5\[VDZ*UPhrZ7gZB[WPSd5lif#FRA,F03BkDL[ZKio0jVaJ*b[F:+sBe9La$Z_-]uIb
%aZboc4KuskN\#iuP\u5GlkHOSD*/LbLPqZ6[\4Be_JUPYQO,[-,HN5QTFteDV9Ke0?@+,"o*I[4SX)kjgf"PPpa=IcE42PT-a?HA
%`%dX<&_'6X.NZQn[ueNYZN"rmG9!leMgH70eX51I3I;SSH%7pNicIZ1Fr[#Cm"hc-KVC0qT`IYHPF"GIS;&=g$*6IT:[BtVW:HB*
%"n_%V%m:Q0\H+XE$ZIR"9t<$D?jp5q?m6mu8_R#J<^MO$rAtTp^Kd\5)?NRp-A^["/gB>C(V&`5iT?lAaJ"J3L29:FCL`AO_@=VP
%:iNj+2V[4j8E1a(=[FX.E]gsm>aY'Zcs"<hEJG\A5+MKUfYJs!6p`EG-7BmH]iSW`KpEa,B3GG"pW)B?;26f77r%nTL0nA$B]q+V
%f3Ta%"SbIU&#'[f<^D3-UTbCmO$bJJalp;BDk3uO+DHY.!O4I4l7cTl$*:0[qgD'JXt.s0o`%lQ+D_;1Z%uIl?NMpTJJ0C=(<7X#
%6&Rs3R^Ei/1m!q8mNLG@ab(f!<Pi<s%2noKTks=U-TQ=*g.`.QlcDiZ`)<C.[V$V*6/nZ%YlT;ijKApZ7LC-S?%%\>85kgWAG&SA
%.9A'9K!3?DAMCnB+cTQfYUgQ#ZC!9okbpK%JXa`YK%GV#Y-.,dj/0?e2;AdI8s8r$\MOnR#a4r3"Vdt)e?O;`+UZ,]O%g1[TO`tU
%`Zr2/Ngae0Nd2dQ</I-'?1IW>99V$SGPk<dSV34[ciu"FE&FM2k_[Ch-1DT;,Vfdp_R7SqEek#9j-,T5+g(S4-*W,M3X\NaQGW/K
%+%cj[<*$@6f84s;4B?\RHtr2iAVJobkoah%DmZ#%bau[@Cr7uiFO-V$_pcjH(L*,7MF/c9'uPC=6f7YIDTGEuV+k??\lj"u60I;9
%jKeL`&'GV6K("3a5TgAnNte*O"._eLOd.?U=<&Yh&;(Pi;<WB5b9hM*_bYmL\G"/3"er*7M%fN#5s(5a:1B#'JX*aNEU^L[!9]U2
%?6&,9c[8,kGd;@Qq'Q/QVuT4/)\>n(As[6^+ajQ]LeZ,DSFKEXUg0T2PD<BWE!0+`@2WnS-KlaIf\B6-`^jVG>:dj(0%,-.Ug,7[
%.NAsZ#IocE$R?W0/at`Y#0G+L9;9ae2%J6eI,]0\W9-HC/-;&m5kBh&P'b'$>*)o*>DH=,.*McGZD18S=Qcu69uJiBB"*ucE,\3k
%-KcHf\gZ)b0Ou*3)FWQo6M1:/,)i6[T_EV`+A4!jLG_W>?6nZ`Y*6q.E@q6Dm;oFbCf%3,,_f^(f8tlU@J7QAO\=4rLPd5dOr8gm
%(TuiP5o#?'nkaCKd>[E$j/?KX:[k.[+jtoeG(ZbSZPO;Ta*0N"LeZ,.bf(?")/)PX+3**lREWYT,+2@NX"6BqM9qdO+Ag50"f&Z'
%fB]HgA<jg*C-p&IW4?a&iIqoWYU?[hp/7d+dpY]d#hT^HKo1=N"I_qhX02+_M*h0jYl\c)1&Or1*Sa*Bo9'H!Nb4S*@KW#=1qd?A
%4XAAfOr]L`$BE>[MAaL"P8)U5-6/*M?O:a]!M9Wh);1pAM$\VS5)+sRLBGPu`6Em$j=7STpPRZ#!/6X#-3MO["61*9ET`Ll85O9(
%@84&W0Bu'h\1X4I%#49(8LY5D1>EnC6k?rciLZ=A0[:#;S=MCQoE>m_qi)_dLW?ui9UD1j5Cpj`/K*N`,1'em`h4S9P$HC`'<Kk#
%IhR[Df:3M*J0oZK?#WF=ao-cZ!hMfEhZP>;@Nr;p3R>;<"Z$AeC([cN#_!uGCb((,2GkcSnNGj_b-$[<li8RA4b5BiV*YB\+FHR0
%UEn%U&kge(in_.r\CpqY&r>oj=(#28K(bFIWgS2GiTW-XMC3/7GRO(``@-]o<%qNY,4RF^fIZf0#EcM4+^,9IHEj>9P$Pt3a^M#F
%bTUd7K3fb,B;0q*:W0>jOXjp-`fO8pV_O]D77&;-"j1q\W%C%qa>]qeM-*f8fL!PJbTqbXC1G7RESfbB(00#>W#.Q#?Tg[<FlAaB
%M%7;:R-b[_dQm);8AD?RD((#O58(e1i+YX5DWhHt!j!!SPE[HrIo,hr,0_%W^d'S*Hn"<e3"e%`^F*+"A^G_\<k.E;'8U8F?AdMR
%2KY44Va<"u:i2iri/nssm\-oD6cdlKL+\_GNl4:G+rE=$lJZM016jKs%qOQa-8J'oKYZ1NoE`8gY_cT_&lP^E?pM\^,Zg,]iJN'2
%(&S]Q4==oXU^=_>VSD,&^bJ[`'9)Rd-I<5JmSm^H='X?*kUO#f9uoLWN&^DSGYu_P<dJ:i';F8[%UKAf(N)"L7[OP2KaqJC[RU-N
%1/e!aY/AO:!SYoqEXBdW\m[efQrEe=4JPK(>fe809Ku$qf&Sr&gW9L<V&"Wma]H"U&TsDP&FcupBY4LI8O<XZZ(?s#C08?pf8;#O
%+elk^f$F%t6rEag=CL5A\XS/J5f"M'AYD8I7>/p=3RSrrP4"iM;4p&^33&U7fMdXE_>7$kTOtl1&.%K=TK8S&4_<383(j+!isOR8
%,m5HYJ5t6P1"s^.%^2V:5r&ZPM9f$@l[\dWZCNtCCGhjkLqWn(+%ak-2RW(h8L56rK>9)NR]'=;0g=?S"%eA<-#<ntE[Nhm#.o2C
%>)ZdF%(:-PV1dmuC*Ku#QunQQe%.0JBH.?Q0p*4!_eL0t-3YM&[>hau&gG"G>P"[06&E.-,fgosYZ,^g30mZN.i.[)dEnUe`dB6R
%@&\hD*E83D,a>Ua(&rHsfTY,,$_UNg$'lsM]le<\2o%@?cGn@=:tj$dJ_@DeVO1$a(agH;K3UQM';mQN/g"mIck96fjfXP!<_mdj
%,pGj`8Jo9KTr8"!7-)RFD%g&@Qk2SBk_)8$D^X]pBT(8GCjkBH*ol@0OT?,&4Gm#iDg+u6Rhlf<`!&ck-]iYUImFB#$u&S1((`.k
%l&eqUhH_UF>4C%oc'?AHYlILsQk%^^OVt*Hg(S'Hleu9bi*i*IE!eGJTNV@pmIJH+b*tjW<\\"Lm3W@o1?.UF")l>=RcnZs@&3.(
%6Nu/e#2U%8!@_eXdA-1AUlpt5ES9(q&YCl,bc#':->Ia\KlQ<+SL]u)mNL8:ocPG_!CdK/l-M+Z:q.*kj^O1Yih_irAQ#,bMD1TY
%=Fj*I0j_@2hi#J(<$K9JQ0^Rt-4Rog3!)T?`B]#%>m/n)+*Nl)o6NrW6.p??)E;+I&?2Kk>%+"=WihbIB86"[Lkt1q:2d,%+qZ1>
%,.33Lko`P\AtoJ'mDoiqN'/We6NA?_H9PZQK3,O[l+$)F&-]!LcJBrMJ!6%5f`56i=(8en:":"#3'o,f4U,F>QlE?*/h+4s>3\F?
%KWoUKUKL7GMf;>1<0R@_X0n87OqJ/7elJU&LJG"J*X!ONUDY89IEZ0S&G?Y<gq>GFPiNhjRM9BPGW$^51)F&SE5HG0T)7N,JQt&\
%JM79.<p30sHR^7lP4U@XPgBf"VV94fG[`QHk!F$od$<CCYqX0/[YL*tjGY1,)Vc)TRCa(C4KsSCDai&u$s3*Je-DWt."g>4k7*0`
%(_jc9`6cVd&[qf$'c;$\A'>=$2K1@[j>5IZ0PAuNDA0$p+<C7DrbAoYCd>4Q-fU6kJila"f^0?li01H+M_8uQ4q$#B325ri9f[<f
%8]Vsn3G&ak3,1o$>Rd)c7.+Yn>WfOQd1.-g=3$?_k`L20EH>J0FEk44,M9\*nm&sp_QJ;H*_I)j*sa/G)raZPeTX[i>Q!nUh@s[Q
%3Ma1i:)&QIUjYVCJHF(fEUHtW3V"f.!i:E'pJ\?q.a=LQrHrg?R?N.0IV+.B:6DN4c[m.1bVdq<-(35%%o17NO?!JR0m6MUk+:YV
%[MX'8^uA;.R,^5o,B9CGUYEg)=e9S5]N"p>^j^uJ/&@b*9i/JP^mn:1-U-uD)8BE4%U"1)+@Zp#0+Z!:Y"14l8d/NB84HV&/gpQA
%QoYCm3?b(e*jb)$^t3*tU;%#QO.h@^LW*3Md9'"3NPJEF67rdk9?raEab?)?g7h8r#=H;H5NmA)mLZU`P9grsC'@UR3Q6uqT!-Xa
%pf;X]0k`SQnV'QS/>p^<T!-(Qr"TrljX<dN$s-3un<,K#Q&"@6=G2rpJ\l,S<DI9\cE&FqE]Q>&6?^Em]s(-7DFQ+:K^s%IjUm8Y
%(,=p8a2f'g4RKhea@;Im::n$R\F<0#_d4DlQ3(bI;[F+<7!U?4UdunpQ&;>eEf.Jf;qXLZp&al-b&il,SkVLmCl9&i\PfR^S3.:7
%*E-@0;bA0&W;"ZCR,\a0dk$nl%gtf[3?9nXc4_gU.N'KH9:dn-WsC#,Z]?cPEV]pr4S=C:9uba`E_mR/j@LU)NWR</UCi?!$QaRE
%?BR_sH(&]2Su%PodLKKid`@O["B_c-NLZ2c">!Y0`SOIWXjY:i"H]#qNSIOMgX=0B"F5J27ZIOnKhVoU4R;&]0QK4/6\V3fE]Pou
%^8SgkVt`_gONpOsV/SWJ;\V7_R;e74*_"An#c\\K30g_f//GC\ULC?O(-*,M3>+>-]tas,?5:<B]Ds-'PWC4-arsQ_c%]Mp.0p+F
%7g05[m3F[pGq-i79-@"DorlO@aJi,`4>^7UDd\GEVq8bE$M8=1%$&fG_T,Ra3`/--1_pFI!Bm#(>$/o,8Z8Nu!KU1O161r0mPlql
%ES+4VGaPL9-J3;W?!a1aLZ2)Ze8Z\!i:.-p-ZTOVjiB6u6WO"4E]b$uY=4IMJat9H*%9Kk31<s"j-gHYH/nD>KYLh72\(Ir/)d\-
%W/\`?X/p;=oYZ>\@#^?j$H#A2j5dB*7",o&5\fLZ=9]XVSBP#ioMs7_+A+'*)5hH#:jbqmbW&`n!`r[lbpl6AO%9HUed![\'ln4m
%9Xl&$>m)kl;fot,$uX5o!eLn-#8j@k+V,=HMj$#^6_X]::8/a/jTW6*(M.SaS1mC?3m/:'+ZX-Q>Ob<5aT*sa"gU)k!@;QZ`NKE1
%5o>5p`CUWV&mE)."!Zd2OrU\@=AV-eT0nK?2*i"FicJW2crZ@hoK4*1'bl[=N_Xg--r/>0$m.&iGZMt19YfLAiGao+:A,_e0+1H9
%?s1UG`5ru)5F)@BS7(FqL5HG<\&s?B8Oa0m%\?P96c#['Lc?,_F>%IV<5=0=4@5RN.73!8_\%NiMlfAJi`SR=+0L0f(*=Tt^/O:T
%@E8pL7<j'U=ilmK:3c>#!8nu9PO'7qRD9#E,G54M:]Z@#M3:S&_@6`u3TZ<`@Dh?368*tG'8$DWqoT<X"0n7/OPs0]F&RnR<8\,F
%!\.5SRs51aB]/s$Get"^;Z]8a.k@,$:(3E/UVb,Xb\OhP_?4?N.k!N!Ps1i'KEpeEUR6#+`VC,dN0V]?Xge?;-cZ5VJs?ohLo\*U
%K_l+;0+c!KFad1S32NS8\4m!W,A4.R6Y(R`09oLjM?il8=eg\'dq(`#-B"Chn]on"OMOM^'HsJM^u2pf/*FJ$";C8]Glu\!2Rl^p
%h[udV/jdB!-*9b4K6+'5F:1*7dn#U+'fdO!:3^2:"HPBiOa5lF=:L0JE/DlbB]'fLCgl7^(nlj=E1oj8-u]EsD[$7j.Ejr0!Jd`l
%nHXh`3C*"=p?:\<c[]lS"U92QPrH`U0`p-=bZI=7:W8i&"G!Q%^[f-Zr5mmSoI%:)$G3u!?L='WNG:e?@06TX',>L38,a9HTETg8
%*)iJL^MQ7;qe\ukqONMD6Wr9m7CmJ>^os^MQE;M)ZmC06"ZbMM/QCT9B-UaupT;?=5l4=8'G+4Xp.]0OpqnQHgO[pST\c+6/DYrL
%`L->C/;M$a=PjTtOT"5Wle;FQ'@&$.qjnt3T<P5Ip.Ze;hLl9DD\>tm8ZTZ[CQ[cQ<-"f:`!`M^3jHRjU875l1+p11d2[aI_64j=
%HrIP;UJPkF!"$bXX_;.#Ve9=/!V9"u'UoXKoBcP'YKdnIdT"9R#Z.1Aq`p1I)]p^he6fBR>&lk3HdW]Bhk&15/E,@X3&JMS^1f<3
%n#&;*S"*X^DGe'Umtl<pl/%(lB4oOQgtU:GKZa#^,ZV3?HW,Km=j7A,F>o([:p;l=%n,^K!<;%T1h6ck2p%6Ls!^2O"O/=L?Go)1
%\Jli[,1PA5CA8>8CEU>pRGR-TOkR+6#k2:#3$WbH&qabHhGaSIMuqA\=8ela]ZEeJ_;gFEV?Vha9buaq=F]=B0Q01@`C!ebegW85
%ng6"N/7;*@VSEa2""Bt6QqV12J`Mg^M4Z;XPdR0W=BeTEH"Ws?nd\UGdjrN:KHQkClEi6:bZ:=qc2!Z72Zn?C_[f?$Q/iDK7Kbgf
%8DZ1KTj+`HDlUn29I4u5LW?8u+F0^rnHI(qk2G_3QK7EW)E7;KOh>D@V1S*#$R6fg1WUMb-UN`7E\MmGBNgKV\T3#=0kB)pr22Xe
%b/cj)i+"I!6pTUJ$Y9s/J@n0<6JtH:jGdUkJJ@1)0,6tp`u@c3YQ5P"hJfRDE"A>0aea`\@l`DEJgjp^GZ->[?X&OLS8Ol?[2a+*
%).GjAJ`@33IGVPgj6_H)*2a[pRmner$l(bYnC<g9%\%tdC(-$jB$cbbb]A%RD8<Gd]ZFI%!JFB+hJdiHjemY!VIETg.`NF1E_tg(
%`g_D>&?V8=GiMCaeL8Gl[D5GSGZ+p5G=@HL2(Y%41?F'd]?mf5`Z#CeL_J*5]TI\HV\Q6?81hi#H,4`hRNi6r,0$,%EdjBA]Mgk"
%\T*?2VVI&Rd6,9-'r%*BGc0OqDZS^:TB#S31srKWn89ZGTO_)P2mi`,;N]j2&Q#LW#8eV,'t>O]DNKp-Nb#HbDUQ)toWRb%o#OCu
%&oH*SYGgYI\XO5EZUPmEi'_*-9C8UW0Q%9FDGgbWj$9$gco<58=de*e%1h5kJ_?#PHOaE*p+Z>fM$+Z*CSL%Ma9H3+gEuS>(/C_e
%d]n_0"[pI3i*8]Y2jGSE8pT67+4`M0Y+)$&TgUnE[gT)?LI9Q:PE>?J("^]WN#67a>W5UT1bC:7gOVnXnBDfh6<jgJp]Xn]'m%<g
%ijqtgqO6?R;;d;+>))?40uC10f8W9'(=#WY0T9_F?Rb!G8[6P1Wf$+3liof_o\<,;hVsrgdCKoCJk.!&F]/DI5@&9bkTgWqc1AMP
%K`Y@_2_qa-f<;i)"E/7L6Cueg&/pK'Ag&=`&-q<>UBK)b!j<OQ[;_R2?8qFBi>AN/DVD]^ij/XOAf"[]RL-2;'fjDrd5:K)7k,.`
%+o:+bUVq'D`Kc=30+P+8E47W22jL[N,/A(17,iT+T*`k`Ok:*P+1i$jZ((?i,j`Fdj<N)W-'FE6,Bi*H`G%jXM?rj[00'LR[SA,N
%WXHmc/l"62e`Vf&bfe(F.U`+$!SNIn2S]PGZCB/L!qGEZ['0:#$HR,1rWlVa+M4<Xj%h)EDB*_^YalrLiHrjP)I[g,5Fptn0Y:3!
%P9J9=7WBQ:?WIQS$k';\DEJVqOTf8S]DT8\8h5e>KWVs(g!.8/NoXTUaDQfp:_P7aS,+^IlA%X:=Y1fuYrN%:;NCO(kS=YM+PWMT
%]3/,H$L,Jq]3Une7[W"4d:/O":sQlG=^ZDO;d#JdAiF6h#U&iV9:IR9GRM`53^<gm3DFuk-RTCZ"gT)G3t.ndZC<_pBp9dQBuC&B
%A!,Sb(b-ORL[7LW(kC*c_&smH[UM[K6hKOM,'d_.CV:Q!fo6W3L)&Bio$ia_;:*IEH!WaZP9nX<>d9iO80JroV8=?0(QgMeJF#`[
%&tB96RiVU622ggu&o;qaA2b5*c=<!m-t2G;+M5/e7^kLcRiVo/VaYcmM%n6>9'dmg,3LT&"1qtR"mK3Ah5T&T/;ou55f?&)R,,$N
%p0fBrN#)/K&A+]&K9YrBDCTcso7c"U$:$[M>^$lmNpPG]+;0$^Klons2JKQi5Z^BRG9iU)/ZG4aFcL.eTc9a`m+@(#TPfjoP;Fda
%@\oJ!VqVt$38I`:E4Q]Y;hbU-S(Li5YW%X-N^H[]gM4Tn[ubK3:geBXV2XVu2(>4C\d?:Uj_Gpa%9g<7"*B`mRj6pGcV4SUNTBWb
%F<1('`H*ElAu'P:`0&GSJ9/c"5Y]qe`5(>ROb2^Bi!YjM!gsuYk($HVkX?2qg`1,\Yq,Ul4I2HD6+KrE2\cH.V?##/FNVbncC!Cl
%PBm/D9H$R4.uWJc!r*WKLtmZr6[Y[2\Ok$Q(:aLWA"C\$*]G8.,,*gZ]+o#iAYjA[UD4p_"W00j"_%s[!P4:GXFfFi"ftiWOLQMu
%*sd[l<54s89m@;:6sdZJ_`&<Ere/-_G'MR?#_Y:*_etUQN?mIsRN]0cNJ1C72n]bhNX>c(]G@W=b29)!`e'lYD(:'XT;QTX+OJ!7
%&QTdf)1+GpT+&DMZT'I\4'"G/Ejk?:;#kOTiict)gTdQ3YV^2(Wk^)kTPc->6ikqT.8Gd:\P;LJnFaj9\!\k;B#&75^`KPlm6mLN
%$G:4*`H%ceD2RY0"[d:a6l"n;\3+VtU1eKG:tRZH]jZ@'f!bOhJD/:@KsXQrS4HO0,(_CDD,Z"lSLT(\1#$e,Q&ORgh&%42?@!$d
%9uVJm;S=.,KgJe+,1%hQl=(g@9r/85<Qm@d^p1jf[S[:=aC2MkY@Y,O@^]3D93KCq*KN2IHQKJ0)Te*p$JEFWTpHM"%1#:p8F.mR
%L4i=/>p7sq+<W=g6FQDM'1pTB6+6;d&XtA6D2\uVTaKIB$0t.RODQ6NeQ/o+h+8m-6m153V5Ha4=oCn42DgLlQ5(Os-t_eG5djfO
%l,=N<)]D3V6-_j+Tb<!%P<u_B1WqQWZ;!;P%%%*+S,,D0\:q2Y*Kubnc#[/'@cS6>T&u5;`\pH9K$\7',M(Wc);D=BD(K1d9%^[?
%);>G%9t3fMfVXt?PFWo+Bc&T@9+fo('hYEK*jM9X^t,iD`iH\90I+Kc.&R,U4'*thD'XC]jZsL5<5MsZ"iN<T):/mB@bV(dguZmc
%c:1UT_H;$iLi"'Ii]/3=D7CF'@U_W>ds#EN>lh3)iHh/p.:\k,esLM3+mI(>="3^Ja[_@c;1dCH0cWiDd^<f!YU#j=CI<r3j]q?0
%:a0m+FBLt-Jhq26Y0Eg48.rQnmM.3FS&9kA=^DG[D<OENTg\_1o\H3^[!_6t;%@m^YYFXU)QjHX:83[U`G6^4aCU<R7b=Lo5=(=3
%9obmnUaTH:Z?@L0f#Y4ZYm(Ud=W?=X!M=%6^p@b.o3?,n+#.e*PV-o[OlJ"*`<]QO!MKMDN[;Z3AST6u]Om;["D!-3-qDdaKKrYK
%'rVTA%nDj5,^MqSln%_7$&]!.Sas-4?W@qpdfr@&c.*\*)]>d9O<cAo\k`g3*N>a@^sS/FY@Rg`iNjs+@jjdF)/MO\;maZ1!]if)
%BTpgTdn1M3JNE36&DCO9V<j*Gh)59NYUh:i4,@%?;?UZs^DDY0MrL7Sq[rk1q!:9E+U[jXnkfIU7H)q\A=(Aa6M)M.F)VPX9d.Xf
%\e&b&aP7nlB%+R'J[P_o2O/:oR)IpHZP=0rMS1?\/>g2CJ_?`MTNGND-omZ9QN=QuKOrnk9?PD;6s",#g#W0b9tWa6VFKK`$H`i9
%]t/6i.E7<F?0*foT`Q\XP9&q[VNbnC,@Br-R;JP()CS+?O\OS//C84S7%jbC'bT+EoWpSE<(?M+(uYhC-GM*V<9O)0'Q;5G(t#+U
%Tr)023d)Eu3BL$WVF%5L'TS`!:30uV.l4Mf`_OJr`0.B(YsVVI2APH91,(Tp/WP)36$9'%&Bi$>mke$FAQ\:EeoVa\`D..hW`8=a
%(%?Js2OSl9&4P.ei(BRJFk4Rk$0#:mMN)'n4qrnAJkbU/'ar!89`d(oJVm1@CfaLa2@s,r$jZLZ5]W>^Jci=*b3Y.?`MO9VD^cIV
%FYsN@JApYl;]91KCtQNH&h+Tc.1h)ScfGlaH'+<2#o4J7B20MGRD;RRR[Na94*.Yuj?S=7!Z!lZ?uQLm-Ir00U(o"u.R%90,^(XF
%\0YT_!Q+sBLn+m!Z,jgPoWTEK3:'V4ek3K-p(BjA!Y$)F%$7N,7H/81X/k6aF-aI$%ia[=c6+;nCn0eM.)TI\Wu=Q7B?%<5DAE0,
%MSmHgq0kfNL4&Eer[CpSbu/9.-t.R<XKa@KK\b^/fEc$HcniLHUZjKEon()i,m>8H>q(j?_-te\K`]odYXns*3+OCt_kpn8e#::O
%6n&IBMo1;!N_`Zj@7-sq]2EY$"M3O45Ghka#!Q;nLQ.YlrJZKu3YElUC"S5n_5a$'@AB&'!hj%t,a&9I#Zc%P<\"r"fFUV;M+d@6
%-mFdHQA/*[*19[>@H0'/$ho>+$%rM/m'Fp>6&Q'iapL7I*3VMbG@rL_0.VhKYhA)258AFqd)WZ5^#5XiSZf8N-kI=o3ikgT+>uJN
%lr#E#Cd@5E`J4GufgHLX-YEY%L@Ye%(EbUCI)0/[S09O"/9d\@9t"$s%]ZjS2%3K1fMmX<Xh_gYjAL&#Y\f&PY,nTu'nhj0G,IUD
%#/L^sUpaa2HqYhqe(KpT;LsW5[5R&qKnrHt.>oO1`$T=(/(t>$CaM\!?A?CQ+!]*(h;5+60$OPF2Z&4uIYPdQXB5\F`e>CPQ3Ukd
%2m7IJ5`8!2c:SG^`_hsP3Z/EsSO$1=_dVTm@<bZi2X/4@oV6rSVIFg]+K),6KAcrgN=lFsjDigO/;OqY@A=n<L>]:UF'c-B3,G+E
%^g0eW2LTjoMA.+T<_rd*kDFtL9oi\YNIn=,L/L81*4EjgOjI/$FH'?GG-3)d`6O7*LlG=V3u&#5gQ()6'-$*(1l'!R2ujEuMSt6H
%e!"ahbl8?q(b5s4L/en^M4rQU9L:7,J7>i`I[k"HCkRO..A]jWeA9hK5fI>rlT!%cfNDN9V.)doQ6bED.Q27GS?kP\fJ#`;7>"LC
%0cS[=+J6&tp$e9)9a0`I9>uY2%%/^T<,?6<OBtYdfI5^<Nj74b@&JfC()rls1S(A"mgD#C[:$72YJ>^l"Y;QN@Y&'#jR=6H'dJrL
%Z.QDhnuO?LZ/LTB+"HA]PHZLX5D4q(71@Nq"YM\JirF#.fI4SV;D'k"3;m<XMiBg8Th)`H:rdN?HE(hIfVTi/)mV0Ak/tXIRh%L]
%Q&?(Z"t.pEF0W&\j^M^16n1I`@\_tFJ"aZsVIIZ[,6fPG@:(\L@\XE\\-cJW']YZ3(Rn9WZ($<Li=QqJ_d^O0'+sGc`?q3%X>Q<%
%%GQslR9D?u2K\"f'dsk;;9`erG>1t*b\7X[>jPF/,du2L=&N"t/LWlhZVob2;>qfb>)k=_i\^-,c5l+m-`e#EfKOW7X]Qc*I;D`e
%/.an+jf$8<N^WhTES-DPVC`6=&Qtk7_bNVsBS"_IjI`-M'-2T,&pD.&'loWq^=Zo!'+(fj@^$M'(^UBcj!F>^Jkb)SC`gbdYa%dr
%+kYk.L:'ded[iGi'bK"saO!X)@$:o>8M^9&N*3-0%"IY5C<R@f2&2pM-'st=M";)jiRbl&dj^++f9GS(*btBh;a!e:dFT)9!J+%g
%f?0hnjD/*9KbqPVjShRTBuODrq`4.%l8>98dN\89%or$3ijGtXS/$8X':4n&j'DQIi1d_s$A*g!>&i0.i(j]eCFY!nWj$8G4VniV
%9kH-@oe*JO.2F?)1=A%J2u$c'6]!")OBJKs\IML\X"3<Nb/;`T.+aT-VA:<+A3((G$unuo1SF%_iAqT9^`q\tP!af^>LR^k`%0]5
%D@HJNJSlLJqDgua+)3]7AQsqqLDA4fPjVAM):1F,cV5B0n!6rLb&]1SXm)Lu`_+6SlQK)tf!1l[MG.eH4,X"Y@MI+N!F#dO/(8&H
%V$3MLWH)gj#@`PmnP)uQ27X+cQC4XR;i;mBmg=[r*,7gki'S(\<tSQLngnP_TX,nZ3&QMC$"hg\&0OE%Fei/I'Ou!j!D9VW'Mqn^
%=<gJ!cNb"$9XDNPff4B`(DIG3jF`=a;$keV<//4f!S3t6KaR`m!,P4#-hut'R:&Xj%b2<'!3`7t"QV)FR]&-ks!bOJT&s4B[?o,[
%<ZNX!RUeHU2j@MUMgAPU;QIoa!mR?(X,.^IBrB0i?eg?maD0TZEYMt?`MG9H<.NN5R]$S/C5[I;?8WJe`[Jhm.Y+ClJ?/B$5Ch1^
%M=-/L5[i1Yem;`a;hQ13@7j(R0<XM*WqIX)^'.?@Vd>&!WV4ho68@"9HpmKZ8@9h.LkSf,!L1+<W:i&dC&q1K,QU*!>!dA)j%BC&
%+]bi-I-M:/A.DCp5`gf8IrW,Q91^=&^",jn;Ws_dADri]S:Z!eBPLFKJVdVs;l?kC\eRl8%O;dX"]NI)_5bSQ%`Qe&Z.,rCgIe:X
%(YU'tRR9rJPVtCB-4DC?8Y(A]F.>cqL__8]:`sm)#=6=+X)@nRN*?.g/;lR?lk=uFp,)WKLn]n4fOIM&iaZ[ge1a(Vi(ucsUZ%Xu
%\Rj6q&8E+*Y!hhl&8I)^".DQ53]+A.#fDi1.j?'j1'4j:ifsSD4d?\F5E3I-!H23?1r]J`*/Y)[MU"R+SsDM[8T)mbltLHH=7gS?
%Q%PQgVtik!GfRnSm,J`U)0q\#ZlsH4.!Za1WK*9H?S2%XBLV,nW.aai.XLreaSu.!"gg,,H6u_cF<FUJ9:f0\S-;]DT)&cV\^R@9
%?oFojVhlG2)5i0L*GS\m!BNpX&P+\"S0g&uRpcI\9a.fOa::b73^3mhRS:M9mS_mu),<%n;<Gh2C?VqdlcBSO/#lFA.=&<>)D,_c
%ERj@!Ku!KgIR]c$?.MO\6.8ej"]dq<<5>S@Z#C:r(D5j7b]G=2*(u]sn2+/X8i?GG8tQ/p3g"AVbErK13JfP61m'u+%2B/tZ&gYU
%BdD*)(,0S5$@HP>[<Uq<p3I++-7<ApV$h6VE\:r=Od%2qA/\sbFS9@=/?P`a/01ceOE.1-Kru2qdc>?f-u>>1W]3t(Z9Y7c5a*qb
%A6I/;UIaWOrM^J;(PcI%/HDURp]Xren>%MaMIZ/[-Va1\P'i6,:c\nO&6GG[$G7e)8OHkQKZ@cS"?s\='UWtT.!D(gd`=j!L<!EE
%"NY-F\Y,b?bu>S1U`rP:^/>)*>?mS:Ub)pP1"(p&hBGCW_REdl>cNp?Ld\QXBe&U?A"Op?;q:@c6(03*Nq/o-gkWkg!^A`jVp;(U
%#Zu9bAb9ZAp;"%4J4C7qc''uj)M]5P]S`AW'03uHajCFdm4:1WQ.)/?7O+!MoS_44nA:;G:S?,-;@)npAp!=E6ZS;,SI1V#,,8(r
%$rUPVr^IbZ3`/PTntHdPP$'cO/e:BS1jSX9';j3PM;AFdYVMk]bu7bQ7?aJJ8>03ZL@mA.MM@1?S0$]YP8t&-9u06Hhh[X48p'E5
%Y^%9&:%g<$3+l!_,=!qO7$FSZ!S@QBF<p-o98JTblqS/?[\1Elc:S6Q*=5B]&rPq,%'<G/&P^pg301?r<YXbo?qdYZJHRS@&^eP_
%$DfOePbWkp(M.u-3`0nV_E8m.Nb'KV=ZeO3hDj@a!mC^cHRQb)6h)A*ChTP(ERJ;^6c5`/VYgi3*Jq7l,t$^[-c(:g#7"d?XS/'o
%%HKM#c+),H1q$Y&*1ir#(`&PMg0anoT*LrS&HiF]Lo4sL#u02-I<S@%[E;VtoPr8ln[f096Ua=KRe1Fa^MNnY]'=cOmPO!"-jZg1
%o?2%7Q$Lc.H.SH%.:6cVR]#4qq9T)S4N)0@_`r%QIBq:9Rp5jSs6eQidsL!Lji,rsDPN&<(RoNl:NMejIibsYk/SA2K"]b/d@f/_
%UJ0#+C<,YipKHrRYK;4W<UQu4#2,(0?\?*'S+uNNOk6eu5"<97n$VkOeCn]HG4u2ReEbTo\=.[FXa#&cS+B.N1"\#()Q>Zs`ft2[
%?R;02f4[,%cOrtIF*LEXY(!O^&,0h2h2@cNC6WB><>nnJ]%^S]ot`uhW7*Hh\BmC>mrN@"_:nRZdi.jO1p0[PDRlX'g6su\l>7WN
%S"4lsiniXp0'j@#oARp1=XUkl.GM7ZF/@LdG%=c_Am%,pIoq]*YB=jFHHlFd]?Cb^'o1>0:3Ud+)V!*eSoRQjUY]%Ph(1?:$akc?
%3:Gj-FcHs_l\!p[V&GW&>]R)0lc%]O?MreOZFP,*U60fko=KL*B2P^Nee]lRE)^UT6`ehK\/F,?B!4,Vp.D\<X#d<dD0Ctdp#_HE
%m;T7/0Ct#mIA*@\Qc8C/@CP,4Paa9ikUdpY>l4ZtQC9n#\`lt/"Ih21b)K:4`oSTb9TO5oNhbB)Y@ck5p<.?S5<4M0&rMM0=`/PO
%qn\7BZ%c$"E[*])VJ!I(=`/PO)qD9"0Ni&!;U$)CZeUKu!N3JKN>VWcgd:W,Ap\U&f'*,']a])DGhskmPk>9@V<74uEOI8=CZ_Z.
%lUu0*O3Uq`a73QQEWC1nP9U5nW?([/X]fArlu+c8Ec[)ZdjVOH2MS^eQ>&^SXf4%n]rAWMdr,`A)+NXGjiac6j"f6<nVP8+QFBF"
%-?$VE\)$H-s'tNaF%]rnr2X*m2^n?R29JP$H1[/D410BUZX,06TL/<[[B"f0XKN_:2;k@t_=13C,mKn8G":q'DmA']%r.Xj+6V]2
%6Yi;m^4FIW*d0Wi9/SE8A5!LR1Tk6ehtS:K_c!TRnaitFe<apiInMWY^I+>B??KJC_-/i.fA.PC)OiK^f0jKn9;1O3#L8I@$r!6T
%0QFO]d[t2Xc9.H"EfA]Z:h!Y]5>.BeIgE&2#"*.d=0Qj`n>b&#;ck$[-*5[5%JC:#K/0=KZ!,:B*-1br%(Q6ZNjge8s"*8?TaehO
%Ig<_^)uS[&@Hmp`^\@Z)mB)^P=HCW1IF7EK2Q8(E;VES7]2%M_pn;U\p%"Msq4-.YGETUd8q!1k=)4+8_h]g#X/hj/]A<0IYM&hl
%#t*N*DIX==2Tf\^8,YfeZR*JZHaQ?/W6A>nMF0J\:QV<Fd;%:U)#_KI8MQ>kAM:X._nBs"]3Aa>*Pl5VR4sTa1,`TKA@d^/EuCH"
%?6ce$9`jg!AeH(mbC#/O=g^kU-B?+L+(HtV#n2dM/g7-Or-IIhOg`7d]"cGo)Ok;SU1='n\<6eEZ2GoZM2od!1Zj4>;ChG(]C9X/
%j_HPF)buejN6S*p^$#/e)H#LHoZII-$o_p6UP//OENdsX1u"MEG-bLM7re*_@C<:B_E`AAp78j,aLf\pX+/d)eXHfgcJV.YE%JJg
%K:9>V#ufT'S9-*/?WX*:j0S9?&HtXPj)HRFT?<"?\qPW?gfXK\bgA[+%XF%<UgW*sk:I=A]tS?M33nPAP#*KmF=cZ&,sKWL/9PM^
%TC7/f*js\0;plOtVq#[Oo@Rc<oW6g3FUuX%"4`.VN`u=@g0\K03Q7CEW:`bX26Js@-A<b7djRT<iEF-67_@2bek5_WS'u-N7CS56
%F0=fT^.jI%7(:B;U,tc"YJg4iVL2ueN!rs0=AA%%4!b[')Prla3lc(]hkGM[@5Y+;`6l1bb8QAkT_3Z2G1in5C/kQh0&JL6pe*I'
%iq=,Q&+sI1la.-oNOHG`l4#'?bZ:>A:R#Ak4Aj7KM=EUJ9TDDXlA78gqUt^UGbRlNd_IVFBPc8)M0;<:"(3'0?^+Fic'W<1A+#7Q
%C98P*?^1C4pnF!e`7V06hg:@oV%G$!/5oo?W@uED(Zf#iMc-/M?^*=*(nZe#,(3>DW@uE(XDdd20?U6qcq*r+Pkd<!Zd]H#(M+Sf
%1umdu;eji"PA`J<n@VZ5K[VS/Kcs.cKpR7@M;f=P=$J?h61Xh5CELT:s!jeU*#D5m7$;+.Pe;B8b04s5]?Ii%:"Qcc>qfR9VX)rX
%>oS]ED7O:OVW-<?M/,i^W7+a`\uP_@=1,$32Gq?FFB+g5CB*R!/T26tr12Xp`c5uKd09QN8Tq0DJCA4Sq.UO=Vbr:'QqjF@1cdg[
%?FBcK[U6FXIsmoABZtrg$dWc/"\p?pi?620\l$U?/m!6jf=tY`TR1:@r7Jhi.dihi<8>ju[o5$]2eW,,rccZc;#)iKO]/d5pPNdV
%%(]+3OSCFE2eB)S/e^WBBlt?=SQ=q?gq8@*F4dQ'Q:_Ut>hrgGD$k\/,O!<>;T?J5pbHTYd<<&7etXkQrrXY(&cOn&j1R[>)%4J+
%[WH3s`TY@^G7P1qI3\cn+-fA&5;q!RbS`.<`j(]=c^66dM`U.CEYU!r2;18f&"*A.<,#&"Qa'`7-AfW@la6qD#L,Q&m:NF8Zk=Hp
%^W`Y2+6&qDZOiX<Qn>Zg)"$d2Q9ScN%K:$7rokd*[lSufp=N$@kMu,-VicFP-enV^$$=@irHE#VSHSgC^+`]?4_LqYf:L]DLFA!S
%Ls:,f1O;`3^/LNid$ci"q+be@UTAS[Fb,!Vo,S3En'pJ]MJGH`i)frW[q#-0c*F_>6M4cH[RP%FkGV'XOca#-9"/>I<eBdYm2]3]
%Jpb2LDTA824(Z.NM(;'*FZb],Xp]s;_eR_/c$$_ra2Lbg[s%KMVSZ#tLqG$;GPm&UqpME[#8<pWj,Z@4gM8]/F(Wg6cC)RiCUZD"
%H`Pn=%d&)^`a#uSl^VZ@R&\G$6Zk:]L-&D+9iYh)e_.]*F]M-0R-N"P/hBF;9Q&+`q5^=F.9C_,>A[949st#0%ZUa+,onOq1p&cK
%29f#,Vl;PB=@;aU=lSJtR`t9+*;8frlAYRpc+;TTHBT'p0Ho-cF'/<PNpT4)%Oa'0A9_EIRrn4aiLSrM2fST=6R/a?We&hL;oQrL
%'ec:n@E".<@A&+<.UK!0Q`8tUWd'p]?Fj(SbDCC:'e`M)9DS$5!N,gp!bnZ"]&\ccb(43,2+WoHSirL!UPYa>>j=,)M[/6d_^<OE
%B9,)iU:dPckc\Oaf&0Q1Ff+G@*1*peAPA?I1JAZ"UX=fnB1u!4G*;CP*%-<UF@hm9Cc9?`KkUs=a=2gW1j6r3TJ2XtN;n$ij#GcI
%0<pOubP.OTQgXic!pN@IHaQ?;O(mmM^Ooi2a-EV,@r!".5('&L)U:O(8*1G@+rb0s3X'`(5DM2'b-[j1[T-9Fg.K,ddr,_0)"j>W
%P*9EmVZ(,Rb1H0_rf(Q@^GAF$jf;_U0JI6KAjY%qdhCHrS^:X!\T[KKh.r>J*3p<7[C<\4RHFFpC6WbrP'Y#\b`!L,BM9:HC5AT`
%\OMeqC544dApTCb6Mb&`a,$U=N,^i$9_B6t-ibV.TZ8J0L8c5(WlLLl0rB8UW?,Pi5KZrd0b/L<3h[!tV0p(UkHd`>TC)8cog,_Y
%ZJ-iB]>3$(fJ3*n6YTGH&sNdLC^F(`G-0Y,kr$3r2*:Id1A%jJU\o\_7XXWG2[?HNr@C*F6-hji[T`&r+Ho.Z@5Y1rOJm5BY\obg
%hb1@,?[6>&D[>3KUUKMb'POGp>.N,J*gC@FWXZ!T'1`Y&_Lp-KcNq==AkQ[Z)0F%mI,3bh@`f.KEe?i4)cT9Frtf-sI[&i)l_q:@
%e2D_<c:YppTq>!u-_utF@8'Y.QOEAQ.S@mSN$lg-X&O/[`8Raj;b#QuX%X0rhq9O7U-G7bfK2hhfr7926miEr'$J;>SD_UPPH0S=
%Y;K>"O,#L)KI>=MU5L+jHoaF6S_3,&B=WM>R@Bf1VPguhBl86cS"Ab;2PGAa.j5I":NM_=R[ZS:0P@fs>%)`IRi^aAE8sQL_Wc&X
%HCUHGkPjm)2a,IbCQEPqA0'i*2.oUCF#34e*9bO&@e>_'n%.>pDQd)QK:&7n-K.'g1>$g#^NBk9GtO>=rqUCt"(0*?.kq?XbjKb-
%rY)`+9`Z,15fRI<15;Q_DB!S\Zguu1DV+1NEtp=m*nKVY_-cq0WHS/k^Y38+e5C3eUTS.uiK7L(9"*dKX9QS47Op=b`c;jn4\j5B
%.lmJ,$SG2qXI88]FlN&@A_63%&J<#E?X=&rK`4heVcI_Rena@mJO9$<%C5O2Ak.8h/)?An=jat`&RdYRL([!RrcX4U:4H)%1Cm[J
%>^H=*&T/VMUU'2PU%Y]oouCC<_"TaTYY9b=oCf23j,RJCE_dU]h#P]e"<^ZC!l`W)S%hQF]Q84N2Bi#3HZe_jXb3BHL.tlnaPtZH
%$Obco3U?7l+8I*_H.QRR:SkT6P3+B^&U>i2:$eH4WfiI(cV"Oi-SH?@qb$4?qR4Rs*d0Wi9/SE8A=S@JWD#.6M>hoYdAG.HYni3D
%bs?V1KqX?%F'n2g9pONZ,0B5E<@@eiW7%o)<I)RWkc\Oaf&0Q1Ff$uUNltP,f,Eur1eZp5(ouc"K^cKYB#*dEEP.QN_c]/XKf0(/
%h1i9*;2$q'_e[/CHFf.2k#c5'NV_d^8XXA*5u'A[IoNqJDNLX`*CbI0/3iV'FaN..C65@8#"M\WRCnA7DKuFVD+%&?_e5-pX;A`P
%`_f3sBTg\0AkAK5N::<e-9A)ngQg\8N5Z_7`*D+_a(K0-Qat;@h';@lj]3AscY<Eb,o=$)s"(MEBuQd<m+U:PMt?)bBJ1$_9#m=G
%E4Cb[Bucg-0f',tN0t=!UlgF*XA<jflt!-C`Y^K$G=L=(f\K)&9o[kq/4/jEq:K!4<&?4c_0A$R\7Lh]O/4h,?P5t!8<1r`E4Mf_
%>\;C9$e4fOIbAH/<a*1.;Y^`@_&g!;4K*+`l%ZIi:3r0<8prPkD-?7,U%XRLPEhn<I:FgpO\$I%ZZ3s`9_pGi1*'uE*bOj$04kSZ
%FUl5"LI-U%HF6LtVbAFk&KLD/G%)O$XTu=M_PGJ6dsG?fF>,>&[ddCH^u_]PDZ?)L1QEiQbH<5Q1/>m7`UX8I_'P9f?)t->cKF:a
%_^7`;=\(uR?ZnN7b[#aGR?@&ok&.5`s5cKFp[Sm1-2cMup6#1>F_!6^02ue1\!rY:hGJd+ntO^7m5B<Voj5PKj$c15pt*Jg]A;3&
%%:,uOFh@$fQ*>9gR'!HsCP-uC.^S[Qk-^+#n,jSM`Z*;eBCBpMhC##m%saP<q#BoWn,KgFs&SLr2Mq4b2tQE^Vu&shJ'k((=`+2h
%n(0`ffec(VV&9J"-d@P?Hdc$,LSb!Ke&\h(h-Aa9[5o&*Z6Ee:)KAR<gcbVAbsAJGJ&,\([=5/_\>Im6Dk;H@LHjMY4fNi'fYV>@
%f,\ZalWl<&)YfRJ8fMj.5JR-hTDrs^ccj/<R^,.-Y#BUCq=)e22#_!6gn5b6s#0*?1fGl9mbQ+Cb>';RE10:^H`q1t_5Zg*luj:;
%Xhe.73r`Z(m03H5If&@6=mO\a/`1Y`*GADYR3fGtleE,NW4Z?a#Br(d!r`6#$KK3qoqNe2b_1H1bbdZGI&n;c03t;>h;]Mj?Okn+
%R^HPc;<?r0IWP>ZAnSg)\3r9*s.1ttp73Ib.aG+/-%>.-5Jl'4kf0r+kbO(2ho#u!K^'gsi4;MAQeE!tjnp`7BK&#4s/D&uLVGR3
%EimN&EGdSV29UJ-lUUS&r1g.V41;FHR(]]oZ3d;V^NsJG^khZR3&Z-/X;cM+lLXb<N?U"cW&+uI1J2_@[<d5)]&kf[jtkEc2d\="
%p*&8\[4;0.I1eS<m)Ptl?L/u#8$gifSMWde"PaTd\Uj4DQC7!/RH%q(NB9.+'1JeOe9X>9$X4gm`A_'8dukJ9:2JL/1N$+ef/\9=
%bt^lt`(>We0cP@Dm"Ee5DN]6.c(NDibs/1#bc:-NkB)PFlV1!D,dHecZttD-hScD9$+#3LJS'4R@<bOS"Q-O1roRZRb\?30Thc?F
%&,jSi!p%Gf9MuUb,La+kd#,(d4(\ZecKWRq3ip'-OC4OPj2?VU*Yr2F-RjIihsnTT2sZ"g+#@YF'rEjDQ6%\BB0\jp2B]YO3[.<>
%&ODL([.efW%*3AnFYf&:#`%Lb$rZ9$jWP\SdI<2*L/C.#s"@!$l"TZCVo?Wg?It\ZT=/q;PTW)_LW2uHcgS6hSZgqh#L$J&o8JR5
%[FV&9=4V2Vl:p[);_Bcs[T\<,o6Ui6U#W[c0@M?>nIN\387YL:=0u/V.EeV!8L'dOJX^+Z?@EV`9c%Y'CM!cO41j1AbS@gnol=rV
%Ni;jFdmgZLUG9:/ASllkSXaEdQWj@*G3ps^'D4]*s&.&41qkg>cBIqgY8cUmmoKiT]'([%bH%F5.rWRcau<j`#$\"Yn"4F6;Y/7/
%g&?<&H1lh'58W5T7->P:hW^T/<u5d=ZjeT\L9dTQUQTEV3B/;)Bc>"d8*IH>gY@<9"XM6H53;Q(cC9)f@]oZ6oBqAT'm[f<=:ON>
%pJ.lFX6oUXIfL"4g#epOe(;@O*O:Cfr%F`*gom9b+ds>5X>jn&%T"oJ$64,CPk+6;IrL5^0F=e/7:Wso5Ne"[5OstNN7N/j]!d[D
%g?q764AJDu+(,ep]P2.iRte2U4.:0BBJn&4FWH6EB-tk3OSmuD]6*kc_@Nsgrd^+C:C"m`)]0X2c:!VLn->P3s&j^Dp\VgVndg0,
%J"_b[R1V3ON]pB3TAtqq(%5+'+*-lXilV]/gSssFi6S8d?tuN5'$P[)PPtqPI2k1<@0h'TO)9#RC<j=A&#@l(1B3EHBBn=EcRrfO
%9R6$(4ntCOc8Jl3L[An<PKg(G!lSaJ0'^5N>O:X!"fJfU!k;_mG8`JSb_s.q?e*k)1J,+pYI;WhpWX3fk'AEs9NQ\UKc^$N^XR>D
%+9(k]YNi%Yd`lu,'Ic85mB%;HRp#UL_ODJTS]VW;IgZc-.=/C`2;C+YEdk**k5>ZtT]#6\RPmC>r=ti/:OX(npYYVPFWLI$o<3f6
%DOYP:s73>Ba%F[(K!]^#><b/&6IA\J@(Q$bkBgAtA"3HK"9t6F>h$P<5G.=qD^nsEr.!uihruS&3Qke,Hu?1+[Ege8GP[q]YP%a5
%(IgHQb4NT*Ob<@EqSb\>^8n\HSVCkP`ABt]f6$7hF79fj;PLeoeaJMd@lrMl`PF4)?FsG!DdJf!'Q9^G^ZV9bh`KiQG`lj7bC/[l
%L!#^M).gPMcp']G$MC1nTR6/1Q\CQ8jlMfBqnJJ9-.T]Y8H5ANoR=PE1*Q%YAt^Y<;ZDT!Z["8pm[ns#adUBNSNfSnHQRrUdVlV[
%PI$2Q#omYb2'eaGm(I#!SBZ9lXZ@(FGj77)[dB,Vj5MWDGR(3.&hTS%rTu3_]AbFA)Nf2Kr4O`$mIJ^rUckl\Vp9,)G'@?4W3td5
%@(k1G]f9+606?]YOc^on6um\Q!pR9d6^08dgdo)u6$#k<(`DX$]M//d^Wb5_-q[*k\QnO]<*a/rRgg9oDf[iJ]td:jojK_[e9Zc7
%DQVNhe-W3`nLD/aVJXJ0Q$`4,(knY*SmBmKChN4pSltO7jJ<1cU@oSXHBe3F]NhL7l*pXr\i%$rSlfNN7pRhfLTO_8H_ng=5i9SB
%ZptXBNCMLB]RV!OqYS=VqM3nCnZl?1PnUg1X-MttTNg*Jo`r`Jef\21]'?jArN_^eN]D]8Ns;H`\jqN'l_]rbg0q=#]&qqLS[k2Z
%H,!CpCT96dpGAQ^.Jj]1n\+PSaGp,9\!9r&\6/(p?L)NANHYa`ql8972g`:u.pL7_#F4C?CJ`c'[9Eah')bL[TGL]p)B>1UdLJ\n
%<&U2BTguZmE5TO]0:MjQM_;R9iC1*#3]b@\nhE'XnZGp!BoX<+L[\Fb1csiPTFlfK:-mqF[NeOR\5qq^*n>G'PuleZr--F\kRE^8
%$8Yk8Ia[Y%f@h1g_kVCi0EQ8rDflT^fB.G8WU/9h51I=8rncu^P'0pIDOc.I_A,4Uilpl9qS7K-o,]b7=ul=+olfZJN#+P4rb7,<
%Y'K:2Z"Z`N8U?SHqt3gG7R1Oeq0TGr_;3@XBt$.J8fot;r`Q;;Z2JmQfm[*DR*T4_hs@Htp$qY<HaTufeudQXoSj6do/3u?HqKIN
%606+m7Sq<gU]'KCb#,dQ"6+1(7j$.VHHJpAEm:\.#-EdIQ!43PMPp-f^eCZ-Wd[V0o;5Zt34hel@E2DXLX.LB6AJ:fgRjj5pbQb<
%bC:#Ig34;T#o1JEg%W@N0&19'Wb*$ZA)H[,KeM19f$$+Tb$)0`FP95Lj^S*rpG2:*?N'At2u?*HB_d@A.poDCB[8ThNcTHt38PH!
%DHJlRARGK4*Ee5#\D`8le*XZ:<([492YBgl1f\B5R"]+;,ujggBfPFNGsVF7Fad'!FYD@Po3\?@$)dJsG1X/?BB<k<\qfHr-`SQO
%l,&LGDu%YSk)PifNQUs%Q)1&iZ$?W&nH\,#ZZCjd@8*6cAPingcS9u!?g2?MHPT9G[YXNfhMu>/Rf1fTkEoq%p-$#LX`h$E`EIc'
%2)qNTSi`[GG-PgX2S!Z/F15YjG<jU*H-N%_#MC#<<Y`5hD8Vqq*>tJQ^"8Y=p;hgNU(3od4(d7$lh:=ImD#Q""'dH37YnI]nufNO
%mqo,Qm,!*:2%iXTiu%sA85eh%eub8T%4f*kmd+8J8ug`kSMR<tR;MD9@E%+WkcfO7Y[.:pS@Qb,lCIpbPJU9;(]huUX(SoiI/.sQ
%0`PJB=55n#Z%oprqm5G+AbPS6(LsJr\,IO`blh#+76<`O-uesg[>epj7>pm,r0h`Q^!0Lq:^"X(YI[GtoL5#Tc*H'gluXn\=7:8B
%0<3LEH#6f258$>lCVB^-@j\tZdO]>1cMQ<uS'Br>nX`XW4m8K!`6YUA/%*(6)s>ejkfd6Qe9_#j@rGYIG4sK5.d,^c[*IOm$t^IG
%$Pm$NFP,@4G0XC.WF#U<gJ2qlZsh<?c-9es;b'H0[aX##kfJ,)IXcOQ7=sFmG;<CK!/C+:.im!QW.2Vh2QuOHeXC@5kmOGhf\`_e
%R_@j/]g]>t!tsX2kR(L>lMZ`CMbi)sr]H]6G!$..H`j>[Npt*7_O8R-=Ol8bWb5:q4[+&q3UNkY(&@KFr]TKOKG.1j2k5$>G3cep
%b1,Vrp+LYopTT,'Jqt>)UN6Ps;knhaLlq<7q5Du'H@_sPfKChuW-XG0^Vmj?C-+qVqKX<D/'1B2Nipjg%!??V:A=Zd&Ch,cQ^dr5
%-OZ3iji,;8UM.Z:FjH5/%a=d;(JmmB.1Yo(ib>%$e=]7?eN%Oji`W>jW?;&GIniMrC3Bi/FuMHp%leCP)n%EpN[-]mLjdtk]4a8U
%*;<'A"GQ]MY,@!.+8)*rh)Z&D"m%)\GN;"meLN.1ji9g1nZr`<,`nC'dI)9e5!,4?gD<iTn$`eOl(E+SGGTUKZPE00bq9:)k>rt'
%]f%iW#c)dH0>1%poU=7@qH8#he];M$Nct"4i_DG]k#GS*.,KW,?"WaQ*DrZEHEM.lW1tOW2^tZ)-^J@K$$TW"2;k4-!B1@#^_:kB
%7>\ET;!L&R<SP[)RCqMlF]e$Xmk&<+(QN8^$[('^X$OoWKpQ.`?D=p-p-mfVpFP!)>l!@h/(QeWa1,$h/sA@<n$DpZ_bB\#WqC#2
%rMnQ*BkHB`YGLD8n3eM&C7U*Xm8"HlMH?oWPH$d[$?h*o/HYM.Q[TcY<p"+_f)B$`=Pit;MpSZgU'aMn'QQ?uYPXmW,K3lum]31L
%c^@7pB>r'23U"C"W0]e3]pK,bcWcr0^("^]89r":\pnhSQgWp)3W7BhVM[1!lHuB[/4C.M:^4$[bi`m2[-TtslCP*Gbuf[b?MD6o
%W^").rJ_31BkR+'fM,<`nkM7_SDIDLUfsm<GO6P(39S^+h+kG>d"O9idQ,pZ\Z]3*Fgl.=[G"t^HiCcb-Z*";qYZ)BPKmlVR1Dqk
%U<_[3Mkg).Fo$/BDCK>(G3W\rRLXYoD7@ejO-MJ:SMC*sYQ/t-KbJ@I]PGe`Hb"("E038N+*D3+fJ=#aQSA<&)RS1".(uo+)ac!^
%M0#jH*C6`6e@ql>:4L5]:ZZoUk0Z)8PAY$;6+p4^_pbB@IJ5N=JJ%jXhh2ELF\FrFk5AinfZO#5Pj&/d`C@Aog,h@JmaPG-IYgeZ
%fYGXPgDMYhO`C&a'b!^J(Zm9V<U_h,Zeo;]-:Pt3L#@"CCb=*FT"f)5nD%B][HdYtQC@b<M[`0&f=0NMKbds/UV&iJXrXdtCE66,
%^WTgqK6*qAc1c9[r<p*be#-T1SLl4eOZ/3_M8e0lqm<`!kGml$iG3GEL@2^^Y3]VChQBpl$cDY,"!\bS,OB[o%"2:E^NTU)",o7f
%6BkTRbbB0'GYu`PF"a&%L9NI3:HKlfEl2)DWZCFuBtj8Pk4[P1o+.+q\+\$jWgHem1>$AC`!0*olN%HoIcZX(AuF(\rD#/Neu@#p
%]>aV(3?um@X47"<,?'lOF0'00CrIsfFCXq"ID2k'j1i/qPs[@c.V>/engMLnn4e+`[F"4.Fd:a4^KWE'[Q!E;p/_H(\l$.DBgEb:
%X0cYih-]7,B"jBF;S8RpO6V)a_Q04R=L#3%nWW'[AfMhZ\*iZp0@]8gN]R%OGs-NJO[L"fHEVI9O`mkr$-Q!%]`"5*]#5CD.l=AA
%rR.lHOKgF@^3-T\c7W:4=^4,IoQPZlcDdX60q[eJm=A2sZO8?Jb#UG;='(T)aW+q4Lk!/T4C5f%iQd("%r]\BI_#@"^V2n<0].4t
%Y]kT+F62)tQ+Jtn/@K<"rL]iD:R@iWpZLErH1W;*I"1Om)_^?#8+h+<fmAidF+`DNj7J\P0(%M<I\*2/1jaTK_;3$.I/ga$cTGfg
%DXC%lCHWUflooj22ZFn5DD&@=5,p9\cJI2:nZ9.<YNCE+d`SupnbX\dV6:sWK(h'FWs@IgIW]dSY]o8-FS0<Y.JW_p_UnL@GNLVQ
%43k2";t'F$SF4=6?[qjQ]!XNpp?\^>leVS#s'U?<j8AlTm(o6h]@W'DDE_e$R)bl7<kartH"lI%]6L#4hu;a:cGJFGEA)e0(4,&b
%oqf73p20fFiu@I^7cpQEMk>/WFj7\(Ip6)nXBo%s8\Y1/h42%0iKs>9ei5FG8\a,p;dZ\_YAZ&]"eXs!<3Q,Lmju,aqrQ-$if,lI
%Mp8$OO5<(4\i3]ofCnH9XZO]fCO>tmf==t@H``pTgi%UeelZTmH[K>#GNZH1lItCnDq';Ao5i7OI.N_=md8'jC8ZO@i6K4VF8+[H
%h]B5cpg/HjYP.7^m[a=RY.\Cpkun%gl+-RY1OeLKNVfisHStDWh%pT?cJ37h[,Y3mgkK1fY0AW&5.LH,q/.)`\6s%D6Zhuu]\*1)
%kJ>omL\os%eW76/UWtaGUdri"X7TOY7.6l%*U9Xp$i@E-)&])c)f(K2n`l%/HaO+1=0C>(hkS4[oYW'3"]`cVSF)qL"8m0%dE2Re
%f7S:jcaj&7h;p;;2t'gdeVrEnS3)cQ/`65e*q):W)ngUn@'9%mjX5FMqo7cIlO0CM`me1:AmaM,p'U64LDs3n)5&OnZEWs=h//Ii
%a$K>]qHC(?/Ub==Zub^3\)gf\`m5%?p7'[uX)#J_WNIm,]NX%BCjhfQp@8-bH-AVEldf_:d.^DtrUOUqcJ+'2Qg4Fidar]8(L(7A
%HZM7Rf6142GAb$i%j-4Vj,HMeHXO/TmGN84II6b"Q).]EkM//Qf/s4M#Rh2U?f-/,[e>]MoI*=Ho5e,gT;l,A#"L$[GH>k,4eWtX
%QeiIjeY\a#l\e/%=FT/;[d/?en9E&Xq/,!/3-arS_9.oY,Id-u=m2`TNdn6AkN5"3ILI8]O8&K@kU1+>^8mj-4fNmZk$m+.\8sY(
%A``("o@^/8@-bLMlfV%Spe?W/&fkhbc'=dM%rX&f72u-IGLgA-ZLM\l_67,q2Ohl!)Q<7>FragHNOsLPEHc?3+4&KpCfKHhhRhh*
%iRQENgVV3bHEoYSG<7tTZ_[KCkDSIWeZBXI4(baCPV+PhrORL4qk@i.hNM=,*A_u,4i_m^]Jqp!#-V'F]kYlq/;<Q+4-,t\+biD9
%1t/W(cH>]U(b\95lYj'%bdpU-hSiE[mX7+.^$p0k3*9j<hKGr(Hb]Jpmd^48]tr[uh<mpSjn_[KTt7M8GJd\ZnbPRoB5LG1c<Eq'
%2kEM$ICjj=,VHk1jf,EHjpB?uDYYgS]+9Cbp&<._G-L_DqW:tp?`\Ib]!:q%SU>;#4M^6Jm0iQRX?uZLo3c#,k$`&e_%ZQTDQ/-#
%EP%P*(:1L2Q>Y=-5$G\rnCtQkk;i5d%Hs:6Gh9T9F7VeRjNF+)ec(S3^["t="o"toTt:']fqSD5<kljCGe,kMWdK)-eq:Br$h!ne
%cdg:8XW[KUQ"`rK,mX%TqYfaXamp,<hQIG2Y:k(YNLempme3P;<WDo\T9j8*0=jppfB2=)O.9iYgkSXGqu1+"m`i_k[d6k7Km??m
%'ufh.!j.B=\.X9\RqpkrqXl"=Y"r/qZ3@sHotejE*6p*PGb<k8/lS#?W(_[nRE*qr>bG7RZQ&FEk^g^"bhLa!A?V@f'mcEPGUM8(
%.c/*+"teppdqcq+T"`jOZ8p\lHOT=^]U/8eO$=A/gA>aPA*i<eBT=R8+citd7")]jG@Y?1m^;G89m!@_b_'DtO+opiCRt$Es2N)=
%p*K>cHkH$QG&oJC>ug6RLM0c_-gkRgrT'30Qp88AO"UD_r6kA,]d5nNpa;+3g'GtB*bUKBWk;ruQ&V,/q[5X8J3MXn&%T6<6/!Oo
%ZW:#dp!`d1fT`dlpeX$==A.$npP\cj>^W)2qe.&)a.A12g$GI7SUIf\VgXd=?IYmuW1GbUk3OV4ZHELa<W&Mj!:G40mQQ-IT\%SR
%\?h4&doJgmcHah\%7^=JFtUnbM7;8r')0s<rl(L[)M6S=s*A%:$#`nShELD0bhm)OR<-0(Qet$UC<,\4]5&p(?Mo,!jiZsng=E3:
%M+Rb(59"l[Bn--<eMk*uX\YSPQg=P+Y4LM9P;0qjX0[jKH!04R3uiJ.ZrT<Zi)Q+eB5TkERIJblXl$EYYAbP(Y0OeqEALnU45+qo
%o_eNoKm]("4u]M]SYc#Tbtl#i&oQIq#B'&dGAsq!s3bV2IPCA)V0i-lHU$?_?k02T&!uU+\*bh9GJ0F"dF)=QhHamQ?@J?">S*R"
%*MlorLii>pZCX/6jWt:UI\d-cg0X%3Yh4-Y#/:<'ZC1-o(E:+hl,?2D19u<&rdQr@PW63=JGL>u0-s@G.Lt0`3^\neK6?.+r+SAW
%_'JF$hGa4[Dm&Jcf_!@n"\?.+=(Sk0\:Y%3gNqk*qV0HiL$48:_QE3ZfCL)%0>,$mE<&k(<fQm=Y0%hd0_uk[cY&SF^W*[_kNLhi
%SL:&&g3FUOD6IeVfAA\L_qn'c*i%DXS9<uP/q"F&\*Z;&ZI"VT5N$?c*g7TT:;1IaIHelQ[AK@)Y9/l&UMg'RGOX\_VsQ=S1Dd\T
%hKS@G1X(IjZIh:=DRS`sR*0]g\b1s&le_Q//#aM$[r+-!J*dIW-jREZqc=U.I_0XX]^b123WqXlRKh*d.^6/Wif6$t]\3\Y7(H+V
%L//3ShSUks%sH/YpDX?SLHa7p_FZdl=F%.KgT8(]]^k=ImAhb\SKjSphR2tuiUM'bkBe;6\A%ZQiUs6sZ[;Urn5<TckgsV#f.T)?
%dZIdaGk]aTDXLhTir,Y>=3fOYD#6eR^"GL@BUta8T)QDFD'!1Wk/r(T\+_5Zs5MjE4CQN\4SOO>J;_]J]""3@q>0'edtQ^n_/\qX
%l!GleLC^#Wl.kkJqnlJ(D73I+e(XBKq;+onT!$k_FZ2!If/n$R]%cG9m:p-Bjn#T)Hdl)Grk\<+cMY<+GHTi\]<g0G]4(ON_`bJ0
%T29YmSQU9i]DY/fg<">UAbcp>[55@4[rTsMMlPC6,sl6cd7j6i4luLg3;4aVNQl1B]<g/T[j%amAj1#jc^)<t*kPtiD*[O'YHO><
%>c4iFKUV(@<4VHE=6N&VEpM=YKBi&8h$/APLX0<cQ5U"m>oeMUIko(?a3N,me#U,Ac#g-ORUq0RCYR]/%.?-i>]3594ahHkTfp$H
%R[\2<+H)W-n2"Fc8NnbVrcIO[H2ZPLoA:<Ih6^D=SfN5k%?>nOAi_/BV*/L9H2HIq<`-0=qY^FbI+cBgG"I4Ahn;#)/FM\+21FI:
%2jZb2DgsYXb8dWI41COAGF[Qj_9MV[=UO%4/0Dt)rN#N#*l#8"[!L*qYRnPIA[_I3p8d$7`mu.kGW`P1jC>j,ml#K;!JWP#L\I*8
%5HNZf$"O-<bZasQo<d+F[]]YC\aoR]oj=&/9U@?<PFq:r4hH"*-:FGA'nCP6HYqZ!N:a$YSY%k8:3gS^[agB:nt"O_:4BsQmreDN
%iR@_ZT*GJqkV_t"GHXDe[?V1>d,ERB9]<H"=.IeO:EIS?m$8$mmYe81482r<?GA2"hVIJ>d]ZGbT@UM=^$q&-bhU8,LYpCXp%ES,
%Z9GaHXNFf>e#e&^h<r&5SSKh7mCmeh1)[[Rc#De)PCp^=)cZ:,?#38pV5o$N\%L@'n`Fi`bEKo3Mf0[Z)^&Vek["!l7-\\0k"F$M
%bDD4!.qdH*n2hi+_L?OJGF16$om%67>l"*c_,>V3bQMJPOIr[^=k_R,dTp\foQ+]cGHbE@4Bh-D2N[EFB^DjFl\F__SU56srVlBZ
%q723s]N?fTp>G(\D^IWA'mdS4Ir)c&g.B'7>CPHL>X-f9l.=dO/L(XNqR,&5>JEn'<ZEkqMSc"#AZp#Ylg\_-W'#ACq5948FMGE"
%<K5H:aHN6_G$aoWPNGk4hY69bQ,W%/h3GtTh2S<s5BKu-l+R&\kuFam^WsUM>-4nh=;p7,a/mHcJ"".PY.6Wd*;2Q`Q$LM^baIoX
%^6]^1YP-,IQ0#d?>ol+B^Grap.":`Op7$!hkC0gGb;ZKaEh?>/YK[p[H@>e[cIPk\k)Z6L7n^0-NLBV>0>Hr<,^8ie>L?4sSOG9h
%fQm@rMBhQ+J_:PATAW39hHog&([^X&ORJ=0lUOTD5P=nHGILY>+5H_gg)DglJ,QfpYl6%53G;b!A@AiCpCO"[gm_p'$a(?bDX60-
%c;r8]#G%E<gf.PGJ,Jlug<,]Do=_2s#"q&6hWu]O2DtBqmO^1(rN``=o@VBdOe-J^@YdU(bG*V2cbFjE3F951\+Jb/[AK'JdYKci
%osaDep:bSu2cgsekQ(GuXVSZ&2'74?K>c0.m#5W&7/lSC\!!sSpWa%;:VKl]h$)]+`ZOZq5Bq9p2*WNi3\p_Mgrji9e%bcDHLrOd
%Y(eaY?dk1sT(3`J_Q/,hn[;3KUjcKMlR^Z*Nd:9@m&a4_lUEbgI'I.p_lp8Dh<N;11EL%Ps*8Y94`213b1XK.if7sNeue7>8kn!U
%ka-4/ec`4'HY6``o2_dSG`Pp4S"]Mo=g%eY$^^"J*e)S\GIo-a76I$1r&XlXfmD='9<R8ZpUeK(5El1Y"B7,E(D'\H8_RF&0d%Wm
%c*`6ZTGCpscaWN#:HWR>>d\<X<i]Hip>0G@bnmsg108)593g=u,N;(E+#fDDX5Ed1cbFZ^6)KBcn_/csPqU;/=96f=A>4S8@mn@u
%^N'4gbPu_]eoRqP#N'eU]_:<>J,/bkT7=;uc;aUXhtV&5q4H"#qt6/ts21lZroSFC1ql5Z-bT<95JQmcf>%$s^V7H#:k/?:o\0'3
%N?7\f2]dC]rPC[fJ,HK/h\\TWcD:^8fC/Y4/\0?fr8@+3^1?+!+5<?CFC5j]^uY5/2d1/Ao)qG@S+")]eK=e^=)AFsH2XQ)^AS-q
%O5Ku34o3EmUIX'K:/?B6Q'X^_o;-L1rUSQho'c\@/H>D:?f.6cQ@eqt\,Z0nGpb!PSUAts^AOamhSY!Af<>55$f?2Sft,p<DuT%>
%Y;[,^mDE$%c[Po6X5e^.mI(2+YM]9KpTB!l)rGr=[r;96)ddo-?iB#Oc6*#P^HRs/.1,r+O+):[FFO/Qq!DF;J#4A7IXh?lhgEJ'
%^d!TmIdlmrrp*Gns7n1KJ,S_o;iFj@#F+8PEW3n8nXmJijt"3Uc2NofhgYTh[rIUEXI6jspjqh+GEWmn0E9t\T7$#@>FXN"jeI0`
%d2m_rdDqmZeZ7a,k4=stm:)9IIer8PYE_>cs*jk042:RTkl5]#S_O2Bp\-n5$hjBt?N*h$jm1h(rl^ou`LSZ#_bPRM2d^mkQ#HZ]
%*OA<6O1lO\fDbWfK`9<tA8:ml^V'F'&*pk%7.P8Fp<)9!qUt%=s8MbumJ\cOp6R#g\rd!lmH=H8?[_haYh`*hE;QchIp^sn?iJd"
%s7(m<mD",3%<I`Io%,g-Ie1t@PUBUV&lY9E=u,J`bNJZ007ELtYOp/U/i&$laY.Q/:Yu-CbF%REq;O'2mh!lb]`7u+\%e&So9FfP
%mDJ8bpAb!Bc[YYNXj,a1]>O[HP(3GlDa/^Bf>%+U5@JO/Z^drZO1t=2d:/V!GYfi<?]bl5If6FOr]=J9oqUFDrbj/EGOHo/R3#!O
%T(+`,rU*J+Y5RJ&2M^c"PDQdkI=1crf1p\ee[OH#Dr4:Hr6m0GI*4_Qn[nO':1j@Sn!_Pu9DI8BiT5Rfb8HDAq0MG#?[hnFYPdAF
%O'_h>Hf'>?ea^'9np=a?"(.g%Ha8hVRf.)SQKe-ufiYF@HM*'Nrsj&#hnR3*UjMS&UX,F4pt`]7o/H.;q2`%q?[q*ss7GFmo?Vo2
%j-N"-cZ`(V>ebK%rNFs;5Q(7?/n+A&S,`$:O2(M=hnT!M2]fAnl>&V/l(pW:O1tLdYKC:gKX$#;[_NF1r+Fd7?i9^=fC+^V^K049
%f4S=G&&8%rmpCM?otPpOrUp'&q3Q#f#Q86*^0Zio+*dXIY7SJEk&8$)Vf09JMa+lKKsU/iqB<ELVLopSoGdTr\,Z9Hqq&$$pVYa0
%0?es.Ie4^hGk9,9Ir2DJs7Z&frV:7:mNLf],U<;=O':H9mFuR/4#)$Ld6G[=ps/b'\i2>)k>Ul.4R!jB^Q6]gj,MsoqN#!1oqR$4
%a+&I-f3eMGi_]QnlehT[&&R-1DEn-$?[hUY5Q&ffgGaTTc>W)cIeW!1*Gr\G\ad?55`G[9P!.bgc>ijWNA(4hWE;f9rp$P&r8=X)
%:>]-fAnUAq^V01$gY]9.HKRqNq;QebNIUufr;F6Pde7S9!RngZjf<>"kG,f`QN-E_5Bf`p9Vcu@rD6b<^KnOUWg3=bs"<VQrT'_P
%JY(`e-UOF)e/@$@bBM0,-h:,:jNi;2AQ%af:E33LajR[iFSj7"5!"sPG`(3[46GKD55N``J,B,fUHa6U<\V`rlG!/CT<@BSEh3J^
%Q?`1ghu*6;Idll_J,dDn55a6;]6)d*e'ImI>dQ<_-Q8`K24lsGWhQR@n"Om[riOMIR)W.+ec)M+^@g7,rPOtEoi6D(lE-+('D=a_
%V5W;Imd%5Ie^_F?X8Pu7YO(h(:*n21d9k9+8,[mcpA]O.+$SO"#i1.nEhrM*aK8HghLo3*<aWn:fi+aAkKPP8bb9bNFc>tZ*ML@#
%A,bpXO)h"u;K'rcp0]$4O7duEkQO=fNHYZ%k+XddXi00O3)`d(juH%ojmGkA"g;th2gL/'e,=:@_"R]Ue'2Fop"7GPcS,=6050mQ
%O-*5QGT&R?@dZ1]c+a/9`Lge0Y?t!%VKI7]dk>S@VdGDUVRI8KT=F[fm.([7BlA%<D:6NScd;q)=&TF]B<V$]BQ?LNC9FPDNL&,?
%]%!jAe@&begltq0hW<bcbN6=H*r2[fFS@ZIhqJ\6BNm'+drGDkZYTN[B"nZG\u-Y)rn`*?VOLo_G5K6cGLtQ0]qa2l.JL9PpV:QG
%?[h8)BCDFaMWZ[C2u2f;^#+cP`mo3Jq'NP3pnB`bleARS[,%Nq%nrbSFMu#Od!pQ5+*-[+[@N;B=`(r\kO/*$Zcd/?F%X$*pU"FY
%rd/G%IP6Cs';k`Rh<=hAh`II=oKP3Mk9;2U4#o+dRQ9/^4L>VST2[1FRHk=\lE7.XJ.Y72)mZY`2;7]ro?gG%W2+\3KC<ec^TlD!
%_.;^Yg-Ids]krR*R,]NYPg;f0hXH$@[,'VVG.2>e@2g_NH.,GB13'a09MF#o!(ee.\k0MO!pXUC5'5k5@p>b#NK.b;IQ,b\\QY0<
%G#GY,^>22Bbt+[DR[lKdQ@0@k$]Xt#=!M=("abS*;5!a_'t0f+]PG,.[P2?h#9WWRIuBnJn`(pcf8S>b,`Z_T%,+a@F^/prMN?D=
%kqS[q[mN5;Tr65Jjnit:%#)N;;pn'Mh*(##:]9*mc.r<3-6V!#=2$GfdF"?3'HG,J.G0d0V*4E7c%E"IVZ,HtjE^7n!tdG[/W'k+
%Rl[G=,,6B"ULW"f(n.RNL,/]bWt!UK)!puS<2NC0Xku3S<j0n1PM\GoD;3CUH?J`4gLW%Vf]'],M7Ef@2j_p]X9Gq8ZJ&RSs(SL\
%hmT\"2;#$C3F(aa0&\ml9n))e9>)c4?"T\]$4O):2Nbn+X0T/!jJ$CXELO:WlSm*i\mIFpR4\?NIIZr:bI4OVG)tEB_58UEeWUk3
%oH1F^mf)>l@&NN$/<h)`[Y-!Em2Pk]Ckp<E)Ntn0\'?IkfkaSrFBk_(Db@E5agMpSAtIIf2D]NnEiX?f1'`!V3K6I3OaHET>IZB>
%XP/@dF&f-eA7B!AmN:a:;sekZlo)kAm4=_h6rDkI1i#"!p0YsBZeN^NdgpQ,ODH&qjAC&Zbu=2*ACMlCpWH16IrT*n7?9,_Dpmt:
%i2Q]:h/6u<%faK27T[(V&#2r#SAm2KG!)g9,sMrmrC7Or[\Z$cAZOS<hY*GpCp@Y$MG`-[SEPt9QtVOk-:k/F_#)1/hUuY9El0XG
%AuaUL99?Djdsk<[/n.k^/X1\6<Jrb*eO5gKfX1Ti6hY(i;]j8Q./"qID;a8RrLI^Zo=CB!?39C%PI9+oX/p=/>h$+%V^,,F9rH^:
%9T2`9!F(@`b_Vj1Xr6G8P13t,4@\tn*+:1bP7m7nO1n>R]rC>SW3&Z:hI6.*3@/Hl]1oT&)sokNaNWDR17FoB6rSF\TpT%H4Ca.:
%n_h2(TBs5ofEmD07h/9&O#2'r:2=1A"Mp_:mEqlA^p)G!bpMY/Gt%G#`AY&n=@Q5q"__NIfoaM20jJ?i)m>-%73rCT,P+W0!g-@7
%-X,kQF(kTe1d567gl?FtB'J!/\hPjQpe8,`[67/#ArNL'RIt5,@CD6]XLa5sbfXDpWVNNiBK6=b&LQ4>#5#<:Dsl_/i9$HFa1oi1
%.NG!eVc=]2p2W[<Fctp2\5?%6FiD0]Osr"t`:F):WN'h_T?S)uUmT,/2DLh]Fk3n#DK?icq)lV)!Lkkd<(]-0"lHPCg<3:1iNR`K
%-cF%,HH[D$@_+XudiX;$YhA9Ll?TgTnDY2\];k8aCQ9j4p@7tu,I7"ch[gB#CMnURb][*`h;<3nR2[bE.!frufsnbTAelh*0\N%E
%b@O&fn[#8W)O/'kF]WA[W_)`bIaIL<CQCn4m.B:iG-]A&n1SVradgp(anAYD@I;F2#k@4t+,u*3Yu`gE]EW639mcaj(SB"h[CNXD
%(pe2Xa0ijF^OY]H4#P[]`E^@LPAB1;#&A,4@PcEoG/)_A2J$-3Sl1BBhqY)VgKc8+.GQ&8?SNg7c(^;*BMq(:%-ec=Eb>pY5@!*7
%E+neLlqH'3D>L]jU9e@0_Oo/[N?ZPXRKm?N';_+m;XCKq$Ec?:2MiuAfg_-Hfo5At3@O$;X(-@V<Hao1kD[jJ29_FspXtO<9_j[V
%^oZkpO9<F\R.`L8-=!VM]Io<\17Q2,Id,UH3?l86M,]s/hTW?CDXr7<Hm/C#"[QeTfo4e!m^5"<QtE3I9paQ0n@Ef&n[iTtRRq@E
%BL"7Va/XQWr*EUiNkC6-K-jo_k,9MPY@HbZ0CpFQjm64+0Nn*_c*!j6S2u.CREa"?nfc6KRJ`E]9r9Mq?F7%"rD*7BNo!G97>E&)
%_&+)Y8D5>1akZ@KG`KIInQQ#F3'h/+fK7cHa,#Tf-TkB[dluU;R^+U5A*im2p=PB82>rEpYk,Xhn-+>="[?>ro&u9cl2W>:T5*)H
%d:"id9cn+@K&5i>9V:aZ1aW%DKW/RTD"jBiN_B>Gbr+"H?I>2gpO1,Y/HX];@83Y(Mc>WUFZ]2D=j],\=C,bc8G1Z&Q4ctPjtU.U
%G-_Ua&8!C_O()/?Y"?)IbF>d67UFteG(H1i7N9Cg((id>kegM26k0Dsdl]A`Ftf`j!:P$^m4/C@c6h%7'JgY=1b9V!&)0&Y$#Km-
%8JW0jk/lB/jW#Un[b3cM0f2MBL?j$ZR[l;LK#eBZ7E7mDc*a/ZQI1Fuc)i=LMm`rH)I8@=XD=:6/EcEG2E=V#*A[f`H7DH]1(25E
%1qg(1.(i_QoWD-Ec'l_5d>6V5OQZk5c\X?(/:5UL3T;GKbYqC<RUc489KkOrh=i0^+mCg`?@\e,Yd1m5iS!PLQH)r9f3ufVnI1Bh
%\tB";@T>e0eRLMTESfMUAJ.DqONAOtP9b2`JQN7#1KW\3Mg.M],E%G==JBCciGJ'u*&?m#WW0t/?(PS>7b4QFS\f:0f][-[qn#JB
%gD>)3?UjChg(PD14j32u4`1$\#GNA\?+J]`LV2k(/t%NXop:)?N\Z/&QJQ8:AhsI?C<MDJ"p[ab\QYq>E9n%_FU0sRViFRkm-5)C
%IHqPZH_UA#QnoDmp>IPk-n^&X:PlAp>l`Q_6NEN_52=OTY_)dmQ'j),)l/Q>AnmP1a:c7]ES(VUgm/Zm4`*(.]-+f12@%>&:pJ.0
%KM3/;Oi6eP(FPq_$8W&p6NE,=17)2:AH%u4(JKs[Cn:VZ<,6[KDf^h1"e(Uo'>?:&@Q%ql=@`EU4@q6Y_JEZ[g0'X:p_JLj\d`@a
%G&:arD#SBrG\c'&VT_"(.;2Tm(5Rl:'D/06Zr/5Z9H5q%&7hO$jHu15)R9O_Wj[u;6(!,)c$S"21neIWXR!a^H?,Hr_QGe`g(mVu
%,HutV'cAmRl7eAH#$SB*'IS8lqt!E5f6u1(:#ih8r9PO?Y^gMW_90fei0DqL3Jtaa7a)mB.j,I0h/W"4SU!6<fXS3-RMW,ZWGC3O
%QJeF0`-mTI"JY;OR@/:XON_Enbj++_g#j-0?)H$9h<6JADR61UDmb/;!OpZ,TV=(>OcB'A2:V"DcYgY264n3A_7;:;A.("10feNY
%YI++kE`jFhP;=L,KkK>(,8+X5[m)%Ab>iAKqjNg12jpO5,.h;j[Qm<1`s)OdEA63Z-81:/i+\WHP8>60OF%!oVrOKu`Yo6=&U0D>
%p6@cq?QDBnZB$>6Q0.fRQ/bf<l&%64_.>&!(\@ErX>.H7FF23fZa_iN-Ig:Sk$BV:Tm)h$?X;U`enn8<O=&^6RO)C3EGZuU2%h]c
%12GK@R=0UL@3Qn^[4;?2h^17ngbHpjj`:6762dbRl=Pu+=3A`W'7_NKJ!gK^Jb;K@88,<<mI[])i(#A;K+TmMUYgatck-OD\D,BX
%?5gWm=RJf:Nj2`5lr^SY8+k'Lq.6m?-Pm6E)g/XRb?FJJD149tD+Ei;q]%4QB,WB4Z36$KimZ!SY@*5">UG)u?Y35R,:4rdgQdo#
%TJ2R1VONo\P?6nAnognLZB"EV@b,./i4k`-Y[qF$=P2Oc:Qu<^`C8jT>1]b#&Ob,lc31SZ+#s/E\.3u)VK\rb9Tl?tb\Lf3]:Hc@
%1bt0+f,uK/p:;slE#FhTp8(b"b]8nY(#),s$DX=IBQYRN+"Z>8_V8BW1o[Cb61a'[=RoJ<LcKiBr<7Sua0q+*._opU;deB&h"8J*
%)>n<t\>^t,KjgPa\N%sn6>k!_0f(lf)(kun"0hilILp@!W,$0dVaoP32MA)Q4T)79\dX!C?%G<diMW2V\XQ9`TkWdcAJL&C+O\2C
%ak7>6MbV\pl#`R-a#AidAHAV#r[#X)mDpX/"ST0U^l<&_6L`07h?^&&E&4(,8H`5T'@q1*JW#$`6LcN;FQmT>]>bsJ&5FY"rFtl2
%:b6>*U;rP->DXjZ&1:hD;1_0Q'R*t!BP7AQG_eVNZUlV[^=(Yd$-3b$-Eed0DjYZ`;jn]YXelnpUC4t?F#'3ddi.ZQ5it-rSU$?t
%5Zns+@BiL)dtoI?(dL4U#h+CeC2hIGa;25EbhHpf)3!md'8(tYRW4ju"80UhmBH9c\fi>m@$\'h!__6=PFX&iZbpIbi\<t_+Z,(?
%.8i>-4?gUT:R`.OAsqbXcm7@32i""q1[<4i>)*bC5B4$8gRc$tXK>lWS8cjr%`Y*u/>RHuLCct-n@&E[nE)"Iq_2-j7ZTl-CqZ99
%"elkeeINF79\b:n(n4'1MAiY4!3H*5OT4O2gHcd81Q8kV;I^XSB\YDRMm3]?X5C4B2bL4Hs1!gcmQ^\=Ms6uHA<c=4cD)tmfme$,
%9`/ej0EO6JgGJX3CIXF=k#YSZ@cns>!$H,q!;3c,"@4hnk\L7S"7o$Sk]@UH&3_?Rf20Oa'3]sd-cg9n._0=lD1.1&CuKGYM)hSM
%q[4*rn44_t<ugdh=>Lp`+FoV4IphR__!]oMAUF1j1eYE@K`cpP:I<V2(WI,E_mL1SM%6<KVr4nR'AKj*FU0$QgSl465l5-;UKnAN
%FE`1[1QgrTrn1=0_jk*"pU4fAj-76#[oL&n;fS&0V0W50gV?s@H<l$0=j=90rQL_$D,pj>M"c*DKB>dB56gac2[B*Lf=h-/0F,o5
%Bsm=3#D$04nY3grC#p;m5*Z3eYP?iSMrk-eX%-XtK2:M-GsiXq!oPQW\>")4PA-=f`k@;PIUPh.3Q7j](j*7C#+2:bEZ$C1qLtWc
%;R_.D`\H:Zdp6-MDHE<M<;g.)B*L)UE.MG$PV2jOc;Yg1'-p^M%TEk!QF8_q4:8^)JmkAiWoA)%ij"mQALKr,#f&NEWB?XO9t_+f
%^`kR/("i:";nE%p0tX2qBFn]-_s[bKQF\pA`tjL>#sJs0(L0RO@jDIA>t(-C5QUUKXOJ]Z_5n^m(\aA8fc2\%7tLmo!1O$GO[)*/
%$,g$P"d,["]6h?($"\gCbmS94jUe8('1'l([sO>:lC?[LdtP3nhFu!\qZ6ku98*j67e:uOQu+9tbg4kRXUB+lZBtrsDO]!U:TB_g
%R6hcG6E32'jgSNbh"sd4HNP6&6ZM]odJmW)en=ELJD.ieS'sf[?#=3V_]^5dmVX6b^@&;gZ<t'7pUE$jRfm`ACWoW#mP5O.KZb!s
%)a(01<VBub<`[VT[pjMG0VB!C/T]:;]oiB+;;`BQq@'HnfuCJK$;`#,J\CrP[7?LpguP-q%Nq_&P_ktM_E)7"X<-/O\CT"rPEZTl
%ZlPd4B1/,=-7+LL<K55%^pD=FLG!g7'=#FB"\)R]>)ogI?crkU+YNsW#Xfo?40_OK"<1bDA'H5&=Z!H>A*JuaTlgsUKH5!e>/c[T
%mTinu3SPsj8L-JbQR%J_8D2C_/etfs$_pGAFb[rYS-T^%MrCQ3\;$k*W"HCC[k]GL"3=nG&jJ:JN!N@a(dRrr>VuY%kV</mIJS)S
%kf8eHR\M9]EgH@&GV-GjOUsV68b^pXAG.9'HO'ajb(?1(h*Fcpg62k&-7DNEJMUuGfnFn/;.+ia/DDh/'+AK4plIi@'l[oECYP5e
%8Rk5M2OC*mVZQf^Yg^'hDF4u5)*<,u7QT72S;HJt"AcZZ^s^R`fPNg)9nN8qK=qe`_+h56n$9!Li2%h&(9/dP@\5L!0:OKcV.ikh
%fXi]"\A9\_&gBnp/fa+%<UT+W8'cb_;h24:BID,_^qMeW@Th<a=MJ#!h%;9:XtZ)Z:.0k&003E@J-qfV+D9G^[_7b?&W5TsfPcfS
%oM.3S@,3e'"SU)^QnF_"/XItuV[6`6:gslL'Zt9M\[hpL[ICuTN(\7aVW.l2nl;)saIlSL_l%b<@sObPX@P(2]L"Ul9>\n\Na2-O
%g#*#U@Q>IUU%Y:],F6dj)sW58Fo5@r7S1N@'?m0DEoeGZ+b\uO2fi+9(,>2Wgj^uVYHU_)UI>aKbF;hA$FEip(HTQH?X\^;<7f"*
%?F&I(CDrB`YV+cISnS^L.H4*]"2rY^NSu&!@P5CO).HWBlf1ZrN%65'MCQOqgZ"YcZft=\Q":/V[AWS&]?[/h@c4T[MLVGLf2-tu
%PSB;.;8s4l2TNM%hs"_N+pNM]-s$r8iFplIUdiF$_(cXp/Vrh[W:jn2kI8"++D?MuPsdH8ZWR04@,7Js!1lHAJHIWX:_@afI&;SO
%RZoQ^Lnkl*fZ`^Q3>)-cbT+;5fYc'$b,d+N=REJ&Tr4DoUr`W."&as`SC5*.)+Kh!V@iT0KmV&lLg[D1cZ](n$^kS<#Stk$!!Hdh
%RPZVA%>u?L&QY78^<;PI00\0-mkUXsNXkJNB4hSh`Qu]8a#i"\.kXLlT7?Nb!,U-O.)g&i^!,=8-7U'%%e((Snh\6f(Lnu$K]]DA
%RA8eI/NCo/nb>VB^4ZsETb$\%'ip)EBH*8hF_eB79gm.7"3EMAc"*923q95FC1TkSU%sL96bsXZK_iO2DV][*6<Y!-/(Cm8mjsb>
%U]l4\l@:q5j0jKt%\!(k9S`=L=*E`='8c0t/[\uk6YbNkL%'n3Gg&_6;\orMNe`[L5Nrg"`+h_ko#>:QkrM._Hir.8$'[/-k%,Xh
%-IUV/Fs_N"YJfCk$7iAKJ-m5=hl.V)q0,PRlXG1;APkcl,[)@iNN(*W%.ib#Bm#.LlHck;.gdGr[2<<@c"s*7o!<o\BunT+64QRa
%Q/N]uZ]L'&:Ca$l-nHf'%X:/6>uU%8;DAMaI*0X\$*0GQbp,Je"NZ]`NAc:2-d%\70aIB%XEmEO4m'KH.'boQmI=,U[#fO*!>NGs
%PaN%adFGX/,io?PB5mBW6b-tKS$@;r'XeCZp*NET>%OU-7V:,6>Es5M.^oj5k<*c7M]<trOp,p/RPH?fZW-:]+`+Ma!-&'+nPnj+
%XYrQ[9ZsH".!is"ak8%BbaX(ELtrkJcOG*^GWnj]^7Z:2j#V/d[M+TuA/j;eh)$O5:pH#JEWS;SYnJ;L+<9MK4PB2@['4DOrFOSB
%B.dSa]QO!9T,kU3k69,m$&*]lg96CWZ9CmmCA)[+OB6u+*:_/E`DHcJF*-V&l<l<nOVQ9,9r)IN*VsmI7]04gH'[)+&p6'gX@S?H
%#taB5VD6FOZB4I,Z2nc3[AZ(tM`O+e#\e9Il]'P_`8NGAm5pR;-!aM*Q)%)X>Xr38O=^aR1@I\KlctLHY`05<LQA0.RgEU02l^Ya
%>::bDIc.oK3$GuD99b)BU?GZ^>VjVX1,SB#Km'rJ6LL8&ZYYU7`.$.9O#?.03h*Lo+2J#F9cs1O-p>#^`+P+_K5Gj`:;K!5&#afO
%R1d7V_[8L8quTRh35h.q+(/\h5pdd)@6l`4k[(]E]/1c4;3CU3pE\066P7NM]4bU)HJCn.:UA(cWZf>W=I=f_Vn9bl%UrVI&q\\`
%L2PTmQnK9]H`!2=gP4%S/Zbn2E;%sV>XlktLBB2mF4T?J]0-o1Pd1AF_8Gol]rG?;/BGgXjFM$\ohWl?K8K\<!0sB7(9.po#,O,#
%XMPQ?9[;Rc)N'ZJ$;j$X,+%9\4YR$>I%W/DoOZ)!VS"2uAJ%'Pii_b8jq6D)Y"n07qVhp5p&f\,0?J9`k?6[1G2D*Hr3dC&(?at1
%1CR==d4>I^%bM11EAl6+N43H7q:9WA'$%2t"J/q`'BZK$f3@O%kUfLeY.'o3^#d'm[k+9'bbT"CH6VF=8hmqCRG`@IPQ\q_Oen81
%pnVU^3?CGlhX\HnPXR14B2I)\J^ro[BOLEh>ik<A9n@\crRRW8\V)Xmam98=M#cRhHj7H`)?D(G8J$DDS#CWblP6_[:1cQ>3O]IM
%TT6V&Jh1\J!@YU4-'F]a>87dU:]QN.-a&P\3+Rk2FlQs>3$-#*(Uu8i=GTj55.qF&-YNM[[jg]Y%aRq%[bK%6ld"Hd=pTEC1;gnO
%Kl\ngXM?EG^=N[Vfe2bI)L&gWro9Wc-L)F#=aj^YJ>To!M(Xs2>f?JTNXmX<!<KS1ZN0ZDoS0%J_[b^&<+tG="6FJ[1<=oMM)0^m
%U.H%CkPaZu?ffjU3AZ'GdSdUK#;>l0RuLu82Rbeh6EDesVB:tGqVLh&gu]d/jsRh"g*pM>2p_:=E$2CBH\X@'KaC\2lt3b#9gBT2
%;B7ctG*G*G/5St7=eg>2`ECR'*+XC"(Lf_"S6Wqr\l7W<j*!1=<_?3n$r#XjLs*IcHEW$s/IKn0\Vfs_\_!$ka3*_h_EPQKUq*D"
%fn.\X#>s>$iub1U3DeXIMJ*#jNp*c&=0[<Yh+;>_M@6&[CMV\M88'Q"VGj[R3J#q20[$rG;D8@In2Q<T14[Q*A]H_82Lq(5fgX_%
%SRhh7Xmpr^A-5gXD@rb`N*.2gofNC_Y)if-a=;aU"T5L=n+Ptcr;;\T*\"dA4loEhS&lFR0btuQ)PE-74,_3PW=oAh+i1ocq![-"
%\"4`"K=KJ*e!3IlAl(B<Lf";HC@X)IhM/`4Z'(t,&?u\mGK`3<4ACV@$?mcNo9Kt<MI[@=8r`p1O^(k4J<6]-S45mmMb6"P3:*kk
%YaIp&K<_+S8Q+p#2%M&6Y*?"ESA.V')Eola=^^W^p$WUh-4aPngU=-6bP6L&Oj`4@1?:ug6GCDb$g9mA(r>@*lqK/<Ab-LFl#:;T
%JjWE6LqJEj`FDi%I?9uFSuH5Jn8a:^>S;L87Qi&:]bPc0NrLs^!f8kq@:mfheC_j[K/UVs9cS:F?j+*bhB_W\#CM1]"*O5sedE:E
%f;<KVDdE9n8,fV>/'b4)`)$T.#klctR=j*KA6+-OLj(1bF1TuFck&LN[%9CQOk?s(FsnepT`ce;BI/f*_\g;ri#Bnq=gquGSL2ef
%=^9K><61kGYAiIHLmh-,l:a*%B)o89U%/W0g&l8Q=O5V`/<M_UhHCQHg.?mn_eo"U'[jiB.W7JbXlm.$;^f4WekYk>R!SAs.b.mN
%''n2YKI`@elqfbYI!l",ePIJV5h"dn!?rq+*?DDKf6&mP`=^X&6WJumkl0Ah0bFq//PbO;DW8tDR;$"Y9$JM84)=Uf'a^iRVff.h
%/'t@e`VnD0Me[#ApjLOU2Q+8)jE>`A"43J^Gi6^S%O`JSq%?5h2M(`4l(gAn,\Y"(?.`J<W-f%%3J#m-Z%di1@,0:f9P,^-(,BsO
%VL@P!UNlD2M)i1E'HEf'%mH80ifQ>9J=HqiB_IuP,laSk<5]@C4d5TW86CR&LsVsHX[/Y$r6`S;H:AR@VU0,=?>'b!0f_;B>uQ0)
%Y^Z(8L_$W)`Dcts0GJX'##!VU=<3EF?FQ(hebTX-OJ1(%>br1Y_Ni\OVRhl,6JD"!i"3m0njGBN@VeW8U4r6Z/9%dcW<OnUh+Q\P
%mtL+FJj_uL-"N0):Pf1?\tXJP3/7]2ISR'M!O?+"Og-ZBc%eWs8LlR)lda-.E8Z9(S":an88(`3rh5$'1n'_rgbUZM+H;>fMfG.S
%>o32_hh)s04AYO86!du(Guf)$o>JD0>klgl672h$>JZ940T7!*mPj#4ZG0+!3?B85#A]630nFP;)#[&:i`5?9)N7V(DkP1=JC*Jb
%Ho3KBBL"@mCE6#T1UU%=1r+Z"4+\q#\keTs`]`<"@(L!_(Gi5hP!tN6)%"]#/_tW,Y^E`%BAAGV2@r5e'b0C'KSXAGFHKH`O+G^H
%=\hRZD.FgsAM!$f86<\)D!lYLpds6b#Rq8r*'p'>>7;@XAW'c'U8&,CO.r@PHuWPZGXuZ`BU^#rTk"h@rL1r!@0r\qePJk-><60E
%$]C46S8ufdTI3GO2qU`ZLIPeX!YAi5i_V=tSWdLF0dZF;)2a;^+D8pOa;T(5'>d9Kp%7%$Q$q3*dTR(D`'`BR#gGi=T4dYUB[W6=
%AQ4=jUh,ZB)j9WibYocn_pGKJ>L8uYQ,:`MO+L_+43-2j?Fo<W5_g_&T@p9i'?HP;h\8H:$N2%&1ja3R#gfL.Xp;'GP'jSXldD(W
%=KA<[r!7AGFBqcQ6!6fVI2F^kR!d!A>PI9:c4ZaR$3W@KW-KNJ@9jR0VPFT$:f\<ecE0m,&5>qSKVW$hbjGHN+I+5ZJEXkrOtrps
%fUFuKU*J;eUsd$mAL'SL\o&'^nMV4%GYnUpLZ`D.R$="0mLt.XNKi^r&gk\XO&-16XHX=_h2Qho\DuK9p7?4tY`p@;*C)V[W:bGi
%K6'"9NuGZ?JX(/:aY6ucgP,]7AFZ&AOU8<4i@\S)[hGM<,EGN-abJfQ'S"!om1d1Po0koS1bcS4`/XKf<)*ecLmZ0p$Q6(H(cn@M
%TrXtg'+$H<])\'2bN+Vn]gI@.kf"2XXlUig705.l#mAWj!^jU3GT%Vd,.Lc</(LF!NZJ5O<A6"g_C!T%T6[QPl"\j60.$_.;_UKe
%O%hSJ&O[:;4u-.1@JOZ_*k,T9r0?*SZ`iG'kU/f*$-E9%o>'TpO5@L'47D^t^.d&Z\I&18Zk,MsAU5fcDJF(VYUL+eMo`RM)sg;%
%'+&O^+I8\Cp46)b(51$_<sk*b=iu9u)^L6AG:-#u9p:-bi)C.V9.W[G@WAY_qg.1&b_Lc,hHYc'EMhFl%cHYIAW`offJ48AG#CK>
%brH7^OH>oLK+&&([8;7Ai86QnMntL^WPf<4@\J?A:EH*B`(:e@<8lhjO%:UD&ClI_k=dU##\Sd7,3Lgb+_7TJ[9tcseYsRYZ9euX
%c>nJ8!c5uJ>$!=p;\neeC='!G5^70_OS_??N.CZ`,\'Z$+UhJ[_I]?1F>pDk@0SrGVi&aMV_d]5i5$Xh$::o>)P<T\&-@DMAJHVq
%Bg^O<o4AK`$*2:BN.0R:R,o4[A`*4C[Oo\a[e/i!&+*!uf4Wg(rE8jUGiHH=]7!hjI@3k-EeR2*"?'t$G"FFc.Gu(5;O@>8DXC>V
%3#49Q@/KRGYoSHA?M;[`m4G66j<SkflXj97Y5u*a9AIN=RZ;FIBKST9cV&7bQFK`N1WoT>,k0P`i9.!Oph;,Fe#*oTBaO]$T0_C2
%G5$n1p`FbYs2*]Dr+lReqQpHVI<Ks%D>*rgg&($\hB.)k5@<(?H(N6HHPV+c>Q""WMk<C_YmLaYANc>]O6Be5L/Zq1<iNU$!("T!
%TNGT)1n(4^]/c4Gh&!nlUoU@XKGRakDS*%rBLZ6N^F_^IQC-p+X(hQeDf032JGpp@Yfh[#MYciqV!!Y+k4'?D+l2qshfJ.4cgf5n
%BA7g[I.BGT"2<q'#OsA9ImjuL"dE=6]I(e=p1`?>eum)YogB_DoT=f6G"mfsjSH"UnsT,:l8a">V+mX.+9XH:+Ugs6$<4l(4&O6N
%dsu,0^klGLlu![IeB_Sg0"X<I#*VC5[pD2IoQa>'X2%3R436t=IquW-^Aj$/GMkJO)tl25j-._cG;`+MCmOq%c'#cU!?Up>:l99n
%P&_1`5\4)K=<OQE)=^sU0PE-bJnn]-NVgMhRL4sIJ#S$PG3_UmMB[g6@Qo7/9p*%K.4t_bgr_(8Q.+gUP&A+p,A\MA*rgcdFgqYQ
%Q.dnRnX:[[X!b(UC;frSgS_%s?@8I\=E[GIfpojh3Iu01JRtE5Jb:06:u:Y^n,epjV%?&bALQBnQ;j(FJ-mPC)\Y;s@rIYQ>;,^6
%(:S/"cbk%SI[-)%&$>BJ@&;_H5etLY[N1rglsh2O\'>B'ibZT*PXnQc9Z4d+*o:i.rGae\24-s-(U4j3.^'HCOt)/egQGfJ[%!`9
%G1qOAUIa&<Af]eXTe&cB-Z+;+Km09d?7bsDk9$n4-8[i0*)CHE5bKT_O[$s-R5_/8KkO*^Bf+fRR+W@MYt)!An.GO.4d_6G,$&mp
%@hm8&cmsJ!F/YfMN(>X*(Lf(B3*/)T6Ons6-jsO:9m`<C^[HI!Ai!LN-uCO>A[.sQp&ee._0D/Le5!SlaR\Co;6l,mPF)7Y\SnNp
%#'Pu#l;T'^;/.;8]Y%:j7Ao'YI6a8c-i[&\?;AI=6*7TK##22:.Iq+lgHZ#^,LjdpSj*ZR06&D$`-pP%QOTZNb8[VY]]&#+$Y0E:
%bWN?tJifDEHb,Pur1#0hG&3kER081@Un^Zq0.B.Y\<k,]7HM,_`:1A/MXmL(]!D>Abf]j6,GjT-pGPV^;WP1+T-?VWL=\#19]*G!
%1Y!`"%*b_t@r`?4;\_)3?Vnk&':ncR3b6T]Z0%O]*`2^q8=/[MH@Jp9YjD&oGjM11DmF`Iit"5=Jc.\O:M=Sq%oDMTdP@h.+6Eod
%eeQXI3q!5$l^]_-%1NN4eNgR$Wd1Q8("*<b>>nfVgG(bBOjWA=P&g(4*mX!=T1bjKZ3"!"P'`soT4MWMaqS"s<S5`R@$*IdSG'`!
%ge[ML1G<r[qI:U)H_WS`0:PPtBqF9E$!>-$-KebPpJZLQ,`Jo$Z*HPUP,nFpHG*WpHWk_ghWQOANS_Rba7L/4*GnCC9m*e#8/ca_
%&TMVZiDousWiQ8OX:gVK*q9<Y6n"[sSO0#<iA!`\R7UoqEaQ;378_]ejUi;dSMlmkW_>Zt5-cu:(bW#hE-^;qbNC<ZSt?QH&+L>f
%T3K+D*<aS$0W("`o'SBrYjpYaF^JBR!f-t#l=NDKD+C#c::LZaX'f"$![Z:ijMM,fH=Cj,XOG2Z:o^gY-d(G-X'l,nBH]@])RWck
%X"HpnC8Y)^];XQ9ZN]aMPCn&Wl3TbgUR7V=HNifbe^F]ho$nM_/'f-@>6T><$M?UqZ[6T0roJl=>e-*4]OLE<",:8$g_Womh77Q'
%D.BNkQbo/.kc8][Ep;5Yae;NtM2HtF\?a;WQI2/mq%R?4TJ150B(d7s[`Y\G]0EOI%o1(2e/Y$]%icn*^nE$npNY4CW-*W>!GW!f
%9iScm^0dW_bXDk-XAa<s#7$I#T@)\ef;L@Mii@lM1K?qsnsgnZ4j;$)T:V/i(;L)"B:LA1IA>laVkrIM*@7VT-opP6PaliijD9dF
%r`g:#j%53"'-X8:8B??92qFqmK.p9jBrG`R3!MsJ/XJ*NkE>i0V9V=O7/:3W@"`"AV]uum:@l,SV'IL)e<O)o7IZm(%oZQ0D&9A,
%h*(K0,lCDBmU_7iL#,D(O$TF@>pZROi3NmE3aMnq]^3@Q'#7>6SIV2Q/\FDl3A4e@J4Uf`cEUKnB^f4:L^`HR.;_[:3Q48%F!e<s
%F7:%F4b/BM^uRl4q8iHjcc]gje(k-J9_74h*%]m]nfI0"fY\%X,a+XN)R-\khUl(BgWaT0p2$nCB61IVAoi)i['pkb<RV]J=BI#5
%'2.S/-2/p=Zn2d^cbW(4fT(aa(3qN-1cCCnU0X;HUI8$>Gt3_Z:SpP3X$qljF/)-aX,R`TSkOuIl()IOkcpQW*-7hb.FDY#6n_@#
%s%l=0]m:Sh[(*ip;cc`gSl)6:U."0%FO#_L-%J\"p+oHc]QsW.\nn2+I!%i7m\bj,8C?[)8^ZR5j$Z*X-$no,dJYLCd;;[9cAN=;
%ebQSBk]ZV]374XNO#bU6XuOi%+\jl`7TgdF9mT%(>NcqSA'i@c%cW$eH/NU)ka8C@/FIiSoEdTaZ@7)6W!nK[b1VUJUlB].(Jp0!
%$pa>IP&7Nu)8[UqnnEdoY8U)/"Wp:"m*oDe)j.F"HM>sVekAN>NdR&k,aeNe$jrdp?@tUl?eK2DC8(0^#V]e\iBM(Qb]Qe/hEShp
%PpaVSW'CePY/1bCY'1C^B#4HofA#X6IIM]tTCd`=cB&q3*5o)"Q5@T>AadH62s#bsb,7lQ6d/l09($jkI,e$r`(]m;*BCo\<S`58
%&/M^rp6(1U,M$b-&4MJW6p[Q+&Ts7k(^WJ7E0<S=+JPhb':&I[6A[GE/&\,b>Q^q#Kdo3)?Qk2N's(8tDH5HE#gQm2<#+Fq8bJp*
%cPgQY\B1&eh>""MMX<1l1DtKgd^>'*8TUMKXkC6%OWC>(#!UJK]c6(F8meI1l"r)qOgj+,>,m.@Omnf%RpMrGJ2G?M9n#gVdsT(_
%+Y$YsR%IIc4]'Sh0Mk!FX%Ie`RjX5u(aEZ;]@E6=72nj7:Hh+950D#9<=_^P4ec-q_[TqUO<:7M'M(]`X27E#+T\g'6MVIn.cSL.
%WmS0XOY!M9;c^c5i^o5qk#U\"%M)<09&0;+<%m?k79Ia5p0?.cP''O#%RR?oJRL6Mob5PEaL]U_7d>(_?;b:$P.(lu[i;rZK;e8T
%9li!6="TaAH^2@ZRY#j/XWiJ?(@eT$e'ZV;7Oc@/[/+W:'h#kt<B6R/O;"(<6o+1H;kka5iGfQ2fEUssP)W&li8fp&lIu+B.P@*!
%af=d-6]U$QPl3n[P,<:mS[<WfTR$Xm@.Kn0WXIml+E^kdg5TrP*3or&.SU@2'l8eCeQ)::eU-ZVm*'i@-BFG''37mG#+Kg.7f,qD
%Yg';:Ei0M,NV!C';QqLMZE0;-mgI[@(?J@Qo<tkab,m+a/]jarn[3sN0Fe]t^"Np7iNh&S<4;1)Ul'*uaH`XS"e3Y_?`JMeW2Fm%
%pj[$p^n+MR,e"%'LlIu3G*'aBobesjUt_6q%^IBS)lT4h>c<%0:6:A`2IDaS05qUK^c0M%SU3'!4ess%`AqR<jlBERCWY^,XrBa5
%cD>e/3^9R;%TU;>;&h'Mm"NmD&t:^(Jbk_m107YS$#uZ@6h/JU_\ig.6WH6@bt6iW;)!H12)[,A8XUiD;),'I9&oA!,;./@FoP&'
%M-G%rJ@M)%!>SnW4K;`OM[a"KAn3"9G#@qE]O9,bZ_X*M`/AA[j"AuOX)&W7D,VHaq6F2L6(LlDjsEDo<)9[Ti\>^CAM4Te#r&To
%.!V/]D#dKW7WI@cKc&EB#F\,@6buXe@Tp<f@>#S")4OqRn%,GC^QU1uQH1\`I0G82X7!2q=u8[De5L.!]Dt?0fk:EO5i]5q,5;H_
%W!_<FGQel(*3eZZ#ZhaqV?<79[8(k2;?(MS,>lFeh:W0s5/F<<UX.1_g?^$X<\TbAgNI#\[UG\q>r/;!Qi.RVq^d2jJbHq%ju`Uj
%a.'?@=`0FLEU0FEZS+?tQ6(;I_)q'L7`K[=T[bP1h]]Dgm4EokqIj1^?:=t/<`Ja,%S%YRlbe"rLI*8X?6?&.5"nbI&(@@=S4EE0
%/ql8\$F+t^KpWr]LgB,6_8ZjRb>:_$.lI.eKIA6Qkr%K$b2)rH5-e>mW?<Nr(K6X:SZ.[Fe2,g83l$b<E5YWd&A8hO)XYF1EUtfq
%JCuiuQe#u"Ji2;,endKPZfB,q:!8tG-YmlfPr2d;_O;K8ene^ECjJ-X2EumQRuaZ(p;tm%HEoDtQSf^@CDMUWF#G)-Zh"LcCjdXO
%[QUBGS!Q"%G1Q$Ul.t.fcg9n&n-MVs;"MTh$jLqCOqKJt)k;VSTtc>+6A8h=J7@Hc_5`'Qke3s]7tjK*dt!Z=k2+nGM@^nc\"oa_
%FdEuC`i0!e`R'Hu)Gjl'gSH6l5<E6cM!6$c-K<&;(OECoVH-0Cmcq_R1c"8q!?1>6qV[)!GOt>%-1^"o?bXS"HQISBM3D74h)8Q*
%ar_g(Z$@a^j*!apG/@;:(!bHR6\52o?/Q83_Q5RQ'QR?2!aPc1C&t=LAFM^=3Q+E3+ono#)J0U/kZ*JC$0rDZL(-sX"pTUncp^n+
%I1fN/1nHDecZtkL53MHJ"O3,BeE'#*TgjA#Br!1HA@CiLpVF?+B4*qsVl.6/omV0A*_VFI4$C49Fa++s=7,]V-<2Fe.qO43:>&@o
%4Th_E[C1jr\S-nbU<[UWH)DOm>H\s?@c*=c6DDc-?<K8oFR60?Q4,#JF;<QC0T&q#,75)Z]hKeh8cW2M1W^q\8af'cMqC?,)2f;k
%:tZh^Huao*B68f[JaY^p\9!Ahs0sT/GHOcSE.p(8cAJ/,.!93;6(k7)RLV:!DDtj=\"as87hDPXd\+ru+Ta0PJ8gb,<?/Rr&&FY'
%@3!a+<ock%99;UYba:=`?8c=+&bsFVgt@s>g[iKQAP=[XeNoQKAo?.43Q^N)80t:EhB(rR-`ADB,1NsX0"$N4q+4+QGrha64osp$
%?M#;edhgG2T7HQM]CW?O4l_4f["\/EB17.C6@.o'l"LOil%_f*3[$ZJ@AN&tkUCkOV`ZQXF6UF,SD4@^d\D]6[]o+T+Nd&LQ"HO%
%A?$ZfXS.TWa[',CTJ$nF3!Cedb`Qcq&r0PD7"Na:f;Vi57O*-^Q1US0W[<L5)q-ah]=k960+luDn#!LI,2Ea<hH_1>VdC7Z=gq6O
%`N7UcI)K5q_f"TgmKZa1%??G*ROO9S'u+_;BeGm_XVLSqmN)O>[&c57Zq]<B)H%eL;0(>0%->r<MDq_cA+:a?_oj!C'j13d?De%q
%C+@lKk;Ure'bAo(EnW1"H-$k&95hQ-Pk)tQ>3%FoZ:i';f$SQdIT6iWX$,MZE.nbJM:P?R/HsD!S;R*n\8AH:YMWYd&V"MoL)JXE
%>^[b=Luai_Ms%027.A;+\JTP0]'8CUg=#G0+^TspacYrn&QSd$N+!RJjAl3/0C6pc]C[O"\"*+EA!O-bWg$j)?<tM@^=Zk+#ZE?Q
%%q1G%(Dc,R\6;p5''`8%/GcF"`ptm@lC6]7%5W*=oj3_+GbR!)4LuIC$-udH'mKA[*K6:@=2VHQCQBWc`d&*(p\[?L<PQnN"'mmD
%EtPXBZ6k-?4?]d4JbI"&.$!AO:!if"Wfum?N;$"0W_JM\lGqGSn"iLXaLW7hRf&C9dJ>FWhs8u`KTU[K.d#+-W[i@!40hZ_TdpSF
%&)Z9TD\u1B^;;pJ&L'2%[EiuG.?(F'=Vc?A-a1pWOQ`_4-"a<kE7-l%N?(uGiiHRK\#!K\P,hP>o`F'9CS*G9H#"@!pT!g^rMEXN
%*Sra:/MCqD2J6c*d@0,pd=X2mNO7WGKsXdU2D4$Glc/5i#ORhFBkgq(lO@Y5g?t,%(!<4f=6GSe.:Z:_.)^2P+d8QCMlPu&8;kn0
%[+DUbS*>:%EGG&F:78>Z):$GA?\,Da>^JGo;]n^H<p68lW2HJ@EA^4Z_amX5IsQkd:n1;S\8jACb/l4;HA<2QP(Dp/*]&C-OLgOf
%iUl)lOel,VWQaJre$[7?*uL[s;Glc0$UHIpK-]-DX>CZ%Xi_H'9T[-T?GMN58D-[kL:;lkKS?R,*]G;hf'9Ne0L`CNWt,?:S/q8g
%.:<pP+D@kP^1]#_[F>.\jh$\E0<_O<;_=o&>JPN1!FI]kWE\gk23$s,T<#[D=&P</lVtZ;?HEIPGi_KMO>?KWLqJrS2>_(9l#LUs
%2iI<u89+=?kO#-QcKaH95-%EI%mY*fH=9^n,Ki2=dUSD^-0KTP&S`5IQqmlj2'8XK;KQjB"WZg)B(n@9e4no2o'd;tjo)D7d92<8
%]mIM<7^MiD@2+:=:mJkt_p8@.&b5pG]1*m%6UI\42%"?MTiE<LSWLoh(nSCrjh.NQ!OareZCOU'^%JcFd(da+OO1d(?@X$K$-M8$
%-:3J0dFC=sHPmNd>u)PG]PMLkdd[@.RSA@q!r`q*>c9PL<!p11+]2>FpleAA>AmHiI;Mre)gb?H=]KC5Pmf<m2ZcZWeug7$9d1iM
%l7V@]'YMs/'qhU8a66@eC5\5k=pGA^=-YV#M:A<?N`V"=FI]Babg]`oD42Ff5j7;T>Za"FP#BpmIWV#;#P^MU?lj9UpCmDuhV`,)
%%i4>Q(&,nbh\-7lk$W6NCr)mKHEa6,2ZE4QTr:b,/NP;=:/_/a_kR_S]R:BlQ;$;DWENOV`2Q[Pd'TGoa*[5^D]\<(j/p$W'DmE'
%GeQ@d*^8Zh%oF&?0NT/"oe[`%oZ/4CBp:6QXDV`eE_8t+TH=k:;h]=JA1KgDWOPkaDu#8sWh]a9[F]@nYU4N8\QZmn=MR:#C>HV;
%PH?=I(!Vi82eg_Y-7R.sjq[#MQS9"J[k)THl`.*1&6`4SoUmZBVJ9%1^i[[o)s_:9#ZGdZ#5uJEDX?l?[qWMLC?pkgY&p_.SP5\4
%HRK9Z`#E$T:1Y,"e+OYnje8[tB,gC+m+7gnp<Eu1,=C:k8aD8S^:9=PnE%(NeMAta!f9n.`QB^r@7tP$\?t^Qe*l_<p"02\c9?S6
%/[n7=p=>-^?G!%>47$D]m!$Qh1Ta6Y5;R6R=hU3<h&Pmtp@d_#hKf3,JCk#@,+mmefR/)kbN!n,D[N;j/?9Yl$;O?@cq<%7hOnR'
%YPVsM*NtBr\Ndfp-gC?_`Eq'b")OnA?ZT%V9gDgWq,Hf9CBhB>rh,u&;,`RiU'_5"/!k9@1#$-H2gtQ@^AQd@UN]oTB((%/?DI8P
%B0H+N]am;EpRq3Oi-EBXOb$`CUt&<$&>Rd8Q:CFk=[Q"g1^f0j16f*].q,f0YBu'=oXB:rOaI2ar8M3-]5jre!%t(7`h2!5HD31-
%!=D29FWjHe2kmXNA75%E"74.A'6*KtCCMmDk[5>'YNQW!!2Ou>ImH-O8fDJNW,<D./]:A7Pu9_c"irNIHZ_qEP_HJEM4>6fM@"o4
%fZ,HaT`A&Y6ek`AaV\e8f=6^h0cES;n`SJgQD.iQcQAMPi,ep;J1)pS:7s1W$ST:7e?(?n=@)5E3kVSH?$])RO/WsjhWC*-Vh":Y
%(EHK^^:0_=h/3$5s(1kW`N46)>+'djIo]tTKo#KZ$%MjsOJr0unG3*"^k\B'ML`"e$!R3,R-WP-R`7^-io'=m%bU1hl:t694e[$b
%)%>3DhZ=9[eD:Faf"GB@Nsc2jX]&fN3T\>f2!9LClTi<-aMDA;.5=$;@R.-Z<C1fQ#\=LuiVuD:7+dH,-$c:JqaI;0'kV/GS].j1
%75^tSL(hl9fSC,)qFNbo3;6GP;XTmK_1;WlQU<FCS\+gX-0pG(?-tOcJQM]]4>+,e,bd(&Mg\*h7>T(06;[mlMLK4h0(AC?DGFgC
%rCK,=lJ3Dn+O"Bjd@7Nk$)j:9Bh<`!22FjtD3bO49E*WZ6kNC48i&3W,_6H1kcY6_ZY&3;+qLPtpP(>55?rU*RYD2DBMHAjG]Wp?
%m9uG@%i;RYH+irbnR/BkYINb1*$iWAEr$p,jcNu`fo.ebr5,S^iuTF_W-/_)d@df)I^]`!dU',8+4.9$/-fnIkRq_\$,GjG?j\0=
%`$1,1\dn`-K??%$M\UNJ^<or[5_L@8bqNg[.&mu/ldQ^W)ePLSki==K(s+gQ9an"sOZ4*n1_>YBc3n+?Y9@L?ea23Y%]GpceSX8@
%P+l>/8UR.jTsgQI<!>Fb(p[GtmBWr5I<NCN3T6`J!uE[Gql2kBi$@j,N=R%774Ns[keM'/di_C2kZ9',\,-eBL[qn'riki1eXPr`
%q4&jPB?Gm\5]r;:o3T0(TT-0*1RMKH&`nT;d_R[RBG(Hf],F17kA05q6\(r-L'IjhYVla_)17to,K5Q)pM#efM&WULh7A^KJh$;j
%+ZXfiVK?JD-4"2ond_n[K[Ni=Re2FDHAeD!nah/QoEJ.>X,dZHWfSKnlTRqi4,5[iYE#H8C:=U![OE"X-0(bFULSVgNAXDPAa%rS
%%;U%K^7jufg'iYS5dp5uZIrnf+M<FqgLR]K4f*HR:Wg:_6k+G"Z6naC1$FnsO`2-a)Nb=1@1s_^2g,\]m+rM%h&*H]CUD4'NRWm/
%'ii6I=Z,1Q2i=q@n&i]f<]?EL[mB^tQ`5-/iab<"*3=("UlDsA??_FWU5Hi[j\gA2gQ,WOlm\o5i8>"pHqH8q#^fj1gpG1u!gdH2
%?urYF>Ba0$3,BYd#kTT!_8B8g(Z`:F5u5(pXM$s.(UIn3L7/fB`[b@!158?#.U&V(3PMc3cNGJH&1Ik+$mC=Q\lXjAX`eBU?eB(7
%5YBL17F2a]+?hX7jftn\>*^_t6=p++8jL2@e^&L]m1R&fS=Z5Bb!kEenoes#g(H5Va=Y].dO`mH2UQSei%YW8,2f3;j'ITeWl-g#
%lcSp5ip3T:p]ON,@sDo&L13bjFU)`+h$_Pl?EnU8op,aQEE1kRSX-?b6l)("r<,C*Q647_f7k(G)-4+n:i"5O"&mon`UE!4[HTMq
%M#N410[sd:a$&Dd`']EYWa%aL4.6uYOD7?:;?UEs1JKjQK9?3`n4C-%pbG+bhsU)nfU2hN0>tK&7\t=8c`X'9m]-=cms3`'8#CTM
%<V>cY6^?NX5_5C'b0m)3hO#e3KRR+!9Y>Ii%7G<BH&(rN]aFnM$i0Lr9I^Z.\4cN:@V@qYp]\',I?RqSHD<6tK+FAUUKT_-gMa0?
%b7oMsBH/SUJR,D#D2:lc3t8U@!hU)T[=ft(G=Caon?`H<RoGWaltrYbHVN0rD49DJrK1l'PqbsbB&QUVVQ)1gb$NG^hek4FW4'8e
%aYH:bQ$)H_],Y8t4?]-.+g?NR+1P+>?Brfi*lEI1"!URABol4hPGakJ7*M$&!?IideXBr@C.T2+br4+g&Z:ApjL!D=eq7Yaba'Le
%DQ3%Lr]N)Q]:<#HMS1c1W)&7D<pAYW&jCPmJ7Ied#)>LsTl+Yj5>D%kjc"6$0+BB9YI$l#mP7'6DJkaNC_8P3KF]W!K/9KYHB9i*
%ZZirD]LNd;#fH6f<'*dnUE,O`R6OaQ,Pb.:O]sjimr^s^R?iqf&r?ZqP%tC"[5*EJ;b1+D2Ed@p2(F?25[m=[L7qScKNSkuT*TMR
%q)QMGI<DG7(Ie!!WAgct_t8d9+10*InZt&*cI,P#kR,Y9n#_>5[iXL0WrLkn'L.)^@]1?L2]u!aHNDQR%e5T.H73X^^cdtA"[lX,
%?lUi\I`6NCipb,JRPcU15N.r_m4D;EEMu0qFM/\uRN]c+VL2?FK8JlM-k\<=<oqFu-h;mC4\b*\p-BUa^JZ,1P7&K0?u?Ua<!HDr
%"\)9br\-pKYZ6]jo&sj!^A2_c(f\8@6mF027LYX^&of2%Z?$nHR#UZh9A/HM,mI'>&KnoY0\5AR&Q<oR[4c!U.O.E#(Dq4lgQW1N
%?u!AJ1l<I8JjX6aa"MZ/&I4s)^mkCU$6)k./k@PS3_k5Sd!:B'lA75mHb/of3n)0Ni3;H"T2%+VUUmVu^:Oo(@@NKLP7@0OjDI*R
%dH6_5*MV"%AZ*p7!!*Ls_jB/.bJEp:0JW?SJlM6<L5Z.Jm5_`fNN,Yonl.%H_<.+/%rp>?O>9N*09g?[,GS??L5U!C=^=4.\asO'
%"40o-!Q__Nd$72GhS`Rih!!]G4Cf\7\?_en8_&)TK-V=39sqtu6F%UV;,,7O=[s/G<UiGdka4pYjUhliVD4q^:TeYdOt5<G:H39a
%E7mA4HJf*rLE5?a3Pt%/&^HKWn:Xf4?IL9W:Dm\k3DW)'EsSmA<s]EAMgg,X]KF%_Pm%c5'SBWW5VSKl6hLb>2+h`iSX6jTJ`moL
%?>\Q7N;=eRA&C(a%a-9pY`'*?$1BIl@isGYidRR3pHpL+j5JO-,(S7VR](CJ6hgX>6?kk>1tnMDq1<B)Db1..5MSfU>NiZ[f:E=A
%gEC;,#YBqMJY\PoOsZ)?@KJL/c*D;YY#]]CSO?#F+H<iJ_;Y_fQ5K!(Z&I?j8NDf_7i#4#pjSr,loL&AX(A!aP`gNLr_tnh;17/L
%'fAWm0j7ggY;UFj3]0pF831a,0bdbHDT%s*kGEE'97ESgS^hQY4hEd3<R3/XV:aV?3Ugrt=N\J5r0tsEM,/53`l%4=g>&0FjPGid
%HW,+U9lg!*/?m1NS"4beGMZ%UoPWC.],>taB&%YjWTI2QLqf[?%/;psns/"&i?NLhm\G%]<ec"CSN]I-CHWOL.MopJGDt/YSC<n/
%G,OBJ$e!Ljg\^LZoDV5Qp&%0%_+Ao04-h=CH1WnCR@41)J@UTC%238=XmdL=*ba)#+$(LUA$eI8#7'gPja,dUl,RR][iu(#[at-4
%_p5k_%UrN/s+t]R5A4*t9i_0W?KD^KnN/subDEnl\GO0l/-E+']9aeB$+90)]pI&CRg_T^MC;ndXr]V$5!2H+)Rda8?oj-Ff=Eoq
%d:noDD;NWRac6]?r`V$n7l8`FQQQ;HD[TLc)lD%ZR#3;<H$\!RNHB09;5`MX<'>Gprc0>,Y<ct`R]*9MK#/LDVOkI!iX1(??/Qqt
%.>:.sF-aR*e6rY91t=aM9oQb/Z8YeoD&U:jlLMmsa@)eqBQHQL.Cc)RmAZf]nM2T0rnBjF<_Qmi"H^VE&r8%bJ-GN.Jc^':'Mp64
%0td"Z7YKjOeWm>d#TYY`LfHBt<71Tn?`T4TSlJc4_5[96;49_,Lc/6oH#j"<@!sful$b47:^%@+((NAf!kX)j4%i'km_sEMQP6ZA
%BN<6C]QNUW_Y*`k[(&P+l9;d7jT(F$YCN=E7#>q%WG>O^+#r#Do(i@#RlHN^&F"u[JVeYeU817YJSOU^<M_]FjmS^EYu8O9#fD4%
%L2r:^]QJnoBE<>#]\a&d46?Wpkl!Gclp#aj`WtDo^]]bT/HV__APH6E.da+=mtL*dO%jn]p,k<7]XO`YNa@Q/[3*'FFnD]'`ua>n
%kBZ!W52aK,Kn&ZP]Ns0IBLGuTY;UL9m*Ts:3q45QJkDJ/06iU[l`%e`IK:KW(>\6ilZdf7Fehs?,<[%5R&==^3t$5U?*Ih1@NB`P
%Fi5l_EADXLEX*Ub)RM2kYc0LTW,lUX4ojpj+M\4AnM-\A_(sLB"49M/(cl8TXVOpq4G>0S.6O$E_NT6eSuejZAD+h`kpaN6ob="a
%>BmFqL*rT?3ggMRPN*@JbZf1pT;%N\Mb`ul&=r/XdE+.>dE/sg-ei3SZH9H,7jm=q746huF>BJ_PBDdYeu+L&VGhRl59W(5(nNiY
%-drj%N;N,*Vi4C-5I6ClXKYT&l(?+Z)*F.h9F\E9*0\3c#8Nh^fO^A%99;\=rc4Yb/,>AiO,MLfW_+eHg9P=,P@rA;=baQba&'6)
%dCW7YC`1Msnh`RP3*'$,.T6P_^EfWuGeHE^4YRRhEr)d\3i]Zg!qHfFMm(U+bpF2O2coI#A4P#Ekc76tjjk>A'l3m"Q+*jWa*'[;
%XssJ^mBY01!"55FH!-"Rpp[t[q=.[P"=:E3Sb<PXkgj:D.;TYfDRD4*]n3#%,_E!W)E\,Q-P`"pH6Gt>1N>l`BhRDenjE^P2;3NA
%'E)=KQ%\7h[Uf-TWM`aTcu5(6,CIc/Kl-K(])0AADmFe"83*\O"4#WY@n^Sk4+-8I=FnqD$r'KmFnekBHoV"$#oG<;?W:N3!*/1R
%H#>,TW_&>R6LQKoqfO5AMqqaek]3?&gfN+D)+L.*gX5cL^%PB</;Z?o&;aJAXI;1p;2DQb1>EfS3,8FBq2sIDHb]SeP@,^Xm,>2"
%GDJ]/=6l[#e*!<8/19Cl,'bFjT]:#(.p(d;g=;92YD,#3^JJ,PAZ.W=Y&2jX7rCYO\n+2L3@D7&A7cO4'rZM)?#XcGRQI`PaaFdj
%*VO'Q"8kIlnY/EceWmSF;Ws`@ok.R,r"6QMd,1][[Rj[h1Rndc.L[G@`1Z<1&8H-=e:h*tB,!D31k1pfRKWlcY,M2U"ELUO0!$u\
%8'<:+>@>(k;oIi!bWA+)>^=m7]<^$MR,Zj:eCilr,in?EMMdN\:Eg?3\V\QO2)qA1*K:>$B#Kq8#1P7q;=:-3<FLTuSl!U>dq8N*
%OX4<MF(>58s%j(&-7+)p"$2YZ?A)9nFdVK6U:HiE1(b%O>.U)+#cL4W'L4Xd'9aIC+fQaD%4W/KCpM)aO`YNh86L)6WIq,9KkPAL
%S*4`'P<_@,#d'npf^r(*G,bRU'%:,M\I.+e+]d%1p>md_b8\e]Sn;H5C^[!-XI'JV-43@)JHcG;FBMUB,:,gukp%YtRaj2a?CD((
%@]4'Den([>Sfd,RTK8"(8ZS$WK0dIl8JM5laiY9d%La%&65:7GaA2ks/?Wm/XE?$WqT!?LGk)\`UMX_"RT$PXY7j\*(3^+aYt(?r
%L;a*g_*IK=7\Yjg6pF%bn?,tqA5F#:D-,GnC9sbFpGBX^'--UNMJOfVk3tB/.1"UV5h44,?)Pi,U)OuSW_*l8?!l$ZV]o1AS>&96
%id$V8:Y_dIYk6Rp\->99&DNYZF_gXm8ek_5b%jV1,mP.nAn/5K[j6;,:[KBe8R;QK.Y]u'.Gg>Y+IL(c$<!(bR7%69;f'.]l4U%t
%ZPrW7f@"PnU@tON?Mh=#ejJ4bb+H!(oaL'8=KX*5Xdfd;!*.jrD%60sB:%Tq8^&BM&I;J&,@ao)\>!%W@k5&^`%S=M?T(EFd=D/>
%l:8CIh<b/e9kQ)Pbjt8=XhH/8Q6<%]9@B#foqFP1$oJQ.W!SgZ$(=2[#eNcY7(J%W0kC*58OLH+3/%.tr`r_$hNiLd>9(6$9`7DX
%$adCl#:`H7cA63iW-_OlHqF)uKhOZa0*WhaNXO<hL"R970!%eRm)pS1MUP%&74'k!($nmr+$EZh_5Vf$>Xqs$F!l^M@Q[5ANe]6&
%d?DRA_MUcL76*AIK(<Y=L_2A>7al*H,VQ/YI=q)i@q[:1/LR7boi)9\#^SbiRkVE__HK*FlXO:#kp.jFWJ@o'9!)#c`ec>096HZ,
%*#7.5,P'IV:8Si@e=bML1p>WYMku+ZNni5fWr0EMD>)Gu%m!s-4/A[#Pec:khJ^_D'<70$cCJ9UE\6IM?QlYP6B-pLQj04<C5[tu
%'G[n>1amI-7l?>A)scdpb%X_PYG)jgm]]<YLnH..]eg/:;<7>4cUAbNMPD:))6";bg$@4#IpB#3]p_.5juB9S%D5c[(=l>!MUnZV
%lX9UjPgZs[^R^B.VcSj%p#mIq:oj2&Po4C6j<'1S\GC=_CQJPDgu+7bcLP*!>7kN+(O2[e"bC5Xc6GFWdTh\=MPsQ&YEfE6TC,)#
%%0sN:6E):*]!2)"SKVQ*kM]gW8kj#4.Ju+!#VWb6^]FlZ[KGoM1sieZUbMGUXIaKQ"ch)e(,SOD,Q<RiFlGk![;I!mmETg9@A!b:
%<4tK?XXh:=W1=:pR8Y16*d$S2p7d];Xsq3=<oZcT9TQ,@7BiSu]X03[/\!Ekl8D<XK='tn05=HKkUs9^.G%NDT(l.KYFJ#Y"?@pF
%bo'NgZmibF^Rb-&SnBOHq+r]u$pj8TX250mW7:np`W_UT#"!L`2(unt1X^fMXpZ2cnM@8flp]!_1rKg!H*k!DIS?5CN.upPf5gu\
%![aW_XR<@Y'UXD\37_iPbpgH^ZdX')[o=BUfH6j4Phm;'(Uj"qWJqCfkVdfL#,DG@!W"i>ZuY`]aZqfTO$4;'%;Ko,%t8:bIR7&,
%d$\-^Rqt]!D)/=:ql%!9S<V_t6o(K?cZ(gtQ[(O&YVV!.SAL#;ib#]eM3_TN)A)!l6IfP&aDFnc;hfU<(G%)l.HNqL)l$_"jEbXX
%%>le2UH"$Z&#jo/JC7'?.lpJ[[I\^sP"N<^W:huO00]%]=S$oG/eH2QmAMF;&Qkdu:JrU`BdA))QW1Fjic?HMFo7GbH302a]gRi@
%dk,TloHg)*9W]#ukMqUbR"YE+4YWR>@FCko@`rFQ3W%96L!;Gf44@S`7pRr/0i<[[e(9Ek%YXM(MOsk)VNIr*)77RAX02RHM,up<
%hgH**qDhE?BI5`0&SfIrReViLYrT_FDOL,j@EQ8SRd?Nf*$s,U<&ffE<*g]$#HU8O!T4]$Vm6QQDs?+.6<^<<FJDaac&Deh-=n_5
%24flP3`=gJTSQEnJu.QU>#:uEWlp-K;@(+OId?tI]r317b5"dk5COO,>T_D=<P(Y2=6aj4L=:XSi,X!X*JU$uq/d\Z&QVR_i_6SV
%TUpOgWj_UuMa-=[64b^@[.mA8-ZpKkH).eK1kUqr]ftLTVo?<@aW5J_W%8:pfV=u:_sMWX.JN`5B^IW9X8dQXe+n0DhHZ`Kk*('R
%%a8_6kU5'8l,^T!48V''KmbNUYN&^-=d$C'[7>sZ!*h08/d?O!9;^Z[d5XT0%5:n.,<6uNi?S`QNtfd7V\?op5>l[>l4M>7VIF$)
%qq=Q,g[rm7(J8RLj9$*4%t`>E!l<s"h1NNL6Tte\gS&$BktnVSR8L2/M1VQE#aRY##^3dTHB]Tk'Ui('.lZ[Gein3&GOf,p1QFms
%_a2[3Lf^PV:J71m!p/'AaS5UdqQR^gT$^ni3d78\06^jmgkC%3/dSA:`unU)4bg]B)!_-W_iT$O_u,H'6b[XZT"c2GWpJd1k]p0p
%<deTQ6,KUe4Wm-eNAJC'ie-)I,.i)?^a-(WhtQaG$l!l%;6qi%oXENj2?sUAqk+"XN&4Q6+lZ:BEW<&b`P=PG>BuY"l0_DD4r6I&
%AO.6r"DPfnbTe"t!D#SK<nr;j'LLg&S!qjSoWSB2*.?8_Qg\PLE"^\PWOj-QqQ>Gt:?>_Kq+ednb1qOkp?>^:Zq)O7'WeB^GYthG
%GsDK"($/bi*pVMbdB'Opcmg0AMFl5bMb)pG_YT"@V)'[(I7c&,CfjfmYd!mZ=BJmk=XK\/S##%mecjW1DOVGRo'W'"j]_D@=)C<i
%HLQH>f0*&Bg?:g<D]se]769Te$@D8WDfc\/:$S_0]S9VPo1[IYs&0_n25.h=*nqj*$cR[j<0]cbkt&Q_as/!=n#RM=1l&fko1(;`
%VI`K$SKm[_BYq9VYD#t99`1@p[`\KOQ.[W;,qZoEQ:CPE;GFRc`e.UnV=T/oi#fP@N0^U9;lS6LM\>"@@1$`-N<dY:?g`P@EO^@%
%%+;B_Eo^a!&YB/1kQ(Yi5>N7X3t*>ka.D9q[5uD#n.DS=PuVC71Yu*^15T+eQm*7'cR?(.R_5$Ql.a]8X*rZ>lS.$@V9r*Z%&qTu
%U@]^"i`7%1?H,hr+?b.@XJG)8Qr)h/j#h(&!;$'&DngOj22@N:Idhar9EaI%H="/A-*.KF@gMI]&Eje%Z#99)g0;BaC4FA-C61#(
%ct#hG%dC3iD!+\9+Ksib0nn+N;<8P*]SSVfkuTa`1fQWZhmfU"G]@>*=3*"=5;IR6@B-gFIsD]4c(:p_P)V\0of-(hMihr&A#9JH
%rAb7`I2MSG5)acEA(FQuZYXX*;]%<^`A-[-NnLm$Aimsdj-/Mjo+]68>9'uAigAcTa"clq`pBTWB%t1i;mqe?Z8dCD7:fXgMOEtM
%*nUN!Hf\X**H+)&;*mP7(Wfbn%=js(BCZ@BW-\k;4])JQXG0&<W9Yl>JZ<1:E#%FUj1IBT+M-I?gu2)X>2:UA/],_06<u%3T;*a\
%?5cAb'^&'7F[]Yc4YYS&<IqhE&/312J8slp.7f0/lN+l623D8D_W#W**4W05bu*+2a#Yf(6f10&kr_b&gd>U:Yr\FZ-mAdf<jd(:
%j"ND9J=;J,NOuu*d9+:X;AE/bkj:0h#g,U\d+NY%&jc?s'#?kXNe83tljif.lLt[.]TPcXI]tPeGE@erd@=47)9JeM\;!t&bm>r_
%OMB4>r0=qTYOqXt"I?PP=PE@SYf+jQ@&XYJ=<IXI4]NK7UQ_RbLm.qBb6^>a[0PI`i"-kLQ@hPIFS(U=kR0,S*oul,`RK_iNk45)
%@sL&=+*ftt(LiH;`5>F,ZE2r?j+tg$(C.YG]+;QU]dItg$p8k$d@9MD[Nc9mm0l$iOa,9!'%C`kNBo_air,sZV;.h%K11_.a;8E@
%'8!#)nUbDk&6oRT8n!/Xc*7`:*AO@I*`8cQ*V?A!?`U2U,@U<&<Rq,`GiFlj"&A]3!"n4]pt"q]A_CJ0Pq*&LB9OubDMCK!D@KIf
%_!1.f#q&4_Lt:G&DX2&7;fs=S*Z$.3YP%.R/FHG;V"3e*:WsHIOD>C@2mU?faY^m%@APS,#urngd_t6sGX`f7:*C--]t")_O_4.7
%((#0#,AmVsET<8Bnb,AYb`6"FCZsUI2;Kd'7=#&U,M`ag?AM1T)bJ^\dijO*->Aj:;OiS^(ON/D79,!#dYQes'WRP,fY"*.Cl,\L
%WHOBo;aTAZF?EK=Ia$;>IFa\H>"Igd@&O>\p02LnO'47I>Pl"I\X>QVXiJ#G\OLHk_/@f?O9N.=d=@7OJJ@t?_A*U3><#oPg/*\<
%W)%S:0Y$n+A10%b]0M,"Lti^]lGH+k0s3S1H/4fF)GVKI3seGXH7>t2@eGZbd_Q5%L!WRR%L7e5)J3k4R'G2oXqV:%O5/<(/<;j$
%Z/0UjNd]SJeV2i>g8%k]SP`6BLk]Jr*TZ+!1]WF[25mIK&oZ8dC=1d'=3pMHAnUi\2Go@>HgGsRG7@rZ.7_^YjK;P07)eCI9Z^J7
%Mm7qTqcKM!@422:RiWJJ-qW2#nh`1gZ7o:j[Zttcfer=[R93-'<Rd;W"1/Nq^^,(r<(9qs]^CI(-c[fjr^/YX86$.!M2@t+\g+i%
%8_SdnWm#)h_NX>^QnqYt`Ek-Y11JBPi;(M70_mCn7e0c?rJ4NGFKB1,2=Gj$i^P@98OML[?\@I$KsNH:-84(n+NPf%h-*l/bXB#t
%6WIjNW78B'2P\E_FEaDDZB@?ICc*nW.!m!K>q+e,Ylo]EI$H-Z0sbfOTG3D[L%`?S+>bT?!J&W^l&@i'Pp2)G,#hi<2pC8KWbpq3
%LUkL"X&KG<XZ@7XF$P'!^<:!8aJ3GJ&[@*[;sk,%o6.DhPprIdmFk?B+bn?AfBT;iA9!s>L,/iBPu_h_V@<haW$'3Ad%Zb_8I*;H
%XQ2*!(^/YAkHn-t,&pCYq%A3$]+i8t\Q'u-Pc(F4s59B/TCtaSL&)%UO5^aXQ'.XrgX0C8%R5d1ZU2H!am<?H<3=rYE!TImhXgOk
%7[Bo4m&gDc,s+=;%5Ne:RQf5>)YEWBh`1568\`iO0/fuF,92rG1sMt8:o1MQN-6C[fs_eup_cnel<8c6i8l]TL!%JFJ(b*#asi/t
%Z*_b5j<^91YOh*R#,;`%1#%7-Kl\XKK`_]*_+=:NKT^:\=*D-bI_ldn9g,Yl:&+:Ulhs[7bqU.PGN)@Q$M.<X0On:K9\R+95K;Xc
%3S2W@?tEo*Y>M+J;!EtF/h@Kj[W"121')3,SDCcaR7NRo@An_;H++#6l-HL6hJ+Rg:&u49q2-GoSSW7D29MXRI'KZ],1ACu'n\+c
%Bf10ErG*"LSiI+0h*_uR:Ua@l6&d.$DumB0\g6$llf6WB`\,\1o@h(*MVhQ!*h/TcL$R#^gIh'T=<JM[FGVUsK;q?K<Nfn#<4BCA
%_5L%*p$kUQ>5&F%C&jK$Q=Q:U>*n<H3D=Rp-B9k.eI*T,jXOP]VY\Le,h]PVk/G:Klj1Re5>(HB;&9Yf1tj]V'+(oPFk$l>Cu*5W
%0WH=V_Y44(+^`cRP+dF=rI>J"r7r&'o8Bujf+8MjTc%[4m#>fH89H!N(QmG><cJ8g1<V8+&>N8iZ$R(C2+^.qg.Y(+J1)L#YE;^1
%1.)c_[LE2IDP`r<KVZp@\Xh7;=1DL&[&[SCm&4cB^.;=/<,W*VQ(%&t3`L-PTa[nj6VZ,8EVSH['1P\/kdfK3f7c9bbeP?;UZXOb
%47n%^A)RT4op/b-I,\*<>#bii(sV7M*W+^]'m-]7<fTE9;LP"O1/=6#eQfF('Y@Yl1^eDZ!,"+L$>UulT:tR/ESXX%>sFYJ&ZR%_
%i^[_!S%N`;\ubHi.4e+Mr@5WK@=dYj7m/'gZ'k7$Fk!`VfSI':O]*WRf_"2A&6.((hFo(i_PSsuKCno`>LO84&MYl0H<3]%:fq5/
%r^<N.NB0JtHC:iiAG3E=e'7bm295bFWMl[88kmc04rYf9GkuPcbVl">&crqK6Q>]A)r@rVRK,eG"_D?cp*B;S7"nGoLbA`>Y?mL8
%CnE_S!asN9>a^"18CiP38\5D1'+M?LapB;rq-S(9?V*.E<,#1<jm>-/D\[P"26q738[?L.D<m-#!np1"[C4@e_et47m)6mLaiZ+f
%-Au1%U4O>AiBXdPe_Zue8s`UJ2K;k'lpqpqelq\h>?5sI</WdFh!H"/.P'M\Z\mYj[`_W4"CI*qRbH/%Wp*6;A5shKDJY9T35dZg
%kYA`%'5lHWUT]hpR=[Wn'#^57c"fo:7]$$_&hdSHOHVY8\L&%@Msa*Hb(jWq.K4Q8A`hMLJqJu64+r)Pn[$G'77_]&/[eMu`u%2W
%5_'Wf,Ym9$7261AUVLtV<#t><fIp)ZYd[s*Wii>(9UYH+pd'NNqWqDf>MuTF65iua69%3O'A/)MWF!24@6Ar0WH_T_WZ\o@3#9)I
%TgBfmE0R`g.%?f*>uUhRX_]J_SlA88[$FF8hIAM!ci_qFo;/H<K<h!U8q#<f5oJZ;.F[.JbWC_<<@>saou4grS4VXO'LUA%au\hi
%-KiN>a&oEC7Fgm(!J\fATp:Of1u4-1#qWguChVK%N/elhN`*:k=\6RXFcM^>+ENutR9L;N(ljbX(T")DC"@jNJ>E$;pJajE$;OJ"
%NcZLT(P%4PD`'1T/;3(B@.XdO88(uQZM*UX[6G_@p;b;15@5Gg!R$s,-Z<$?^#dMiP;h6gfpds_G;_\-SNT8!VY9jb\[1PAS_ZB6
%q9qF3rDPeaC%'9s]e_a&8)PfH.hj:IRfGt-KX31aZ,KG&rc%2P'NU=&Gt:PHP?2_F.cGOSE`0R!HlAUS.Rt?(XOk`0ZaQm\8!0pr
%\J_c51l\HRhBDu:"mj$18e3H94Cp7di80+gem]"XTrQ'Ta'hr>@s6P"#%.JjAI'<>.6o.9qFp;MihKG*lX$!>h=5"$*Z`^^_gHjs
%pYt-sLcces#T0JAaq,I^SQ+$B[8U'#D#(g,jSS'qh`!a@q-C_<'^1aNhp!iR7dYp$gJ6%45')0S/km[O["]>OR40G-2FJ=tDuqcd
%Jf<]0MEb_]/-\Z<MUpF9Jl6RkA;$!$4MBL'c,l7kbopjl<'JWFK)0$EZgP*Ens%eifL);(l(HA-K0JH)qQ*JI54]ilN-jnI4tZOi
%:>k;_1AI:2i9,>'n?[H>qZ`8?0.X'JV"5o^F*P2*Uqi+o30YisZKFJ>*K%/9a?,QC`r\*QCg$H7>ip-Af5&Wu&b6KlW"OPrQ-SZ?
%8b\Xj65F?@C9a]jWX%g1h*,s2N<!Ne1"__T:68+UTX&*mBCaClH9*=tLeODd,'5EIa2Oa5=b3lX'%Z/lBN-A"ke*q'=E5!0Lc2ON
%P!W=rH5!ID</]rlnWZfs^#p1"h)Pdc1";'[Q[;(V;&ru00\,Q+0l77c9(`fog)MYeom0,=k8KXPF"0XJ"7W`:6Oc&U$3>3#[SP%t
%S;=P2<>`u(Z`@VOF*NfdN@+J`C:`aV7<ls0i/0=[2f0UhFL@V2#l3lJ!UK-gaucg2O)2ga(t@4W.h8"L*&PuS$A<;:d(71^gJc'W
%dq=\nk(huijX:VM$\P=S$\O>%FWLb[3bA'&T^D#n(f]q"6OH@c#0&-o#JIfq>]e+8X^5!#f)=8jWBu\:GC*?eRi>?71TEF6?7NM<
%gW[h,?oNZ3ju;9inVKh4]H$.?3RHlE%eSBnkd3@sm8H'mN\t0icuF?XBg+0\H9'?ul9G#ur+BqI]UTbp)GqN4L\iX`cT$gu6D2QE
%>!7%QP8>F,Q/h7&::`f5j?<mm)4qYd.F3\.U^bHa)jJgC#j%!Sb,H>EPBThu]mt,ADrh+P#!ARW\i_gq:jZRTml1+B0H?[P[&U[q
%L<@.Q,rBj=>D&F90]V*VP&B2P)EnPdTO%*tjr*&!I7h5if^TD/\j:h-DGUI:;p_nnr.AG@Y\-D=@4SA$[VC?"F=PPf]d,Dr>B0=A
%e,l;b`l#r33<8_O+!nF"7[6.pp-d_t"b_p(`eBk@1XM#h-`ENEe38:TV@/a+,%INm.<@9Ck47$i+2HWj&,$n:8b_IWq\OYHK2RQX
%MO?0UfUYAu?"h?S38bJ>iqb?8>ieEqi5O^d0:)1@Ao#Rr'nYd3*@>biSt(Engs>T>E]d\92k-PXh^:4]HS(1uWnED"LQPN3eZ2Tr
%1[Y,.N4_HaA9SlhCSU0O+pnq:V@]eU>gRm;i[*-tj@%sI"YU^MD<SC,EVt@h'887X(RiTqYU;:1i5?i#@Q\(?%VnfFUs#5<8ps+^
%Ou%4u@45?5@1%NOrupCPSREpP]>2hJc-,KP1rriWd_pCbTWo9>hWPb<E"R\dP"o+0=7$?(B1d@kq7Wsba/7JVM4VE(/u[V;cGLu/
%]=Ch<EN]*%WjT#caiPcQe_@tg<CcfI,U&jA*gemBUe9^9,jSj06Kn&eUY/F^;0W#9[jS!J!c`[:$<kGte?V8be?Z6UA_SDd<?UN>
%_NnaT[bQV__NsdB_j2>[<nO]o@E\KR@EZ:o>G`ug=Ur?8rOIS5dh]B.cPj4p0mGBi\NTY8gbPM]Q?="QbYO7'VGl8j5$Qgj)s\*F
%$pfEu+J@+EE%1f$:oric`A1`-FqnOj`!@#=_h!#_-nm%RbQ4:rL5.?HLIuTjO'9H,RK8F_e]H0/)uH@>E'GirA%hCM+er@\KT$SH
%igc*-2F9mEH9+BI_RlF2a@KAO+lfql5DbIVSrJgD\&3I2aQQ\E,GUkc1:/Fs0f#7Qn2-)_"%pRB*'Y_q"8]W.1,f,#lLTROg-J3I
%!QO[)hWPssEWDLI+Y*ctbT<WA`cI/jT*'?%&4\b]S.8r+#Oj8?0Y?]_6C0S^U:=JP/HAPC;s:YXY>:t@/bnIe6FTG<Ai;TPU>geC
%jfabTo@ir;$Okd"/Ed'j3e3NV0rP2Yl2]6n`4h7(*[d+O<.s%%6<NV!bRt4!`o]D;s"N6@13l\4+ZlP+q%<X6Hfrgl8WmZJGsVCa
%1T=dcDJukTFD6:KTJ[8a3>+o*AuVK!8n8Z<khjRt[C;^eIb\jPG%UBKL@,ntZ0MpAHYhH_[;c!MQ;j?1r5C>?\qtB,X],`A5r"K=
%"B'#C'I.bXLC$/6c\>W.M'H<5.)DT[2QP\'['S:Y03s.q[sF6AoLC+@$u4WsV@`k-/"LtRoYm01d@7%"Vt>4t-VC<[_u+9%%`Y@R
%qrsW,fb"!lkoN,.&iI7,4'TM\QYB'kBX>i\gfi/fSN<fGI5XQeoD:XpFkI:MO$'j9$t.f1k][=f7[Z8'qMgN*qg818l]1>PkEl*r
%Q(26k2/qXjq"ie^/;8j1@HFrV)'$)N<S/Plfda4o/E'ij-mcp^XgL@f$EUYn_OG"Kf0o$<Vrm=(_A4`R@J@^NL;'//beL5p.'b>3
%?-E4MO&fX,qVb;PF5O+Yd]WJFhuBkIp[[\n^WiFm_1^d9N%*3o83D[pB7;[dO6tf!/FeRN`h_@mFnb4u1Grg,G1bVll[H=7949':
%U#ToqhrRL^9<-OIngj"YQU@eR4Q\#h]NTW1I!73TlS=_V];G8:f>E<]8VhRdbe#5dhHV$lqkB#;1GmkHirF2"&tlj;pnsP6N+:_5
%p1o9P%_nRo_7>2A/cNQ;_fZ]2E2oD>#?"X7*k:T-G"SNQ]BJ69%8D4l:rg]apV(L;<QoMqfAsjbYD3M-B:RlUGZ<Q0?:_[=lZi&F
%9tTTU>K+6p48/&I`.dae>b#@-:]5<I'jjim;f.@\mJf02r>NI=80iL<XbXS2/hGN[b'+AcqVZRQ(K05udH!aBhIV8Vi_mEU'D5oo
%<(q&.-gA"=s6=p85Gr*RB=kc_f:RW6W5W[MS*na8!?mPGnF5$'q9X5U(HAqUe3@,l1?C2IRQ%K^n)%FIrPEC#Q+Npd`7Mn\<=hW>
%pVd$h\9g))-mYTno^Q5,7Pn_"Q/\hLN6QSe"ll?jWQ%6.q9Ij+6@_5aD>1j>=?BKo5;"M)$fK?,gpIn@Y(bV!(Z.Yji02NHXlEa%
%]3QrOPU*)0-&S.GUff*[G>3g,E7_H<p3O6QLrANHYk0nqGAe4"aOEd7]([g-#4LgQ\9-V&]2lIuq3"jn$(Q9h7(Zg$#iX:H+&2'0
%YD3Jh;bo+Er\,.a],+M%\`S^<HhL*%A4pA:U@;L_3AD?Sou%0EL*CbO"&Z9uAcj:*W)hf7gFCuK@c'dekqoac/5L$'>I^lpVNP%e
%3-65)gTG6Rnb$jp;W[33JUIB!,eH!6Ig^/R72OioOjnK>E802X!P.J=+<qrG>uU?gGs,EbKJdOGg;.5)];(k>BMpm79tQ2Jc;t1*
%_sO1FmikZX?B`rsbD+:j:\[Fr]dJ?e?N#p"?7ig5&uaV[2/>-<XrVH/Dh0c3lLC[[^V`p\8[77/L+.ZgJDaj?EclEt.;()L8!R>n
%-2cLaJ.9O<oc)-gZH)X@GPSIHg.nFsNG7"%iuZ.c>5S7P:u<c#W.#2c0iPL626DYI*\J]j77^t`Yhd^9HY^SZRD\EdHge8dCO.Bq
%&k!'\moo7.P<i+RA=@8@[E"W`]4YToeP^=tVY.mZ_hHPbWK]P0Sd:_4GDEZQ,njZA]]e5L%#_74EEB(Ah4,rCE;aB5&8\",]WT"m
%Go1FBms'Y2F19H0atIPFp,Ca'^uNW-*T$]X>@Y9,JBZ@kj5G\a@N2uIRbDrZ&+!NBkj!5)4<E&q+&Tr94D5i6M"<uX9og[i=p6OB
%e*Yf$G8UtnR57@V+^khU5(\Dn$j&iFTdXPEnY^B5+7$YmoiE\"ZlZi_4LU;6(=:bVg[4deIoFUIMY*`pg`tNGocW?d`E!N",<dCJ
%Y-ia!"^'Et_oBS`U:BH]7SR0nh=aRT-U(_e'uGbjFRNM4]Z#8be;s47KsVNX("70SeDbnVG--!k[W:+cE-F@OoMBPDn`>>6VVM=r
%Xa"bUkd]j9]*qD8hHDYq=9'.;i-A7\eZU==<!S^JOP`!@Y2*bdQu3dk@+!=#q6.huepq?4$MjX[n+1u'8aDTPgpa<5TntjXST^&C
%mBu@7$nrspRi\TcY-f1(mI#NPg3,-O6<?ghMr).j&L`1%r=N_Q+I+d\E3gW:QLMKb8s1aC@Q3b':E?]I2rFI^<PkuS[QW_6;h=qC
%nZK'd:[rNMkA5>ujq'BYa56cXAb)m5jk."I+2=n3?2#b48BNT>:7#.N53i+,W*!M"G"k/:T=MH!9YO2LcL,[?eHr)p]C>CRf7#M3
%LR\Xfnc<R?3e/D?$";,Y<IE)L;^f)X-:fFB$On#/VYO#=9dOXi$IoK>A/CVZ=t]ojoDDpUZ]Z8:eVC`le$*NQD08C;&7+h"qg6D2
%GdBb(\?].U7qmiLm#s7,[Wm8gch0eb<U1msMm?2QlANM`+8Noi>`IG0i1<10@V@AYAr7I!_2pB7L8!>Lg8u^#_G`J&nIC>)fGA+A
%;\j\!n&sf+5Mbp'VU4X$f1Z2.;m;gX0=t(.8:+T5!;XH0?3]*5anJn*g3iGA@a]l#XgsJBAB7V5k6(QKdq1j-[2MofB><&!1L:6j
%B[r?"57W.uMq?[Ml'Xi*+-et+Sl^E#4[?,[V5gL/O/T!dm]HKLO5p5X`/L\;qbmO$aL@*%mQ,H;kj$O6gFrDJHDk#&&**r'&1sWa
%<`=9jJDM-ao4XbOiQ#lt(%5,Eqr1>pJba"s63:[hPBNkrMR`J9Tlj#3fW6j?$7NNibRCecXgM'oV^=K].OD,<QCd!GnjlOeogFq8
%;Gso[/<_D&\mRs/C21SU?,AUMnU%n=LM.EK\;D[V(CGN[l=59jH\<5rZM+30hOh%o&:D^Ykg)]<c_'s]T9o6)VcgNsX#C7W=%ef-
%%In?2)XjHeS>4VcD%2hZlKApBArCe>*mLO+EUV*4'2A%?o!=g.Sqr?%4O@8#jWcnh1b:NWiMo6`W.<Z-"g,eXT$V7K<%],l'Q@2R
%FB?H2El.5']q6Ae&qMT`W5AnqXArZSZaHXr:FQ4d<i)M&eXr@5CLe"+e8qjk$uG^XCO`cW-*I7*,dt2FooWZ?SNcVhd5[3?p#)E+
%qI4"7Fl/@n.V0&fa;u7RL.7C%,\U@"n.`/h:'^G/bAB?VBYITV46tY4<XH`!`@\CHN2jCO=Dct+"M^qljhbaLauJ6LLnSO^U%anR
%=Ktt,93[Mc)m-!DW?A3jD<*@Ik[G_hLTg88;lGPj=1:Bo^CPei"KIl#;2sR)E[MCting$F-[tWmk#^:@;^Kb#Vr5R!<l)K.e"_Ko
%5QC2$dC2.(r:+-S06K@1q6Ut,s6nS'rDTo;^E@'g(*l:P!?m-uV2YOrjU9gY=0YIdTT3qR&pZ!RbM4),AVB&Pi]j,,W5m"8or4<G
%6u7JF$UA\2gdnZTPJ->\o._:Yq<LoUorO#\R\CEk8N*GRR!L?Dr>`'f95_Fh9)l.6AiHMpg<^p4hkN62MPLp)J$iB#f1dn7*Nb)$
%&tXk)oWG(iT3mVLppBD+k8L;&=NS>C]>NU\$4c60$3`R.4D,/[Nj\[O+'%B@Dm>@02gqGu\3KGKO2A(B!ptp%UFVut;un'670?gc
%eSY2+n#c,o"T@KQgsAjoV#kuSG0't=KnrWg6SE&BBhD,(I<N,X0i:B$W[/fREHo=C72Hm;(b1`j<0L#W>8<7g.NkR(I%&7![su,n
%)^ni85P6uIf,o,2DSN_F2q6;A>`A$qaeA;b?d=[,UU%Ti9![B_o*.rE3.gPLe/-h`r(V?_UC,$0T!M;6qR'bhh/>/a[";U,?AM:3
%.kjTeba`u&J`'5,CE(_,4H.J,jbc&oqSgm-T"p7U5-KY"^qKZ)T^>,\%,1NV247<-@5O8(*V^9KF;&!q1?<H5*t.F3%M/W9a\P"c
%HD-k[PM\Ko)pUP43)^/(mjIZcaeq"8>TutekP6@+#3'C-:?0J`!/.'S>PTC)JTAjR^s6ngE>36k`)J'ZRd+B#aZJMCQ:2edC*9ku
%n"2SiOA$qTJ*GrDC?-j1?N=%D,'p4m='9i>jH&&8^gF7Qpr.9gfG)XNk=6cO=T`Bp3$-VKSB3J"<;=*4Xu4D_M%CBWP2&JX*642Q
%_dTFdDB)4YD8PX1?naGgj%;V@#^K:Wm^r!i2&1'@:X\NSm@BQAh4($cT;C+YL=d/p$%/2skIJ?0+'5N,]\G4'cU5j1S;7)QI\$f5
%@Xue2E%tRQV>;oN[FVJsWYlOa:BqGS5)pOB6!Phg5q!u:5#TMdZ3&^Peuc14@VGMPWiFi\J$TL/p@nhaRI>V0;Q\^rj9:eD5"jC!
%a*JQCRfKVB0>k&nO$Ai!pQ47\'YV92b5Z554ZD7e9\jS8m%16Rcag[S2cqFdd6:J*Q;uD3,-TgcHascYkFI&F%o+n?6C^8C&snOR
%GmA`AU,[P%8oAesE>YJ6!B^k\ETg1So/(I-8Nk>oECh.:b@rgS(>EgPT%E5G>!=P5o=dI"1L&!sfUj+UV-(]*0_BnXX96Zh`6>h:
%1j6B\Y`SK(KoHEROV5e:?lVE<ge96O&3MWCkrXa1o1FC6X3YSW6Im3(.-KIY-_.pA4;]`<(?>5s\pF4qo12!)eJnEU;\g2>8Mpdo
%YeaQ-JC%/Cf/K,\@1)%T$&hd_=+q2-_M'uS36-dRj[0dfWS=9oI^_R#kZ3GVeuK*oR+RR'ZDQX\QL8j10O)P/b["aIZt-*Xpk)TW
%7q1M.1:4RB%JZ;7lX[f*XW*L'2HIk"]<K(Z/KDPGPMsiA)BHu)@EAi<E#;f)5LB;+4;(gQC?@g(lpDVDnDM/u)/SiDMAdk0m4EPn
%)M*+rN#UhR2Hj!9)JP\Vd:JsNDSk-O[-p=C2EM6.je*q7d=99KoeBR67!G"T8qe9d!(V4h%"To1B*.:O]G^c,aX\AHZkE-UJ=MY;
%aMR6I#mmrB;[/=kpjned@7(,_aA+loWW/>1m$K@5Qg/b1k,:Wa!X6<@%p9C.[a7$i^s0m-8rm+`aXT%r#eSU`L>33RWrkWqKklVW
%<:8I-N6+]B"g8()H@X/5)_@2WBVJ>R/DU&@Mah&H.<ZNE4nYDHCBd$n"kM2cid-8K[Ll'a(*4Xc%gKp/RYNB&R'KMLOeUJ9<'\#4
%oi"htD\>*g@E)#Q8$&K4MhZ&0?A\5X#JC-B_XM41$d=Y7Zp1QOacU>6U0TH"PWOESJNZCpNsgYm0lHh>k3^0-2^Qp>^-^'t3T8G!
%O`!h1(_e%<3lbjX@W7N/0H_Hf5dL%E,1,dm<D5JKo.Zd<.97g;08`heMB;B4#*:-`E._+shLX/i;`>H#o6b:lQP:Co!rOGi'-.;:
%;&?tPV7<=>IT4;"\>JH"6=L4f/:^P+_Kol=h(TVs:7:ra3Sd!sOGo`n$X^,Gj9o[?-(,JM2eX"N<!/o*,R6c0O,69E<MUnuYlsWP
%!?Qd<.C57-Mu<[6J<Efh*Kf?)j%G)oY<)=`1!=#6gi+#\a+>T_<7<7a!#@[?%Gqs-7c?Ac8d:%TZld4N!$be1-U8X0<n7<SD'Q2`
%R[r1V!qZT+*VM<Y<?gQ8UstSLdQsWIdiL9O5gN->B*JiM&<EgLOB#_#'G0pGTImuIaH-t9B9u9EYF;5d!8?Gu,NhJ]8`E7EQ'I.^
%-PMd!Ea%25(faDLRgM$ITi)_#W$1&N(unLVT^tmo)k'b2I1Qt<r$\d)@MK+*&8m_a%Dp>'`S#;F$eb8RfbA*.%(Yi+MG0.O+`VJ(
%m!iH!;V>Vt\3S%(,*M2$S<RET6pNAnOB<39!!Z8';d8Ad#7R8F_9PY%["7e%,"5*EbTL/$is1&jZEU%MI'cQfk)Y8ER`1/kPT#re
%k&V^.\M.SRH"O"3%gJV)%-C9?:W(J=%CS,]FX'B.%4A?!,#Z0;n:k9ipa`@.:VnCJaZ6/&Tht7D!kVb;bUFH4UkAgM>?2^a&,]1n
%@'%eb5)5#W$p`%^((_Ls<\K>+jOBVj";I?Ib_(fH%lVW]W%e9Ie;Bpd)k0.a0S.)07ra9pR!IB"hBV?>"SQ,k`eZd(g*g"/_C#Yc
%7^T3]Al?4>I?1rD[TUt&*>c@uJc]Ebhm!0L#P"'TM1"=kgL`(C\NCNO?Roimab9g%Sp(42MoW"`8,CTGa!^4r<\tX8STZB7/47Sf
%"(;k;+:DNOpb:,/4;4H8PLg1Yd,M",6lj4#Jk[Ro,9V?F&4<cEAT'/ihkDJfSK<Zu7:B>J1'j-rPUEbI]AsaDp*!eI^oQ.'I76DB
%E)9WEKCMEpJlWl1[7O%d.@3<u">)s0eu%pkThOFaKV)>bo@,nKgi6Aek5;kASsR]M:%@GXau:#'?X`H<kSsff#?XRGIu@8i0_<sD
%6(kkWi!B>)e_f#f?&'i_h>J8+UkoRc-lu@ZW=39$Adp9S2$r,56(fJ\6')PuP/J=a="-M@,6JMQ,_Y>$hu3M-YY1XAOO,_&(*j^U
%js6+m`7A)$*<b;YUDYT?^0V>OZEWJr(_nh>/o;R`D7qLk\E?*6j[)*IF/KKH`S`tQ,f,bYG^fX'+"hp:pmROfI@po)388BZfFZFE
%773\EAFP1UMmWqtH.""R8-;lk$2+3En2O8*?H,1,gLR&c.CD.=p59tk"Zo0W1HK**_!'#TXpE<eG.!UC>Lf.M2WB*l]8uQnh:o8:
%.bPT5pgDh[;LPO'$dA[%$c3O/U9@MZn"kM@Xh8<6o#n5d0'E69KY%5"2AF%u2*"$SM,(YHr'LKkkefY4V=)(QXbQ%qB6fq__O35)
%!`#O8c#VU9oiNiZApglQlbodO#h#i2i,l-%69uqJl;kkKJB>K9f15!']?n&:lishXVCn;FYg(-Sq:h0;6O>TA!1"T9eRoct7m?&d
%X=m!<8aINpL#\#05#<jAS^Y^Q34WApUKYZuD5tDAo-QY<o-Z83,pA?i:I=/Gka]T>Q0\R:/'<*3`h!N,1V#p;-(U!cs"p<sOn%d9
%E9sCY8MkkC3o5D['c(#+-^s_"9b'TfTmtg'%T5"MB81[9hIrp'Of=/DoaU_=+il:Sh+8l``TC=3?:j&s%F>'rrVGWb\R3J*&Yu:c
%>as^0VdsJ-+>DEGVC50&9VQ-tR)&1b,g9.?U]G'r$YnKg\YES\1,<(b(nltud?_u&:f(SV$-;n*;n??3WB^D@5P:)Wq-_Z[M8nM7
%$dnYTRZQo<Q"@Knf_=Z%pT]U89^oBI4N[2aEDatT(Ojpk>#0Upp1sW$JspJe?X;mc.ZWP:,e.EV'F,2V)XG:gCYk7\SRTE)@(RH!
%l<5Vsg501\61SPZ?<NdGbOf-^epo1_bo+QLhEnnZC4A(br+Sl3Xk_)7:9CeBl/rVt,e>\6T=`&h%.s2L:M:sMB4rJRLF+(snWTA%
%a6e30d\ffhO9c(on[(<JG0XMl4mf`ML:l6I^8ZCbGu^.Q0t5?9]3S+?+.P.Sm(g.5KWXjBK;dopOWg.K?ml/gGQ)5CP1LO8jVWVt
%?-n*5Bjsgs#<J?_pZ?-EZi:C+U.cJD((Qul5GM)?>.$_*Y[Zk*_9":W7:625(6t0i:6T\=2hRN9W+=%Q&]tii=u=bPH?e".0UR2j
%K;eB0#*6=G^^`29^Apj%2oR25'8$>2E\HYX<i1X=8Y&QXS'.4AYb.eAek"n_6=3a;r@lJo\0FnnE]<EE\H+u5dJ:^n'L<)f.->"b
%$(3iH%=?0:qp@\JKjP;KW$.T24pON"#ZQ(?-_7k=>H3OW:/q=HUV>"/]8DECUI!k!<Yd6ff4`h)4TTRJ[4K5nRc\2#a@]jbR4A*@
%"d)s(9oUbT:R6r;#breWU*N6\^6t98CEQ9*U882-(*-_+cFc&5V'7Jt]RL8@U0QR2oKt#<3]L*#0='7iF?4:RrjM<q4.s2bWR'%%
%Bus<O9Oi6F-[*Q2i$;MseL?rN(kq._%UErd:5QNTAZl"^P,_ch&rpr`<FEU]6514#YZ.&%E*AAMd%PU8em<4Q1$Zq76"63=`sIor
%cm1@Z`[kmkdF':WdGDJ!oaS!HBeNGN@eh.uS5*h!C#EEN5cbsECt2A;#1JmD_8pM4CmXRY+Q+nQ)lNh4J5$-HB_9P)Ve>&VTqn-_
%Tgh$_!rIV;K";k@9#f,[)<Q?GKpl\9.7)?ZVa-6lO1bf87]SM-=Gd)j@KZCb=[rIU"AXM5[TYPH0E@m(U`$ZGdK1=s83X,E&=p13
%j9TP\na&_G2!#$X1>*.7%'s>H)@\QP-q0p\s1LaY1n(P3\S,s-n0#2>F"g%UNbnA<?l;IBh^c9kW=[M(BHa4$\X"bu@;2]i(#I[h
%Q(!nE?47$jG(o-<YUdOAC9A^ZIr/-GQ>d@C4A,4Fc"u_W@YCSL!O%-nmNO&AnVlHUM*?euRhCdAF%YZr9aE^#jU2Kk>d2^f[]7Jn
%"i=P_dtku5_V1hQ%NH<^p/?!G:^),OQ?Nb@U_X'@QQ04kd;7*c4n(.)D>7e!HLS=+Pqn#$=[Z_-^)/W$@Yt]MY@Uccc)OZ8C]-t(
%6cpN@m,NR?!"`.,Np-jp;$MDJ@u/&^[]N/`TphH'nULt4#GY(>T`H#GS<!o6I&FBR_A9-e!Zs*;;3@6OS86&HVp),`&7@SRO3[Ju
%AVq>"Jqt=I4E(at_7!5+>=H61\J_CbdMn[i?=lo?Q7@%C314=TaM=c)U6g$H/'4eO.mc\3,&2f7VG:'A+sU$^l^"Ye_"46HQ%j#/
%<Po;DFC<g]9a`TbM_C4:`gG;h#hKDE>*0pN-ejG*VhWq;GSPHmPJ'9rRQX[XHZU+1%55MT!HPTX3J']>"^XXaV[Q[$UGSfo`E+K$
%;IX1Y=gT#0dCEdb:U%1;Nne;VM?%Qs"V<7iUfa_\[MAu_V?hqsjjB1//?U:CH5PIE.lk>d238fYHpT$6;PTr&+s\7#$R\R&j>='7
%?O/]_k!d[L!hl&lg[oUq%mo4U.S8sAn0ele6eSTNZZ>_p.>rM6s7E=CgQ7>nZ7MlcMIh*6K]+DXgmGsm$4;G@K*pgVT6?CBYG)#:
%p)HTc>Zsi%M<Z<b?6CedbSFjK"rE>_Uc,qeeEU3/-F7i4V"kJp9lm:7+aWLmF^V`\C,qY5*-+lNWhu[UZaU2_!^;&!*kHnj!K4U!
%TOC:ClqO$;Th,'f-o)HWRPtY<-8B4@Zt)81-"59-Bq(me^K>t^LQQ65ZtL5*ck\D_2'f(PJ%gl3q#&,>j]SJ/;0b&Zi1F)B7I$]"
%L7^\,bU@Tp)SKDim%^gW_t\"p1eie;dY]jRZ4(Fb:)n">@IqCBql1>_$o";n/*Xb$m3;(iMW7qF!(M!T.dM7-,7QcS/0?'h^E2X2
%+pXQXO!bGddV'7Y'<^f>ESSVBCjg#%2Q_+IJMlh;2sn%1l<5,)H9,lf(jha[I.N2SCLY2N/&7HChCk.loe_HhZ/0R1Gj8L8\d\DQ
%idX7<#<s4TA1I<4FQ#d1%\WS[W01!l``DPhr3!%)!#'LTLK/#CdnD:SCtUL1.N4EDNK\HD;_GlFD_dc]*4ZbQTo0e7!%1?u?PCu+
%E7U&D\t2@`GS\gjpatm,n^]cL(:b"\7td=IejQENKT6f)?;V^EWAc*IE82d;3`7Ld\hq5`or@.$A%?FL<a&!kG.aQLW8/As/nIkl
%f@CY34YJ76&4oRHQ.UBqDJr-5':7Z10)NnIC:jpS$C<#_G6\QeL_(%$brj:'+#GN35A9UKBX[R+K;P4NRW^`*iq#J-HtHX-dMH\i
%Mf)Yd\:]IN.db>&bfSA%Dg<$=B'kd>S7_J(ri[)pYGcJK;(OK)]5_2%oo0-$-.E6f=b)f%)2MA3-+S:RAO>ou[ed4R5u@m;%BoFY
%]erW-j%@@XRrOQk=Qu7LPS@7u204!5pMBa7bX0<f?H-o+j&]:KgW"/Y2L\Ra)8GTXA+=_u$[nk'pqc#?#m\O_:^FHg!_E$4-NJn;
%BUN'Z]8*h(80e=%d2%ON-rC+khsEP+f?WW=@trsOo-g^38B6Z!XftPP[c[8IAuB$=a']965:aeRXLp_r@B32@fHVXN7AY:4/?).2
%/&Nb4]6UPYXrY`E(a..A@]e=@jc1+IN&A65SijB>iRP__MWsIKU8jXa6gAVf<3&UZQn>%a`lj!NnF@KnAMCFX+OP@"lRAi?)kuD0
%=sdN8$W)#%G*ce[NXpLHYt=4L8FngrS,&\kjt06L>;heZ/@`H2IebqqQdp`'/A::$S'u-OZ96oNk#`ZpLDfVJF-m,PQn`:+%^Vg;
%q5S[*,>WOWIa3hT8;bAhh[hY8M1daM7Ek-sMq*0^%;i.`aYt`(\SPp-(:9X])k3Gl<L75E2jYT)V$G2\Us&<7ajG;(Z_]VZCqW(1
%fo/Gsi+HgQ59"<+s0;K<;Qn]N9)Ic30^[WenH^K@?:DWWjY%hP(V:c'/1D_T8kFkiD(&Obn$;"KTi2WM3aF]rN3A;a,*t\G^s;oF
%CU[hEq:_TT#Xj;6@]"40ZZedlf(+RN1%EbZG`"Er@<IF23T/MpmRP_[%PFJ/mNUqBo?g-/J#SJW/LQ\XLl?rBHpm3n+&Oqd05l!X
%>:e,.bXXd<.-qt_4G?e50ku.YJ;u0l6(m9-/jQ#]7CC;TA$o=$=2dKqZc&m\)ZWLm[(o2P4ZTHCPrEjWK(CK_)B]\4\FnZUeP\9C
%58kKRVi$W"JR`TUEtV-?*D;A;fPpI0DgCeGNksPnS?:pK:@:l;n)R4RDn;.KCULNa*3CK'N+R''Z*hjb8Ic#h>(_[_MGg#Y4UJ">
%_W],j6em2jJI`;./=bIcQ%'k4CX)/2O8X+na7eVU*QoOoQ9R;+&q=^*^XO>uE6tuU-Ct^g?jW#@Xu8$G0%Z`!e%4,pYgL`r*65LV
%hcf]s_bfb-18)'*j$r+Gk!GoNhqk=>g7\Op("1dtXd5;'jA^LJEu_BcI.IR']/O-Q:-O<>Hja&<eRH\b!]$14_db1F*].[rF?*hP
%HVD%d\DLA7&7N.1Ybga9H$3OI2d_il<[E)`lSbqh40BAY4$\p;Fo[r7k?[Z27?8!S^C8KqD<DJ*C#_3C'>G0T1$aO7T:,LIN2CiY
%L(7FL-D,lHi@7IK4A(8$ZnP5K0FdOu$e+`8Qt?Ms/526i9N/e8dps!<^kD4lVR_N2CrN/+20tLASm6t`XqD9-Z6)D;Rs$Z'jd>%%
%$*@Y[gA2lY%Fcb?ej%04S:aKFSO%E!V;j2eq17sTjR7+HB\Ot9;Us^,,OHL[l/HYq_(%$%rN=<#OcKaN!JM1i9/7aW;-1g=Y18u(
%EDV,h!+jUs/724"5*,o\@*/%[_a@3nW5/<SQ#$G1e/g/a"V_;nT(5H54#/]M/"bTO?oG;q*RLk`g4q/k8pd5=ok'G6(<Y)fRb5O@
%BdNFXXMR_'%q-PiVUgd".E]28ah*_M:$fes:9KUFo.+33PJ&`d<Q.%&a9hF'60,>&GXVDSB(?AkA'TbRQI;$j?L[$/.a[fk>Hri4
%@cpGnh<(b:)ZF41>T%cI3F`DYIo:C2cqG-&Bg]9E]in\FSE]R8T[V+X(.h&4W]1sNMttLbSL#n[/_a*F9_6S:KB*#+*<=6^,k#Fs
%kma:Y8#o*/g?.gj!aKSGV<.-4U<Y%f"4k9iJeaHe,=tIl?NA&gZ(b<qVj%D0"B(;C&K3sdmuTISksRf^!khd&OoPL!6:bkn>L88H
%GhAJ$Q$oGF8&^Aqfg1%Afl%QZTHpMg3Vch[97Y]f12"Z98O5%%^LXFC@8AO9A\i$#`1JrY@QWAK!c[\)3X<3cZ?lZY[Odn<ZbY7c
%jT'Pn]8_XJ?`geb0s&W%[#`![@Tdk)UrbNfM;?opHaPKM7G_=D"3PY+o.UP?^YV"dI$F;*2Ihs>9N:HJcP.--pD+D4<2l*Q,^*dN
%/Xrp_`Fc9+Y"C!oXJt%`B#dS27rD,.ejubN:".I1pX;6QURFZ:?3+_P2m6+,PoR"C&M)"Pe"MW"k.6ug%X!&iL0*'!\E@pTJ5m5H
%MVSXc#OnJ'aFlu&dpY3POE`JY*&dsa)n^Dqcj^JJKW<`D+h=VHYH-aEdo;M&P`B+GFW2j$VIf.E%bXT3N8PER$4lJ*9n7.QRRB4p
%HP,D>"!G^7UT(6l(3[-Tc%i0cP;as=R[6KVM@$'rLuO'5!9D$=\07(RX#Zp2'KOqdjA#,F2"bJF>"hJJdQ%SJE,[SI7G7_fgeH_n
%GU/O<MFr`IcNp3Baos!)Ha,#]s)5k&*D_T@:`,WZ8o\p5c4m]sZf`&5V'(gt1?a#K/D(rPV-4G[G:+oud)9W-,rp1B8dOp"X_C1+
%9kn[4E2F&T,i-V:kfe^2"Ai9rJbOB\J<]+Nlcj`L*E'?!T))gXh7j\OZU5&%OH0kY'U9a';"G9:_kIVD-Unb+0@Ql`B/HK+7>hd-
%A+DUaaQLhf#!=1*&F?+H:FD$3n.Ae]$:deMKNCFGl!\h=Or';?IT;Q7HEISeTVoD2<,>d;ASA(VmW^!^.cOqFg#Qkc)%uS%PRW=\
%+Mk)u%>B+cg!hS/kHh]6C6:0AMMeq[j@F/h$lGoklfK6hH&Q#eQ,Y@VE&LuiSpFnOCac#YGo!d5EMErGW1bkIW7nbbeR.*%/,\/W
%0VL@)r:F!>Km$t$Xo[-n&I'(HEs]89<bX!pq_Z,ciKsts^:)l_Js4gTL7(UZ4&b9F(`t.J%^oG[/CuMDR[>tuSYfqqHXp+FemfM-
%.:.[2S,'oWLurDG,afKdas4R23ZMm8,(_f'U][i\U;upOQ!SX3V;$RbW^qW*RB*4-$B1j,o^5;@<,ik3AT_Sf9VJ2./C]fB,7grO
%@MM.H+?83g[2gH/8fL3JI)B3.=UK]MZT!0VLWoAoP"IoC'&`%;Vh=*sAg($pe:[`I)Ws0j@R6c@!XD\O*Ze5+RBJc8ac'8.3?q`g
%IQhgkZ@F/ZM]>?#?:`23:;U6f.m",`g?a%Ec0"b0F'2]Icu@o'f9VkgPp.ATVF;3$,s!k7X^roJLB12@R\m4gSh6?9'eNo@04KnV
%dE7-cMA7dc<YV]X*Y(%Z-C_)76>=U\&*dc1-p>*J;P@KC[;QmblPPVC1P-ssp<@W$bUI(e`jR@3.u!EV%@4NhHMLlBcA\s>f]+Br
%7NLj=pQ%'d\lB4BjH_>J/0fDBEe9je-T?"=B[`IAgRG=lJ<%U^@_#>G(!b_ua"9q+P#)2))e1RcPTD,MJAk#`lX!Dr<,.DB2+I#i
%?t`P;";B7c737Pe$$4mXU1S,VdKZ`3M@FCW49`/Yqm/ud3RCnQgu))`eAK$@%AeD_1F8VqC5GEHnd&]2kB2547)&f94KiPCE1cEC
%PWE)9r=WPTga(TRe*[V)Rje55JDG:*#ZZd+L&*UK4iTGg_iR]Wh/ZgX\=!KH!iU_q;"S\aE@TJ8qOBs77MfgjCajqR3@BFp?`lKM
%-19%6Cc4J)c8[Io_n*.Anb?i>gmT!5Zk96>"U5FZa8g1&*[n@O>S"`FNE0+SB1TGU>"fbB3*Zj!=K6g=eeQ[>G"u!$&<d^N8ZaQf
%%u&#W4;#M'[K?NE5DhiML:h-iSXLS>9P%4bRm'_sUiggIPsV@=<_?T>.@N\"UQf!An"sJ#b$o\`'fiF!Lp\epJeu-6Gf'$m-=AP*
%SDts%;Q%IPY0-HOQ,(aGHXB$`+NA0;#(A]?bKG.nVXcEfV2/KB\iLpW?8_2W>595?l%_hQ(u-?CAF)dkFeKeLmfkouo7*6f7WZ"<
%?\YBo!\?.!'l::"(3VP]9P.&faB,bu9derYB%]FiR3c\aT\@=Pao>SQZ]mN83TN#^-uH/]JK]R+]ranH5_UCArn6-_>4bD/&nuHb
%C2O@C%8Jc9SOP.l;70Pgnfb$cH!8Qmd&)Vn.4Y,8$;?]GS]C;f9]9nSca,+.h"A!r8(c%cn>nO8b/2\#krW')J>(EC,t!G>Vc?m6
%O$\AI.EL.;3_.9l,99o6pb52F[J-15R8og+>q"G.T9M^*D,fYDSa1jT]HX!!4=oV105?p_df[9Na&d!d4<l9pQ<Hp@AM-%S4j+2l
%qcKWGXj'J>d6e>$dsMg4VLiDfYu$VOLEG.qF.lkJik%mUr3!F\QWuD*%G4`@dlm5JTf@sl[;(B9g7.7R/X?Xe8/0jqTC(2Z;BV4/
%/=P@e,'#+fd$EU&(9qLmmn*r?h#2JDC\*5D827WIKpCN?TS9EDs1,_aEhrmTd?TmaW!/mKFlGLaYI7t%eg^DL30e8nSg`2KgEVu.
%^NO<h\L=pf?`J*A?E;1g!0W=?Jkm>_gnZVm[#m+EjD/&cGT62SeE!SGaVNqdR3kO>[Aagj7LAB(7[%MXX5n91F^$Qo.*hairYO(F
%g3f4i%o!i+?!fqSKEP#KXZSbCMpg)hR7/CobmXfa%TB>27t9!Ah3+ms3C$QA-9DGQE1U`8gDs6Qp;=>cj]*^5#ln1e)]1i/"FN$]
%Jr/_n@mHi4%-cGAXJ/e%3)e5P"jp9!=ure;QhNJ;.M7ik*8[Pj?`IdL<Q<9h\54K'kJhI[!_JeWe-gl`24#g.&UZ6`8L9T,[JA"?
%03bYJ%\L8P'hB4b.i5Fm?tK0_[O=nb$>^%drl*3nf`@`J.fSKei`\=-^e3r9S'E';2-3Wt/^94X$Q'A&.f:"k[;LpcV!HST(H_b%
%q#J2I\E1"6V0S_'.bHY\GdVe1+U<"R;l&U=.5$5H_2tP+o1RS$nH'jZp9t?Cr/Npbe4L>,A=_31<Dp&jBB9Wu^DQQZA@GZm6OaSG
%)Higq,uMZ%Y/gXe?HaTiWYY02eCgSrg%lET7<%![n4Ig1LJX9AGJcpUZ.3^P$JTo#.pb-XH&k(!2!..&BGnjeQoh`CleCk_)(H#:
%Wt73pLX%@n!A?c1)2bh8qN7Zk:k`:-(lJflV8hNkD&SS8BG/j4VaaJ8TJ;l";CrpPZgHi=LErNYUk?mgbq*N`;(07KX;.d^!=#]P
%Qqjd2)ZbOhMfLo0j=p/D3jQgW'G,OX.VPc)9t>-K7M7"B/sBa8?1Sk)H,qe6/CZCAYTg"Jhb8(*]:JeWj*=G8O+i=D1i88_2)YQ4
%/pN&-CMs6OG>XCHRah->"X-f<DnrMIAtYi6=?*<1%;O%'=KqW/1D(3I5im[[PTH':gT>kK1=.rGP@AF*gX3G3BkE`9#01-6'qB:;
%^dL5E:;0%AfuQf`dqcEtr=^YuS\giGI2LHsGt4M-1M`lG_O/m_:4UoC$9R;[Ks+83!CFdlfXIEGX:r_s#%3+.\CSc52oPDMfGh3b
%Vt#7`hY1I=rVo+\fAHVr&-(b+QiH^hJ,Z?AhuCG5IerPB2Z2N`I/g)dro[)7s7=#'nC-iUpSYcTs8'Y#q`k,V07WluDa4/lq5;u>
%Ier$,J,@Db5MZ87^]3kSC#Prd%=e/j5Q'Pkqu-!_5Jg>G.f~>
%AI9_PrivateDataEnd
