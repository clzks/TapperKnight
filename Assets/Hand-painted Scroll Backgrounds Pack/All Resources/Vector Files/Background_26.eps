%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: bg05.eps
%%Creator: Adobe Illustrator(R) 17.0
%%For: Krol
%%CreationDate: 7/31/2016
%%BoundingBox: 0 0 900 481
%%HiResBoundingBox: 0 0 900 480
%%CropBox: 0 0 900 480
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 17.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 17.0.0 x256 R agm 4.7700 ct 5.3328%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.5-c014 79.151739, 2013/04/03-12:12:15        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Web</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2016-07-31T22:49:51+04:00</xmp:CreateDate>
         <xmp:ModifyDate>2016-07-31T22:49:51+04:00</xmp:ModifyDate>
         <xmp:MetadataDate>2016-07-31T22:49:51+04:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>140</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAjAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8AnVz/AL0y/wCu3687aHIP&#xA;luT6j71LJMHYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FVW5/wB6Zf8AXb9eRhyDPJ9R96lkmDsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVdirsVdiqMugPrM3+jkfG23xeOVQ+kbtmX6j71Kg/wCWf/iW&#xA;S+LB1B/yz/8AEsfirqD/AJZ/+JY/FXUH/LP/AMSx+KuoP+Wf/iWPxV1B/wAs/wDxLH4q6g/5Z/8A&#xA;iWPxV1B/yz/8Sx+KuoP+Wf8A4lj8VdQf8s//ABLH4q6g/wCWf/iWPxV1B/yz/wDEsfirqD/ln/4l&#xA;j8VdQf8ALP8A8Sx+KuoP+Wf/AIlj8VdQf8s//EsfirqD/ln/AOJY/FXUH/LP/wASx+KuoP8Aln/4&#xA;lj8VdQf8s/8AxLH4q6g/5Z/+JY/FXUH/ACz/APEsfirqD/ln/wCJY/FXUH/LP/xLH4q6g/5Z/wDi&#xA;WPxV1B/yz/8AEsfirqD/AJZ/+JY/FXUH/LP/AMSx+KuoP+Wf/iWPxV1B/wAs/wDxLH4q6g/5Z/8A&#xA;iWPxVMruA/W5v3r/AN43ceJ9sxscvSNujdnHrl7ypeif9+v94/pk+Lyaneif9+v94/pjxeSu9E/7&#xA;9f7x/THi8ld6J/36/wB4/pjxeSu9E/79f7x/THi8ld6J/wB+v94/pjxeSu9E/wC/X+8f0x4vJXei&#xA;f9+v94/pjxeSpLLr0Cea7fQPVYyTW7S8qivqVqidO6Kx+7MgYT4RyVyLaMRMeJOjbsDQyOD4Gn9M&#xA;xuLyayKd6J/36/3j+mHi8kO9E/79f7x/THi8ld6J/wB+v94/pjxeSu9E/wC/X+8f0x4vJXeif9+v&#xA;94/pjxeSu9E/79f7x/THi8ld6J/36/3j+mPF5K70T/v1/vH9MeLyV3on/fr/AHj+mPF5K70T/v1/&#xA;vH9MeLyV3on/AH6/3j+mPF5KrR6XfS09NJ3r04qT+pcrOaI503Q02SXKMj8Cmdj5N1m6Cs3OCMmh&#xA;Mp4sAO/EiuY+TtDHHz9zsNP2JqMlEjhHn+pN7XyAEvQ1xdtNaAV4j4HJ7A0B2+RzDn2pcdo1J2uH&#xA;2cAyeuXFD5F2ueSAzRvpXJAaiWNpNh4EF6n8cOm7S5+J9yO0OwbIOAe8X+tJbzyhrdqQOMk6kV5Q&#xA;/GPu41/DMzHr8Uu4e91OfsfUY/4eL+rul8ml30VfUSdKdeSkUp81zIGaJ5U4M9NkjzjIfAqPon/f&#xA;r/eP6ZPi8ml3on/fr/eP6Y8XkrvRP+/X+8f0x4vJXeif9+v94/pjxeSoq8/3rn/4yN/xI5Vj+ke5&#xA;uz/3kveVHJtTsVdiqMsdI1K+P+jQM695Dsg/2R2ynLnhD6i5Wn0ObN9ESfPp806PlSCytmuNSuow&#xA;wFUgDiMMfAyP/BcwvzxnKoA+/n9juY9hxxx4ssh7rr7T+piV1dubhiqoiDZUj3Wg9zUn51zbQgKd&#xA;NliCdgB7ltpqFq83C6YwJuPVVeYHzFQcZ45AXHdjDACdzQ91sogh8nWOk3mqX2oxXkNtC0zIrGJl&#xA;EaliAnIOWPQbZrJz1EpiEYmJJrv/AGO+0nZ2kjEynMT8vp/Tb5kn8zahH5kHmOB/T1GO5F3DvULx&#xA;YcU7VULRfcZ3X5WJxeEfpqnCwT4JAx6cn1RHqGhecvLmn6taXUNu9wgkHqFeSmhDxNuD8L7fRnnw&#xA;hl0uWUCCQPxbu+0MWHV4weKMZ+f3Ia48q2awFoNUhkmH7DFVB+nkaZdDWyveBp1WXsbGI3HLEy+A&#xA;/SlMukXsfX0mHis0TfqbMoZ4nv8AkXVz0OSP83/TR/WhpIJY/tLQePUfeMtEgXHljlHmFPJMHYq7&#xA;FXYq7FXYq7FWwCegrgWlwilPRG+44OIJ4T3Ni3nPSNj/ALE48Q708Eu5v6tcf76f/gTg4x3r4cu4&#xA;u+rXH++n/wCBOPGO9fDl3F31a4/30/8AwJx4x3r4cu4rfRm/kb7jh4gvAe5oo46qR9GGwiitwodi&#xA;rsVTC50y+e4ldYqqzsVPJehPzzHhmiABbl5tPMzJA6lYmjam7cUgLMegBUn9eE6iA5ljHR5ZGhGy&#xA;mun+TNUlYNcFLZPBqSN/wI2/HMXL2jAct3a6bsDNLedQHzPyZHaeWtIs15vGJnXcvKqn7lAAzXZN&#xA;ZknyNe53+DsnT4hZHEe8/qQ2p+b9GtEaKsxanH91GUp8i/AfdlmHQZJm9viUajtXDAV6vgK++mA3&#xA;95YTyvJFBKXYkmSeUOTX2VUp9+b/ABY5xFEj4D9peWz5cciSAfib+4BAE0FcvcVAnc5azYf+Yt+q&#xA;6fHYJPxmnYM0KjcopryY12Wvam5+RzP0ELlxVybcXe83kiPqlBuf7K5t3IEtrew/ljrttbeXYobC&#xA;RmYE/X7WQKRFMDQNExBJSVArEbcWDUrXbne0dOZZCZfA948/d9oa9RQA4T6uuwZ5a6vNctxjkQOf&#xA;2XWJT9FQK5q54BHn+lxBLIeVfYj/AEtb/kX7oso4sX4tnw5u7/cu9LW/5F+6LHixfi14c3d/uVpt&#xA;tXPWJf8AgYsPHj7/AL2Ph5e7/ctfVNW/30v3RY+Jj7/vXwsvd9zvqmrf76X7osfEx9/3r4WXu+5a&#xA;1hqjdYV+6PCMsO/70HDlPT7mv0dqX++V+6PD4sO/70eBk7vuabTdSIoYR9HAfqx8aHf96Dp8nd9y&#xA;39E6h/vr/hl/rh8eHej8tk7nforUB/ur/hl/rj48O9fy2Tub/Rmp/wAh/wCCX+uDxoJ/L5O5d+j9&#xA;W/lb/gx/XHxcafAy/guFjq46Bx/sx/XB4uNfBy/gt/UtY/y/+Rg/5qx8TH+Anws3n82v0fq38rf8&#xA;GP64fFxo8DL+C0dO1U9VY/7Mf1x8XGjwMv4LR0vUj1jJ/wBkv9cPjQ71/LZO5r9E6h/vr/hl/rj4&#xA;8O9H5bJ3O/ROof76/wCGX+uPjw71/LZO536J1D/fX/DL/XHx4d6/lsnczc2On2aCS/nVB/lMEX8S&#xA;Cc0nizmagHshoMWPfLL9CBufO+gWQMdopnbt6S8Vr7s1Pwrl8Ozcs95be9hPtfT4hUBfu/H60uj/&#xA;ADIk5uZbIcKfu0VzWv8AlMR0/wBjmQeyBW0nFj7QGzcNvf8Aj7kNc/mLqj7W9vFCPFuTt99VH4Zb&#xA;DsmA5klpydv5T9MQPtSm581eYLkESXrqp7R0j/4gAcyoaHDHlH9LgZO09RPnI/Db7koklHIs7VY7&#xA;kk1JOZYHc4RsqMlwCpVR175IRUBDvy4njTlQ8a9K9smGTyTzJbtFq8zfXRfXDbzyAUVWr9gGrVoP&#xA;Dp0zfac3DlwhyLFUkgYpMzMasvT33zIbKsJ75Jv7i219Wh2inBSSPswFDt7jrmLrICUN+jHJH07v&#xA;Ws0bio6y1vUrOgimJjH+63+Jfx6fRlGTTwnzDOOSQTy385owCz2/Fu7hjx+6hOYcuz+4tv5k9yb2&#xA;+oT3KepbwJKnisymnz2zEniETRNfBsjkmeUftVfV1D/ljH/I0f0yPDD+d9jLiyfzftd6uof8sY/5&#xA;Gj+mPDD+d9i8WT+b9rvV1D/ljH/I0f0x4YfzvsXiyfzftd6uof8ALGP+Ro/pjww/nfYvFk/m/a71&#xA;dQ/5Yx/yNH9MeGH877F4sn837XerqH/LGP8AkaP6Y8MP532LxZP5v2u9XUP+WMf8jR/THhh/O+xe&#xA;LJ/N+13q6h/yxj/kaP6Y8MP532LxZP5v2u9XUP8AljH/ACNH9MeGH877F4sn837XerqH/LGP+Ro/&#xA;pjww/nfYvFk/m/a71dQ/5Yx/yNH9MeGH877F4sn837XerqH/ACxj/kaP6Y8MP532LxZP5v2oLR9d&#xA;Or6fHqGnwLNaylwkglG5jco3bxXLc2nGOXDI0fcjiyfzftRvq6h/yxj/AJGj+mVcMP532J4sn837&#xA;XerqH/LGP+Ro/pjww/nfYvFk/m/a71tQ/wCWQf8AI0f0x4YfzvsXiyfzftRFtbaxORxs1VD+20op&#xA;+Ck/cMrnPHH+L7HJw6XUZOUKHeT+xgMkssrl5XZ3PVmJJP0nN8IgbB00pGRsmyhPr8H6S/R/+7/R&#xA;9f8A2PLj+vLOA8PF0ul4drROQQ7FVN45G/bp7AYQVtTNs38wyXEm2jbuO4x4k2k/mKOdrCaIt6Vs&#xA;y8ZpE+OZ+W3pwoP2m6VP3HMjARxA9fs+LOHN5Iy8J5iIxEvIqiBuQFO3LflTxzfA7ORLdUFrALr9&#xA;6a1pTsKjBxGmHEeHZMdHubew1AxXAK2kxFXT7UbA1SVfdD+GUZomUbHP8bL9Qeq27l4I3LK/JQea&#xA;fZao6j2OaSQotCpgV2Kr4Z5oXEkLtG46MpIP4ZGUQRRSCRyT2w8438NFukFyn832X+8bfhmFl0ET&#xA;9OzkQ1Uhz3ZHp/mLSb2ipL6Up/3VL8Jr7HofvzX5dLkh0sOZjzQl7029CT+RvuOYnEHK8GXcW/q8&#xA;n8jfcceIL4Mu4u+ryfyN9xx4gvgy7i76vJ/I33HHiC+DLuLvq8n8jfcceIL4Mu4u+ryfyN9xx4gv&#xA;gy7i76vJ/I33HHiC+DLuLvq8n8jfcceIL4Mu4tCBy3EIS3hQ1w8QUYZHoWGfm15hl8veU5QlY77U&#xA;q2tpXYgMP3km/wDIn4kZs+yNOM+YfzY7n9DXqMcscbIq2E/84++Y4zfXflW5mWNJa3dgzH9oACaM&#xA;fQOQHs2bT2i0xERmA8j+g/o+THQw8Q8JNPcGTRoa/WNQiX/noifrJzlAch5RPyLs/wAtgj9WQfMB&#xA;Qn1vyhaRPJLdo4jUsxBZ9gK/s7ZOOn1EjQinxdFHqD8yxT8uvzA02fyfBJcsE1MSTrKREXAJlZ16&#xA;FK/AwH2s2PaPZkxnNfRt18mnH2nhxwo7T/q/2fe1qfm7WZ3Kw3rCE/77QQn8Czf8NluHQY4jeO/v&#xA;t1Op7VzSNRnt5Dh/WftYybyAdyfkM2Xhl13hlgf6eH+PPrIJ9Hn9Vp/k04f8T3zZ+B+4rrzcvwv3&#xA;dMytdatrqNpLf4lR3jY/5SMVP6s18sBHNxfCKGtNZebUb+3rtAY+Ip/MlT+OE4tgyOLYI360x/b/&#xA;AIZHgY8BXxrLK3FXUk9AXUfrOROyRjJV7PStTvVka2t2lETtG5Ug0Zeo2OVz1EI8zTaNLkPIMY8/&#xA;HW9O0+WBbdrdSVjuLlzxAMgqIo/5nZdzT7K7nrmboZY5yBu/L9PuZfl5R3kKec/U1EZANXpse2bn&#xA;iavE3UY4zM7OxAoRyrkiabJS4RSH+sRpcKJSzIrAOV2IFeoJ7+GHhNbNgFh7j5U8r63c6bFJbxRT&#xA;2syCW3vYJE9KVTTcry/dyb/EpHX6acxqtbjjIgkgjoRy/WE/kcstwPtT4eR9fIrwjHsXGYn8o4vP&#xA;5Mv5Ny+XzbHkbXiaFYh7l/6DH+UsXmn+TMvl81/+A9c/mg/4M/8ANOR/lPF5p/kvL5Ll8ga0RUy2&#xA;6+xd/wCCHAe1MfdL8fFI7Ky98fx8G/8AlX+s/wC/7b/gpP8AmjH+VMfdL7P1p/krJ3x+39Sb6ZoP&#xA;mvTaC21KL0h/uly7pT5FdvozFzanBk5xNuXh02ox/TMV3MntJr30v9MEYlHeEsVP0MAR+OaycY36&#xA;brzdpjnKvVV+Sq9zHGvJ3CL4sQB+ORECeTM5AOaBn8yaND9u7jNOoQ8/+Icsujo8kuUS409fijzk&#xA;Pv8AuQE3nrSUNEWWX3VQB/wxGZEezMh50HGl2xiHKyhpPP8Abj+7tXbxDMF/EcssHZZ6lql21HpE&#xA;oaTz/cEn07RQD0DuWp/wITLR2WOsvs/tapdtnpH5n+xCSeetYf4VSBCN9kLEV/12fLR2ZjHf+Pc0&#xA;y7ZzHkIj4frtDy+cPMcmxvCo7BFRf1LlkdBhH8P3tMu1dQf4vueM/mRrF/rmuH6xqEl1BYoY41JJ&#xA;VGO7gEk1Ow5EeFO2dJ2dgjih6YiPEwlqJyA4yZHzY5oBhtdWtJ3l+r/vKR3B3Cv+yWH8tT8XtXMz&#xA;PZgRzWRsEPboy5jUuvFyAWUGtD3Fc5suElvmm5Nt5fvpRsTEYwR/xYQn/G2XaaN5AGzDG5Bj/wCW&#xA;10Pqt7bE0EbpKK/5YKn/AIgMy+0I7gt+pjuCzA3MA6uPo3/VmBwFxuApZmS5DDvMeg6dptpLfxyS&#xA;+sXHoRllpzY+45GnXM7BllM8LaMhQf5e6lML64sW/uZR6iivR12J+kdfoyzWwFAsSNmQ6RZ6hFrm&#xA;oTzx8YJieD1FDRvh6H+XMGRFBZEUnoBJoP8AOmVtcpU1ilJvK960315lYhhcu6kbUD9P1ZPJHkzl&#xA;sxfz5q1zc6jHFc3r3jQE+nbKxaOBD13J+29AWzP0eGMY2BV/ayskbljv6RndGKKFJO3egpmXwBq8&#xA;IA7oWOd0DciSTQ75Om2Ubd6by0dtqD4sF0kbPZPyf866bpulS6dqIkjAb9xcRxqg4js7x8ZH3O3I&#xA;NTxGc12voJ5JiUPl/bs5mnzgCi9HTzN5cuv7rUDU9nuPTP8AyUpmmOkyx5x/2P6m/wASJ6n5opIo&#xA;LgVgZ5l/yLiNh+AOVmRjz2/zSvBfK/muWwlU1EM//I6P+mA5R3j5FHhnuPzCqsM6b+jOAN/96AKf&#xA;dTImQPUf6VkAR0PzX6XfzT2kVwkLuHH2jMTuNjsT4jI5sQjIgn7GOl1ByYxIDn5o5bu4PWAj/ZKc&#xA;oMB3uUMh7lxf1V4yKVB8Gp/xE4KrkkyvmhJdJ02RuRgjL/zOC/8AxsMujnmOpaJafGd6Cm2kWn7N&#xA;va/TEf8AmrJDPLvl82J08P5sfkt/RUY+zb2fzMNf1k4fHPfL5o/Lx/mw+Tv0WP8AfFl/yIGPjecv&#xA;mnwB3Q/0q4WEgoBFaUHb0Rg8Ud8vmnwvKPyYTb67X84J9G4W4RdOWIII/g9ZT9YqBXr6bkZspYf8&#xA;DE/V9Xf05fegRHFyj8mS+cEhTQLn19TttFiccZL4xbhSN1T94h5sOlN/DMLRknIKjKZ7r/YyyRHD&#xA;0HwfL17Kqeslm7Paqx9KRwFdlrsWUEgVG5Fc7+ETQ4ubpajxINA0kXEgkH9o+PtkyaZ1vb3fyV+Y&#xA;+tf4ZtrSSJZLi0X0PrMvJmYJ8IDAcfiWlN/7Tyur7KxnKZXsd6DlDXzjGkJ5w1DXvMOlPZSXdFZl&#xA;cRUCoeJqAeIy/SYMWGXEA0y1U5fUdmO+WNAvdNmmmuWT94vBUQk961OwzNz5hIUGucwWQ5jNTsVY&#xA;B58vUk1GCExFfSQ0lZmqanoE+yOvzPypXZ6ONRJZVsx/RZnttVs5hL6Yjl+1WnsVJP8AN032zJyi&#xA;4kM+b1wzQr9p1Fd9yBmkotdK1lJFK7FGD8RvQ165DICA4WulUQO9DXV5b28zROTyXsB2O4yyEDIW&#xA;5WGXHESSS1XStNt7kQq7RzD956zhVoAdqgbDfrl3BIkN5BLzzUntl1B3tk4QMahRyoflzJYj375t&#xA;cd1ukxsNW6ARKTsGrWvX7sJLVKyVSe2Tikq7kgV+npkRJYS6IiysvVSXkaGlAvfxyEp0wyZKITPy&#xA;87x3DQqQEYVKHuR3HvlWXcW2wLIcobFEXRW+EKmh9PnUeNaYCEppba5rNsAtvfXESjoqyOF+6tMq&#xA;np8cucQfgyGSQ6ptpvmrzHcXKwSXbSxuD6nKn2ab7ihzGy6PFEWBTRqtTKOMm0zl8w3Wl2y8YFnh&#xA;LfEGZlKk+FDT8Mx/ysch50XC7M1NAwPvDX+PYKD1dOdQeh9Ukfiox/k09JfY7XxgeQ+1WTztpbja&#xA;2Ib/ACpaD/k3kT2fPv8As/avi+X2qsfmq3bdLUN7iWv6lyJ0R/nfYx8cdy7/ABSwJK2q+1Xc0+6m&#xA;P5Lz+xfzHkkfmb8wb+wFl6SrEXnVpOLSVaJPtqfj6GozI0/ZsJXe+3l+plHNI/gpx/i/WKVR1QU2&#xA;pyI/4YtlH5DH1YfmpqcnmrX363ZA8FVF/UMkNDiH8KDqch6vIY9fu288/pdp29WS7NZwxDcHJj6j&#xA;/INM3PgRGLgranLN8HnSeeep2uLPlcTidgSIUJqiV25E7s7kdB0HXtXI6SNHYU4QJ6sKt441Tg+/&#xA;FCWp0rmxJapXdqi+lJblBRZF3+dMj1QbErZr5O1GOSEpMfTuaKj/AMshAojHwfjsfHNfqYUduTIs&#xA;ozEQ7FXYqkT6jd0JaUgDcnYZleGG7hDz3U717y+uJp2aR6lULHkQq7AAjb7s2WOAjEAMZIAlFVCv&#xA;21NWHjljIXbLLPVFbUdNgqaTWshAbrUkEfhGcwJxolnWz0DQYwtly48S7E8j+1TbNbqD6nQ9oSvJ&#xA;V8kJ5gMZlSqlZQNm7Mv9Qct0905XZ10e5JZFjKH1ACo337U775kh2TEdRuLa5l9GytVXf4pKAux8&#xA;eQrt9OZkAQLJYylSw6ZIKcjQBSaDfoK7/Tj4jQMwVoLVnhJXag4r7713yJluxlMAqKs8b1GzKf1Y&#xA;ebMgEIm04veqwYr8XIEdQfYHrQ9sieSYBlQrQVNT3OYzeoR6TeS3/wBdjDPGooVVSe1KVH35EyA5&#xA;lhLLGOxICIIINCKHwws7TrQbaeOV3dSilaAMKFvlXtmNqJAh1faGWJAA3TeSMPQNQp+0pFQe4/HM&#xA;UGnVxlXvUtQgE9nKlKtxJT/WG4yeOVSDdpZmOQV3seGmSgVldI19zmZ4g6PQcTYj0+I1aZ5GH8gp&#xA;/n9+NyPRd1UaqiLxjjYjxdif64PCvmjgYz5jTUdQvUkWKsSJxQKR41PU5lYeGIbYUAm9nfailnDH&#xA;K/F0QKQAD0265TKEbYGIVHubv9qRxX3IwCIUV0S7TvKukS6iskgZY0rK4LUUBd/898lkzERY6nVS&#xA;hAkc08816Bp91o7zRxhZLVfVjZNqqN2Bp1qMx9NnkJ0erpcGqnx0Tzec3MQ4AoKHpQdN82wLs8ct&#xA;90QdPSO3DrvIKMfu3pkOOyxGUk0jfL969vcgR/DL2ahYMP5XUdR3BG4yvLCxu3xFst/S9z/Kn3H+&#xA;uYnhBnwBo6rdf5I+jHwgvAFp1O8P7QHyAw+GF4QiZ/LNxJC6LMlWBA5KSN/EbZWNSL5Ov/lKPcWN&#xA;r+WGooTxvoSO1UYUzJ/lGPcWMu0InoWv+VW33qM312KjVqOLd8P8ox7iv8oiuRYbqgm0fzAsJlE7&#xA;acypzWtCB8TKK/6xGT4+MX3u3wT44A9723Sgv1CF1l9VJFDo42BVgCtB4UzU5DcnmdTPimdqdqVj&#xA;9ciVQQrKahj2w4snCWel1Hhm0ql8syuhUvG4PVWBp+o5eNSHO/lKPclyeRrv1nla4iBb7KqhAA8B&#xA;lh1g7mjJrRLo3L5IvXRlF1GOW1eLdMA1g7mEdUAeSyDyLfRRlPrUZ68TxbbCdZE9GUtXEm6UH/Ly&#xA;9Zy31uIVNfstkhrh3Mxrojo0Py6vKit5HT/VbH88O5P5+PcnUHlm4jiVGnViooTRt/vJyk6kdzYO&#xA;0o9xTfTrWW1t/RdgwBJUjbrmPkmJG3X6nKMkuIKrWsDTLMUBlXo3fIiRqmsZZCPDeyrkWt2KuxSC&#xA;hRpllVi0YdnJJLbnfsPDLPFk5B1eQ1ulr+XZObcZVC1PEEGtO2XjUjuc4dpCtwt/w5N/v5fuOH8y&#xA;O5P8pR7i7/Dk3+/l+44/mR3L/KUe4omw0U29wJZWWQAfCKdD475Xkz2KDRqNdxxoCkxmt4ZgBKgf&#xA;iaio75SJEcnBhklHkaYl+ZesJp2hfVYgFub8mJSBuIgP3hHzqF+nMjTR4pX0Dn9m4jOdnlH7+jXk&#xA;jUn1zyfNYNIBdwRtaMx68WUiN/8Agdvow5Y8GQHpzXW4vCzcXQ7/AK1J/wAvbplVRdxgKKAcWptl&#xA;354dyjXAdHHyDqBp/pkdAAKcW7CmP52Pcv52Pc1D+Xt7HKj/AFyP4SD9gnp88J1w7mQ147k6Hlye&#xA;m8yk/I5T+ZHc2fylHuLv8OTf7+X7jj+ZHcv8pR7i7/Dk3+/l+44/mR3L/KUe4sBaeUCvNvvObXhD&#xA;mcIcJ5SKh2+848IXhC2SZwjM0jAKKk1PbGgkRDHJISbCW7k/vJ5KrXrSpP45j8VycsHekfot/Kbf&#xA;0vUIaLYCp+yemXwohqywF2mi3Mh6uwPzOS4Q0mIXetL/ADt95wUEUHetL/O33nGgtBbJLKV+223u&#xA;cIASAFNZ5gwPNvvOHhCeELp7yWIJ8bfG6oNz+0ciQECALckk1Kh2267nCAFACn60387fecNBlwhW&#xA;WeUqDzb7zg4QwMQsd5huHanzONBkAHJcS/ZLt7bnExCDELmaU9JGH0nGguymZJx1dvvOGgmg4XE4&#xA;6SN95x4QvCF4u5u7t9BODhCOALhPIekjfecHCEcIb9aX+dvvONBaDvWl/nb7zjQWg71pf52+840F&#xA;oMev/rGo38gjPJYRxBY7bf1OUzkA5MKhFT0S7e3vQgYqsvwNQ037fjko82WWNhkbvKdw7A/M5bQc&#xA;UAKRlmBoXb7zhoMqClPeSxtEPUb94/Hqe4P8cBASIAqvrTf78b7zhoI4QrrPKRXm33nI8IYcId60&#xA;v87fecaC0FjCoIwpUVYqfbwyTIhD6vccbT00Pxzngo9u/wDTK5mgyxx3SrU7tH4W0RrDCKV8SBTM&#xA;eEerfCPVQsbn6vcq/wCydn+Ry2JopnGwyPYj2y9xlyuw9x4YopUV1Pz8MCKXYEIfJM0t1m6YNDGu&#xA;5jPqN9BouVTLbijzTlWDKGHQio+nJuOpOnE+2SZArojsRgKCqYEKbR91+7DaQVyEld+o64qV2BCm&#xA;0Y/Z29sNptYQQaHCyaxVeJCOu4wUil6OrgFTUHcYEEKV7KIrWSXugqPn0GJNJgLKWaUVisZJ28Sx&#xA;PyGYc9y2Zd5Uk4ZgwYGjA1B98tchltvMJoI5R+2oP05eHCkKKoyhhvhRaR65IyTQoDunx/jt+rK5&#xA;lyMQ2TKCVZYUkXowrlgNtZFFXiO9MSxKpgYuxVQYUYjJMkn1aCQyKzPydzxiiUdBlWTvb8ZQV3at&#xA;bSLG5BcqGYDsT2yqJtsjK3Wlo91IY0YBwKqG707ZIC1lKk608zrF6M6lXj2B6gr239sujfVonXMI&#xA;rJMHYq3zbpXFFLSQASTQDcnFKWX4RbJpX/vrpgVHcINwPu65hmXFJuhzruTHSpvVsYj3UcD/ALHb&#xA;9WZMTs05BUkUQCKHCwaVeNcKSWyaAnAhaJR3FMNJpcCD0OBDeKuxVogEUOKqbRkbjcYbZAoDU5XE&#xA;IhjBMsx4qB1p3yOSVBsgN7WaPcepb+mT8UWw+R6YwOycgota5Owtki/nav0L/t4Mi4hvaUfWJvQ9&#xA;Dl+6JqV98ppu4RdqeFkn2h3FbUxnf02IHyO+Ww5ONljumgIIqNxkmli+pz+teyON1B4r8l2yqR3c&#xA;zGKCN0SckNbnqPiQe3fJwPRryjqmoNCPEZY1K+RYOxVSlFDXthDIJDLfj6/9Y4l44qrGOgJp/mco&#xA;yepyBDalC9S4LLPPs89WC+AHTIRrkGUa5BSt5mgmSVeqGv8AZkwUkWKZSjJNEs0e4cVGXguJyNLc&#xA;KXYq7FUBq10IohGN2kPxD/JHX78hM7NmONlK7l7q5BuZB+7B4g9FHsMxxQ2bQANkboVzwd4T0b4l&#xA;HuOuXQPRhlj1T0EEVGTcZvFXYqouvE07dskyC3FK9ZD3398FIpUBBFRgYt4q7FUqubmNLy5dqVgi&#xA;Cp/rN/tjKM25Ab4x2CW6TKUvFHZwVP6xk4HdsyDZV1t63CL/ACrX7z/Zhyc0YuSXZW2uxVMtDek0&#xA;ifzLX7j/AG5Zjaso2TS5aYQuIaByKciaADxyyXJpjV7sZzHctE2KXXq+tbrzaEglR1ofbCGEyKos&#xA;njkEkauKgMK0OxHscucQil+KH1L/AMgm/wC1D/0555z/AId/tv8Asnrf8E/2v/YrX/5VFxPqf4f4&#xA;0NeX1KlO/XH/AA7/AG3/AGSR+U/2v/YoV/8AlR/ppz/wz6W/p1+ocffj2w/4d/t3+zZf4N/tf+xd&#xA;L/yo+o9X/DNe3P8AR/8AHAPz3+2/7JR+W/2v/YrP+QE/9+v/ANy/H/Dv9u/2a/4N/Q/2KLt/+VPe&#xA;kPq/+HvS3p6f1Lj79Nsf8O/23/ZMT+U6+H/sV5/5VH3/AEB/05Y/4d/tv+yX/BP9r/2LX/II/wDt&#xA;Qf8ATlj/AId/tv8Asl/wT/a/9i7/AJBH/wBqD/pyx/w7/bf9kv8Agn+1/wCxQ9z/AMqS5j6z/hr1&#xA;Kbep9QrT/ZY/4d/t3+zSPyvTw/8AYrT/AMqO9IV/wz6Xav6P4/0x/wAO/wBt/wBkn/Bv9r/2Lof+&#xA;VHeqvo/4Z9X9nh+j+X0U3w/4d/t3+zU/lv8Aa/8AYosf8ql7foD6PqeD/Dv9t/2TD/BP9r/2Lf8A&#xA;yCb/ALUP/Tnj/h3+2/7Jf8E/2v8A2Lv+QTf9qH/pzx/w7/bf9kv+Cf7X/sWj/wAqk7/oD6fqWP8A&#xA;h3+2/wCyX/BP9r/2LX/II/8AtQf9OWP+Hf7b/sk/4J/tf+xd/wAgj/7UH/Tlj/h3+2/7Jf8ABP8A&#xA;a/8AYtj/AJVJ2/QH0fUsf8O/23/ZI/wT/a/9i3/yCb/tQ/8ATnj/AId/tv8Asl/wT/a/9i7/AJBN&#xA;/wBqH/pzx/w7/bf9kv8Agn+1/wCxQk3/ACpD1W9b/DPq/t8/qHL6a74/4d/tv+yZj8t08P8A2K2P&#xA;/lRvqL6f+GPUr8HH9H1r7Ux/w7/bv9mp/Lf7X/sV1x/ypH1P9J/w16lP92fUK0+nD/h3+3f7NA/K&#xA;9PD/ANip/wDICP8Av1v+5fj/AIf/ALd/s0/4N/Q/2Lv+QEf9+t/3L8f8P/27/Zr/AIN/Q/2Kpb/8&#xA;qR9T/R/8NepT/df1DlT6MH+Hf7d/s0H8r18P/YoiT/lUHBvU/wAP+nQ8+X1KlO9a4/4d/tv+yR/g&#xA;n+1/7FB/8gI/79f/ALl+H/D/APbv9my/wb+h/sVa2/5UrzP1X/DfOnxel9QrT344P8O/23/ZIP5X&#xA;r4f+xRP/ACCb/tQ/9OeP+Hf7b/smP+Cf7X/sXf8AIJv+1D/054/4d/tv+yX/AAT/AGv/AGL/AP/Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:54dcb8a2-9365-7c4e-b905-d1292790f125</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:54dcb8a2-9365-7c4e-b905-d1292790f125</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:77c6fab0-7999-1e44-9360-1ae6ed180a16</stRef:instanceID>
            <stRef:documentID>xmp.did:77c6fab0-7999-1e44-9360-1ae6ed180a16</stRef:documentID>
            <stRef:originalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0326881d-7899-fd4d-9963-0fdc7cb6c8ac</stEvt:instanceID>
                  <stEvt:when>2016-07-27T12:44:50+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:77c6fab0-7999-1e44-9360-1ae6ed180a16</stEvt:instanceID>
                  <stEvt:when>2016-07-27T12:45:35+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:54dcb8a2-9365-7c4e-b905-d1292790f125</stEvt:instanceID>
                  <stEvt:when>2016-07-31T22:49:51+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>900.000000</stDim:w>
            <stDim:h>480.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -480 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 480 li
900 480 li
900 0 li
cp
clp
2.47814 0 mo
2.47814 266.909 li
900 266.909 li
900 0 li
2.47814 0 li
false sop
/0 
[/DeviceRGB] /CSA add_res
.333333 .878431 1 rgb
f
724.064 222.564 mo
472.428 222.564 li
430.408 205.873 li
388.873 189.375 li
762.271 189.375 li
758.776 199.414 754.559 209.126 749.138 218.049 cv
749.127 218.076 749.116 218.103 749.105 218.13 cv
724.064 222.564 li
774.663 213.605 mo
770.38 205.948 767.037 197.754 764.171 189.375 cv
900 189.375 li
900 191.399 li
900 191.399 li
893.03 192.636 886.334 193.826 880.344 194.891 cv
878.942 195.14 877.579 195.383 876.26 195.618 cv
774.663 213.605 li
2.47814 190.959 mo
2.47814 189.375 li
11.4058 189.375 li
8.41119 189.906 5.42494 190.436 2.47814 190.959 cv
level3{
gsave
clp
[7.77691e-009 -173.218 173.218 7.77691e-009 451.239 327.86 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.909804 1 1 ]
/C1 [.592157 .964706 1 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.77691e-009 -173.218 173.218 7.77691e-009 451.239 327.86 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~ki_-lk2tgfjlPRajQ#:\io8tViSibRi8EMMhqm5Hh;-oBgt^Z=gY:H9g=b04f\"j.f@SU)f%&=$e^W*u
e'ldodaHOjdEp7ecd0q`cHa_[c-=JVbfe2Qb0%lKaiVWFaN2EBa2Z-=`Pog7`5KR2_ns:-_SO()^qdb#
^V@Ls^:h4n]Y(ni]=Y\d]"5G_\[]/Z\$riT[^NWP[C*BK['R*FZEgd@Z*CO;Yck76YHG%2Xf\_,XK8J'
X/`2"WMukrW2QYmVl-DhVPU,cUnjf]USFTYU8"?TTqJ'OT:_aISt;LDSXl:@S=?";R[T\5R@0G0R$X/+
~>
<~s8N#srr2orrr2orrr2orrr2orrr2orrr2orrr)forVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVZTkr;?Kj
r;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Hhqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp6dqYL'bqYL'bqYL'b
qYL'bqYL'bqYL'bqYL'aq>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j]q"XXZq"XXZq"XXZq"XXZq"XXZ
q"XXZq"XXZp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4R
~>
255 ]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
900 182.496 mo
900 182.496 li
371.554 182.496 li
320.178 162.089 li
900 162.089 li
900 182.496 li
82.2651 182.496 mo
72.0726 182.496 li
72.0726 178.627 li
72.0726 178.627 63.1427 180.208 50.2211 182.496 cv
2.47814 182.496 li
2.47814 162.089 li
116.651 162.089 li
108.202 164.118 101.89 165.637 101.243 165.809 cv
99.118 166.375 143.936 170.333 144.516 170.333 cv
144.959 170.333 102.326 178.608 82.2651 182.496 cv
level3{
gsave
clp
[7.77691e-009 -173.218 173.218 7.77691e-009 451.239 327.86 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.77691e-009 -173.218 173.218 7.77691e-009 451.239 327.86 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
2.47809 0 mo
2.47809 62.5854 li
900 62.5854 li
900 0 li
2.47809 0 li
cp
.25098 .8 1 rgb
f
2.47809 69.0137 mo
2.47809 81.1301 li
900 81.1301 li
900 69.0137 li
2.47809 69.0137 li
cp
f
2.47809 90.1089 mo
2.47809 94.2998 li
900 94.2998 li
900 90.1089 li
2.47809 90.1089 li
cp
f
606.268 140.35 mo
606.268 140.35 669.536 142.514 709.495 142.514 cv
755.022 142.514 812.724 140.35 812.724 140.35 cv
812.724 140.35 751.315 138.186 709.495 138.186 cv
667.676 138.186 606.268 140.35 606.268 140.35 cv
cp
level3{
gsave
clp
[5.87902e-009 -130.946 130.946 5.87902e-009 709.496 261.482 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[5.87902e-009 -130.946 130.946 5.87902e-009 709.496 261.482 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
315.265 147.236 mo
307.708 147.236 299.868 147.223 291.85 147.199 cv
291.116 145.789 290.398 144.371 289.697 142.946 cv
298.34 142.921 306.895 142.908 315.265 142.908 cv
408.428 142.908 555.934 145.072 555.934 145.072 cv
555.934 145.072 412.764 147.236 315.265 147.236 cv
286.706 147.182 mo
286.202 147.18 285.69 147.178 285.185 147.177 cv
285.144 146.509 285.14 145.838 285.176 145.161 cv
285.44 145.6 285.982 146.311 286.706 147.182 cv
134.148 145.869 mo
98.828 145.438 74.5928 145.072 74.5928 145.072 cv
74.5928 145.072 99.7639 144.667 136.912 144.207 cv
131.959 145.639 li
134.148 145.869 li
level3{
gsave
clp
[5.87902e-009 -130.946 130.946 5.87902e-009 315.264 261.482 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[5.87902e-009 -130.946 130.946 5.87902e-009 315.264 261.482 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
519.399 295.367 mo
501.384 295.367 483.875 294.917 467.396 293.895 cv
453.665 291.556 439.911 289.314 426.125 287.15 cv
451.079 288.421 493.277 290.291 525.506 290.291 cv
574.324 290.291 646.007 286 646.007 286 cv
646.007 286 578.65 281.709 525.506 281.709 cv
489.395 281.709 436.977 284.281 415.143 285.442 cv
385.606 280.895 355.988 276.69 326.436 272.673 cv
326.295 272.606 326.15 272.535 326.002 272.46 cv
325.167 272.064 324.216 271.568 323.223 271.01 cv
327.057 271.195 381.068 273.75 424.008 273.75 cv
463.105 273.75 525.007 271 525.007 271 cv
525.007 271 464.924 268.25 424.008 268.25 cv
384.404 268.25 326.845 270.826 323.19 270.992 cv
322.241 270.457 321.255 269.867 320.298 269.254 cv
319.174 268.511 318.09 267.745 317.117 267.018 cv
317.891 266.977 318.665 266.93 319.438 266.873 cv
319.438 266.873 li
319.438 266.873 li
318.322 266.272 315.634 264.985 313.889 263.801 cv
314.585 263.93 315.293 264.061 316.007 264.177 cv
318.07 264.448 320.077 264.737 321.608 264.836 cv
323.119 264.963 324.127 265.048 324.127 265.048 cv
324.127 265.048 li
324.127 265.048 li
324.127 265.048 li
324.127 265.048 li
324.127 265.048 li
324.127 265.048 li
324.127 265.048 323.308 264.501 322.079 263.68 cv
320.843 262.893 319.288 261.706 317.757 260.573 cv
317.757 260.573 li
317.742 260.561 317.727 260.549 317.711 260.537 cv
316.978 259.953 316.269 259.351 315.604 258.803 cv
315.267 258.519 314.935 258.258 314.638 257.988 cv
314.346 257.715 314.069 257.456 313.814 257.218 cv
312.812 256.275 312.144 255.647 312.144 255.647 cv
312.144 255.647 311.258 255.407 309.927 255.045 cv
309.989 255.044 li
311.971 255.016 313.953 254.988 315.44 254.967 cv
315.955 254.963 316.406 254.959 316.781 254.956 cv
317.577 255.144 318.332 255.313 319.029 255.459 cv
320.383 255.775 321.534 255.972 322.331 256.138 cv
322.338 256.139 322.344 256.14 322.351 256.142 cv
323.151 256.299 323.609 256.389 323.609 256.389 cv
323.609 256.389 li
323.609 256.389 li
323.609 256.389 li
323.609 256.389 li
323.609 256.389 323.197 256.183 322.475 255.822 cv
322.401 255.784 322.323 255.744 322.242 255.704 cv
321.948 255.556 321.611 255.39 321.241 255.206 cv
321.241 255.206 321.241 255.206 321.241 255.206 cv
320.725 254.948 320.142 254.652 319.512 254.308 cv
317.071 253.049 313.911 251.23 310.873 249.323 cv
308.643 247.893 306.5 246.393 304.714 245.048 cv
305.504 245.032 li
307.22 246.235 308.839 247.366 310.209 248.2 cv
312.034 249.361 313.25 250.136 313.25 250.136 cv
313.25 250.136 li
313.25 250.136 li
313.25 250.136 312.411 249.013 311.152 247.327 cv
310.613 246.639 310.033 245.83 309.427 244.956 cv
320.972 244.733 li
322.608 245.591 324.28 246.405 325.992 247.172 cv
325.997 247.174 326.002 247.177 326.007 247.179 cv
326.026 247.187 326.045 247.196 326.064 247.204 cv
326.08 247.212 326.097 247.219 326.114 247.227 cv
326.128 247.233 326.142 247.239 326.156 247.246 cv
326.188 247.26 326.22 247.274 326.252 247.288 cv
326.259 247.291 326.266 247.295 326.273 247.297 cv
326.302 247.31 326.33 247.323 326.359 247.335 cv
326.367 247.339 326.375 247.343 326.383 247.346 cv
326.417 247.361 326.452 247.377 326.486 247.392 cv
326.486 247.392 li
326.486 247.392 li
326.486 247.392 li
326.486 247.392 li
326.453 247.365 326.42 247.339 326.387 247.313 cv
326.382 247.309 326.377 247.305 326.373 247.301 cv
326.343 247.277 326.313 247.254 326.284 247.23 cv
326.274 247.222 326.264 247.214 326.253 247.205 cv
326.231 247.188 326.209 247.17 326.187 247.152 cv
325.19 246.349 324.217 245.528 323.268 244.689 cv
518.618 240.911 li
472.428 222.564 li
724.064 222.564 li
522.568 258.239 li
732.374 254.182 li
729.429 257.241 726.269 260.178 723.058 263.071 cv
723.056 263.072 723.055 263.074 723.053 263.075 cv
723.024 263.102 722.994 263.129 722.964 263.155 cv
722.964 263.155 li
722.964 263.155 li
722.964 263.155 li
728.064 260.956 733.143 258.682 737.954 255.976 cv
733.75 259.816 728.86 263.003 723.6 265.499 cv
706.209 264.706 670.173 263.25 640.006 263.25 cv
603.619 263.25 546.007 266 546.007 266 cv
546.007 266 601.926 268.75 640.006 268.75 cv
668.191 268.75 706.144 267.244 723.969 266.461 cv
725.596 266.449 727.219 266.375 728.836 266.243 cv
732.133 266.092 734.007 266 734.007 266 cv
734.007 266 733.323 265.964 732.05 265.901 cv
733.888 265.66 735.717 265.344 737.533 264.954 cv
737.438 265.11 737.343 265.269 737.248 265.429 cv
736.775 266.221 736.292 267.057 735.79 267.907 cv
735.79 267.907 li
733.683 271.479 731.236 275.323 727.77 277.368 cv
725.038 278.979 722.242 280.496 719.452 282.019 cv
666.155 288.623 589.058 295.367 519.399 295.367 cv
790.606 269.559 mo
790.098 268.559 789.599 267.554 789.111 266.545 cv
789.109 266.541 789.108 266.539 789.106 266.535 cv
789.089 266.501 789.073 266.468 789.057 266.434 cv
789.055 266.429 789.052 266.424 789.05 266.419 cv
789.034 266.387 789.019 266.355 789.003 266.323 cv
789 266.316 788.996 266.308 788.993 266.301 cv
788.979 266.271 788.965 266.243 788.951 266.213 cv
788.945 266.202 788.94 266.191 788.934 266.18 cv
788.922 266.154 788.909 266.128 788.897 266.102 cv
788.89 266.087 788.883 266.073 788.876 266.058 cv
788.865 266.035 788.854 266.013 788.843 265.99 cv
788.835 265.973 788.827 265.956 788.819 265.939 cv
788.809 265.918 788.799 265.898 788.789 265.877 cv
788.78 265.859 788.771 265.84 788.763 265.822 cv
788.753 265.803 788.744 265.783 788.735 265.763 cv
788.725 265.742 788.715 265.723 788.705 265.702 cv
788.697 265.685 788.689 265.668 788.681 265.651 cv
788.669 265.627 788.657 265.601 788.646 265.577 cv
788.639 265.564 788.633 265.55 788.626 265.537 cv
788.613 265.509 788.6 265.481 788.587 265.453 cv
788.582 265.442 788.577 265.433 788.572 265.423 cv
788.554 265.384 788.536 265.346 788.518 265.308 cv
789.618 266.633 790.755 267.923 791.925 269.184 cv
791.485 269.309 791.045 269.434 790.606 269.559 cv
793.698 268.683 mo
792.416 266.789 791.194 264.861 790.031 262.897 cv
790.029 262.898 790.03 262.898 790.029 262.899 cv
789.015 261.187 788.047 259.447 787.124 257.676 cv
790.068 261.184 793.123 264.608 796.268 267.962 cv
795.412 268.202 794.554 268.442 793.698 268.683 cv
797.001 267.758 mo
795.459 265.571 793.952 263.363 792.478 261.136 cv
792.476 261.138 792.473 261.14 792.47 261.142 cv
790.72 258.498 789.025 255.825 787.39 253.118 cv
865.213 251.613 li
862.12 252.18 859.027 252.779 855.933 253.412 cv
836.136 257.464 816.504 262.33 797.001 267.758 cv
209.967 257.076 mo
187.627 253.63 165.31 250.54 143.003 248.175 cv
207.774 246.922 li
206.874 248.122 205.991 249.332 205.127 250.554 cv
205.12 250.564 205.112 250.575 205.105 250.586 cv
205.092 250.604 205.079 250.622 205.066 250.641 cv
205.047 250.668 205.027 250.696 205.008 250.723 cv
204.999 250.735 204.991 250.748 204.982 250.761 cv
204.967 250.782 204.951 250.804 204.936 250.826 cv
204.929 250.836 204.922 250.845 204.915 250.855 cv
204.892 250.888 204.87 250.919 204.847 250.952 cv
204.846 250.953 204.845 250.955 204.844 250.956 cv
204.822 250.988 204.8 251.019 204.778 251.051 cv
204.772 251.06 204.767 251.067 204.761 251.076 cv
204.738 251.108 204.716 251.14 204.693 251.172 cv
204.693 251.172 li
204.668 251.208 204.644 251.243 204.619 251.278 cv
204.617 251.281 204.614 251.286 204.612 251.289 cv
204.59 251.32 204.568 251.352 204.546 251.383 cv
204.543 251.387 204.54 251.392 204.536 251.397 cv
204.512 251.432 204.488 251.466 204.464 251.501 cv
204.463 251.502 204.462 251.504 204.461 251.505 cv
204.44 251.537 204.418 251.568 204.396 251.599 cv
204.391 251.607 204.386 251.614 204.381 251.622 cv
204.358 251.655 204.334 251.689 204.311 251.722 cv
204.311 251.722 li
204.311 251.722 li
206.721 250.046 209.169 248.428 211.645 246.847 cv
218.385 246.717 li
215.739 250.275 212.845 253.669 209.967 257.076 cv
level3{
gsave
clp
[3.8096e-009 84.8528 -84.8528 3.8096e-009 450 214 ]ct
/1 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.945098 1 1 ]
/C1 [.686275 .933333 1 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.8096e-009 84.8528 -84.8528 3.8096e-009 450 214 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~naQ&;n*f`6mdBN2mHs<.m-O**lg*m&lK[["l07Hskih6nkND$jk2tgfjlPUbjQ,C^j5]1Zio8tViSibR
i8EMMhr!;IhVR)Eh;-lAgt^Z=gY:H9g=k65g"G$1f[na,f@JO(f%&=$e^W*ueC2mqe'c[mda?IidEp7e
d*L%acHa_\c-=MXbfn;TbKJ)Pb0%lLaiVZHaN2HDa2c6?`l?$;`Pog7`5KU3_o'C/_SX1+_83t'^qdb#
^V@Ls^:q:o]tM(k]Y(kg]=YYc]"5G_\[f5[\@B#W\$i`R[^ENN[C!<J['R*FZa-mBZE^[>Z*:I:Yck76
~>
<~s8N#srr2orrr2orrr2orrVc]nrVc]nrVc]nrVc]mr;?Kjr;?Kjr;?Kjr;?Hhqtp9fqtp9fqtp9fqtg0c
qYL'bqYL'bqYL'bq>'j^q>'j^q>'j^q>'j]q"XXZq"XXZq"XXZq"XUXp\4FVp\4FVp\4FVp\+=Sp@e4R
p@e4Rp@e4Rp%A"Np%A"Np%A"Np%A"Mo^qeJo^qeJo^qeJo^qbHoCMSFoCMSFoCMSFoCDJCo()ABo()AB
o()ABnaZ/>naZ/>naZ/>naZ/=nF5r:nF5r:nF5r:nF5o8n*f`6n*f`6n*f`6n*]W3mdBN2mdBN2mdBN2
~>
255 ]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
405.007 286 mo
405.007 286 476.69 290.291 525.506 290.291 cv
574.324 290.291 646.007 286 646.007 286 cv
646.007 286 578.65 281.709 525.506 281.709 cv
478.861 281.709 405.007 286 405.007 286 cv
.529412 .835294 1 rgb
f
321.007 259 mo
321.007 259 363.489 263.291 397.008 263.291 cv
426.427 263.291 473.007 259 473.007 259 cv
473.007 259 427.796 254.709 397.008 254.709 cv
366.218 254.709 321.007 259 321.007 259 cv
cp
f
546.007 266 mo
546.007 266 601.926 268.75 640.006 268.75 cv
678.088 268.75 734.007 266 734.007 266 cv
734.007 266 681.463 263.25 640.006 263.25 cv
603.619 263.25 546.007 266 546.007 266 cv
f
323.007 271 mo
323.007 271 379.464 273.75 424.008 273.75 cv
463.105 273.75 525.007 271 525.007 271 cv
525.007 271 464.924 268.25 424.008 268.25 cv
383.09 268.25 323.007 271 323.007 271 cv
f
734.114 102.733 mo
730.602 102.733 727.461 103.873 725.36 105.665 cv
723.329 104.603 720.726 103.842 717.814 103.515 cv
717.983 102.895 718.072 102.253 718.072 101.595 cv
718.072 96.4088 712.553 92.2043 705.745 92.2043 cv
698.937 92.2043 693.418 96.4088 693.418 101.595 cv
693.418 101.921 693.44 102.243 693.482 102.561 cv
691.691 101.948 689.602 101.595 687.37 101.595 cv
686.665 101.595 685.974 101.632 685.302 101.7 cv
684.386 99.6533 681.84 98.1804 678.841 98.1804 cv
675.071 98.1804 672.015 100.506 672.015 103.374 cv
672.015 103.484 672.021 103.594 672.03 103.703 cv
671.029 103.465 669.964 103.337 668.86 103.337 cv
666.244 103.337 663.852 104.056 662.008 105.244 cv
661.137 104.562 660.069 104.155 658.909 104.155 cv
655.992 104.155 653.626 106.703 653.626 109.847 cv
651.927 108.097 645.154 109.666 637.197 110.559 cv
629.628 111.409 620.919 111.84 620.919 111.84 cv
784.826 111.84 li
784.826 111.84 760.239 110.227 744.523 107.543 cv
742.712 104.705 738.733 102.733 734.114 102.733 cv
cp
1 1 1 rgb
f
319.582 125.841 mo
314.985 125.841 310.873 127.332 308.122 129.679 cv
305.463 128.289 302.055 127.292 298.242 126.864 cv
298.464 126.052 298.581 125.212 298.581 124.35 cv
298.581 117.56 291.355 112.056 282.442 112.056 cv
273.529 112.056 266.304 117.56 266.304 124.35 cv
266.304 124.777 266.332 125.199 266.388 125.615 cv
264.042 124.813 261.308 124.35 258.386 124.35 cv
257.462 124.35 256.558 124.399 255.678 124.487 cv
254.48 121.808 251.146 119.88 247.219 119.88 cv
242.284 119.88 238.283 122.924 238.283 126.679 cv
238.283 126.824 238.291 126.967 238.303 127.109 cv
236.992 126.799 235.598 126.631 234.152 126.631 cv
230.727 126.631 227.596 127.572 225.182 129.127 cv
224.042 128.234 222.643 127.702 221.126 127.702 cv
217.306 127.702 214.209 131.038 214.209 135.154 cv
211.984 132.863 203.117 134.917 192.7 136.086 cv
182.79 137.198 171.389 137.762 171.389 137.762 cv
385.973 137.762 li
385.973 137.762 353.785 135.651 333.21 132.137 cv
330.839 128.421 325.63 125.841 319.582 125.841 cv
f
296.542 152.701 mo
292.301 159.023 li
271.438 164.113 li
275.301 158.835 li
253.665 158.835 li
281.922 153.921 li
178.909 117.622 li
159.778 130.748 li
173.687 133.575 li
131.959 145.639 li
144.516 146.959 li
127.709 152.567 li
127.709 152.567 165.573 150.164 166.056 150.164 cv
166.539 150.164 103.368 165.244 101.243 165.809 cv
99.118 166.375 143.936 170.333 144.516 170.333 cv
145.096 170.333 72.0726 184.471 72.0726 184.471 cv
72.0726 178.627 li
72.0726 178.627 32.948 185.551 0 191.399 cv
0 250.94 li
518.618 240.911 li
296.542 152.701 li
.32549 .796078 1 rgb
f
388.873 189.375 mo
388.872 189.375 li
371.554 182.496 li
371.554 182.496 li
388.873 189.375 li
320.178 162.089 mo
320.177 162.089 li
296.542 152.701 li
296.542 152.701 li
296.542 152.701 li
320.178 162.089 li
.305882 .819608 .988235 rgb
f
430.408 205.873 mo
388.872 189.375 li
388.873 189.375 li
430.408 205.873 li
level3{
gsave
clp
[7.77691e-009 -173.218 173.218 7.77691e-009 451.239 327.86 ]ct
/2 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~ea<:amJPE"r6ap0d-U\Vm/5/qr6=U+bj>8Mm/4ulr5e4%a6WZBlhn]er5@q!_X%-9lhnQar4hRq^$GU/
lhnB\r42.k\Ej(&lMS-Vr3bhf[-IRqlMRpPr35JaYNbtfl27[Jr2f/\X6KP]l27LEr28cVVWdrRkkq4>
r1iKRU$2EIkkq(9r1<*LSEKg>kPUe3r0Z[FQfn:5k5:P-r06@APNMe+k5:>'r/^"<Nog1ujnt)!r/9\7
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.77691e-009 -173.218 173.218 7.77691e-009 451.239 327.86 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~eC<!teC2mpda?IidEp7ed*L%acd'h]cHXVYc-4DUbfe2Pb/qcIaiMQEaN)?Aa2Z-<`Pf^5`5BL1_o'C/
_SX.*_83q&^qd_"^V@Ls]tM(k]Y(kg]=YYc\[f5[\@B#W\$riU\$rfS[C*BK['[0GZa6sCZ*CO;Yct=7
YHP.4Y-+q0Xf\_,XK8M(X/i;$Wi;trW2QYmVl-GiVP^5eV50o^USFTYU8"BVU7n9RTV.sMT:_aISt;OE
SXl:@S"#n:R[T\6R@0G0Q^=&*QBmi&QBmi&Q'ISuPEV2oP*1ukOcb`eO,o?_NfK-[NK&pWN/W^SMi3LO
~>
<~m-O**m-O**m-O**m-O**m-F!'lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg!d#lK[["lK[["lK[["lK[["
lK[["lK[["lK[["lK[["lK[["lK[["lK[["lK[["lK[["lK[Wul07Hsl07Hsl07Hsl07Hsl07Hsl07Hs
l07Hrkih6okih6okih6okih6okih6okih6okih6nkND$kkND$kkND$kkND$kkND$kkND$kkND$jk2tgg
k2tggk2tggk2tggk2tggk2tggk2tggjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjQ,C_jQ,C_jQ,C_
~>
251 ]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
371.554 182.496 mo
371.554 182.496 li
320.177 162.089 li
320.178 162.089 li
371.554 182.496 li
level3{
gsave
clp
[7.77691e-009 -173.218 173.218 7.77691e-009 451.239 327.86 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.77691e-009 -173.218 173.218 7.77691e-009 451.239 327.86 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
0 250.94 mo
0 247.636 li
0 247.636 li
0 250.94 li
143.003 248.175 mo
127.476 246.529 111.955 245.234 96.4328 244.416 cv
84.3357 243.778 72.2336 243.429 60.1337 243.429 cv
48.6085 243.429 37.0812 243.745 25.5494 244.428 cv
80.0412 237.493 134.398 230.105 190.885 224.658 cv
200.507 223.654 209.975 222.648 219.351 221.602 cv
218.522 222.746 217.685 223.887 216.842 225.025 cv
218.722 223.779 220.594 222.524 222.451 221.255 cv
224.508 221.023 226.563 220.788 228.612 220.552 cv
227.614 221.928 226.592 223.288 225.553 224.639 cv
225.55 224.64 225.547 224.641 225.544 224.642 cv
219.763 232.154 213.455 239.344 207.774 246.922 cv
143.003 248.175 li
211.645 246.847 mo
215.356 244.478 219.129 242.192 222.924 239.922 cv
221.547 242.276 220.012 244.527 218.385 246.717 cv
211.645 246.847 li
304.714 245.048 mo
304.077 244.568 303.485 244.107 302.951 243.677 cv
302.43 243.284 301.978 242.895 301.581 242.55 cv
301.183 242.208 300.836 241.91 300.55 241.665 cv
300.213 241.376 299.964 241.162 299.815 241.034 cv
299.7 240.88 299.585 240.723 299.469 240.563 cv
300.754 241.56 302.194 242.631 303.605 243.707 cv
304.246 244.151 304.881 244.596 305.504 245.032 cv
304.714 245.048 li
309.427 244.956 mo
308.583 243.739 307.689 242.396 306.784 241.079 cv
306.069 239.915 305.346 238.77 304.681 237.691 cv
304.681 237.691 304.681 237.691 304.681 237.691 cv
304.001 236.586 303.382 235.551 302.897 234.638 cv
302.897 234.638 li
302.4 233.751 301.985 233.013 301.696 232.496 cv
301.407 231.98 301.245 231.685 301.245 231.685 cv
301.245 231.685 301.157 231.607 301.006 231.474 cv
300.845 231.115 300.681 230.757 300.521 230.397 cv
300.521 230.397 li
306.779 235.96 313.494 240.81 320.972 244.733 cv
309.427 244.956 li
323.268 244.689 mo
319.355 241.23 315.844 237.473 312.652 233.482 cv
312.652 233.482 li
309.563 229.619 306.767 225.543 304.244 221.272 cv
304.224 221.237 304.203 221.203 304.183 221.168 cv
304.202 221.183 304.222 221.199 304.241 221.214 cv
304.247 221.218 304.252 221.222 304.257 221.226 cv
304.271 221.237 304.285 221.248 304.298 221.258 cv
304.306 221.264 304.314 221.271 304.322 221.277 cv
304.333 221.285 304.344 221.294 304.355 221.302 cv
304.364 221.309 304.373 221.316 304.382 221.323 cv
304.392 221.331 304.402 221.339 304.412 221.346 cv
304.422 221.354 304.432 221.362 304.442 221.37 cv
304.45 221.376 304.458 221.382 304.466 221.389 cv
304.478 221.398 304.489 221.406 304.501 221.415 cv
304.505 221.419 304.51 221.422 304.515 221.426 cv
309.685 225.414 315.466 228.619 321.787 230.797 cv
321.787 230.797 li
321.787 230.797 li
321.787 230.797 li
321.787 230.797 li
321.787 230.797 li
321.787 230.797 li
321.085 230.392 320.412 229.958 319.735 229.527 cv
319.735 229.527 li
307.885 221.967 299.927 210.442 294.557 198.187 cv
294.554 198.188 294.551 198.189 294.549 198.191 cv
293.405 195.578 292.379 192.934 291.458 190.287 cv
292.169 191.525 292.881 192.762 293.593 193.999 cv
293.593 193.999 li
293.593 193.999 li
293.094 192.842 292.596 191.685 292.097 190.527 cv
298.715 198.324 305.909 205.659 313.294 212.838 cv
313.309 212.852 313.324 212.868 313.339 212.882 cv
313.373 212.915 313.406 212.947 313.44 212.98 cv
313.487 213.026 313.535 213.073 313.583 213.119 cv
313.598 213.133 313.613 213.148 313.628 213.162 cv
313.67 213.203 313.713 213.245 313.755 213.286 cv
313.767 213.298 313.78 213.31 313.792 213.322 cv
313.847 213.375 313.901 213.428 313.956 213.48 cv
313.956 213.48 li
313.956 213.48 li
313.956 213.48 li
313.956 213.48 li
313.956 213.48 li
313.927 213.436 313.899 213.391 313.87 213.346 cv
313.863 213.335 313.856 213.324 313.849 213.312 cv
313.824 213.273 313.798 213.233 313.773 213.193 cv
313.773 213.192 313.772 213.191 313.771 213.19 cv
309.918 207.12 306.17 200.994 302.681 194.746 cv
302.68 194.747 302.678 194.748 302.676 194.748 cv
300.328 190.542 298.099 186.28 296.039 181.939 cv
299.832 186.507 304.027 190.696 308.473 194.721 cv
308.473 194.721 li
308.473 194.721 li
308.473 194.721 li
308.473 194.721 li
308.473 194.721 li
308.473 194.721 li
307.982 194.115 307.504 193.503 307.025 192.891 cv
307.022 192.892 307.02 192.893 307.018 192.894 cv
302.229 186.775 298.065 180.366 294.505 173.539 cv
298.951 178.835 303.627 183.96 308.473 188.948 cv
308.473 188.948 li
308.473 188.948 li
303.365 181.966 298.544 174.808 294.142 167.427 cv
292.652 164.93 290.994 162.357 289.511 159.704 cv
292.301 159.023 li
294.632 155.549 li
295.998 156.814 297.229 157.834 298.091 158.336 cv
298.091 158.336 li
298.091 158.336 li
297.246 156.931 296.418 155.517 295.607 154.095 cv
296.542 152.701 li
320.177 162.089 li
371.554 182.496 li
388.872 189.375 li
430.408 205.873 li
518.618 240.911 li
323.268 244.689 li
230.436 217.982 mo
229.452 217.904 228.466 217.827 227.482 217.751 cv
229.508 216.309 231.514 214.842 233.494 213.339 cv
232.514 214.911 231.491 216.457 230.436 217.982 cv
222.385 217.355 mo
217.083 216.946 211.779 216.543 206.469 216.144 cv
211.018 214.406 215.378 212.308 219.53 209.864 cv
222.876 207.894 229.19 201.452 232.861 201.347 cv
229.574 206.818 226.062 212.129 222.385 217.355 cv
206.283 216.13 mo
174.875 213.768 143.363 211.547 112.005 209.119 cv
137.746 199.277 164.648 191.03 190.597 181.961 cv
197.096 163.384 200.017 144.077 199.59 124.909 cv
247.479 141.784 li
246.755 143.243 245.999 144.687 245.207 146.109 cv
244.458 147.455 243.685 148.779 242.903 150.097 cv
242.369 150.643 241.845 151.119 241.382 151.559 cv
241.111 151.812 240.857 152.049 240.623 152.268 cv
240.379 152.475 240.155 152.666 239.952 152.838 cv
239.133 153.533 238.668 153.927 238.668 153.927 cv
238.668 153.927 239.271 153.751 240.332 153.44 cv
240.599 153.361 240.896 153.274 241.219 153.178 cv
241.537 153.069 241.88 152.951 242.247 152.825 cv
242.98 152.566 243.83 152.29 244.718 151.92 cv
245.767 151.515 246.919 151.023 248.125 150.473 cv
242.902 161.729 233.606 170.824 223.891 179.57 cv
229.504 177.149 235.094 174.646 240.389 171.668 cv
235.162 176.441 228.975 180.298 222.324 183.177 cv
223.038 183.199 223.753 183.21 224.466 183.21 cv
229.672 183.21 234.845 182.639 239.926 181.549 cv
237.139 186.146 234.088 192.318 229.18 195.212 cv
225.646 197.296 222.013 199.238 218.409 201.215 cv
220.528 201.263 222.648 201.319 224.768 201.355 cv
219.338 207.025 213.193 212.046 206.283 216.13 cv
.298039 .741176 .988235 rgb
f
0 191.399 mo
0 199.415 li
22.21 193.34 43.9569 186.667 65.4164 179.805 cv
52.8573 182.029 24.6954 187.016 0 191.399 cv
cp
1 1 1 rgb
f
72.0725 184.471 mo
72.0725 184.471 145.096 170.333 144.516 170.333 cv
143.937 170.333 99.1181 166.375 101.243 165.809 cv
103.368 165.244 166.539 150.164 166.056 150.164 cv
165.573 150.164 127.709 152.567 127.709 152.567 cv
144.516 146.959 li
131.959 145.639 li
173.687 133.575 li
159.778 130.748 li
178.909 117.622 li
0 186.48 li
0 191.399 li
32.948 185.551 72.0725 178.627 72.0725 178.627 cv
72.0725 184.471 li
cp
f
283.028 154.311 mo
296.165 152.567 li
296.542 152.701 li
297.547 151.203 li
281.922 153.921 li
283.028 154.311 li
cp
.839216 .937255 1 rgb
f
283.028 154.31 mo
281.922 153.921 li
253.665 158.835 li
275.301 158.835 li
271.438 164.113 li
292.301 159.023 li
296.542 152.701 li
296.165 152.567 li
283.028 154.31 li
1 1 1 rgb
f
522.568 258.239 mo
900 250.94 li
900 191.399 li
891.397 192.926 883.214 194.38 876.26 195.618 cv
522.568 258.239 li
.32549 .796078 1 rgb
f
847.515 205.748 mo
848.148 205.925 848.788 206.092 849.423 206.266 cv
849.306 205.755 848.416 205.748 847.515 205.748 cv
cp
f
847.515 205.748 mo
848.416 205.748 849.305 205.755 849.423 206.266 cv
848.788 206.092 848.148 205.925 847.515 205.748 cv
614.047 242.043 mo
704.139 232.972 793.182 221.516 883.623 214.066 cv
876.017 212.611 868.495 211.021 861.085 209.246 cv
874.237 206.225 887.194 202.918 900 199.415 cv
900 191.399 li
891.398 192.926 883.214 194.38 876.26 195.618 cv
614.047 242.043 li
1 1 1 rgb
f
876.26 195.618 mo
883.214 194.38 891.397 192.926 900 191.399 cv
900 186.48 li
876.26 195.618 li
cp
f
782.915 271.78 mo
752.156 280.773 502.098 311.779 398.605 284.158 cv
365.977 275.45 519.198 379.205 492.055 396 cv
900 396 li
900 246.562 li
885.321 248.156 870.634 250.404 855.933 253.412 cv
831.363 258.441 807.043 264.725 782.915 271.78 cv
.309804 .690196 1 rgb
f
555.052 310.438 mo
442.852 287.6 329.764 275.912 216.924 258.16 cv
176.708 251.833 136.572 246.532 96.4328 244.416 cv
64.3047 242.721 32.1748 243.069 0 246.562 cv
0 396 li
828.619 396 li
741.325 355.55 648.196 329.398 555.052 310.438 cv
f
467.396 293.895 mo
464.879 293.739 462.38 293.57 459.913 293.387 cv
445.047 291.021 430.168 288.765 415.284 286.579 cv
418.345 286.746 421.997 286.939 426.125 287.15 cv
439.911 289.314 453.665 291.556 467.396 293.895 cv
409.57 285.744 mo
405.916 285.211 402.257 284.682 398.602 284.157 cv
397.296 283.809 396.284 283.64 395.551 283.64 cv
395.402 283.64 395.265 283.647 395.139 283.661 cv
369.627 280.011 344.098 276.514 318.563 272.971 cv
318.53 272.939 318.497 272.906 318.464 272.874 cv
318.693 272.916 li
321.239 273.328 323.77 273.582 325.66 273.654 cv
326.598 273.716 327.392 273.685 327.934 273.701 cv
328.478 273.705 328.788 273.707 328.788 273.707 cv
328.788 273.707 li
328.788 273.707 li
328.788 273.707 li
328.788 273.707 li
328.788 273.707 328.506 273.584 328.012 273.369 cv
327.613 273.184 327.066 272.971 326.436 272.673 cv
355.988 276.69 385.606 280.895 415.143 285.442 cv
412.965 285.558 411.093 285.66 409.57 285.744 cv
level3{
gsave
clp
[3.8096e-009 84.8528 -84.8528 3.8096e-009 450 214 ]ct
/3 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~[`eERbP/EepU&*;Zc`$Kb4i3`pT_j7Z,uaEanN![pT;O2XiU7<aS2aVpSu=/WlXq6a7lOQpSZ(+VoSP/
`qQ=LpS>h'UW3&'`V6+GpS#S#Tu?\u`:onBpR]=tS](8m`:ob>pR9%pR`"lf_tTP9pQrbkQbrK__Y9>4
pQWMgPem*X_=s,/pQ<8cOMLUP_"Wo*pQ!#_Nkb=I^\<Z$pPZf\MSJnB^\<PupP?QXLVEM;^A!>ppOp6S
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.8096e-009 84.8528 -84.8528 3.8096e-009 450 214 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~[C*EM[C*EM[C!<J['R*FZa-mBZEgdAZE^[>Z*:I:Yct@9Yck76YHG%1XfSV*XK8M)XK/D&X/`2"Wi;ts
WMukrWMuhpW2QVlVl-DhVP^5fVP^2dV59u`Unjc\USFQXU8"BVU8"?TTqS-PTV.sNTV.pLT:_^HSt;LD
SXl=AS=H+=S"#n9R[T\5R@0J2R@0J1R$a8-Q^=&)QBmi&QBmi%Q'IW!Pa%DrPEV2oPEV2nP*1ujOcbcf
OH>QcO,o?_O,o?_NfK-[NK&pWNK&mUMi3LOMMd:KMMd:KM2@(GLkpkCLPLY?LPLY?L5(G;KnY57KS5#3
~>
<~b0%lLb0%lLb/qcIaiVZHaiVZHaiVZHaiMQEaN2HDaN2HDaN2HDaN)?Aa2c6@a2c6@a2c6@a2c6@a2c6@
a2c6@a2c3>`l?$<`l?$<`l?$<`l?!:`Pog8`Pog8`Pog8`Pod6`5KU4`5KU4`5KR2_o'C0_o'C0_o'C0
_o'C0_o'C0_o'C0_o'C0_o'C/_SX1,_SX1,_SX1+_83t(_83t(_83t(_83t'^qdb$^qdb$^qdb$^qdb#
^V@Ou^V@Ou^V@Ou^V@Ou^:q=q^:q=q^:q=q^:q=q^:q=q^:q=q^:q=q]tM+m]tM+m]tM+m]tM+m]Y(ni
~>
246 ]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /3 /Gradient get_res exec grestore
}if
np
426.125 287.15 mo
421.997 286.939 418.345 286.746 415.284 286.579 cv
413.378 286.299 411.476 286.021 409.57 285.744 cv
411.093 285.66 412.965 285.558 415.143 285.442 cv
418.802 286.006 422.468 286.575 426.125 287.15 cv
.4 .662745 .968627 rgb
f
563.263 312.129 mo
560.528 311.559 557.786 310.995 555.052 310.438 cv
523.4 303.996 491.681 298.441 459.913 293.387 cv
462.38 293.57 464.879 293.739 467.396 293.895 cv
499.603 299.381 531.625 305.392 563.263 312.129 cv
398.602 284.157 mo
397.445 283.991 396.295 283.826 395.139 283.661 cv
395.265 283.647 395.402 283.64 395.551 283.64 cv
396.284 283.64 397.296 283.809 398.602 284.157 cv
.235294 .54902 .968627 rgb
f
0 396 mo
0 396 li
0 316.872 li
11.8841 316.035 24.0039 315.077 36.2337 314.024 cv
34.0653 316.676 31.906 319.334 29.9729 322.132 cv
32.9784 320.042 36.105 318.131 39.2629 316.243 cv
36.0388 321.752 31.0978 326.14 27.6276 331.496 cv
28.9923 330.763 30.4016 330.114 31.8305 329.502 cv
31.6083 329.711 31.3882 329.921 31.1613 330.128 cv
31.6451 329.816 32.1223 329.499 32.5952 329.178 cv
33.8064 328.672 35.0285 328.186 36.2467 327.692 cv
34.4814 330.298 32.5501 332.82 30.5363 335.289 cv
28.6438 336.536 26.5825 337.41 24.4013 337.594 cv
24.3979 337.594 li
23.6611 337.654 25.8504 338.026 26.0041 338.045 cv
26.5173 338.107 27.0349 338.135 27.553 338.135 cv
28.4885 338.135 29.4261 338.044 30.3439 337.898 cv
28.6136 338.712 26.774 339.341 24.8911 339.779 cv
26.9757 340.236 29.1084 340.437 31.2445 340.437 cv
31.587 340.437 31.9296 340.432 32.2721 340.422 cv
29.9873 342.362 27.2897 343.991 24.1063 345.143 cv
27.5932 344.542 30.8049 343.428 33.6881 341.91 cv
30.5172 345.953 26.6158 349.456 21.6365 352.115 cv
26.7866 350.876 31.3299 348.895 35.5431 346.372 cv
35.7447 346.312 li
35.519 346.702 35.2887 347.089 35.0612 347.478 cv
34.9206 347.584 li
33.8024 348.441 32.6157 349.228 31.4923 349.957 cv
30.3586 350.669 29.2803 351.316 28.336 351.837 cv
27.866 352.102 27.4314 352.339 27.0425 352.542 cv
26.6546 352.747 26.3164 352.929 26.0336 353.068 cv
25.4685 353.352 25.1475 353.514 25.1475 353.514 cv
25.1475 353.514 25.5107 353.472 26.1496 353.399 cv
26.4712 353.365 26.8578 353.31 27.305 353.249 cv
27.7536 353.191 28.2583 353.115 28.8096 353.025 cv
29.917 352.853 31.2053 352.606 32.6008 352.307 cv
33.4586 352.11 34.3602 351.893 35.2759 351.648 cv
34.8201 352.43 34.349 353.165 33.8819 353.824 cv
35.4189 353.164 36.9364 352.452 38.3991 351.657 cv
37.8234 352.469 37.2144 353.241 36.5971 353.942 cv
36.5724 353.97 36.5477 353.997 36.523 354.025 cv
0 354.025 li
0 396 li
386.796 354.025 mo
345.045 354.025 li
341.316 349.667 337.13 345.524 332.874 341.456 cv
336.719 342.434 340.604 343.281 344.499 344.076 cv
344.499 344.076 li
344.499 344.076 li
344.499 344.076 li
344.499 344.076 li
344.499 344.076 li
344.499 344.076 li
336.814 339.032 324.793 332.547 320.476 324.411 cv
326.198 327.585 331.912 330.849 337.555 334.288 cv
337.555 334.288 li
337.555 334.288 li
337.555 334.288 li
337.555 334.288 li
337.555 334.288 li
337.555 334.288 li
334.078 330.447 330.403 326.716 326.667 323.045 cv
328.184 324.025 329.691 325.022 331.185 326.038 cv
331.185 326.038 li
331.185 326.038 li
331.185 326.038 li
331.185 326.038 li
331.185 326.038 li
331.185 326.038 li
329.739 323.501 328.269 320.976 326.697 318.507 cv
326.875 318.563 327.062 318.622 327.262 318.682 cv
328.721 319.146 330.721 319.701 332.711 320.161 cv
334.712 320.618 336.724 320.932 338.217 321.106 cv
338.962 321.2 339.592 321.232 340.023 321.274 cv
340.454 321.309 340.701 321.33 340.701 321.33 cv
340.701 321.33 li
340.701 321.33 li
340.701 321.33 li
340.701 321.33 li
340.701 321.33 li
340.701 321.33 li
340.701 321.33 340.5 321.193 340.149 320.955 cv
339.801 320.711 339.297 320.393 338.724 319.963 cv
337.569 319.117 336.104 317.945 334.753 316.692 cv
333.402 315.429 332.135 314.133 331.215 313.111 cv
330.752 312.615 330.374 312.176 330.109 311.879 cv
330.093 311.861 li
330.364 311.967 330.629 312.069 330.878 312.162 cv
332.421 312.756 333.45 313.152 333.45 313.152 cv
333.45 313.152 li
333.45 313.152 li
333.45 313.152 li
333.45 313.152 li
333.45 313.152 li
333.45 313.152 li
333.45 313.152 332.738 312.359 331.669 311.169 cv
330.608 310.012 329.267 308.417 327.921 306.847 cv
327.35 305.833 326.661 304.613 325.972 303.389 cv
324.433 300.541 322.899 297.701 322.787 297.493 cv
323.236 297.63 323.686 297.766 324.137 297.898 cv
324.137 297.898 li
324.137 297.898 li
324.137 297.898 li
324.137 297.898 li
324.137 297.898 li
324.137 297.898 li
323.293 297.381 322.449 296.864 321.605 296.347 cv
321.759 296.349 321.914 296.35 322.068 296.35 cv
323.567 296.35 325.05 296.275 326.526 296.098 cv
328.17 296.766 329.842 297.407 331.53 298.034 cv
331.766 298.167 331.896 298.24 331.896 298.24 cv
331.896 298.24 li
331.896 298.24 li
331.896 298.24 li
331.896 298.24 li
331.801 298.134 li
332.329 298.33 332.851 298.53 333.384 298.721 cv
333.384 298.721 li
333.384 298.721 li
333.384 298.721 li
333.384 298.721 li
333.384 298.721 li
333.384 298.721 li
332.718 298.387 332.065 298.044 331.412 297.701 cv
331.341 297.622 331.27 297.543 331.185 297.448 cv
330.738 296.939 330.076 296.24 329.332 295.356 cv
327.814 293.619 325.885 291.244 324.067 288.834 cv
324.067 288.834 li
324.052 288.814 324.038 288.795 324.023 288.775 cv
324.016 288.765 324.009 288.756 324.002 288.746 cv
323.992 288.733 323.983 288.72 323.974 288.708 cv
323.971 288.704 323.968 288.7 323.965 288.696 cv
322.962 287.332 322.011 285.974 321.156 284.704 cv
321.156 284.704 li
320.515 283.752 319.92 282.843 319.433 282.049 cv
319.433 282.049 li
318.829 281.122 318.394 280.31 318.061 279.764 cv
317.737 279.213 317.552 278.898 317.552 278.898 cv
317.552 278.898 317.272 278.652 316.782 278.221 cv
316.301 277.783 315.567 277.183 314.762 276.408 cv
314.65 276.305 314.53 276.192 314.414 276.084 cv
317.908 277.127 321.416 278.128 324.92 279.139 cv
324.92 279.139 li
324.92 279.139 li
324.92 279.139 li
324.92 279.139 li
324.92 279.139 li
324.92 279.139 li
322.805 277.081 320.676 275.033 318.563 272.971 cv
344.098 276.514 369.627 280.011 395.139 283.661 cv
396.295 283.826 397.445 283.991 398.602 284.157 cv
402.257 284.682 405.916 285.211 409.57 285.744 cv
411.476 286.021 413.378 286.299 415.284 286.579 cv
430.168 288.765 445.047 291.021 459.913 293.387 cv
491.681 298.441 523.4 303.996 555.052 310.438 cv
557.786 310.995 560.528 311.559 563.263 312.129 cv
566.845 312.892 570.42 313.663 573.993 314.445 cv
511.341 329.027 449.171 341.923 386.796 354.025 cv
344.704 354.025 mo
335.458 354.025 li
333.802 351.838 332.151 349.648 330.535 347.437 cv
335.301 349.501 340.058 351.65 344.704 354.025 cv
334.612 354.025 mo
334.301 354.025 li
334.129 353.817 333.957 353.61 333.786 353.402 cv
334.058 353.611 334.334 353.818 334.612 354.025 cv
189.385 354.025 mo
111.332 354.025 li
105.808 338.933 101.537 323.381 100.052 307.851 cv
133.889 304.259 166.696 300.323 195.525 296.653 cv
194.56 297.067 193.572 297.458 192.558 297.824 cv
195.154 297.377 197.675 296.787 200.113 296.067 cv
203.041 295.691 205.928 295.319 208.765 294.95 cv
202.985 301.534 196.074 307.271 187.609 311.792 cv
197.928 309.31 207.03 305.341 215.471 300.286 cv
215.606 300.246 215.741 300.206 215.875 300.166 cv
215.423 300.947 214.962 301.723 214.506 302.503 cv
214.412 302.573 214.319 302.644 214.224 302.714 cv
211.984 304.432 209.607 306.008 207.356 307.469 cv
205.084 308.895 202.924 310.192 201.032 311.234 cv
200.09 311.766 199.22 312.242 198.44 312.647 cv
197.663 313.059 196.985 313.423 196.419 313.701 cv
195.287 314.271 194.644 314.595 194.644 314.595 cv
194.644 314.595 195.371 314.511 196.651 314.365 cv
197.296 314.297 198.071 314.187 198.967 314.064 cv
199.865 313.948 200.876 313.796 201.981 313.614 cv
204.199 313.271 206.78 312.776 209.577 312.177 cv
211.295 311.782 213.101 311.347 214.936 310.856 cv
214.512 311.584 214.082 312.291 213.648 312.971 cv
213.646 312.972 213.645 312.973 213.643 312.973 cv
213.169 313.717 212.693 314.435 212.218 315.109 cv
212.193 315.145 212.168 315.18 212.143 315.216 cv
212.143 315.216 li
212.143 315.216 li
215.223 313.895 218.263 312.468 221.193 310.875 cv
220.04 312.501 218.82 314.049 217.583 315.453 cv
216.129 317.084 214.641 318.502 213.254 319.614 cv
211.87 320.73 210.583 321.526 209.637 322.027 cv
209.168 322.291 208.781 322.459 208.517 322.584 cv
208.251 322.707 208.11 322.772 208.11 322.772 cv
208.11 322.772 li
208.11 322.772 li
208.11 322.772 208.267 322.768 208.563 322.761 cv
208.86 322.752 209.303 322.751 209.861 322.693 cv
210.751 322.623 211.961 322.462 213.379 322.142 cv
210.272 324.473 206.721 326.645 203.928 326.645 cv
203.647 326.645 203.374 326.623 203.109 326.577 cv
203.109 326.577 li
203.109 326.577 li
203.191 326.666 203.23 326.757 203.23 326.851 cv
203.232 328.017 197.257 329.49 195.385 330.06 cv
195.385 330.06 li
195.385 330.06 li
197.849 330.547 200.33 330.992 202.824 331.297 cv
198.468 334.376 193.933 337.275 189.491 340.202 cv
189.491 340.202 li
189.491 340.202 li
195.945 339.618 202.497 339.072 209.007 338.262 cv
209.007 338.262 li
208.987 338.29 208.966 338.318 208.946 338.347 cv
208.928 338.371 208.91 338.396 208.892 338.421 cv
208.662 338.74 208.43 339.058 208.198 339.376 cv
208.198 339.376 li
206.207 342.104 204.134 344.793 201.641 347.211 cv
201.641 347.212 li
201.621 347.231 201.6 347.251 201.58 347.271 cv
201.577 347.273 201.575 347.275 201.572 347.278 cv
201.553 347.297 201.533 347.315 201.514 347.334 cv
201.511 347.337 201.509 347.339 201.506 347.342 cv
201.486 347.361 201.467 347.379 201.447 347.398 cv
201.445 347.4 201.442 347.403 201.44 347.405 cv
201.42 347.424 201.4 347.443 201.38 347.462 cv
201.38 347.463 201.38 347.463 201.379 347.463 cv
201.36 347.481 201.341 347.5 201.321 347.518 cv
201.317 347.522 201.313 347.526 201.309 347.53 cv
201.291 347.547 201.272 347.564 201.254 347.581 cv
201.25 347.585 201.245 347.59 201.241 347.594 cv
201.223 347.611 201.205 347.628 201.186 347.645 cv
201.182 347.649 201.177 347.654 201.173 347.658 cv
201.154 347.675 201.135 347.693 201.117 347.71 cv
201.114 347.713 201.112 347.715 201.109 347.717 cv
201.091 347.734 201.074 347.75 201.056 347.767 cv
201.052 347.771 201.048 347.774 201.044 347.777 cv
201.026 347.794 201.007 347.812 200.989 347.829 cv
200.984 347.833 200.98 347.837 200.975 347.841 cv
200.957 347.859 200.938 347.876 200.92 347.893 cv
200.915 347.896 200.911 347.9 200.907 347.904 cv
200.888 347.922 200.869 347.939 200.85 347.957 cv
200.847 347.959 200.843 347.962 200.841 347.965 cv
200.82 347.984 200.8 348.002 200.779 348.021 cv
200.779 348.021 li
199.793 348.917 195.479 351.032 195.47 351.841 cv
195.469 352.011 195.658 352.124 196.108 352.155 cv
193.978 352.981 191.745 353.621 189.385 354.025 cv
90.1306 351.106 mo
89.7365 350.968 89.3206 350.821 88.902 350.673 cv
88.6821 350.435 li
89.0739 350.611 89.4896 350.793 89.9102 350.978 cv
90.1306 351.106 li
92.711 350.863 mo
92.3782 350.477 92.0246 350.06 91.6701 349.647 cv
91.3848 349.141 91.0413 348.532 90.697 347.921 cv
89.9292 346.499 89.1636 345.081 89.1077 344.978 cv
89.3316 345.046 89.556 345.114 89.7811 345.18 cv
89.7811 345.18 li
89.7811 345.18 li
89.3598 344.922 88.9387 344.664 88.5174 344.406 cv
88.5947 344.407 88.672 344.407 88.7491 344.407 cv
89.4972 344.407 90.237 344.37 90.9739 344.281 cv
91.794 344.615 92.629 344.935 93.4712 345.248 cv
93.5895 345.314 93.6539 345.351 93.6539 345.351 cv
93.6539 345.351 li
93.6539 345.351 li
93.6068 345.298 li
93.6903 345.329 93.7735 345.36 93.8566 345.391 cv
93.4836 347.219 93.1013 349.044 92.711 350.863 cv
93.8708 345.321 mo
93.7176 345.242 93.5651 345.162 93.4126 345.082 cv
93.299 344.955 li
93.0762 344.701 92.7455 344.352 92.3742 343.911 cv
91.6167 343.044 90.654 341.858 89.7462 340.656 cv
88.8506 339.441 88.012 338.212 87.4334 337.269 cv
87.132 336.806 86.915 336.401 86.7485 336.129 cv
86.587 335.854 86.4946 335.696 86.4946 335.696 cv
86.4946 335.696 86.3547 335.574 86.1102 335.358 cv
85.8703 335.14 85.5037 334.841 85.102 334.454 cv
84.9283 334.292 li
86.6719 334.813 88.4234 335.312 90.172 335.817 cv
90.172 335.817 li
90.172 335.817 li
89.1 334.773 88.0206 333.735 86.9499 332.69 cv
87.0639 332.711 li
88.3351 332.917 89.5982 333.043 90.5418 333.079 cv
91.0099 333.11 91.406 333.095 91.6764 333.103 cv
91.9479 333.104 92.1029 333.106 92.1029 333.106 cv
92.1029 333.106 li
92.1029 333.106 li
92.1029 333.106 91.9621 333.044 91.7154 332.937 cv
91.4714 332.824 91.1176 332.69 90.7121 332.483 cv
89.8927 332.095 88.8486 331.513 87.8649 330.883 cv
87.3039 330.512 86.7634 330.13 86.2772 329.767 cv
86.6638 329.747 87.05 329.723 87.4357 329.694 cv
86.879 329.395 85.537 328.752 84.666 328.161 cv
85.0139 328.226 85.3669 328.291 85.7231 328.349 cv
86.753 328.484 87.7547 328.628 88.5192 328.678 cv
89.2733 328.741 89.7762 328.784 89.7762 328.784 cv
89.7762 328.784 li
89.7762 328.784 li
89.7762 328.784 89.3675 328.51 88.754 328.101 cv
88.1373 327.708 87.3609 327.115 86.5969 326.55 cv
86.2226 326.253 85.861 325.946 85.5222 325.667 cv
85.3541 325.524 85.1883 325.395 85.0402 325.26 cv
84.8942 325.123 84.7564 324.994 84.6288 324.875 cv
84.1287 324.405 83.7952 324.091 83.7952 324.091 cv
83.7952 324.091 83.3532 323.971 82.6887 323.791 cv
82.7196 323.79 li
83.7091 323.777 84.6982 323.763 85.4404 323.752 cv
85.6977 323.75 85.9223 323.748 86.1098 323.746 cv
86.5072 323.84 86.8837 323.925 87.2316 323.998 cv
87.9131 324.156 88.4912 324.255 88.8896 324.338 cv
89.2893 324.417 89.5177 324.462 89.5177 324.462 cv
89.5177 324.462 li
89.5177 324.462 li
89.5177 324.462 89.312 324.359 88.952 324.179 cv
88.5942 323.995 88.0758 323.752 87.4731 323.423 cv
86.2546 322.794 84.6773 321.887 83.1607 320.935 cv
81.651 319.967 80.2207 318.934 79.2069 318.117 cv
78.9464 317.92 78.7211 317.726 78.5231 317.554 cv
78.3243 317.383 78.1511 317.235 78.0085 317.112 cv
77.8404 316.968 77.716 316.861 77.6419 316.797 cv
77.4686 316.562 li
78.1101 317.06 78.829 317.594 79.5333 318.132 cv
80.7353 318.964 81.8977 319.807 82.8295 320.374 cv
83.7405 320.954 84.3474 321.341 84.3474 321.341 cv
84.3474 321.341 li
84.3474 321.341 li
84.3474 321.341 83.9286 320.78 83.3 319.939 cv
82.6563 319.117 81.8959 317.949 81.1202 316.82 cv
80.3976 315.645 79.659 314.506 79.1796 313.605 cv
78.9318 313.162 78.7247 312.794 78.5803 312.536 cv
78.4359 312.279 78.3554 312.131 78.3554 312.131 cv
78.2358 312.026 li
78.1556 311.847 78.0736 311.668 77.994 311.488 cv
81.8659 314.931 86.089 317.826 90.9541 319.971 cv
90.9541 319.971 li
90.9541 319.971 li
87.2443 317.013 84.1982 313.561 81.6351 309.76 cv
82.3604 309.687 83.0884 309.613 83.8133 309.539 cv
85.3321 310.388 86.9321 311.11 88.6084 311.688 cv
88.6084 311.688 li
88.6084 311.688 li
87.4125 310.998 86.292 310.229 85.2417 309.394 cv
90.1805 308.889 95.1037 308.376 100.008 307.856 cv
98.4929 320.473 96.3866 332.986 93.8708 345.321 cv
90.0258 343.21 mo
89.1437 342.692 88.2828 342.161 87.4445 341.618 cv
87.4069 341.544 87.3442 341.456 87.2647 341.36 cv
87.5812 341.586 87.9039 341.813 88.2279 342.036 cv
88.8342 342.445 89.4434 342.842 90.0258 343.21 cv
324.836 309.771 mo
324.047 309.494 323.214 309.199 322.375 308.903 cv
322.228 308.745 322.081 308.586 321.934 308.427 cv
322.72 308.779 323.552 309.143 324.395 309.514 cv
324.541 309.6 324.69 309.685 324.836 309.771 cv
324.627 293.952 mo
322.86 292.913 321.135 291.849 319.455 290.762 cv
319.38 290.614 319.254 290.438 319.095 290.245 cv
319.729 290.698 320.376 291.152 321.025 291.6 cv
322.24 292.419 323.46 293.214 324.627 293.952 cv
f
900 354.025 mo
808.428 354.025 li
808.195 353.628 808.064 353.404 808.064 353.404 cv
808.064 353.404 807.809 353.18 807.364 352.789 cv
806.927 352.391 806.26 351.846 805.529 351.142 cv
805.427 351.048 805.319 350.946 805.213 350.847 cv
808.387 351.796 811.575 352.705 814.758 353.623 cv
814.758 353.623 li
814.758 353.623 li
814.758 353.623 li
814.758 353.623 li
814.758 353.623 li
814.758 353.623 li
812.807 351.724 810.842 349.834 808.893 347.931 cv
809.1 347.969 li
811.414 348.344 813.714 348.574 815.431 348.64 cv
816.283 348.696 817.004 348.669 817.497 348.683 cv
817.991 348.686 818.273 348.688 818.273 348.688 cv
818.273 348.688 li
818.273 348.688 li
818.273 348.688 818.017 348.576 817.568 348.381 cv
817.124 348.176 816.479 347.932 815.741 347.555 cv
814.249 346.848 812.349 345.789 810.559 344.642 cv
809.537 343.967 808.553 343.271 807.668 342.611 cv
808.372 342.574 809.075 342.531 809.777 342.478 cv
809.777 342.478 li
809.777 342.478 li
808.763 341.933 806.321 340.763 804.735 339.688 cv
805.368 339.805 806.011 339.923 806.66 340.029 cv
808.534 340.275 810.358 340.538 811.749 340.628 cv
813.122 340.743 814.038 340.821 814.038 340.821 cv
814.038 340.821 li
814.038 340.821 li
814.038 340.821 li
814.038 340.821 li
814.038 340.821 li
814.038 340.821 li
814.038 340.821 813.294 340.323 812.177 339.578 cv
811.054 338.862 809.641 337.784 808.25 336.755 cv
807.569 336.214 806.91 335.655 806.294 335.147 cv
805.988 334.888 805.686 334.652 805.416 334.406 cv
805.151 334.157 804.9 333.923 804.667 333.706 cv
803.757 332.85 803.15 332.279 803.15 332.279 cv
803.15 332.279 802.345 332.061 801.136 331.732 cv
801.192 331.731 li
802.993 331.706 804.794 331.68 806.145 331.661 cv
806.613 331.657 807.022 331.654 807.363 331.651 cv
808.087 331.822 808.772 331.975 809.406 332.108 cv
810.646 332.397 811.699 332.577 812.424 332.728 cv
813.151 332.871 813.567 332.953 813.567 332.953 cv
813.567 332.953 li
813.567 332.953 li
813.567 332.953 li
813.567 332.953 li
813.567 332.953 li
813.567 332.953 li
813.567 332.953 813.193 332.766 812.537 332.438 cv
811.886 332.103 810.942 331.661 809.845 331.063 cv
807.627 329.918 804.756 328.266 801.995 326.533 cv
799.247 324.771 796.643 322.89 794.798 321.403 cv
794.324 321.046 793.913 320.693 793.553 320.379 cv
793.431 320.275 793.315 320.175 793.205 320.08 cv
793.345 320.085 793.489 320.09 793.629 320.095 cv
794.212 320.535 794.805 320.982 795.392 321.431 cv
797.58 322.946 799.696 324.48 801.392 325.512 cv
803.05 326.568 804.155 327.271 804.155 327.271 cv
804.155 327.271 li
804.155 327.271 li
804.155 327.271 li
804.155 327.271 li
804.155 327.271 li
804.155 327.271 li
804.155 327.271 803.393 326.251 802.248 324.72 cv
801.307 323.517 800.228 321.908 799.108 320.256 cv
801.887 320.323 804.73 320.369 807.634 320.396 cv
810.365 322.001 813.207 323.467 816.181 324.778 cv
816.181 324.778 li
816.181 324.778 li
816.181 324.778 li
816.181 324.778 li
816.181 324.778 li
816.181 324.778 li
814.433 323.384 812.765 321.929 811.173 320.419 cv
812.076 320.423 812.988 320.425 813.901 320.425 cv
839.282 320.425 868.812 319.069 900 316.872 cv
900 354.025 li
709.434 348.616 mo
708.487 346.489 707.617 344.565 706.844 342.874 cv
707.412 342.622 707.983 342.373 708.556 342.128 cv
708.151 342.508 707.751 342.891 707.338 343.267 cv
707.338 343.267 li
707.338 343.267 li
708.218 342.699 709.087 342.122 709.948 341.539 cv
712.153 340.617 714.377 339.732 716.595 338.834 cv
714.34 342.163 711.935 345.418 709.434 348.616 cv
697.142 346.113 mo
665.68 336.437 633.87 328.04 601.938 320.63 cv
648.431 314.372 686.021 313.939 725.676 302.526 cv
724.783 303.714 723.872 304.892 722.95 306.062 cv
722.947 306.063 722.945 306.065 722.942 306.067 cv
717.183 313.379 710.984 320.423 705.663 328.01 cv
705.662 328.013 705.661 328.013 705.66 328.016 cv
705.617 328.076 705.574 328.138 705.531 328.199 cv
705.523 328.21 705.515 328.221 705.507 328.233 cv
705.497 328.247 705.488 328.261 705.478 328.275 cv
705.467 328.291 705.458 328.304 705.447 328.32 cv
705.439 328.331 705.431 328.343 705.423 328.354 cv
705.407 328.377 705.391 328.399 705.376 328.422 cv
705.367 328.434 705.359 328.446 705.351 328.458 cv
705.337 328.478 705.323 328.498 705.309 328.517 cv
705.303 328.527 705.297 328.535 705.29 328.545 cv
705.278 328.563 705.264 328.583 705.251 328.601 cv
705.245 328.611 705.238 328.621 705.231 328.631 cv
705.212 328.658 705.193 328.685 705.174 328.712 cv
705.174 328.712 li
705.174 328.712 li
710.646 324.908 716.337 321.429 722.085 317.992 cv
717.491 325.842 710.981 332.443 705.34 339.616 cv
703.779 336.267 702.872 334.423 702.872 334.423 cv
702.872 334.423 700.637 338.697 697.142 346.113 cv
f
693.493 354.025 mo
471.323 354.025 li
523.786 333.981 565.591 325.523 601.938 320.63 cv
633.87 328.04 665.68 336.437 697.142 346.113 cv
696.04 348.451 694.815 351.098 693.493 354.025 cv
f
88.902 350.673 mo
88.6821 350.435 li
89.0739 350.611 89.4896 350.793 89.9102 350.978 cv
90.1306 351.106 li
89.7365 350.968 89.3206 350.821 88.902 350.673 cv
87.4445 341.618 mo
87.4069 341.544 87.3442 341.456 87.2647 341.36 cv
87.5812 341.586 87.9039 341.813 88.2279 342.036 cv
88.8342 342.445 89.4434 342.842 90.0258 343.21 cv
89.1437 342.692 88.2828 342.161 87.4445 341.618 cv
97.0619 356.193 mo
96.4855 355.771 95.7544 355.186 95.0801 354.56 cv
94.4055 353.93 93.7735 353.283 93.3144 352.773 cv
93.0828 352.526 92.8944 352.307 92.7621 352.158 cv
92.7543 352.149 li
92.8897 352.202 93.0217 352.253 93.1461 352.3 cv
93.9162 352.596 94.4294 352.794 94.4294 352.794 cv
94.4294 352.794 94.0741 352.398 93.5408 351.804 cv
93.0113 351.227 92.3422 350.43 91.6701 349.647 cv
91.3848 349.141 91.0413 348.532 90.697 347.921 cv
89.9292 346.499 89.1636 345.081 89.1077 344.978 cv
89.3316 345.046 89.556 345.114 89.7811 345.18 cv
89.3598 344.922 88.9387 344.664 88.5174 344.406 cv
89.3445 344.414 90.161 344.379 90.9739 344.281 cv
91.794 344.615 92.629 344.935 93.4712 345.248 cv
93.5895 345.314 93.6539 345.351 93.6539 345.351 cv
93.6068 345.298 li
93.8704 345.395 94.1309 345.496 94.3967 345.591 cv
94.0642 345.424 93.7384 345.253 93.4126 345.082 cv
93.299 344.955 li
93.0762 344.701 92.7455 344.352 92.3742 343.911 cv
91.6167 343.044 90.654 341.858 89.7462 340.656 cv
88.8506 339.441 88.012 338.212 87.4334 337.269 cv
87.132 336.806 86.915 336.401 86.7485 336.129 cv
86.587 335.854 86.4946 335.696 86.4946 335.696 cv
86.4946 335.696 86.3547 335.574 86.1102 335.358 cv
85.8703 335.14 85.5037 334.841 85.102 334.454 cv
84.9283 334.292 li
86.6719 334.813 88.4234 335.312 90.172 335.817 cv
89.1 334.773 88.0206 333.735 86.9499 332.69 cv
87.0639 332.711 li
88.3351 332.917 89.5982 333.043 90.5418 333.079 cv
91.0099 333.11 91.406 333.095 91.6764 333.103 cv
91.9479 333.104 92.1029 333.106 92.1029 333.106 cv
92.1029 333.106 91.9621 333.044 91.7154 332.937 cv
91.4714 332.824 91.1176 332.69 90.7121 332.483 cv
89.8927 332.095 88.8486 331.513 87.8649 330.883 cv
87.3039 330.512 86.7634 330.13 86.2772 329.767 cv
86.6638 329.747 87.05 329.723 87.4357 329.694 cv
86.879 329.395 85.537 328.752 84.666 328.161 cv
85.0139 328.226 85.3669 328.291 85.7231 328.349 cv
86.753 328.484 87.7547 328.628 88.5192 328.678 cv
89.2733 328.741 89.7762 328.784 89.7762 328.784 cv
89.7762 328.784 89.3675 328.51 88.754 328.101 cv
88.1373 327.708 87.3609 327.115 86.5969 326.55 cv
86.2226 326.253 85.861 325.946 85.5222 325.667 cv
85.3541 325.524 85.1883 325.395 85.0402 325.26 cv
84.8942 325.123 84.7564 324.994 84.6288 324.875 cv
84.1287 324.405 83.7952 324.091 83.7952 324.091 cv
83.7952 324.091 83.3532 323.971 82.6887 323.791 cv
82.7196 323.79 li
83.7091 323.777 84.6982 323.763 85.4404 323.752 cv
85.6977 323.75 85.9223 323.748 86.1098 323.746 cv
86.5072 323.84 86.8837 323.925 87.2316 323.998 cv
87.9131 324.156 88.4912 324.255 88.8896 324.338 cv
89.2893 324.417 89.5177 324.462 89.5177 324.462 cv
89.5177 324.462 89.312 324.359 88.952 324.179 cv
88.5942 323.995 88.0758 323.752 87.4731 323.423 cv
86.2546 322.794 84.6773 321.887 83.1607 320.935 cv
81.651 319.967 80.2207 318.934 79.2069 318.117 cv
78.9464 317.92 78.7211 317.726 78.5231 317.554 cv
78.3243 317.383 78.1511 317.235 78.0085 317.112 cv
77.8404 316.968 77.716 316.861 77.6419 316.797 cv
77.4686 316.562 li
78.1101 317.06 78.829 317.594 79.5333 318.132 cv
80.7353 318.964 81.8977 319.807 82.8295 320.374 cv
83.7405 320.954 84.3474 321.341 84.3474 321.341 cv
84.3474 321.341 83.9286 320.78 83.3 319.939 cv
82.6563 319.117 81.8959 317.949 81.1202 316.82 cv
80.3976 315.645 79.659 314.506 79.1796 313.605 cv
78.9318 313.162 78.7247 312.794 78.5803 312.536 cv
78.4359 312.279 78.3554 312.131 78.3554 312.131 cv
78.2358 312.026 li
78.1556 311.847 78.0736 311.668 77.994 311.488 cv
81.8659 314.931 86.089 317.826 90.9541 319.971 cv
86.3281 316.282 82.7338 311.825 79.8215 306.882 cv
82.444 308.932 85.3856 310.577 88.6084 311.688 cv
80.8117 307.19 76.211 299.342 73.4701 291.468 cv
73.825 292.086 74.1807 292.704 74.5358 293.321 cv
74.2871 292.743 74.0383 292.166 73.7894 291.588 cv
77.1913 295.596 80.8978 299.359 84.6996 303.045 cv
81.4484 297.929 78.3363 292.739 75.757 287.301 cv
77.6498 289.581 79.7438 291.672 81.963 293.681 cv
79.265 290.353 76.9457 286.857 74.9912 283.109 cv
77.2102 285.752 79.5444 288.31 81.963 290.8 cv
79.4135 287.315 77.0072 283.742 74.8098 280.058 cv
72.7778 276.652 70.1185 272.965 70.3348 268.945 cv
70.9981 270.047 75.1739 274.584 76.781 275.52 cv
74.7314 272.113 72.883 268.597 71.2425 264.986 cv
70.5245 263.406 69.4615 261.537 68.5531 259.614 cv
65.7336 254.738 63.64 249.445 61.8646 244.043 cv
59.8441 250.106 57.3793 255.982 54.124 261.34 cv
53.0324 264.082 51.832 266.82 50.3849 269.418 cv
50.0111 270.089 49.6254 270.75 49.2349 271.408 cv
48.9686 271.681 48.7072 271.918 48.4756 272.138 cv
48.3404 272.264 48.2138 272.382 48.0969 272.492 cv
47.975 272.595 47.8632 272.69 47.7623 272.776 cv
47.3536 273.123 47.1211 273.32 47.1211 273.32 cv
47.1211 273.32 47.4221 273.232 47.9518 273.077 cv
48.0852 273.037 48.2334 272.994 48.3947 272.946 cv
48.5531 272.891 48.7244 272.833 48.9075 272.77 cv
49.2732 272.641 49.6979 272.503 50.1411 272.318 cv
50.6647 272.116 51.2394 271.87 51.8417 271.596 cv
49.2347 277.214 44.5947 281.754 39.7455 286.119 cv
42.5472 284.91 45.3373 283.661 47.9804 282.175 cv
45.3716 284.557 42.2831 286.482 38.9634 287.919 cv
41.9224 288.009 44.8658 287.725 47.749 287.107 cv
46.358 289.401 44.8349 292.482 42.3854 293.926 cv
40.6215 294.966 38.8084 295.936 37.0091 296.923 cv
38.0672 296.946 39.1252 296.974 40.1835 296.993 cv
37.4203 299.878 34.2863 302.426 30.7547 304.486 cv
33.1316 303.597 35.4068 302.512 37.5686 301.24 cv
39.2392 300.257 42.3906 297.041 44.2225 296.988 cv
41.7746 301.064 39.0745 304.961 36.2273 308.807 cv
39.0578 306.93 41.846 305.018 44.5389 302.974 cv
40.3162 309.745 34.5191 315.552 29.9729 322.132 cv
32.9784 320.042 36.105 318.131 39.2629 316.243 cv
36.0388 321.752 31.0978 326.14 27.6276 331.496 cv
28.9923 330.763 30.4016 330.114 31.8305 329.502 cv
31.6083 329.711 31.3882 329.921 31.1613 330.128 cv
31.6451 329.816 32.1223 329.499 32.5952 329.178 cv
33.8064 328.672 35.0285 328.186 36.2467 327.692 cv
34.4814 330.298 32.5501 332.82 30.5363 335.289 cv
28.6438 336.536 26.5825 337.41 24.4013 337.594 cv
24.3979 337.594 li
23.6611 337.654 25.8504 338.026 26.0041 338.045 cv
27.4438 338.219 28.9177 338.124 30.3439 337.898 cv
28.6136 338.712 26.774 339.341 24.8911 339.779 cv
27.31 340.309 29.7935 340.495 32.2721 340.422 cv
29.9873 342.362 27.2897 343.991 24.1063 345.143 cv
27.5932 344.542 30.8049 343.428 33.6881 341.91 cv
30.5172 345.953 26.6158 349.456 21.6365 352.115 cv
26.7866 350.876 31.3299 348.895 35.5431 346.372 cv
35.7447 346.312 li
35.519 346.702 35.2887 347.089 35.0612 347.478 cv
34.9206 347.584 li
33.8024 348.441 32.6157 349.228 31.4923 349.957 cv
30.3586 350.669 29.2803 351.316 28.336 351.837 cv
27.866 352.102 27.4314 352.339 27.0425 352.542 cv
26.6546 352.747 26.3164 352.929 26.0336 353.068 cv
25.4685 353.352 25.1475 353.514 25.1475 353.514 cv
25.1475 353.514 25.5107 353.472 26.1496 353.399 cv
26.4712 353.365 26.8578 353.31 27.305 353.249 cv
27.7536 353.191 28.2583 353.115 28.8096 353.025 cv
29.917 352.853 31.2053 352.606 32.6008 352.307 cv
33.4586 352.11 34.3602 351.893 35.2759 351.648 cv
34.8201 352.43 34.349 353.165 33.8819 353.824 cv
35.4189 353.164 36.9364 352.452 38.3991 351.657 cv
37.8234 352.469 37.2144 353.241 36.5971 353.942 cv
35.8714 354.757 35.129 355.464 34.4364 356.019 cv
33.7458 356.576 33.103 356.973 32.631 357.223 cv
32.3969 357.355 32.2034 357.439 32.0718 357.501 cv
31.9393 357.563 31.8688 357.596 31.8688 357.596 cv
31.8688 357.596 31.9474 357.594 32.095 357.59 cv
32.2433 357.585 32.4641 357.585 32.743 357.556 cv
33.1873 357.521 33.7909 357.441 34.4986 357.281 cv
33.8332 357.78 33.1276 358.261 32.4282 358.652 cv
88.0958 358.652 li
87.9541 358.414 li
88.0949 358.492 88.2351 358.573 88.3761 358.652 cv
91.9612 358.652 li
91.6541 358.346 91.3533 358.036 91.044 357.732 cv
91.5106 358.033 91.9709 358.344 92.4332 358.652 cv
92.9669 358.652 li
92.3507 357.58 91.7248 356.512 91.0588 355.466 cv
91.1478 355.495 91.2413 355.524 91.3411 355.554 cv
92.0693 355.786 93.0674 356.063 94.061 356.292 cv
95.0596 356.52 96.0638 356.677 96.8091 356.764 cv
97.1806 356.811 97.4956 356.827 97.7103 356.848 cv
97.9257 356.865 98.0487 356.875 98.0487 356.875 cv
98.0487 356.875 97.9487 356.807 97.7734 356.689 cv
97.5999 356.567 97.348 356.408 97.0619 356.193 cv
.00784314 .286275 .858824 rgb
f
61.159 276.035 mo
61.0256 275.493 61.0319 275.888 61.159 276.035 cv
cp
.0941176 .454902 .937255 rgb
f
45.1078 338.522 mo
45.5018 335.147 45.8959 331.772 46.2902 328.398 cv
46.1061 328.846 45.9229 329.294 45.7427 329.744 cv
46.127 328.537 46.3985 327.468 46.5434 326.227 cv
46.3456 326.399 46.1293 326.549 45.9148 326.703 cv
46.3875 325.639 46.6202 324.52 46.7525 323.379 cv
45.4624 325.545 43.8469 327.565 42.3696 329.622 cv
42.5819 328.81 42.7941 327.998 43.0063 327.185 cv
41.3873 328.792 39.7682 330.398 38.1492 332.004 cv
38.6728 330.729 39.1964 329.452 39.7198 328.177 cv
40.1121 327.221 40.1839 326.159 40.3642 325.153 cv
40.7213 323.16 41.6207 321.283 42.6494 319.516 cv
41.1989 320.992 39.6874 322.415 38.1593 323.822 cv
39.428 322.481 40.6798 321.126 41.8866 319.737 cv
40.7129 320.526 39.5211 321.292 38.3317 322.061 cv
38.7906 321.184 39.2496 320.308 39.7085 319.431 cv
40.1037 318.639 40.4313 317.451 41.0338 316.774 cv
41.6405 316.092 42.8484 315.566 43.6183 315.054 cv
44.4988 314.508 45.3792 313.963 46.2595 313.417 cv
45.7339 314.372 45.1814 315.318 44.6912 316.288 cv
45.2204 315.586 45.737 314.871 46.2239 314.142 cv
46.2323 314.141 46.2405 314.141 46.2487 314.141 cv
46.3661 314.141 46.4647 314.229 46.5569 314.316 cv
46.6492 314.404 46.7354 314.492 46.8281 314.492 cv
46.8783 314.492 46.9305 314.466 46.9866 314.401 cv
47.5424 313.749 48.098 313.098 48.6538 312.447 cv
48.3323 313.99 48.011 315.533 47.6898 317.076 cv
48.8233 315.992 49.2824 314.099 49.9602 312.723 cv
50.4311 311.766 50.9022 310.81 51.3731 309.853 cv
51.0944 312.652 50.844 315.417 50.0913 318.153 cv
51.0592 317.234 51.5454 316.173 52.1193 315.018 cv
51.8462 316.428 51.4826 317.818 51.3336 319.241 cv
51.8063 318.438 52.2461 317.619 52.6363 316.779 cv
52.3685 318.397 51.9282 319.987 51.4179 321.553 cv
51.7667 321.028 52.1152 320.504 52.464 319.98 cv
52.4624 320.449 52.4608 320.919 52.459 321.388 cv
53.1638 319.99 53.7099 318.575 54.1873 317.099 cv
54.3624 318.267 54.4809 319.42 54.5557 320.598 cv
54.5438 321.69 54.7637 323.135 54.4097 324.192 cv
54.035 325.31 52.863 326.574 52.1051 327.486 cv
51.4035 328.33 50.6555 329.119 49.8788 329.904 cv
50.0293 329.472 50.1805 329.041 50.3299 328.609 cv
50.007 329.094 49.6844 329.579 49.3618 330.064 cv
49.3651 329.103 49.3685 328.141 49.3719 327.18 cv
47.9475 330.96 46.529 334.741 45.1078 338.522 cv
.0117647 .372549 .898039 rgb
f
52.886 288.364 mo
53.0218 287.397 53.1577 286.429 53.2938 285.462 cv
52.7896 285.661 52.281 285.852 51.7746 286.046 cv
51.8144 285.395 51.8554 284.745 51.887 284.094 cv
50.4995 284.91 49.1119 285.726 47.7245 286.541 cv
48.9772 284.941 50.2003 283.316 51.4977 281.747 cv
50.2515 282.42 49.0051 283.092 47.7589 283.765 cv
48.7683 281.538 49.5551 279.24 51.3059 277.417 cv
51.1759 277.52 51.0401 277.617 50.913 277.722 cv
53.4704 274.828 56.1858 271.957 58.296 268.762 cv
57.1877 271.845 56.2444 274.918 54.8018 277.889 cv
56.2919 276.595 57.7821 275.3 59.2725 274.006 cv
58.6739 275.57 58.075 277.134 57.4764 278.698 cv
57.2416 279.312 57.6541 280.284 57.8639 280.899 cv
58.1827 281.835 58.682 282.709 59.0129 283.645 cv
58.5382 282.891 57.9858 282.211 57.4509 281.497 cv
56.8629 280.418 li
56.4785 281.033 56.3519 281.754 56.1313 282.422 cv
55.9835 282.993 55.5957 283.533 55.3033 284.054 cv
54.4976 285.491 53.6917 286.928 52.886 288.364 cv
f
44.1175 295.054 mo
44.1171 295.054 44.1267 295.051 44.1531 295.044 cv
44.1541 295.044 44.1551 295.044 44.1561 295.044 cv
44.1561 295.044 li
44.184 295.036 44.1944 295.034 44.1946 295.034 cv
44.1948 295.034 44.1759 295.039 44.1567 295.044 cv
44.1375 295.049 44.1179 295.054 44.1175 295.054 cv
f
56.3701 315.711 mo
55.8625 313.876 55.3549 312.042 54.8473 310.207 cv
54.3205 308.304 54.4694 306.362 54.284 304.425 cv
54.4372 302.036 55.1235 299.62 54.7486 297.239 cv
53.9823 300.004 52.4014 302.635 51.1509 305.231 cv
51.3438 303.65 51.5369 302.068 51.7295 300.487 cv
49.6486 304.089 47.2903 307.568 45.0679 311.096 cv
46.3943 307.143 47.5397 303.092 49.0925 299.21 cv
48.2003 300.232 47.1975 301.163 46.2185 302.113 cv
46.5792 301.248 46.9043 300.36 47.3284 299.519 cv
48.2312 297.731 49.6396 296.224 50.6836 294.512 cv
49.5183 295.102 48.3357 295.633 47.1213 296.13 cv
47.4334 295.503 47.7839 294.876 48.0428 294.228 cv
47.699 294.562 47.3331 294.876 46.949 295.169 cv
47.2182 294.633 47.446 294.078 47.6168 293.507 cv
46.5592 294.186 45.3991 294.731 44.1561 295.044 cv
44.1561 295.044 li
44.1551 295.044 44.1541 295.044 44.1531 295.044 cv
43.942 295.1 43.7189 295.136 43.502 295.169 cv
44.7351 294.363 45.683 293.219 46.3848 291.989 cv
46.9028 291.082 47.097 290.25 47.8245 289.48 cv
48.7906 288.456 49.7569 287.432 50.7233 286.408 cv
50.5563 288.138 50.6293 290.142 49.8727 291.752 cv
50.8044 291.253 51.7193 290.729 52.6363 290.207 cv
52.3099 291.19 51.985 292.172 51.6306 293.147 cv
52.8912 291.104 54.3162 289.144 55.6802 287.159 cv
55.4984 287.883 55.3164 288.606 55.1345 289.329 cv
55.2769 289.147 55.4193 288.964 55.5619 288.781 cv
55.5534 288.976 55.545 289.171 55.5367 289.366 cv
55.7733 288.844 56.0101 288.322 56.2466 287.8 cv
56.2201 290.181 56.1637 292.558 56.367 294.934 cv
56.5242 294.519 56.6815 294.105 56.839 293.69 cv
57.9835 298.718 58.8458 303.838 60.3916 308.775 cv
59.3457 306.68 58.4603 304.52 57.6086 302.352 cv
57.7264 302.84 57.8497 303.327 57.979 303.813 cv
57.733 303.153 57.5014 302.489 57.2774 301.822 cv
57.3711 303.983 57.3975 306.05 57.2224 308.214 cv
57.1521 309.084 57.049 309.951 56.9467 310.818 cv
56.7545 312.449 56.5623 314.08 56.3701 315.711 cv
55.3734 294.39 mo
55.2418 295.08 55.1097 295.77 54.9487 296.454 cv
54.8243 296.983 55.1179 297.496 55.2492 298.022 cv
55.3664 297.624 55.4959 297.23 55.6433 296.841 cv
56.0191 296.234 55.4851 295.047 55.3734 294.39 cv
f
37.9072 343.876 mo
37.9113 343.783 37.9157 343.689 37.9165 343.689 cv
37.9169 343.689 37.9164 343.713 37.9144 343.774 cv
37.9072 343.876 li
f
37.6425 347.031 mo
37.7477 345.981 37.8534 344.93 37.9072 343.876 cv
37.9032 343.968 37.8995 344.058 37.9 344.058 cv
37.9004 344.058 37.9043 343.985 37.9144 343.774 cv
37.9352 343.157 37.9563 342.542 37.937 341.924 cv
37.3942 342.363 36.8481 342.799 36.2636 343.19 cv
37.1666 341.622 37.7121 339.907 38.771 338.413 cv
39.2604 337.723 39.75 337.032 40.2396 336.342 cv
40.4579 337.611 40.6767 338.879 40.895 340.147 cv
41.1138 341.417 40.3959 342.517 39.7655 343.624 cv
39.1043 344.785 38.3777 345.909 37.6425 347.031 cv
f
61.8488 350.548 mo
61.8488 350.548 li
61.8485 350.548 61.8481 350.548 61.8476 350.547 cv
61.8474 350.547 61.8471 350.547 61.8468 350.547 cv
61.8418 350.544 61.8284 350.531 61.8043 350.507 cv
61.8043 350.507 61.8042 350.507 61.8042 350.507 cv
61.7948 350.498 61.7836 350.487 61.7707 350.473 cv
61.7707 350.473 li
61.7707 350.473 li
61.7602 350.461 61.7502 350.449 61.7406 350.437 cv
61.7377 350.434 61.7349 350.43 61.7321 350.427 cv
61.5902 350.257 61.5431 350.197 61.5469 350.197 cv
61.5515 350.197 61.6304 350.285 61.7065 350.372 cv
61.7065 350.372 li
61.7121 350.379 61.7177 350.385 61.7232 350.392 cv
61.7929 350.473 61.8552 350.548 61.8488 350.548 cv
61.8488 350.548 li
f
59.502 354.025 mo
58.3001 354.025 li
58.0579 353.291 57.8158 352.557 57.5737 351.824 cv
57.2643 350.886 56.9548 349.952 56.7243 348.994 cv
56.5001 348.061 56.5709 346.592 56.0394 345.796 cv
55.5232 345.024 55.0298 344.239 54.5796 343.432 cv
54.3397 344.189 54.1903 344.978 54.015 345.751 cv
53.6552 345.12 53.3012 344.486 52.9538 343.849 cv
52.9011 345.912 52.9513 347.98 52.9153 350.045 cv
51.8523 347.947 50.8312 345.98 50.5509 343.63 cv
49.5276 346.621 47.4753 349.365 45.8229 352.083 cv
45.9952 350.213 46.1676 348.344 46.34 346.474 cv
45.409 347.908 44.4785 349.342 43.5477 350.776 cv
43.7843 349.138 44.0211 347.5 44.2577 345.862 cv
44.1062 346.057 44.0242 346.132 43.9336 346.132 cv
43.8297 346.132 43.7144 346.033 43.47 345.902 cv
43.1848 345.748 42.8995 345.594 42.6141 345.441 cv
43.1129 344.465 li
43.6868 343.418 44.2604 342.371 44.8342 341.324 cv
43.4387 342.918 41.9469 344.451 40.2276 345.751 cv
44.4834 341.992 47.7977 336.8 49.7065 331.665 cv
49.9228 333.609 49.9789 335.525 49.8193 337.477 cv
50.8157 335.223 52.3196 333.13 53.618 331.019 cv
53.1771 334.267 52.619 337.524 52.3094 340.783 cv
52.6857 339.711 53.0906 338.649 53.4981 337.587 cv
53.616 337.886 53.7338 338.185 53.8516 338.483 cv
53.9656 338.342 54.0839 338.205 54.2006 338.066 cv
54.448 338.542 li
54.7366 337.706 55.1215 336.919 55.5662 336.147 cv
55.6054 337.116 55.7136 338.072 55.9869 339.01 cv
56.1696 338.782 56.0813 338.056 56.0997 337.766 cv
56.1335 337.239 56.1712 336.712 56.211 336.186 cv
56.2807 335.266 56.3566 334.346 56.4278 333.426 cv
56.547 334.955 56.6549 336.485 56.7984 338.013 cv
57.413 337.258 57.8862 336.501 58.3661 335.67 cv
58.5459 336.521 58.7293 337.371 58.905 338.223 cv
59.1245 339.285 59.2029 340.485 59.6402 341.488 cv
60.0777 342.493 60.5766 343.455 61.1015 344.422 cv
61.4199 345.007 61.9498 345.544 62.2053 346.152 cv
62.4986 346.851 62.5324 347.699 62.7514 348.427 cv
63.2566 350.105 63.9325 351.687 64.7003 353.274 cv
63.6813 352.37 62.7152 351.445 61.7707 350.473 cv
61.7707 350.473 li
61.7836 350.487 61.7948 350.498 61.8042 350.507 cv
61.8042 350.507 61.8043 350.507 61.8043 350.507 cv
61.8284 350.531 61.8418 350.544 61.8468 350.547 cv
61.8471 350.547 61.8474 350.547 61.8476 350.547 cv
61.8481 350.548 61.8485 350.548 61.8488 350.548 cv
61.8488 350.548 li
61.8488 350.548 li
61.8552 350.548 61.7929 350.473 61.7232 350.392 cv
61.7177 350.385 61.7121 350.379 61.7065 350.372 cv
61.7065 350.372 li
61.6304 350.285 61.5515 350.197 61.5469 350.197 cv
61.5431 350.197 61.5902 350.257 61.7321 350.427 cv
61.7349 350.43 61.7377 350.434 61.7406 350.437 cv
61.7502 350.449 61.7602 350.461 61.7707 350.473 cv
61.7707 350.473 li
61.1162 349.692 60.4605 348.924 59.8648 348.103 cv
59.9767 350.059 59.7502 352.052 59.502 354.025 cv
f
33.8508 339.668 mo
34.1313 338.933 34.3997 338.197 34.6225 337.445 cv
34.8536 336.665 34.8536 336.678 35.6578 336.397 cv
36.0816 336.25 36.5184 336.286 36.497 335.835 cv
36.4871 335.623 36.9551 335.529 37.1396 335.444 cv
37.7711 335.152 38.3993 334.855 39.0211 334.546 cv
39.0588 334.912 39.449 337.154 39.1804 337.271 cv
38.6663 337.497 38.153 337.723 37.6371 337.945 cv
37.2673 338.104 37.2996 338.325 37.195 338.674 cv
36.0926 339.049 34.983 339.38 33.8508 339.668 cv
f
63.7144 336.509 mo
63.0538 333.888 62.3934 331.267 61.7328 328.645 cv
61.4742 327.619 61.198 326.612 61.0598 325.567 cv
60.634 322.346 61.3194 319.161 61.7705 315.978 cv
61.8858 316.798 61.9838 317.619 62.0888 318.439 cv
62.3238 317.283 62.6377 316.151 62.977 315.018 cv
62.965 316.122 62.9713 317.22 63.0549 318.322 cv
63.1779 317.643 63.3271 316.969 63.4938 316.298 cv
63.7218 317.158 63.9859 318.01 64.2889 318.85 cv
64.4996 318.044 64.7844 317.251 65.0451 316.458 cv
65.4197 317.363 65.7746 318.275 66.2031 319.159 cv
66.2825 319.197 66.3464 319.214 66.3976 319.214 cv
66.7321 319.214 66.5206 318.499 66.5001 318.378 cv
66.4111 317.854 66.3656 317.278 66.5961 316.779 cv
66.4913 317.285 66.6485 317.802 66.8414 318.272 cv
66.756 315.95 66.6706 313.628 66.5855 311.305 cv
67.2954 313.202 68.0056 315.098 68.7155 316.994 cv
69.9669 320.336 71.4726 323.657 74.1792 326.222 cv
73.3856 325.736 72.6363 325.189 71.9326 324.595 cv
71.9326 324.595 li
71.9326 324.595 li
71.9326 324.595 li
72.915 327.451 73.7504 330.355 74.6514 333.233 cv
73.7759 331.863 72.9001 330.494 72.0246 329.124 cv
71.0517 327.602 70.1604 325.829 69.0156 324.417 cv
68.6709 326.89 68.2642 329.356 67.8875 331.824 cv
67.3013 329.273 66.7326 326.717 66.1184 324.172 cv
66.0479 324.482 65.9774 324.792 65.9068 325.102 cv
65.8264 324.947 65.746 324.792 65.6655 324.637 cv
65.7316 325.843 65.9465 327.018 66.4237 328.143 cv
65.5684 327.441 64.8779 326.631 64.2653 325.737 cv
64.628 327.345 64.1605 329.328 64.0598 330.947 cv
63.9449 332.802 63.8295 334.655 63.7144 336.509 cv
f
72.26 324.911 mo
72.2274 324.911 71.974 324.715 71.9326 324.595 cv
71.9326 324.595 li
71.9326 324.595 li
72.2104 324.83 72.281 324.911 72.26 324.911 cv
f
52.8087 268.438 mo
53.5788 267.119 54.1995 265.805 54.6429 264.447 cv
54.8637 263.771 55.2303 263.194 55.4538 262.526 cv
55.6316 261.97 56.2002 261.61 56.5143 261.107 cv
57.6582 259.276 58.7998 257.444 59.943 255.613 cv
59.9079 255.888 59.8727 256.163 59.8376 256.438 cv
60.4605 254.55 60.9898 252.622 61.4257 250.671 cv
61.6267 252.006 61.7934 253.334 61.9131 254.678 cv
62.0559 256.285 63.0121 257.885 63.7279 259.341 cv
63.9512 259.788 63.9064 260.267 63.9354 260.758 cv
63.9728 261.603 64.0711 262.445 64.1434 263.287 cv
64.2716 264.524 64.3998 265.761 64.528 266.998 cv
63.4697 265.178 62.3592 263.376 61.3933 261.512 cv
60.7226 263.536 60.1638 265.565 59.7024 267.638 cv
59.4032 265.663 59.1932 263.698 59.0868 261.705 cv
58.768 263.361 58.3708 265.006 58.1514 266.678 cv
58.0998 266.29 58.0604 265.901 58.025 265.512 cv
56.9469 266.426 55.8307 267.178 54.5321 267.798 cv
54.6551 267.497 54.7887 267.198 54.8964 266.892 cv
54.5165 267.201 54.1308 267.504 53.7313 267.79 cv
53.4321 268.016 53.1183 268.225 52.8087 268.438 cv
f
53.6605 267.844 mo
53.6596 267.844 53.6786 267.829 53.7313 267.79 cv
53.8088 267.734 53.8374 267.714 53.8384 267.714 cv
53.8396 267.714 53.7958 267.747 53.7514 267.779 cv
53.707 267.812 53.6619 267.844 53.6605 267.844 cv
f
64.7019 283.587 mo
64.7008 283.581 li
64.699 283.555 li
64.7019 283.587 li
f
70.5601 289.247 mo
69.8479 288.746 69.1278 288.255 68.4368 287.729 cv
68.5125 288.182 68.5884 288.634 68.6641 289.087 cv
67.9145 288.128 67.1544 287.174 66.4183 286.206 cv
65.8742 285.49 64.7968 284.487 64.7019 283.587 cv
64.7019 283.587 li
64.699 283.555 li
64.5169 281.486 64.4924 279.454 64.8727 277.402 cv
65.1489 278.223 65.4594 278.915 65.9578 279.646 cv
65.9983 277.642 66.0389 275.637 66.0794 273.633 cv
66.7416 275.917 67.1573 278.446 68.1707 280.621 cv
68.6337 281.615 69.0695 282.096 69.9984 282.653 cv
70.4839 282.944 70.7311 282.999 70.88 283.494 cv
71.2328 284.664 71.5857 285.835 71.9387 287.006 cv
71.3239 286.655 70.709 286.304 70.0941 285.953 cv
70.223 287.056 70.3857 288.15 70.5601 289.247 cv
f
64.528 291.968 mo
64.1544 291.477 63.789 290.981 63.4339 290.478 cv
63.1919 290.095 62.491 289.362 62.4468 288.912 cv
62.4031 288.468 62.9251 287.654 63.0824 287.24 cv
63.2838 286.684 63.4774 286.125 63.6662 285.565 cv
64.2637 286.457 64.833 287.363 65.3952 288.274 cv
65.7496 288.848 65.3645 289.461 65.1005 290.067 cv
65.1045 290.052 65.1064 290.044 65.1053 290.044 cv
65.1022 290.044 65.077 290.106 65.0128 290.28 cv
64.963 290.441 64.9461 290.503 64.9473 290.508 cv
64.8008 290.993 64.6598 291.48 64.528 291.968 cv
f
64.9476 290.509 mo
64.9474 290.509 64.9473 290.509 64.9473 290.508 cv
65.0128 290.28 li
65.1005 290.067 li
65.0742 290.16 64.9548 290.509 64.9476 290.509 cv
f
44.8377 354.025 mo
44.3541 354.025 li
44.6969 353.384 45.0396 352.744 45.3824 352.104 cv
45.2008 352.744 45.0193 353.384 44.8377 354.025 cv
f
74.0068 308.135 mo
74.0068 308.135 li
74.0068 308.135 li
74.0068 308.135 li
74.0068 308.135 mo
74.0034 308.131 74 308.127 73.9967 308.123 cv
73.988 308.112 73.9794 308.101 73.9708 308.091 cv
73.9707 308.09 li
73.9574 308.074 73.9441 308.057 73.9308 308.04 cv
73.9273 308.035 73.9238 308.031 73.9202 308.026 cv
73.4359 307.399 72.9598 306.476 73.0108 306.476 cv
73.0415 306.476 73.2625 306.809 73.7868 307.741 cv
73.7886 307.744 73.7904 307.747 73.7921 307.75 cv
73.7959 307.757 73.7996 307.763 73.8033 307.77 cv
73.8039 307.771 73.8044 307.772 73.805 307.773 cv
73.8123 307.786 73.8197 307.799 73.8271 307.813 cv
73.8303 307.818 73.8335 307.824 73.8367 307.83 cv
73.8407 307.837 73.8446 307.844 73.8487 307.851 cv
73.8527 307.858 73.8566 307.865 73.8606 307.872 cv
73.8653 307.881 73.87 307.889 73.8747 307.898 cv
73.8797 307.907 73.8847 307.915 73.8898 307.924 cv
73.8928 307.93 73.8957 307.935 73.8987 307.941 cv
73.9044 307.951 73.9103 307.961 73.9161 307.972 cv
73.9259 307.989 73.9357 308.007 73.9457 308.025 cv
73.9657 308.061 73.9861 308.098 74.0068 308.135 cv
74.0068 308.135 li
f
73.3174 311.656 mo
73.0113 311.369 71.5426 309.808 71.215 309.808 cv
71.1976 309.808 71.1833 309.812 71.1727 309.822 cv
70.8611 309.283 70.3902 308.794 69.9689 308.323 cv
70.0484 308.634 70.1304 308.945 70.2154 309.255 cv
70.1092 309.132 69.9833 309.016 69.8709 308.899 cv
69.9324 309.202 69.9939 309.505 70.0552 309.808 cv
68.3746 308.59 66.3667 307.448 65.2363 305.728 cv
64.957 305.303 64.7222 304.855 64.5232 304.393 cv
64.3412 303.97 63.9636 303.73 63.6069 303.422 cv
63.2667 303.13 62.9921 302.987 62.8947 302.576 cv
62.5365 301.063 62.16 299.556 61.7705 298.051 cv
62.7454 298.86 63.7205 299.667 64.678 300.493 cv
64.4313 299.417 64.2801 298.346 64.1833 297.25 cv
64.6699 298.339 65.2127 299.38 65.8552 300.398 cv
65.9438 299.583 66.1303 298.757 66.5961 298.051 cv
66.5161 299.196 67.0354 300.317 67.6079 301.304 cv
67.3544 298.84 67.4725 296.327 67.4635 293.854 cv
69.4998 298.669 71.4545 303.529 74.0068 308.135 cv
73.9861 308.098 73.9657 308.061 73.9457 308.025 cv
73.9357 308.007 73.9259 307.989 73.9161 307.972 cv
73.9103 307.961 73.9044 307.951 73.8987 307.941 cv
73.8957 307.935 73.8928 307.93 73.8898 307.924 cv
73.8847 307.915 73.8797 307.907 73.8747 307.898 cv
73.87 307.889 73.8653 307.881 73.8606 307.872 cv
73.8566 307.865 73.8527 307.858 73.8487 307.851 cv
73.8446 307.844 73.8407 307.837 73.8367 307.83 cv
73.8335 307.824 73.8303 307.818 73.8271 307.813 cv
73.8197 307.799 73.8123 307.786 73.805 307.773 cv
73.8044 307.772 73.8039 307.771 73.8033 307.77 cv
73.7996 307.763 73.7959 307.757 73.7921 307.75 cv
73.7904 307.747 73.7886 307.744 73.7868 307.741 cv
73.2625 306.809 73.0415 306.476 73.0108 306.476 cv
72.9598 306.476 73.4359 307.399 73.9202 308.026 cv
73.9238 308.031 73.9273 308.035 73.9308 308.04 cv
73.9441 308.057 73.9574 308.074 73.9707 308.09 cv
73.9708 308.091 li
73.9794 308.101 73.988 308.112 73.9967 308.123 cv
74 308.127 74.0034 308.131 74.0068 308.135 cv
74.0068 308.135 li
74.0068 308.135 li
73.1646 307.112 72.3553 306.065 71.5692 305.004 cv
71.9166 306.156 72.3736 307.315 72.9163 308.414 cv
73.12 308.826 73.036 308.741 72.6694 308.954 cv
72.5047 309.049 72.753 309.614 72.7931 309.768 cv
72.9571 310.4 73.1389 311.028 73.3174 311.656 cv
74.0068 308.135 mo
74.0068 308.135 li
74.0068 308.135 li
74.0068 308.135 li
74.0068 308.135 li
74.0068 308.135 li
74.0068 308.135 li
74.0068 308.135 li
f
83.6527 354.025 mo
81.1929 354.025 li
80.462 352.828 79.794 351.609 79.2431 350.356 cv
78.6769 349.296 78.3221 348.233 78.0242 347.081 cv
78.136 348.898 78.4674 350.688 78.8324 352.473 cv
78.1466 351.7 77.467 350.922 76.8191 350.12 cv
76.2348 349.39 75.2629 348.441 74.9598 347.562 cv
74.6564 346.681 74.8974 345.327 74.9695 344.428 cv
75.0671 343.407 75.2699 342.417 75.5578 341.429 cv
76.0278 343.24 76.817 344.911 77.8769 346.492 cv
77.2348 343.732 76.8975 340.89 77.109 338.067 cv
77.1915 339.044 77.3377 340.016 77.5405 340.977 cv
77.816 338.493 78.0916 336.01 78.3669 333.526 cv
79.3398 340.387 li
79.9648 344.794 81.9605 348.75 84.5198 352.473 cv
83.7121 351.611 82.9341 350.723 82.1969 349.808 cv
82.692 351.21 83.1753 352.617 83.6527 354.025 cv
f
815.741 347.555 mo
814.249 346.848 812.349 345.789 810.559 344.642 cv
809.537 343.967 808.553 343.271 807.668 342.611 cv
808.372 342.574 809.075 342.531 809.777 342.478 cv
808.763 341.933 806.321 340.763 804.735 339.688 cv
805.368 339.805 806.011 339.923 806.66 340.029 cv
808.534 340.275 810.358 340.538 811.749 340.628 cv
813.122 340.743 814.038 340.821 814.038 340.821 cv
814.038 340.821 813.294 340.323 812.177 339.578 cv
811.054 338.862 809.641 337.784 808.25 336.755 cv
807.569 336.214 806.91 335.655 806.294 335.147 cv
805.988 334.888 805.686 334.652 805.416 334.406 cv
805.151 334.157 804.9 333.923 804.667 333.706 cv
803.757 332.85 803.15 332.279 803.15 332.279 cv
803.15 332.279 802.345 332.061 801.136 331.732 cv
801.192 331.731 li
802.993 331.706 804.794 331.68 806.145 331.661 cv
806.613 331.657 807.022 331.654 807.363 331.651 cv
808.087 331.822 808.772 331.975 809.406 332.108 cv
810.646 332.397 811.699 332.577 812.424 332.728 cv
813.151 332.871 813.567 332.953 813.567 332.953 cv
813.567 332.953 813.193 332.766 812.537 332.438 cv
811.886 332.103 810.942 331.661 809.845 331.063 cv
807.627 329.918 804.756 328.266 801.995 326.533 cv
799.247 324.771 796.643 322.89 794.798 321.403 cv
794.324 321.046 793.913 320.693 793.553 320.379 cv
793.191 320.068 792.876 319.798 792.616 319.575 cv
792.31 319.312 792.084 319.118 791.949 319.002 cv
791.844 318.861 791.739 318.719 791.633 318.574 cv
792.801 319.479 794.11 320.452 795.392 321.431 cv
797.58 322.946 799.696 324.48 801.392 325.512 cv
803.05 326.568 804.155 327.271 804.155 327.271 cv
804.155 327.271 803.393 326.251 802.248 324.72 cv
801.077 323.223 799.692 321.098 798.28 319.042 cv
796.965 316.904 795.621 314.831 794.748 313.19 cv
794.297 312.384 793.92 311.713 793.657 311.244 cv
793.394 310.775 793.248 310.507 793.248 310.507 cv
793.248 310.507 793.167 310.436 793.03 310.316 cv
792.884 309.989 792.735 309.664 792.59 309.337 cv
799.638 315.604 807.326 320.873 816.181 324.778 cv
807.761 318.064 801.218 309.951 795.917 300.951 cv
800.69 304.683 806.045 307.679 811.912 309.7 cv
797.719 301.512 789.344 287.226 784.355 272.893 cv
785.001 274.018 785.648 275.142 786.295 276.266 cv
785.842 275.215 785.389 274.163 784.936 273.112 cv
791.128 280.407 797.876 287.258 804.796 293.967 cv
798.878 284.654 793.213 275.206 788.518 265.308 cv
791.963 269.458 795.775 273.265 799.815 276.922 cv
794.904 270.863 790.682 264.5 787.124 257.676 cv
791.163 262.488 795.412 267.145 799.815 271.677 cv
795.174 265.333 790.793 258.829 786.793 252.123 cv
783.094 245.923 778.254 239.211 778.647 231.892 cv
779.855 233.9 787.456 242.158 790.382 243.862 cv
786.651 237.659 783.286 231.26 780.3 224.687 cv
778.992 221.809 777.058 218.408 775.404 214.908 cv
770.271 206.032 766.46 196.397 763.229 186.563 cv
759.551 197.599 755.064 208.295 749.138 218.049 cv
747.151 223.04 744.966 228.025 742.331 232.754 cv
741.651 233.976 740.949 235.18 740.238 236.376 cv
739.753 236.873 739.277 237.305 738.856 237.705 cv
738.61 237.935 738.379 238.15 738.166 238.349 cv
737.945 238.538 737.741 238.711 737.557 238.867 cv
736.813 239.499 736.39 239.857 736.39 239.857 cv
736.39 239.857 736.938 239.697 737.902 239.415 cv
738.145 239.343 738.415 239.263 738.709 239.176 cv
738.997 239.077 739.309 238.97 739.642 238.855 cv
740.308 238.62 741.081 238.369 741.887 238.033 cv
742.841 237.665 743.887 237.218 744.983 236.718 cv
740.238 246.945 731.791 255.209 722.964 263.155 cv
728.064 260.956 733.143 258.682 737.954 255.976 cv
733.205 260.312 727.583 263.817 721.54 266.433 cv
726.927 266.596 732.285 266.08 737.533 264.954 cv
735.001 269.131 732.229 274.738 727.77 277.368 cv
724.558 279.262 721.258 281.026 717.983 282.823 cv
719.909 282.866 721.835 282.916 723.761 282.95 cv
718.731 288.202 713.026 292.841 706.598 296.59 cv
710.924 294.972 715.066 292.997 719.002 290.681 cv
722.042 288.891 727.779 283.037 731.114 282.942 cv
726.658 290.361 721.743 297.456 716.56 304.456 cv
721.712 301.04 726.788 297.558 731.69 293.838 cv
724.003 306.164 713.45 316.734 705.174 328.712 cv
710.646 324.908 716.337 321.429 722.085 317.992 cv
716.216 328.02 707.222 336.008 700.905 345.757 cv
703.39 344.423 705.955 343.242 708.556 342.128 cv
708.151 342.508 707.751 342.891 707.338 343.267 cv
708.218 342.699 709.087 342.122 709.948 341.539 cv
712.153 340.617 714.377 339.732 716.595 338.834 cv
713.382 343.578 709.866 348.168 706.2 352.663 cv
702.755 354.932 699.003 356.523 695.032 356.858 cv
695.026 356.859 li
694.734 356.883 694.704 356.935 694.824 357 cv
810.237 357 li
810.082 356.755 809.913 356.496 809.773 356.268 cv
809.224 355.425 808.829 354.688 808.526 354.191 cv
808.232 353.691 808.064 353.404 808.064 353.404 cv
808.064 353.404 807.809 353.18 807.364 352.789 cv
806.927 352.391 806.26 351.846 805.529 351.142 cv
805.427 351.048 805.319 350.946 805.213 350.847 cv
808.387 351.796 811.575 352.705 814.758 353.623 cv
812.807 351.724 810.842 349.834 808.893 347.931 cv
809.1 347.969 li
811.414 348.344 813.714 348.574 815.431 348.64 cv
816.283 348.696 817.004 348.669 817.497 348.683 cv
817.991 348.686 818.273 348.688 818.273 348.688 cv
818.273 348.688 818.017 348.576 817.568 348.381 cv
817.124 348.176 816.479 347.932 815.741 347.555 cv
.00784314 .286275 .858824 rgb
f
804.796 293.967 mo
804.611 293.675 804.426 293.384 804.242 293.092 cv
804.244 293.09 li
804.244 293.09 li
804.428 293.382 804.611 293.675 804.796 293.967 cv
.286274 .717647 1 rgb
f
804.796 293.967 mo
804.796 293.967 li
804.553 293.731 804.315 293.491 804.072 293.255 cv
804.242 293.092 li
804.426 293.384 804.611 293.675 804.796 293.967 cv
804.796 293.967 li
.0431373 .396078 .886274 rgb
f
811.838 309.657 mo
811.831 309.653 811.822 309.648 811.815 309.644 cv
811.822 309.648 811.83 309.652 811.838 309.657 cv
811.762 309.613 mo
811.754 309.608 811.745 309.603 811.737 309.599 cv
811.746 309.604 811.753 309.608 811.762 309.613 cv
811.667 309.558 mo
811.658 309.553 811.651 309.548 811.643 309.543 cv
811.651 309.548 811.659 309.553 811.667 309.558 cv
811.597 309.516 mo
811.584 309.509 811.571 309.501 811.558 309.494 cv
811.571 309.501 811.584 309.509 811.597 309.516 cv
811.529 309.477 mo
806.469 306.496 802.156 302.736 798.479 298.477 cv
798.481 298.476 798.483 298.474 798.484 298.472 cv
798.484 298.472 li
798.484 298.472 li
802.162 302.732 806.469 306.496 811.529 309.477 cv
.286274 .717647 1 rgb
f
808.428 354.025 mo
793.917 354.025 li
793.701 352.501 793.485 350.977 793.269 349.454 cv
793.1 350.977 792.931 352.501 792.762 354.025 cv
766.649 354.025 li
766.841 350.936 767.033 347.848 767.225 344.759 cv
767.408 341.81 768.259 338.203 767.598 335.275 cv
768.714 336.902 769.971 338.377 771.528 339.655 cv
771.528 339.655 li
771.528 339.655 li
770.659 337.607 770.268 335.467 770.148 333.271 cv
770.294 333.554 770.44 333.836 770.587 334.119 cv
770.715 333.554 770.843 332.99 770.972 332.426 cv
772.09 337.06 773.125 341.711 774.193 346.356 cv
774.878 341.862 775.618 337.373 776.246 332.872 cv
778.33 335.442 779.952 338.669 781.723 341.44 cv
783.317 343.933 784.911 346.427 786.505 348.92 cv
786.505 348.92 li
786.505 348.92 li
784.865 343.68 783.344 338.395 781.556 333.196 cv
781.631 333.415 782.092 333.77 782.152 333.77 cv
782.19 333.77 782.062 333.623 781.556 333.196 cv
781.556 333.196 li
782.837 334.277 784.201 335.273 785.646 336.159 cv
780.719 331.489 777.978 325.443 775.7 319.36 cv
775.537 318.926 775.375 318.493 775.213 318.059 cv
783.23 311.854 790.996 305.32 798.479 298.477 cv
802.156 302.736 806.469 306.496 811.529 309.477 cv
811.539 309.483 811.548 309.488 811.558 309.494 cv
811.571 309.501 811.584 309.509 811.597 309.516 cv
811.612 309.525 811.627 309.534 811.643 309.543 cv
811.651 309.548 811.658 309.553 811.667 309.558 cv
811.69 309.571 811.714 309.585 811.737 309.599 cv
811.745 309.603 811.754 309.608 811.762 309.613 cv
811.779 309.623 811.797 309.634 811.815 309.644 cv
811.822 309.648 811.831 309.653 811.838 309.657 cv
811.862 309.671 811.887 309.686 811.912 309.7 cv
806.045 307.679 800.69 304.683 795.917 300.951 cv
795.917 300.951 li
795.917 300.951 li
801.218 309.951 807.761 318.064 816.181 324.778 cv
807.326 320.873 799.638 315.604 792.59 309.337 cv
792.59 309.337 li
792.59 309.337 li
792.735 309.664 792.884 309.989 793.03 310.316 cv
793.167 310.436 793.248 310.507 793.248 310.507 cv
793.248 310.507 793.394 310.775 793.657 311.244 cv
793.92 311.713 794.297 312.384 794.748 313.19 cv
795.621 314.831 796.965 316.904 798.28 319.042 cv
799.692 321.098 801.077 323.223 802.248 324.72 cv
803.393 326.251 804.155 327.271 804.155 327.271 cv
804.155 327.271 803.05 326.568 801.392 325.512 cv
799.696 324.48 797.58 322.946 795.392 321.431 cv
794.11 320.452 792.801 319.479 791.633 318.574 cv
791.633 318.574 li
791.633 318.574 li
791.739 318.719 791.844 318.861 791.949 319.002 cv
792.084 319.118 792.31 319.312 792.616 319.575 cv
792.876 319.798 793.191 320.068 793.553 320.379 cv
793.913 320.693 794.324 321.046 794.798 321.403 cv
796.643 322.89 799.247 324.771 801.995 326.533 cv
804.756 328.266 807.627 329.918 809.845 331.063 cv
810.942 331.661 811.886 332.103 812.537 332.438 cv
813.193 332.766 813.567 332.953 813.567 332.953 cv
813.567 332.953 813.151 332.871 812.424 332.728 cv
811.699 332.577 810.646 332.397 809.406 332.108 cv
808.772 331.975 808.087 331.822 807.363 331.651 cv
807.022 331.654 806.613 331.657 806.145 331.661 cv
804.794 331.68 802.993 331.706 801.192 331.731 cv
801.136 331.732 li
801.136 331.732 li
802.345 332.061 803.15 332.279 803.15 332.279 cv
803.15 332.279 803.757 332.85 804.667 333.706 cv
804.9 333.923 805.151 334.157 805.416 334.406 cv
805.686 334.652 805.988 334.888 806.294 335.147 cv
806.91 335.655 807.569 336.214 808.25 336.755 cv
809.641 337.784 811.054 338.862 812.177 339.578 cv
813.294 340.323 814.038 340.821 814.038 340.821 cv
814.038 340.821 813.122 340.743 811.749 340.628 cv
810.358 340.538 808.534 340.275 806.66 340.029 cv
806.011 339.923 805.368 339.805 804.735 339.688 cv
804.735 339.688 li
804.735 339.688 li
806.321 340.763 808.763 341.933 809.777 342.478 cv
809.075 342.531 808.372 342.574 807.668 342.611 cv
807.668 342.611 li
807.668 342.611 li
808.553 343.271 809.537 343.967 810.559 344.642 cv
812.349 345.789 814.249 346.848 815.741 347.555 cv
816.479 347.932 817.124 348.176 817.568 348.381 cv
818.017 348.576 818.273 348.688 818.273 348.688 cv
818.273 348.688 817.991 348.686 817.497 348.683 cv
817.004 348.669 816.283 348.696 815.431 348.64 cv
813.714 348.574 811.414 348.344 809.1 347.969 cv
808.893 347.931 li
808.893 347.931 li
810.842 349.834 812.807 351.724 814.758 353.623 cv
811.575 352.705 808.387 351.796 805.213 350.847 cv
805.213 350.847 li
805.213 350.847 li
805.319 350.946 805.427 351.048 805.529 351.142 cv
806.26 351.846 806.927 352.391 807.364 352.789 cv
807.809 353.18 808.064 353.404 808.064 353.404 cv
808.064 353.404 808.195 353.628 808.428 354.025 cv
766.379 354.025 mo
757.001 354.025 li
756.954 353.802 756.907 353.579 756.86 353.357 cv
756.729 353.582 756.599 353.805 756.468 354.025 cv
753.701 354.025 li
753.574 352.44 753.455 350.855 753.332 349.271 cv
753.209 350.856 753.079 352.44 752.958 354.025 cv
746.906 354.025 li
747.339 350.976 747.804 347.931 748.217 344.891 cv
746.364 347.903 744.281 350.895 742.593 354.025 cv
741.447 354.025 li
741.524 351.368 741.393 348.731 741.097 346.065 cv
740.106 348.732 738.903 351.405 737.514 354.025 cv
734.425 354.025 li
735.791 350.388 737.157 346.752 738.524 343.116 cv
739.174 342.727 739.826 342.334 740.473 341.94 cv
740.472 342.344 740.471 342.748 740.469 343.152 cv
740.92 342.473 741.371 341.795 741.822 341.117 cv
741.905 341.066 741.989 341.015 742.071 340.964 cv
741.852 341.596 741.631 342.228 741.41 342.86 cv
742.56 341.699 743.675 340.532 744.738 339.31 cv
750.471 335.722 756.106 331.979 761.638 328.084 cv
761.467 330.37 761.459 332.663 761.764 334.966 cv
762.015 336.868 762.518 338.7 762.989 340.568 cv
764.119 345.054 765.249 349.539 766.379 354.025 cv
733.253 354.025 mo
722.006 354.025 li
721.952 353.521 721.882 353.002 721.819 352.55 cv
725.997 350.33 730.138 348.028 734.231 345.649 cv
733.905 348.441 733.579 351.233 733.253 354.025 cv
771.48 323.4 mo
771.387 323.4 771.271 323.37 771.126 323.3 cv
770.873 322.778 770.634 322.251 770.403 321.72 cv
770.784 321.435 771.165 321.149 771.544 320.863 cv
771.564 321.206 771.61 321.548 771.667 321.878 cv
771.704 322.1 772.089 323.4 771.48 323.4 cv
772.288 321.686 mo
772.142 321.331 772.008 320.961 771.914 320.583 cv
772.023 320.501 772.129 320.421 772.239 320.338 cv
772.255 320.787 772.272 321.237 772.288 321.686 cv
.0431373 .396078 .886274 rgb
f
799.815 271.677 mo
799.777 271.626 799.74 271.574 799.702 271.523 cv
799.74 271.574 799.777 271.626 799.815 271.677 cv
799.68 271.538 mo
799.676 271.534 799.672 271.53 799.668 271.526 cv
799.672 271.53 799.676 271.533 799.68 271.538 cv
.286274 .717647 1 rgb
f
796.998 267.759 mo
795.454 265.574 793.943 263.368 792.47 261.142 cv
792.473 261.14 792.476 261.138 792.478 261.136 cv
793.952 263.363 795.459 265.571 797.001 267.758 cv
796.998 267.759 li
level3{
gsave
clp
[3.8096e-009 84.8528 -84.8528 3.8096e-009 450 214 ]ct
/4 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.792157 .964706 1 ]
/C1 [.588235 .913725 1 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.8096e-009 84.8528 -84.8528 3.8096e-009 450 214 ]ct
clp
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~aiVZHaiMQEaN2EBa2c6?`l?$<`Pog8`Pf^5`5KR2_o'C/_SX1,_83t(_8*k%^qd_"^V@Ot^:q=q]tM+m
]Y(ni]Xtef]=YYc]"5J`\[f8]\@B&Y\@8rV\$rfS[^NWP[C*EM['[3I['R*FZa6sCZEgd@Z*CR=Yct@9
YHP.5YHG%2Y-+n/Xf\_,XK8M)X/i;%X/`2"WiE%tWMukqW2QYnVl-GjVl$>gVP^2dV5:#aUnjf^USFTZ
U8"BVU7n9STqS-PTV.sMT:_aJSt;OFSt2FCSXl:@S=H+=S"#n:R[T\6R[KS3R@0G0R$a8-Q^=&*QBmi&
~>
<~p%A"Np%A"Np%A"Np%A"Np%A"No^qeJo^qeJo^qeJo^qeJo^qeJoCMSFoCMSFoCMSFoCMSFoCMSFo()AB
o()ABo()ABo()ABo()AAnaZ/>naZ/>naZ/>naZ/>naZ/=nF5r:nF5r:nF5r:nF5r:nF5r9n*f`6n*f`6
n*f`6n*f`6n*f]4mdBN2mdBN2mdBN2mdBN2mdBK0mHs<.mHs<.mHs<.mHs<.mHs9,m-O**m-O**m-O**
m-O**m-F!'lg*m&lg*m&lg*m&lg*m&lg!d#lK[["lK[["lK[["lK[["lKRQtl07Hsl07Hsl07Hsl07Hs
~>
255 ]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /4 /Gradient get_res exec grestore
}if
np
799.675 271.485 mo
798.772 270.249 797.88 269.008 796.998 267.759 cv
797.001 267.758 li
797.881 269.007 798.772 270.25 799.675 271.485 cv
.286274 .717647 1 rgb
f
799.815 271.677 mo
799.815 271.677 li
799.77 271.631 799.725 271.584 799.68 271.538 cv
799.676 271.533 799.672 271.53 799.668 271.526 cv
796.708 268.474 793.824 265.361 791.021 262.187 cv
791.504 261.839 791.987 261.491 792.47 261.142 cv
793.943 263.368 795.454 265.574 796.998 267.759 cv
797.88 269.008 798.772 270.249 799.675 271.485 cv
799.684 271.498 799.693 271.51 799.702 271.523 cv
799.74 271.574 799.777 271.626 799.815 271.677 cv
799.815 271.677 li
.0431373 .396078 .886274 rgb
f
790.382 243.862 mo
790.37 243.856 790.359 243.849 790.347 243.842 cv
790.359 243.849 790.37 243.856 790.382 243.862 cv
790.382 243.862 li
790.382 243.862 mo
790.149 243.475 789.917 243.087 789.687 242.698 cv
789.691 242.696 789.695 242.693 789.7 242.691 cv
789.7 242.691 li
789.7 242.691 li
789.93 243.08 790.148 243.475 790.382 243.862 cv
790.342 243.839 mo
790.339 243.837 790.335 243.835 790.332 243.833 cv
790.335 243.835 790.339 243.837 790.342 243.839 cv
.298039 .803922 1 rgb
f
790.382 243.862 mo
790.37 243.856 790.359 243.849 790.347 243.842 cv
790.346 243.841 790.344 243.84 790.342 243.839 cv
790.339 243.837 790.335 243.835 790.332 243.833 cv
789.994 243.631 789.595 243.342 789.155 242.993 cv
789.333 242.895 789.51 242.796 789.687 242.698 cv
789.917 243.087 790.149 243.475 790.382 243.862 cv
790.382 243.862 li
.0431373 .396078 .886274 rgb
f
735.79 267.907 mo
736.292 267.057 736.775 266.221 737.248 265.429 cv
736.775 266.221 736.293 267.056 735.791 267.907 cv
735.79 267.907 735.79 267.907 735.79 267.907 cv
level3{
gsave
clp
[3.8096e-009 84.8528 -84.8528 3.8096e-009 450 214 ]ct
/5 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.866667 .984314 1 ]
/C1 [.635294 .921569 1 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.8096e-009 84.8528 -84.8528 3.8096e-009 450 214 ]ct
clp
/5 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~gt^]?gtUT<gY1B8g=k65g"G$1f\"g-f@SX*f%/F&e^`4"eC<!te'ldpdaHRldF$@hdEp7ed*L%acd'h]
cHa\Zc-=JVbfn8RbKJ)Ob0%lKaiVZGaN2HDa2c6@`l?$<`Pog8`Pf^5`5BL1_ns:-_SX.*_83q&^qd_"
^V@Ot^:q=p]tM+l]Y(ni]=Y\e]"5Ja\[f8]\[]/Z\@8rV\$i`R[^NTO[C*BK['[0GZa7!DZEgd@Z*CR<
Yct@9YHP.5Y-+q1Xf\_-XfSV*XK/D&X/`2"WiE%tWMuhpW2QVlVl-GiVP^5eV5:#aUnjf^USFTZU8"BV
~>
<~qYL'bqYL'bqYL'bqYL'bq>'j^q>'j^q>'j^q>'j^q"XXZq"XXZq"XXZq"XXZp\4FVp\4FVp\4FVp\4FV
p@e4Rp@e4Rp@e4Rp@e4Rp%A"Np%A"Np%A"Np%A"No^qeJo^qeJo^qeJo^qeJoCMSFoCMSFoCMSFoCMSF
o()ABo()ABo()ABo()ABnaZ/>naZ/>naZ/>naZ/>nF5r:nF5r:nF5r:nF5r:n*f`6n*f`6n*f`6n*f`6
mdBN2mdBN2mdBN2mdBN2mHs<.mHs<.mHs<.mHs<.m-O**m-O**m-O**m-O**lg*m&lg*m&lg*m&lg*m&
~>
255 ]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /5 /Gradient get_res exec grestore
}if
np
722.964 263.155 mo
722.994 263.129 723.024 263.102 723.053 263.075 cv
723.024 263.102 722.994 263.129 722.964 263.155 cv
723.058 263.071 mo
726.269 260.178 729.429 257.241 732.374 254.182 cv
732.38 254.182 li
729.431 257.241 726.27 260.177 723.058 263.071 cv
level3{
gsave
clp
[3.8096e-009 84.8528 -84.8528 3.8096e-009 450 214 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.8096e-009 84.8528 -84.8528 3.8096e-009 450 214 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
732.374 254.182 mo
736.673 249.718 740.518 244.995 743.419 239.766 cv
743.424 239.765 743.428 239.764 743.433 239.763 cv
740.533 244.994 736.682 249.718 732.38 254.182 cv
732.374 254.182 li
783.21 246.2 mo
781.08 242.534 779.213 238.698 778.74 234.674 cv
779.213 238.698 781.08 242.534 783.21 246.2 cv
783.21 246.2 li
789.687 242.698 mo
787.044 238.232 784.59 233.665 782.329 229.006 cv
782.33 229.005 782.333 229.005 782.334 229.004 cv
784.599 233.661 787.057 238.225 789.7 242.691 cv
789.695 242.693 789.691 242.696 789.687 242.698 cv
778.74 234.671 mo
778.737 234.644 778.734 234.617 778.731 234.59 cv
778.734 234.617 778.737 234.644 778.74 234.671 cv
778.73 234.582 mo
778.729 234.573 778.728 234.566 778.727 234.557 cv
778.728 234.565 778.729 234.574 778.73 234.582 cv
778.727 234.555 mo
778.725 234.538 778.723 234.52 778.721 234.503 cv
778.723 234.52 778.725 234.538 778.727 234.555 cv
778.72 234.497 mo
778.719 234.488 778.718 234.479 778.717 234.47 cv
778.718 234.479 778.719 234.488 778.72 234.497 cv
778.717 234.466 mo
778.715 234.451 778.714 234.435 778.712 234.42 cv
778.714 234.435 778.715 234.451 778.717 234.466 cv
778.711 234.409 mo
778.71 234.402 778.71 234.394 778.709 234.387 cv
778.71 234.394 778.71 234.402 778.711 234.409 cv
778.708 234.373 mo
778.706 234.361 778.705 234.348 778.704 234.336 cv
778.705 234.349 778.706 234.361 778.708 234.373 cv
778.703 234.323 mo
778.702 234.316 778.701 234.309 778.701 234.302 cv
778.701 234.309 778.702 234.316 778.703 234.323 cv
778.699 234.286 mo
778.698 234.279 778.698 234.273 778.697 234.267 cv
778.698 234.273 778.698 234.28 778.699 234.286 cv
778.694 234.237 mo
778.694 234.23 778.693 234.224 778.693 234.217 cv
778.693 234.224 778.694 234.23 778.694 234.237 cv
778.691 234.2 mo
778.69 234.194 778.69 234.188 778.689 234.181 cv
778.69 234.188 778.69 234.193 778.691 234.2 cv
778.687 234.155 mo
778.686 234.147 778.686 234.14 778.685 234.133 cv
778.686 234.14 778.686 234.148 778.687 234.155 cv
778.684 234.114 mo
778.683 234.108 778.683 234.103 778.682 234.096 cv
778.683 234.102 778.683 234.108 778.684 234.114 cv
778.68 234.072 mo
778.68 234.065 778.679 234.058 778.678 234.05 cv
778.679 234.058 778.68 234.065 778.68 234.072 cv
778.677 234.027 mo
778.676 234.022 778.676 234.016 778.675 234.011 cv
778.676 234.017 778.676 234.022 778.677 234.027 cv
778.673 233.986 mo
778.673 233.982 778.673 233.978 778.672 233.974 cv
778.673 233.978 778.673 233.982 778.673 233.986 cv
778.67 233.94 mo
778.669 233.936 778.669 233.932 778.669 233.928 cv
778.669 233.932 778.669 233.936 778.67 233.94 cv
778.667 233.9 mo
778.667 233.897 778.666 233.894 778.666 233.89 cv
778.666 233.893 778.667 233.897 778.667 233.9 cv
778.664 233.854 mo
778.663 233.851 778.663 233.847 778.663 233.844 cv
778.663 233.847 778.663 233.851 778.664 233.854 cv
778.661 233.815 mo
778.661 233.812 778.661 233.808 778.66 233.805 cv
778.661 233.808 778.661 233.812 778.661 233.815 cv
778.658 233.769 mo
778.658 233.766 778.658 233.762 778.657 233.759 cv
778.658 233.763 778.658 233.766 778.658 233.769 cv
778.656 233.729 mo
778.655 233.726 778.655 233.723 778.655 233.72 cv
778.655 233.723 778.655 233.726 778.656 233.729 cv
778.653 233.682 mo
778.653 233.681 778.653 233.68 778.652 233.679 cv
778.653 233.68 778.653 233.681 778.653 233.682 cv
778.65 233.643 mo
778.65 233.641 778.65 233.638 778.65 233.636 cv
778.65 233.638 778.65 233.641 778.65 233.643 cv
778.646 233.558 mo
778.646 233.555 778.646 233.553 778.645 233.55 cv
778.646 233.553 778.646 233.555 778.646 233.558 cv
778.644 233.512 mo
778.644 233.512 li
778.644 233.512 778.644 233.512 778.644 233.512 cv
778.642 233.472 mo
778.642 233.47 778.642 233.468 778.641 233.466 cv
778.642 233.468 778.642 233.47 778.642 233.472 cv
778.64 233.429 mo
778.64 233.428 778.64 233.427 778.64 233.427 cv
778.64 233.427 778.64 233.428 778.64 233.429 cv
778.638 233.386 mo
778.638 233.385 778.638 233.383 778.638 233.382 cv
778.638 233.383 778.638 233.385 778.638 233.386 cv
778.636 233.344 mo
778.636 233.344 778.636 233.342 778.636 233.341 cv
778.636 233.342 778.636 233.344 778.636 233.344 cv
778.635 233.3 mo
778.635 233.3 778.635 233.3 778.635 233.299 cv
778.635 233.3 778.635 233.3 778.635 233.3 cv
778.633 233.259 mo
778.633 233.258 778.633 233.258 778.633 233.257 cv
778.633 233.257 778.633 233.258 778.633 233.259 cv
778.631 233.175 mo
778.631 233.173 778.631 233.172 778.631 233.171 cv
778.631 233.172 778.631 233.174 778.631 233.175 cv
778.629 233.089 mo
778.629 233.088 778.629 233.087 778.629 233.086 cv
778.629 233.087 778.629 233.088 778.629 233.089 cv
778.627 233.004 mo
778.627 233.003 778.627 233.002 778.627 233 cv
778.627 233.002 778.627 233.003 778.627 233.004 cv
778.626 232.962 mo
778.626 232.961 778.626 232.96 778.626 232.959 cv
778.626 232.96 778.626 232.961 778.626 232.962 cv
778.625 232.878 mo
778.625 232.877 778.625 232.874 778.625 232.873 cv
778.625 232.875 778.625 232.876 778.625 232.878 cv
778.625 232.833 mo
778.625 232.833 li
778.625 232.833 li
778.625 232.793 mo
778.625 232.791 778.625 232.789 778.625 232.787 cv
778.625 232.789 778.625 232.791 778.625 232.793 cv
778.625 232.707 mo
778.625 232.705 778.625 232.704 778.625 232.702 cv
778.625 232.704 778.625 232.705 778.625 232.707 cv
778.625 232.621 mo
778.625 232.62 778.625 232.618 778.625 232.617 cv
778.625 232.618 778.625 232.62 778.625 232.621 cv
778.626 232.535 mo
778.626 232.534 778.626 232.533 778.626 232.532 cv
778.626 232.533 778.626 232.534 778.626 232.535 cv
778.627 232.494 mo
778.627 232.493 778.627 232.491 778.627 232.49 cv
778.627 232.491 778.627 232.493 778.627 232.494 cv
778.628 232.409 mo
778.628 232.407 778.628 232.405 778.628 232.404 cv
778.628 232.406 778.628 232.407 778.628 232.409 cv
778.63 232.323 mo
778.63 232.321 778.63 232.32 778.63 232.318 cv
778.63 232.32 778.63 232.321 778.63 232.323 cv
778.884 232.252 mo
778.884 232.252 778.884 232.251 778.884 232.251 cv
778.884 232.251 778.884 232.252 778.884 232.252 cv
778.875 232.239 mo
778.875 232.238 778.874 232.238 778.874 232.237 cv
778.874 232.238 778.875 232.238 778.875 232.239 cv
778.633 232.237 mo
778.633 232.236 778.633 232.234 778.633 232.233 cv
778.633 232.234 778.633 232.236 778.633 232.237 cv
778.865 232.225 mo
778.865 232.225 778.865 232.224 778.864 232.224 cv
778.865 232.224 778.865 232.225 778.865 232.225 cv
778.856 232.212 mo
778.856 232.211 778.856 232.211 778.855 232.211 cv
778.856 232.211 778.856 232.211 778.856 232.212 cv
778.634 232.193 mo
778.634 232.193 778.634 232.192 778.634 232.192 cv
778.634 232.193 778.634 232.192 778.634 232.193 cv
778.821 232.16 mo
778.82 232.16 778.82 232.159 778.82 232.159 cv
778.82 232.16 778.82 232.16 778.821 232.16 cv
778.636 232.151 mo
778.636 232.15 778.636 232.148 778.636 232.146 cv
778.636 232.148 778.636 232.15 778.636 232.151 cv
778.813 232.148 mo
778.812 232.147 778.811 232.146 778.811 232.146 cv
778.811 232.147 778.812 232.147 778.813 232.148 cv
778.804 232.135 mo
778.803 232.134 778.802 232.133 778.802 232.132 cv
778.802 232.133 778.803 232.134 778.804 232.135 cv
778.795 232.123 mo
778.794 232.122 778.793 232.12 778.793 232.119 cv
778.794 232.12 778.794 232.121 778.795 232.123 cv
778.637 232.11 mo
778.637 232.109 778.637 232.107 778.637 232.105 cv
778.637 232.107 778.637 232.109 778.637 232.11 cv
778.786 232.11 mo
778.786 232.108 778.785 232.107 778.784 232.106 cv
778.785 232.107 778.785 232.108 778.786 232.11 cv
778.778 232.097 mo
778.777 232.096 778.776 232.094 778.775 232.093 cv
778.776 232.094 778.777 232.096 778.778 232.097 cv
778.639 232.065 mo
778.639 232.064 778.639 232.062 778.639 232.061 cv
778.639 232.062 778.639 232.064 778.639 232.065 cv
778.756 232.064 mo
778.755 232.062 778.754 232.061 778.753 232.059 cv
778.754 232.061 778.755 232.062 778.756 232.064 cv
778.748 232.053 mo
778.747 232.05 778.746 232.048 778.744 232.046 cv
778.746 232.048 778.747 232.05 778.748 232.053 cv
778.74 232.04 mo
778.739 232.038 778.738 232.036 778.736 232.034 cv
778.738 232.036 778.739 232.038 778.74 232.04 cv
778.731 232.027 mo
778.73 232.025 778.729 232.023 778.728 232.022 cv
778.729 232.023 778.73 232.025 778.731 232.027 cv
778.641 232.026 mo
778.641 232.023 778.641 232.021 778.641 232.017 cv
778.641 232.021 778.641 232.023 778.641 232.026 cv
778.724 232.015 mo
778.723 232.013 778.721 232.011 778.72 232.009 cv
778.721 232.011 778.723 232.013 778.724 232.015 cv
778.716 232.002 mo
778.715 232.001 778.714 231.999 778.713 231.998 cv
778.714 231.999 778.715 232.001 778.716 232.002 cv
778.708 231.99 mo
778.708 231.989 778.707 231.988 778.706 231.987 cv
778.707 231.988 778.708 231.989 778.708 231.99 cv
778.643 231.979 mo
778.643 231.978 778.643 231.977 778.643 231.976 cv
778.643 231.977 778.643 231.978 778.643 231.979 cv
778.695 231.97 mo
778.695 231.969 778.694 231.968 778.693 231.967 cv
778.694 231.968 778.695 231.969 778.695 231.97 cv
778.689 231.96 mo
778.688 231.959 778.687 231.957 778.686 231.955 cv
778.687 231.957 778.688 231.959 778.689 231.96 cv
778.682 231.949 mo
778.681 231.947 778.68 231.945 778.679 231.943 cv
778.68 231.945 778.681 231.947 778.682 231.949 cv
778.645 231.941 mo
778.645 231.937 778.645 231.934 778.645 231.93 cv
778.645 231.934 778.645 231.937 778.645 231.941 cv
778.675 231.938 mo
778.674 231.936 778.672 231.934 778.671 231.931 cv
778.672 231.934 778.674 231.936 778.675 231.938 cv
778.668 231.926 mo
778.667 231.924 778.665 231.922 778.664 231.92 cv
778.665 231.922 778.667 231.924 778.668 231.926 cv
778.661 231.915 mo
778.66 231.913 778.658 231.91 778.657 231.908 cv
778.658 231.91 778.66 231.913 778.661 231.915 cv
778.654 231.903 mo
778.652 231.9 778.65 231.896 778.647 231.892 cv
778.647 231.892 li
778.647 231.892 li
778.65 231.896 778.652 231.9 778.654 231.903 cv
.309804 .8 1 rgb
f
735.791 267.907 mo
736.293 267.056 736.775 266.221 737.248 265.429 cv
737.343 265.269 737.438 265.11 737.533 264.954 cv
737.533 264.954 li
737.533 264.954 li
732.917 265.944 728.217 266.463 723.486 266.463 cv
722.838 266.463 722.189 266.453 721.54 266.433 cv
727.583 263.817 733.205 260.312 737.954 255.976 cv
737.954 255.976 li
737.954 255.976 li
733.143 258.682 728.064 260.956 722.964 263.155 cv
722.964 263.155 li
722.994 263.129 723.024 263.102 723.053 263.075 cv
723.055 263.073 723.056 263.073 723.058 263.071 cv
726.27 260.177 729.431 257.241 732.38 254.182 cv
736.682 249.718 740.533 244.994 743.433 239.763 cv
746.44 238.969 749.447 238.167 752.451 237.357 cv
749.537 240.963 746.353 244.408 743.293 247.871 cv
743.524 247.678 743.772 247.502 744.008 247.315 cv
740.821 250.634 739.389 254.817 737.551 258.871 cv
739.82 257.646 742.088 256.422 744.357 255.197 cv
741.996 258.054 739.769 261.011 737.489 263.924 cv
740.014 262.44 742.54 260.955 745.066 259.47 cv
745.009 260.655 744.934 261.838 744.861 263.022 cv
745.783 262.669 746.709 262.322 747.626 261.959 cv
747.571 262.355 747.515 262.75 747.46 263.146 cv
745.921 263.796 744.382 264.438 742.837 265.073 cv
742.869 264.602 742.904 264.137 742.947 263.683 cv
742.259 264.412 741.57 265.142 740.881 265.872 cv
739.188 266.559 737.491 267.238 735.79 267.907 cv
749.723 262.182 mo
750.243 261.254 750.764 260.326 751.285 259.397 cv
751.817 258.448 752.523 257.465 752.792 256.426 cv
753.193 255.209 753.424 253.898 754.124 252.779 cv
754.209 252.792 755.091 254.605 755.194 254.742 cv
756.144 256.01 757.125 257.22 757.974 258.552 cv
755.235 259.789 752.484 260.998 749.723 262.182 cv
757.998 258.541 mo
757.396 256.881 756.514 255.32 755.946 253.654 cv
755.564 252.534 754.813 250.764 755.241 249.647 cv
756.33 246.8 757.42 243.953 758.51 241.106 cv
755.797 243.462 753.084 245.818 750.372 248.174 cv
752.197 244.415 753.583 240.566 754.936 236.685 cv
764.079 234.204 773.207 231.644 782.329 229.006 cv
784.59 233.665 787.044 238.232 789.687 242.698 cv
789.51 242.796 789.333 242.895 789.155 242.993 cv
789.155 242.993 li
789.155 242.993 li
785.936 240.437 780.409 234.424 778.884 232.252 cv
778.884 232.252 778.884 232.251 778.884 232.251 cv
778.881 232.247 778.878 232.243 778.875 232.239 cv
778.875 232.238 778.874 232.238 778.874 232.237 cv
778.871 232.233 778.868 232.229 778.865 232.225 cv
778.865 232.225 778.865 232.224 778.864 232.224 cv
778.862 232.22 778.859 232.216 778.856 232.212 cv
778.856 232.211 778.856 232.211 778.855 232.211 cv
778.844 232.194 778.832 232.177 778.821 232.16 cv
778.82 232.16 778.82 232.16 778.82 232.159 cv
778.817 232.155 778.815 232.152 778.813 232.148 cv
778.812 232.147 778.811 232.147 778.811 232.146 cv
778.808 232.142 778.806 232.139 778.804 232.135 cv
778.803 232.134 778.802 232.133 778.802 232.132 cv
778.799 232.129 778.797 232.126 778.795 232.123 cv
778.794 232.121 778.794 232.12 778.793 232.119 cv
778.791 232.116 778.789 232.113 778.786 232.11 cv
778.785 232.108 778.785 232.107 778.784 232.106 cv
778.782 232.103 778.78 232.1 778.778 232.097 cv
778.777 232.096 778.776 232.094 778.775 232.093 cv
778.769 232.083 778.762 232.073 778.756 232.064 cv
778.755 232.062 778.754 232.061 778.753 232.059 cv
778.751 232.057 778.75 232.055 778.748 232.053 cv
778.747 232.05 778.746 232.048 778.744 232.046 cv
778.743 232.044 778.741 232.042 778.74 232.04 cv
778.739 232.038 778.738 232.036 778.736 232.034 cv
778.735 232.032 778.733 232.029 778.731 232.027 cv
778.73 232.025 778.729 232.023 778.728 232.022 cv
778.727 232.019 778.725 232.017 778.724 232.015 cv
778.723 232.013 778.721 232.011 778.72 232.009 cv
778.719 232.007 778.717 232.004 778.716 232.002 cv
778.715 232.001 778.714 231.999 778.713 231.998 cv
778.711 231.995 778.71 231.993 778.708 231.99 cv
778.708 231.989 778.707 231.988 778.706 231.987 cv
778.703 231.982 778.699 231.976 778.695 231.97 cv
778.695 231.969 778.694 231.968 778.693 231.967 cv
778.692 231.965 778.691 231.963 778.689 231.96 cv
778.688 231.959 778.687 231.957 778.686 231.955 cv
778.685 231.953 778.683 231.951 778.682 231.949 cv
778.681 231.947 778.68 231.945 778.679 231.943 cv
778.677 231.941 778.676 231.94 778.675 231.938 cv
778.674 231.936 778.672 231.934 778.671 231.931 cv
778.67 231.93 778.669 231.928 778.668 231.926 cv
778.667 231.924 778.665 231.922 778.664 231.92 cv
778.663 231.918 778.662 231.916 778.661 231.915 cv
778.66 231.913 778.658 231.91 778.657 231.908 cv
778.656 231.906 778.655 231.905 778.654 231.903 cv
778.652 231.9 778.65 231.896 778.647 231.892 cv
778.647 231.892 li
778.647 231.905 778.646 231.918 778.645 231.93 cv
778.645 231.934 778.645 231.937 778.645 231.941 cv
778.644 231.952 778.644 231.964 778.643 231.976 cv
778.643 231.977 778.643 231.978 778.643 231.979 cv
778.642 231.992 778.642 232.005 778.641 232.017 cv
778.641 232.021 778.641 232.023 778.641 232.026 cv
778.64 232.038 778.64 232.049 778.639 232.061 cv
778.639 232.062 778.639 232.064 778.639 232.065 cv
778.638 232.078 778.638 232.092 778.637 232.105 cv
778.637 232.107 778.637 232.109 778.637 232.11 cv
778.637 232.122 778.636 232.134 778.636 232.146 cv
778.636 232.148 778.636 232.15 778.636 232.151 cv
778.635 232.165 778.635 232.178 778.634 232.192 cv
778.634 232.192 778.634 232.193 778.634 232.193 cv
778.634 232.206 778.633 232.219 778.633 232.233 cv
778.633 232.234 778.633 232.236 778.633 232.237 cv
778.632 232.264 778.631 232.291 778.63 232.318 cv
778.63 232.32 778.63 232.321 778.63 232.323 cv
778.629 232.35 778.629 232.377 778.628 232.404 cv
778.628 232.405 778.628 232.407 778.628 232.409 cv
778.628 232.436 778.627 232.463 778.627 232.49 cv
778.627 232.491 778.627 232.493 778.627 232.494 cv
778.626 232.507 778.626 232.519 778.626 232.532 cv
778.626 232.533 778.626 232.534 778.626 232.535 cv
778.626 232.562 778.625 232.59 778.625 232.617 cv
778.625 232.618 778.625 232.62 778.625 232.621 cv
778.625 232.648 778.625 232.675 778.625 232.702 cv
778.625 232.704 778.625 232.705 778.625 232.707 cv
778.625 232.734 778.625 232.76 778.625 232.787 cv
778.625 232.789 778.625 232.791 778.625 232.793 cv
778.625 232.806 778.625 232.819 778.625 232.833 cv
778.625 232.833 li
778.625 232.846 778.625 232.86 778.625 232.873 cv
778.625 232.874 778.625 232.877 778.625 232.878 cv
778.626 232.905 778.626 232.932 778.626 232.959 cv
778.626 232.96 778.626 232.961 778.626 232.962 cv
778.627 232.975 778.627 232.988 778.627 233 cv
778.627 233.002 778.627 233.003 778.627 233.004 cv
778.628 233.031 778.628 233.059 778.629 233.086 cv
778.629 233.087 778.629 233.088 778.629 233.089 cv
778.629 233.116 778.63 233.143 778.631 233.171 cv
778.631 233.172 778.631 233.173 778.631 233.175 cv
778.632 233.202 778.632 233.229 778.633 233.257 cv
778.633 233.258 778.633 233.258 778.633 233.259 cv
778.634 233.272 778.634 233.286 778.635 233.299 cv
778.635 233.3 778.635 233.3 778.635 233.3 cv
778.635 233.314 778.636 233.328 778.636 233.341 cv
778.636 233.342 778.636 233.344 778.636 233.344 cv
778.637 233.357 778.637 233.369 778.638 233.382 cv
778.638 233.383 778.638 233.385 778.638 233.386 cv
778.639 233.4 778.639 233.413 778.64 233.427 cv
778.64 233.427 778.64 233.428 778.64 233.429 cv
778.64 233.441 778.641 233.454 778.641 233.466 cv
778.642 233.468 778.642 233.47 778.642 233.472 cv
778.642 233.485 778.643 233.499 778.644 233.512 cv
778.644 233.512 li
778.644 233.525 778.645 233.538 778.645 233.55 cv
778.646 233.553 778.646 233.555 778.646 233.558 cv
778.647 233.584 778.649 233.61 778.65 233.636 cv
778.65 233.638 778.65 233.641 778.65 233.643 cv
778.651 233.655 778.652 233.667 778.652 233.679 cv
778.653 233.68 778.653 233.681 778.653 233.682 cv
778.653 233.695 778.654 233.708 778.655 233.72 cv
778.655 233.723 778.655 233.726 778.656 233.729 cv
778.656 233.739 778.657 233.749 778.657 233.759 cv
778.658 233.762 778.658 233.766 778.658 233.769 cv
778.659 233.781 778.66 233.793 778.66 233.805 cv
778.661 233.808 778.661 233.812 778.661 233.815 cv
778.662 233.825 778.662 233.834 778.663 233.844 cv
778.663 233.847 778.663 233.851 778.664 233.854 cv
778.664 233.866 778.665 233.878 778.666 233.89 cv
778.666 233.894 778.667 233.897 778.667 233.9 cv
778.668 233.91 778.668 233.919 778.669 233.928 cv
778.669 233.932 778.669 233.936 778.67 233.94 cv
778.671 233.952 778.672 233.963 778.672 233.974 cv
778.673 233.978 778.673 233.982 778.673 233.986 cv
778.674 233.994 778.675 234.003 778.675 234.011 cv
778.676 234.016 778.676 234.022 778.677 234.027 cv
778.677 234.035 778.678 234.043 778.678 234.05 cv
778.679 234.058 778.68 234.065 778.68 234.072 cv
778.681 234.08 778.681 234.088 778.682 234.096 cv
778.683 234.103 778.683 234.108 778.684 234.114 cv
778.684 234.12 778.685 234.126 778.685 234.133 cv
778.686 234.14 778.686 234.147 778.687 234.155 cv
778.688 234.164 778.689 234.173 778.689 234.181 cv
778.69 234.188 778.69 234.194 778.691 234.2 cv
778.692 234.205 778.692 234.211 778.693 234.217 cv
778.693 234.224 778.694 234.23 778.694 234.237 cv
778.695 234.247 778.696 234.257 778.697 234.267 cv
778.698 234.273 778.698 234.279 778.699 234.286 cv
778.699 234.291 778.7 234.297 778.701 234.302 cv
778.701 234.309 778.702 234.316 778.703 234.323 cv
778.703 234.327 778.703 234.332 778.704 234.336 cv
778.705 234.348 778.706 234.361 778.708 234.373 cv
778.708 234.378 778.708 234.382 778.709 234.387 cv
778.71 234.394 778.71 234.402 778.711 234.409 cv
778.711 234.413 778.712 234.416 778.712 234.42 cv
778.714 234.435 778.715 234.451 778.717 234.466 cv
778.717 234.468 778.717 234.469 778.717 234.47 cv
778.718 234.479 778.719 234.488 778.72 234.497 cv
778.721 234.499 778.721 234.501 778.721 234.503 cv
778.723 234.52 778.725 234.538 778.727 234.555 cv
778.727 234.556 778.727 234.556 778.727 234.557 cv
778.728 234.566 778.729 234.573 778.73 234.582 cv
778.73 234.585 778.73 234.588 778.731 234.59 cv
778.734 234.617 778.737 234.644 778.74 234.671 cv
778.74 234.672 778.74 234.673 778.74 234.674 cv
779.213 238.698 781.08 242.534 783.21 246.2 cv
780.102 247.847 776.976 249.455 773.834 251.023 cv
772.586 247.596 771.896 243.859 770.901 240.426 cv
770.827 244.075 770.754 247.724 770.68 251.373 cv
769.772 250.043 769.207 248.782 768.704 247.288 cv
768.301 249.466 768.147 251.632 768.156 253.806 cv
764.788 255.427 761.401 257.005 757.998 258.541 cv
.027451 .341176 .87451 rgb
f
705.231 328.631 mo
705.238 328.621 705.245 328.611 705.251 328.601 cv
705.244 328.612 705.238 328.62 705.231 328.631 cv
705.29 328.545 mo
705.297 328.535 705.303 328.527 705.309 328.517 cv
705.303 328.527 705.297 328.535 705.29 328.545 cv
705.351 328.458 mo
705.359 328.446 705.367 328.434 705.376 328.422 cv
705.367 328.434 705.359 328.446 705.351 328.458 cv
705.423 328.354 mo
705.431 328.343 705.439 328.331 705.447 328.32 cv
705.439 328.331 705.431 328.343 705.423 328.354 cv
705.478 328.275 mo
705.488 328.261 705.497 328.247 705.507 328.233 cv
705.498 328.247 705.487 328.261 705.478 328.275 cv
705.531 328.199 mo
705.574 328.138 705.617 328.076 705.66 328.016 cv
705.617 328.076 705.574 328.138 705.531 328.199 cv
705.663 328.01 mo
710.984 320.423 717.183 313.379 722.942 306.067 cv
722.945 306.065 722.947 306.063 722.95 306.062 cv
717.19 313.376 710.986 320.421 705.663 328.01 cv
.231373 .576471 .972549 rgb
f
798.479 298.477 mo
792.24 291.25 787.828 282.586 784.695 273.854 cv
787.828 282.586 792.245 291.246 798.484 298.472 cv
798.483 298.474 798.481 298.476 798.479 298.477 cv
.298039 .705882 1 rgb
f
790.606 269.559 mo
790.098 268.559 789.599 267.554 789.111 266.545 cv
789.599 267.554 790.098 268.559 790.606 269.559 cv
790.606 269.559 li
level3{
gsave
clp
[3.8096e-009 84.8528 -84.8528 3.8096e-009 450 214 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.8096e-009 84.8528 -84.8528 3.8096e-009 450 214 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
804.242 293.092 mo
799.375 285.406 794.696 277.62 790.606 269.559 cv
790.606 269.559 li
794.696 277.619 799.377 285.404 804.244 293.09 cv
804.242 293.092 li
.298039 .705882 1 rgb
f
799.815 276.922 mo
799.789 276.89 799.764 276.859 799.738 276.827 cv
799.764 276.859 799.789 276.89 799.815 276.922 cv
799.721 276.806 mo
799.668 276.741 799.616 276.676 799.563 276.61 cv
799.616 276.675 799.669 276.741 799.721 276.806 cv
f
793.696 268.684 mo
792.414 266.79 791.192 264.863 790.029 262.899 cv
790.03 262.898 790.029 262.898 790.031 262.897 cv
791.194 264.861 792.416 266.789 793.698 268.683 cv
793.696 268.684 793.698 268.683 793.696 268.684 cv
level3{
gsave
clp
[3.8096e-009 84.8528 -84.8528 3.8096e-009 450 214 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.8096e-009 84.8528 -84.8528 3.8096e-009 450 214 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
799.557 276.602 mo
797.479 274.022 795.526 271.387 793.696 268.684 cv
793.698 268.683 793.696 268.684 793.698 268.683 cv
795.528 271.387 797.479 274.022 799.557 276.602 cv
786.295 276.266 mo
785.648 275.142 785.001 274.018 784.355 272.893 cv
784.366 272.925 784.377 272.957 784.388 272.989 cv
784.377 272.957 784.366 272.925 784.355 272.893 cv
785.001 274.018 785.648 275.142 786.295 276.266 cv
786.295 276.266 li
785.781 274.1 mo
785.778 274.097 785.775 274.093 785.772 274.09 cv
785.775 274.094 785.778 274.097 785.781 274.1 cv
785.644 273.941 mo
785.631 273.926 785.618 273.911 785.605 273.896 cv
785.618 273.911 785.631 273.926 785.644 273.941 cv
784.691 273.844 mo
784.679 273.81 784.667 273.777 784.655 273.744 cv
784.667 273.777 784.679 273.811 784.691 273.844 cv
785.505 273.779 mo
785.482 273.752 785.46 273.726 785.437 273.699 cv
785.459 273.726 785.482 273.753 785.505 273.779 cv
784.654 273.742 mo
784.642 273.708 784.63 273.674 784.618 273.641 cv
784.63 273.675 784.642 273.708 784.654 273.742 cv
784.609 273.616 mo
784.601 273.593 784.593 273.57 784.585 273.547 cv
784.593 273.57 784.601 273.593 784.609 273.616 cv
785.365 273.615 mo
785.332 273.577 785.3 273.54 785.268 273.502 cv
785.3 273.539 785.333 273.578 785.365 273.615 cv
784.57 273.507 mo
784.564 273.489 784.557 273.47 784.551 273.452 cv
784.557 273.47 784.564 273.489 784.57 273.507 cv
785.223 273.449 mo
785.182 273.401 785.14 273.352 785.099 273.303 cv
785.14 273.352 785.181 273.4 785.223 273.449 cv
784.535 273.408 mo
784.528 273.388 784.521 273.367 784.514 273.347 cv
784.521 273.367 784.528 273.388 784.535 273.408 cv
784.5 273.309 mo
784.491 273.281 784.481 273.253 784.471 273.225 cv
784.481 273.253 784.49 273.281 784.5 273.309 cv
785.08 273.281 mo
785.032 273.225 784.984 273.168 784.936 273.112 cv
784.936 273.112 li
784.984 273.168 785.032 273.225 785.08 273.281 cv
784.455 273.179 mo
784.448 273.161 784.442 273.143 784.436 273.126 cv
784.442 273.143 784.448 273.161 784.455 273.179 cv
784.421 273.084 mo
784.414 273.064 784.408 273.045 784.401 273.025 cv
784.408 273.044 784.414 273.064 784.421 273.084 cv
.298039 .705882 1 rgb
f
789.106 266.535 mo
789.09 266.501 789.073 266.468 789.057 266.434 cv
789.073 266.468 789.089 266.501 789.106 266.535 cv
789.05 266.419 mo
789.035 266.388 789.019 266.355 789.003 266.323 cv
789.019 266.355 789.034 266.387 789.05 266.419 cv
788.993 266.301 mo
788.979 266.272 788.965 266.243 788.951 266.213 cv
788.965 266.243 788.979 266.271 788.993 266.301 cv
788.934 266.18 mo
788.922 266.154 788.909 266.128 788.897 266.102 cv
788.909 266.128 788.922 266.154 788.934 266.18 cv
788.876 266.058 mo
788.865 266.036 788.854 266.013 788.843 265.99 cv
788.854 266.013 788.865 266.035 788.876 266.058 cv
788.819 265.939 mo
788.809 265.918 788.799 265.898 788.789 265.877 cv
788.799 265.898 788.809 265.918 788.819 265.939 cv
788.763 265.822 mo
788.753 265.803 788.744 265.783 788.735 265.763 cv
788.744 265.783 788.753 265.803 788.763 265.822 cv
788.705 265.702 mo
788.697 265.685 788.689 265.668 788.681 265.651 cv
788.689 265.668 788.697 265.685 788.705 265.702 cv
788.646 265.577 mo
788.639 265.563 788.633 265.55 788.626 265.537 cv
788.633 265.55 788.639 265.564 788.646 265.577 cv
788.587 265.453 mo
788.582 265.443 788.577 265.433 788.572 265.423 cv
788.577 265.433 788.582 265.442 788.587 265.453 cv
level3{
gsave
clp
[3.8096e-009 84.8528 -84.8528 3.8096e-009 450 214 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.8096e-009 84.8528 -84.8528 3.8096e-009 450 214 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
716.994 354.025 mo
711.812 354.025 li
710.976 352.1 710.181 350.294 709.434 348.616 cv
711.935 345.418 714.34 342.163 716.595 338.834 cv
716.595 338.834 li
716.595 338.834 li
714.377 339.732 712.153 340.617 709.948 341.539 cv
709.087 342.122 708.218 342.699 707.338 343.267 cv
707.751 342.891 708.151 342.508 708.556 342.128 cv
708.556 342.128 li
708.556 342.128 li
707.983 342.373 707.412 342.622 706.844 342.874 cv
706.292 341.669 705.789 340.581 705.34 339.616 cv
710.981 332.443 717.491 325.842 722.085 317.992 cv
722.085 317.992 li
722.085 317.992 li
716.337 321.429 710.646 324.908 705.174 328.712 cv
705.193 328.685 705.212 328.658 705.231 328.631 cv
705.238 328.62 705.244 328.612 705.251 328.601 cv
705.264 328.583 705.277 328.564 705.29 328.545 cv
705.297 328.535 705.303 328.527 705.309 328.517 cv
705.323 328.498 705.337 328.478 705.351 328.458 cv
705.359 328.446 705.367 328.434 705.376 328.422 cv
705.391 328.399 705.407 328.376 705.423 328.354 cv
705.431 328.343 705.439 328.331 705.447 328.32 cv
705.457 328.305 705.468 328.29 705.478 328.275 cv
705.487 328.261 705.498 328.247 705.507 328.233 cv
705.515 328.222 705.523 328.21 705.531 328.199 cv
705.574 328.138 705.617 328.076 705.66 328.016 cv
705.661 328.014 705.662 328.012 705.663 328.01 cv
710.986 320.421 717.19 313.376 722.95 306.062 cv
727.287 303.665 731.592 301.198 735.866 298.67 cv
734.795 301.994 733.758 305.327 732.653 308.623 cv
735.39 304.278 738.24 299.973 740.971 295.613 cv
742.068 294.947 743.162 294.28 744.255 293.607 cv
744.079 295.054 743.902 296.501 743.726 297.947 cv
744.656 296.016 745.686 294.075 746.675 292.11 cv
747.859 291.374 749.038 290.635 750.218 289.891 cv
749.956 292.09 749.57 294.291 749.429 296.479 cv
749.767 300.006 749.496 303.54 750.454 307.005 cv
751.378 310.345 752.303 313.684 753.227 317.024 cv
753.576 314.055 753.926 311.086 754.276 308.117 cv
754.462 306.538 754.65 304.961 754.778 303.377 cv
755.097 299.438 755.049 295.675 754.878 291.741 cv
755.286 292.955 755.707 294.164 756.155 295.365 cv
756.155 295.365 li
756.155 295.365 li
755.92 294.481 755.696 293.594 755.481 292.705 cv
757.031 296.653 758.644 300.584 760.547 304.398 cv
758.674 298.415 757.352 292.286 756.063 286.157 cv
767.601 278.7 778.918 270.884 790.029 262.899 cv
791.192 264.863 792.414 266.79 793.696 268.684 cv
795.526 271.387 797.479 274.022 799.557 276.602 cv
799.559 276.605 799.561 276.607 799.563 276.61 cv
799.616 276.676 799.668 276.741 799.721 276.806 cv
799.727 276.813 799.733 276.82 799.738 276.827 cv
799.764 276.859 799.789 276.89 799.815 276.922 cv
799.815 276.922 li
795.775 273.265 791.963 269.458 788.518 265.308 cv
788.518 265.308 li
788.518 265.308 li
788.536 265.346 788.554 265.385 788.572 265.423 cv
788.577 265.433 788.582 265.443 788.587 265.453 cv
788.6 265.48 788.613 265.509 788.626 265.537 cv
788.633 265.55 788.639 265.563 788.646 265.577 cv
788.657 265.602 788.669 265.626 788.681 265.651 cv
788.689 265.668 788.697 265.685 788.705 265.702 cv
788.715 265.723 788.725 265.742 788.735 265.763 cv
788.744 265.783 788.753 265.803 788.763 265.822 cv
788.771 265.84 788.78 265.859 788.789 265.877 cv
788.799 265.898 788.809 265.918 788.819 265.939 cv
788.827 265.956 788.835 265.973 788.843 265.99 cv
788.854 266.013 788.865 266.036 788.876 266.058 cv
788.883 266.072 788.89 266.087 788.897 266.102 cv
788.909 266.128 788.922 266.154 788.934 266.18 cv
788.94 266.191 788.945 266.202 788.951 266.213 cv
788.965 266.243 788.979 266.272 788.993 266.301 cv
788.996 266.308 789 266.316 789.003 266.323 cv
789.019 266.355 789.035 266.388 789.05 266.419 cv
789.052 266.424 789.055 266.429 789.057 266.434 cv
789.073 266.468 789.09 266.501 789.106 266.535 cv
789.108 266.538 789.109 266.541 789.111 266.545 cv
789.599 267.554 790.098 268.559 790.606 269.559 cv
794.696 277.62 799.375 285.406 804.242 293.092 cv
804.072 293.255 li
804.072 293.255 li
797.72 287.076 791.521 280.772 785.781 274.1 cv
785.778 274.097 785.775 274.094 785.772 274.09 cv
785.729 274.04 785.686 273.99 785.644 273.941 cv
785.631 273.926 785.618 273.911 785.605 273.896 cv
785.572 273.857 785.538 273.818 785.505 273.779 cv
785.482 273.753 785.459 273.726 785.437 273.699 cv
785.413 273.671 785.389 273.643 785.365 273.615 cv
785.333 273.578 785.3 273.539 785.268 273.502 cv
785.253 273.484 785.238 273.467 785.223 273.449 cv
785.181 273.4 785.14 273.352 785.099 273.303 cv
785.092 273.296 785.086 273.289 785.08 273.281 cv
785.032 273.225 784.984 273.168 784.936 273.112 cv
784.936 273.112 li
784.936 273.112 li
785.389 274.163 785.842 275.215 786.295 276.266 cv
785.648 275.142 785.001 274.018 784.355 272.893 cv
784.366 272.925 784.377 272.957 784.388 272.989 cv
784.392 273 784.397 273.013 784.401 273.025 cv
784.408 273.045 784.414 273.064 784.421 273.084 cv
784.426 273.098 784.431 273.112 784.436 273.126 cv
784.442 273.143 784.448 273.161 784.455 273.179 cv
784.46 273.194 784.465 273.21 784.471 273.225 cv
784.481 273.253 784.491 273.281 784.5 273.309 cv
784.505 273.322 784.51 273.335 784.514 273.347 cv
784.521 273.367 784.528 273.388 784.535 273.408 cv
784.541 273.423 784.546 273.437 784.551 273.452 cv
784.557 273.47 784.564 273.489 784.57 273.507 cv
784.575 273.52 784.58 273.534 784.585 273.547 cv
784.593 273.57 784.601 273.593 784.609 273.616 cv
784.612 273.625 784.615 273.633 784.618 273.641 cv
784.63 273.674 784.642 273.708 784.654 273.742 cv
784.654 273.742 784.655 273.743 784.655 273.744 cv
784.667 273.777 784.679 273.81 784.691 273.844 cv
784.692 273.848 784.693 273.851 784.695 273.854 cv
787.828 282.586 792.24 291.25 798.479 298.477 cv
790.996 305.32 783.23 311.854 775.213 318.059 cv
774.083 315.041 772.952 312.023 771.822 309.004 cv
771.961 312.782 772.1 316.56 772.239 320.338 cv
772.129 320.421 772.023 320.501 771.914 320.583 cv
771.782 320.052 771.73 319.506 771.842 318.967 cv
771.567 319.561 771.508 320.215 771.544 320.863 cv
771.165 321.149 770.784 321.435 770.403 321.72 cv
769.923 320.615 769.479 319.496 769.018 318.384 cv
768.543 319.827 768.025 321.271 767.642 322.737 cv
767.09 321.21 766.609 319.658 766.194 318.093 cv
765.891 319.314 765.62 320.54 765.396 321.776 cv
765.243 319.77 765.232 317.772 765.253 315.762 cv
764.636 317.825 764.065 319.885 763.637 321.99 cv
763.446 320.497 763.267 319.002 763.057 317.51 cv
762.559 321.029 761.903 324.548 761.638 328.084 cv
756.106 331.979 750.471 335.722 744.738 339.31 cv
744.983 339.03 745.224 338.746 745.463 338.459 cv
746.843 336.798 748.976 334.497 749.658 332.462 cv
750.303 330.539 749.902 327.907 749.924 325.92 cv
749.788 323.776 749.572 321.677 749.253 319.55 cv
748.384 322.238 747.39 324.812 746.107 327.358 cv
746.11 326.503 746.113 325.649 746.116 324.795 cv
745.481 325.749 744.847 326.703 744.212 327.657 cv
745.141 324.807 745.942 321.913 746.43 318.967 cv
745.72 320.496 744.919 321.988 744.059 323.449 cv
744.329 320.859 744.992 318.328 745.488 315.762 cv
744.444 317.866 743.559 319.797 741.797 321.469 cv
743.167 316.489 743.623 311.455 744.13 306.36 cv
743.273 308.102 742.416 309.843 741.558 311.584 cv
740.324 314.09 739.489 317.535 737.425 319.509 cv
738.01 316.7 738.595 313.891 739.18 311.082 cv
738.169 312.267 737.157 313.453 736.145 314.638 cv
736.043 314.758 735.948 314.805 735.857 314.805 cv
735.688 314.805 735.531 314.645 735.363 314.485 cv
735.195 314.325 735.016 314.165 734.802 314.165 cv
734.787 314.165 734.772 314.166 734.757 314.168 cv
733.871 315.494 732.93 316.796 731.966 318.075 cv
732.859 316.308 733.865 314.586 734.822 312.848 cv
733.219 313.841 731.617 314.834 730.014 315.827 cv
728.613 316.76 726.413 317.718 725.309 318.959 cv
724.212 320.192 723.616 322.353 722.897 323.796 cv
722.061 325.391 721.226 326.987 720.391 328.583 cv
722.555 327.182 724.725 325.79 726.861 324.352 cv
724.665 326.881 722.386 329.347 720.077 331.788 cv
722.858 329.228 725.61 326.638 728.25 323.951 cv
726.377 327.166 724.74 330.583 724.09 334.212 cv
723.762 336.043 723.631 337.976 722.917 339.715 cv
721.964 342.038 721.011 344.361 720.058 346.684 cv
723.005 343.76 725.953 340.835 728.9 337.911 cv
728.513 339.39 728.127 340.868 727.741 342.347 cv
730.43 338.602 733.371 334.926 735.719 330.983 cv
735.478 333.06 735.055 335.097 734.194 337.033 cv
734.585 336.753 734.979 336.48 735.339 336.167 cv
735.075 338.425 734.581 340.372 733.881 342.569 cv
734.209 341.751 734.542 340.934 734.877 340.118 cv
734.662 341.961 734.447 343.805 734.231 345.649 cv
730.138 348.028 725.997 350.33 721.819 352.55 cv
721.737 351.971 721.665 351.501 721.646 351.31 cv
720.514 351.873 719.37 352.413 718.22 352.944 cv
717.885 353.099 717.032 353.271 717.051 353.657 cv
717.058 353.806 717.037 353.927 716.994 354.025 cv
784.077 309.643 mo
784.077 309.643 li
784.077 309.643 li
783.752 308.499 783.421 307.356 783.122 306.206 cv
783.05 305.925 782.597 304.897 782.897 304.723 cv
783.564 304.336 783.717 304.491 783.347 303.74 cv
782.358 301.739 781.527 299.631 780.895 297.533 cv
782.325 299.465 783.799 301.37 785.332 303.233 cv
785.332 303.233 li
785.332 303.233 li
785.332 303.233 li
785.332 303.233 li
785.332 303.233 li
785.332 303.233 li
780.685 294.848 777.127 286.002 773.421 277.237 cv
773.437 281.738 773.222 286.313 773.684 290.798 cv
772.641 289.001 771.696 286.961 771.842 284.876 cv
770.994 286.161 770.654 287.666 770.493 289.149 cv
769.323 287.296 768.335 285.4 767.449 283.419 cv
767.626 285.413 767.901 287.363 768.35 289.323 cv
766.607 287.818 764.832 286.348 763.057 284.876 cv
763.766 287.617 764.452 290.36 765.104 293.113 cv
765.281 293.861 765.781 294.121 766.4 294.654 cv
767.049 295.213 767.737 295.652 768.068 296.422 cv
768.43 297.263 768.858 298.079 769.366 298.852 cv
771.424 301.982 775.079 304.061 778.139 306.277 cv
778.139 306.277 li
778.139 306.277 li
778.027 305.726 777.915 305.174 777.803 304.623 cv
778.008 304.837 778.237 305.048 778.43 305.272 cv
778.43 305.272 li
778.43 305.272 li
778.275 304.707 778.126 304.141 777.981 303.574 cv
778.748 304.432 779.605 305.322 780.173 306.303 cv
780.192 306.286 780.218 306.278 780.25 306.278 cv
780.846 306.278 783.52 309.12 784.077 309.643 cv
738.524 343.116 mo
739.178 341.377 739.832 339.639 740.487 337.9 cv
740.483 339.247 740.478 340.594 740.473 341.94 cv
739.826 342.334 739.174 342.727 738.524 343.116 cv
741.822 341.117 mo
741.959 340.912 742.095 340.707 742.231 340.502 cv
742.178 340.656 742.125 340.81 742.071 340.964 cv
741.989 341.015 741.905 341.066 741.822 341.117 cv
785.313 303.21 mo
785.304 303.199 785.295 303.188 785.286 303.177 cv
785.295 303.188 785.304 303.199 785.313 303.21 cv
783.522 300.213 mo
783.522 300.213 783.522 300.213 783.522 300.213 cv
783.522 300.213 783.522 300.213 783.522 300.213 cv
783.521 300.213 mo
783.52 300.212 783.52 300.212 783.52 300.212 cv
783.52 300.212 783.52 300.212 783.521 300.213 cv
.027451 .341176 .87451 rgb
f
761.944 244.799 mo
761.701 243.814 761.713 244.532 761.944 244.799 cv
cp
.0941176 .454902 .937255 rgb
f
761.944 244.799 mo
761.926 244.727 li
761.944 244.799 li
cp
f
734.425 354.025 mo
733.253 354.025 li
733.579 351.233 733.905 348.441 734.231 345.649 cv
735.669 344.813 737.097 343.971 738.524 343.116 cv
737.157 346.752 735.791 350.388 734.425 354.025 cv
740.469 343.152 mo
740.471 342.748 740.472 342.344 740.473 341.94 cv
740.924 341.666 741.372 341.393 741.822 341.117 cv
741.371 341.795 740.92 342.473 740.469 343.152 cv
741.41 342.86 mo
741.631 342.228 741.852 341.596 742.071 340.964 cv
742.962 340.417 743.853 339.865 744.738 339.31 cv
743.675 340.532 742.56 341.699 741.41 342.86 cv
.054902 .513725 .917647 rgb
f
720.058 346.684 mo
721.011 344.361 721.964 342.038 722.917 339.715 cv
723.631 337.976 723.762 336.043 724.09 334.212 cv
724.74 330.583 726.377 327.166 728.25 323.951 cv
725.61 326.638 722.858 329.228 720.077 331.788 cv
722.386 329.347 724.665 326.881 726.861 324.352 cv
724.725 325.79 722.555 327.182 720.391 328.583 cv
721.226 326.987 722.061 325.391 722.897 323.796 cv
723.616 322.353 724.212 320.192 725.309 318.959 cv
726.413 317.718 728.613 316.76 730.014 315.827 cv
731.617 314.834 733.219 313.841 734.822 312.848 cv
733.865 314.586 732.859 316.308 731.966 318.075 cv
732.93 316.796 733.871 315.494 734.757 314.168 cv
734.772 314.166 734.787 314.165 734.802 314.165 cv
735.016 314.165 735.195 314.325 735.363 314.485 cv
735.531 314.645 735.688 314.805 735.857 314.805 cv
735.948 314.805 736.043 314.758 736.145 314.638 cv
737.157 313.453 738.169 312.267 739.18 311.082 cv
738.595 313.891 738.01 316.7 737.425 319.509 cv
739.489 317.535 740.324 314.09 741.558 311.584 cv
742.416 309.843 743.273 308.102 744.13 306.36 cv
743.623 311.455 743.167 316.489 741.797 321.469 cv
743.559 319.797 744.444 317.866 745.488 315.762 cv
744.992 318.328 744.329 320.859 744.059 323.449 cv
744.919 321.988 745.72 320.496 746.43 318.967 cv
745.942 321.913 745.141 324.807 744.212 327.657 cv
744.847 326.703 745.481 325.749 746.116 324.795 cv
746.113 325.649 746.11 326.503 746.107 327.358 cv
747.39 324.812 748.384 322.238 749.253 319.55 cv
749.572 321.677 749.788 323.776 749.924 325.92 cv
749.902 327.907 750.303 330.539 749.658 332.462 cv
748.976 334.497 746.843 336.798 745.463 338.459 cv
745.224 338.746 744.983 339.03 744.738 339.31 cv
743.853 339.865 742.962 340.417 742.071 340.964 cv
742.125 340.81 742.178 340.656 742.231 340.502 cv
742.095 340.707 741.959 340.912 741.822 341.117 cv
741.372 341.393 740.924 341.666 740.473 341.94 cv
740.478 340.594 740.483 339.247 740.487 337.9 cv
739.832 339.639 739.178 341.377 738.524 343.116 cv
737.097 343.971 735.669 344.813 734.231 345.649 cv
734.447 343.805 734.662 341.961 734.877 340.118 cv
734.542 340.934 734.209 341.751 733.881 342.569 cv
734.581 340.372 735.075 338.425 735.339 336.167 cv
734.979 336.48 734.585 336.753 734.194 337.033 cv
735.055 335.097 735.478 333.06 735.719 330.983 cv
733.371 334.926 730.43 338.602 727.741 342.347 cv
728.127 340.868 728.513 339.39 728.9 337.911 cv
725.953 340.835 723.005 343.76 720.058 346.684 cv
.0352941 .443137 .909804 rgb
f
746.884 267.243 mo
747.076 265.878 747.268 264.512 747.46 263.146 cv
748.215 262.827 748.969 262.505 749.723 262.182 cv
748.777 263.869 747.83 265.556 746.884 267.243 cv
758.038 258.651 mo
758.017 258.618 757.995 258.585 757.974 258.552 cv
757.982 258.548 757.99 258.545 757.998 258.541 cv
758.011 258.578 758.024 258.615 758.038 258.651 cv
752.451 237.357 mo
753.97 235.477 755.416 233.553 756.733 231.56 cv
756.117 233.271 755.53 234.981 754.936 236.685 cv
754.107 236.91 753.28 237.134 752.451 237.357 cv
.0117647 .372549 .898039 rgb
f
737.489 263.924 mo
739.769 261.011 741.996 258.054 744.357 255.197 cv
742.088 256.422 739.82 257.646 737.551 258.871 cv
739.389 254.817 740.821 250.634 744.008 247.315 cv
743.772 247.502 743.524 247.678 743.293 247.871 cv
746.353 244.408 749.537 240.963 752.451 237.357 cv
753.28 237.134 754.107 236.91 754.936 236.685 cv
753.583 240.566 752.197 244.415 750.372 248.174 cv
753.084 245.818 755.797 243.462 758.51 241.106 cv
757.42 243.953 756.33 246.8 755.241 249.647 cv
754.813 250.764 755.564 252.534 755.946 253.654 cv
756.514 255.32 757.396 256.881 757.998 258.541 cv
757.99 258.545 757.982 258.548 757.974 258.552 cv
757.125 257.22 756.144 256.01 755.194 254.742 cv
755.091 254.605 754.209 252.792 754.124 252.779 cv
753.424 253.898 753.193 255.209 752.792 256.426 cv
752.523 257.465 751.817 258.448 751.285 259.397 cv
750.764 260.326 750.243 261.254 749.723 262.182 cv
748.969 262.505 748.215 262.827 747.46 263.146 cv
747.515 262.75 747.571 262.355 747.626 261.959 cv
746.709 262.322 745.783 262.669 744.861 263.022 cv
744.934 261.838 745.009 260.655 745.066 259.47 cv
742.54 260.955 740.014 262.44 737.489 263.924 cv
.0352941 .443137 .909804 rgb
f
730.923 279.42 mo
730.922 279.42 730.941 279.415 730.992 279.402 cv
730.992 279.402 li
730.992 279.402 li
731.043 279.389 731.062 279.384 731.063 279.384 cv
731.064 279.384 731.029 279.393 730.994 279.402 cv
730.959 279.411 730.923 279.42 730.923 279.42 cv
.0117647 .372549 .898039 rgb
f
735.866 298.67 mo
737.133 294.736 738.447 290.816 739.979 286.985 cv
738.355 288.846 736.529 290.542 734.747 292.27 cv
735.404 290.696 735.995 289.079 736.768 287.549 cv
738.411 284.294 740.974 281.551 742.875 278.435 cv
740.754 279.509 738.601 280.474 736.391 281.379 cv
736.959 280.238 737.597 279.096 738.068 277.918 cv
737.442 278.525 736.776 279.097 736.077 279.631 cv
736.567 278.654 736.981 277.643 737.292 276.605 cv
735.367 277.841 733.255 278.832 730.992 279.402 cv
730.992 279.402 li
730.992 279.402 li
730.607 279.503 730.199 279.569 729.802 279.631 cv
732.047 278.163 733.772 276.08 735.05 273.842 cv
735.992 272.19 736.346 270.676 737.67 269.273 cv
738.741 268.139 739.811 267.006 740.881 265.872 cv
741.533 265.607 742.186 265.34 742.837 265.073 cv
742.65 267.869 742.578 270.902 741.399 273.409 cv
743.095 272.501 744.76 271.548 746.43 270.598 cv
745.836 272.387 745.244 274.175 744.599 275.949 cv
746.894 272.23 749.488 268.662 751.971 265.05 cv
751.64 266.366 751.309 267.683 750.977 269 cv
751.237 268.667 751.496 268.335 751.756 268.002 cv
751.74 268.357 751.725 268.711 751.709 269.066 cv
752.14 268.116 752.571 267.166 753.002 266.217 cv
752.953 270.55 752.851 274.877 753.221 279.203 cv
753.507 278.448 753.794 277.693 754.08 276.938 cv
754.777 279.999 755.416 283.078 756.063 286.157 cv
754.121 287.412 752.173 288.657 750.218 289.891 cv
750.476 287.72 750.614 285.551 750.275 283.399 cv
749.45 286.375 748.106 289.267 746.675 292.11 cv
745.87 292.611 745.062 293.111 744.255 293.607 cv
744.43 292.175 744.605 290.743 744.779 289.31 cv
743.554 291.431 742.276 293.528 740.971 295.613 cv
739.275 296.641 737.572 297.661 735.866 298.67 cv
751.412 278.212 mo
751.172 279.468 750.932 280.724 750.639 281.97 cv
750.413 282.933 750.947 283.866 751.186 284.823 cv
751.399 284.1 751.635 283.382 751.904 282.674 cv
752.587 281.569 751.615 279.409 751.412 278.212 cv
f
740.881 265.872 mo
741.57 265.142 742.259 264.412 742.947 263.683 cv
742.904 264.137 742.869 264.602 742.837 265.073 cv
742.186 265.34 741.533 265.607 740.881 265.872 cv
.0352941 .443137 .909804 rgb
f
753.227 317.024 mo
752.303 313.684 751.378 310.345 750.454 307.005 cv
749.496 303.54 749.767 300.006 749.429 296.479 cv
749.57 294.291 749.956 292.09 750.218 289.891 cv
752.173 288.657 754.121 287.412 756.063 286.157 cv
757.352 292.286 758.674 298.415 760.547 304.398 cv
758.644 300.584 757.031 296.653 755.481 292.705 cv
755.696 293.594 755.92 294.481 756.155 295.365 cv
755.707 294.164 755.286 292.955 754.878 291.741 cv
755.049 295.675 755.097 299.438 754.778 303.377 cv
754.65 304.961 754.462 306.538 754.276 308.117 cv
753.926 311.086 753.576 314.055 753.227 317.024 cv
732.653 308.623 mo
733.758 305.327 734.795 301.994 735.866 298.67 cv
737.572 297.661 739.275 296.641 740.971 295.613 cv
738.24 299.973 735.39 304.278 732.653 308.623 cv
743.726 297.947 mo
743.902 296.501 744.079 295.054 744.255 293.607 cv
745.062 293.111 745.87 292.611 746.675 292.11 cv
745.686 294.075 744.656 296.016 743.726 297.947 cv
f
753.701 354.025 mo
752.958 354.025 li
753.079 352.44 753.209 350.856 753.332 349.271 cv
753.455 350.855 753.574 352.44 753.701 354.025 cv
.054902 .513725 .917647 rgb
f
757.001 354.025 mo
756.468 354.025 li
756.599 353.805 756.729 353.582 756.86 353.357 cv
756.907 353.579 756.954 353.802 757.001 354.025 cv
f
746.906 354.025 mo
742.593 354.025 li
744.281 350.895 746.364 347.903 748.217 344.891 cv
747.804 347.931 747.339 350.976 746.906 354.025 cv
741.447 354.025 mo
737.514 354.025 li
738.903 351.405 740.106 348.732 741.097 346.065 cv
741.393 348.731 741.524 351.368 741.447 354.025 cv
f
722.006 354.025 mo
719.014 354.025 li
719.951 353.537 720.885 353.046 721.819 352.55 cv
721.882 353.002 721.952 353.521 722.006 354.025 cv
f
719.014 354.025 mo
716.994 354.025 li
717.037 353.927 717.058 353.806 717.051 353.657 cv
717.032 353.271 717.885 353.099 718.22 352.944 cv
719.37 352.413 720.514 351.873 721.646 351.31 cv
721.665 351.501 721.737 351.971 721.819 352.55 cv
720.885 353.046 719.951 353.537 719.014 354.025 cv
.0352941 .443137 .909804 rgb
f
766.649 354.025 mo
766.379 354.025 li
765.249 349.539 764.119 345.054 762.989 340.568 cv
762.518 338.7 762.015 336.868 761.764 334.966 cv
761.459 332.663 761.467 330.37 761.638 328.084 cv
764.59 326.006 767.513 323.883 770.403 321.72 cv
770.634 322.251 770.873 322.778 771.126 323.3 cv
771.271 323.37 771.387 323.4 771.48 323.4 cv
772.089 323.4 771.704 322.1 771.667 321.878 cv
771.61 321.548 771.564 321.206 771.544 320.863 cv
771.668 320.77 771.791 320.676 771.914 320.583 cv
772.008 320.961 772.142 321.331 772.288 321.686 cv
772.272 321.237 772.255 320.787 772.239 320.338 cv
773.233 319.583 774.225 318.824 775.213 318.059 cv
775.375 318.493 775.537 318.926 775.7 319.36 cv
777.978 325.443 780.719 331.489 785.646 336.159 cv
784.201 335.273 782.837 334.277 781.556 333.196 cv
781.556 333.196 li
781.556 333.196 li
781.556 333.196 li
783.344 338.395 784.865 343.68 786.505 348.92 cv
784.911 346.427 783.317 343.933 781.723 341.44 cv
779.952 338.669 778.33 335.442 776.246 332.872 cv
775.618 337.373 774.878 341.862 774.193 346.356 cv
773.125 341.711 772.09 337.06 770.972 332.426 cv
770.843 332.99 770.715 333.554 770.587 334.119 cv
770.44 333.836 770.294 333.554 770.148 333.271 cv
770.268 335.467 770.659 337.607 771.528 339.655 cv
769.971 338.377 768.714 336.902 767.598 335.275 cv
768.259 338.203 767.408 341.81 767.225 344.759 cv
767.033 347.848 766.841 350.936 766.649 354.025 cv
.054902 .513725 .917647 rgb
f
761.638 328.084 mo
761.903 324.548 762.559 321.029 763.057 317.51 cv
763.267 319.002 763.446 320.497 763.637 321.99 cv
764.065 319.885 764.636 317.825 765.253 315.762 cv
765.232 317.772 765.243 319.77 765.396 321.776 cv
765.62 320.54 765.891 319.314 766.194 318.093 cv
766.609 319.658 767.09 321.21 767.642 322.737 cv
768.025 321.271 768.543 319.827 769.018 318.384 cv
769.479 319.496 769.923 320.615 770.403 321.72 cv
767.513 323.883 764.59 326.006 761.638 328.084 cv
771.544 320.863 mo
771.508 320.215 771.567 319.561 771.842 318.967 cv
771.73 319.506 771.782 320.052 771.914 320.583 cv
771.791 320.676 771.668 320.77 771.544 320.863 cv
772.239 320.338 mo
772.1 316.56 771.961 312.782 771.822 309.004 cv
772.952 312.023 774.083 315.041 775.213 318.059 cv
774.225 318.824 773.233 319.583 772.239 320.338 cv
.0352941 .443137 .909804 rgb
f
782.152 333.77 mo
782.092 333.77 781.631 333.415 781.556 333.196 cv
781.556 333.196 li
781.556 333.196 li
782.062 333.623 782.19 333.77 782.152 333.77 cv
.054902 .513725 .917647 rgb
f
748.294 229.889 mo
748.292 229.889 748.327 229.862 748.423 229.79 cv
748.423 229.79 li
748.423 229.79 li
748.564 229.689 748.616 229.653 748.618 229.653 cv
748.62 229.653 748.541 229.712 748.46 229.771 cv
748.379 229.83 748.297 229.889 748.294 229.889 cv
.0117647 .372549 .898039 rgb
f
746.743 230.971 mo
748.146 228.569 749.275 226.176 750.082 223.706 cv
750.485 222.475 751.152 221.425 751.559 220.209 cv
751.882 219.195 752.917 218.54 753.489 217.624 cv
755.572 214.292 757.65 210.957 759.731 207.625 cv
759.667 208.125 759.602 208.625 759.539 209.125 cv
760.672 205.688 761.636 202.179 762.43 198.628 cv
762.796 201.057 763.099 203.476 763.317 205.921 cv
763.577 208.848 765.318 211.761 766.621 214.41 cv
767.027 215.224 766.945 216.096 766.998 216.99 cv
767.066 218.528 767.245 220.06 767.377 221.593 cv
767.61 223.845 767.844 226.097 768.077 228.348 cv
766.151 225.037 764.129 221.755 762.371 218.363 cv
761.15 222.047 760.133 225.74 759.292 229.514 cv
758.748 225.918 758.366 222.342 758.172 218.713 cv
757.592 221.728 756.869 224.723 756.469 227.765 cv
756.375 227.06 756.304 226.352 756.239 225.644 cv
754.277 227.308 752.245 228.675 749.881 229.805 cv
750.105 229.258 750.348 228.714 750.544 228.157 cv
749.852 228.718 749.151 229.269 748.423 229.79 cv
748.423 229.79 li
748.423 229.79 li
747.879 230.201 747.307 230.582 746.743 230.971 cv
f
768.391 258.536 mo
768.385 258.469 768.383 258.445 768.384 258.445 cv
768.384 258.445 768.384 258.451 768.385 258.461 cv
768.385 258.461 li
768.391 258.536 li
f
768.401 258.63 mo
768.401 258.63 768.398 258.604 768.391 258.536 cv
768.394 258.547 li
768.394 258.547 li
768.398 258.59 768.401 258.63 768.401 258.63 cv
f
779.057 268.85 mo
777.761 267.939 776.45 267.044 775.192 266.087 cv
775.33 266.911 775.468 267.735 775.606 268.558 cv
774.242 266.812 772.858 265.077 771.518 263.314 cv
770.527 262.011 768.566 260.185 768.394 258.547 cv
768.394 258.547 li
768.385 258.461 li
768.385 258.461 li
768.249 256.9 768.161 255.351 768.156 253.806 cv
770.054 252.892 771.947 251.965 773.834 251.023 cv
774.098 251.747 774.386 252.457 774.708 253.147 cv
775.551 254.956 776.344 255.833 778.035 256.847 cv
778.919 257.376 779.368 257.477 779.64 258.377 cv
780.282 260.508 780.925 262.639 781.567 264.771 cv
780.448 264.132 779.328 263.493 778.209 262.853 cv
778.444 264.861 778.74 266.853 779.057 268.85 cv
f
768.156 253.806 mo
768.147 251.632 768.301 249.466 768.704 247.288 cv
769.207 248.782 769.772 250.043 770.68 251.373 cv
770.754 247.724 770.827 244.075 770.901 240.426 cv
771.896 243.859 772.586 247.596 773.834 251.023 cv
771.947 251.965 770.054 252.892 768.156 253.806 cv
.0352941 .443137 .909804 rgb
f
768.394 258.547 mo
768.391 258.536 li
768.385 258.461 li
768.394 258.547 li
.0117647 .372549 .898039 rgb
f
768.841 271.147 mo
768.84 271.147 768.84 271.147 768.84 271.146 cv
768.882 271.008 768.917 270.868 768.959 270.73 cv
768.959 270.73 li
768.959 270.73 li
769.007 270.601 769.063 270.471 769.119 270.342 cv
769.071 270.511 768.854 271.147 768.841 271.147 cv
f
768.077 273.803 mo
767.397 272.91 766.732 272.006 766.085 271.092 cv
765.645 270.393 764.369 269.058 764.288 268.24 cv
764.209 267.432 765.159 265.949 765.445 265.196 cv
765.812 264.184 766.164 263.167 766.508 262.148 cv
767.596 263.772 768.632 265.42 769.656 267.078 cv
770.3 268.124 769.6 269.239 769.119 270.342 cv
769.127 270.316 769.13 270.301 769.128 270.301 cv
769.122 270.301 769.076 270.414 768.959 270.73 cv
768.959 270.73 li
768.959 270.73 li
768.869 271.023 768.838 271.135 768.84 271.146 cv
768.573 272.029 768.317 272.914 768.077 273.803 cv
f
785.332 303.233 mo
785.332 303.233 li
785.332 303.233 li
785.332 303.233 li
785.332 303.233 li
785.332 303.233 li
785.332 303.233 mo
785.325 303.225 785.319 303.217 785.313 303.21 cv
785.304 303.199 785.295 303.188 785.286 303.177 cv
784.368 302.039 783.422 300.212 783.519 300.212 cv
783.519 300.212 783.519 300.212 783.52 300.212 cv
783.52 300.212 783.52 300.212 783.521 300.213 cv
783.521 300.213 783.522 300.213 783.522 300.213 cv
783.522 300.213 783.522 300.213 783.522 300.213 cv
783.598 300.237 784.107 301.022 785.332 303.233 cv
785.332 303.233 li
.0352941 .443137 .909804 rgb
f
784.077 309.643 mo
783.52 309.12 780.846 306.278 780.25 306.278 cv
780.218 306.278 780.192 306.286 780.173 306.303 cv
779.605 305.322 778.748 304.432 777.981 303.574 cv
778.126 304.141 778.275 304.707 778.43 305.272 cv
778.237 305.048 778.008 304.837 777.803 304.623 cv
777.915 305.174 778.027 305.726 778.139 306.277 cv
775.079 304.061 771.424 301.982 769.366 298.852 cv
768.858 298.079 768.43 297.263 768.068 296.422 cv
767.737 295.652 767.049 295.213 766.4 294.654 cv
765.781 294.121 765.281 293.861 765.104 293.113 cv
764.452 290.36 763.766 287.617 763.057 284.876 cv
764.832 286.348 766.607 287.818 768.35 289.323 cv
767.901 287.363 767.626 285.413 767.449 283.419 cv
768.335 285.4 769.323 287.296 770.493 289.149 cv
770.654 287.666 770.994 286.161 771.842 284.876 cv
771.696 286.961 772.641 289.001 773.684 290.798 cv
773.222 286.313 773.437 281.738 773.421 277.237 cv
777.127 286.002 780.685 294.848 785.332 303.233 cv
785.332 303.233 li
784.107 301.022 783.598 300.237 783.522 300.213 cv
783.522 300.213 783.522 300.213 783.522 300.213 cv
783.522 300.213 783.521 300.213 783.521 300.213 cv
783.52 300.212 783.52 300.212 783.52 300.212 cv
783.519 300.212 783.519 300.212 783.519 300.212 cv
783.422 300.212 784.368 302.039 785.286 303.177 cv
785.295 303.188 785.304 303.199 785.313 303.21 cv
785.319 303.217 785.325 303.225 785.332 303.233 cv
785.332 303.233 li
785.332 303.233 li
783.799 301.37 782.325 299.465 780.895 297.533 cv
781.527 299.631 782.358 301.739 783.347 303.74 cv
783.717 304.491 783.564 304.336 782.897 304.723 cv
782.597 304.897 783.05 305.925 783.122 306.206 cv
783.421 307.356 783.752 308.499 784.077 309.643 cv
785.332 303.233 mo
785.332 303.233 li
785.332 303.233 li
785.332 303.233 li
785.332 303.233 mo
785.332 303.233 li
785.332 303.233 li
785.332 303.233 li
f
793.917 354.025 mo
792.762 354.025 li
792.931 352.501 793.1 350.977 793.269 349.454 cv
793.485 350.977 793.701 352.501 793.917 354.025 cv
.054902 .513725 .917647 rgb
f
147.043 323.256 mo
151.19 324.364 155.29 325.991 159.272 328.093 cv
155.227 321.21 151.511 314.017 148.054 306.724 cv
142.631 295.283 136.784 282.29 135.566 269.339 cv
134.687 276.69 133.329 283.957 131.697 291.057 cv
129.002 302.778 125.442 315.797 118.369 324.249 cv
120.718 323.212 123.236 322.624 125.725 322.186 cv
122.738 330.009 119.337 337.37 114.759 343.815 cv
118.057 342.422 121.22 340.743 124.232 338.628 cv
122.529 345.478 120.26 351.906 117.263 357.679 cv
161.095 357.679 li
158.089 353.582 155.372 349.15 153.096 344.375 cv
156.034 346.763 159.146 348.641 162.298 350.404 cv
155.93 342.616 150.322 333.576 147.043 323.256 cv
cp
.188235 .831373 1 rgb
f
319.095 290.245 mo
319.729 290.698 320.376 291.152 321.025 291.6 cv
322.24 292.419 323.46 293.214 324.627 293.952 cv
322.86 292.913 321.135 291.849 319.455 290.762 cv
319.38 290.614 319.254 290.438 319.095 290.245 cv
324.395 309.514 mo
324.541 309.6 324.69 309.685 324.836 309.771 cv
324.047 309.494 323.214 309.199 322.375 308.903 cv
322.228 308.745 322.081 308.586 321.934 308.427 cv
322.72 308.779 323.552 309.143 324.395 309.514 cv
337.451 360.671 mo
335.958 359.204 334.578 357.634 333.338 355.979 cv
334.95 356.855 336.576 357.704 338.234 358.506 cv
336.693 356.848 335.216 355.142 333.786 353.402 cv
334.74 354.137 335.754 354.84 336.668 355.62 cv
334.607 352.903 332.545 350.186 330.535 347.437 cv
335.509 349.591 340.473 351.837 345.311 354.336 cv
341.515 349.864 337.232 345.621 332.874 341.456 cv
336.719 342.434 340.604 343.281 344.499 344.076 cv
336.814 339.032 324.793 332.547 320.476 324.411 cv
326.198 327.585 331.912 330.849 337.555 334.288 cv
334.078 330.447 330.403 326.716 326.667 323.045 cv
328.184 324.025 329.691 325.022 331.185 326.038 cv
329.739 323.501 328.269 320.976 326.697 318.507 cv
326.875 318.563 327.062 318.622 327.262 318.682 cv
328.721 319.146 330.721 319.701 332.711 320.161 cv
334.712 320.618 336.724 320.932 338.217 321.106 cv
338.962 321.2 339.592 321.232 340.023 321.274 cv
340.454 321.309 340.701 321.33 340.701 321.33 cv
340.701 321.33 340.5 321.193 340.149 320.955 cv
339.801 320.711 339.297 320.393 338.724 319.963 cv
337.569 319.117 336.104 317.945 334.753 316.692 cv
333.402 315.429 332.135 314.133 331.215 313.111 cv
330.752 312.615 330.374 312.176 330.109 311.879 cv
330.093 311.861 li
330.364 311.967 330.629 312.069 330.878 312.162 cv
332.421 312.756 333.45 313.152 333.45 313.152 cv
333.45 313.152 332.738 312.359 331.669 311.169 cv
330.608 310.012 329.267 308.417 327.921 306.847 cv
327.35 305.833 326.661 304.613 325.972 303.389 cv
324.433 300.541 322.899 297.701 322.787 297.493 cv
323.236 297.63 323.686 297.766 324.137 297.898 cv
323.293 297.381 322.449 296.864 321.605 296.347 cv
323.262 296.364 324.898 296.293 326.526 296.098 cv
328.17 296.766 329.842 297.407 331.53 298.034 cv
331.766 298.167 331.896 298.24 331.896 298.24 cv
331.801 298.134 li
332.329 298.33 332.851 298.53 333.384 298.721 cv
332.718 298.387 332.065 298.044 331.412 297.701 cv
331.341 297.622 331.27 297.543 331.185 297.448 cv
330.738 296.939 330.076 296.24 329.332 295.356 cv
327.814 293.619 325.885 291.244 324.067 288.834 cv
322.272 286.401 320.592 283.937 319.433 282.049 cv
318.829 281.122 318.394 280.31 318.061 279.764 cv
317.737 279.213 317.552 278.898 317.552 278.898 cv
317.552 278.898 317.272 278.652 316.782 278.221 cv
316.301 277.783 315.567 277.183 314.762 276.408 cv
314.65 276.305 314.53 276.192 314.414 276.084 cv
317.908 277.127 321.416 278.128 324.92 279.139 cv
322.772 277.049 320.609 274.969 318.464 272.874 cv
318.693 272.916 li
321.239 273.328 323.77 273.582 325.66 273.654 cv
326.598 273.716 327.392 273.685 327.934 273.701 cv
328.478 273.705 328.788 273.707 328.788 273.707 cv
328.788 273.707 328.506 273.584 328.012 273.369 cv
327.523 273.143 326.814 272.875 326.002 272.46 cv
324.36 271.682 322.268 270.516 320.298 269.254 cv
319.174 268.511 318.09 267.745 317.117 267.018 cv
317.891 266.977 318.665 266.93 319.438 266.873 cv
318.322 266.272 315.634 264.985 313.889 263.801 cv
314.585 263.93 315.293 264.061 316.007 264.177 cv
318.07 264.448 320.077 264.737 321.608 264.836 cv
323.119 264.963 324.127 265.048 324.127 265.048 cv
324.127 265.048 323.308 264.501 322.079 263.68 cv
320.843 262.893 319.288 261.706 317.757 260.573 cv
317.007 259.978 316.283 259.363 315.604 258.803 cv
315.267 258.519 314.935 258.258 314.638 257.988 cv
314.346 257.715 314.069 257.456 313.814 257.218 cv
312.812 256.275 312.144 255.647 312.144 255.647 cv
312.144 255.647 311.258 255.407 309.927 255.045 cv
309.989 255.044 li
311.971 255.016 313.953 254.988 315.44 254.967 cv
315.955 254.963 316.406 254.959 316.781 254.956 cv
317.577 255.144 318.332 255.313 319.029 255.459 cv
320.394 255.777 321.552 255.976 322.351 256.142 cv
323.151 256.299 323.609 256.389 323.609 256.389 cv
323.609 256.389 323.197 256.183 322.475 255.822 cv
321.759 255.454 320.72 254.967 319.512 254.308 cv
317.071 253.049 313.911 251.23 310.873 249.323 cv
307.848 247.384 304.982 245.314 302.951 243.677 cv
302.43 243.284 301.978 242.895 301.581 242.55 cv
301.183 242.208 300.836 241.91 300.55 241.665 cv
300.213 241.376 299.964 241.162 299.815 241.034 cv
299.7 240.88 299.585 240.723 299.469 240.563 cv
300.754 241.56 302.194 242.631 303.605 243.707 cv
306.014 245.375 308.342 247.064 310.209 248.2 cv
312.034 249.361 313.25 250.136 313.25 250.136 cv
313.25 250.136 312.411 249.013 311.152 247.327 cv
309.862 245.681 308.338 243.341 306.784 241.079 cv
305.337 238.725 303.857 236.444 302.897 234.638 cv
302.4 233.751 301.985 233.013 301.696 232.496 cv
301.407 231.98 301.245 231.685 301.245 231.685 cv
301.245 231.685 301.157 231.607 301.006 231.474 cv
300.845 231.115 300.681 230.757 300.521 230.397 cv
308.278 237.294 316.74 243.094 326.486 247.392 cv
317.219 240.002 310.018 231.073 304.183 221.168 cv
309.437 225.275 315.33 228.572 321.787 230.797 cv
306.166 221.785 296.949 206.062 291.458 190.287 cv
292.169 191.525 292.881 192.762 293.593 193.999 cv
293.094 192.842 292.596 191.685 292.097 190.527 cv
298.913 198.557 306.339 206.097 313.956 213.48 cv
307.442 203.231 301.207 192.832 296.039 181.939 cv
299.832 186.507 304.027 190.696 308.473 194.721 cv
303.068 188.053 298.421 181.049 294.505 173.539 cv
298.951 178.835 303.627 183.96 308.473 188.948 cv
303.365 181.966 298.544 174.808 294.142 167.427 cv
290.071 160.603 284.743 153.217 285.176 145.161 cv
286.505 147.371 294.871 156.46 298.091 158.336 cv
293.984 151.509 290.281 144.465 286.994 137.231 cv
285.556 134.064 283.426 130.321 281.606 126.468 cv
275.957 116.699 271.763 106.095 268.206 95.2716 cv
264.158 107.418 259.22 119.19 252.698 129.925 cv
250.511 135.419 248.106 140.905 245.207 146.109 cv
244.458 147.455 243.685 148.779 242.903 150.097 cv
242.369 150.643 241.845 151.119 241.382 151.559 cv
241.111 151.812 240.857 152.049 240.623 152.268 cv
240.379 152.475 240.155 152.666 239.952 152.838 cv
239.133 153.533 238.668 153.927 238.668 153.927 cv
238.668 153.927 239.271 153.751 240.332 153.44 cv
240.599 153.361 240.896 153.274 241.219 153.178 cv
241.537 153.069 241.88 152.951 242.247 152.825 cv
242.98 152.566 243.83 152.29 244.718 151.92 cv
245.767 151.515 246.919 151.023 248.125 150.473 cv
242.902 161.729 233.606 170.824 223.891 179.57 cv
229.504 177.149 235.094 174.646 240.389 171.668 cv
235.162 176.441 228.975 180.298 222.324 183.177 cv
228.252 183.356 234.149 182.788 239.926 181.549 cv
237.139 186.146 234.088 192.318 229.18 195.212 cv
225.646 197.296 222.013 199.238 218.409 201.215 cv
220.528 201.263 222.648 201.319 224.768 201.355 cv
219.232 207.136 212.953 212.242 205.878 216.367 cv
210.64 214.587 215.198 212.413 219.53 209.864 cv
222.876 207.894 229.19 201.452 232.861 201.347 cv
227.956 209.513 222.547 217.321 216.842 225.025 cv
222.513 221.265 228.099 217.434 233.494 213.339 cv
225.034 226.905 213.42 238.538 204.311 251.722 cv
210.333 247.535 216.597 243.706 222.924 239.922 cv
216.464 250.96 206.565 259.751 199.613 270.481 cv
202.347 269.013 205.171 267.713 208.033 266.487 cv
207.588 266.906 207.147 267.327 206.692 267.741 cv
207.661 267.116 208.618 266.481 209.565 265.839 cv
211.992 264.824 214.44 263.85 216.881 262.862 cv
213.344 268.083 209.475 273.134 205.44 278.082 cv
201.649 280.579 197.519 282.33 193.149 282.699 cv
193.142 282.7 li
191.666 282.82 196.052 283.566 196.36 283.603 cv
199.244 283.952 202.197 283.762 205.055 283.309 cv
201.588 284.94 197.902 286.199 194.13 287.077 cv
198.976 288.138 203.952 288.512 208.918 288.365 cv
204.34 292.252 198.936 295.516 192.558 297.824 cv
199.544 296.619 205.978 294.389 211.755 291.346 cv
205.402 299.447 197.586 306.464 187.609 311.792 cv
197.928 309.31 207.03 305.341 215.471 300.286 cv
215.606 300.246 215.741 300.206 215.875 300.166 cv
215.423 300.947 214.962 301.723 214.506 302.503 cv
214.412 302.573 214.319 302.644 214.224 302.714 cv
211.984 304.432 209.607 306.008 207.356 307.469 cv
205.084 308.895 202.924 310.192 201.032 311.234 cv
200.09 311.766 199.22 312.242 198.44 312.647 cv
197.663 313.059 196.985 313.423 196.419 313.701 cv
195.287 314.271 194.644 314.595 194.644 314.595 cv
194.644 314.595 195.371 314.511 196.651 314.365 cv
197.296 314.297 198.071 314.187 198.967 314.064 cv
199.865 313.948 200.876 313.796 201.981 313.614 cv
204.199 313.271 206.78 312.776 209.577 312.177 cv
211.295 311.782 213.101 311.347 214.936 310.856 cv
214.023 312.424 213.079 313.896 212.143 315.216 cv
215.223 313.895 218.263 312.468 221.193 310.875 cv
220.04 312.501 218.82 314.049 217.583 315.453 cv
216.129 317.084 214.641 318.502 213.254 319.614 cv
211.87 320.73 210.583 321.526 209.637 322.027 cv
209.168 322.291 208.781 322.459 208.517 322.584 cv
208.251 322.707 208.11 322.772 208.11 322.772 cv
208.11 322.772 208.267 322.768 208.563 322.761 cv
208.86 322.752 209.303 322.751 209.861 322.693 cv
210.751 322.623 211.961 322.462 213.379 322.142 cv
209.959 324.708 206.001 327.081 203.109 326.577 cv
204.216 327.775 197.407 329.445 195.385 330.06 cv
197.849 330.547 200.33 330.992 202.824 331.297 cv
198.468 334.376 193.933 337.275 189.491 340.202 cv
195.945 339.618 202.497 339.072 209.007 338.262 cv
206.541 341.677 204.016 345.08 200.779 348.021 cv
199.586 349.105 193.516 351.976 196.108 352.155 cv
192.796 353.44 189.234 354.273 185.335 354.472 cv
187.938 355.326 190.556 355.895 193.235 356.308 cv
192.311 356.627 191.388 356.946 190.466 357.264 cv
193.265 357.041 196.019 356.695 198.957 356.831 cv
197.853 357.698 196.75 358.563 195.65 359.428 cv
196.947 359.05 198.246 358.67 199.548 358.289 cv
196.567 361.331 193.218 364.103 189.654 366.67 cv
193.65 366.67 li
193.906 366.585 li
193.789 366.67 li
338.81 366.67 li
338.655 366.595 338.494 366.527 338.339 366.452 cv
338.632 366.529 338.93 366.595 339.225 366.67 cv
349.31 366.67 li
344.748 365.065 340.394 362.84 336.325 360.255 cv
336.699 360.397 337.073 360.538 337.451 360.671 cv
.00784314 .286275 .858824 rgb
f
237.316 341.481 mo
237.166 340.679 236.94 339.891 236.735 339.1 cv
236.502 339.362 236.269 339.624 236.037 339.887 cv
237.409 335.378 238.799 330.875 240.187 326.371 cv
243.08 325.089 245.963 323.784 248.839 322.457 cv
246.56 328.075 244.105 333.688 242.35 339.462 cv
242.564 336.888 242.874 334.32 243.157 331.752 cv
241.154 334.965 239.107 338.159 237.316 341.481 cv
230.439 337.075 mo
230.884 335.006 232.251 332.866 233.014 330.817 cv
233.21 330.292 233.406 329.767 233.602 329.242 cv
234.864 328.701 236.122 328.156 237.38 327.606 cv
235.036 330.744 232.699 333.886 230.439 337.075 cv
300.286 300.527 mo
299.596 299.497 298.963 298.448 298.391 297.377 cv
298.765 297.173 299.14 296.969 299.515 296.764 cv
299.737 298.025 299.996 299.281 300.286 300.527 cv
.0431373 .396078 .886274 rgb
f
324.067 288.834 mo
324.052 288.815 324.038 288.795 324.023 288.775 cv
324.038 288.795 324.052 288.814 324.067 288.834 cv
324.002 288.746 mo
323.992 288.733 323.983 288.72 323.974 288.708 cv
323.983 288.72 323.992 288.733 324.002 288.746 cv
323.965 288.696 mo
322.966 287.337 322.004 285.972 321.152 284.707 cv
321.154 284.705 321.154 284.706 321.156 284.704 cv
321.156 284.704 li
321.156 284.704 li
322.011 285.974 322.962 287.332 323.965 288.696 cv
.227451 .603922 .976471 rgb
f
345.045 354.025 mo
344.704 354.025 li
340.058 351.65 335.301 349.501 330.535 347.437 cv
330.535 347.437 li
330.535 347.437 li
332.151 349.648 333.802 351.838 335.458 354.025 cv
334.612 354.025 li
334.334 353.818 334.058 353.611 333.786 353.402 cv
333.786 353.402 li
333.786 353.402 li
333.957 353.61 334.129 353.817 334.301 354.025 cv
286.314 354.025 li
283.548 350.837 281.522 347.164 279.858 343.38 cv
281.715 344.427 283.603 345.45 285.565 346.319 cv
285.337 346.218 285.251 346.181 285.249 346.181 cv
285.245 346.181 285.399 346.251 285.555 346.322 cv
285.711 346.392 285.869 346.463 285.873 346.463 cv
285.876 346.463 285.806 346.43 285.614 346.341 cv
286.194 346.609 286.774 346.877 287.354 347.145 cv
285.419 344.54 283.467 341.914 281.95 339.072 cv
282.583 339.54 283.246 339.97 283.901 340.411 cv
283.901 340.411 li
283.901 340.411 li
283.651 339.125 283.447 337.846 283.281 336.548 cv
283.201 335.548 283.505 333.661 283.084 332.756 cv
282.663 331.851 280.982 330.767 280.255 330.024 cv
279.358 329.019 278.507 328.001 277.686 326.942 cv
277.298 329.472 277.137 331.976 277.205 334.531 cv
274.933 332.771 273.897 329.435 273.717 326.705 cv
273.514 323.613 273.31 320.522 273.106 317.43 cv
271.582 321.326 270.183 325.288 268.526 329.136 cv
268.376 328.295 268.212 327.455 268.018 326.621 cv
268.382 329.992 267.358 333.138 267.558 336.527 cv
266.63 332.619 266.003 328.68 265.6 324.697 cv
264.781 327.024 264.026 329.364 263.384 331.74 cv
262.983 333.19 262.648 334.655 262.335 336.124 cv
262.155 336.971 261.595 338.376 261.831 339.232 cv
263.154 344.037 264.954 348.637 267.672 352.918 cv
267.672 352.918 li
267.672 352.918 li
267.101 348.618 267.237 344.315 267.95 340.033 cv
268.6 344.251 268.714 348.441 269.926 352.584 cv
270.066 353.064 270.207 353.544 270.347 354.025 cv
245.901 354.025 li
246.258 351.059 246.883 348.149 247.689 345.193 cv
248.618 341.787 249.984 338.483 249.869 334.956 cv
249.729 330.695 249.589 326.435 249.45 322.174 cv
253.436 320.33 257.405 318.445 261.363 316.521 cv
261.851 318.002 262.34 319.483 262.829 320.964 cv
263.017 319.152 263.259 317.322 263.49 315.483 cv
266.067 314.22 268.637 312.943 271.204 311.65 cv
272.081 312.483 272.973 313.303 273.888 314.114 cv
273.389 313.083 272.91 312.054 272.455 311.018 cv
279.725 307.341 286.958 303.547 294.163 299.666 cv
294.11 300.748 294.149 301.819 294.442 302.67 cv
295.049 304.431 296.997 306.333 298.167 307.796 cv
299.465 309.402 300.827 310.96 302.201 312.511 cv
302.201 312.511 li
302.201 312.511 li
301.47 308.933 300.806 305.347 300.582 301.706 cv
301.178 304.014 301.89 306.144 303.024 308.268 cv
302.979 308.184 302.957 308.149 302.953 308.149 cv
302.941 308.149 303.041 308.38 303.146 308.612 cv
303.251 308.843 303.36 309.074 303.366 309.074 cv
303.373 309.074 303.288 308.87 303.024 308.268 cv
306.429 316.014 312.067 323.111 316.754 330.221 cv
314.171 322.531 311.643 314.824 308.942 307.169 cv
310.419 309.004 311.977 310.782 313.596 312.511 cv
313.596 312.511 li
313.596 312.511 li
309.609 306.712 306.305 300.629 304.444 294.061 cv
310.021 290.986 315.591 287.862 321.152 284.707 cv
322.004 285.972 322.966 287.337 323.965 288.696 cv
323.968 288.7 323.971 288.704 323.974 288.708 cv
323.983 288.72 323.992 288.733 324.002 288.746 cv
324.009 288.756 324.016 288.765 324.023 288.775 cv
324.038 288.795 324.052 288.815 324.067 288.834 cv
324.067 288.834 li
325.885 291.244 327.814 293.619 329.332 295.356 cv
330.076 296.24 330.738 296.939 331.185 297.448 cv
331.27 297.543 331.341 297.622 331.412 297.701 cv
332.065 298.044 332.718 298.387 333.384 298.721 cv
332.851 298.53 332.329 298.33 331.801 298.134 cv
331.801 298.134 li
331.801 298.134 li
331.896 298.24 li
331.896 298.24 331.766 298.167 331.53 298.034 cv
329.842 297.407 328.17 296.766 326.526 296.098 cv
325.05 296.275 323.567 296.35 322.068 296.35 cv
321.914 296.35 321.759 296.349 321.605 296.347 cv
321.605 296.347 li
321.605 296.347 li
322.449 296.864 323.293 297.381 324.137 297.898 cv
323.686 297.766 323.236 297.63 322.787 297.493 cv
322.787 297.493 li
322.787 297.493 li
322.899 297.701 324.433 300.541 325.972 303.389 cv
326.661 304.613 327.35 305.833 327.921 306.847 cv
329.267 308.417 330.608 310.012 331.669 311.169 cv
332.738 312.359 333.45 313.152 333.45 313.152 cv
333.45 313.152 332.421 312.756 330.878 312.162 cv
330.629 312.069 330.364 311.967 330.093 311.861 cv
330.093 311.861 li
330.093 311.861 li
330.109 311.879 li
330.374 312.176 330.752 312.615 331.215 313.111 cv
332.135 314.133 333.402 315.429 334.753 316.692 cv
336.104 317.945 337.569 319.117 338.724 319.963 cv
339.297 320.393 339.801 320.711 340.149 320.955 cv
340.5 321.193 340.701 321.33 340.701 321.33 cv
340.701 321.33 340.454 321.309 340.023 321.274 cv
339.592 321.232 338.962 321.2 338.217 321.106 cv
336.724 320.932 334.712 320.618 332.711 320.161 cv
330.721 319.701 328.721 319.146 327.262 318.682 cv
327.062 318.622 326.875 318.563 326.697 318.507 cv
326.697 318.507 li
326.697 318.507 li
328.269 320.976 329.739 323.501 331.185 326.038 cv
329.691 325.022 328.184 324.025 326.667 323.045 cv
326.667 323.045 li
326.667 323.045 li
330.403 326.716 334.078 330.447 337.555 334.288 cv
331.912 330.849 326.198 327.585 320.476 324.411 cv
320.476 324.411 li
320.476 324.411 li
324.793 332.547 336.814 339.032 344.499 344.076 cv
340.604 343.281 336.719 342.434 332.874 341.456 cv
332.874 341.456 li
332.874 341.456 li
337.13 345.524 341.316 349.667 345.045 354.025 cv
324.836 309.771 mo
324.836 309.771 li
324.69 309.685 324.541 309.6 324.395 309.514 cv
323.552 309.143 322.72 308.779 321.934 308.427 cv
321.934 308.427 li
321.934 308.427 li
322.081 308.586 322.228 308.745 322.375 308.903 cv
323.214 309.199 324.047 309.494 324.836 309.771 cv
324.836 309.771 li
324.627 293.952 mo
324.627 293.952 li
323.46 293.214 322.24 292.419 321.025 291.6 cv
320.376 291.152 319.729 290.698 319.095 290.245 cv
319.095 290.245 li
319.095 290.245 li
319.254 290.438 319.38 290.614 319.455 290.762 cv
321.135 291.849 322.86 292.913 324.627 293.952 cv
324.627 293.952 li
286.054 354.025 mo
277.789 354.025 li
277.559 349.815 277.352 345.607 276.682 341.433 cv
277.627 342.036 278.243 343.923 278.814 344.864 cv
279.54 346.067 280.31 347.247 281.135 348.393 cv
282.584 350.404 284.208 352.316 286.054 354.025 cv
276.579 354.025 mo
272.431 354.025 li
272.62 352.224 272.768 350.421 272.782 348.623 cv
274.042 350.427 275.311 352.226 276.579 354.025 cv
244.539 354.025 mo
239.066 354.025 li
239.218 353.196 239.418 352.371 239.672 351.548 cv
239.559 352.324 239.453 353.101 239.359 353.88 cv
240.463 351.303 241.691 348.772 243.038 346.296 cv
243.029 346.309 243.023 346.316 243.022 346.316 cv
243.012 346.316 243.184 345.994 243.737 345.019 cv
243.799 348.081 244.034 351.06 244.539 354.025 cv
236.892 354.025 mo
236.131 354.025 li
236.221 353.382 236.327 352.741 236.438 352.101 cv
236.567 352.754 236.718 353.394 236.892 354.025 cv
235.894 354.025 mo
231.818 354.025 li
232.839 350.368 234.009 346.746 235.886 343.417 cv
236.155 345.047 235.847 346.957 235.99 348.667 cv
236.138 350.443 235.955 352.234 235.894 354.025 cv
.0431373 .396078 .886274 rgb
f
226.571 354.025 mo
225.94 354.025 li
226.087 352.887 226.269 351.762 226.88 350.765 cv
226.733 351.846 226.633 352.933 226.571 354.025 cv
f
200.779 348.021 mo
200.8 348.002 200.82 347.984 200.841 347.965 cv
200.82 347.984 200.8 348.002 200.779 348.021 cv
200.85 347.957 mo
200.869 347.939 200.888 347.922 200.907 347.904 cv
200.888 347.922 200.869 347.939 200.85 347.957 cv
200.92 347.893 mo
200.938 347.876 200.957 347.859 200.975 347.841 cv
200.957 347.858 200.938 347.876 200.92 347.893 cv
200.989 347.829 mo
201.007 347.812 201.026 347.794 201.044 347.777 cv
201.026 347.794 201.007 347.812 200.989 347.829 cv
201.056 347.767 mo
201.074 347.75 201.091 347.734 201.109 347.717 cv
201.091 347.734 201.073 347.751 201.056 347.767 cv
201.117 347.71 mo
201.135 347.693 201.154 347.675 201.173 347.658 cv
201.154 347.675 201.135 347.693 201.117 347.71 cv
201.186 347.645 mo
201.205 347.628 201.223 347.611 201.241 347.594 cv
201.223 347.611 201.205 347.628 201.186 347.645 cv
201.254 347.581 mo
201.272 347.564 201.291 347.547 201.309 347.53 cv
201.29 347.547 201.272 347.564 201.254 347.581 cv
201.321 347.518 mo
201.341 347.5 201.36 347.481 201.379 347.463 cv
201.36 347.481 201.341 347.5 201.321 347.518 cv
201.38 347.462 mo
201.4 347.443 201.42 347.424 201.44 347.405 cv
201.42 347.424 201.4 347.443 201.38 347.462 cv
201.447 347.398 mo
201.467 347.379 201.486 347.361 201.506 347.342 cv
201.486 347.361 201.467 347.379 201.447 347.398 cv
201.514 347.334 mo
201.533 347.315 201.553 347.297 201.572 347.278 cv
201.553 347.297 201.533 347.315 201.514 347.334 cv
201.58 347.271 mo
201.6 347.251 201.621 347.231 201.641 347.212 cv
201.62 347.231 201.6 347.251 201.58 347.271 cv
201.641 347.211 mo
204.134 344.793 206.207 342.104 208.198 339.376 cv
208.198 339.376 li
208.198 339.376 li
208.198 339.376 li
206.208 342.104 204.134 344.793 201.641 347.211 cv
.227451 .603922 .976471 rgb
f
210.547 354.025 mo
189.385 354.025 li
191.745 353.621 193.978 352.981 196.108 352.155 cv
196.108 352.155 li
196.108 352.155 li
195.658 352.124 195.469 352.011 195.47 351.841 cv
195.479 351.032 199.793 348.917 200.779 348.021 cv
200.779 348.021 li
200.8 348.002 200.82 347.984 200.841 347.965 cv
200.844 347.962 200.847 347.959 200.85 347.957 cv
200.869 347.939 200.888 347.922 200.907 347.904 cv
200.911 347.9 200.915 347.896 200.92 347.893 cv
200.938 347.876 200.957 347.858 200.975 347.841 cv
200.98 347.837 200.984 347.833 200.989 347.829 cv
201.007 347.812 201.026 347.794 201.044 347.777 cv
201.048 347.774 201.052 347.771 201.056 347.767 cv
201.073 347.751 201.091 347.734 201.109 347.717 cv
201.112 347.715 201.114 347.713 201.117 347.71 cv
201.135 347.693 201.154 347.675 201.173 347.658 cv
201.177 347.653 201.182 347.649 201.186 347.645 cv
201.205 347.628 201.223 347.611 201.241 347.594 cv
201.246 347.589 201.25 347.586 201.254 347.581 cv
201.272 347.564 201.29 347.547 201.309 347.53 cv
201.313 347.526 201.317 347.522 201.321 347.518 cv
201.341 347.5 201.36 347.481 201.379 347.463 cv
201.379 347.463 201.38 347.462 201.38 347.462 cv
201.4 347.443 201.42 347.424 201.44 347.405 cv
201.442 347.403 201.445 347.4 201.447 347.398 cv
201.467 347.379 201.486 347.361 201.506 347.342 cv
201.509 347.339 201.511 347.337 201.514 347.334 cv
201.533 347.315 201.553 347.297 201.572 347.278 cv
201.575 347.275 201.577 347.273 201.58 347.271 cv
201.6 347.251 201.62 347.231 201.641 347.212 cv
201.641 347.211 li
204.134 344.793 206.208 342.104 208.199 339.376 cv
212.03 337.966 215.841 336.507 219.635 335.004 cv
219.5 335.093 219.365 335.182 219.232 335.271 cv
218.651 335.656 218.329 336.36 217.935 336.901 cv
216.854 338.387 215.717 339.839 214.545 341.265 cv
212.633 343.59 210.627 345.847 208.628 348.108 cv
211.252 346.734 213.876 345.363 216.454 343.916 cv
215.007 346.043 213.58 348.184 212.238 350.37 cv
211.968 350.808 211.702 351.249 211.439 351.692 cv
211.309 351.914 211.179 352.136 211.048 352.359 cv
211.208 352.453 211.367 352.548 211.526 352.643 cv
211.314 352.973 210.72 353.553 210.547 354.025 cv
.0431373 .396078 .886274 rgb
f
323.609 256.389 mo
323.609 256.389 323.151 256.299 322.351 256.142 cv
322.344 256.14 322.338 256.139 322.331 256.138 cv
322.338 256.139 322.344 256.14 322.351 256.142 cv
323.151 256.299 323.609 256.389 323.609 256.389 cv
323.609 256.389 li
322.242 255.704 mo
321.949 255.556 321.612 255.391 321.241 255.206 cv
321.241 255.206 321.241 255.206 321.241 255.206 cv
321.611 255.39 321.948 255.556 322.242 255.704 cv
level3{
gsave
clp
[3.8096e-009 84.8528 -84.8528 3.8096e-009 450 214 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.8096e-009 84.8528 -84.8528 3.8096e-009 450 214 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
323.609 256.389 mo
323.609 256.389 323.151 256.299 322.351 256.142 cv
322.344 256.14 322.338 256.139 322.331 256.138 cv
321.839 256.036 321.201 255.918 320.475 255.771 cv
320.731 255.584 320.985 255.393 321.241 255.206 cv
321.612 255.391 321.949 255.556 322.242 255.704 cv
322.323 255.745 322.401 255.784 322.475 255.822 cv
323.197 256.183 323.609 256.389 323.609 256.389 cv
.0431373 .396078 .886274 rgb
f
268.17 308.645 mo
268.165 308.625 268.029 308.462 267.887 308.299 cv
267.887 308.299 li
267.887 308.299 li
268.029 308.462 268.165 308.625 268.17 308.645 cv
267.799 308.24 mo
267.626 308.03 267.565 307.952 267.571 307.952 cv
267.571 307.952 267.571 307.952 267.571 307.952 cv
267.565 307.952 267.626 308.031 267.799 308.24 cv
.027451 .341176 .87451 rgb
f
208.198 339.376 mo
208.43 339.058 208.662 338.74 208.892 338.421 cv
208.662 338.74 208.431 339.058 208.199 339.376 cv
208.198 339.376 208.198 339.376 208.198 339.376 cv
208.946 338.347 mo
208.966 338.318 208.987 338.29 209.007 338.262 cv
208.987 338.29 208.966 338.318 208.946 338.347 cv
212.218 315.109 mo
212.693 314.435 213.169 313.717 213.643 312.973 cv
213.645 312.973 213.646 312.972 213.648 312.971 cv
213.173 313.718 212.695 314.433 212.218 315.109 cv
.231373 .576471 .972549 rgb
f
189.491 340.202 mo
193.933 337.275 198.468 334.376 202.824 331.297 cv
202.824 331.297 li
202.824 331.297 li
200.33 330.992 197.849 330.547 195.385 330.06 cv
197.257 329.49 203.232 328.017 203.23 326.851 cv
203.23 326.757 203.191 326.666 203.109 326.577 cv
203.374 326.623 203.647 326.645 203.928 326.645 cv
206.721 326.645 210.272 324.473 213.379 322.142 cv
213.379 322.142 li
213.379 322.142 li
211.961 322.462 210.751 322.623 209.861 322.693 cv
209.303 322.751 208.86 322.752 208.563 322.761 cv
208.267 322.768 208.11 322.772 208.11 322.772 cv
208.11 322.772 208.251 322.707 208.517 322.584 cv
208.781 322.459 209.168 322.291 209.637 322.027 cv
210.583 321.526 211.87 320.73 213.254 319.614 cv
214.641 318.502 216.129 317.084 217.583 315.453 cv
218.82 314.049 220.04 312.501 221.193 310.875 cv
221.193 310.875 li
221.193 310.875 li
218.263 312.468 215.223 313.895 212.143 315.216 cv
212.168 315.18 212.193 315.145 212.218 315.109 cv
212.695 314.433 213.173 313.718 213.648 312.971 cv
219.831 310.672 225.949 308.248 232.001 305.698 cv
231.837 306.835 231.673 307.972 231.508 309.109 cv
232.465 307.635 233.421 306.162 234.378 304.688 cv
235.19 304.34 236.002 303.99 236.812 303.638 cv
236.564 306.335 236.315 309.031 236.067 311.728 cv
238.198 308.223 240.661 304.696 242.692 301.03 cv
243.978 300.448 245.259 299.862 246.539 299.269 cv
247.47 302.148 248.854 304.839 250.276 307.645 cv
250.335 304.264 250.279 300.879 250.314 297.498 cv
250.655 297.336 250.995 297.174 251.335 297.011 cv
251.713 297.69 252.095 298.367 252.48 299.042 cv
252.697 298.082 252.895 297.111 253.128 296.15 cv
253.518 295.961 253.904 295.774 254.293 295.584 cv
255.003 296.787 255.756 297.967 256.535 299.133 cv
257.6 300.726 257.458 303.669 257.908 305.539 cv
258.369 307.459 258.989 309.331 259.609 311.209 cv
260.194 312.98 260.778 314.75 261.363 316.521 cv
257.405 318.445 253.436 320.33 249.45 322.174 cv
249.437 321.794 249.425 321.413 249.412 321.033 cv
249.223 321.507 249.032 321.982 248.839 322.457 cv
245.963 323.784 243.08 325.089 240.187 326.371 cv
240.629 324.935 241.071 323.499 241.512 322.064 cv
240.142 323.915 238.76 325.76 237.38 327.606 cv
236.122 328.156 234.864 328.701 233.602 329.242 cv
233.994 328.189 234.387 327.136 234.779 326.084 cv
233.208 327.33 231.637 328.576 230.066 329.823 cv
231.772 323.805 233.478 317.787 235.184 311.77 cv
232.358 317.05 229.531 322.33 226.705 327.61 cv
226.369 328.237 226.034 328.864 225.698 329.491 cv
224.429 331.861 221.95 333.478 219.635 335.004 cv
215.841 336.507 212.03 337.966 208.198 339.376 cv
208.431 339.058 208.662 338.74 208.892 338.421 cv
208.91 338.396 208.928 338.371 208.946 338.347 cv
208.966 338.318 208.987 338.29 209.007 338.262 cv
209.007 338.262 li
209.007 338.262 li
209.007 338.262 li
202.497 339.072 195.945 339.618 189.491 340.202 cv
.027451 .341176 .87451 rgb
f
208.199 339.376 mo
208.199 339.376 li
212.03 337.966 215.841 336.507 219.635 335.004 cv
219.635 335.004 li
215.841 336.507 212.03 337.966 208.198 339.376 cv
233.602 329.242 mo
233.602 329.242 li
234.864 328.701 236.122 328.156 237.38 327.606 cv
237.38 327.606 li
236.122 328.156 234.864 328.701 233.602 329.242 cv
240.187 326.371 mo
240.187 326.371 li
243.08 325.089 245.963 323.784 248.839 322.457 cv
248.839 322.457 li
245.963 323.784 243.08 325.089 240.187 326.371 cv
249.45 322.174 mo
249.45 322.174 li
253.436 320.33 257.405 318.445 261.363 316.521 cv
261.363 316.521 li
257.405 318.445 253.436 320.33 249.45 322.174 cv
.0588235 .439216 .898039 rgb
f
263.49 315.483 mo
263.98 311.574 264.421 307.629 264.2 303.754 cv
265.326 305.306 266.562 306.766 267.799 308.24 cv
267.799 308.24 li
267.859 308.313 267.929 308.397 268.018 308.503 cv
268.018 308.503 li
268.135 308.62 li
268.135 308.62 li
269.143 309.653 270.162 310.661 271.204 311.65 cv
268.637 312.943 266.067 314.22 263.49 315.483 cv
.027451 .341176 .87451 rgb
f
321.152 284.707 mo
320.506 283.748 319.923 282.847 319.433 282.049 cv
319.92 282.843 320.515 283.752 321.156 284.704 cv
321.154 284.706 321.154 284.705 321.152 284.707 cv
.231373 .576471 .972549 rgb
f
317.757 260.573 mo
317.742 260.561 317.727 260.549 317.711 260.537 cv
317.727 260.549 317.742 260.561 317.757 260.573 cv
level3{
gsave
clp
[3.8096e-009 84.8528 -84.8528 3.8096e-009 450 214 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.8096e-009 84.8528 -84.8528 3.8096e-009 450 214 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
272.455 311.018 mo
271.507 308.859 270.667 306.675 269.983 304.403 cv
269.544 302.944 269.477 301.246 268.888 299.846 cv
268.377 298.627 267.315 297.552 266.678 296.379 cv
265.673 294.531 264.717 292.69 263.87 290.776 cv
274.045 285.513 284.002 279.86 293.729 273.814 cv
293.761 273.863 293.793 273.913 293.824 273.963 cv
293.824 273.963 li
293.824 273.963 li
293.806 273.905 293.788 273.847 293.77 273.789 cv
301.289 269.114 308.673 264.203 315.91 259.057 cv
316.487 259.536 317.087 260.04 317.711 260.537 cv
317.727 260.549 317.742 260.561 317.757 260.573 cv
317.757 260.573 li
319.288 261.706 320.843 262.893 322.079 263.68 cv
323.308 264.501 324.127 265.048 324.127 265.048 cv
324.127 265.048 323.119 264.963 321.608 264.836 cv
320.077 264.737 318.07 264.448 316.007 264.177 cv
315.293 264.061 314.585 263.93 313.889 263.801 cv
313.889 263.801 li
313.889 263.801 li
315.634 264.985 318.322 266.272 319.438 266.873 cv
318.665 266.93 317.891 266.977 317.117 267.018 cv
317.117 267.018 li
317.117 267.018 li
318.09 267.745 319.174 268.511 320.298 269.254 cv
322.268 270.516 324.36 271.682 326.002 272.46 cv
326.814 272.875 327.523 273.143 328.012 273.369 cv
328.506 273.584 328.788 273.707 328.788 273.707 cv
328.788 273.707 328.478 273.705 327.934 273.701 cv
327.392 273.685 326.598 273.716 325.66 273.654 cv
323.77 273.582 321.239 273.328 318.693 272.916 cv
318.464 272.874 li
318.464 272.874 li
320.609 274.969 322.772 277.049 324.92 279.139 cv
321.416 278.128 317.908 277.127 314.414 276.084 cv
314.414 276.084 li
314.414 276.084 li
314.53 276.192 314.65 276.305 314.762 276.408 cv
315.567 277.183 316.301 277.783 316.782 278.221 cv
317.272 278.652 317.552 278.898 317.552 278.898 cv
317.552 278.898 317.737 279.213 318.061 279.764 cv
318.394 280.31 318.829 281.122 319.433 282.049 cv
319.433 282.049 li
319.923 282.847 320.506 283.748 321.152 284.707 cv
315.591 287.862 310.021 290.986 304.444 294.061 cv
303.911 292.18 303.496 290.26 303.218 288.294 cv
302.568 283.713 301.918 279.131 301.268 274.55 cv
300.716 279.526 300.165 284.501 299.613 289.477 cv
299.206 287.551 298.913 285.605 298.748 283.648 cv
298.42 288.029 298.751 292.432 299.515 296.764 cv
299.14 296.969 298.765 297.173 298.391 297.377 cv
297.202 295.153 296.276 292.832 295.641 290.383 cv
295.063 292.362 294.657 294.346 294.462 296.392 cv
294.387 297.325 294.221 298.502 294.163 299.666 cv
286.958 303.547 279.725 307.341 272.455 311.018 cv
.027451 .341176 .87451 rgb
f
321.787 230.797 mo
321.084 230.391 320.393 229.971 319.715 229.538 cv
319.722 229.535 319.729 229.531 319.735 229.527 cv
319.735 229.527 li
319.735 229.527 li
320.412 229.958 321.085 230.392 321.787 230.797 cv
.27451 .760784 .992157 rgb
f
321.787 230.797 mo
321.787 230.797 li
320.914 230.496 320.054 230.172 319.202 229.833 cv
319.373 229.735 319.544 229.636 319.715 229.538 cv
320.393 229.971 321.084 230.391 321.787 230.797 cv
321.787 230.797 li
.0431373 .396078 .886274 rgb
f
326.486 247.392 mo
326.452 247.377 326.417 247.361 326.383 247.346 cv
326.418 247.362 326.452 247.377 326.486 247.392 cv
326.486 247.392 li
326.359 247.335 mo
326.33 247.323 326.302 247.31 326.273 247.297 cv
326.301 247.31 326.33 247.323 326.359 247.335 cv
326.387 247.313 mo
326.383 247.309 326.377 247.305 326.373 247.301 cv
326.377 247.305 326.382 247.309 326.387 247.313 cv
326.252 247.288 mo
326.22 247.274 326.188 247.26 326.156 247.246 cv
326.188 247.26 326.22 247.274 326.252 247.288 cv
326.284 247.23 mo
326.273 247.222 326.264 247.214 326.253 247.205 cv
326.264 247.214 326.274 247.222 326.284 247.23 cv
326.114 247.227 mo
326.097 247.219 326.08 247.212 326.064 247.204 cv
326.08 247.212 326.097 247.219 326.114 247.227 cv
326.007 247.179 mo
326.002 247.177 325.997 247.174 325.992 247.172 cv
325.997 247.174 326.002 247.177 326.007 247.179 cv
326.187 247.152 mo
325.189 246.349 324.215 245.527 323.264 244.689 cv
323.268 244.689 li
324.217 245.528 325.19 246.349 326.187 247.152 cv
level3{
gsave
clp
[3.8096e-009 84.8528 -84.8528 3.8096e-009 450 214 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.8096e-009 84.8528 -84.8528 3.8096e-009 450 214 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
323.264 244.689 mo
319.346 241.233 315.822 237.485 312.631 233.494 cv
312.638 233.49 312.645 233.486 312.652 233.482 cv
312.652 233.482 li
312.652 233.482 li
315.844 237.473 319.355 241.23 323.268 244.689 cv
323.264 244.689 li
.27451 .760784 .992157 rgb
f
326.486 247.392 mo
326.452 247.377 326.418 247.362 326.383 247.346 cv
326.375 247.343 326.367 247.339 326.359 247.335 cv
326.33 247.323 326.301 247.31 326.273 247.297 cv
326.266 247.294 326.259 247.291 326.252 247.288 cv
326.22 247.274 326.188 247.26 326.156 247.246 cv
326.142 247.239 326.128 247.233 326.114 247.227 cv
326.097 247.219 326.08 247.212 326.064 247.204 cv
326.044 247.196 326.026 247.187 326.007 247.179 cv
326.002 247.177 325.997 247.174 325.992 247.172 cv
319.31 244.177 313.242 240.461 307.58 236.18 cv
309.27 235.297 310.955 234.403 312.631 233.494 cv
315.822 237.485 319.346 241.233 323.264 244.689 cv
323.264 244.689 li
324.215 245.527 325.189 246.349 326.187 247.152 cv
326.21 247.17 326.231 247.188 326.253 247.205 cv
326.264 247.214 326.273 247.222 326.284 247.23 cv
326.313 247.254 326.343 247.278 326.373 247.301 cv
326.377 247.305 326.383 247.309 326.387 247.313 cv
326.42 247.339 326.453 247.365 326.486 247.392 cv
.0431373 .396078 .886274 rgb
f
313.956 213.48 mo
313.901 213.428 313.847 213.375 313.792 213.322 cv
313.847 213.375 313.901 213.428 313.956 213.48 cv
313.956 213.48 li
313.956 213.48 mo
313.927 213.435 313.899 213.391 313.87 213.346 cv
313.899 213.391 313.927 213.436 313.956 213.48 cv
313.849 213.312 mo
313.824 213.273 313.798 213.233 313.773 213.193 cv
313.798 213.233 313.824 213.273 313.849 213.312 cv
313.755 213.286 mo
313.713 213.245 313.67 213.203 313.628 213.162 cv
313.67 213.203 313.712 213.245 313.755 213.286 cv
313.771 213.19 mo
309.918 207.12 306.165 200.997 302.676 194.748 cv
302.678 194.748 302.68 194.747 302.681 194.746 cv
306.17 200.994 309.918 207.12 313.771 213.19 cv
313.583 213.119 mo
313.535 213.073 313.487 213.026 313.44 212.98 cv
313.487 213.026 313.535 213.072 313.583 213.119 cv
313.339 212.882 mo
313.324 212.868 313.309 212.852 313.294 212.838 cv
313.309 212.853 313.324 212.867 313.339 212.882 cv
.27451 .760784 .992157 rgb
f
313.956 213.48 mo
313.901 213.428 313.847 213.375 313.792 213.322 cv
313.78 213.31 313.767 213.298 313.755 213.286 cv
313.712 213.245 313.67 213.203 313.628 213.162 cv
313.613 213.148 313.598 213.133 313.583 213.119 cv
313.535 213.072 313.487 213.026 313.44 212.98 cv
313.406 212.947 313.373 212.915 313.339 212.882 cv
313.324 212.867 313.309 212.853 313.294 212.838 cv
307.942 207.635 302.693 202.349 297.689 196.866 cv
299.352 196.162 301.015 195.456 302.676 194.748 cv
306.165 200.997 309.918 207.12 313.771 213.19 cv
313.772 213.191 313.772 213.192 313.773 213.193 cv
313.798 213.233 313.824 213.273 313.849 213.312 cv
313.856 213.324 313.863 213.335 313.87 213.346 cv
313.899 213.391 313.927 213.435 313.956 213.48 cv
313.956 213.48 li
.0431373 .396078 .886274 rgb
f
308.473 194.721 mo
307.982 194.114 307.497 193.506 307.018 192.894 cv
307.02 192.893 307.022 192.892 307.025 192.891 cv
307.504 193.503 307.982 194.115 308.473 194.721 cv
.27451 .760784 .992157 rgb
f
308.473 194.721 mo
308.473 194.721 li
307.862 194.168 307.269 193.603 306.668 193.043 cv
306.784 192.993 306.901 192.944 307.018 192.894 cv
307.497 193.506 307.982 194.114 308.473 194.721 cv
308.473 194.721 li
.0431373 .396078 .886274 rgb
f
212.249 269.352 mo
213.814 267.248 215.345 265.125 216.809 262.968 cv
215.347 265.122 213.829 267.247 212.266 269.349 cv
212.26 269.35 212.255 269.351 212.249 269.352 cv
.298039 .705882 1 rgb
f
204.381 251.622 mo
204.386 251.614 204.391 251.607 204.396 251.599 cv
204.39 251.607 204.386 251.614 204.381 251.622 cv
204.461 251.505 mo
204.462 251.504 204.463 251.502 204.464 251.501 cv
204.463 251.502 204.462 251.504 204.461 251.505 cv
204.536 251.397 mo
204.54 251.392 204.543 251.387 204.546 251.383 cv
204.543 251.387 204.54 251.392 204.536 251.397 cv
204.612 251.289 mo
204.614 251.286 204.617 251.281 204.619 251.278 cv
204.617 251.282 204.614 251.285 204.612 251.289 cv
204.693 251.172 mo
204.693 251.172 li
204.693 251.172 li
204.761 251.076 mo
204.767 251.067 204.772 251.06 204.778 251.051 cv
204.772 251.059 204.766 251.068 204.761 251.076 cv
204.844 250.956 mo
204.845 250.955 204.846 250.953 204.847 250.952 cv
204.846 250.953 204.845 250.955 204.844 250.956 cv
204.915 250.855 mo
204.922 250.845 204.929 250.836 204.936 250.826 cv
204.929 250.836 204.922 250.845 204.915 250.855 cv
204.982 250.761 mo
204.991 250.748 204.999 250.735 205.008 250.723 cv
204.999 250.736 204.991 250.748 204.982 250.761 cv
205.066 250.641 mo
205.079 250.622 205.092 250.604 205.105 250.586 cv
205.092 250.604 205.079 250.623 205.066 250.641 cv
205.127 250.554 mo
205.991 249.332 206.874 248.122 207.774 246.922 cv
207.775 246.922 li
206.874 248.123 205.991 249.331 205.127 250.554 cv
level3{
gsave
clp
[3.8096e-009 84.8528 -84.8528 3.8096e-009 450 214 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.8096e-009 84.8528 -84.8528 3.8096e-009 450 214 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
207.774 246.922 mo
213.455 239.344 219.763 232.154 225.544 224.642 cv
225.547 224.641 225.55 224.64 225.553 224.639 cv
219.771 232.152 213.458 239.343 207.775 246.922 cv
207.774 246.922 li
304.681 237.691 mo
304.001 236.586 303.382 235.551 302.897 234.638 cv
303.382 235.551 304.001 236.586 304.681 237.691 cv
304.681 237.691 li
312.631 233.494 mo
309.543 229.632 306.766 225.543 304.244 221.272 cv
306.767 225.543 309.563 229.619 312.652 233.482 cv
312.645 233.486 312.638 233.49 312.631 233.494 cv
319.715 229.538 mo
307.869 221.979 299.915 210.447 294.549 198.191 cv
294.551 198.189 294.554 198.188 294.557 198.187 cv
299.927 210.442 307.885 221.967 319.735 229.527 cv
319.729 229.531 319.722 229.535 319.715 229.538 cv
304.515 221.426 mo
304.51 221.422 304.505 221.419 304.501 221.415 cv
304.505 221.418 304.51 221.423 304.515 221.426 cv
304.466 221.389 mo
304.458 221.382 304.45 221.376 304.442 221.37 cv
304.45 221.376 304.458 221.382 304.466 221.389 cv
304.412 221.346 mo
304.402 221.339 304.392 221.331 304.382 221.323 cv
304.392 221.331 304.402 221.339 304.412 221.346 cv
304.355 221.302 mo
304.344 221.294 304.333 221.285 304.322 221.277 cv
304.333 221.285 304.344 221.294 304.355 221.302 cv
304.298 221.258 mo
304.285 221.248 304.271 221.237 304.257 221.226 cv
304.271 221.237 304.285 221.248 304.298 221.258 cv
304.241 221.214 mo
304.222 221.199 304.202 221.183 304.183 221.168 cv
304.183 221.168 li
304.202 221.183 304.222 221.198 304.241 221.214 cv
.286274 .74902 .988235 rgb
f
199.613 270.481 mo
206.565 259.751 216.464 250.96 222.924 239.922 cv
222.924 239.922 li
222.924 239.922 li
216.597 243.706 210.333 247.535 204.311 251.722 cv
204.334 251.689 204.358 251.655 204.381 251.622 cv
204.386 251.614 204.39 251.607 204.396 251.599 cv
204.418 251.568 204.439 251.537 204.461 251.505 cv
204.462 251.504 204.463 251.502 204.464 251.501 cv
204.488 251.466 204.513 251.431 204.536 251.397 cv
204.54 251.392 204.543 251.387 204.546 251.383 cv
204.568 251.351 204.59 251.32 204.612 251.289 cv
204.614 251.285 204.617 251.282 204.619 251.278 cv
204.644 251.243 204.668 251.208 204.693 251.172 cv
204.693 251.172 li
204.715 251.14 204.738 251.108 204.761 251.076 cv
204.766 251.068 204.772 251.059 204.778 251.051 cv
204.8 251.02 204.822 250.988 204.844 250.956 cv
204.845 250.955 204.846 250.953 204.847 250.952 cv
204.87 250.92 204.893 250.887 204.915 250.855 cv
204.922 250.845 204.929 250.836 204.936 250.826 cv
204.951 250.804 204.967 250.782 204.982 250.761 cv
204.991 250.748 204.999 250.736 205.008 250.723 cv
205.028 250.696 205.047 250.668 205.066 250.641 cv
205.079 250.623 205.092 250.604 205.105 250.586 cv
205.112 250.575 205.12 250.564 205.127 250.554 cv
205.991 249.331 206.874 248.123 207.775 246.922 cv
207.775 246.922 li
213.458 239.343 219.771 232.152 225.553 224.639 cv
229.54 223.322 233.515 221.962 237.479 220.566 cv
236.513 223.589 235.56 226.615 234.554 229.611 cv
236.738 226.144 238.987 222.701 241.204 219.241 cv
243.079 218.568 244.952 217.888 246.822 217.2 cv
246.795 217.421 246.768 217.641 246.741 217.861 cv
246.865 217.605 246.99 217.349 247.116 217.092 cv
249.125 216.352 251.132 215.603 253.135 214.847 cv
253.088 215.314 253.048 215.78 253.018 216.245 cv
253.39 220.127 253.092 224.018 254.147 227.831 cv
255.164 231.506 256.181 235.182 257.198 238.857 cv
257.583 235.589 257.968 232.322 258.353 229.054 cv
258.558 227.317 258.764 225.581 258.906 223.838 cv
259.214 220.022 259.21 216.355 259.077 212.58 cv
259.215 212.527 259.352 212.474 259.489 212.421 cv
259.79 213.29 260.099 214.157 260.421 215.02 cv
260.421 215.02 li
260.421 215.02 li
260.183 214.124 259.955 213.226 259.736 212.325 cv
259.746 212.322 259.757 212.317 259.766 212.314 cv
261.446 216.584 263.195 220.835 265.255 224.961 cv
263.872 220.545 262.762 216.056 261.753 211.543 cv
264.275 210.561 266.793 209.568 269.307 208.566 cv
269.635 209.889 269.956 211.214 270.27 212.541 cv
270.465 213.364 271.015 213.651 271.697 214.237 cv
272.411 214.852 273.168 215.335 273.532 216.182 cv
273.931 217.108 274.402 218.006 274.961 218.857 cv
277.226 222.302 281.249 224.59 284.616 227.029 cv
284.616 227.029 li
284.616 227.029 li
284.493 226.423 284.37 225.816 284.247 225.209 cv
284.472 225.444 284.724 225.677 284.937 225.924 cv
284.937 225.924 li
284.937 225.924 li
284.766 225.302 284.603 224.679 284.443 224.054 cv
285.287 224.999 286.23 225.979 286.855 227.058 cv
286.876 227.04 286.905 227.031 286.94 227.031 cv
287.596 227.031 290.538 230.158 291.152 230.734 cv
291.152 230.734 li
291.152 230.734 li
290.794 229.475 290.43 228.217 290.101 226.951 cv
290.021 226.642 289.523 225.51 289.853 225.319 cv
290.588 224.892 290.756 225.064 290.348 224.237 cv
289.26 222.035 288.345 219.715 287.649 217.406 cv
289.224 219.532 290.846 221.628 292.533 223.679 cv
292.533 223.679 li
292.533 223.679 li
292.533 223.679 li
292.533 223.679 li
292.533 223.679 li
292.533 223.679 li
292.533 223.679 li
288.835 217.006 285.764 210.068 282.804 203.09 cv
286.727 201.472 290.641 199.837 294.549 198.191 cv
299.915 210.447 307.869 221.979 319.715 229.538 cv
319.544 229.636 319.373 229.735 319.202 229.833 cv
319.202 229.833 li
319.202 229.833 li
313.883 227.715 308.971 224.863 304.515 221.426 cv
304.51 221.423 304.505 221.418 304.501 221.415 cv
304.489 221.406 304.478 221.397 304.466 221.389 cv
304.458 221.382 304.45 221.376 304.442 221.37 cv
304.432 221.362 304.422 221.354 304.412 221.346 cv
304.402 221.339 304.392 221.331 304.382 221.323 cv
304.373 221.316 304.364 221.309 304.355 221.302 cv
304.344 221.294 304.333 221.285 304.322 221.277 cv
304.315 221.271 304.306 221.264 304.298 221.258 cv
304.285 221.248 304.271 221.237 304.257 221.226 cv
304.252 221.222 304.247 221.218 304.241 221.214 cv
304.222 221.198 304.202 221.183 304.183 221.168 cv
304.183 221.168 li
304.183 221.168 li
304.203 221.203 304.224 221.237 304.244 221.272 cv
306.766 225.543 309.543 229.632 312.631 233.494 cv
310.955 234.403 309.27 235.297 307.58 236.18 cv
307.58 236.18 li
307.58 236.18 li
305.159 234.35 302.805 232.428 300.521 230.397 cv
300.521 230.397 li
300.521 230.397 li
300.521 230.397 li
300.681 230.757 300.845 231.115 301.006 231.474 cv
301.157 231.607 301.245 231.685 301.245 231.685 cv
301.245 231.685 301.407 231.98 301.696 232.496 cv
301.985 233.013 302.4 233.751 302.897 234.638 cv
302.897 234.638 li
303.382 235.551 304.001 236.586 304.681 237.691 cv
297.999 241.101 291.207 244.297 284.318 247.272 cv
283.447 245.353 282.667 243.392 281.932 241.428 cv
280.509 237.629 279.087 233.83 277.664 230.031 cv
277.835 234.683 278.006 239.336 278.177 243.989 cv
277.791 243.047 277.476 242.01 277.686 240.996 cv
277.224 241.997 277.315 243.151 277.493 244.199 cv
277.534 244.444 277.958 245.875 277.288 245.875 cv
277.186 245.875 277.057 245.842 276.899 245.765 cv
276.039 243.995 275.329 242.167 274.578 240.355 cv
274.056 241.943 273.485 243.532 273.063 245.146 cv
272.456 243.464 271.927 241.756 271.47 240.034 cv
271.136 241.378 270.837 242.728 270.591 244.088 cv
270.423 241.88 270.411 239.68 270.435 237.468 cv
269.755 239.739 269.126 242.006 268.656 244.323 cv
268.445 242.68 268.248 241.034 268.018 239.393 cv
267.308 244.399 266.309 249.408 266.326 254.453 cv
261.242 256.319 256.116 258.064 250.953 259.686 cv
251.941 258.431 252.853 257.094 253.27 255.849 cv
253.98 253.732 253.539 250.835 253.563 248.648 cv
253.413 246.289 253.175 243.979 252.825 241.638 cv
251.868 244.596 250.774 247.429 249.362 250.231 cv
249.366 249.29 249.369 248.35 249.372 247.41 cv
248.673 248.46 247.975 249.51 247.276 250.561 cv
248.299 247.424 249.181 244.238 249.717 240.996 cv
248.936 242.679 248.054 244.321 247.108 245.929 cv
247.406 243.078 248.135 240.293 248.681 237.468 cv
247.532 239.784 246.558 241.909 244.619 243.75 cv
246.127 238.269 246.628 232.728 247.186 227.121 cv
246.243 229.037 245.299 230.954 244.356 232.87 cv
242.998 235.628 242.078 239.42 239.807 241.593 cv
240.451 238.501 241.095 235.409 241.738 232.317 cv
240.625 233.622 239.512 234.927 238.398 236.232 cv
238.286 236.363 238.181 236.415 238.081 236.415 cv
237.895 236.415 237.722 236.239 237.537 236.063 cv
237.352 235.887 237.155 235.711 236.919 235.711 cv
236.903 235.711 236.887 235.712 236.87 235.714 cv
235.895 237.174 234.86 238.607 233.799 240.014 cv
234.782 238.07 235.889 236.175 236.942 234.261 cv
235.178 235.354 233.414 236.447 231.65 237.54 cv
230.108 238.567 227.687 239.621 226.472 240.987 cv
225.265 242.344 224.609 244.723 223.817 246.31 cv
222.897 248.067 221.978 249.823 221.058 251.579 cv
223.441 250.038 225.829 248.505 228.18 246.923 cv
225.763 249.706 223.255 252.421 220.713 255.107 cv
223.774 252.289 226.803 249.438 229.709 246.481 cv
227.648 250.02 225.846 253.781 225.13 257.775 cv
224.769 259.79 224.625 261.917 223.84 263.832 cv
223.367 264.984 222.894 266.136 222.421 267.288 cv
219.046 268.029 215.662 268.716 212.266 269.349 cv
213.829 267.247 215.347 265.122 216.809 262.968 cv
216.833 262.932 216.857 262.897 216.881 262.862 cv
216.881 262.862 li
216.881 262.862 li
214.44 263.85 211.992 264.824 209.565 265.839 cv
208.618 266.481 207.661 267.116 206.692 267.741 cv
207.147 267.327 207.588 266.906 208.033 266.487 cv
208.033 266.487 li
208.033 266.487 li
205.171 267.713 202.347 269.013 199.613 270.481 cv
225.676 266.556 mo
227.259 264.986 228.841 263.416 230.424 261.846 cv
230.091 263.121 229.758 264.396 229.424 265.671 cv
228.177 265.973 226.927 266.269 225.676 266.556 cv
230.02 265.526 mo
232.732 261.816 235.596 258.137 237.929 254.221 cv
237.664 256.507 237.198 258.748 236.251 260.879 cv
236.681 260.572 237.114 260.271 237.51 259.926 cv
237.352 261.283 237.118 262.538 236.813 263.791 cv
234.555 264.393 232.288 264.972 230.02 265.526 cv
243.096 262.049 mo
243.123 261.978 243.15 261.906 243.177 261.834 cv
243.177 261.898 243.177 261.962 243.176 262.026 cv
243.15 262.034 243.123 262.041 243.096 262.049 cv
292.533 223.679 mo
292.525 223.665 292.518 223.651 292.51 223.638 cv
292.518 223.651 292.525 223.665 292.533 223.679 cv
292.533 223.679 li
292.477 223.577 mo
292.473 223.571 292.47 223.566 292.467 223.56 cv
292.47 223.566 292.473 223.571 292.477 223.577 cv
292.275 223.214 mo
292.271 223.209 292.268 223.203 292.265 223.198 cv
292.268 223.203 292.271 223.209 292.275 223.214 cv
279.713 209.993 mo
278.847 208.502 278.043 206.857 277.769 205.154 cv
278.314 204.932 278.86 204.709 279.404 204.486 cv
279.439 206.329 279.525 208.168 279.713 209.993 cv
273.843 208.369 mo
273.415 208 272.985 207.632 272.554 207.266 cv
272.879 207.135 273.204 207.004 273.529 206.873 cv
273.624 207.372 273.729 207.87 273.843 208.369 cv
276.201 208.178 mo
275.8 207.542 275.419 206.903 275.054 206.257 cv
275.605 206.034 276.157 205.81 276.708 205.586 cv
276.446 206.43 276.296 207.307 276.201 208.178 cv
.027451 .341176 .87451 rgb
f
266.792 159.367 mo
266.525 158.282 266.538 159.073 266.792 159.367 cv
cp
.0941176 .454902 .937255 rgb
f
266.792 159.367 mo
266.773 159.287 li
266.792 159.367 li
cp
f
234.634 284.559 mo
235.423 277.798 236.213 271.036 237.003 264.275 cv
236.634 265.173 236.267 266.071 235.906 266.972 cv
236.255 265.874 236.559 264.833 236.813 263.791 cv
238.914 263.23 241.005 262.65 243.096 262.049 cv
240.27 269.551 237.454 277.056 234.634 284.559 cv
220.693 271.501 mo
221.269 270.097 221.845 268.692 222.421 267.288 cv
223.507 267.05 224.593 266.806 225.676 266.556 cv
224.015 268.205 222.354 269.853 220.693 271.501 cv
243.157 267.613 mo
243.163 265.751 243.17 263.889 243.176 262.026 cv
245.777 261.277 248.371 260.497 250.953 259.686 cv
250.165 260.687 249.327 261.637 248.653 262.449 cv
247.247 264.14 245.749 265.721 244.193 267.293 cv
244.494 266.428 244.797 265.563 245.096 264.698 cv
244.45 265.67 243.803 266.642 243.157 267.613 cv
229.148 266.728 mo
229.24 266.376 229.332 266.023 229.424 265.671 cv
229.624 265.623 229.82 265.575 230.02 265.526 cv
229.727 265.926 229.436 266.327 229.148 266.728 cv
.0117647 .372549 .898039 rgb
f
222.421 267.288 mo
222.894 266.136 223.367 264.984 223.84 263.832 cv
224.625 261.917 224.769 259.79 225.13 257.775 cv
225.846 253.781 227.648 250.02 229.709 246.481 cv
226.803 249.438 223.774 252.289 220.713 255.107 cv
223.255 252.421 225.763 249.706 228.18 246.923 cv
225.829 248.505 223.441 250.038 221.058 251.579 cv
221.978 249.823 222.897 248.067 223.817 246.31 cv
224.609 244.723 225.265 242.344 226.472 240.987 cv
227.687 239.621 230.108 238.567 231.65 237.54 cv
233.414 236.447 235.178 235.354 236.942 234.261 cv
235.889 236.175 234.782 238.07 233.799 240.014 cv
234.86 238.607 235.895 237.174 236.87 235.714 cv
236.887 235.712 236.903 235.711 236.919 235.711 cv
237.155 235.711 237.352 235.887 237.537 236.063 cv
237.722 236.239 237.895 236.415 238.081 236.415 cv
238.181 236.415 238.286 236.363 238.398 236.232 cv
239.512 234.927 240.625 233.622 241.738 232.317 cv
241.095 235.409 240.451 238.501 239.807 241.593 cv
242.078 239.42 242.998 235.628 244.356 232.87 cv
245.299 230.954 246.243 229.037 247.186 227.121 cv
246.628 232.728 246.127 238.269 244.619 243.75 cv
246.558 241.909 247.532 239.784 248.681 237.468 cv
248.135 240.293 247.406 243.078 247.108 245.929 cv
248.054 244.321 248.936 242.679 249.717 240.996 cv
249.181 244.238 248.299 247.424 247.276 250.561 cv
247.975 249.51 248.673 248.46 249.372 247.41 cv
249.369 248.35 249.366 249.29 249.362 250.231 cv
250.774 247.429 251.868 244.596 252.825 241.638 cv
253.175 243.979 253.413 246.289 253.563 248.648 cv
253.539 250.835 253.98 253.732 253.27 255.849 cv
252.853 257.094 251.941 258.431 250.953 259.686 cv
248.371 260.497 245.777 261.277 243.176 262.026 cv
243.177 261.962 243.177 261.898 243.177 261.834 cv
243.15 261.906 243.123 261.978 243.096 262.049 cv
241.005 262.65 238.914 263.23 236.813 263.791 cv
237.118 262.538 237.352 261.283 237.51 259.926 cv
237.114 260.271 236.681 260.572 236.251 260.879 cv
237.198 258.748 237.664 256.507 237.929 254.221 cv
235.596 258.137 232.732 261.816 230.02 265.526 cv
229.82 265.575 229.624 265.623 229.424 265.671 cv
229.758 264.396 230.091 263.121 230.424 261.846 cv
228.841 263.416 227.259 264.986 225.676 266.556 cv
224.593 266.806 223.507 267.05 222.421 267.288 cv
.0352941 .443137 .909804 rgb
f
250.217 184.069 mo
250.49 182.13 250.762 180.192 251.034 178.253 cv
250.024 178.653 249.006 179.034 247.991 179.423 cv
248.071 178.12 248.153 176.817 248.216 175.514 cv
245.436 177.148 242.656 178.782 239.877 180.416 cv
242.386 177.21 244.837 173.955 247.436 170.81 cv
244.939 172.158 242.442 173.506 239.946 174.854 cv
241.968 170.393 243.544 165.789 247.052 162.136 cv
246.792 162.342 246.519 162.535 246.264 162.747 cv
251.389 156.948 256.829 151.196 261.057 144.796 cv
258.836 150.971 256.946 157.128 254.056 163.081 cv
257.041 160.488 260.027 157.895 263.013 155.302 cv
261.813 158.436 260.614 161.569 259.414 164.702 cv
258.944 165.931 259.77 167.879 260.191 169.113 cv
260.829 170.986 261.83 172.739 262.493 174.613 cv
261.542 173.103 260.435 171.741 259.363 170.31 cv
259.25 170.158 258.28 168.163 258.185 168.149 cv
257.415 169.381 257.162 170.824 256.719 172.163 cv
256.423 173.307 255.647 174.388 255.061 175.433 cv
253.446 178.312 251.832 181.19 250.217 184.069 cv
.0117647 .372549 .898039 rgb
f
237.479 220.566 mo
239.065 215.597 240.684 210.632 242.618 205.797 cv
240.83 207.845 238.821 209.711 236.859 211.614 cv
237.582 209.881 238.233 208.101 239.083 206.418 cv
240.892 202.835 243.713 199.815 245.805 196.386 cv
243.47 197.568 241.101 198.631 238.668 199.627 cv
239.293 198.37 239.996 197.114 240.514 195.817 cv
239.825 196.485 239.092 197.115 238.323 197.702 cv
238.862 196.628 239.318 195.515 239.661 194.372 cv
237.542 195.733 235.218 196.824 232.727 197.45 cv
232.302 197.562 231.853 197.635 231.417 197.702 cv
233.887 196.086 235.786 193.795 237.192 191.331 cv
238.23 189.513 238.62 187.847 240.077 186.303 cv
242.013 184.252 243.949 182.201 245.885 180.15 cv
245.55 183.615 245.696 187.631 244.181 190.855 cv
246.047 189.855 247.88 188.806 249.717 187.761 cv
249.063 189.73 248.412 191.698 247.703 193.65 cv
250.228 189.557 253.083 185.63 255.816 181.654 cv
255.451 183.104 255.087 184.553 254.722 186.002 cv
255.008 185.636 255.293 185.27 255.579 184.904 cv
255.562 185.294 255.545 185.684 255.528 186.074 cv
256.002 185.029 256.477 183.984 256.951 182.938 cv
256.897 187.708 256.784 192.47 257.192 197.231 cv
257.507 196.4 257.822 195.57 258.137 194.739 cv
259.406 200.315 260.502 205.947 261.753 211.543 cv
261.092 211.8 260.429 212.057 259.766 212.314 cv
259.737 212.24 259.708 212.166 259.679 212.092 cv
259.698 212.17 259.717 212.248 259.736 212.325 cv
259.653 212.357 259.572 212.389 259.489 212.421 cv
259.329 211.958 259.172 211.495 259.016 211.031 cv
259.038 211.55 259.059 212.066 259.077 212.58 cv
257.099 213.343 255.118 214.099 253.135 214.847 cv
253.573 210.519 254.627 206.155 253.949 201.849 cv
252.49 207.115 249.555 212.14 247.116 217.092 cv
247.018 217.128 246.921 217.164 246.822 217.2 cv
247.182 214.252 247.541 211.304 247.901 208.356 cv
245.776 212.033 243.508 215.646 241.204 219.241 cv
239.963 219.686 238.722 220.128 237.479 220.566 cv
255.201 196.141 mo
254.937 197.523 254.673 198.905 254.35 200.277 cv
254.101 201.337 254.689 202.363 254.952 203.417 cv
255.187 202.621 255.447 201.831 255.742 201.052 cv
256.494 199.835 255.425 197.458 255.201 196.141 cv
f
257.198 238.857 mo
256.181 235.182 255.164 231.506 254.147 227.831 cv
253.092 224.018 253.39 220.127 253.018 216.245 cv
253.048 215.78 253.088 215.314 253.135 214.847 cv
255.118 214.099 257.099 213.343 259.077 212.58 cv
259.21 216.355 259.214 220.022 258.906 223.838 cv
258.764 225.581 258.558 227.317 258.353 229.054 cv
257.968 232.322 257.583 235.589 257.198 238.857 cv
234.554 229.611 mo
235.56 226.615 236.513 223.589 237.479 220.566 cv
238.722 220.128 239.963 219.686 241.204 219.241 cv
238.987 222.701 236.738 226.144 234.554 229.611 cv
265.255 224.961 mo
263.195 220.835 261.446 216.584 259.766 212.314 cv
260.429 212.057 261.092 211.8 261.753 211.543 cv
262.762 216.056 263.872 220.545 265.255 224.961 cv
246.741 217.861 mo
246.768 217.641 246.795 217.421 246.822 217.2 cv
246.921 217.164 247.018 217.128 247.116 217.092 cv
246.99 217.349 246.865 217.605 246.741 217.861 cv
260.421 215.02 mo
260.099 214.157 259.79 213.29 259.489 212.421 cv
259.572 212.389 259.653 212.357 259.736 212.325 cv
259.955 213.226 260.183 214.124 260.421 215.02 cv
.0352941 .443137 .909804 rgb
f
232.65 197.471 mo
232.65 197.471 232.67 197.465 232.727 197.45 cv
232.783 197.436 232.804 197.431 232.804 197.431 cv
232.805 197.431 232.767 197.441 232.729 197.451 cv
232.69 197.461 232.651 197.471 232.65 197.471 cv
.0117647 .372549 .898039 rgb
f
220.207 295.288 mo
220.216 295.102 220.225 294.917 220.226 294.917 cv
220.226 294.917 220.226 294.921 220.226 294.931 cv
220.222 295.081 li
220.207 295.288 li
f
219.677 301.607 mo
219.888 299.503 220.099 297.399 220.207 295.288 cv
220.199 295.47 220.192 295.649 220.193 295.649 cv
220.194 295.649 220.202 295.503 220.222 295.081 cv
220.226 294.931 li
220.266 293.745 220.305 292.562 220.267 291.376 cv
219.18 292.254 218.086 293.129 216.915 293.91 cv
218.724 290.769 219.817 287.334 221.938 284.341 cv
222.919 282.958 223.9 281.575 224.88 280.191 cv
225.318 282.733 225.756 285.274 226.194 287.815 cv
226.632 290.359 225.194 292.562 223.931 294.781 cv
222.606 297.107 221.15 299.359 219.677 301.607 cv
f
268.018 308.503 mo
267.929 308.397 267.859 308.313 267.799 308.24 cv
268.018 308.503 li
.0352941 .443137 .909804 rgb
f
262.829 320.964 mo
262.34 319.483 261.851 318.002 261.363 316.521 cv
262.072 316.177 262.782 315.83 263.49 315.483 cv
263.259 317.322 263.017 319.152 262.829 320.964 cv
273.888 314.114 mo
272.973 313.303 272.081 312.483 271.204 311.65 cv
271.621 311.44 272.038 311.229 272.455 311.018 cv
272.91 312.054 273.389 313.083 273.888 314.114 cv
.054902 .513725 .917647 rgb
f
232.001 305.698 mo
232.311 303.553 232.621 301.409 232.931 299.265 cv
232.627 299.655 232.463 299.806 232.282 299.806 cv
232.073 299.806 231.843 299.607 231.353 299.343 cv
230.781 299.036 230.21 298.728 229.638 298.42 cv
229.503 298.348 230.542 296.639 230.637 296.465 cv
231.787 294.367 232.936 292.27 234.086 290.172 cv
231.29 293.365 228.301 296.437 224.857 299.042 cv
233.383 291.512 240.023 281.108 243.847 270.82 cv
244.281 274.716 244.393 278.554 244.074 282.464 cv
246.07 277.949 249.083 273.756 251.684 269.528 cv
250.801 276.033 249.682 282.559 249.063 289.088 cv
249.816 286.94 250.627 284.814 251.444 282.686 cv
251.68 283.284 251.916 283.883 252.152 284.481 cv
252.381 284.199 252.618 283.923 252.851 283.645 cv
253.347 284.599 li
253.925 282.923 254.696 281.348 255.587 279.8 cv
255.666 281.741 255.882 283.656 256.43 285.537 cv
256.796 285.08 256.619 283.626 256.656 283.045 cv
256.724 281.989 256.799 280.934 256.879 279.878 cv
257.019 278.035 257.171 276.192 257.314 274.348 cv
257.552 277.412 257.768 280.478 258.056 283.539 cv
259.288 282.027 260.236 280.51 261.197 278.845 cv
261.557 280.55 261.924 282.253 262.277 283.959 cv
262.716 286.088 262.873 288.491 263.75 290.502 cv
263.79 290.594 263.83 290.685 263.87 290.776 cv
260.7 292.417 257.506 294.02 254.293 295.584 cv
254.061 295.19 253.833 294.794 253.611 294.395 cv
253.428 294.973 253.271 295.559 253.128 296.15 cv
252.531 296.438 251.933 296.726 251.335 297.011 cv
251.005 296.419 250.678 295.826 250.354 295.231 cv
250.334 295.986 250.322 296.742 250.314 297.498 cv
249.059 298.094 247.8 298.684 246.539 299.269 cv
246.077 297.836 245.726 296.357 245.54 294.793 cv
244.809 296.928 243.817 299 242.692 301.03 cv
240.741 301.912 238.778 302.783 236.812 303.638 cv
236.909 302.589 237.006 301.539 237.102 300.49 cv
236.194 301.89 235.286 303.289 234.378 304.688 cv
233.586 305.027 232.795 305.363 232.001 305.698 cv
.0117647 .372549 .898039 rgb
f
261.363 316.521 mo
260.778 314.75 260.194 312.98 259.609 311.209 cv
258.989 309.331 258.369 307.459 257.908 305.539 cv
257.458 303.669 257.6 300.726 256.535 299.133 cv
255.756 297.967 255.003 296.787 254.293 295.584 cv
257.506 294.02 260.7 292.417 263.87 290.776 cv
264.717 292.69 265.673 294.531 266.678 296.379 cv
267.315 297.552 268.377 298.627 268.888 299.846 cv
269.477 301.246 269.544 302.944 269.983 304.403 cv
270.667 306.675 271.507 308.859 272.455 311.018 cv
272.038 311.229 271.621 311.44 271.204 311.65 cv
270.162 310.661 269.143 309.653 268.135 308.62 cv
268.155 308.638 268.166 308.647 268.169 308.647 cv
268.17 308.647 268.17 308.646 268.17 308.645 cv
268.165 308.625 268.029 308.462 267.887 308.299 cv
267.887 308.299 li
267.737 308.126 267.58 307.952 267.571 307.952 cv
267.571 307.952 li
267.571 307.952 267.571 307.952 267.571 307.952 cv
267.565 307.952 267.626 308.03 267.799 308.24 cv
267.799 308.24 li
266.562 306.766 265.326 305.306 264.2 303.754 cv
264.421 307.629 263.98 311.574 263.49 315.483 cv
262.782 315.83 262.072 316.177 261.363 316.521 cv
.0352941 .443137 .909804 rgb
f
236.067 311.728 mo
236.315 309.031 236.564 306.335 236.812 303.638 cv
238.778 302.783 240.741 301.912 242.692 301.03 cv
240.661 304.696 238.198 308.223 236.067 311.728 cv
231.508 309.109 mo
231.673 307.972 231.837 306.835 232.001 305.698 cv
232.795 305.363 233.586 305.027 234.378 304.688 cv
233.421 306.162 232.465 307.635 231.508 309.109 cv
250.276 307.645 mo
248.854 304.839 247.47 302.148 246.539 299.269 cv
247.8 298.684 249.059 298.094 250.314 297.498 cv
250.279 300.879 250.335 304.264 250.276 307.645 cv
252.48 299.042 mo
252.095 298.367 251.713 297.69 251.335 297.011 cv
251.933 296.726 252.531 296.438 253.128 296.15 cv
252.895 297.111 252.697 298.082 252.48 299.042 cv
f
268.169 308.647 mo
268.166 308.647 268.155 308.638 268.135 308.62 cv
268.135 308.62 li
268.018 308.503 li
267.799 308.24 li
267.799 308.24 li
267.799 308.24 li
267.626 308.031 267.565 307.952 267.571 307.952 cv
267.571 307.952 li
267.58 307.952 267.737 308.126 267.887 308.299 cv
267.887 308.299 li
268.029 308.462 268.165 308.625 268.17 308.645 cv
268.17 308.646 268.17 308.647 268.169 308.647 cv
f
212.081 286.855 mo
212.643 285.382 213.181 283.908 213.627 282.4 cv
214.09 280.838 214.09 280.864 215.701 280.302 cv
216.55 280.006 217.426 280.078 217.383 279.175 cv
217.363 278.751 218.3 278.562 218.67 278.391 cv
219.935 277.807 221.194 277.212 222.44 276.593 cv
222.515 277.326 223.296 281.817 222.759 282.053 cv
221.729 282.504 220.7 282.958 219.667 283.403 cv
218.926 283.722 218.99 284.164 218.781 284.864 cv
216.573 285.615 214.349 286.277 212.081 286.855 cv
.0117647 .372549 .898039 rgb
f
271.912 280.527 mo
270.589 275.275 269.265 270.022 267.942 264.77 cv
267.424 262.715 266.87 260.697 266.594 258.604 cv
266.41 257.218 266.33 255.834 266.326 254.453 cv
272.387 252.229 278.388 249.833 284.318 247.272 cv
286.416 251.897 289.046 256.285 292.878 259.917 cv
291.288 258.943 289.787 257.846 288.377 256.657 cv
288.377 256.657 li
288.377 256.657 li
288.377 256.657 li
290.326 262.32 291.986 268.079 293.77 273.789 cv
293.756 273.797 293.743 273.805 293.729 273.814 cv
292.007 271.119 290.284 268.424 288.561 265.729 cv
286.612 262.68 284.827 259.128 282.533 256.3 cv
281.842 261.254 281.028 266.194 280.273 271.14 cv
279.098 266.028 277.959 260.909 276.729 255.809 cv
276.587 256.43 276.446 257.051 276.304 257.672 cv
276.143 257.361 275.982 257.05 275.821 256.739 cv
275.954 259.156 276.384 261.511 277.34 263.765 cv
275.627 262.358 274.243 260.735 273.016 258.944 cv
273.743 262.166 272.806 266.138 272.604 269.383 cv
272.374 273.098 272.143 276.812 271.912 280.527 cv
f
293.824 273.963 mo
293.793 273.913 293.761 273.863 293.729 273.814 cv
293.743 273.805 293.756 273.797 293.77 273.789 cv
293.788 273.847 293.806 273.905 293.824 273.963 cv
.0352941 .443137 .909804 rgb
f
266.326 254.453 mo
266.309 249.408 267.308 244.399 268.018 239.393 cv
268.248 241.034 268.445 242.68 268.656 244.323 cv
269.126 242.006 269.755 239.739 270.435 237.468 cv
270.411 239.68 270.423 241.88 270.591 244.088 cv
270.837 242.728 271.136 241.378 271.47 240.034 cv
271.927 241.756 272.456 243.464 273.063 245.146 cv
273.485 243.532 274.056 241.943 274.578 240.355 cv
275.329 242.167 276.039 243.995 276.899 245.765 cv
277.057 245.842 277.186 245.875 277.288 245.875 cv
277.958 245.875 277.534 244.444 277.493 244.199 cv
277.315 243.151 277.224 241.997 277.686 240.996 cv
277.476 242.01 277.791 243.047 278.177 243.989 cv
278.006 239.336 277.835 234.683 277.664 230.031 cv
279.087 233.83 280.509 237.629 281.932 241.428 cv
282.667 243.392 283.447 245.353 284.318 247.272 cv
278.388 249.833 272.387 252.229 266.326 254.453 cv
f
289.033 257.288 mo
288.968 257.288 288.46 256.897 288.377 256.657 cv
288.377 256.657 li
288.377 256.657 li
288.934 257.126 289.075 257.288 289.033 257.288 cv
.0117647 .372549 .898039 rgb
f
250.063 144.147 mo
251.606 141.503 252.849 138.87 253.737 136.151 cv
254.18 134.797 254.914 133.64 255.362 132.302 cv
255.718 131.187 256.858 130.466 257.487 129.458 cv
259.779 125.791 262.066 122.12 264.356 118.452 cv
264.286 119.002 264.215 119.553 264.145 120.104 cv
265.393 116.321 266.453 112.458 267.327 108.55 cv
267.73 111.224 268.064 113.885 268.303 116.577 cv
268.59 119.799 270.505 123.004 271.939 125.921 cv
272.386 126.816 272.297 127.776 272.355 128.76 cv
272.43 130.452 272.627 132.139 272.772 133.826 cv
273.028 136.304 273.285 138.782 273.542 141.261 cv
271.422 137.616 269.197 134.005 267.262 130.271 cv
265.918 134.326 264.799 138.39 263.874 142.543 cv
263.275 138.586 262.854 134.65 262.641 130.657 cv
262.002 133.975 261.206 137.27 260.767 140.619 cv
260.664 139.843 260.584 139.064 260.514 138.284 cv
258.354 140.115 256.117 141.621 253.515 142.864 cv
253.762 142.262 254.03 141.663 254.245 141.05 cv
253.484 141.667 252.712 142.274 251.911 142.847 cv
251.312 143.3 250.683 143.719 250.063 144.147 cv
f
251.769 142.957 mo
251.767 142.957 251.805 142.927 251.911 142.847 cv
252.066 142.736 252.124 142.696 252.126 142.696 cv
252.128 142.696 252.041 142.761 251.952 142.826 cv
251.863 142.892 251.772 142.957 251.769 142.957 cv
f
273.888 174.485 mo
273.882 174.411 273.879 174.385 273.88 174.385 cv
273.88 174.385 273.88 174.391 273.881 174.401 cv
273.881 174.401 li
273.888 174.485 li
f
273.899 174.588 mo
273.899 174.588 273.896 174.561 273.888 174.485 cv
273.891 174.497 li
273.891 174.497 li
273.895 174.544 273.899 174.588 273.899 174.588 cv
f
273.891 174.497 mo
273.888 174.485 li
273.881 174.401 li
273.891 174.497 li
f
285.627 185.837 mo
284.2 184.834 282.758 183.849 281.373 182.796 cv
281.525 183.703 281.677 184.61 281.829 185.516 cv
280.327 183.594 278.804 181.685 277.33 179.745 cv
276.239 178.31 274.08 176.301 273.891 174.497 cv
273.891 174.497 li
273.881 174.401 li
273.881 174.401 li
273.519 170.266 273.473 166.207 274.233 162.106 cv
274.786 163.75 275.408 165.137 276.407 166.601 cv
276.488 162.585 276.569 158.57 276.651 154.554 cv
277.977 159.13 278.81 164.197 280.84 168.554 cv
281.768 170.546 282.641 171.51 284.502 172.626 cv
285.475 173.209 285.97 173.319 286.268 174.31 cv
286.975 176.656 287.682 179.002 288.389 181.347 cv
287.158 180.644 285.926 179.941 284.694 179.237 cv
284.952 181.446 285.278 183.639 285.627 185.837 cv
f
273.542 191.289 mo
272.793 190.305 272.061 189.311 271.35 188.304 cv
270.866 187.535 269.461 186.066 269.373 185.165 cv
269.285 184.277 270.331 182.644 270.646 181.816 cv
271.049 180.702 271.437 179.583 271.816 178.461 cv
273.012 180.248 274.153 182.062 275.28 183.887 cv
275.989 185.037 275.218 186.265 274.689 187.479 cv
274.697 187.45 274.701 187.433 274.699 187.433 cv
274.693 187.433 274.642 187.559 274.513 187.906 cv
274.414 188.228 274.38 188.352 274.382 188.364 cv
274.089 189.336 273.806 190.31 273.542 191.289 cv
f
274.383 188.365 mo
274.382 188.365 274.382 188.365 274.382 188.364 cv
274.428 188.212 274.467 188.058 274.513 187.906 cv
274.566 187.764 274.627 187.622 274.689 187.479 cv
274.636 187.666 274.397 188.365 274.383 188.365 cv
f
245.901 354.025 mo
244.539 354.025 li
244.034 351.06 243.799 348.081 243.737 345.019 cv
243.184 345.994 243.012 346.316 243.022 346.316 cv
243.023 346.316 243.029 346.309 243.038 346.296 cv
241.691 348.772 240.463 351.303 239.359 353.88 cv
239.453 353.101 239.559 352.324 239.672 351.548 cv
239.418 352.371 239.218 353.196 239.066 354.025 cv
236.892 354.025 li
236.718 353.394 236.567 352.754 236.438 352.101 cv
236.327 352.741 236.221 353.382 236.131 354.025 cv
235.894 354.025 li
235.955 352.234 236.138 350.443 235.99 348.667 cv
235.847 346.957 236.155 345.047 235.886 343.417 cv
234.009 346.746 232.839 350.368 231.818 354.025 cv
226.571 354.025 li
226.633 352.933 226.733 351.846 226.88 350.765 cv
226.269 351.762 226.087 352.887 225.94 354.025 cv
210.547 354.025 li
210.72 353.553 211.314 352.973 211.526 352.643 cv
211.367 352.548 211.208 352.453 211.048 352.359 cv
211.179 352.136 211.309 351.914 211.439 351.692 cv
211.702 351.249 211.968 350.808 212.238 350.37 cv
213.58 348.184 215.007 346.043 216.454 343.916 cv
213.876 345.363 211.252 346.734 208.628 348.108 cv
210.627 345.847 212.633 343.59 214.545 341.265 cv
215.717 339.839 216.854 338.387 217.935 336.901 cv
218.329 336.36 218.651 335.656 219.232 335.271 cv
219.365 335.182 219.5 335.093 219.635 335.004 cv
224.317 333.149 228.972 331.226 233.602 329.242 cv
233.406 329.767 233.21 330.292 233.014 330.817 cv
232.251 332.866 230.884 335.006 230.439 337.075 cv
232.699 333.886 235.036 330.744 237.38 327.606 cv
238.315 327.198 239.254 326.784 240.187 326.371 cv
238.799 330.875 237.409 335.378 236.037 339.887 cv
236.269 339.624 236.502 339.362 236.735 339.1 cv
236.94 339.891 237.166 340.679 237.316 341.481 cv
239.107 338.159 241.154 334.965 243.157 331.752 cv
242.874 334.32 242.564 336.888 242.35 339.462 cv
244.105 333.688 246.56 328.075 248.839 322.457 cv
249.043 322.363 249.246 322.268 249.45 322.174 cv
249.589 326.435 249.729 330.695 249.869 334.956 cv
249.984 338.483 248.618 341.787 247.689 345.193 cv
246.883 348.149 246.258 351.059 245.901 354.025 cv
.054902 .513725 .917647 rgb
f
219.635 335.004 mo
221.95 333.478 224.429 331.861 225.698 329.491 cv
226.034 328.864 226.369 328.237 226.705 327.61 cv
229.531 322.33 232.358 317.05 235.184 311.77 cv
233.478 317.787 231.772 323.805 230.066 329.823 cv
231.637 328.576 233.208 327.33 234.779 326.084 cv
234.387 327.136 233.994 328.189 233.602 329.242 cv
228.972 331.226 224.317 333.149 219.635 335.004 cv
.0352941 .443137 .909804 rgb
f
237.38 327.606 mo
238.76 325.76 240.142 323.915 241.512 322.064 cv
241.071 323.499 240.629 324.935 240.187 326.371 cv
239.254 326.784 238.315 327.198 237.38 327.606 cv
f
248.839 322.457 mo
249.032 321.982 249.223 321.507 249.412 321.033 cv
249.425 321.413 249.437 321.794 249.45 322.174 cv
249.246 322.268 249.043 322.363 248.839 322.457 cv
f
285.873 346.463 mo
285.869 346.463 285.711 346.392 285.555 346.322 cv
285.399 346.251 285.245 346.181 285.249 346.181 cv
285.251 346.181 285.337 346.218 285.565 346.319 cv
285.565 346.319 li
285.581 346.326 285.597 346.334 285.614 346.341 cv
285.806 346.43 285.876 346.463 285.873 346.463 cv
.054902 .513725 .917647 rgb
f
286.314 354.025 mo
286.054 354.025 li
284.208 352.316 282.584 350.404 281.135 348.393 cv
280.31 347.247 279.54 346.067 278.814 344.864 cv
278.243 343.923 277.627 342.036 276.682 341.433 cv
277.352 345.607 277.559 349.815 277.789 354.025 cv
276.579 354.025 li
275.311 352.226 274.042 350.427 272.782 348.623 cv
272.768 350.421 272.62 352.224 272.431 354.025 cv
270.347 354.025 li
270.207 353.544 270.066 353.064 269.926 352.584 cv
268.714 348.441 268.6 344.251 267.95 340.033 cv
267.237 344.315 267.101 348.618 267.672 352.918 cv
264.954 348.637 263.154 344.037 261.831 339.232 cv
261.595 338.376 262.155 336.971 262.335 336.124 cv
262.648 334.655 262.983 333.19 263.384 331.74 cv
264.026 329.364 264.781 327.024 265.6 324.697 cv
266.003 328.68 266.63 332.619 267.558 336.527 cv
267.358 333.138 268.382 329.992 268.018 326.621 cv
268.212 327.455 268.376 328.295 268.526 329.136 cv
270.183 325.288 271.582 321.326 273.106 317.43 cv
273.31 320.522 273.514 323.613 273.717 326.705 cv
273.897 329.435 274.933 332.771 277.205 334.531 cv
277.137 331.976 277.298 329.472 277.686 326.942 cv
278.507 328.001 279.358 329.019 280.255 330.024 cv
280.982 330.767 282.663 331.851 283.084 332.756 cv
283.505 333.661 283.201 335.548 283.281 336.548 cv
283.447 337.846 283.651 339.125 283.901 340.411 cv
283.246 339.97 282.583 339.54 281.95 339.072 cv
283.467 341.914 285.419 344.54 287.354 347.145 cv
286.774 346.877 286.194 346.609 285.614 346.341 cv
285.597 346.334 285.581 346.326 285.565 346.319 cv
285.565 346.319 li
283.603 345.45 281.715 344.427 279.858 343.38 cv
281.522 347.164 283.548 350.837 286.314 354.025 cv
f
292.533 223.679 mo
292.533 223.679 li
292.533 223.679 li
292.533 223.679 li
292.533 223.679 li
292.533 223.679 mo
291.507 222.431 290.429 220.354 290.537 220.354 cv
290.602 220.354 291.09 221.095 292.265 223.198 cv
292.268 223.203 292.271 223.209 292.275 223.214 cv
292.337 223.326 292.401 223.441 292.467 223.56 cv
292.47 223.566 292.473 223.571 292.477 223.577 cv
292.488 223.597 292.499 223.617 292.51 223.638 cv
292.518 223.651 292.525 223.665 292.533 223.679 cv
292.533 223.679 li
.0352941 .443137 .909804 rgb
f
269.307 208.566 mo
268.887 206.867 268.456 205.171 268.018 203.475 cv
269.535 204.734 271.052 205.992 272.554 207.266 cv
271.472 207.701 270.391 208.134 269.307 208.566 cv
273.529 206.873 mo
273.214 205.217 273.001 203.558 272.852 201.872 cv
273.523 203.373 274.247 204.83 275.054 206.257 cv
274.546 206.463 274.038 206.668 273.529 206.873 cv
276.708 205.586 mo
276.937 204.848 277.25 204.135 277.686 203.475 cv
277.646 204.039 277.679 204.6 277.769 205.154 cv
277.415 205.299 277.062 205.442 276.708 205.586 cv
279.404 204.486 mo
279.345 201.345 279.435 198.19 279.424 195.068 cv
280.553 197.739 281.67 200.417 282.804 203.09 cv
281.672 203.557 280.538 204.022 279.404 204.486 cv
.0117647 .372549 .898039 rgb
f
291.152 230.734 mo
290.538 230.158 287.596 227.031 286.94 227.031 cv
286.905 227.031 286.876 227.04 286.855 227.058 cv
286.23 225.979 285.287 224.999 284.443 224.054 cv
284.603 224.679 284.766 225.302 284.937 225.924 cv
284.724 225.677 284.472 225.444 284.247 225.209 cv
284.37 225.816 284.493 226.423 284.616 227.029 cv
281.249 224.59 277.226 222.302 274.961 218.857 cv
274.402 218.006 273.931 217.108 273.532 216.182 cv
273.168 215.335 272.411 214.852 271.697 214.237 cv
271.015 213.651 270.465 213.364 270.27 212.541 cv
269.956 211.214 269.635 209.889 269.307 208.566 cv
270.391 208.134 271.472 207.701 272.554 207.266 cv
272.985 207.632 273.415 208 273.843 208.369 cv
273.729 207.87 273.624 207.372 273.529 206.873 cv
274.038 206.668 274.546 206.463 275.054 206.257 cv
275.419 206.903 275.8 207.542 276.201 208.178 cv
276.296 207.307 276.446 206.43 276.708 205.586 cv
277.062 205.442 277.415 205.299 277.769 205.154 cv
278.043 206.857 278.847 208.502 279.713 209.993 cv
279.525 208.168 279.439 206.329 279.404 204.486 cv
280.538 204.022 281.672 203.557 282.804 203.09 cv
285.764 210.068 288.835 217.006 292.533 223.679 cv
292.525 223.665 292.518 223.651 292.51 223.638 cv
292.499 223.617 292.488 223.597 292.477 223.577 cv
292.473 223.571 292.47 223.566 292.467 223.56 cv
292.401 223.441 292.337 223.326 292.275 223.214 cv
292.271 223.209 292.268 223.203 292.265 223.198 cv
291.09 221.095 290.602 220.354 290.537 220.354 cv
290.429 220.354 291.507 222.431 292.533 223.679 cv
292.533 223.679 li
292.533 223.679 li
290.846 221.628 289.224 219.532 287.649 217.406 cv
288.345 219.715 289.26 222.035 290.348 224.237 cv
290.756 225.064 290.588 224.892 289.853 225.319 cv
289.523 225.51 290.021 226.642 290.101 226.951 cv
290.43 228.217 290.794 229.475 291.152 230.734 cv
292.533 223.679 mo
292.533 223.679 li
292.533 223.679 li
292.533 223.679 li
292.533 223.679 mo
292.533 223.679 li
292.533 223.679 li
292.533 223.679 li
292.533 223.679 li
292.533 223.679 li
.0352941 .443137 .909804 rgb
f
303.366 309.074 mo
303.36 309.074 303.251 308.843 303.146 308.612 cv
303.041 308.38 302.941 308.149 302.953 308.149 cv
302.957 308.149 302.979 308.184 303.024 308.268 cv
303.024 308.268 li
303.024 308.268 li
303.288 308.87 303.373 309.074 303.366 309.074 cv
.054902 .513725 .917647 rgb
f
316.754 330.221 mo
312.067 323.111 306.429 316.014 303.024 308.268 cv
303.024 308.268 li
303.024 308.268 li
301.89 306.144 301.178 304.014 300.582 301.706 cv
300.806 305.347 301.47 308.933 302.201 312.511 cv
300.827 310.96 299.465 309.402 298.167 307.796 cv
296.997 306.333 295.049 304.431 294.442 302.67 cv
294.149 301.819 294.11 300.748 294.163 299.666 cv
295.574 298.906 296.982 298.143 298.391 297.377 cv
298.963 298.448 299.596 299.497 300.286 300.527 cv
299.996 299.281 299.737 298.025 299.515 296.764 cv
301.16 295.867 302.801 294.967 304.444 294.061 cv
306.305 300.629 309.609 306.712 313.596 312.511 cv
311.977 310.782 310.419 309.004 308.942 307.169 cv
311.643 314.824 314.171 322.531 316.754 330.221 cv
f
294.163 299.666 mo
294.221 298.502 294.387 297.325 294.462 296.392 cv
294.657 294.346 295.063 292.362 295.641 290.383 cv
296.276 292.832 297.202 295.153 298.391 297.377 cv
296.982 298.143 295.574 298.906 294.163 299.666 cv
.0352941 .443137 .909804 rgb
f
299.515 296.764 mo
298.751 292.432 298.42 288.029 298.748 283.648 cv
298.913 285.605 299.206 287.551 299.613 289.477 cv
300.165 284.501 300.716 279.526 301.268 274.55 cv
301.918 279.131 302.568 283.713 303.218 288.294 cv
303.496 290.26 303.911 292.18 304.444 294.061 cv
302.801 294.967 301.16 295.867 299.515 296.764 cv
f
509.162 349.917 mo
509.886 343.399 507.128 337.187 500.11 341.619 cv
505.244 330.94 502.079 308.461 487.526 307.979 cv
470.053 307.399 464.802 332.683 466.055 345.642 cv
463.836 340.755 461.857 343.009 457.743 342.673 cv
455.296 342.474 454.239 346.34 452.082 345.994 cv
449.965 345.654 450.177 343.217 448.257 342.458 cv
438.521 338.612 435.612 331.516 423.622 336.129 cv
418.068 338.266 411.135 342.407 413.582 349.166 cv
407.895 341.447 384.849 327.539 375.851 336.888 cv
369.321 343.672 381.436 356.058 388.007 359 cv
536.007 360 li
537.577 358.322 537.899 350.071 534.84 346.351 cv
527.27 337.148 516.422 345.211 509.162 349.917 cv
cp
.188235 .831373 1 rgb
f
697.09 345.932 mo
697.414 346.529 697.762 347.124 698.15 347.714 cv
697.828 347.087 697.47 346.497 697.09 345.932 cv
cp
f
697.09 345.932 mo
697.47 346.497 697.828 347.087 698.15 347.714 cv
697.762 347.124 697.414 346.529 697.09 345.932 cv
690.52 336.168 675.786 335.72 668.74 345.897 cv
661.292 338.391 655.226 332.992 644.563 339.152 cv
638.126 342.871 632.159 353.427 642.007 357 cv
721.007 361 li
730.481 354.513 727.529 334.159 724.657 325.52 cv
715.443 297.796 685.056 323.793 697.09 345.932 cv
cp
f
464.089 316.107 mo
468.237 317.216 472.337 318.842 476.319 320.944 cv
472.274 314.061 468.557 306.868 465.101 299.576 cv
459.678 288.134 453.831 275.142 452.613 262.191 cv
451.734 269.541 450.376 276.808 448.744 283.909 cv
446.049 295.63 442.489 308.649 435.416 317.1 cv
437.765 316.064 440.283 315.475 442.772 315.038 cv
439.785 322.861 436.384 330.221 431.806 336.666 cv
435.104 335.273 438.267 333.594 441.279 331.479 cv
439.576 338.329 437.307 344.758 434.31 350.53 cv
478.142 350.53 li
475.136 346.433 472.419 342.002 470.143 337.227 cv
473.08 339.615 476.193 341.493 479.345 343.255 cv
472.977 335.467 467.368 326.427 464.089 316.107 cv
cp
f
0 480 mo
900 480 li
900 354.025 li
0 354.025 li
0 480 li
f
0 480 mo
900 480 li
900 366.807 li
0 366.807 li
0 480 li
.0941176 .454902 .937255 rgb
f
861.149 449.633 mo
861.144 449.633 861.14 449.633 861.135 449.633 cv
854.308 449.628 847.065 446.724 840.757 443.274 cv
840.753 443.272 840.75 443.27 840.747 443.268 cv
840.691 443.238 840.636 443.208 840.581 443.177 cv
840.57 443.172 840.559 443.165 840.549 443.16 cv
840.495 443.13 840.441 443.1 840.388 443.071 cv
840.364 443.058 840.341 443.045 840.316 443.031 cv
840.298 443.021 840.278 443.01 840.26 443 cv
803.643 418.589 770.649 392.884 738.513 366.807 cv
837.329 366.807 li
837.329 366.807 li
849.074 388.866 859.677 411.296 869.26 435 cv
869.867 437.43 870.843 440.966 870.844 443.817 cv
870.844 445.659 870.437 447.215 869.26 448 cv
869.26 448 li
866.689 449.142 863.956 449.632 861.152 449.633 cv
861.151 449.633 861.15 449.633 861.149 449.633 cv
.0784314 .392157 .917647 rgb
f
900 480 mo
833.596 480 li
820.376 472.672 807.895 463.759 796.259 454 cv
773.57 436.26 752.071 418.185 730.217 401.171 cv
725.856 388.533 721.312 376.799 717.21 366.807 cv
738.513 366.807 li
770.649 392.884 803.643 418.589 840.26 443 cv
840.278 443.01 840.298 443.021 840.316 443.031 cv
840.341 443.045 840.364 443.058 840.388 443.071 cv
840.441 443.1 840.495 443.13 840.549 443.16 cv
840.559 443.165 840.57 443.172 840.581 443.177 cv
840.636 443.208 840.691 443.238 840.747 443.268 cv
840.75 443.27 840.753 443.272 840.757 443.274 cv
847.066 446.724 854.307 449.629 861.135 449.633 cv
861.14 449.633 861.144 449.633 861.149 449.633 cv
861.149 449.633 li
861.149 449.633 li
861.15 449.633 861.151 449.633 861.152 449.633 cv
863.956 449.632 866.689 449.142 869.26 448 cv
869.26 448 li
870.437 447.215 870.844 445.659 870.844 443.817 cv
870.843 440.966 869.867 437.43 869.26 435 cv
859.677 411.296 849.074 388.866 837.329 366.807 cv
900 366.807 li
900 480 li
686.696 369.703 mo
685.21 368.73 683.715 367.763 682.217 366.807 cv
687.91 366.807 li
687.509 367.756 687.103 368.723 686.696 369.703 cv
.0862745 .423529 .929412 rgb
f
861.149 449.633 mo
861.144 449.633 861.14 449.633 861.135 449.633 cv
861.14 449.633 861.144 449.633 861.149 449.633 cv
861.149 449.633 li
861.152 449.633 mo
863.956 449.632 866.689 449.142 869.26 448 cv
866.689 449.142 863.956 449.632 861.152 449.633 cv
870.844 443.817 mo
870.843 440.966 869.867 437.43 869.26 435 cv
859.677 411.296 849.074 388.866 837.329 366.807 cv
837.329 366.807 li
849.074 388.866 859.677 411.296 869.26 435 cv
869.867 437.43 870.843 440.966 870.844 443.817 cv
840.757 443.274 mo
840.753 443.272 840.75 443.27 840.747 443.268 cv
840.75 443.27 840.753 443.272 840.757 443.274 cv
840.581 443.177 mo
840.57 443.172 840.559 443.165 840.549 443.16 cv
840.559 443.165 840.57 443.172 840.581 443.177 cv
840.388 443.071 mo
840.364 443.058 840.341 443.045 840.316 443.031 cv
840.341 443.045 840.364 443.058 840.388 443.071 cv
.0705882 .364706 .909804 rgb
f
807.485 480 mo
749.106 480 li
747.597 464.037 743.947 446.944 739.324 430.291 cv
763.264 445.206 786.213 461.731 807.485 480 cv
672.405 407.999 mo
669.625 404.384 666.909 400.719 664.259 397 cv
664.259 397 li
664.287 396.99 664.315 396.979 664.343 396.969 cv
664.354 396.965 664.366 396.96 664.377 396.956 cv
664.387 396.953 664.396 396.949 664.405 396.946 cv
666.355 396.235 668.305 395.938 670.24 395.938 cv
670.241 395.938 670.243 395.938 670.244 395.938 cv
670.248 395.938 670.252 395.938 670.255 395.938 cv
672.273 395.939 674.274 396.263 676.243 396.778 cv
674.945 400.43 673.66 404.177 672.405 407.999 cv
.0784314 .392157 .917647 rgb
f
833.596 480 mo
807.485 480 li
786.213 461.731 763.264 445.206 739.324 430.291 cv
736.554 420.315 733.435 410.497 730.217 401.171 cv
752.071 418.185 773.57 436.26 796.259 454 cv
807.895 463.759 820.376 472.672 833.596 480 cv
664.047 436.765 mo
614.399 407.487 561.967 384.025 507.422 366.807 cv
682.217 366.807 li
683.715 367.763 685.21 368.73 686.696 369.703 cv
683.329 377.795 679.738 386.944 676.243 396.778 cv
674.274 396.263 672.273 395.939 670.255 395.938 cv
670.252 395.938 670.248 395.938 670.244 395.938 cv
670.244 395.938 li
670.244 395.938 li
670.243 395.938 670.241 395.938 670.24 395.938 cv
668.305 395.938 666.356 396.235 664.405 396.946 cv
664.396 396.949 664.387 396.953 664.377 396.956 cv
664.366 396.96 664.354 396.965 664.343 396.969 cv
664.315 396.979 664.287 396.99 664.259 397 cv
664.259 397 li
664.259 397 li
664.259 397 li
666.909 400.719 669.625 404.384 672.405 407.999 cv
669.371 417.234 666.51 426.907 664.047 436.765 cv
.0862745 .423529 .929412 rgb
f
807.485 480 mo
807.485 480 li
786.213 461.731 763.264 445.206 739.324 430.291 cv
739.324 430.291 li
763.264 445.206 786.213 461.731 807.485 480 cv
664.259 397 mo
664.259 397 li
664.259 397 li
664.259 397 li
664.343 396.969 mo
664.354 396.965 664.366 396.96 664.377 396.956 cv
664.366 396.96 664.354 396.965 664.343 396.969 cv
664.405 396.946 mo
666.356 396.235 668.305 395.938 670.24 395.938 cv
668.305 395.938 666.355 396.235 664.405 396.946 cv
670.255 395.938 mo
670.252 395.938 670.248 395.938 670.244 395.938 cv
670.244 395.938 li
670.248 395.938 670.252 395.938 670.255 395.938 cv
.0705882 .364706 .909804 rgb
f
375.611 435.273 mo
374.61 435.273 371.941 433.965 370.285 433.139 cv
370.277 433.135 370.27 433.131 370.263 433.128 cv
370.202 433.097 370.142 433.067 370.084 433.038 cv
370.058 433.025 370.032 433.013 370.007 433 cv
349.791 413.458 332.76 391.187 320.126 366.807 cv
362.796 366.807 li
362.796 366.807 li
370.116 383.965 377.995 401.262 377.996 419.558 cv
377.996 424.623 377.393 429.764 376.007 435 cv
376.007 435 li
376.007 435.191 375.862 435.272 375.613 435.272 cv
375.612 435.272 375.612 435.273 375.611 435.273 cv
.0784314 .392157 .917647 rgb
f
459.007 421 mo
435.42 406.848 413.574 387.826 394.079 366.807 cv
422.278 366.807 li
422.278 366.807 li
431.086 376.099 439.714 385.716 448.007 396 cv
452.685 402.549 459.113 409.973 459.104 419.091 cv
459.103 419.719 459.072 420.355 459.007 421 cv
f
596.943 480 mo
519.489 480 li
489.365 459.816 456.196 444.293 420.26 436 cv
419.552 436 418.845 439.499 418.845 442.61 cv
418.845 443.899 418.967 445.121 419.259 446 cv
425.187 457.732 431.638 469.035 438.498 480 cv
346.705 480 li
344.23 477.331 341.751 474.663 339.26 472 cv
332.126 464.375 325.112 456.687 318.414 448.822 cv
315.689 439.845 313.432 430.674 311.401 421.843 cv
307.861 406.445 304.916 390.685 303.01 374.744 cv
301.726 388.405 298.066 402.087 293.292 415.393 cv
283.952 400.783 276.288 385.182 271.26 368 cv
271.138 367.605 271.022 367.208 270.909 366.807 cv
320.126 366.807 li
332.76 391.187 349.791 413.458 370.007 433 cv
370.032 433.013 370.058 433.025 370.084 433.038 cv
370.142 433.067 370.202 433.097 370.263 433.128 cv
370.27 433.131 370.277 433.135 370.285 433.139 cv
371.941 433.965 374.61 435.272 375.611 435.273 cv
375.611 435.273 li
375.611 435.273 li
375.612 435.273 375.612 435.272 375.613 435.272 cv
375.862 435.272 376.007 435.191 376.007 435 cv
376.007 435 li
377.393 429.764 377.996 424.623 377.996 419.558 cv
377.995 401.262 370.116 383.965 362.796 366.807 cv
394.079 366.807 li
413.574 387.826 435.42 406.848 459.007 421 cv
459.072 420.355 459.103 419.719 459.104 419.091 cv
459.113 409.973 452.685 402.549 448.007 396 cv
439.714 385.716 431.086 376.099 422.278 366.807 cv
445.972 366.807 li
445.972 366.807 li
501.38 390.828 552.831 421.961 602.514 455.898 cv
599.925 463.702 597.821 471.989 596.943 480 cv
.0862745 .423529 .929412 rgb
f
375.611 435.273 mo
374.61 435.272 371.941 433.965 370.285 433.139 cv
371.941 433.965 374.61 435.273 375.611 435.273 cv
375.611 435.273 li
375.613 435.272 mo
375.862 435.272 376.007 435.191 376.007 435 cv
376.007 435.191 375.862 435.272 375.613 435.272 cv
370.263 433.128 mo
370.202 433.097 370.142 433.067 370.084 433.038 cv
370.142 433.067 370.202 433.097 370.263 433.128 cv
377.996 419.558 mo
377.995 401.262 370.116 383.965 362.796 366.807 cv
362.796 366.807 li
370.116 383.965 377.995 401.262 377.996 419.558 cv
.0705882 .364706 .909804 rgb
f
519.489 480 mo
438.498 480 li
431.638 469.035 425.187 457.732 419.259 446 cv
418.967 445.121 418.845 443.899 418.845 442.61 cv
418.845 439.499 419.552 436 420.26 436 cv
456.196 444.293 489.365 459.816 519.489 480 cv
.0784314 .392157 .917647 rgb
f
656.545 480 mo
641.947 480 li
638.581 452.587 619.476 418.201 619.476 418.201 cv
619.476 418.201 609.321 435.377 602.514 455.898 cv
552.831 421.961 501.38 390.828 445.972 366.807 cv
507.422 366.807 li
561.967 384.025 614.399 407.487 664.047 436.765 cv
660.472 451.069 657.738 465.752 656.545 480 cv
f
242.684 429.627 mo
242.682 429.627 242.679 429.627 242.677 429.627 cv
238.342 429.626 233.754 428.693 230.455 427.096 cv
230.389 427.064 230.325 427.033 230.26 427 cv
230.26 427 li
193.208 409.304 157.384 389.461 123.456 366.807 cv
241.476 366.807 li
241.476 366.807 li
249.459 383.512 255.377 400.735 255.387 418.478 cv
255.387 419.982 255.346 421.489 255.26 423 cv
255.26 423 li
254.674 427.684 248.945 429.626 242.691 429.627 cv
242.689 429.627 242.686 429.627 242.684 429.627 cv
.0862745 .423529 .929412 rgb
f
346.705 480 mo
330.997 480 li
325.804 470.555 321.758 459.834 318.414 448.822 cv
325.112 456.687 332.126 464.375 339.26 472 cv
341.751 474.663 344.23 477.331 346.705 480 cv
263.883 480 mo
176.615 480 li
162.634 466.547 148.979 452.765 135.699 438.627 cv
142.74 441.017 149.698 444.03 156.511 447.626 cv
146.875 431.227 138.02 414.09 129.786 396.717 cv
125.25 387.147 120.59 377.124 116.326 366.807 cv
123.456 366.807 li
157.384 389.461 193.208 409.304 230.26 427 cv
230.26 427 li
230.325 427.033 230.389 427.064 230.455 427.096 cv
233.755 428.694 238.341 429.627 242.677 429.627 cv
242.679 429.627 242.682 429.627 242.684 429.627 cv
242.684 429.627 li
242.684 429.627 li
242.686 429.627 242.689 429.627 242.691 429.627 cv
248.945 429.626 254.674 427.685 255.26 423 cv
255.26 423 li
255.346 421.489 255.387 419.982 255.387 418.478 cv
255.377 400.735 249.459 383.512 241.476 366.807 cv
270.909 366.807 li
271.022 367.208 271.138 367.605 271.26 368 cv
276.288 385.182 283.952 400.783 293.292 415.393 cv
288.252 429.443 281.969 443.074 275.928 455.818 cv
272.07 463.957 268.06 472.037 263.883 480 cv
85.4274 381.013 mo
81.6349 376.316 77.8854 371.583 74.1774 366.807 cv
89.0721 366.807 li
87.9385 371.514 86.7339 376.268 85.4274 381.013 cv
.0784314 .392157 .917647 rgb
f
242.684 429.627 mo
242.682 429.627 242.679 429.627 242.677 429.627 cv
242.679 429.627 242.682 429.627 242.684 429.627 cv
242.684 429.627 li
242.691 429.627 mo
248.945 429.626 254.674 427.684 255.26 423 cv
254.674 427.685 248.945 429.626 242.691 429.627 cv
230.455 427.096 mo
230.389 427.064 230.325 427.033 230.26 427 cv
230.325 427.033 230.389 427.064 230.455 427.096 cv
255.387 418.478 mo
255.377 400.735 249.459 383.512 241.476 366.807 cv
241.476 366.807 li
249.459 383.512 255.377 400.735 255.387 418.478 cv
.0705882 .364706 .909804 rgb
f
71.0988 480 mo
61.1441 480 li
65.2052 477.835 69.1713 475.435 73.0299 472.725 cv
72.4207 475.176 71.7702 477.596 71.0988 480 cv
53.9125 480 mo
45.2479 480 li
35.6397 447.922 27.5639 415.517 21.2596 383 cv
23.2596 383 25.2597 383 27.2597 384 cv
42.1813 397.166 55.2198 411.616 67.3519 426.674 cv
64.8335 430.901 62.0819 434.859 59.0623 438.468 cv
63.6222 436.456 68.4491 435.153 73.2881 434.175 cv
73.9697 435.051 74.6519 435.932 75.3288 436.811 cv
69.2994 452.224 62.5071 466.827 53.9125 480 cv
.0784314 .392157 .917647 rgb
f
176.615 480 mo
148.5 480 li
139.814 466.629 132.429 452.008 127.376 436.102 cv
130.16 436.846 132.936 437.689 135.699 438.627 cv
148.979 452.765 162.634 466.547 176.615 480 cv
45.2479 480 mo
0 480 li
0 366.807 li
74.1774 366.807 li
77.8854 371.583 81.6349 376.316 85.4274 381.013 cv
80.9631 397.228 75.3215 413.299 67.3519 426.674 cv
55.2198 411.616 42.1813 397.166 27.2597 384 cv
25.2597 383 23.2596 383 21.2596 383 cv
21.2596 383 li
21.2596 383 li
27.5639 415.517 35.6397 447.922 45.2479 480 cv
75.3288 436.811 mo
74.6519 435.932 73.9697 435.051 73.2881 434.175 cv
74.3883 433.953 75.489 433.747 76.5875 433.554 cv
76.1712 434.644 75.7521 435.729 75.3288 436.811 cv
.0862745 .423529 .929412 rgb
f
675.813 311.206 mo
675.813 315.32 681.53 318.656 688.585 318.656 cv
695.637 318.656 701.355 315.32 701.355 311.206 cv
701.355 307.09 688.585 251.16 688.585 251.16 cv
688.585 251.16 675.813 307.09 675.813 311.206 cv
cp
.101961 .294118 .823529 rgb
f
373.254 321.05 mo
373.254 323.336 376.277 325.19 380.008 325.19 cv
383.737 325.19 386.761 323.336 386.761 321.05 cv
386.761 318.764 380.008 287.691 380.008 287.691 cv
380.008 287.691 373.254 318.764 373.254 321.05 cv
cp
.101961 .407843 .823529 rgb
f
87.8602 270.026 mo
87.8602 272.86 90.8836 275.159 94.614 275.159 cv
98.3436 275.159 101.367 272.86 101.367 270.026 cv
101.367 267.191 94.614 228.661 94.614 228.661 cv
94.614 228.661 87.8602 267.191 87.8602 270.026 cv
cp
f
168.856 286.194 mo
168.856 289.211 171.88 291.658 175.61 291.658 cv
179.34 291.658 182.363 289.211 182.363 286.194 cv
182.363 283.176 175.61 242.16 175.61 242.16 cv
175.61 242.16 168.856 283.176 168.856 286.194 cv
cp
f
599.088 326.165 mo
599.088 328.999 604.805 331.297 611.859 331.297 cv
618.912 331.297 624.63 328.999 624.63 326.165 cv
624.63 323.329 611.859 284.8 611.859 284.8 cv
611.859 284.8 599.088 323.329 599.088 326.165 cv
cp
.101961 .364706 .890196 rgb
f
156.511 447.626 mo
146.875 431.227 138.02 414.09 129.786 396.717 cv
116.865 369.457 102.934 338.504 100.033 307.649 cv
97.939 325.161 94.7045 342.475 90.8151 359.391 cv
84.3943 387.315 75.9131 418.333 59.0623 438.468 cv
64.6589 435.999 70.6574 434.596 76.5875 433.554 cv
70.2438 450.168 63.1106 465.902 53.9125 480 cv
61.1441 480 li
65.2052 477.835 69.1713 475.435 73.0299 472.725 cv
72.4207 475.176 71.7702 477.596 71.0988 480 cv
148.5 480 li
139.814 466.629 132.429 452.008 127.376 436.102 cv
137.257 438.743 147.025 442.619 156.511 447.626 cv
.00784314 .247059 .737255 rgb
f
849.926 477.155 mo
842.672 464.811 836.006 451.91 829.808 438.832 cv
820.081 418.312 809.595 395.011 807.41 371.783 cv
805.834 384.966 803.399 398 800.471 410.734 cv
795.638 431.755 789.253 455.104 776.568 470.261 cv
780.781 468.403 785.297 467.347 789.761 466.562 cv
788.012 471.143 786.17 475.624 784.215 480 cv
832.308 480 li
830.701 476.262 829.247 472.427 827.993 468.48 cv
835.432 470.468 842.785 473.386 849.926 477.155 cv
cp
f
303.01 374.744 mo
300.369 402.831 287.689 431.006 275.928 455.818 cv
272.07 463.957 268.06 472.037 263.883 480 cv
330.997 480 li
321.571 462.855 315.923 441.508 311.401 421.843 cv
307.861 406.445 304.916 390.685 303.01 374.744 cv
f
82.3406 421.333 mo
82.3406 421.333 83.2369 416.838 84.6843 411.05 cv
86.1451 405.254 87.989 398.2 90.1484 392.909 cv
92.3298 387.617 95.8511 381.475 98.3432 376.222 cv
99.574 373.606 100.598 371.234 101.28 369.494 cv
101.943 367.727 102.341 366.667 102.341 366.667 cv
102.341 366.667 102.606 367.791 102.987 369.727 cv
103.171 370.696 103.285 371.854 103.446 373.182 cv
103.593 374.508 103.622 375.967 103.688 377.553 cv
103.77 383.831 102.587 391.638 100.33 397.073 cv
97.7795 403.29 93.2689 409.464 89.3884 413.924 cv
85.5147 418.405 82.3406 421.333 82.3406 421.333 cv
.0941176 .431373 .815686 rgb
f
76.3405 466.667 mo
76.3405 466.667 76.6481 463.66 77.4109 459.949 cv
77.6002 459.02 77.8255 458.049 78.0702 457.064 cv
78.2883 456.067 78.5368 455.061 78.8211 454.079 cv
79.3885 452.114 80.1051 450.25 81.0025 448.73 cv
81.8204 447.18 83.0359 445.616 84.4128 444.118 cv
85.1006 443.369 85.8297 442.637 86.5656 441.934 cv
87.2462 441.208 87.9381 440.511 88.6102 439.858 cv
91.2974 437.251 93.674 435.333 93.674 435.333 cv
93.674 435.333 93.8195 438.349 93.5435 442.296 cv
93.4716 443.28 93.3869 444.329 93.245 445.383 cv
93.0641 446.416 92.8489 447.466 92.5952 448.498 cv
92.0883 450.56 91.4256 452.546 90.5841 454.133 cv
89.5524 455.884 88.1413 457.572 86.6275 459.109 cv
85.8678 459.876 85.09 460.612 84.2992 461.284 cv
83.4906 461.941 82.6865 462.551 81.918 463.107 cv
78.8425 465.33 76.3405 466.667 76.3405 466.667 cv
f
95.6859 480 mo
84.3416 480 li
85.1768 478.592 86.2456 477.173 87.4454 475.797 cv
88.1652 474.971 88.9256 474.161 89.6944 473.381 cv
90.4138 472.583 91.1109 471.801 91.8057 471.074 cv
94.5673 468.166 97.0071 466 97.0071 466 cv
97.0071 466 97.1096 469.217 96.7661 473.458 cv
96.6723 474.513 96.5856 475.649 96.4015 476.774 cv
96.1974 477.842 95.9588 478.928 95.6859 480 cv
f
279.007 462.667 mo
279.007 462.667 279.305 461.746 279.801 460.214 cv
280.308 458.716 281.016 456.619 281.826 454.223 cv
283.481 449.492 285.442 443.771 287.675 439.622 cv
289.912 435.471 293.554 430.812 296.295 426.748 cv
297.669 424.729 298.855 422.888 299.684 421.534 cv
300.511 420.159 301.007 419.333 301.007 419.333 cv
301.007 419.333 301.161 420.305 301.35 421.967 cv
301.509 423.62 301.611 425.955 301.472 428.618 cv
301.204 433.928 299.735 440.461 297.358 444.842 cv
294.653 449.843 290.07 454.501 286.136 457.653 cv
284.175 459.245 282.388 460.495 281.096 461.35 cv
279.798 462.199 279.007 462.667 279.007 462.667 cv
f
298.976 480 mo
287.774 480 li
287.831 479.9 287.882 479.789 287.942 479.693 cv
289.194 477.559 291.912 475.585 294.133 473.827 cv
295.304 472.975 296.306 472.179 297.074 471.601 cv
297.863 471.019 298.34 470.667 298.34 470.667 cv
298.34 470.667 298.491 471.245 298.677 472.222 cv
298.865 473.199 299.097 474.598 299.124 476.14 cv
299.191 477.37 299.141 478.697 298.976 480 cv
f
596.943 480 mo
641.947 480 li
638.581 452.587 619.476 418.201 619.476 418.201 cv
619.476 418.201 600.129 450.922 596.943 480 cv
.00784314 .247059 .737255 rgb
f
608.564 479.233 mo
608.564 479.233 608.328 478.529 607.986 477.328 cv
607.66 476.13 607.138 474.415 606.881 472.438 cv
606.729 471.447 606.588 470.384 606.472 469.282 cv
606.412 468.191 606.387 467.063 606.396 465.932 cv
606.401 465.366 606.416 464.8 606.442 464.237 cv
606.497 463.683 606.562 463.134 606.64 462.593 cv
606.795 461.512 606.997 460.467 607.254 459.5 cv
608.437 455.671 611.132 451.404 613.776 448.416 cv
615.032 446.88 616.297 445.656 617.185 444.784 cv
618.08 443.916 618.637 443.418 618.637 443.418 cv
618.637 443.418 618.572 444.186 618.465 445.453 cv
618.338 446.691 618.162 448.417 617.962 450.369 cv
617.473 454.216 617.132 458.827 616.116 462.094 cv
615.648 463.987 614.733 465.904 613.961 467.823 cv
613.555 468.779 613.076 469.716 612.653 470.634 cv
612.251 471.555 611.834 472.446 611.424 473.285 cv
610.555 474.959 609.961 476.455 609.418 477.521 cv
608.882 478.595 608.564 479.233 608.564 479.233 cv
.0941176 .431373 .815686 rgb
f
656.545 480 mo
749.106 480 li
743.076 416.21 702.872 334.423 702.872 334.423 cv
702.872 334.423 662.23 412.118 656.545 480 cv
.00784314 .247059 .737255 rgb
f
688.002 429.266 mo
679.87 429.265 686.736 388.28 695.441 384.947 cv
696.365 384.594 697.197 384.428 697.947 384.428 cv
709.632 384.428 700.836 424.917 689.01 429.079 cv
688.651 429.205 688.316 429.266 688.002 429.266 cv
.0627451 .423529 .815686 rgb
f
834.805 263.377 mo
834.805 267.949 840.522 271.656 847.577 271.656 cv
854.629 271.656 860.347 267.949 860.347 263.377 cv
860.347 258.805 847.577 196.66 847.577 196.66 cv
847.577 196.66 834.805 258.805 834.805 263.377 cv
cp
.101961 .364706 .890196 rgb
f
29.3454 258.362 mo
29.3454 261.561 35.0628 264.157 42.117 264.157 cv
49.1698 264.157 54.8871 261.561 54.8871 258.362 cv
54.8871 255.16 42.117 211.659 42.117 211.659 cv
42.117 211.659 29.3454 255.16 29.3454 258.362 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 /5 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 17.0.0
%%For: (Krol) ()
%%Title: (bg05.eps)
%%CreationDate: 7/31/2016 10:49 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6CX4'BFY3AoJH!IX`IO-i^Zi=2HNj_"Dp6<GNX\'1-\L>B?msaV)3GU].N-R9T=rgi<;6!I(2Zo7An#pmn_("H^/aRSQaKon
%j<o.i^3fh?=0I*tpZDMTq.729XNl4H2u-,Cr3N$njM-0:l^-M#S(qiN-T/8)pj5%YIsCSE]2pXm^\cR92_SKdqsF?OYM["kp?.e>
%h`lU=q8Ms_ahKsQr1>XWrqamS8aG-GBjX""lKae_hRn:0r8"4,C_W0gGhPB0/+)Ftr13EK`S\<@d;N@*HRJP3]qY<uIf7lBa,Amg
%E;]@#If8h]?[_h>mIPO/]m9Q@rW5f4s/'S`^NoY"F8Z@.m,s]\a%te=0+T^cqu"(0hs!!OX-NVUh-XF6`W'uSjYr9KbHncb..PsV
%csLLA^lP*6r828_oPaMO^6D:@lhp$L&%G*[#(=,5-NBV'K_4=,OSk>%M)Y5(040/!p%*A\q8I+'DWGm#MZ4ZGG[pORCmasdX^6J-
%b.-^71<4REpIiC7CUlXtbCBKUjhLclnm>`fs758Uqj+^0hu2]<s$sd@`^?;dM1>K[f.Z%\_s=M_a\1*CG5ViaGk:%?YN6qZl-I(m
%c4>8H7fKU!q"s5mJ+rN)%*1A7Itt5so?5qehu<&U=+C,FpFe8TP$R.8hn4@8pM^$MDtI\KQ:p,Y"](c5-=^:ET7&+*nOWrWqLIEO
%HGK@5o>%j2PmkN:^A[>@?bQGaP7QF5B#F5DhgY7[)P&*[VZ%)JiFX/1J+ruP4-euXp[7-Y^\*i+\GsNVS8U@$p^OD(q"i222m;]O
%^;\D[)<%c1n:1E!GP86+#QIN0q!K)J'FMSL]/OcI=0L$AkF_^DrnIA1='pG)s7k2ahgG1Chn8sUS'O=rl0XgUrqY[;^V,$bm`eu3
%UgIGWq9T(>If.1HVjrC+^OQ.YL%HP'UWq'TYJ0gjn**Z?oBj_Zri;R4TCUmsikHRV^._AN'rqG%5/.$JQX@N'k0S*=T"k9qo&$(S
%rT7TNs4,`I?U'$eiBK`fJ,@d2b.g'*=13E^ZB+9O7a<s`P'@Vo>[?>"1cYE^7pYEU]77BHIJra0Qet:$qXa"7<VS:SroWsYrqXgj
%?[_f$3]p$omiQh!mp<_VrQEf=Rr?(=p0TG%s5qSXlU>Ihqks+LhnIQ\rkhtd)Sb_BnrNfj426:Ep"*RLmd9UaroL0sn*C!:ruN!Q
%^ptOEMI,eS^[I'CIu9.I4l\cTFaO``Ief6W^CO$(5M5*Ws7ZBHMgl?3o$;6H^]!HZpWQ'RhVWeT>*dmcDnc,6h95K)hRr[h`nBH4
%s76(,LsbeHU#kRKI3B!:E<5jfcT_@[?g_5B(PohTqu"X@A:=:Ljer.JqXsG]UA9:O,$?,%o^mUCXDlV<Q_/d$:S3.1^OQ79G.ZRI
%pY3UZ.*&[$V3H!MWMV#_OCP.Nh57f+T,uFU*7+2A;pMr7R[Y9[mrI4G]DNelUYP(>ZB\C0_4On7l"-).a'NZ,?+DU!j\_%NFfVM(
%>,qMrr3QDI\"YgG5Pcf+s6HGO&*^@5pLmY.]fIZ]kZN5?4[+4?I!g1OJ%U-@IG>q-j*9pOmBOfdA9fWY_m>-=LPLZ^LV&>rL](XF
%N/.DZ*pQ+TQ]gd/h*9a\gu%#Hh;@(I+`Ta8a*k^@p[u8UkPKA9h*&As]R.0#^Uq+i^"`#<h72cpmB5<2]6ot5[bGH-+l!P+4PK=5
%a1WL;G21fVo9a\041ZFAL\05j<?B,>Ce(d@e&*ggDrQn',8O+hr8`dJ[iA&q:%#?qSJIGL*@:;qIJ,cA$n.,@>0^T8-*]Pn<7jfM
%r:+FVI>dE.A^<4"iTH.SosA#Kk'bZ9AGbD055#EWJ+p20U<g6.T7>l'o5@m[5L)0XD`q^%cF<\<Da*3'cH0kDe)oFk^;m>8SE$^J
%r%iV"3p4Lsc99gM43Y:iC6rG[.E>b5lWoc!=WaXPm/!f#:]X::`;d%:q49Ud=k#Epg>V79kl9WZLL\=Idp_"k\31jVEST=KqXG\`
%ri[B(4RBi2j5]*Qs4H!S4eLm&ok]nen\):%p@7k8pAXdRp@`[ES[[XfhmV9c>AgcpgeB-Wj8Q:?ms"Zr^@1[bch;@Ihp5'(r:.mV
%Is<a?n"8eD4/BpO-cc5IQqrb4j=n7j4neWqJ#[mc`D&gd3`AbM>T9&B1=EW1IKf42T5#:;n#[nb)[5a@c=`QiiZ,^?"+9/I+/8k.
%\nL2d=eiInrAm:+EWb^=7cR;,j;OO6pTd[Ed2H,\GNt&Ud1O_8=H0Qu5KYNW4YSnr+$&dEj%$eJmrjIh/orkYg0,G4Dg1S7AngO5
%<'ooGn,9]PpP8b#T?3$d,EFn>k[TR"glB!d59@h>bht<H)1DLP/FZI\D2pX>0$!@lS+lM_5%64f$ViAhp9N;`n`]j81E$3J7:[b#
%aaCUb=n*VUj)LFY%`=HU!")SfS]i,pPt0l^GmkbCN]dmPF/R(AT?7,ig[S[lj6;@+EjqU"o_q448:GTDpE&u07lqg@j&sepl51U,
%UrO#Eg\fM1l1*e<miQUANuup?j,ZG!pn8K'ASIAso=8mU<itpX%j9=>;9a,/<^/,H=<C9(%TjbGZo:lbpToZFO[8tS=pDD=XGU64
%11Eh29d`GH]hOpk[kb2VgI$=`^2].]7H[?ZSNG4\pRcr4\js+<FAE51,A%lP;!9#^A9"=jJhAOHM534J,L]/WUNB=!.m:CSU2J\`
%T2\1WN`oTnHHM:_L]3DW:"B%)]oV3iNlO+gWBF?Cl1tr3Pn-B1cVZoGZmQ*dU\*2'G`7\IjuT<Yq*uM'+$QL@mqM=4*Zs4u8,n\m
%5OkBGJ+WL@1^XZb8*Ubq<2L)nHa?^M==Y:MJH(e3:Xj0BeJ_JHGV&>be8C]H:Xh$HZs,RCQd@,I)7<$BII`.MMX(u,.atcIh=kY!
%f.3Ru7&-](\NOYm7ip9nAa("EQu^V1Wb4B*J:j`h5ARd#out><G^OO.gSc-8dQ/Ju55><$Pm3C+nSoK3qt*f,dc2GEf0A6h_clM)
%3r[pp^K6IDNUdDUr4sG<*?J>T+@h@:`GQh*\!"1a/:(5h],fn,(9sjGR3m(3IFq9I4L;2Z:?/$_3JhD"(mUMZ1l0+5$i?o\^4QTC
%+V&qp5^f!G&O!Qg,m&k[5n7S=1o*XhF3nr[T%bmOm@N&!Oms7O[77>/#Lq$^&(+d^]2Vk2Q=:)n;=ooa+mKup.'>:PcMKPC"_O?.
%G[D!HD98/qca>m9UZZakL<feA[<6ik,F1%_4M9j%I/e3$rP:i`h#%#s8,\fBHMj^bp\eS4l1(P'rb(Nd&6jL+Fsi4,Gh/IOBBes>
%j+DaU>p_q&.@;0J4Zpds5t%qAe;)7=i5>L6@t:-?^VnbH,(D\&lcuFN@Xa..+l7ufT>p^adYBe(UO4h@R]Q9Qm!qfHK1D>@G@ET!
%@R1EjJQ6;+i[AMY@X1)Y/A2^DA=%!jA84'.<JoE[Bl%7p4NdT9k=iXU)*_]pGL6Brjqb4O;Vr>FIhW>8<Y)+RX\<(qoH>+UIk!<J
%AqYA<q#=35c%?E`KI&<tG=I;JZA]A_.ol-+8sO`;MbK?Ve0>V2aQ>VSO;Gi,$aW)5#8GD?!B%iS(3WXK%tiSFlS/[JC=glEO$"KM
%n>YMX(0<A2;U%17g3rr<s4cRILSGoNE]UB'Uif4hq!WR8;!HX<NlOA/4NQgXnBo;T`uNOf8%&4Z39r__o_?gNs7>mXm+J!gb+CQ6
%T/Fc`29Mi^n]r-8cPkok)Wf9`jjWm9)T<B^gYr0qs5+@e8*9b?Xtp)'h0[r_E8/(J."l,if(bT=[0a@fPJ=a8%.J!-6O"XcrDYC$
%h/&h?iY#=%DqWT6P!>:2DgH0keGT1#r1"pY[+m;P(l!I/cFNp55N`/@#f.%k*,YKRG_->d5rmj0!Z\N*+6OK_rV%>H=reeIIbasC
%8+`U>U%=m@Pdu(&Ab)E&=<C!..+[RQO*417cd)44O)]Rf,*8DDBGLcA!E30PUh^gqiV3r<P>>SF#5tF^pm@&&pc@TAG5C4Gk'bm?
%>K:&`)gT%ohYjQ]k[)!G1V''8i2:t-(&*,%\4b$\H)aFA=XDQR+bok#gROO2ku2`L-k4-BU4'K(3m'^&.f31Yd_=i;r8i?!m$%(>
%0W3;V'Gj>B@Rt4*aN,%)P^9_]*'(-Wm[Oq<+)^/#5M<49K:h)N^5jA=,0PA;L(pn7?4RCkP$4GFpB7u:CfOIn&U_)kZL83ClDJ0!
%!1i,>a+-ZsLD8].gWu3NIZ>^=2%aeG8V"\9s.+lB$cDr?M!NEPc=TO1RL+C8e%(sq%!*;`o&ILN3Cbr[=/1%?%IYgS8H\u"QI:G:
%>1[ZTCkQ"V1B<ap5S!NlMo_^C1\a*PSY(d=VQ$`Qe"SUlj_A!OfpN0*`3C2Ao9&@\4lMoTlt0mfAC@$cdJ5ZY<oN?kI-nIDlafi<
%n("^NNRrMhak[1(OP1GoH'<$c[Fb*LMTN%oV_5\"*QBWk&dA?l7=!ME.a%XAUU\Kq<Or)Uf=RA"^c<sobG.0<gqb1P+Ip5Q7U)'R
%-\e<SILl#&Fr??87V*2K:E2KBX=5A0UEfTBPEuuR$OVpPjooVQUm],[NeIU57Nd=T!R9X)Apt".F2k<W:OVWJ>b`ol+Mi\_"Ul+'
%.K9om^p=LrLf-^I_'cDdP=J1)&b($u/I#$*Zsl&3\+Tf(gb7=2#BfFA[_7I)?*M`ZV"FVYdN6^r:>hrK\e#:UTHGI%B'UL&Ut)[A
%q>ufD[l=FL(1^o@1S+YU%koZM],2te31_L^R83asqU(n9+@m6jQXu>i0faX-Ui9`d)!TpJVL0m-]L_<3Kj0qAh3iXZ;AI=#\2snF
%<qqHdT*Y@.f]W2`aF:gW0Vn;*OO,!M3KrEk`h6$qR"jRf#DQ`+)13;1YuHHS&jmk($sMHbq<i^ih44u=0(U78^.[3UqlXjASWLp_
%.4Feu&[dnHGgB`1kj@u=UtQ@!j/;3A:"ru5d>OqWkUB5.a7Arbc,sBc)JUp`b?e+rcX5=3cSp2Gj`liYXA:XeIrH*tV].23T/<k5
%IG0&'`1]MS(6f/uVkpN^r#Aq5qTQQrWUi9&H/^#qMVc(f7<hU6jnG"p(]?9C&Nt@R-96Ad0"UEHc//&@)=sa!?7re>Rn`%m-)Z2:
%,J!Ds0=UeMIg![/(Z4HfVi1>jhs9b26iR'L7J^r^%pj^)q5=7t?,$6,BDi_Xr(>i9jV=ReY'9]rPM#?iDi\2:=*X-5`@YHpea;+8
%%q!!MX2FP<^VB\OUKE"gpZB`Pi9%81n:_Y,IW>,[`W%7QPKXbKr0kP,s!uCihs`l#gjf-jp@=jerC\XKXQ$l>(@.gPkepMi8S!F7
%!@pAWRiPU,W.KH?E4Po,F7&;k-;-riRi%rf-CS>+'D4f9F(X\#de9._CYM::jW!jCL-0sc(\*<"aqT?5[@8G1o(%C1c#t>3\6N4'
%)2-IN\Z*-c9AOMS=*5,IRoH23/N9CcZ_+_aCnp&aOaeD<IdhB'hR"gtE1X"S_YN4]FEt1@7_L6<>'DAL\QY?#aO5Md=`4Y!dUp0,
%H&T%/4&)NFMXj2"q\6`,qm_cB5@(9O*%"eU76YV4&EGVFiOV_Y4kE?o2h9^jZFl^7bK-XH7NMm1@4b(brTe*m)t>sfgj/<^oZ_%f
%=F_(Bqb9e+^SE2`[Was>hs@><$a,&1`D'A&1bR56XB"+O/+P8Of4F'#oAlV7k'iV6;G27EA_q6?oLkHN.>sW#jA($I13!j.Bm-)\
%qMl)ML-85dDT&p`Iu=`=`ntps^@C</s)J8V!Y:f3RCo2Z.ONY6/rDTV9@`K3gJ+<Z^KX8gnjCE%QhN"f2p;#<PC@hC%k%gR/?/2O
%7E'D[(d>3r-_i?VIMj0LgZ5EZ8^<[O`4$D2bgk-"l)2^D94NsaN&`&P6$$AT-BGOW!16bMpjU%!i*_ke.4_rW3OpkA^%*L\/BXt8
%&".Dt\]g;eS%PaF"-94(A0$2HSp]d/A1bU.2*+3:6IB\gjOmAKqde"B]\huoJ'bA`De@fP:>rj2Fcsm,6fa7pB:gqdA<>b911.s8
%^MP7<h<jdlU63ZrHK]uGrB`6g+d6?IG;QQGAAj<>S_&!hY_F^sAi91XLlSVZCHZo6o1$*I]ZVKK5_dmkZaAut'9b_:ENKe.a#ug5
%ZOs8u0!K7Aj%W5F6aNdo?6-SlY%Qq.1uI@&9bJJCRjt2kE'4leH%&uFb\oU)\pD*`k^WC=ptpSr,M%skq,Wf?DdGVWp[Usr%b];#
%reA14/h?_qRr<cU`LGb*nM1#to4kUaH0HFNqZdlX)(D\+Y`!%Tc5j?LN8#MeP?">d:$-V(EPte=7EAQ#3lO"?iA<6LWf?*dKs<!m
%6#7L.KV_pAch/_j3/R??$fm\n]%8m,7,d34#HXLEdo8DDg3j6MCSBq%<%MTB0k4WF($lGX!Gdo:SkGfU<p7%l6Q+8)E1;/l+VB?Q
%Xts?5)Mf%LSpE^Fm[#<ik(tFHYpZ^Y,YV@tY:,rCB;nuc:h`K8AefO1<Ed8.,i?Xkg2k@+eGF!5='7q>7407_CTTNjWS"^pi`b3b
%VR&67[N/uQ\t`s#pDj-:4kfRn\/L$sLc1!O,=ZV)C&bPKZj!"""Yp3Z'30t*M#SS9?&)gR[8pV;.,50@[q=n>F#u28.>t7*X0!SM
%/rCT8$k)t[bE=DF\Do0O3o*2^@mT1U!i;2NcWBWTp*pI?PQas^qOV5shdsJ4o>Akk@Su37m%QaUNOWpB'Hc>?Mm4O6V?fRkaRI-"
%ZgZRK09M8QFO`Y\G_T'@WuGBH(kN;iq^F0t<6J=BT-r'Ujm'-B,4NM9F`C<`lH[!$]W8O4F;_rkg#NcdmC(+O?Cdp;E%Ko;^o_X]
%@2NQQL+'t5h_3u#%p9XBO]Vg^-4ZTV^oh7H\Q$;O]S9)O1[pQC?WV<"SYrs(>5:<O5?Enh4o!Iep7"jNr":PW1"HR=,C>&9g>n16
%Q^4=kP9q*$M'3=&1KlFT0HJ`o5$?.kATh0Dd>n\%Ed"$I`snd%Qdq5Nh+`X@\t05p4M.Y-jgQ9/>Wpp%-(<_g0C]_"i?SN'ND+0m
%HWXW#*"IAn/mh1D[3Re?Q=8WY'!GW=Y\9^RZW-)ZNlbb*6O)?V"0BVbQ]Wp*oM*=NP:=m<R4N%rs425soS()%JBd/WA1CHkQf8C*
%$,cj*/d!F8o;CV1,hT"oqpit*K5(lI+/536*D#Ze7M1iVMMV5[0!>$S@2LXhQ2t:Oe.@OP%>5U#W#ab$C)=/,$bG673*d.['r6[b
%o_iMQ[lIWo>Ti8B*@0Wmm&Bf[/uEA41*GP,nI[I;RsZ]R*FctY&JDgChlt>B_D*W8C57?c+8Md5/5%`X2d&o:lU##ifhCGqRdqf_
%.^PhZH(p&TN7$<t@'[ts)`Vil&*kd%6/(6'+bV1S,*[G;GpK"j<;9Y&S.D$&d*Zo-5+gn;m5kRjjn$T!Qdnc9R5b3DVDiHW=J%53
%n3o<G'.u/t.U$;KRIWlhg23dCTQ3i&cVYCf,V`?b`2?`IZb1s_%Xj&HY%_O'3.k-X>n2:>3SS*`*A2(>4#QFY)TDkIB@fqj?:NZE
%RL0;pf!8HWps-3SE4]6-CpE$j@Q,/4HTOg;baUUV9o(OUB"K$DP6mEA:[>#-YuAh?(0,j#-jt'L>$[\QjF#Jha6c<.nHdamH?]rU
%Dto@29eKgYH$,Fq>D@Koi&fk>=58h'&kUl<Jmmnqcr(Sl31BN>?T:(RJR._u%mH6o))#jAXH'SL<F!iQ2XC=MU7'oKGBEe2hdbpL
%TE#e@cjc\K@mCFU:E57JB>M,lAb67AV(1&c\8^V](+`ZE_"J%IWV[j6aTG^#F(N#7F$L,Hm1gcG$YVhmnp2A)8rT!j%QQtbW(s$"
%4esBbIfoUfKX;lCE^Qa\<lu-mi:Mg@e8NJ"%QpISc%n$&MJ,kl,(=)(/M&AUms>2E]YPb_"cZ\9<_BuB0m"#e8J09@=XM&Aq`15O
%l'Sb#GW[Km#ENM+g*)/pNb:X8o>O-`94er;0+lOI9S7\4$>7J6D"oJ$bn@E<4')IfZfGbu\E@?Q$]:Zp/!qW2PgZVQZ:)1nK:P>3
%@]BrABd/^o0^4ggi.3F^5;I-A'ZWg\I]PdMhVgB3N:]B$>lP!GV/mb0ae_#F4HPh=oSTb-_kRlnbX$U`A0lK?@uiSbQJ-2uK6\Fe
%M%.`rI>VNC;57^hE@eZ+/E&@Z4HB)FW]aYMA71F^l8ak>;NF+PE(gZe$W3bEFO;OrKlo!A\_8<^9bH^_:0_`F/hO'ATV<Nh;Ye:,
%Z)kI1e]ON&qmh0_ZT8mQWh*^'955Uukfk;@L<$72?kj2LbfWj4$T](0L-r:A0>..$_(i=(U_\Mb*Ee>9?1/WQMS"aHIbW8re^OJH
%.['H,JdA(Nnq7ml<FYP^<FTF*l5`MkUc;o$Qa$^ZT/7Z!:">[;Zf.WX\MD[Y^*,cb00\c^,ICq-;Cle85ZCl30.]&5OAaioEh6YM
%O+l%^(/2:/e3dVh!>t\P[*`Ikp^^6fF'@/4"oF<17/4ToQmQ%XIEKtc.S2c5)D[*ZkK]1CIP>UMNLp:k4rVEk`2q2C..NZ#1^Gfo
%NOWH:&1bmi?qW&n;uDKPd:FX_1A'nZppaE6I7`cG,"D^hF>_95@iW).hgWNMV!mSICgu+)<]>!;p^,u,0!Q)g`hMF<-L^<C;uVS2
%;C!Am0$AiRYHiUrH`5mdm>#j2"#Sq]58^o4ogn"Di_S-K&.%E`q+G`tdTiHi$`lSP.sU'qF+6"Z$a68G5:eIn32`&?K,Z#c<6QIZ
%s1ruH[6:_k+*8TC/eW\:]+-PQcN%F6PND=r!u),1L4D7b1!pPBODuB"dW0_Sn\gS1.h*oL:bL'Cl"q!1WU;(N9T@)K>TeGK(]]>%
%+CYa8E]B?oUtsa>5,8:CJZJ@9,9N:dYkUksHlu^=3&Qg/K]O]L<^%c3.pe.'%4`YO9:e>6VZ]pG;/BB,5t3\7MI[p;Jp;[fqfl9U
%cMsIjgc[BJf=9@-MOk]]\$Y0U4Z+Vt^??Xn@j3i[\lGgX?ai-XR$kgZBk7NpAqS%NK*^hH@H?Z=oJ_PI&c"^\8EoS2L/:o91%7;c
%'IgnhiFL(o7?0&h>pa1`/4kX?"Gc5%98Lq.:"2]I_IK_=dP"Col%]q+BYnKWl:O0M)$aQcPB2PGn<kJW(QrjNnBd9M^dD2sgTGcp
%)+#p27D#an+adchQfEB83G/d3%HHTGZg4N::Z>3b[G4&_=.)DYGrQ'S8!fF@_]u9_SdWiC_putOJqopa@[B2)&+QJ8%.)L\I%-?2
%QScN=HaoN`bstR]:\gX$l4Tq+H+SZAU^qFGRrfG9n)AJ!ak\Kq#Bpq91;ht5Lh<G.4BUuJL?t/.+j7U`r/0tRG)B^Q5VAq)\\oJl
%U<1I+&@k*<"4/q8lZY.=Q5UHYSD'j4.]X>g.]7.f+X2SQ@5L)le>N:FJVT!$>h]_rpHb<k;*nUqN$AhFVnigPDGV"S,j+8`Fa@+V
%;+qY;j6CDO[Y#K%@X/M'F/uVsWZn?e\>i2.pdaH%X`j[DdFXR0r>p=LPGG.>?/gr*kGStgf$E_TC?-,<MR^*-WKS/p#Y83sW>W&)
%WLeWp?I<0tP1#AC/B$'DR:iO@X$/^!;]V$BVKt,l%!:X5-q?iHLJbLupoNkMS&Uo+2>^YAfC\$DFbV=SR-1M#0c'65=2I#L=O/1H
%i1./\m5uK(qH=NDkW*Y-[?r+hkR9p=j*?)N(S#QuLN`1fdF\&Trb1P3BJ`R*o?-Y5Z$W&SMfd8Y_h92'PNN8F,!J@(cP-;GfUR;5
%Sqq5;k]Uu0,DbQdB>al-VaOL3+:*:64lK1S#6u!K3@IFB4T5#rmrW!JSHt]0e.p7SZ]bQLU6F2cd+PA-]4`%bcb7W%0D%DiX00:$
%Ze)b+mOBt%`;$)hPP>M!qId!qE@1H>X'p$s)4cKBj96UCjt<g^gne7W4o(]8p/](UZKUZO=[/Dbs$<@Sg'htR-ogeJYHGgj8Ba1s
%:MP(G82/dVQouULpcRT<LP@JbO@NQHKuC,4MT*Lq_A!>edEZ:Q&iJ8O=*7)&pFWoo%HA%pZg29&&TctM'=_[t%l_^?o`E&LfuKtI
%JMp"N%'F6?+2g4rWU@fWh*O*D*bZ9+/^0Y,cC^<c<\[Z2?hN44RNW'.OWTn41Gfr1NJsAVQ>d<1&B'\8/Y,I<Y8Fik^PT\i+h.[Y
%cCXZtaV/GP6/89[;oapNKP2G3SahHrNVPP((nok+@P9"fEg`/]PTYrl)pn\c1N/=2Hf.915ErQd0RI0R&>!:Q8X&9D8/BreljH?2
%JH$!gdM$5S\Ft:YXAX+,?QG>G.Km2TVuT,?*8/>j=T/L,!b#&QPZ_mOoNfpgN6<H/QZqXUELf].mi&`b'R/L'VLDR!A<T1odumKs
%`)G8B,Gp!)M4@O8Fm/Q4H^"TLBLB-phTnHH1qhi(Qb^U7;8gkU>t-[2fTcj2P'3QmMrB4g:Kc<#FiA`1C_(_*mGdQ/YNs7,&Ilk;
%!,`q+?lTTs&-F">3.4MYA=,P8n\$>a2d>ti%*$oc#kfHe6e<(#.HCXk57pY)VgXsCjr>pQ7VuR-,3b+RY1O&j2Dbjt5MY'SfT7oR
%^g.DimQem"0>S7#(lnQ*6]NZO1o7ck1.'OT%>dcSAOA*?-uPqdSkhDY@1H3_J\j,(ajM47Y!J^Xn$i2mb$Xe8F0eAZ8a)+Q&o4]a
%b6W]bfOP/&['T_pPX-tmIc1RrU[IhiJ0E<9ZQZfjBqVKE<B8bl"pL+66YMB#R];uJ-T#p]dJ,!)WH"dbQ]Z/&hV>E&UVQcVJL,_Z
%=#)"dcc]-fjg%i;g<Y9N)FDt``$+iOP&e.iC*6'YV[N[I+O;rJT+:arg'5G.\32qeUNWiD`3T;7L0_`XWUT8*Dj5V-nko4I0!WMA
%076$iY(j6J[:<;3],]ja/o7Ja8s_n(#XfhX\#s?V4#(V()TL#lB@fq)a9p)bAc<,`T1dk</+Kbc<5<F>\O1nAAIQbR'qQ3S")K5O
%,omoHjN[)A=\.nZEN4kN>/70pUj!Da>uu0*Sa*\n)TF!iB@kIUGRs@jp4d]mgdts0?_,/<^_%sUXOXN`4t%V1@hQ`mK$XK:nI)Cg
%/;&bjYJ*?_(U[1/$r`"^"7HYK&6LZ9:&Adr_f*e(XbZJ-Sil.]"c2tLE-pMKp>QtLK=Jd=<a;@9D]2rVAWE^*VJ:(,kp+,@&?L(1
%Tkh45e_*5t=1(soS7)cMbFp_f,t^7*eKcgGL@+]/@6B-ap@MJun"CjMSJA7Qrf<uN6B%9QCj9X7Xli/U)6GunTZ-cn9Cfs%Qe$II
%2C+f&*]a[c?T!cK'3ejTFXC:W2-b,u'3N]"DpFiSa7>gn4QqhA/-o36(6]q8rYb'_oh=e]/[RU*WSW`XEk"3**b@f-^]EnC'pt-k
%`&k3fD(ssdOS::q"49C(22HO5JI5U20^j7!RX'&&45,u9#p]Vd1YblT?)Vu$7'-6+fK5=8frniQGWl27!r%^O>__6aqMO.9>T#XD
%J"]5RL;(PE.d@-cd%%-ti3e,+&'9`Ss&^-K%1V$?kfY9$d;Z$X4Dt3L>CFW$nt6`](Ni=%O0+^X]6GmqlM<M*m.u2E*'D\k3Uj1E
%XJcefS7@B:@PAlV66WUiL`tC]%1VC4\dF!od`r9+/GsoHQU>,t_U7\Diu#4bRu;H0qpF$gEuq\/K#\VGJW+/[EudLY@^3Q+<0UPf
%U4c$%N%nJ\F$hs388O`N_Po[=)AY`akFjOFpbbEM;2UGV^hg&!N30Z50Bj**#Q<MR@GH?Sp>eMh`7RRFXYI):0L&PAd$S=IdRsZr
%HWm-&Ze>C=98=uq0+MCd&_\D."(3A@,Ni&J&/$dYZp%m*F6#P:FplC'A5=T)ai)];Yc4BeJ9Ije2-(t&-+aTXW"M@q?X46Ks5QJn
%$=/gTn3ric@^1Qo4Qi^W!,.3SK;]CgM-3SS-*S:Kpcf8k9Iu#j1rAH3EOm;_g5?(hP>J*Z+p!4RqRU#e&jU2""*7coJ;cu9Q9D.@
%$`E(D`d!UGDurFZ7$.J_Q\(leQO0>^ji0]V!2'u6kua2N^-bM,Xtg$Z2.2D`bKB)Qi8+-QW"Zs]`g_36HCm[$*C,[hR8A(tl:NT[
%*@NfINR'!0&#B=[M"*fRs(Z-L!/I.4@[FGX6_)r(p:^M6bK'1,OP$O]Dl[=%Irol4TEhC2dIY/YeJ)#Z%djjI'EDN!0Sa_2Zt"g6
%&gK_4E'\RMM]GZFF]FXXW<VcT1pd=76Y@Q&?T#cAHdPtY_Y(5VhLd';0pG.e&Gd#tEWal=5l"jkbLD:FmGRr)K[(d_Il6jZJCW>9
%fMu;R&2\C4=O$,IZc?9O22URJ\@lPmO5QQlH.MF=RQjBs^_mdJFT[2NMo($q`'re')%ma^!s+7:g4=dm7DeI$M2UYMJAanP5[`TG
%Ic-0AMZSJ1`C0qrJE"4pi/EMN)M5cC728*riZ\JL`l*.j5X=>'O<>ZcdH#t:MZdKO6rXg&,489&E(%W54[C4M<^D9]ihE1*KSYPD
%Jq1db76r'UU86]MLl7]'a2<1"6,;HlXPf%lo=BO(_g,ZVT]*Pji!bA3g4I,WH#Z,8iOlb[N.d,[Jq1^,I6g-WU;5[iKo6"bJAOa/
%_+MIhNPQJ>k=#T+KSq=45f,sX_&3OqFU!DMMaE%]_EFH\mn).M*rh1P4,=?[(=<$\\9S7n)$h%4!iqmD'!/g5j9SF@L^h09SH[0\
%07$+*`Q]FW`<1?l:S.3k4qO667`-7bL1,.j^SBSY(uPOOMjf4Ibc2![*JNR19KS%>_RB:rPhWe1&I]I7(9QTIUSI-fr/f79d[c3c
%M=U02;MYpe(i#_OWOK6]Uh;#\bTms0^bV"lZ(\,#;YmZ%OP!!'?p_gfaYMm*d@$C.LT;JUL37^sDEWOEp#J[T'BBCDmaormoFssK
%&MTj`?<rDO(+19f,IUIu&%<;H>JrQN9+o&^o?<pPf$7T^SV>"bqSFJ2-8&I6I-@ZJ%VWn`R`%s\gP^gV#gq>uZQA#h&+E_aY2"cC
%05^&nbq:`fBquIErZ96CE;+Gtg1Gk&Q^B/`1b-n7'oK+83a36/W[W?4mkga7AT]>_Yqt_5=*9@*eSf@`oLE#S>sIX@>LdGr#o4p_
%Sl]!&]OaI`mB%8:97jFf>1U&6M*27i4u49"&jW%KSV>"b)N.sYB.%B?4%%50*j2KWm52R8Dfg4NlfS$m5LnQ%-?GqL=q-ukeC:NL
%0b@\#dq1#/6-P7MJJ;5Bqa%M7=APiLi(J/gM09XI]5#9O6;/2>onCcZI_;Nb664^lH*bCeBh-d9H$l;M`!a(UG3T\Q,\0?;YHGeD
%eeP;90?fU%2]gZ'oh$Ic-0>3]Z6/J2_gnMc-*`@t[bAY%JW"VQI3Hh(g[U^ZH/[&Th-;dq#Dg*sTCbVmUklsF4!ZE](fWZkA\tJ5
%),a;jkO].POfA<r26m+gk7TjrLqOjh:pDdrTbeNt[DMN:WD)d'e@kT4ZoibBD&hm%j.8p_2f8Lu5M7dcS(5");$%F\c]H:"gU\_I
%l#H)-]gX`moT!3bC3Nb"319k@1"DE5N^@.*Zh%FZ@00^L*FV:NBTMJI+Hj]i>LCZ5gcN)r^)q,WE^ej/Ds?iY@""sj[UHWHUPp0-
%>b3OJos%5Ek$8T<XqsQQUENs\IdG5]G0SBP.NOCd5P-e7MLSoP*k4rTpD+4urhHgc#Q7&fa7Thb9nV@\fFaBsFVZ3rK/>LA]pa*J
%s3O$W%,p7YR&u5S?YtR1S#5`d4h8KaBkN/[o5QC`01LlB4C$>]G,jHSC)E!HSR"JDO(BJ%Vfj<X8V(tddVQu5A=!>7:0JI4Wg?!a
%(RRitYd`%?[_oIFqm!>dfJUR91bk.NJ82125[^)DiM%['1ZRVlS_np=FnM+dc2_FKB;=?0k/3Pe`"'%-9(O':8.f*&f[C">CtZor
%@hO,HDY?th%6"YQXj07B=,g-QS5i^nc9rl5Gs,E_-1NSZp/](UK]qe!=[1R`%*VVsKO;R1^H,#c;aYX7>-^]!C-WZdq+G2:89MA[
%BILk<R%Oq[Ku>S^nK&FgX!9jcl:`HSR9E[7aU>jj]tMtCSm_56oq:U[rfIq95G[f9'BV6O;nJTnh13!IB][<QH0fCD\U`K9TQ.(t
%iOUCO<TZVj,6GE<J]'h0"!<;,f-@.sVM-FXYoqk1m0(]o&D\A6(kd,U!Sr`Wflc8a&ZfPAg#:`-NY$V_6?=@O^,^WMVHkK#ZRdYO
%"#?JYk7Pigf@,T]7rihF;$+hpJU9YPjG;h;5c^/u_77OGrKt_oERW?jdQ<#i&P=t2R";c2!\Mk&E>&G-LufMm%3SL(N0fO77Mp3R
%boO_#jNBcEGtu;nM2+/:\<k]sl6+k%o75"R4ahU-h]><a+Sb$G+h'FjmZ\_D_%B;QU^"A9*>p>R?13U+?FT%@il8*q-dVNM$(rAp
%:_@>^#I*.ih%$\W[s,(?aDXRd,Nlo#8)Q9\gsANNgD0rGlXjA*D=R^)2',TpaP"q&ER]0dojWKk`]V%p4@-Deb3pm@EbPP7huSRl
%Eis2ZFubGg"jl,/OP/B?A-4Cm^m-.M1YeO:4>skHKuM>\-P!?b+-p&plOpTS[ble3j3OPS&9bHf:(V5/E)=pJr<Ds6QjC@^1\;S1
%Fjtg_YAjSl(C+8V`3Gd+"M>f)e:HS]nU_TLEnE5uMHd\Z?&S8fM+knn\jkVHboCdfLC$_;lU:^Q\5a$L?A$]Mf2%1f'C>eU<UmUp
%M!H?EPVgLX%cHX2@BpR#)C(VM?Sk,5_:D[P95oPJ0<%75=%A">?Iq95XlHQX\8L'tH1H(Cq%;h+X^(t0Qdh_V(0(n71l<3k29&gY
%>ZTE,Lpa>1rRagMc2_XH3[EE@$IlFgmL68,HZJ)VC$Xp'Z`V8#XN*LiS6qh_%Y_n:9F,]#>.RZXb<2Ju&XuGbcjC.&9X![#"Xe]h
%Or=haq_=ac>jM`oNa)'DnKcu5oqSXe#5o=Z)Ga2p,rP0J?>)C:V?-O-8&2JM&BtP:UKQ-KcKZe\7l^+')XM`lAB<tW]d&,Th3L!X
%)u#AqT5QkRi_[_FT>8o.FL8Bu(ZjUt5W"(&jB"JFVa^,iBl#U>;eTqO%!DnO&EY8rW,m&k@-G,U&Mb@cjc010]T]BDqbVkT)?*;^
%nIq^=M&ceW6Jk2Cb`S'oNmBHG'qu<ip=.-G:9\l))r>lJ_$Sj5;TD$l7h1`Al^csulb6W:mbPL$qN-34:\3VOI`RL2I]aUl4hgpD
%HM[PLFpbhApZrV?6M_$?\O<]9g!pS'4&CM!C@Y';>V5p#BtGM*/H<!0#5KSD!Xf-Q\utJt'B6O<^HM;\Id+D$J(K[4(hFGY[#nh(
%@a?lub#<MqJdhNZ<JFmW$nP*\ImH>%K>JU+e4+t7*7Y'$a<I#q^fG4bn4>&7a:BiS3?"\s,n08O]:U-Og]9+fe:X<@YKLY.)I:`L
%nm[mGV8.X$?t_h'9%F9Qn!Pog*b]0J%`GuH,1q(nj+0'.,08g]JRC7<:eIhc4Dgk#2Y_FY4[BGgLo#]+`iaoVf@)0SIF0T&enkUB
%Tcd<kF!3p/>a2iaRk,"q.jRU:q$)A*"KqpL>)WCJ,SSHO=7TucMJH"6@]?t3)S\lH0f-(2N&htSD<P,uHp&#pgrsrdC93/9/@B[$
%HJgY&.<-`=VA7R)%PU`+Ju:2UJ!F(TQ4V1T8<++9W3.tRBU6(NQY;8!<iRl/f1-.[IIC4Tb\C0h\eo3&]"Da^:'W0s.K9qS@3]?W
%O-)?t?p319_Lfcg5"_n3#^M5KC8F"WYSVDhG\e`n/loU?Y.A\B73,YnoiSSJ;1"kUB4A3lc-&HVYo@%>igpd6QGG0V=`:GunhEsm
%%OZSg<fD`7%3JtfnAe$0TS'$'(G9cD2<(_43ZEHF7<TH4@"H?F"`H3g=B5Ya1;]%qC&4#lF5#]KUrU^]QrZ+\f[t#;WKr*[1Q!lW
%H0U0#-2&">Lj:[H;Z$kB"[n&S6Tgo5OP%L!g_!hph&d8d&l=mUjBhZ@$;+`hPH1L76_jut&%%cg$Igu)jZDH]"L`/Nm0WFRbaQGm
%(kW1XbD5[]-?&Be=aNYRL[[+%_@pFPlgGb&?)14WJUqt%I3K]?bMDR9lI>>DZOt@3G5m5k)o,[peY'c]&Hq7?8^7gH<IlX`a7i0i
%<k,CLLBn%D:I'/u@e6d6$kO!BFJqXf97q=70P3kbm"\u`eFYU3OWBr'/8=@ue7C.bTW^3B=@7a(.Q=/nlHn;''eL8RT=3-;T@sWY
%oe`IG-06[aZ=b:.7?Q9UFO!0Kn:_E#fVc$O5u$?_O*@m4+[)X?:(n"X5FaV4fLXE[$i^E97o4J]08`Q\iJSkJ24CE;#O8))Xub>Z
%0Br/Lck4FQ_Oe7P<!N8O+UAeP""V+i)'l#FHl^!`1;_^r-3C?F]H_M$_==mL<-Caj6+ImMAMbmcMYNhJcu5.,Juo@lQ*E?_U.dh2
%DcXJbSU%?*JZ>gW]OtcO_!HT],gGsi&Hl/L<=Vk(\1/\e9:8)GqrI:$1Pgph=2pV_TfG%=YRC6Sp1$eEOcR%'MADBbVd[it<C2GB
%#ki\sgt8VUs4&khKP4dD@.0GN1c%F$;s6YQWE#_O4&>Z7'.`XV3MHf^@-kn^hn]Z/j->_cdam\lK-rDLbLgBCS11HfX,Kr\n)F;4
%83&t>o\1.VNFUK`4sR'G8Hsqb[22hQ@8?1<`WVME"^$r74*.6@._CB?=Lo-3gNJLt1Lc->$\Su1OK,dl>6]Wh?-FaG3-hbi9TfH&
%&>s!j.T0;IU]"mVATdI"[(bcl+R6LOCnGLu0R`K0Jp\32U5a\7<"pE4jZSjJBC<27S0qD<9YNu8k\HHo9F,N5=DQDBGHtRQ8ps"A
%L8pqXp(RY"@S-7#SL7$J@P+%W=s@@h&\s+s5d^^<pf,';G6;sCok)i-J9.t5Rgo,tZ/okck>/gfE=u\3g%Aq_[>&s[<(sd$If:YR
%JHBZF2][HWAM`@WK8r.nQ4`#"<f3^ip@B-T(Cd=gU/Mc#!:-QVOj]oF992DE-;q&LTro1>*hO3`#;\F:n9aF:%$O`iMM<]+)G?hE
%O@PT5(<C%:n-RS6V(.eSDR4#'KS]tom>UIE$HfMuPKZa-.aHe#;'/5ARnOb6i=%l1SrO)T<I#Y";Q76.g>g:laiY$WZJc0WY`#Yo
%Lf]j:<\8n050(LddtnB0WG29B-Y<7`\6k#f4Lq=E3$7>RmecF5PB@IjTNMkU6NRpQD;"5B`u+#kS+6Cj)<9@^J9C[Ti33OB<+;\N
%2tQjR>B5HCnhFl#N_6Ge:X:U7=>k$Z@Fnq5\b%8,5o@GrK^(1-[8Wr:L8=?%dfaD^5WEpuGKN@`72,hiWJM9)eP0>@3/oU0/5H_K
%?j`Qb#pS:"4KLMPe&O7%QZO]rU!T/N%2#BVJbWf"'X%g!E\F-K!2SMQY+_8_O(!5m=l#-d8]*0B-IAg8r8oIGc,>^B=N7;*VXk+%
%97WchaZYDiOC66Cc5>aOXSfl'Ed`$F.F<tFj5sPjM^kh%WC[03R>+>SU]Q]GUQc0V?C\K7@TD<("p3/>nEhJIcC5qQL0t585FJ(n
%2SEBa!cc!)*4rN0OVS,3)L>"_VO3ko4B>-UD;)TM)X^crNu:eFqYs[<Qe'A]7gpgo.(C!G@3Cr_H7;5L]\5`/:C\d*l*K"l;io+1
%JUV.KTjYmp"M4Z`*<n9(;gdU8#?$:9/Y47ReShP)+e@ab'"$Q,m0&/)$Ehlpe)*'Vc+Jp'k2pnF?jX?F9,)<4'X8+Yn`39,c7@[;
%/4i#\X'qjkdt*=W;Q>R0E@qL#">q\]"%MFk;MLNiNtOHdHJ9Vqm_I4WJUgl-%.Q?V0DPD'4Kpl>1UmnlNNr_8'Vth^s.T>9*0_:b
%)INgq4h5]fRT:&=X*;OE&S<54.uOqCCcW"f)`GPgOo&b<@tl_T^edd2%eC2&FGT%#O/u)N0:9f(oVZ#5%m9bZ&Ab.V-p7pKN%"1k
%mo:TZr/<$H4%u<#Cc0k7<V,67l,<[KVD\,S;5*ck+$9ROFnG`hgN6#>8(_u4.;CphqSE,qMX0J@A5HBr<L#puU<(M%>Sr0;-i]dd
%Fi;oHB8`Y<jOc$[<<,RmGeH'gYn@=H%.3@;>%TV*MR&!,V.C1(@*g86SPsHoMH2M6N#UU%6DP)Wl.]$XS:Mdu(AO_+>RE5iL+'9$
%A_k+VT8r@GGDgLcG,VrN5+5oUBFp8uDjV/k!2!`!Eu(\<nn9QmA;/"t"[aVD-'lT3Tg$uYZL_JM+lK(Y)1WW)(<GLG<SqM9B([<W
%Fk'V$Z7+bVK855&=6IlFE;&2J*cY!HBEXYg<[1a/1dS+U;4#h-.aNfC_[^Y)-5Z=1)%E_Wmm@j*4ARX:Yqg:R)7;TLYSp0l84_UI
%mA[t:=Csp;_T^EcqPo!"9'WsX!mG\ps'R*QicgUqdPPgLI7'T]p`[Sh-"YNkG[HQ>Z=uX9!#Yc.jo,OICpD;r72E&nk>TLKYLf/l
%,eK4>e<hSq`a54d_KJ.W4&\1CQTP7sa08B)<sO0'1=`\N8l'r5152S?[>^W,Hb"%+,4aER?5+<44SO43elG%E(O^m4PO@"`[]Cu$
%@utj`5"Dn")`N)Y'XIt1+_jX7bdM3Y_aSWE)H^a&Zt#J+mh\E?-l4I0_2Yg'm8O)'GI("u;?W8Acm*Wh$aZN(ZL&`tgYs#$2PF70
%gQYVlF"[s+Z/^7b^pO`!\fYC_W0,QR26\'"QDU+o%10.F5dT2j]kC:Sd;BcXTdnYC2(EB@R"`SEZsCN*3pK#a1r]R_c&i2b7fb\%
%6VeHqV_r^X5Z=u/[chhjLr@K*fHBER2%-<#c-3U2L$+Vq+p)Z8W5DPC(im)(_M%GsV8+q5;V/"n$]hitRS8UJJO#DsN"BIu>=aqI
%\1eO6B@aVmQr,_!bY8b;6R,i2-&J/RF=iq!W5d=rq&J^7GCkc=RbtN-Pj8qD"Zrpog+\+Xm^l#a-A;Acs+N&GZ<qEJAm71E/J80l
%UK3Qo<h1NEQ6TMQ[2OC6d[T)qI=L0n1n/p&_TCVM/M?dmR=nXs?,+FCL9un\E#R7@cKL]Z;%?,2!:Rp`h-hesUZ)_J*Gn4i$iHZ&
%#!Kb\:`X&WndZL?>62BnXS'l(!`;H9hjpRPp3ThX5JG1VhT/#>+<4A2k_4$=krX@pN&,`_?_[id#fL6IAipc!a[C>O31/03c^M![
%5H-ge(oTB$IC;kf:)MT)RWn2s\?j&9+X,jI6L>rrJnQ!s.;?b7a#^r(haRX@ZDbS]c9XfH664.E_4+t*[U!\5<=;M=Gc)Z)jqV[&
%a:Q#K"*1d8Q5!l#_2tY-"/t-$)pDNja0W--.i3RbR6,7_cf;\eL6f0lVEabSai$\,mO<dWd\4F<4(H5l2F(dREU::@C0Oe8kR=Wr
%r+I!K6di&NV>\+E[Q)4?1UhmNKPSAiJ/ZZopBtIZJ5n($5JU;#QeoFs3SdiM7,K]1SjO4"1g@8i=^3uL8RNcQ58-RHmdpTkHgZb9
%k"jhbr]QUc=gQgGf&1+iJDltpf#;$"Od7D]AAjL9#V]A?E<u.C46Gn2g_!IqhY7kK1l_/bKLBQPBd1`^/Z%BR5jVGRUqbeZE7[B(
%(';VM&aNslS-DuQ3F31m%F7JrH2-RH0qS^(]TAc<aN@:7+6<%G2Jb&#_!IhqD[82*,\2OCaR:t1?6T`#E723$\NgMW&;1KQ)%\cE
%K:+K,WX)M<e*e2T?YA=R,EL#jUj;HNgN4lrUpjVg8*7Un1LX`+oWW%,+eE<\jmSPh5KOllg;23FT#-*\QrWhD!X*sZRR#qB66<'=
%*39&YUMG1pD?5"C7R_#d2Jd6^S1eBB.OghSbr#]/k:Qh)<b3hLSS8dM;l>RU-+*b!l`(5CnFl(s@CB5r.Z!<69'n2[OQr$,9/HU:
%Nd3`:SK?T5.h-QaVf<2$+9ioqL;l]/SXUt&U7@_jA,A`q\Z-NXh>"$!_e%_R.>52cjp!OT%7@%t3n_k*@K]J!7Z7L[&sB\5@ZD)h
%n-@,Y\[/3J^qifs:9X(=46$H($F-B,Ym833"Q[jEB&6t>BWTn#C[n7#Ae`RI\jK"a21O%W_QELt4K_fuP[;pd)ls`EPH?Z'(,9p7
%DX(i%Z@;:b82($F"&Y[k1crf&KroI=(PY$pE\E,n5eG9M@:$rBRDWPd=:JB;)p"f=!]:q4IUXa2D$HjA]TBkTYsYsZiBQhID\3qB
%'WXUUJt\p]W*u'R>:X?G;W,$F,7(hnTTGe>_N?](B<@QS",/j`?18"/\&nJ<n=n?,DjoKs)V5.u!"5@r1ioUo$0,knGJhetcFPe.
%%BhJBL!,WgJH.+]1+eLkm25m0(soPFp'-HO*ig$W,'f&$27jS)CfK$[p#8tRD'O!bod<6V;A@3oF.1[.j]NbFl\;KDik?X1K>a=d
%78J?NfW]$NSd(K\KR0u4U9;L.7>*2T)0S11&BLHq1'%uY?,mlZ"lVfnLe<KLR-LVL98mO0!LP='!7dhn']:n.(f/tOY[V/IRV0PK
%0T['#=d)lC6bo(2b6H95p7)\Q7JaK/r\n%"F6o@Jj'%`?2G&1Se$f#Qa<tkjfc]*'J[?__]3I/A4)M:?^r"m@pYf4/.T!IMQeO@j
%<3d^k+J?]1[h:(t$58-;jRY4hY/htEZt,7A0F7BiBjB4$?<7W&9b@EepX5Z>%\_WEd]gX]fF`hd5S[2XP8bKU^59%Z?Q=N4AH)Yu
%_-4j['I-?7B#+PCj+@0Eh,Z8iB04Hm174(9C[%;TVMPFrHpop[RW-,W?Q5DW>NeAd8@K*2\<<*ZZQ;2CF=lm+Q:4K;6^<_M7+2q*
%?uq:PVY4f;d@$r;]P]^1\NB(K"f;R*EG^"XPh3^%"1)!sb+M.hW_e8sV0!Qp0'Zg5[k&"3@)Gt,De'Zo!_6FA0<?DGJ7i:@`lc)<
%`qUWl@]TcfhEkm87'l\s)kT]MkJY'X)5[lE;ENpCXb[=."#eSWU'V=VZRus'=IBN([:RhZG&I/1i$8g%An4DdJ.S*)je2^nn7n<o
%e#447&mW6i-5+#6MsA;*F/nRc]Cn[g-97`?kTW7m2h"'fHQH9eQ"O`UC][i]grIk,4,@m>f*4uD!.X"mk$T*.F5,b(doQBggh-g\
%4PnL-4(443Klups3-*V&=Mrg^/RkT]NcH6<0NSk</DJNq%XS8/M74ukO3fArYFF\#[h@:[&Xg9h7!WHSHCdd23t@B#B$Ym-7.4d\
%Q7n22!u;#U3PT:qB@M<dEj)E:gQ`>d9?Un[^*5g-jLW`t@M\N78>-&M,HF5eprFDDB`o?Z5O93PK('Pdq(?WVJ3rh5_XMA&<Kn2+
%B<m\Yk^?Q;789%R8S)Ji.dEX>h%srTQFIL.GV&R*WJtLg-S[JVYIO$>+j-gids?mJ<fI*3HPf$fp0J-MiMZs$0r,'Yo+5FPE!FZN
%+_6F?GO<870._2*\$5@PR^'!81K,$37EIG51C#KJ&r[<p"Q2.mXuo=]XRJ/B2/]TUN!]T4fDF\mE>ks^C_7`pkh\RT^_d5h@gaX/
%??e<$J/FF'7Pa2W'R`U)$+L>apiU+>VSFf,hDVUKXSJ7aM4tUGe/9M=rnM#5't?&gdDa=TG\puF:Hh'PTIT:TLSABKL/pAC+a$.N
%-6fcF"ZBb1E7;2e3fTdl6[,gAV,8pu.ZDhqdtkTkj\@cjhC'HHrmp.Z;]rbdGp*-.Z^)4PUsV.]`;>2sZT!"X:qK8/%&-h9k?[[;
%]%iu)Qu@9%r#)`?(p^\&R$)9Qa?Sg-Lu^i/rJ1,<$kpF?ph8:oN_.)jeHU\7*p`24,CLKq@**dB<LNtn.H"r<oM*A?9OQi>'']m=
%-C4Ol$t+_dD1EQlriLt?L%A\!T\`mSLI$h:eQbK[%>u38C2WD=(pq"<(]RoP8PF3.Gf/l7W;d`)eB%JAJ.p\ea'g%"R*pP9nTkNd
%,;ob.80j04".u'WdR;V7rY]h$6sa[jht5U3kr*-p;hG>N3%bA*]6C:sB-&'A]+k.^64/nZ:cmePOg[VdRD@+Jk@*AF!A(rEN;s,Q
%V_N_.#/1mHb!?$&S&io0A(sg"<\"Mp,MESr%_8dRYh)-6E5()e9uTc@]qI+<cp3i>'8m#*&qCf!Yodpr=ij]j15Idj]*]7;du/gR
%H;[u!c79gD#3S#@fci>ZmAKQS[b12gD0FG0ibWWVWL!T18N$Rk(`K,_VT/&[RGdb,D^s@o7QUFDCC!*XSTDT9>PQ-u%O.V2ro5rr
%4MWr*R"?d5Ic`BRNSB-Sm-=T12r0)dHpTM$RD#^sWA\hk2qoNp9Ju)P`7oC3.E31XY(7'=2(as</V9r`iY<(`&7\:V0usBq,"t[c
%2,uA-0$N6^)^nr53XC?C!X?F`L`#^fGUNh!WZm*=T[/.;jq`nG]NS\>jahL/5]"XTG[:F0.sIs!^d>IOO)GrCdkV)8*ms8E5CrQb
%(`4&,%'[/^dcI\EFng3GSU@_k6(Yo\$Ch98L0L$'=js#!cm,b!2QRC:]#BL$VI)4mL_)<h!%A__>VmpeJV-Za-ic6"cP=i`^:KWk
%kU'Ym2K8t%c1s(F/5JRiP(h_ClQ7)oC.0qT4?4s7>Ej`eSHp6>WfQ9_]M(lL4UaUODmM^E'/OXIleY]\p=#W7@%?<4s2F*'Ie3!p
%=0I*tq<?_km>De<^&%DkGL+\3]$AND8qB!"/Y^CL_(-<P:*FIlCCR$f8-[G<%AB9aC^51s6ZCSaoO_'SP&AkoP*V9Ub'o^c><,71
%3Jc2LBl1^VY%cTM#U%RoF,?;)?1BVL*C;U93'Gd[Z927@d]\!^:OPu;:-k#ho1Ha/m*;_&Os1't%P0V&[U_WO]YdGQ2?e/<_o%k`
%!9.'mDS!&=9X#$RXSE`?$^.kb"VPROnFs;ACT<-)rR7c47[,SLq[M%;1ea:T>_V=C#]QRpM=s5)Y1^j+S-"C+iB-ANffQ$"B4eDh
%#a0U?@WcWrX_jWLHp"D(Wh)_&2$*or=AgjJS#`eW?-t/!fei[shI8lML<$`r]V'JRQn=9=AlY7LnZi4.1K,6N+SQ"h!$.`N/&F"t
%3-"POl6*S$!T89<]5O-n6%`;:kk&?82oDs4bqaGenurQXR5X)/G99"f7g\`u[U@C<?dfqZ@>WZsKRsAAei9kVb'5(P"3*(oU7IEc
%2&V<%S\?+3l3qB8`S=-o_F-d`)Og2#1B4%/NCJ>@CTOVQg;aX<#g0<W&E)lZ+/!tmXlOXDF?h(h=M5O1fL.CnB&l-I#['a>LcWBa
%Z_s:M#iGctX"%ZA*)OG>-H&`=T9a0lTQ0G$&QW.Il,9%;>V`CHK[aTs=?DqC*u$c(Sci^E;"!"Qh$$;sPsp8#Fn'.\s2,_G4uZp!
%_)#%;8`)mJP$0WES[ZCe"%4<,iERKK!/:MY2#mj'o;:^kct)bif:.X$!o"B@*os>gKMO+S&"LDu#\<@m#G.=Q'3,BTRk>"b'B9e`
%!$X\`@0WFs=`qOFj_D'D<J<Y)0R6`"FU\LF@_e"+(a)B>`Sp=uZ,C7!$dOfhScMrFF49.g^o@CcT!Y,7lbM=j)I@JSp06lRg@]WT
%#q^1RB48ja)cZ$u0?H!;ktjtS0NZG$.AP-[;t.^ZAFL5uMQsGX9KJ[*#;U?5dQPt[Qj,T&Oo!^?-X>[-5mES_-jE"57/11CZCDBL
%L;'@34Yla:4C%Z38H&5"aukFFR(jSTl)dPqNqoXrTWu`o4s`E`eenLW2LMj-\M2PG3_+)>-W`p]ODGsDJAm-9[khoNn"3cVpbu4g
%j#OT3odlXo<04_(gZ*EAqj+4LGs2F7f*gmneJ`&uPfsr6(,b6BNmutr0St\E8:Vm]:M%gt.da.:BnLVh6o/RM1&?tF,d'fL!6(l;
%;dZEm<\2i(hcc/$>?0;dbW+=TfF\112XV05X]uDALFlrG$`FF7CNP"-F/Cs;Pj.-!QDmDmmU`Xs,XeLj&P'HbN@D]!@?s#1>)[cY
%:$o&_5K"UUf6hdC0]LU064'9j9T?5QEWGuNp)):j]C*(#Ucn)b/2t/F?;%l`#IMF&aG1Ei6:_O.]lC7RNd+oVdnSR45b6XYEH!5K
%e5/ts[Sp1`1PnOmoh^H?0u"Esiiqj]j'^:k23\57+*8VOLN)%qKPR;6Yq,E[c^JfKl8W=07Ta@pXKtmcgtG'g.dZGpE&7?ni@cce
%2o,j(.D4Q,@:*@S@fne`,ngpd&c4[)G+,pFkq7]udM0G+`@(BTVfr;H2o+u5bE<'P)F:j:LKWc3I)?%Bb.-UCJUUVD2Y@`s!f`i^
%'!b_p#GnP+TOSp^l2hNDB-=Rp,C>&/V1;T]dDB:W$77[.;i6C:c=:g0SS)8oGHV)1M3cE-bHZpj]jRQuR;^k<1reh&SbAA(jRh\e
%S*)+GR_MAL"*)hIBIc*X%%L?L\YL$Ol/7S+g4DSP;4teZY!nXM<>YL2;,Yh)&XLoc0Q&iOh1j@$'LpKS"l;@J%WV$Yog?h`i7k?F
%S;OdH[eHbmL,H,q7%CLt!9Ees<]l2l*q!:*'FAMe9aq-l<[Ijg#\J*ea^A`.!98Wu0on<=,*lW>BIqWV$A@/A7H:](G5`cU`%'WE
%LA=)KK">iMpQL69lqrAN!R7/(+u"NaL']ZRfrgFY37ntN=tR_tK$V$nrXb#U9^-3ENNpDf7Jh<r&LFW]IR)8-qfG+eBce,#A$)Vn
%ja"[+^c$`ff6u/AfK?Ho.RdfORmM`UW8+"Aj0EZrNrQP.g%5N4lR.G,TPV6#q%[&m<uk'!OYpC.XB:BkA_]+?,ISAdX?,onf$@&e
%$D&:M7ZF?b3h^UY#4a+fU@aU";%Km!TuWfi,N/dt4AN9qO>=tD[>'P?Reg0r;e8JCdqD;/6?uR*CW-&Ajh'3V>:jHn=r#N:p\s\>
%JqnQ3ZpGIoQXW6^k1ek6P^MteRGZ%'"">tUKE2eLE/)rBQl7V\T6^Y\!UhOAT.-euMar2N&S,;@KYpn`)@H`Q)lr.s<k7G]Bn[ta
%UQ!jkdoA26MGqkE)@JdCBJbr!.a[/,13)%Ye1,k=`Cog7)3)U?3jq:;"'EmS[Ob+`TU+C`ZFcC&5X:P;b*`iXL*1;]`mE]7(9Gtf
%T8k6hZ$[cHjY99@@uIRAI6:/4;@Olt_r8gT<q['J,K=,tb#Oqm>qliIQ=Uo2Fp4tSWM".s-mAc(=W)%G7cZS*>(4uCh9[u'a.HHd
%S'c$(=[UA4RXq,7NC;][1\apZYUDu4@\58g_.D/s)n*Vh`S`=,9=&#E)ojWsE]Q`2iMNR<MLc<]?tgD[aR)5(@5UTV[aMbN@Q&HM
%lZ,s:+M,`Z.Z'(Lg/m0O3ud`0jstO@.]U@CEDu(8Yh?*5:B<o+arF$,,7To8/H-@HEO#0D64*uM)dWtX(o"q:_rY\BlJc5BL4)or
%fIc@oe2GA=<,eg>3(:a_!#)#Y"W!jchSj8W4"D8#FGbk_NB@?fOj@SN4Ve*ZH@r_)_"!uFUl"[[AjBp:[B^A#%8?Vu^Bk5q<Wd">
%:=AY<Y=,M?Af.@\FA,i\b<,kCjr6<n=GSfA?BaZDeO7sW]c5r+a5mO[(Bp=2!X]"KR;?46'auZJ4I18-+>KlRG2$Lh)8k*=:oA-g
%OE`hBn7:/*9tjDJG'"1OeZ3FY%"5J>\dicq0U&@:05],t0s_VW.[)4u$FF`U>B4^eee-Y9/#);u2ii16V>Y()+auKF/iSdY:1O"O
%("P_Q1Vu0^j##a6:mXTa)M1RV?2J`q-Mrk^'gP>@4J%+7j3j-bL-`dA4hG<'\RLQ\lsQ=!B:Ep%fFkFQP9<!/8g]3-@9rW-q+_Q0
%@"BQAei44lE<\^DoGEN3U\EmP-M6$.4[SW0&s;qFN(B1)$1c7eV<DOn&B+m*N+&lq/)M<gRbK,TRs$H[658!KHk]]BDi9jd2VX##
%(9OH>S'N>hrC+G^B"@(6cjGCDO[#Y[Jbh#l!FD(sYT"L'=t(fINmM:mMumZ2oFp^$,k0a'%.c?e7j6a]YRE>@HLWZK`'uO0/Y?^1
%o9#gmPRq?Y"gadq1F]ld1#f+5nGm6AA#\/2ic9V'GuNm31tssCae?A'p#7.I%M5t.:8dMKfG+L-HG(9-Jma&OI*<-tM\Acom[sOq
%f!PCp.=fZ%cZX-0D28U@V;'d+2Uc\k>]6DaYk*SnAKV/:O%!uk"Lu'c='Qt;d+"XJ/j]8#(,"e2faWU*U202rQB`1plj"XCV3m5:
%<n(0^\otsq(4O_",\;GKf%nIO+>or@T+Sh0%_5dI*;Wep<G&HXai+.k5itP^#Os^TMn;\j#%I^7LlnZ="69Wf5`Q-n$tQLY#YuYc
%1G,qF=%oXmVQK_XY?IkGNs,P9`b?a\E?8IEUmTB-Ur2Sm,M$F<XiGMj]a487"r9U@>$P4\I`)Reed9&t%=/lf_&grOg)sGZBQrVJ
%&cakt.$4,Nr;cQB>N:/Wh3)6G1$$Bu7^Y\,D?5oK-/i[QEjKibT`;p@>VB+,DMBL=mG!!a(>-a3,>/'AN$.8Z-<sr>Qn4i'L$kIl
%>LQJL20Yq(<P$*_`@rYb)BrfmCqH0/psM!@'nB,%&Y/5,kTQu34n7LS.a*dU?k1*'OKi>i`MXmI5rYMtn#7UPXQlXm1ot#HD&+6"
%7;f*ZkFd%$1lBu/b5HNF<_U"S.hhn9Sg5S*q)h&P1K_F\C!@#;6_"Eo&02`'$lRM!\Z))>"7ahp&*P6a5T1WuQ+,Q$1979o8P2CA
%^_gkR?JU?b^Ha6#ogDA5NMqS+W:GK+BZh:LXSQ<\eHhC#^B3\,\QVcJ;qlJq'M&QFJ/Wt4ViIB-j*h)@<+WdP/Gon?Od$_oC+2.g
%Zk>:glc@UQN!Y1T2*2HpLFjP'5H8l4E<G\r;.R,H0UX#k34CBa7#3>gAjMj@J4A.&e,:XQbl70cXO2MiDuX5oW1O\Es+u]T:H"d0
%>"Ei]5fW-ornR=1F4Vm&Va!XIR>d"np>`GoK%%i&Z%"6M2XY)-Zp:`5WK6#)cSC.K(p5HJ$(^i.4rF3h'CRXuaJ:pTg11'#h)ajV
%I\X.5`-TXke0JGS$p>-!3$*s#hQIcW!NcKLfa3]Ob6=+qq2QBoAsg:;\mo-_;_>h/N,$a7&L%@R<5WRDac;E[deI;;:LKoLlF7V)
%fKCr0=!qI#VIL1Ldj/q-j(c."1Xe'7I7cKB5S.0dgnYQ'2d9ul7)sh1.]ng&*&A%2e)EAW(e?O$OldLC&6/W5b;"2DRWX`4'-31t
%'ur&E!2MAiMW:R%Tg<YAhu/GhR)48Ym)J69caLoSRfVBkgr@uuLHHVID%,'/@2dOlNT&M=kJWM9fJ0KoCtt$M4*ZasQHYn&NSuCP
%[Q'8O,Q-,*:`<i3hU3.40j!tT00Wm3X/31NlXA9%9P?PY5=G=+;&hOg[ciYn5fq*8bnq5$VI5D-(q[tU<#:nkW#C"D;&R9ahNT6h
%NVt2i8_Ja;(n#kal;'O^W$i[tM#a;Bnp<n*T!K9oG8b*(A":HRDl#-W^Sj:L#%JKSW3\Gq(sf?&;<KUPUdiV2dhh'$0ge_&`;l([
%Bq;o(-,Q$1:0u-Z&Nok:nmYlPFoN>Slp1Cimm19]O>gZ*%e9fJhNC_S&)B#CHb`-$"M]f+S0p(rY##ns0#m2^_2`RQ@h0ep]T:R]
%GjM.=Z%R_o`0Nm<>g,VV<Al5e@[54W"N(de^l\12/DF.eSZ%H,DAI4H9cUrB%k%&"o9m')SchZnS[KA'(IThmKGHu_^ri0<Mg(D8
%#@fK:-a=tgY]ucEo/cFW6\r;7FN(ko6I&Vjq`lN!Z=9I,5R_%*`L$k!p<06kTRFc=*ghiZU/T$fME-DFPEi$_M^_?\'2:2`@c<5*
%96&^OdFVNYS'dju8;`n1'qM-;j:8](Etj8]!EcrI7<,Z4RPPYQj;D$>L1:);PYH6s(*YO9g&U:`-@3DMTI5Io!B^>&:/%+Z1kV=.
%COX^2M%O/d>2r"FbS&s-SXC>A.F_]d:;'iIa,-.mDH_MR]YpJ))d9:->R"mHq`M1t,@OE6iKtMj]Ehe-1R"4$4d>D]7<>!'cl%\.
%=TQ67$&NFt*o[hTEA>/kFMnH3"1;WT`3?`i-Jo-DJX'54He_*B(+#k&^,G(ReC3@"=N"k?B-LeaIK4hm1rNeSBWOK,8AE#FN\&-0
%dpRU!#3;0t<!#.qI[lYqhcD[T1Mj*J&E?Anr&86HQAohLa?RmhOF=AJZ`';1Cs"r#j>l"V,Pa$Nn]TR;HPfcMqR0LjWOnP*1\!.Y
%<&)+GB=MsIfu#HEr(a'*+IU5!jda6`D3^EG,iCUS<KE*V8H+5Z_[2)YCJjc!7"Xt#82lK:6*+/52CtF9=hgJC(n3`*/NR0B_oTC+
%88tS;&/f]H%]cQ)+>(BcBGab\N(rIQL5o^%`+Xnqn+[_IQJn\D&'cngKH1JFV\j;O$$f8S_[pjOR@_96,ds4M(g<c-ab=/sOe:16
%Kn1Pgr,?CZ&CZ/rjMWU.r$Rc6&dneF#q2_C$<PuKi^>:jSAeN]<>_).UCj>K.brf5SN2Bi@L40H;[Uun^tfp(0K;<X\W;E\5g>R_
%K2@qoT</9h0Re)N444Gu?0Qd-9fQpEdCFpM:2+>f@;MHiZ#)nG87KKDEus:L!7qmD0QMA?\_0!!]5e5]4)c#%*1L@X3J>"A6()O6
%Sf:/(0aM\;$"^k\&=1^:Z4SAom^a#9I5(-j[9g*CDp#s6jM=k_)Vi/uAlI%*_8^.)be\NmFn#ZS<.?:H?s6+7#AGm=Rmf8(e=+$B
%BAl5r%,tWq)o3AMKLkKg0R-ZjVDDS`@DA?c(e$\I\:V'G#Ytg]EiSo5:)1uB,ql-'"M49;#GU.M3\#B+].un]9sFX]Ylq\c8V2/G
%%2f$spfD/[*@QNG))g?iHj;#)No*?U?l(je0IiU>Dm0>uO?8R,n'#:ni!'D9!"9dD#2\Q=lg.oub<SBS2=O(2T]VmOh?\-Po1TUP
%q5R]N`XVi%>ZTNnN?!1Q!HBT%EaY-L''A3/^p(`!#\m`OVHZ,<"+sJa@!j1'Q>o:J(qdZVa3,2L0_X2S;Qp4@7$uRGXME1$%'5t$
%J[oFk[*B?e#'OlQ"H]itA)QC)'NgdGdc(DdN3LVWJJ#ODo?7K!(c>c':'_8%%m1cj",8]8_q0_T(^gi/87r#/$Ngd5]KQU0W)CoG
%^tJGN1+H[4I$<8L;#pA#bOn7+N/gLL_#oX,\+29l!4?Ofkf<f6_[VQ;c2rr+Xa"^mU&ug#i6I/]fS*'$>e&$t$4:1T'bZiQT^VqM
%@G!O?0TZW<Nm@Z_Ij\[hOoMmmK[&b2Mq,=!q_.O?6r4mRn4;)hCl!*2Jj=i[ZUXm$8n$G#8*412-dY+Rr!SL>q@;]\D29Iqj<O1J
%NW$/9b^1FfJ,T+upc!jqr7eGte3/&+YKbj6#9t:,`+MTo?espVUu;2G`"*_=4oI%l-2(c8M]i!n^g7UdjM\fH7m]Berl&2Y>]7s,
%^D&'UGZQ"Bar\\'lGUGojcM-%&cVp.YoCliSI$*Lm#1V)P*tGImk6`GNT@dmql@*+`gWb2)Bq=b^Z,2<'muErnG_Fk_Ea^arfYEI
%UiOHO9/3pUEo(1$AWFK<J,,F;q\AM%ZMg)pBRfi.F7+t[QiE<:T,'q!7ZD;bMtWK/0Fe_nrT+8.+5MeI(RZc7)E-;V]W7$]qE"#I
%%KW4_::.d[d,huDIn;F(&dr@Njn8^:':hYE?X."tDDPt-^UU,"P^h!Tb>(@tEG#/DfkCV\op7)/D#5_u#)g!n4^YJnnl-B)3#a3J
%_;Xja^Q>8Upn;*o-!Mu`1t#`a75`BWXM9]Ip3&n$b=%oH.qANhpdhB_NV.L^s)LJs'C.;b.S:)o?gpkR1`#1+Fsl=0Seur#AZEr\
%J(^p4`V5:NY/u-:gRoe$IMqe++qg[J`Ii-O3Rdrp]?LXpqq[I!-jJ?XEY;PVEod'c/93OG(fTjd\=:J0Mr-P(/#(o-T6%:8:,A;i
%jHj#5Z!VMKU40fKZm^A@S'u=dp)#tk![D&Lr:6iYQ57Lo59D7`Ca)q;np-u)h6eTY#_!?jA%obbIdnAq3CeO*aA>=coY0O?Ars:p
%Op)R4jWh<S+rXkT611e)GtW#<QA.d*`&#"YQ!1Y6*-G1/nc6lTm(RjO;!99M?cMRI<-!.h$5eCQGDZHHa<u.<c2Z9*m(Sp]EAHEd
%.3,S<T%JI2gY<7TfmR"7KL/RLpVin$`=X\B?g^[O[3/7D`@1)gZnll4^)%On*pJ)%KnWt-^<G:Uf^8=F&286HUA'Ak=b439\drA=
%Fa@C%R!gsBq\$G"=q>pdmd:-^i;C=9-Le4ar4\'M"I"HM^Tn_M6B0k]AP8>Z#_!qncf##A$Mi1`6a\a/BfY_\6:bn0q0a\WLsYsG
%.=ad8,5?j==70NBpsjd0PgGc80\C^l3p9!$$RmT]S_uGh]=!kGpn[u%pVcR%d^]V#00<Y9V(qm75kb-i__:bgJA^X\^KMD)RW`9;
%jkd4ETn/-\=#X&n2&LeI%hY.MBD>3^aAc3s`UHNnpHDJOr2+5)b=;$Fh]1NDMI/tk%Ye?0MeC9Z.+rujir9\0Y6)Y+VE9SZiO2Ln
%(.OJG=0^Z;4>Zo`rbGY:T7U(JM#tpBkP.K:!862R*5<&_@Z8%^pk?YPYKcgBY:JM@3.=fm5@G8@m*#!nl=>H\QjLD=`@i93NA7@+
%j^Lpl_C9qB!O;Xp7.Eod(0;+*ec[%SDI@5g^N^WK)`O9(IK@kUl=+8u`>EC([)MO(R^lO5L0k]&d1g\W?gbV)M.0uiV=C]m"rnJ/
%PGdAliKo^9pimE,4Z3*I/ckSqk4=Gg=*Z)i$\i":?<R&Y1]6MlR/P7u9.>V#1]4!A]dVtq)1Eae_KB>_AHI?2`JQG7CdpAP%)4:U
%ouuo`l]H,;)1FS=[Lr_X=?O%>:].rNoX3)!hj8'*P_-Oa)JX!eG#A0(h-$>568/i,I2Ke=L[s-@RGSgtc%pVB[UFn\fmNl^L66a,
%pZ8Q2)Fe<e&*Y`\,AVq(ck\!@h``6X5Yf@.jLiLcMk,Qiff8KtOsG8>/d'I_qr6:srqf7P)`"2]S[LXB?S=BTiSL/.I7Ma7FYkkN
%C$5-]ha^;rO;Xgsh#@AC`>F$dVYcDqpjB!=%-R5QS#SZMo>PX\e.\<):83)QCqeB&/l(Oj2]^!f0&L(V*'';Q0G(HEq1=2!R=Q$6
%03MRr#p*IQ<l.3nYRp7mg>U!0$R*O'PPF,r#*!^!+t-3Lh]mjDfIT$t'Y_JnVJufIL;e3p'DNcXLO47E?;*YLO?7s\n;SNMoY$pZ
%l:SF_+^t.;[0LtqcO,UqEq`J//B>tHiuG?j)KRRaPa_#W(JmfpNg8IQ[hnj?AAjbA(S#!.>ro7a'(^p*?6ei+``T]1<6j?/Y2tMG
%Q[@Vq!`p7d]D5#nfSfV,lhu[DQT#"A1Sa:'ju#2(0.GNRJi](fZJ#b?e$s^,'*k=r;>%(e%SXR@H`7VMqMsQ>b\lJ*"hP!@*2)O:
%:@rGr]0P"9o:AL!!CiiZj,J4C?I$nj7PQ1CNWd&<Ek"1q07J)q-7_=L1h=R^Seo7Lfm$*7$ZnVmpWh%l\m_Pf'0.`2-8n&IEq@.p
%ji/<A4mg"Fbe,)T@U?;#F;!+,,b>LhM3`?EXrV0:Kj1IEdi&:>/.qOHO0$!UlLk8t'-e'bc!]Y0\&.8,aN@/u.;mZ$G0&h0)Iql?
%$aTXO=a@:)0i[M@]War5ni3qV&mdCYreZgTDATB`kN(_fD;%VJUL@M'A'nQc'<j3[^&]j"1bWtB&;Pk23+.t,-a-\jGm5WL"B9Tj
%a\)Xn4#h9OdS/]G)^d:q-t#;%-gq^9jZ[LJ+-VnT_)`9!S2bdCAJWZQGr:8A7o8\10ZS4\,:>/)/qD2+-SKa$fY)=rmT%<IM38[9
%:@I'hH,IPl>#n&DaF\H,jOK5Ee^>Te0*SlQ)WAT:@Ej+U*ZFd.;t=]$:'lEVDYr+d-;KN4N*p(A3[6:f%.N)COdA?HX<f5`hCpO@
%Od?0u5Rkje5arUIZQg^`;4;??$jPX\Od@U::gPM=?D?ee'##iD#?d2<#Y&-s!m1>-OdF-Z@MdHZIP]@7N4eqMFIZ*b]Vn\YGNtF*
%.'k,L[FY@u^Ss"009B1>k9E]>fX0!8:<(I*<RoO>7E3N,8tS,rGQUY*CqLI$8#p,/&;B2n;huXpBh#i&i**/C',rSlJrSiT<^-aP
%'>ZT%j(0npV)'2HU-5TL1cer>AF60$;U>\b7l64?aEUQK<>QD=5Z23iT]-..r[_\+?H<JQB,&tDC9osRLNhC`3773sAV^29Z1-a#
%p,-e%?D,fP:nK^lLMbf+'YFMSeD,Y,(Qf]U7SX*!_h,#9^Y<1+DCP@)]>aJ=oXc5k,#*pAmrf'W3r:O4TuNLIQ^bnnoqKsJSP^Ej
%h<gMB4ONS?it(^T?YiPjd#YO$ims$*&AC\Z\UQK"G/h)9)YGq>Ejlt:lbp;+5eoR8E#2_L,4srD]-%`'q20),hC,82e*Y""^kPh6
%[Ys#si_O*s5f"SUmp*IiB-B4p<4efXX_452'SmsEm52EaoqfL0$S2cMmM!PlKS\GE__*W*Ltamd/hfK/PICnf>Le+We*ApJF7aF3
%h"X!Ql_9W80QeT?knXnRAmJBd&@-^0ecfam0''[Vbr,fM>$Y)1_'M:Ml9^;0jK,r;(*+dQ`LR\fkDL$0!:Pa/)5SquSAQ1e@C(J_
%U$221MZ=".9AeG/Fl=KPgcD&[WbOi9Fe[@@P6E'[>e&P69MVGma>3SaNb#^46L?h#/o-@<)H=;`?mF<JAC;c+]<rd0h(=<J4M(=T
%(CD3h-3c@1C^gjMlOn(l\u9`Qg!tpJ(\N]o//I'ta:t15GIKR&M*i(^#ot?6b>-2?moWh+ccZ(-ThFY":$e.PK[cl5%h;m"dUD"(
%89DCB3b"(DU5O/d@6Z-eV#YML,DkjRXF!5TFJ9VkcD&LV"U$n^/@mNXHuNc=%$isd'[EElq;N'G/hJpJXYa&r+BKhdd=#KWXe=;o
%VU=3Of6(]Q7EB[/@Q(/R7!u[mK0I\#8>@tn/nt\NgC6mCica5=bP6-u*g8T3qHR'=(:Cp!T"@&fY*7j#2TH[3M*+ii,AKD!`4fLo
%o"gp0&ktmm>h\\c'f^Uo4XLpF)LF(]L>>Jf('cJPL4*1_J-?'gd>EI1&/#ELoL,j?6(Y-r5r2l"4dQfLiHo%[jV]TW1A4s:30kLn
%c]-g0p0<?9Ob%`M>chW[Ha)ZgWQ*AD,C;$fnD$'D3!=.ud&OG8dTjd.3jIkrciQ,QflN8Y?lbO8N&Li>T%J+0=/?%F/rOQXdW"b^
%eh'/1T#bt%j_QmH>RIEHN'*Gq%YYQDnm'n(\9B=HKcjlk3dE=\"PB@!F6T83-&A3L!t#/0UsnL)D+r2O/c&_`X*Ah`T8QRlRK]V8
%e]_[_ch+anlG-_2:7nS$plp@p(J+\.RhL9(fi"gOG#VOpp(23_kKh]>JnhX2T1dN7WkFoeQ\(rZ\[jqI;u5>qI4c.[qTb'aQUHBU
%:c/#R[,>^\dH:S'_9MA<5*pO[`gh6#qUm_GE[&j6UDYlPd1"#!ejUt573729j[>aLBdLqN$$="u6j(:DFHJ=f#jT@$9*RBNY0N[J
%!R3`>d%p^Jf+Wch3K^=rX1:8@8Q,'@ngp+**;OYS1Y^4NF&<]HVo8CPF[,X7HS2X=8aTq1)0sP.%0t]R#oc55^40V<KiB^;m(%tK
%5\1K">RD%&3O.a6>4KG"4dXFg#)k^34X[(]?L53n:/]\(HS3#cJTX_[)hJ`QmZJK>0"P\C_jPKX;:N.H$$;<ZV54sPZ8k0FTXt=s
%!o8r!JSlZ/)U'HOd#EU%U<mIpG$bZh/@\.jh&1=&?HZOK[=Emo_R4Fp>pe1]f/SO<1LpbJT/^pQm,?EV6^PdI83n,K0)lZXk_V]o
%oO9MNSOAgd6J[(?*I*6l0FJC:\tj)rOs3MQ:)2U1gduTJ\Lc'Tge"<iMD,ZKr9Qs-3f,Hl_ZEK3<#JSG$CjPO!o(b]$sjWag/1",
%SuenrA'nitQt^>Kd09*$'n^-7?$pUF"ZhPo)%hU@,YJnY_U,M:T3-2lD1H]o1qGC@1pQ@'\ep+U#4,$Y$SfboK1;1?I%$_UV1dL6
%'9+VkXOCi_3R@d+@i_c%kX*.RfTAXi[OG.^7\`ThZ-geR+ZBd*EX5kiBll]Z1qHqpG2(hR^Ed,&2]k00kX)Agb@ku@@/(jXFP0&j
%-V#(\MYX6A7TXlfL(W`$]*3dWQSXOP&V5TB3/]DN/(>Y,UJ(05Cg45!)I8)Q=kW1!\hrXE"$\Cc!2'0[UJ&pG>Jf2]$:1C*JeNq-
%OrCG7[OLa;F?'i'f]GDM(Vgq@nou,kFL=(m"bA:bI<o\STA*B#SEY+,`\N-/[k!n0aE+95"_[7.&IrBp<=7*P-.0Q!4+4``,B<,s
%0Cn(l_5]"ubr%'<R5K1l3lG-AZ'gKT^"@d3fhqi@c<Oc$Ol&%A>_L]?m;t,;Ck/]&@kNG=!M(n\Z+t2\>qYCKYZd[OEe-a4[$6a8
%ijWNqPUmWc;.k(3asH@-G1naP>TiGhI,aR1PO]Ac0(Ug%W0L'`BQ=m;>L=DB!d@DF"&CQ=6QiL/AQs=Xr_AV\3]C;.1??=/5k;r%
%Ek*RT<e;D0A:k//TBU?Ri?a'r([uX%EMFi`!e_E9jLC:\`H#kO@[e/:2f:(%auWJ]QCU!<'&t0-Ml=4J(o5'[%E=MG\*aI%0ihP6
%g@c/T\-N/_7m:tQ,48;E,;-!6FF@189fKl?M%:Ch!iCnd(FKe'D/?^#9A.X%\BVfmc@t"h@m[*1D8$Q%QuIVC@J&E4Duno_5g4Lm
%@8UKSSnN'TG%Ii$=E&gIfG=cFC1Q9ZT."Z@Vp@4+E:FT8*6s%lF"dqsr3q4@AD?7,7@Vr5ZO^]`"fa+(4mXB-`C$@:`OTpW&ibq'
%)N%p6dX;FgZ\o*];HYbX^iXmn_0apro&)o_gMP+<B>*ulC+$^^7](.a]]H:3V$?$u'Z_3QD6^,/'B:[+Lfq8B'afMORp'sK>Jtr`
%FAI"f,j7dGYh_4l>0=s)RmA`(>dk7gB&Q^ui9Pp$k"N7o;DRCh0[?_a'faMkCbF?t:32>NY^/`Y97-lH'uk5$*YcgCUU\9I_"]rF
%gd9(f;iKWM%%.CU425X;`64"ped6,^hA3j<#;UU0r'ZY*`,:K7!b9d&D+cgXKTW\WUH(;2gS+n0ol+)8;@HRl`3uVL_GiYfg9UJS
%!W1jQ^h="h=`'9XmGlE)S'=3;:0[WcE767QnJbWp';KEIlMLgZD7'D?I(#"Ak_dY$)&=_O1H+qp&?_5M'#u]\REN$I,I4F@eJm(7
%=HUm>MoZR+%jr^YSRqP0&_U1o\HS&]d(LOH1q$,rlbR&"CeZc"gSoG^'8N^@%A]Z$SK,n4_01tjj,1Vfg_1sJ2u_O1,n%_!3u'Pn
%`EfOKT:i>-#1bNkg2-FZBBIpNHm:p^CTuILXX/f!R^SO@N4N,,F_(m)>%Cl:^Z)=`b^2QNemdETHO+,_-/PP)&_7`*Eh'<kgZn0J
%[B,("oupGE*(V0f<=@]:oRot>gU5VnMQ0^k6*7t&gDERW:/n9C:X*OH=p7j?h_V!1"=e6nDah6R/.GV^F>;<$gYYtFjS`dkeph0s
%H=@eBHKuM2FdT3K9XOjQ?jJbiXn,RR:G%`DKRb+XC>mj``,_/I</e_bFctHjonXuU=t$=TnY4%"^gO9#eDg5LIpUu%ZP:(Ddir:Y
%OMB8nP,G/.1HTH[!`'>%K:iPid7It:X((n1785jBUh2'/n'1U""eOWRJpW",V1ik:_(=1Er(`^H7`6&fSg^X#Z-jhJNn)NKBi,\b
%n<l.#1(T5E'.*%9l5;Q-/\,!H#d.;aojHT8&^hk\#BRh;I4Easq.Ta$M2p/@c:0m3*Hm`O?r5gFT"&Hb+D#*&KJR<ff9p=4pQ:9_
%L!E%YqV8Ud%IIg9g,Q@a!_-CZR[-3*0[(]Ill<BCSC;o0%Q7kH@Q%kl*JVjZ^0(m;U*m'61FQK/V/uK9`"BO-R'Fs=[b#Y?Zc,.e
%+C<IJ,XWRLSU7Te11n))1\iR'D4"bW4ZdNT-0Lkj[[[&KHBpkF\i]L71U,#'b>jZBg9dJsB:Uj#BkQV9NIdUBG1qm;PKnbm(aHgV
%B0g6i/>Q4iicirbojXGfnGd(g4PSUMP'27;^Xomn!FB!9X?]Ji8nOA8.p8)_gTiA_,Y5cR!?(qYp=Gp^SuV(D@3"^X-33)mH$@4s
%:["A[eJ7NC6O0.+E@=_t/5D7^g4A<c_p.=T<]PoK&a#Q.#+K2ZM]^PRZN)fc@X>Je4p`JldVPeY_)c6f':P6)biX*41!2$ldkmCd
%l&/6(0EYRF0oL6bjJ3r2&W7;QS@1i063kV,/RX'"P_K3NbBm4aZC)Rh'ec&UZ,^7X2W\^n=h&R2g-OZ&R4g_eOKiMqA@NO](46ip
%#H\[eT=j7-dT\cWO'lNb)PPm2W3SgPBK.be%]NN!m5dc"e11WF"a]?gL>NSSMZS`GXT;uHeM0.YCuSTnW<OocJgs[,//4stU-'EN
%1rZ_`#ONF,QHhCiVM>J2gDFI^Jk2[L@WeCr4RFGt>(Nu$cW@e'\e\oq9*&(^11=ec6bOB+Sf&MFd3XpDkj'eQ=</A$8es<C":uMD
%Q>T@&4',"Z0Pob@@j"nqXL&apC'gq?)mf/85ep?t4i#_2-kJm"LQTQ\7<EQMMJRqj]-!8#NWP%f=,(OemYNfS/@$PDS#ZS:/5J`s
%4Y"aYHuspR:6<.+6'g38BEQ2Q$Ro]F("327(rA[WIH!t]P$Es#JS8-8&PT<3L=+5p7Se974<d^JM'Q/XFP'AOBCS\1gB><8)G<sH
%_Q/'nn_l_N-kr9@JJHWWQ*l2*PRG`g,$-**9/>VGj1&7&;Ru7jSIQ\--PV=u7SQMG!S&j7Q80;?Nr[YM2b8tT!=sen*4u?t6r)d+
%Skh5O7,Y%&9K:B:1Q>$EComIQUe<?=4=eC%BT@I\X)]X$UCItab`%4<d'$\HB2`0t/5W!R9Q9-JbC2!60VJTp>Z(cr!gkO(mL2&e
%_#ZZb%*<T[`@$Ci#.#%+G6+q5GY3[<MF7M8HV*X8<ELR\.?8e/0#3C5m:!4b>3h8#BVM.XUqS01QMHqnHj*3c*PNe['-(9[%>c:9
%RVo[o4llGuh.[a;>@&\=(`YMlC;lb%iIqo9Pk[f3B1,=#EH74@/<iX[OGY-Nft':?0#g7YOQr+V;J2+G9H;B[QLOhfcqP^u[jVil
%@VFOQ6[U';KVUfOVkUBu5D=pgRn,?(Af=m/DWD%(4%H<]bL*qbbq);L<@EGZ?VO^6M=9::dNZ#<RL'0EU/o,586.uIONEj\*KpNQ
%QNqY\G^Tc?0>3HW,@k!!/<K64Bd"uj/t)"P,gA1nR>!aZ`HBJMh3pS;PD=.*U=Xui&s:V6U)-sqVG`QQAe[KJ*\ago9O?u*re+b'
%'S-i/=9:p$^sHUc7$b@PH%bZPq2]!)q'2)h=%!sOO#A_^WOWb#7YKVcb^#klP*i_B`/QkpE\5:b\9Fe"%V@Et?/T+NEPhfFV_t!^
%RHkH(%5R?Ka"oRXe#q/D4r'%n.nW8949K@D9;k04P-A8-B&UsUPa!tOq*r`M,>X%RBE?)&V*^Xi9(GKLhggn2Y*=g31A^ckR4/Ch
%,,]6d0iUt5%o0hc5c<9QDAr())(PF1G?s:k6M^0Y:"JVU_Uu"YPW72bHKQmW/.CIr%)[jDfg,&0E-_-p?4SP]QA^/W>NtGuEF:+e
%$Oi'Nf?Acp`pm8CR,HU<3?'-!RHZC7jKui<mY1.UK<k_gN&OB3n^_`I19-MV[,/U=QJNU\RbL]&8T'>L-oZHd+=K.F!b,=o*1rUp
%!Vg(MF!Ca;-,*JYFY*uS/:d7;#"41lAmG8tV2!N-N5T^6>m4)!@huoIpf$#MRga!fn=HDe)+m6)F!K6L5^+Zs^eTP*brbI^`pG(=
%%?(+B>HnKZpF0iEKX%&#9[SK>Au_]E\0\si<[5O_OApk]0ddX.aGG:j3L%<LQt%9N4FlkpW=H()aiqW(MKMg:5E60HSSG['ar.bJ
%F&H!YUHk?);$(eRP6E_+.TLBn-_X'@#_%"X/>.ZA,k)*'"B[u)"U8@2+p^$p^^&P[Vq*7t?QN%c@r271bk]b[=\B?c+G35XB#9nm
%OO6U'$BoQjbqs$[b=S8A/rN,p@0o.E?,\A.Ce\:h[BAf"9YgfC8NsI;-^OEa0oIE:l&:cB%L^uUF=7Jag4b0.<K[r9%Z1RD5RA[s
%5R*ppL(_YLU%%dB;N$"c6/7fS?%Ur_Np6bK1I%8f_9im\]4+Lmi[R9/.rH-f)!-oi$GI[+nn"mt_?`g+1t@F.0k6NZ5dQk5W%ne#
%j]Z$Ddt&DenJ\T$fCW7'cc(F$\o"$TbuF+%`?8*H_5R_e%$P0AH;u2i-r$6[=JA?0,YOdd&R*L(&1`7<;N_?occOTD9&PB^mK;/h
%^#gP41lf?k-G0E5,]iBkM']2g(3hmA1$XR_I7&^i0gl+,(^UGh>q*g2S9b'<Y2j:*,m##o')PA:%6%j8C8Pl3bca><eP*V9QlfBF
%Y!?8F;`4B:$^]*#9T7^WiAj$F1]]^DRjFJj_U[G<dL7>Z4aDcMIkhs>-Ac+V:Dc^`o%]=1,,)r@/q^X1Q?rXj"3%c<NF",Yj:M"q
%#?rIaB*8`u9KQK4RDr6&4H-8d97`UE"?9Yu@p,cVk@prr;P-Fn5kZ^+WH9"T!'g&EP4nue/F?uE-`PgNR@P`Zh<li+:8XJ).H1-k
%M%YT1dRt!0oQ&eV^.AhRTBA^:nFmeFL\#!iBYPhoQZQLe6d9#)WZS`Emmra@R`426VQ#-S6k*Uf(hLmJ8>jPR1:?Z9\WjO&):uF-
%q/L;W'p6WYoGf0mM,"V6`c8=)k-"cc!8o_&QGGm7'@W2C^+%)2H/gNR&m^;RTj[[A7k9=YA.m#N!$'*`5qb*PO^9l9L<QC2TLmLI
%Om[Z,F&t>XF>&'i6I@hJ(BRe`hUAH4&2S;[V(>KH^efXRTdYqdIOMqIO>.#`,J#Ql.UiN5_6ah?Ug>/i6k8]m6A8>+0"j*h23Y`^
%i[$#@aE5bk>I]hm_TMOD=0/*KeFQQGK%(2c$,@?V`(2K-JT#R8=]%t.Pd<oK/5*o)7^'2I=:*eo(\/0*rB**Pd0hc>U^m@#WHci^
%dUl)C6Dfn?+bueXA,l[X/M:`=)?S!_92rg0JmM2*-d2[=q4],a=ZmDJ`S9LC4\Kg<j$V3jJ.eGZn3tN#&/7#0lL`lX,Y18NalUZc
%Kh@<q2U\hA'cRPoU^#F1R;/.e[L%6O@%[cQ%d:j-`WgK@n.ga*jJuMpnLW'\l,Cq@,F8BILE!DX;(?"O/0W=?Z(psU_kg=6OmZ+B
%2.(qGKcW_&GGaP"aDH%L%T6$t%6BM2[a9S/5\#Y-QbN=7,G9VebM]KmWhpt85Zbce66WTRlGhaR'TBh-dGo2qA&^V$+%f'&YQD_,
%_5k[Q3>T_7`MJmcO4JArWPhLr"Cr;3:e).08*UONeH_fO?Vf:#_>[(kkX_6#ko7GVOUs7=WBuEXKNjOC0jtXcP,0[ucCEO5NU)$C
%S/JfVaG<3g(C8rYWXk^CTNHtGU6GbO0\r"7^gZ:aYp6smF(V#b!Y$0Ds'dhl'Z[hXasX*h#U.S.*eABg*^>;s&PBVV[t?IJ*q%GX
%Erk&T:iC8eEIlLDd^$ZZlmtr)<g.@F&dCep>79AVQmYZ.[*hL)A'@sdMOd@oj0>@FH$T`/Kf90S1W7)YFDA%/6(=d-a[!CS!B(Bq
%J`p?,'lMrMr/VQ#(PM(_&n%;.otZA#kZWj06\A&DAu4W(V4u[o,_M[U$#QCfTa)o2]gB8khpG_$chlF]K[]Gt^Aa+&d\6LH\-j_j
%"a$YqAc`&SI2`<8:dmIU6p_:)rC,EH4rM@RJ9+?(<[kX0#T^,rPn6U&7:^;.-l,l-[K7A1:rPbeA:]taXL"]r#mU\hCB&6ChDp_%
%*`,+SJeKG4WS,eRS6G\aAiL*,fdos^_M>cWISh1H1n!&G]i(X)nEH>d-9s*n[$(1h\O$<`mKD.'$O0ig-"3>2o(=km8C8,jIRM\2
%5kD97/LV@X*,!-3aMm;XDZiKp5SQ5JlA8G"9!ZNC%T(Aj%?$oO7u=$g6/!>==J:8?SkDZCQWNa2M.13>GqZ[/TS-2o*t%a/.5;pM
%JB:sPnJh:5:oDl.b&tc;_4Cut#9?S,]Mg4Vf7fl2BLG5n#lQ9)n5O^f,[$ia21Zj'U('UX,2!gKR3_DuNWkKe&hp@_Op"X--!e#W
%8nB13"e<fA'(A&,DdeLGq[e"@o0+9e//<k\bip=nAUN=9pn^p\9n[sW0j=k@YfpfUodN.,N;>gQZoF..:tMX`fpD=t-tF;'ngasP
%!p$qh_gs7Fp7=r?1Yn=T.g[W(;]i&,)G8N7V*9AW8]mQ3KY67'_9tT$#RSJk\)T!s%.DGcPe\&JBdl(cQ7Ei-bKh&>:JkS1VHtni
%r@dghV';')`Da:VU_"<*;aS3XVe.ZJ`9$&LED#O^-5"50Q`/FjD@\SC7@@Bu\1tp4*uH)+X=Fk\r7&lCFbaI[GUQoR<78uU+`k#3
%ET"_XOVT&m(*j!2Ou,s"f&U`I6NTZJg0I,R#>C6crk0[L6l%&1AjZ3NhSnJ*P^7q)_7d-R.T3Gj0Tff[BLu$gAVA+/Y6$piMbYP>
%U1l0tQkkXB(JEDjISgj0&OOOK!@&L'"0u1`IKgSne=^h\e28D8&4n?P".diVXj5EJP`lp1"4epmOaq4:8Lr9"NIYokJQ-1Z):i4s
%!Mf]IFoH?Ek6WZJ'K^9daX'H"-6&"!3K>f:#mJq!Rd55;1hm:)JHN#1MgMIN)C.p;Za:a,b.n`\3HlQ1rA7/o";aUn85'spS22mW
%ATDDB`"UK@4d:<(B2TS!b?a*cD`FTbTLGbN%+RmYHNGApd,.Y]EO!NH(YP7/@enidgo@W2rOEPm![B#%/;,VqJ>KPBLZ8'HHc_3Q
%q3HE*XkJ'^R?<<`Y_Z.NJCg'+k:&2$U69'L!)13fAR>Fs?GK,PCU=?BOM"_n;H@U=,Fi\B<X?Y^PO7EDHAM\iKP3WF9b17Bgm<pj
%TtHO#/QgraSiAVq8hQ]a!L7r@gl/u"HE$auU0(?Q,pHT7-0$c!%'l:h%*e>LnM--E;`6>.>:;gHFb0?68;q`R.h+k;R:u.S(/)[)
%5hNg+Ll(:eoRMpaC<Ssdeo+`f0rB4P3bH:&/u_^t5D^]J;e(Mp^h>0d;IhP>V9B75Yq4:f(LjQTO@m:(L*>2!a>Gs%"O)0[$!Xif
%*$lTM4#$\F/6B\!K.>FCAHARn4eV),$VitMK.W;[km&21g4Y!F?c]=MV^5;iTS/5n]2TF(+^0^)/l>^sGCh6.LXqM!Q"($,K#jM,
%MifU3$q>ViU6K,a6'R10H=?q"HiU+Z8.u;pe-4YEV`Un"\S(][s%YFu%na@pYtCJIjcs/FD?c%XiLV2nf>KpkSllSfb)m!sC*'BO
%Fu4SGa28[Z$[T$c^PF^/7jT9P'dnldg3R6I%d=K25t'N'X[E:(p]?B<gFB(_F\j^^Q3KJY/bK7omu3J.$cV*tLnHU$(a_lJ6]&Sb
%i3)/%#o!aO5LGi+0uJ]B=cp-L7Y)qYHr7R6<_ksTfMg*bfWQe$7E^uG.DuQmk#/p+=YIhT,sE^cl?<CS"SiO`k=QJdMiEcA!(6=6
%('SY$8BV)%ge`t2ANc$"_7,WD6!$D']YcCe`KBSDZ%hj#ljGnP-t_M@@]1&HCETIaqF([O#IE(GNgXVMa*C\0P\F`AW3-f9-a$S0
%.M:4%W?\F-3%]O_E\<VQ$B:])SiRYj8:#A&:`:YpgcR`V3Wh8Va]rBQ*L>pd1*hjn"l-?@:ZQIu-k5G@j=?/p-<.#!iDYDH_bZQl
%ln\dl6!B[)>3^t3(Q9&s5KQn5j`Mj^$MTDtZ3n-6WL&3>N5>cN\Zr+"W4L8jY*21dc%N.2.bb#MUaHJVB]>Zc2:V`C*m+OC=$0Ib
%JS=K!*:50Ydl&kDLoq46@J*MmC_03f,_DoXOp59/?W>[:dR-UV^m\qkU*ruX)A@Bp94j4FbbH0a5)P,6D5nLB:okE)nAc1<DWA\Q
%dEYuO%S4Oi;cT,#nXql)qLK:!^*e1trJB?qM5<@c\V5qW8jYDNaPa2WbHLQAjtLB'oH9FH+D*RT+b!ugYl\VgX^&,AfTDsj0ZCAJ
%$"'NUM__SDM(U6>k0\/`F$ncFDO.:=&,fjkkDIG_9R&+-pQO,Ue5T&6E].sElIaDNXpc&[/$+J1Ki<#=WM;j@!k09&EU+Gs<^^r-
%h^)8Of(UbG;mdapN"8YsTZ+HfWA<p9Y%hTQZ[cqeis!>F/NOEs>V(=,Yp:1Kq)7ah7@-""R$Tf*Z@5tsU#H]!RR7cCXg;pPJPhRD
%1P7_c`GJ7GGR#R#T`jmM<!?2LjI<2<!0!FR(`9%q/`h3I4fOhsQ&I>29Tu0m+kKJ8A&?iJIZ$0WZF?f>VBG#:((Kn=BNa=t9Udsc
%ql+3"7=ns)-r56p/l6i^,\W!to^3#sCpAN<(f8c3.?5;F@WbM'@eW\pZVs;aAHF\e+I&NYr>h*@<h,]R=)s_.jV5s_,3&:0/#EP=
%P,K$6Q(MBW?:CQf3LM#-9&*:1fI8l-;TADfG)AHbBe2b:))L49"I>XK6=?`Y'0!u&a:7LL.7Ajl&_GOWTa!R*<[i@X80\OPVhL,[
%(F?5"@3]oqN@h+TSj>#3KIbLd1c176PU'R(QRZ2]UUbdbQ$os7!<J!$3=Ul?+ARl@fiF<9/Mj_lfK_n`4\l-6i5T6/j/Kp*VqbMY
%\9"p.66s3[6ndn@N]?mkKP>_28:lRpU73mDXb7T[`tDaM'r\Os16"rJ1j#tILpATJIq)/R;Db>-@k9>KY0L5SMFPIM4?Y,,R[8ps
%]3$i$=S^#4(o>(e*e[u)$hPj!ZSg>M;?f822T><QTECF,<,>7"6pP=(10&jpn'oR[_?Gt(oW4d9'>pNA:;'JC)'MRNm!'eBI$CGp
%i(5k8H%Ng[TW_kp1.nd^U*g$(+I.gN:RG]A(#9H'd?l*h$-DG57&O&!]k06eh%Z!;,h[mk'$:h"a<=`DFMm#A?h3ZMH;.bP%nOah
%iJcRB:eN2o1NnkGaFFg@GG1Z16e1AH+YKK>Mm4NJ+:O`7>]O[*o`8H@dmSUEkr9T\H%:@EF:3bcP;u\&6Dd50I%@;,-'#rf-r0?4
%W_tQskgni*9ld^6'&GnkV6Uj_ZB_;eUuZ,#3,&lAge+>4gPJF>N(/p94_?rK8SP(r"^FB@-2g-fm)'M@;51c)L]jR#9;J8-dST`&
%"hFhmV@Mc:\td5:9]/,`"QQ^&4%TUp$kc>fIiiKsFD"3'@LFKFfejJNV7TY'5uL>dLi\8\G7E&N8OlfC@?s+>32oH1I&PdLr"^_a
%&a>>lVNEm=-u2>BRRt"J%qe$),T:IB3!S&`!f:'r=0!=3:lIA,'T4>&8ocKqD^i=1h%:7Q&@`mN..38;E@bF=FM+e_.f#?TqpJP)
%;#i_R!-<FQqXXjT$']1pW,MK'<pTr7:PER2K,W]Q9OF&a@eW=!6<+0Ej;hM7`G)=nnF1Be`[!TKd/uQHD^rG%<cof]1t7MVH]kWZ
%;%F?'kF5#H$h*N%'qR6M^L;Dsi6s(-JQT9837Tdk;,#e@>g?%qUoI]Op#>oN@OeLnbl/H:B>0Qn;+Q2b>]V^Kpq`:Np_ZWQ8ejqi
%O1UWb_'nG+PEl86',>6Ri:\?rnl4u,CPhgW2%c7_d.iIgr97>0be7sa9:Vn"!,.c/?=rR4>S^#C,`,hed1MaVV(2TM<DD?;bS6Z4
%9hM%&T]bP"P%t!?/[OldA5"dPS;`;q98SP/TfA++MXrGhWVA]U8eS"i1=i-A\Z3co82Ma4l#FibRYmPJ?t5UgU=]]#NlU`:(Cr;Z
%>U1MuZ'aN6XnJ1HR-7<Z0K$,=Y$GTu#@pPKMb`m^O@LO8BoaQMdS[Q_e8'MDlnkOTk5#9_"NmBc/']E=.5sgOQ")^FP";?E,^XcB
%nbo221/bYWdYX_E1$*S[!A*m/B!bZF"p?B'L>SR\&O+_YM\8+8.TY8>X[E>^6rKD=oi,)?Qo@#ER\;Hugik8l+Xq%:`CH"_,W$M_
%-F&b2+m^pM8!A@e$=Su9OG^)&?S;"m/I=gYUp'aE90G/5qW`1AP#t]R)Hu3;jHD7-XPJG,UBFN'QJcEBE'-)-XC<K7Qo%TG>U`nm
%)!-#-n^Z`YVV59>Bdt9)$F"`HPXfg"NR<Brdr^BsM=i),=MRS9`%NbiO,V&"OC9t+@rf@oQ\U;6/]PJ0)]B(4OOBgZe>S.j=TktK
%ELk,7inSkD]]Vp:?*hN@UoR=f(+./5M1QkL>T"h+nI`pBcS\?J8pGmU2!H=oh#>D?3qo(6(Hu2nF]@PI942TKD6#F"<ns*KoH9aZ
%Jcj7S"m(Z25[sCt#KIeB)=CCr#TsG>fPSQPhIhEBqF%:qNs`_O+;&?X+Vo-97@XA.HDtOP3fuJ<V96Vq#>0it_>];5JHB`[cq?-l
%I&JJ#:m.,S51DEkkTi/c"e)rcIaqoXb/Hl;Tu`f;?K%k-"A\@g^9!a&L<Lr--"+0Cno$BkV'[6c2->tXW*G-&@aTs%jJufu8lGan
%jaff8;Dj?$0df&7Q+2gob2r,\'>cU@d3@Qs@WNF.3?DT\Gm$a,fbU&/[Cu!+U#lGB^mu5e'^h*8P5\%_Pg5RCnM9jg9HAaoN'J2u
%\U"r7D^!%LfRG3]4&*ZC-+usHC+AZ=P!+b[4MmUTFZRFFSHgNu*N@MC+::IW)G/F7]^4bA/1_YbZjKYoESFl3b%jf\nEF):4VEU^
%JN'J7E39C>]e\/H$nQ<ROht*24"=Va0[/5-RF:s)3\.TL=Ibj/MM#1;j&clgjojXEU9riT,n<;F,1,&6UR?-i.O>AGG/n2rS1A;9
%?m86YATN]@f9&]^?5Pb>Gbja]@,TME&&8Z86"_*>$(IT2R.FX\c';IUnt!#k0^k&UnY2U[-B?UNgP'!SAm"7M[F[^=rWN-goFF7p
%(TXLGqB>2.kAcB52App-PH@b?)3BS@)Gj)EM@BYbP0gf*Mr1E:iVGU[8H7#d"2]0lN^^5tLDk\7%@fI^LcCtS#[72[o!5*fU627A
%8Iroq$kJ5#<XE.220@WcL5O6JT&f)HZ^WZ:2pds:M5?kBG%VhA61UeefK_YZpoDiT&V6^iCM6QGGqLk1Y(!o.j[sYi#]7+?"p5>J
%BY9L%A?i(t`Bm9bLZ2D?DPj%`?43I:\r)Q/T2u*DGXlKt+n(8/Br2@POS?s&Pc@.&EI$dt$Ib`q9ou*BArB%:).,p)9eg:YZ4O1+
%6nZHmHMc'c.9,Ilq5Bu]6DP!2_$U3KNU[G[20lH[IKG'iL@J0QQ3C+h0u7=J1:Rm)c,Z1/)B.6ZKOQO2j(UB8P)cN9BNM>MISU#B
%G\1u2$.NMim^tMM]?Qi4`gt(I\.ID>9SDi%FDcE9L$E-jP#?;`jcs;$mf`!H:r!NO#u]JF:8_;3-Q7(:=!1k_04\0+3tZl<_Zp98
%G^Mnu%L0LtN\W+^/?q0$XoO*9q,))pUh(3GkOas'*T*DjK1M7b4E6N*Y%U<Bj"uK=;-8[Y)i'sL$#n1DmNlkeoZUr97\D7ZbWc[_
%6T#tnCd:\A=C,aAK^9RSU,Fm,E99N%On+cL$kKloOpIpa_D9'p%Ho)`ChY8u0cCoR((3+G-'n!3b%9d:l$+U:^g4<RUs[h25p0Sm
%9Pu1[&jnCT8[tAR'A#le1EQg9&O7ZEb9rlpmYR$?6*rCi%^C7,bl^/9US/U.F61#Gl5>6-m?K[O4I)Msr'Ngf;EY[\Aq@![U>@#c
%s-F=+M#*e$gK/tX8j!Dqd"K)+bX#M^aB*(%!(6*o^4gAG<[L[2Yg@0YU(s'/Z<$TqF4*?/"[\RgTY'\NcOR!p`5=seY=(1(2iMC4
%)4hCQ!CNY-:$b>JF(m93s!RFahFL>b#j)a-X:@'6N/pp%mS[X1"-Lm.5ZAMMn3esC,R>*0\nG&%o_Om<2+8f5R$nT>!%jNH4hOn6
%(Ci9F_HeXUGT:>>JNsVE6#>bO9VJHT>4nF.8eTmV:(:kMW8SPTGB=XtcV(FR3Qs$S`'udL0YL@14_3%U_@@nn"]+;G@KoHd,f3a`
%9ELC@.fgG%nqi`u;1)Q#Qk7j.@o,i`*&;ChDO)7dhlt)4=";c+.\'Hs)+bS^)Q+j@]98sYK7[S@CXT&.`BL<?F^[`G(a9M=V+B.[
%FEaAj4UNZoHVr5>33/EdEQ1i((JVj-2o9)HJ`oj$?#%CW"G)66P_99s5YI@\_ii/5nl>Pr=EC/7-5pB43@?!S9n[8nOHrA)qh'e0
%4c,9XKI@<a&U]S.Qe_YXbYa@'`2l1\T1CNf8u/@Z<lo''cfDLV.oQO3&BfVP81(!7aZp-KBB1g@b$6U!ArQl\cB$K*L*2aPD7@00
%dje8&Vg_RfgrfuL:r#p`;%piO^sA:@1dS'J\Zd@EAV/PcqIW6S\ed))MtVJ)VBq[:_d+^"V'qW@[R<A6M:sag+R(7O;8h[`W?Pj1
%'c:$]-WcG_aB+KY>nFDt",),%9M3=1C;^l<->Fla1fg)%5"Ve%%p2eF@m_tn%\\/ui-":P`JI@)_,Tb:ma=Yl8P">EH#8YZ8fl)^
%.Isj/E]4CA,=0n:(MHF*83X!I)F:^L2)%p%Md-U[Q:->%lM'@T\-tH[g^;pYA0TR*\P&@F_M,.Mmo1ha)QFfM*^$t&<Z[\Z4p8UV
%(qN[eHQ!FZWF4f?W2Hi(b#G&Q4ICPTRE.K*&>IN<ck?W,cmJ2Q92)0KK)piS9s14s_cQ`0YP9D]H!]1N`"ICl6@\+ALgr^J'92Xu
%-.%Z/mSmaI?X;7pFHsGN-5N3m6(A)s]P-G#-TqgDM,A0$"L"#Q9/d`#,KpneK#:[#X^Ri67dA@EFkjMb5ar[!.?V,=5H[Hr9+!nT
%B.O@OYF1&sl0"J\R\!#S4%6qPC(Zo(6Bb%Z;<Q".OY",4`ENV5,Sn1fkh0oUit;i//"qd=N"2Uc^YFGZ726/;7?"]p2^;*!_&ehP
%WBF!VKIqm<BTFrDG:p-Ke/h*meLsM\;;t0OISr5*3U[Rb!dYKX0';rER!$H0&q@`;Kl3b+Jrsf`.W)s@D/c91Wu,^ck!16_H0/TW
%$,8m;'<cM[(=W?J)jL&a'J1"tS*ZUm.A7[\]230-Yu+ssYp2c-'F?'p$B6M_3'9Q54eNS.9>P"/[pLC#VcOPU?=_J-F/F"aU<tqt
%mUN+EAAH_T'ho$$*bHAaSKn?OZrlq-)PG$s6Q5#[-!7=]4!%%bXd+fhmTF4#Y%'ZI%'V,lH3[&7R04s3IJ%LpN'6O9>QClM9=R+C
%p<LX2h*Bj/4WC0,UpS%76.iQ4V3oJA(agN=UIm[]'??JjbD01(X9;/)b*@h&l<19o9]ZO7#r@r!<],DmW1994D5++&'1+5SSN*YK
%m8_pE>qm;BXUj:R.:4],)))HKUF6YQG5'4dH(c&e(G)8P5TYa\KdGe6jE5`O6+k^F-X'AlGIaSbiDW[i;PKMT$8b%'%bHNXN(cGV
%-o4ipn2+ImYg#$bKplXPXb`tMj^gmBN=jE8N*(G9a]#Ukpc?[8RnKJ&r#I8G<*X9::sNn::$E7OMoLuE9)h/@jPl+KhG0L8S>g,?
%,bmIX]0iTW6f7*4\PDgJaX3M_&SqUj1!%dO@@X-41CD=g)"H-L-WeKe51N_C3`iS<QUY`&n,p4fLo\'ULq>1VG5rs!`qXcc7q]e3
%K-l!NgFs^m;DIbI9RhV0\e5Gl#nRAW.?[_b-_$T@VW!s-4;K`I3RuS_Y,=h1$-#[+iCc4&W5i.bJ@lm2Oj)IAMa%>!,-2UO2$/)H
%#F:Cn>tIln`H:fc$2L&]]&a!0m9Z4H?9^AQGiU<U-k?HB_-h0'MRK=j&oFUD"VJZ'=V%hSh90b1b#Cn3^t%.2F@f&h?0`tLpVFrd
%l9XEL-(6!>fZ,bENF<>p,i+s\8kn0YTLj9lTk>$+,V+ELR3^!gm!5Pd(sH!t&di+O@)\hjEMkQ'PdGXKTqkupRd-Q)i^q*k=:)gK
%6=4d]VTK`cfH*sl_\kZK/@[:W8p;R*G\@U8h?qYT!`ogge;'\J.YI]4iXNoF(_si>`8G/RLtbJi$3E9*(^m'q%@dhZrClVk_V#B_
%gVbQB8I(s!^Uc"d)\?lDR<g-@+AYp!GPb&fpeV`md3ZNDB*gY"7l2*p\V0AY#s"),a3rq&8'Su(X"!Y\bhXh.90h)jm(flLFm:uI
%*n2F+?hjc.-`\g@+mscIkCW[FDXHKS:n&U)5cf7a(k5/]^*=iSb"!9=k",*%+jDTXU/!P#p5SSH"uM+p4E1(9k$8Z)8e#DSk%acN
%RQ9m9Ed*5*6U2t_Zc4ajA82m;+:".AV&FD#Euar<Ug+"i,7mMPUWP;%1fq-'R%o1i:CUgZl[4Q-Tu%>L:E?`'PH9#>rU#.6#0AcT
%3Rgc&]GeR*WJ.ZTp5tMFDAe3L^-#:<Lr5QLl8;Y@Q^=NU097rbWah@ts%'"^%:'Gh']_!(/rr=lAu5?n8GsCjk]0ih'ctVr"DS'r
%dT1C6Cg1qF>RhQVJSV;ASK83%)#pPtA[k)Q5#.,;&=XEaYiUZ[V`iq9jn,Y\Z6R_:B&efUP$*ghH9l5_ErM?RH0$U#o+G,bHN[JV
%d`Q'B26=^<j2g.8asr0M9/8"IWuQo8<65UrUmH8ha=g-HM,O<nW'$3(bW;U@H&P)Oa^ad6<AnlVEpVeWi5/,AN-fuS=:1pnbV`)H
%&ETldP<,C"2(FUeaq8ick.68`p-SCm/p*>@SrFjRYsg16gaLba:7aqtNiB;*OV5`6l9.!U`Gp^MBoYl)LP7dV*6/JMo9;n>CBdAJ
%P350ZW^Fnmlk:je*<3h!o2*QU0Xg,4K=Xf'cOsN&$qLke7\[1?H/trN8_.nBGpY7lN^h;b4)W_@,A/nG@^Tr-E_-lVM-qVDHd>["
%7O(D0+Z"6Z\Sm)/UQM=)H%-5lc2r!>c"a=BkN&g#EZDur_Cufe:/$U"Wj0VWh\[ik=idrUk@6YBOY`Vd"Gp2WjAO3pH3K%u6o8MT
%ErA*.H`aTp;4LZXjNR6_-X_-u6Efu!L`@gc;UgXmSi`F$\2ki?L$hGg$9<9m$A(Cl@t5eckF).t<<;//[0R;deg)3%iQ(IL]MXYP
%Nl9j<I2dPr\"FE+Zd)LGi7H?9\Y4_:4J'N8$;p:PU6g.qYAqV!FQR#XYiB_@Eg^CW?$(@O3Zb=dWD^c&0&bh"3Y$1ejQ3<qa(&'F
%)0.i?4Kh,4UVM,>,n:W4+GhFGi4,V92;U=+1[2)E`Jr=hibS<>'X`c9DiHUa76aL+2:abR:`MZR)MbqnQ\8oQ!n>T%Z4'@P36YE^
%oJP!?Ue3&U)+QZ"X?NL-AfMSKa>[2s@[.&j,LJfmo`55q611;$M0EIBM^$/TMG@]Nd;>:;5h(?a!96$Ub"tsL338M\&uBhmLiroc
%fBD3[;T;:"_A(hk**`?.jB-/5eLMZ'!F=c%A8q_QAR_OuY5la"N5<$`&-TLrf!+.eaS;JT-Z"JPe3Lq7R,Z[jO>Wmp:.tfe)H%R$
%j+5TCiCrCt`CGI<YeG)O==M.oEj9*ep1=VdlSNV6Hc3Ru0_%\E-&3+g3KS\@23Kq,jW'#0%ED[Q_;^Q=,DCc:'_,;qBau>I!fQKC
%m26'o.&\?.iCsn7Vji\`BJ-b,",N9I<IVF]Ji\:(D#-o%LW?YZ+P#H0Z"54;Fu]!PM#tIafS8a_.%.jSDDRr>\53?aj$Y=C,NXZD
%^7<A:.'_`UX#MN$iF$UYIc$OOEMPM!)DW;/1,kI8NWNQ:(K@YKD3>pPUkKK?&h$,;9o0S[Dldn#S-1<=7>8Wa/8Mk\_BWOl)^mi>
%NBU_2KLb1,A!h5fi^+(ak"6HD<a:91__H\S?t4j[lDj7`iM"*JCP;3(S6q3dNYJl6\#Fmsk,_R4Llr8ijI3*qnDJjCCNON7>SbJ!
%b/cT%GM19,$k@th_Pf3nK88Tj>igP>-4j;M#-n87E2g[f'1q4iLOpmC>15g!kL;c\(4*R38C:ZW'dPb7G]?:X:Fq#nGi5/s%I5um
%NQs+ii"jB"@,RUpU$F7KV+Ht$E0%;C#m,krjr_Ei;cZQPK@@1I0mBgGoLm\H,dubP"$E@$>@OE3!U^8+X<`>ZC<id\^s2-$ptn45
%PjiVh8ahSkDBGfY]46>sRZ_1!^josi.W/5,hl70.i9s'Cl:^QS/#Zmk?)^]9F&d?"bF?(65:m9(2,1r.ePr,``:(")!rR4q`qp6N
%jK%7RD-5A&h`75/U6`X0ERpjKS?]dkC-<<s?+SAA*o\^tXD_N-6p\rkp)&E%Ak,t\*g)h3:/T[</Qht94fu)0O;qdEY0js,VBhU2
%6X81TbO'$)8csn$:u=7;dmRZ@n!l/9\4L*=;6^\@Nc;]EDWD\bgF#6Q1KbZ#)"I78CT1aV+[Lqkd4jH!iV_hS&Md('.ZOKdb'-D;
%W4;B>15#Sse^m\#.`@ObNqa*Kf&-hk@3D6]%e,Is9Y@!tHuD!P&DU`>mk@T0\C&!@;\s)m.bm+i7"iSR%Q%1m6[PTDd]A`=6/2o(
%$O6<Zo0?d!%eME7<C9g)H:*u4s%`gH0PEY6p+ci8aPA+WeY1j&eA?^nYJL!K@sYJR<,*q9,05NGduro8C(-C1HD:\*(c@t1B_k0X
%H,E:,_;g:A7K_.oVMt$jX?Z;LR!4q`iaFBVkEK%:H,GQ#$^d'h&K&Au+@C7'ai*>m8DZJ$KU(!(=:5=jFTjXcG?Lpkml4B3]n*hW
%$0%e[NeL&7[]1<cag[N2--2PsIS;M8,]C7Q1>niqo#BaeDS_IJ;,OQc7e4QSkGDQ1H*`b*"ifSgi>tCIjR"`A2\(k0]J88``HLR$
%M%ZZhjNYFqV+#_G(qs01*QT2&S:PYg7<_H*WBc%j8ru"-(r@IoO>ku^KuB].Dpjab\5EESZ^=9+"*sK2V+Jf!VNVI+^bq-2*G[4]
%K4\f,e=\g^j39'DZ8IY$MOFCrEP1OXlUAAEGf+)`!0K.!2gtC2lV`bP:X4!LQQ0q&:l-$hEP1P:XW\Z:!Ai7C%c].6.7KV*njL'>
%A]&c1?-4CFdkKX#Hm[sQL@Ia<.!#jX9ij>)EY[Ud^2o66X(&_e-)52`j6\qdV.%#66KMJnj,JeiH:+Ag5da6*]4&A:5fG_Q.`InQ
%QYfo_\c?J"J]fR`)etBmo'7-2W9(n+KQuZ>@JOVo$:\o%^1\8?SL`+3&\N2XVKW#Ygug*!44!9Z._M7n4=ZbYhi2eu6`Tai&HQH8
%I=`&Ohge?lmj@iiPXm,+mtTDYTRVT<_]pPX9%^#Icqr+iE]4WDMaj1Hi(R]68+";r*4Ie=2\^l93&"r'23*W,2J+mh_\75n@s53+
%JL?eA4U`Dcdf<lq9o/dC>Yql6D=UM5iH1ME*P7bD8<h=5c;b*mUQeVT`p:Wm7.2\:DELW[M(5lMT2$&kKW&T3+lgleY$:T:2:@`!
%DP?E">$>OH,EX16RgFrU>R<%X2-`(t-0!<kh(0^t9l\u?#h2_R`-&DRiE1j#js)&TkJe92@p0q^lF:^[[O#81E8?K/&.!iXRh=ba
%SlmAAS+.\]oJ'T0+u&*BL?iG!8Z6?gfBjLk_"#"(Tq/cDj)m/&6fJf[]P`JN37PDC$)rY=(pBDTUaFZ;h/oTldtI8&R3.=,5Qc1>
%muiLQ)R*FND!>]3^i!2;.-&P"d&S1d:@+kA_\8"A]>YRf.n63nZpr3o/qMh,'sU/Xh(2+Hq92!cT]%r:Ri4J1+&l^YjC?<MLI]EU
%cs((MP+X(Do2I#M8.CGIoQ$lj%N)X7&h_]lA@E7c(9e]L71JAoA2ajKIU>Hc1V!tb!J]s,F+ZfljX_EU^69J@>I$I+etU6'lGMZr
%.^GPa*$]9daDUjG$^O8Mh=OL03MO`8QH3U81:p[/WT@42JuQNe*3u%EARo<\fe"iV^4aq7i\;+IY=!Jk0>FDF=<4]:iZltV#44mp
%`BsN"BXap/1a'6dhur.4W/,?Q5Y&Ea)73UI-*`V.*44IEq.Q#Gm1_.4fhLQ:%A,Li2ju55S2%W).oH@e#@;5\%,e6B]5`@Wpi;]"
%#U^u+LF'6qW&kKb)R<R(bBZu0].r<$pi4Am5E:_`;aGR_BT,2kP@0ahP$>17].*SL#*CC@gNQs4L?rLY9uD_P5(77FS1(TsF.V!F
%h69:.LF]W.J.s3d;'l^'\]C<*2.SY(RG^c$h09(9ef:t7-/A:\aDM\*cJt#B/.q3D,.j\)7^jkQ)\46kdil>3,,Oms&\DILPh^sm
%?oK[3,[D@n4',XT@rYuZA5#CNfq!k0+4a=t[%r29fUYDGUf7M@UXW5e(O$r8OEP*CmNa8&fukU+U@oW5lV;85Z>,5JY3MtR6o1Z$
%;E&iCSnclV)abNemR&j.2bDV(?C#3&dEIj(m0[Tum]oePh-",7_\Bip2O5WTX^\lj=OloDRW@O2UtZX6(u8c&+M(KE8na#uJ2jKT
%XTH(*.h=.\DJ6R,,#7sh.$/;AMW`!%h"M9(SXGt0dCD&/7t1unSQZ(P@rm9R,O$BebmiS=Q`1mkRk3\m<-[au(AQ;tDC_]iprY(P
%)hk(m)O26FObP;]FG3KC\D8Hp47u4l5FP/Bc$&31gaJhf@?&>;j;m8*%EJu9.p:p;jA'P9=*WLceg3r#V04Ao*6Lb2#,@G,%lG1_
%9,1o2DZO)j(fj(F(BpO9X-'n*4!,l,)ld8eh53:@7j>-F\ETL*1k/-VL)jUm!".[[orqY5E&1(1SsK`N`+#F"^l9.>aAED^c.BhD
%C&Dgi2&?D5Dkhj2I?hN`J3X@sAlrW/QL+#(I7j.?bMm@!mF:K)`n>MC6k-f"WkY"_DPrpQ_U5_&<5DSK7bu?&N<4(LEh4$eEZ=G&
%o_#-q[tQH'Qb[GPE/um7G%T#P2;U5`\JuK*)fZn*?l3c#<,mbSX4"Eg7Df4X_7"@UVYNqhg[=MKC:c#sdPg;KM5FHe"C#KlVAa)/
%2uJnK[W+.SN8BlVQlc/kIK[!:@Q=a_?B=M@Z)LA6k`mQ=Z&74(WIS.]Z],SY[Q)JhlgPZ)bVo/u;2ZB*4'/kTUMSt8,\c/:OR8d)
%')?!uD8$j6fc]%&+Cp5F/u*&%FL(9<fd6lRGmOnbbn$7WMXD+_c-OPbCkZ\HHuKBLa>Q[Z7p:U_1KgZa658cmV?&"Nffh#OXZ4Gf
%YCp^j"%d',%C45fZ+_\u>;VO0=sCAREKh$q.V,"u0mYbrA/h.DT:q?`i%R0!C5d$%J];[[A%OiM)e3+7\gG@o."VQE-Z+fZQEUOt
%duYoN\ZIZrIA>OV`\pH-\\T-;%'e'Q8r;1i9?##u&DJ%VK#KL`2P`YKor]LI9,ZB-<a`S/>DY$hI#E$F+gro?MV)O(B3H>bZ&KCd
%EiU@l8^*iV^_#6aq<,JFc:U!@3"'fdW?J])K[k-3&_hC^Pf1LtfZ&+Ncs7*cNGq&/du:Pk\2E7#CIgLmkI'T&D>;2/.8'-a&Au&S
%(gS)u73q[Y?(4G30'@u@V@lHUU$EW6&tW7,FDWJ'8!;l>H*>k.g(GGHkjhWhCJun/$mipF`cn?+dIFX9bW+f$^c(2//6nO]SBMff
%L=^$bOY7R=P-0d$5>d-:%7a60;N.`;X<!^r2+m7GC&rrVen4\d,UZb6n6B/j.T[SP,=0VRdY3]3HCUh@(k@;S&8G&/<)\`9VKSuU
%CC[<Q+<*1('r!T!!cd$STJla54B87DoLr6;=m'K$Mae_Xn[+M,<#CMA-:gkTeKmnY)6N+aUb$B<VZP:AbYVO(BIA\hEe3HH=]G8Q
%Q(hrHf[$Q3D0SrTa(Q$$(_&L-N1h8[j'E1g9u^Ej^519U"2M]`f`9`'.U&)u5TB]/&fRj/F85GbrnHqqOnhAokh5H&,+-@-fl47?
%oK=Z"Ja=?s!G<WF=[3eGc&RJsAC,-4X;GVT@qMK8K"s2I+3mndcl)NqmT;f*W<0D9%7,!Hlr\<_="Y_8ZOY0%$($U9SZ&^@TsEYW
%_G.[4b!mWN3!3a4Q<rB,fn_AH<**'nG&2[9_dpfrV\pd"D\OZBZa@teX.aRP(tmQ5;MA^]-AjYlYE$\YcnFYe<>jcg35Q,d%DOH?
%<*/nJLpn-7N9X:3f[;E&*BR'HS6_t$UQB4;K4F)1e(iU.`ltNZZ#b$nEFeE@m19bdN<4H3$-&j9`D`s%Wm8g&ijdY1:,?H]M8db<
%98B3Cm+a:m7`EYI!FLOi_pfo`-um6,?h76aZSi=i'`VoEC_ft>@8Ld4CgoVI3@He&&sTqB<,<8,?-0%t6u_r_*5lKBa_`dB%Oa[p
%b<%0h)^StN1+]m&>82MqM_4+h4=[Vg["2.$1+]k1+;F3LaX[@:;3JsK(7U%k8KMN4^lF8?V=O+#F0Qm/0Yq0,Mk*Kp\:\7C2'A<#
%Q&2'4:KSWoSa-@FLtF*e=J,`#F%%b5H.\&s%[.N\SK$&3.+csTdKj$O@2"MaEj_qR%O\To)@jAgafG!:H*35;,0IgcW@gn;*&b4)
%M8j\(9P`ool/->;Cqa0lQ8EF#k@#F'E2D2<NJ>[jiJ49GgCe2P9biH.5SaYh;]I]bSe=o(3,DYo_dVRtKfgan)\\JD@#)XS#Sp"Q
%:)/PDi_\(%VWL:G$<2euVUWme<Pr6DW$Aq&E7b.r8E?DiYZZUNY(jjVbCs@r_tH6QP]S`u7_s%DY0sOW.LUgUYZ[-&!Xo8`HG6<m
%lSNF8Uk-N3KQ7dSa<a?o7YsNFe8X&&9S^bRO`c8LJV!SIbA1K_TgMtBLX"k%@.EZZjTp"j0HRZiSFKO;LJ<2UYM9LGC>aKY-,b>d
%K[Oj'WWB@2$5/\?"_&-;-Rh4nLb0sB83An*+?#ctpq$U4=V*(^3fshrZ!t8E4D`YJofJPd_RD3uj'e^CFBa`[9us0mXq9=nN38nS
%cOGPmX*1C1`$W<ZI\a,UCj\o$@cQf(,H4/NVHR2C^e2P"BI]a5+gI`#&4Ke4M(Jk0/1?Y5oOF+gC"k^AkgE^'@Z,/<&sc()_2=LC
%CgJM%B2p'4Fn:>X-aYl,orM[hC`Z$aU/U'U`>LKC9,okISq\W1@7)t#TcZ-32N%0iOe/.R$\hS"2G40X;8lt==:lj2_e)'r%E2cI
%k-AGrES*AmOh5'^Cj^MJMGtX?=\o30=,N9!NCSfQ`^&-T6^aQn"^;Y/8E_N-[`06u]2DNQ@[G&'`9+$qS-kL:mDa%7M,!Sd?9r$6
%*'a`66XnNC)/)!=l2Sk7NYR1Ue#LO;,Z&:q-E39/6*\BX5KuhL2FBj1PVOXFlgX7GULK/%FdeOolnU5^;6d)$bHgmK'q70_a]Y<:
%Cmq)cU;<e\S;lZY:sE/hH?_s!7KL-J;6d)VA#>/&'q6*hVH5Q)2G7SU'.c$L`$qF<`TCfp9P:opqdN3GX]TE''dV/6L;bK7/CKK9
%')hu30gk17MiC/%AmGk(9j\V2:`1&g_PS[[:bFX@0grY'\C`4l!T%h$=i-52>\o]sqSap#Rs1YqO`@Y*NfekagtJd59m&'HARV%P
%NJgLh+*.W)(Rl0K8Z5eR@[G'R`TA5_<.N!-B#cY+6B-n_@a2Q\"t5^lYEs76=bf1G2(geFq9=kV/Z?S:0>Z<5LeNh:Z0CGn#^!sn
%_rlhkNT4Ks2ABi%QBI/#*B@7+`l2OhF'cgk6g@2g%:YT\SL]`=Q+H$KL.ZRl2(3WNWn]8g5I.BP*0\E<"+S.tKDk5WXZ@(VA2!g3
%8&WEf-:Q)YYnLE'l9+E$eLqDfSZ$;WdBGEl2<lm^9XTokBWXT",ml`?!E^RTB9HJmEgbjD*<nUSi0l\24#;MO@^%k!ikQtpn9,E@
%8/6_n9O\7CL(>3S3o`g;lHE<s@&$PkRnCJN$-LF`r\][<H$BIA*@,7@;u/?YEm9atb@;`A#O:eo@`<<o')"2'S^9aK]jkqmkplNJ
%nJW,:N-oIn.S%2_/Q$a%Hk#g'.&7<!:%.6n/?.5d<TSAaFVpV'WPn,L1-$<CRO0X?42ST>c,%A<f*Hu$o%J'7U#Jj_Ztg@R6oEV>
%BV(+d]7sIIH+e!pCW$;95tSYBGs`&G3g:1q_ot/!c?5@%=ktd`<$(118\%U?1URFtL?U,/9>i\mAk:N0_KDT%J9AYMU5&fj\&NPi
%`#IPO2l?SX7^nCVqja[rO"D<OZ)qNl_s1oNUcUDK#.74q\Of`[h*RrV4QdX7)@&,S<XRF3%Y4tp:),WbB3O?^W;:ju;*7K@@ND,C
%N6=1QCHu[6Ea6Bb@u;N(9f/@tg]_94XO=2ti^ECMdU5\&RTMEA<.rY!K\!=Vb?>#3*6FXE%;K:F))b=p8=a7]=On;+=?CDN;61E5
%'\4DXb`WX^!JC^,19atAcHs?122!i7:q8"n_&>RM)E\I:*@kKq`ig`)#.d%<=3&;`1O=1[Y.-?62+eaJDsV48D5dIjF>]ZP4-k"c
%c6#n()7US?*N:!tXenNMDq1i;0V2,4B@(BIK/i7W=WONS:`W[Z\jVQNX@?HP!)=82*L_hb#-<!h-f\4%5W2(h%\eKBOrCJa[/9nn
%Ws7C@X+A*e*NZroW^_Z4`*mCO;Q-b^8u`@6S\?sXF^SO/`i0HlK>K=m&3c9L#c'LX8]3op;*ZG10WG5uRp&0Y(Qs:g:*$#hZLOcA
%lBj*S;*K-HFg?UsAfsVghS20ZdA8*eVd=#5M\5gK7:itTQ;\EW%8@;.'q*-#1j)R*XP\&/l:=jI3A>TU)6E+.l<"K)%SQ3T^26ha
%FePp)W?i6I9<kIQ1L]'Z8Eu.5RA3/b+Bk-l_gp7)*WupBD7]Nf0P^:<E\-M*Z;2m+3j@h[3f5sq@#lO0X,j(Z;:G;ZN'g=aN.l%V
%EpKUa+Oh5M^..[Y&8K/'&PZ\%*=QgK_T8P3MC?N=P!C%fG\$m?^uPXY:G]4^_:oGaNVL7V6;]1/iB5';l.FIAjp!ucSlYT.6Vka%
%3VXnG>)m,jE.g>*4t^POP,G"NNL9mbaOBcWorQ+-C=24].T-e0'$6bZkiq+Oqo:o:?tiC'9Q'(Y8?I9"4Dg`N#G-qXo+S9IVkK1`
%2Q(#^_%)Tddn60k/M+=7SH_B5P)M,nJHc]BX<OQ>OD9dGJ/"LEK*%rZ!iC%*nYT_S[;8:.(Jek@a/Z=u)_>&iV+;hV[2Bl'CHD(3
%l7I_.q*ndaRa-?/8CTrS.-1MGTP5)GCKE)m@.#cO]nVs#'oM$"dg/__'qn[G%oiDT(t4n-F#q;tJ]_,!U8($Ni&4OZ9W(M"E2AC\
%UH62t/#`!7Xjl=+;r-a[1`B-34A4;adVpfS'p4eo^1J8sZul+VPq6dK%P40>:QTRm;hM7(YgRL#NXRh*N@KpISubb&'Nd-1MC`O'
%B+-5[RQm&\iR1g;X#6P,J7$e`.8Lke<YC=o3,-U37.W:%5j9h#6/6_5/-qCO-V]$"(E]>B"+8&?W%dHe1@2HbUm[-)NfUE?!QYuH
%\Y>nYAnh`hW/*6`YLGkd%Td6^BnsP^N-(r'[n`&Tpm/+O9.dH2O_BauNIjDQp*E$d2[tf[Ud<E!N#*N(4sDo9psF@EFXC]C@GOLQ
%d\C7<TkU8+Ns6^Ycnr'ELRLiJMP?k%4iGpnd@'Lk*&fq1e!\*C1QX@%ldTV=_O3;XU!\*6#5T5o3Y01Q\^$/Z(!>NtdCD[M))8^K
%UCnE7RAJP\d?top*$![uLH7"*T"N:#Bs_R#gIMK+#'=U*.Vl,!3%C"(C8EVck7pfMII,G\#U^O6/F#//'90aE0r:,ue?`QS.O5r+
%0oJ"-:8OjR0LJ7GeA_LT)Bh.=osuA9-Pgl<LhKjd@mlZ[$AhNB-05EO3$D5d<'s%ugO\E_f#7uI?3\F1WYfI.@N?$i?<=5!8Y[78
%:-heKTlHfi`._2R1lc./iuB*YV`0IAdK$UEh&bj#kZGMh*#feq-V7LCBP=uAd?J"4TbI+mEb&i)o/-6'n_f)EWn"h*\"Of)q^!'4
%NlI(ec,4Uc*l12'TM5W@om%5g'LAG>Oa<JIRF'l8ft2=BQrVETToY(#.j&'l\l9sIKh9V0rRZr,?$[4!?gDXrSQHGui;KuJs$cIP
%j5O?_h9tlUc>N0:atNek^LmfLc1g;>NRn]m]=m3)s8'Lbmb`9XgYY/BnnbPdiP4\Q3od-MX_WFQp\Mji[u(tAFuKrPSIlf@oZXOf
%[*I6/\$nNe87)S'gQ23knjiW0ps4R&J%Sh'lW5PXUKZokG4/7Cm<-"PHfJ&ip"T@AX`srKG]TUKo6Y\.][rf6>48a8e"eFB2JC+&
%PMLmV)DpE6bA4uCU\@EpK>$u*s88a9[i;[XPqK*lK?[aa>N=h]@=Pn6a5t-OI:$^;%bIk%qq^e@6/u^fD`2CRUofL6_r9`dYLDCo
%SDQDKe[aMqDLOUPE5@IYDou[=e6*l:IQ]5chIKbL;ZF$@LTbiLj+a,P@B[c_Aecu"3W6e6\3&P.D0r9>BuG>$]"Lk&M-6m-=cEg7
%DcQgVs7t6UrEH$d<@^"5Cef=ss/[#$J!'*13cEEE]_C+85Ja\)gHY'5ei#M;\u[(+m@W9p_*M_d*Y3u7g/:tbX9NMM%Yn8ZLVri%
%??`Hl-Yi:-/q(I8%/(29U[GYFFSUjOK#5\+05u9GZdZKI5KZ].F66!'8SZ,L*9Epj;=:&rPhR(a$i.%$CsX3Ic=*l,,%?"eS"JgA
%il3iX6g&*m$(aTWZeYI02a>J[l<,a.Xg;9-k"Nm"mT)"DVn$E!R/HR2Ep'o,De#ua4o"tc)sF0h][K+o)i_=.425pgfqO&!=fm-U
%?[B&&GhUk8N<]QJ"/q-F*@]oTqf"CW[en7GJ#g\WRi>%mm3X@Cp*D>J:"ms)CYHM@]kO^W1[9qF(e2t6jdWA[dk]OIo+Oj[/FPk=
%L,\#@TJm_Eq0h`(F%^B%r3P!C2lQC%CQp\qo,&JXGM68lNNIB1#1]_\<kCg+SZV(1V[^03H>n-W]*8A?pi_G+p2FTi+-#%R-6MFG
%-(!1HYB^6%r\tbe3u;X>H-)9l3,\Ounc,Kd3#jkl`Isk=MaMofB)JPm1]DI[1<,5<[m,>i9Z)#EYBu6<SZ5IbDO=%ikCNraM73o;
%Sie]J[Z8A"BNi\D(UJ-Ug'Z27>PN0+0N\2aW&+ZFC>r=!??c=Ah*"b?SAlkV4m\4'p,h:]VTl)Dar27?4u=-r+"hQG24=KB.1^32
%LaN!\KMC/3?="T5/cboucVN9OH4bl([!^5uS`+Gk4ZSeU:@m:a2S[:>qA+-*T=L<7M9YR'aigU0\!_KKAqN!8\5ID4dJK3FTXR&M
%FT0b):cFHiR"`&0-<eP`s3Ua3K5g!^Hb4XWjJuJ'90:qTOJ63rgM8`&qG3B>@O?NGSdpJ[H\:0_\%tNqJ]Ej!@2STICr3p-Hl9Q?
%ASf)*:!DTS$c&fIZeuDLj@`1kWmrLSEB5HA'RR[A?srnE"$'rPf.4%]Zo+]-rCoK&e1>)c*S]JeNVn9_m@W$*FBUSo.0gPD>,`n,
%KkL!6?\<(HE1/UmC)5ol4i]4P&IgqFW+kbHj[SXMCg_Wofk^?ZS_ci6f@ao9UH!_EA[QHUJV!=Mm5od=-1<amh9eNl^"(g)oZ'b^
%#?/1pm'ho-2))F4a%9nZpiT:L0g-IO'2`/c2]f/6s(NMNVdK>aq2OK#RiDm=i[(dJ.gQ?.HIa8pg$@C)K-T-h0*t@)8Z._Xdbs.Z
%cViA*oD-JjkXh7\3t7aCG.P@n1QS*`7*iH8iF'Dl4':mUg<o?ehZ!,R/Z1e]`pI3PW?sJUX%@;`k%luMm7=A&C.>D]n$F&/`YYQ'
%Xf$du0$]`^QhG87*$tkaNY6t;PkZ/UY>+(6CLUh9HC*0Hrh/.V6#Iptgu0,g'@dju.pl>`L)h>K)mjF.]0#H[eu2lWl=IB'JJ;1&
%RQ^Qd)f^?(lLch'AC9ghpD]+#Rt&s-bQ+#ICF2/@Z5N."C%<RIk9MiF#/Rhtas?4a[q<MkAVQBQ2Yf[<Z]<;;.nUHTgXQ%n1_OK!
%AF#Y(?^+#qp#Q"ECs@Pb8s;_<c)U]HkP1l1U;<7/mY`jp7@F%Ir*t.P[V!>lV+Do/BB,CO?PJ"XM_ZmMgXb-rj[9,_,(*7VI%9G(
%l7TmhAK%X,e*'`ZB[rK5D`QYC]LKVgo.MhR+jBb9(Oh")iYO41HG<&Vanq.#I@S=UX,67b=suBe8X>cAo'ur51\5bV,3rDf?e63<
%_0fOXYA<`PD(=,E[:)of(Y<7l>jL=Cc<%FLWqObFe`Oa&9F5M+<GfIMrM*H%W^Z.M7s;5+`l5&G(]:H`fr6_,cDT(/VboLI7Lcq:
%5)n^RkiajLdJ]ihHdQX/q0j*R1&pqu4I<r6n60f6#<@(]Q]6CR.WqY2r>TqR#H,S`:E@*EjkgN[Q6-qCmBqiO]3G3Fptr^&&$<Ud
%20'1Nq,ibrZU&dQ*J!U!IT*,$mP7.?P\tu_Zd\<6St!2II1A=*nS4gb=/gOL9q+LWV?m$=Ss8aU,ecs@BXHGDL%V5LpOC'eGCi'*
%e9LH.AB)KcLFlfa6o"MBnUpdm_5NHFSf]j]#X:2qkL:A(Xi@W#]?c]m"=lCqVK*DbTJcRbRNA^0+])lFp6Va^a(C1GefK"THi'@R
%PO2t^(:48fksLY3pYc_i?'C!#1rF.3%FJ^9LXZ/%CMa>)A+Ir)aoAC$-Z+pXi-IR=hfKq(GB:4[^U$27SD/PVp>9#Ws7-Q8!ZZH/
%)h.1bc1_hsd2B4bc=BD*\]o>9o=_MCc#(19S*qV<h'ZL$TA+ak6J"<.q+fofciEhu3ZRQ%qpS#5g2jCmAW=.cm`s*dPI)MI^UuFA
%ajdBp+5bd6WO<!/Ft82oEVf#\q)69rR,HQ;3,6#We7r>kX8_JXH@t,$Dd'?V]/M>lgtDgl[mB>??I3XuR^DHiVDMiSZ1%)j4.ZB,
%@aXGq/IohWh8.q)\q==%I!=5r^,m1?qkmU*k,Pc0:n>jpiQbG9F4JrKFnQ>CSM_$Dk5)DW(RC3g-FZaRpoC+BWD`K=[b@fKS(do,
%mN7Hb90-/oBiahgeMO=4Su/)e@U6!Pb,QHMT'-TTb$jbbWm5:"d+Km,[,Gg)$d=F8V)YRT4id7hnd]=eVf[/i5aulnP05r)2/hF,
%*s[M0HD(P/Qcp0tQ`kX222`kh<!u(lb?XQm=1l`l06>+U>k'S:.pe7DCT_oM.peZoV\q2UcP8ul"k!Q]A4$ki;lr?S[IEP9<#j.&
%A`?%KBj*V1V].PA,X-S'@2$mk%4?WOlZL6$g>,\-Dpu4Tbq*A!$(kYOR$`gj9KHZm7^J:PpZ=FC,c1sl>Z7spc7)FcYX?\b9Tu_K
%c2r^!\RbW!gDm-=hL:#uHs48ISA'+:?Sb5[g=U1Z%t:.KhYD*:9@LC+2.17F_q?\MBV(!c:Z@MI6))HfdoN$.]@%df2mSmZTg?+e
%<k>Z'IV3<C).OKm4512laja#_fqO`rkGS/(ScSh[5rpT)ojW]-8c(8!WfE[Cct;a"k(hfYo1/"NVjZ_0X*@coRiaM%cL9TV7daJa
%n$3jQbE!T!VMQjHM5!tU7Pk]l02\Suob_b'oKPa)Oj*J8dr:\BlS0_`!7#1AO3sa4F$7NJO"o6rbk2fo4iZi;PdqiF)Y=k+ToIfd
%I)+n-ZWT8[m0q`Rj*'nET\C`86*<;YA)-H)V+FmtTNpt%)PBtdgS<'jYk.0hVn^bML-ALbP!@=CLsQ%9`je+e3_^,gdrV2=X)>*Q
%aJ;l6Z5V<t8CTlZIpOZL^GTb+[IU.'^J"(iS$ZaVVEdM.f#jQB@)#9+=RECt15#4l3BZN4p.PHKBV@`CSFN8/`&G3=<m8*?F)K>M
%E.aTMj8VA\csNXEH$)+%4R<f24j?U8fqG%^*%.PE)IZ6;[205ARO_""S;_+(iN#gsVSqGo8Q-tkh5a*\-K!LWgnN\u(>(]C3n_&0
%Tg:&ccP+L!c(*]DGdFH.a4Hb1j/56^hnYH@J'l5BVL1Ehb8o@#k%D6>I@6Rsk2rSPq.X_qR[]r3N]3Y\RVO#WcVJVgE137^pFpNZ
%!Ero\S=:V`ro1pT(kqSAh#',j5L05:bM<"TpQ%J_`Ns]WCXek'3R6IOBAc&,X:^YGUjFm7D!qkg9f@h'H#=DCEt*bM-iI7.OIbQ6
%M9A,uc"Q&$e8lpJJWDfN/'rdcf!7:Y@h-SI/3q5:.&2-C\11X,mqh^O>9E:AUhF_ohWg.$][KEZ3u\.PCSIZVHC$MS)C?PtpuSVd
%48t`"i%h4X3X4G?cD(?!'/T/Nc4RmE.l/qrApQh83IQ"u[<bG5K^$dKf>'=RF?&&iDfmtHg<Cmo>4p&WABbe3:AWu$\0Y([U4)qa
%_W;UQ)B;3-gT:n\UN-1\4D;-Dl-V".\90QeR][%+g6^?ihtJ#m^@u$P.Os47CTj`rmcXf`pS:C8%G6VB!(%t@:ct:TnQ/)3GGX`(
%9usQT?JYTVGQ4n0@FNc>AFXBAbD#@U1[FVV^[ah'nikHh4I>1W8=I.e7c_*"1p_PoUe3s34te&B*P^[`g=K`9['s?<j'^7&>c<58
%-.=CZc"3W[9_?YpM)KGc:UO"UCC\Ln.1FIkReoFDBs-fo&4u<-Bm$Et!gPBR=>a/r:]<u;l],>Z];J8be$t@ELY_LWI]$%<J>l_t
%)@2BGRLH\:QT3ij[,Ej6Qs(H'a_o"1po%@8_TQ`4N-`'1pZC+=?qpL[GX7a5^-U%'aM1`bS8XLQnJrs)K5<a?s)EDG1hr-8aTa+m
%kaB,@2Jm^D-Z)8q+N%iXOf[`_;l3D]SnXA69P-kcac,^f%OTnJ(Un1q2407Yr*aU<kR=)cBjBdQZ?B$V(R3hJoKO`%bE\UT;Z=#E
%\n;a2rFFM!%%j+Kf-Yj4QrQ2eN/#6pjA%f0N/UuI!6Mb$i0Z@kE/Eba*"+it.^UXZ9`-iED$oWIcrQo=Y@`\(4EE]0(H<.(b@30]
%:'?$0jPj)e:03d8"qd"sZR/pnWLK2V2"^o-50J.3S`+m=3(k`n93e\Km0f!0Rn^J&.^YC*X+=0@%=[,4]2bn[afEP[@=RV)<%]E%
%1rpH\QIhSu@J4Y(bV"70q6Ri'/RPN!#`gqN$%=aJpI@;>1+>oTR(oj=qc%5lUfB2tFj?N6j'np=BfWOp\*ASuDbIe#?ScVtnUtu2
%ojh7Gl*S!'r^CaE_'DQQQ6,kYqmHF398:Bj(e*nc%Jh`8]+F^W9?WY`]A7r/Q[etkZNL2ma_rhYLW+a-B-ri%KpK.PS"8.$n8Pbd
%HJ7erG<<^noAOl_Np$AnP$_;E]j>na2KZ(tC,"l-DT/`1nNq$)f,iiKU:$Yt:qUuM"oa+nSFT-okOP1XT_D#_r!+8i3WHknkMs<o
%0#&tI`u?.MO,Ec,Farn-T7::t?!HUm3?#<_5MRZA`j9+kaIFe^SDQB1dVUW0L]-Tq/(V+n]lpmBOt,cY[a9ib>3G%iQYh]9>9D/$
%Cq2^oDUkm-%R,![^*qn]^#qbbI.PFr=Yt"MIbEBm'SC(g^Igq3A&\?.]0H>gIpVG\nZQ;WZJSm#f6Z.sqp&tos/Yqb-%7EEG8p:s
%9PG5_mongZDAj6#a#n+mIaK3s:MeY*TYGp-*M:oYZS+d`cfrKVgQ*;<Xaa[4o%Q@ZJaM$H@YsL]qd6:#<7NScXhTrEOo3"E`G+<`
%KLlreDT-&P/`]bI]k\X]QS-XYrm;3u0?<K3R^HDEUXlhk8"I'F3rS6rgDB)9O5El)MaK.UP*WT8-!?W4pd^kN$#[D;`*T#Ms-rh(
%P+bX:8%tV'^2%(bYFOE;bIpZ#qg[lUhVl5:9U41o[lC]3`AMF\FLD\L1@h3:m5qVZ/Jib@lWK!4X+0cap6$XYnC"\rEu+[18FoZl
%cU*ctBnXnk%Z4+e)6?J$#HM3Z7_e_W(uWB"N/i9Vs'r0gIq,+h?BU%Wd@q`mZ6[4:p3\O>fenn67+'d<oNA5^ks7&E:[]3OG.K"l
%MIrXV@9b@"R1>Rfk`QWQ>+BhOZ/uk_-HEmHk`]C_<k9R$&rqs*-jW^(eh6L!/-mt_@P9A5M(U5Xr?+7u9>ZBj<r+(7__B!6&Jt$c
%btUr8Lia.YVH4>LBCnXb0g"C0>g+jBRY=<Q@Ub%2R"S^p4C+L$<FHj^I9Qt\.G&18=Fl&[HLid1<ZbU<.%9q_M$[*D/E.r!Ed[`1
%$ff/`lU^`A@and#`gVOV-cjUN&BU.GL`i:ML_E9H'P/0UStHo&3ZMV`N0?S]j73aO\TcWqOA=PDpfds?,Tk50(T#(J[!7_^il^+s
%:n/-4lL+'X6$P^,N>EM*+).Q5>JJ8j=Ln@`.2<ZQh1MG/7C-,rmoU*mE'[@i<Hm6aHqXQ)p&^lPAY*EUs5=+^7/#F-<NG5PY^G/d
%/>TTpnoKi8Mm&k#d7#]Mm:$8PolnSN=Xe[Q*`h'.4]V7JVjEr\)e8Bf5d^>%F`OJ/?gWj`HL3rY:Y(Hkri=kLVtm1:3tIs%rpm@>
%d6"JaNR%FD\#V"CU6X@&6WG)r&qd=D)3'Zc@C:/Q9\IhbHLonqa*t2+q6A4*o":/Jc`XG.r6dL134kCqm;J7pj1s[u3R..TjZd5#
%a)(>lBF5m)W'9>,5L,^CEE6?A?d63toVa/o7`&o52r?^2(-_$V%S(#T+=qX6ka]<bea?6dHtRp01["bc+!7_dOj/d^??`"f\"LMc
%%ZspYfGTZ%0EYoqeSeT,2u[mL#Rch=9;ZB>&*@[)`2r>,ou5C%FSuT+@M^t?/T5)841euW0"8H`im[aq-a.SA0+F$6hoiXAI!PN@
%ZPNND,9r`iN/okN!dU?)(`2^LGjbNWmGT/U$]!EmoR[$n.ZVQ'O>1tOR616bFnBAO-bB/i`@"8^\+nie.nl[V+ci@l<pjPH6K!4d
%5JYago95]!E%_a?<gW!g):t4+[#cTQs$QP)]mKb8`U%G=hEL:chc6#LNUHd3Y?]@pF/kc2q3aF(3q1''qt==;WNERYm[.egm><^^
%q-KUFg:^698Ym:X2OhJU[C7fIl`#+W](4Ynm"+X)K:].Dn?;k=Z#rqt?$jIWOns.JhJ.,E'hc;JGjXU@YP#-p^ZG?a(;3g&)t'/=
%0gF5:`V\9,5gA-N,]/!Aql;`j*rdd3n,Lhnf(\7GNBd.r#<gl-s&E@(O-H70"E!Pk@-_dH&;jNCj.]b]]YA:e(u+hl()Tj^<2'Rl
%q"]"Rr1^Lg_Z.5co9#VbR^;pWpLa[l>^:hdC4GmT\+Xc_pY8;pU,%0W2fd9Yc)CX)e9BGT\%c3*qg9;k;7Gc;NR%;:qkQN%<NG#I
%LrT,nrUYYKML)tPeq_P]8OWA$<qTr4MZ:@7cAX-]o"NedmNPW=dEH:pFYE^R@o:l>*/t4#J)R[e&Zr^udWal`k,h&-$]XenFGSck
%[362m%kSQcjs0QfQo>uIA*!XWpR/._4PKUZo!e?bQmSS7GADAfnL1.WX`&ri;k(JPBp,fjDdl]o@Kk(@n(bAMhVC@[M`0HYCJI:@
%DFKuNm+\((G3)s+3?dcNs*L;pgQe[48:,__:S$42c,$n$URlRN`m9Frh=H9<q(fuDRM\VJ9;KMH014>S)59O(_bJ'rm!$J:m6\hh
%#VVDAcS+nS[OOlfNO_[KqG^bgFZS7oMm"WiO+Sk%bk9plhJ*SARtLER]<qgHIOf+!%QggBk>iY8@pp"j@=3B$^U74YK7@XL,EioY
%`h<#F["h3M;nQ@Z]/AmQVf?K%:Hc/-KV#_`C`da8D"#oKiWf*7@:DBGd,*V3HW_,GrV#HmdB_09@!o>_h<S)EYGFakV8Mhros-_!
%GD9[]>kOp`^>H4Lg\T8MNo5Q-ER=f>_h6ulo@?5)TJJ.1B)f):\sf.8^[>c3<9k7Se"LNPksrD%pTBN$57+[C<Al_m9"Y+-HaHX.
%hQOWZMd^8J)?/3$^$>MMDQRc"a6h,hY<00E0eA"a]YO-VnNkPgetMG`f#ph9d)/J*pi5\qVk)5lH'_c_qm<]c4l!7=nua`&q6!K!
%=WB^;&*U>VmduDJ_FBJg'a9^A\W/XuiKJG7pTV?cBtY?'<53Kc6GJ0n=.@V2o>BEmZe]u]3B6AbC*TBlorGnpp"F/AH`\=_g'?4'
%KAS`-"))mqm&&l7Y?`kn-f4^%ZSa@!J+4Rs-<`G$.9jLR5qu\b^AXfD>._aHO,cn$HmJ)Ro_(5!D2a"rPKn*;hDod5VG",In$GQk
%H&bX("chra)kGhem;_Z!MT9pqO&edKq;f6CeU94*CA74WCUL3#?K$9h8)'^-dtL-0YDf4e997X7HT`;ZY<,+!`8]A^Ao^d`B"L:q
%[YeC*O%uWu;LaX`ku:]kD]-4F-l+DVXtnXQ@k2W<k=+o-#9DOQ*u:pHHYb6KIuI1XGEsZae]-k<pYqRCh<ZboQ57+XhsHebY?27@
%.8Ph@\>3ofUXbPlq?[tM(V<t1B=G>[%YbA+&!WAegUO967cW@B[b,R0%^qGl`N^B5c=,hd5C,gsimhpkm)cc.eC.#mj=fT18WQ?k
%mXDFF/;SsoT-TI6_G`+dSu^/>.CU@!>'BV?e2lR,^+/U*/&k_uRcD6#);bbnoK/W@OfC"J[bBC`VTj:"o?Z"QYSaWF#gq$)<$\e+
%L-TTLSb-JrNIoIgJZ)c:QbhecQf_!Wk>/c3C2S5bh;/&BdGXYD%X,Fs:6US&d:RU8h`a#@7&+q=CQ:?a<t+4W^ZaN/Uo1PfK<"h1
%)Kf3u[rlQ9SuWm"SlgEN]eC;?Ja9rY6Hu'1gY*STs&8@#-WVHsXsuo>[C>h+Z[)FjGIoZ@rH(k,1nAig%&cLUl?0US4ZdRanbmYJ
%p6nr9osX=[>)gaBGIMWDrcV%lNOB=C>CW5!2l4r'IrshK-n:2a!ROE=Vmiu,o"F`_otAYR\9Gr&%sI\3//1UW@fJW50h/R5o+*iu
%-Erpig=7'q^u:L.2Uj>p/aV6B2<g'H(K510#__eUFVC8:H'JksA[U:M)4XcHCH+:5YKjB3[;kX5+GO^@LSHZF9Qf73/FO"nqV#MM
%MoGGg4f)2+4?+[ET3cfqBRA>iY,mK%WOL`&%mQ#5]QJk\j]a[B>^bq%3d[bh?J+\:Zfk#XKAk+KJ*-TeHDAAP2qc*4L;Bg%DCOV<
%3)W3RrQ[#_:X7\f7gkel#_$FDWRuO:1n:1DBcdSTd5`G]G]b*.gTH)T0;(bQd9_131[LX^>H$'i6]?5_.r=I,pH)8)4_\j2j'^ie
%nLQlg\OEpc#_1nd>cLJX<#m$\H:gW^j"#nHPJ14';,2%Bh\/L&Sq+tsiO#*J\n<To7?,."ka\O[%^sYd&6WN?n-m.8W%g=qi(3\b
%5&+u0Stg!ZEfY8EWo<Yje6q0C[@P57ela4j.d9OQNNSK&N-3nRro!-COO\*DQYW@_&!pL]elEDJ:QequJq'4oZsTo,<<;b\O^c'T
%,G+NFMAfTM]D]&?,+g0mOKJIG5Fg,`Q(!?qT%f7MfE2VlnV4_u^*@0$&[>-#@cqSu[GtSGNM'>P`:^K\qnl9DFg/geIndIFoc5#C
%QgDjq7JUr[EW#Gr"9anI=L<G+QS4CH^"td"7N]2H`Ta%FeosQr@BgOV8"BYeY%Lgid,#h9/Hhf>kt<\X)S>.mY'rLcHrS1%eW0@(
%)WLaheE40MI4F*<J)+Z.JW?\:o]T!)AmIn1*B03]9?3?1=,D-+JJrJreUT;gC;=>%T;rT?UScQ4:94)ggh*RD9@a]_n*S`$Z!9Jm
%Z)lK(IT-d16n,eB@cIO'L"b^4Qe\oUInAbn402cWPTH#\%D,=&GdPes%uj6,pP\G]S_f:ME2QWpgT$QG^;**oY\NpA<Gd5[E)OI9
%$(A4XPcJIf385XMYC>Gca^n2<G%'e<H&Ldl\!76t<[Fc=YtC_<"4at)aZ`V;V=20$?%63roOV&cX.=m'XatX5[F6Y&&H6g]^Kk]o
%W>?`hf]qDh^A-+ss!T7%g<`f=C/Y3s>0Km#TV=4*d<>&j]/s<-O.<^-gNs</@=:,f01OL\KAhTPkFC!rlRB62Qo#MIF=oP`ZQ;E?
%]!OJ:LTK]u9:l^jK.Vg1SFVrj\CSlP93]<MApaHOrFa0As"DqpYFIk+G!jqSB=,%fLP;"l5COd8BQ[(@r7jP@b1_pQ>K+6,3p=PU
%f0*%qf#Y(<b4n3A!YiT9::OBE]2jlt(]+ukkK/q<;0V;U4llZl!OH^>6!KA'`[f5p0m%f43:g>;#eDmgp3Bqcngg;V._!SZ%QEoP
%#6"'boM2.lO%15dm\`1!,Pp.lLGJ(o,O3r\n#m\GX,:gcP7GAV/qiOlH\_KfrH>Y/C9VCl)-E/A466Xl1Tm=SJl/NAZoC^lWd1&(
%g2FPr6d]mi+h6/eHW',5cX+%:Gj`o#>'9NBX.@YJ.u'gRlW`J.>)P#?;4aO#[uP\jm-^Xdhc)1bd@!oKoDOVJs4hJaj=/_hB<0*f
%n7F+q@\nJq4tYU9R4>fVpfa2hTf[%lCV!W>[Hf^'_Kc%!\<)].,OAPO%!u.?^NT=!,E=e768VfGMFH^di4PN?k?^@,%,kfoSTYq$
%Q%jG-<'.UTZM<!h3h*=bS_m/uI^N79VcL';[`3ZbQJ+T-`Hm%X2/<*(fBKb6mGBVHgAMdVh%uemdk_%h>,sg'O$ZhrT&X(n(0\[d
%NZ/f74d,,G2u[l;fK(Db>cZLh4#2]h)KO;4YSOfu\ZSpMn2FRjKA@"57Jg<L!H,9pBm$D8BX`;)\aE6Q\eX,$(fIZ1Nt/YmnA:7_
%X0c?&2j5WTo87O0=M4<7VgP3+W--bmJB7&1duPc_BPe3j#NogQC7h`@1bRNYYuWgYil)7a'lDIq2/4ntq:/iCBrc<5<j=2>3ns:N
%F:GCOV2A_Bfr_adV]BE:]69EEg/rXm.#V/bj6S\ahlfFT5/6sf`k=>*5JPtPmcNR!lLS6'Mo1>IHZsZ1T0-H[jQ<kr=1[dQd:^S1
%?`bWHhHBdMiIe&UQZo&!q"`CXiSdhK^(riUY4tldWTT7AIp(U@l$^!bpSW`2Mt_*1N#"oj#IfW3/DbgGaj=cc*\Zu2p!&]>HVnEc
%V0i6Yf':,hkI\d+ojmssidp@ZqNX/,%hH^]^V!d2I^jNABn,V_[.J$A]Q`C%o',-0C@p2Kj^3>+^F:51]&Ps14Rm<]V>3m_qO=rY
%0"kFkG^]EeX7bnn>J0]=rS?J(dDGmBeXKVMf<7?mhC0M`r`]?4=IN<8hRuLIH],T+md)LnNE>i%+8f<'r-WX0bCB*Kik7!0Ij6m%
%?@'!Le*^"aia5c:?%'*Yk`b+4fe8sLD;=up0/)j$Hi($l9`E5C)d@)^nMf'#p7h;*mk%fOYMNB1G4Xl9M^tEL]=u]R]`-j^j%oF;
%DJcdGi*Y:ZCHG>cjO(\c]:BGDTDa/8qpXTmjkc7U5JK(gn`/TVPDuWXU&eUPhL3$Q(6;&T^4*Q$eDL+Ms2P#8GAjDV5Mkk+l0Zkn
%\2;uejPT`Oa*5#J>(&MZ?1_CuGpe"RHJ<YT/%=9P8+rS3^NSpTB=XACfU"LDs5_>^b+j<U^0/(9`rHpW5'i]GqB0&]r,guUlg;0*
%K$@*Kn\,P1=,J=f8?RH"cgiu>PC1hL=$9[bn3q@j#O(L@-_CA+e#07Ug\7kRIraS)+Wcj*LS&f-<[f*MD>sE0`'8-%=MLd6](]h(
%CT5'hF7!VN>O[(1W#3A.GrHd,=M#HPI^sf4DtN2k]t<%64SstBe%Ka@^ZWeF4f50cr7J^"]CH^7C\M21<[V?Zr5nNpHZjV<gjL%d
%5:"![/\P?dji6T2mB;"FCUZP.CcU2Hp7)!!Q1)FmHG6]_@Wc=Yqs37Fn*]NXO'.LWJ+[,/oS6uSLUHmUNRuA$G>$96=+>MeI\lp7
%Er5:Mrfu=4Q(@5id>&6]:=GQaKCXTH`io8H00Of*rTj.,0=JW]hQae\.=`Qq5$7UB`g<m`^Ij\2,[#Kam]5lmQX2fr+!,@UOj:*$
%KRJgJL7d,#2MrCEHj,1V[3)i\lio]3qf:4ks)BdS34S_S^%KobN*O,C@sO19FS'q141G'+m:46,q/UCqaF6HkWa5;mahstLO+!%X
%HT)H&rk*\skNdgJn(t)eJhK=bl(5OZ]gn7'Q[*6Bg=:g/<q_]C+4b<l=]d>tCG?@6+)nL<=PLh\>qBU>rmd`_T74&N]=0[jmr!RN
%E[gr1G]WL=]_JN$\p![p5?tgCF#-&FZfE2h?`t0)=aKa_qaRjC4NLTjT7$[tV"\HN9"g#;V`VlY=UVn#@J'3en/8uCs5HK9meU\r
%6ZD)%_k4c,.%=8ECMRR2D)G(TP?Z@?F7!-"^Nt<l:L1[4o>1+]?cLjtbJ!o@_:#Btmli8inb!?8K7gS$K4i$seQ_:mV3a8jT,3j-
%]=ONfGd=5?k810\T7<+?mlT0c-#r>FG@0$\?9I34GH\mV`SLFK@D2\dFYh`uZh3XMX\ldgeYSV9hY+6^HFN<^FY!1i4Jo26GjO6j
%rc%7t]704BJ$$$+s7#T*]@njUhGRLfI;e^rmFqMGhip4KO^Bi9YDq#eiWVC_a!tUahmiPsZr='`>G&pYraG9_d`0Uo=7k*ll0$$4
%?`bjn<ITC&X9VP(0)IjQ^0fSRHkhp]Z81"<U1Aan\96u7I'W$*^&@oC0;#H?e!E/.fDNmc^0M)LIe)/1LA$N)E951crq4'Rr6W4I
%FZ/]9l/0.^ntdj`:gR!]VQ@pLr4.c/EJ7KbcXc'-n-si[0:1E,<`$4UG?_Y&CH[YqXhG5#s)>2s.ed$_J$'QJEA+h\>0k>1a^ahU
%qE5VMlT]>iggq55c3q@MC[_toUj*;P.W*1@V(]Q/q?geXH+3?!]Z8E+ZBmcO<;u.M[pb>;Qh-r`W5+.8=nX3.o*(s8qn%'eELj>M
%/p35cGNA@(#h6W?$/bKlp_ZN8KKVdW6@Y7ZB1(<OocCZiG*RRJDXPm_:O%`8P?[Y:r6HQ?c%!9.b#@VUb1OL!E8'e@F_m`A'A'C-
%]U[V]quHorG^nP9k&LZ/O5)BmNQTRClIR7Zf(J!MmBe)iA[gHohrDoVl`@TdbKrHD<)tVa*sQi_a_IIA5rj0m+.]ZY_N_Us?L`_R
%7V&Ig#?q@Vhhu^Qfn5$mcAptVD5<`0)R=@#Na?NUb%G^88XE2dji\q@^Ne%RaX9>@q"jch+6kW?oqb`n^[A9YIbo?MS-*qdlMco!
%oo%XIpW<9X:VXZNrlOg:Chm]fAeMn]cO+r0ou#dY:VY^kl2L=(EGb$ZY?,:RX2l.Jpr2L<SZ45]ish&233C_,4FG]0h-466.5Kk?
%7pl0rDL/_^R.ok)ld)cr.sm%)Iou[GlX-!Z9j3#'=aJb.ID35]dr5u;D/XFOY<V.RNtur2H+itHDZ.433;Vt.It.!s32jPT=PLF_
%lLo7=1UpFF>5HF3];qLgCL<>N(BpbXLO%Q3.\6O*4g1CDWffejI`2=In#[+D6u4r.KC>PoZ<Mt9:LF+2KGT7@<QOb$&-'i3V8:9-
%!n@6pG\M,;0lbPLe6?UV*3<p'jI\W#-^_!E0`4PX_m`]2W7^auj(1imAQP/+R^n%UceEX&qWc,OYEtI!M^NnW\bs_3g[!&?>^89*
%W/O_$4e\pV7hq'`#KbR*X,h^$gL\^ii.92&:U&@K.Xg-"nnRFb[pKrh^6kcQ7a!_NmE?_ZqB/A4]6Wmb\X2Zsjk6;O9R/`[ri2OP
%Wt.F"knNaURsRt]C_cu]3IZ5Bn'*u0EAr2E^[I@bc7nuVf>Zn2dRJ0F7WJ7lYQ!+r0:rK-hgUaSEV@rU:=3DjU2uP$_%.VO?.o,F
%P<6`&^OL/hi8$`Ii!$1`b9*>4-k7^[Fs8kBmblmie+/:Pr[6e<DTmHO[eG+i51S]I8NL!\^UNpsK"F[ermSLFT<>Bj%l$5"/,=W@
%j6Pi?\)1f^es".thn3&BG)u+dTBWBtIXbqnRqE\DE?r"8hY\"$2\3';l%d1$(Z(@.L#0_po?QjHUMY;uH2>R1FR^2,1=m=t_nBu`
%4&=a]aX>m:^:a>!%Y-(d:;6:tEqAH!b?lhkLWc9=o@qY?[I<VYVks=Zf=0NGYG,A?\k@'I>J%F*r:f6TeusRC1Fe]n2oPg]k'"Ml
%Y$S97^]3;W4g[(O]XR]8J+:cB2m2#j]<Ta8G/O4o%en+LI8&2]eZIBB_s9PQ839"Q5$<4T<S^?Oh6#?e%[*Zhg_-Tm3H$7"V4R8E
%Bj>os9]P->37qBuNk,PI&%CE0oH(47\oQkt%C?/$qgS-.Z'j?'%L\umlQ3+^nZu#1,$=m)q\S:hYJ9h@j]gUAqUtT-p3qJ>L>]Ih
%(WZ>)^"&CO5*aCWf&2_s$_f<dD;1QWnX[tO=$,,9?bNt_gfo$f(H:16;\gf',L:c2D>%l7rD-MO(9bLMal9MI5@&>7fUa%1`>Y7o
%G,=D]r"8Xqh6kM^5BQ4S%G1'X4Q>ZBraZfH<;PbA_+&i;Q`B;`E36J?e+:iYKuA!JCX:9BCKia1+.&^;q)?8jpa-[M5bB-I\p3\e
%Dm-<-g@)a]NaI:FYk635(V<<n?erN6j5H8Yn'^;.rq<QG^rQ_$s7Y`Q[nj.o!dVm;`EI\.j.t;Q?=!MGA,ZA(=2/+u.Cs?+Q[O$u
%p$oFCY#47/<rn0p]2q01,:!6_h4;kMp.fjI<,ATg7r(&d-TflW%c?U1rUNaBY<Nteh4pSVT6^0pAGg!:,mJJhC>i4\\'I;/*kcuH
%:[d8N>j?I(rj&kOVu-9K:CC=ok0j+kpKq2jWH#=lnVuN_GM`kdrchJGf@SJa>Bc\]WH,K>dha+)GJ!H_pMP3Bk26KZ==.O-Bd6r6
%pMbV0rH$Kc`@X!g`mUc[@W-P'-fWC;a`e7sSuo[)o#Lf.gW/fI[tRBOlc\9\0E,,e)td7g6IE\h5^'"&jFm!+:e]BBPN;`>Y@$*i
%m6-;!!EhYJ:S3*A]!Lqu@&<bhcf/D]8'dOu%iu0T)G'ca(jjR6>6juQS_O.lo/g_p0A]tuW/B^5DYL:c%WCHa=J6OtdWaHl<d4,,
%Dm0,d).,PTV>2d^cX.Em^e`i@%JHB#8#OmmN0C"2kE"`j(U*MnUWQDYE'FY))C>37V6sAtC&X:djSRJuDarBTA_#0%rT_l)Q)/]:
%lRRn*0>IAM^Ahjq^\qU*j=3gSIp%0tl;;p,hWhWA3lS].l+\&']]nc8Ad?6J<+VZjR,Z>6S_pIb9/$"-[T2D'qH`MPr;Z,sBt's.
%On\bP=f];)[3MWXc$<,hJHA6Y[S[U0>9!uiU2W@[n'5Q1nbYi;^%\\C$U+I\=mN/%kmQ8]pGM#s)&X=059`;f_3;'OCOYGhcC7&5
%pW[n8X&Vl/^A8-gr\og,IfH5\J+DQ&TAFhf\&S/+IHB`a+$=r@)uop75MXW@m6>NKcb9&BUBo[\p?eJZP)9),'0?_C/]!c<qYG,[
%rVeIqFT8r.S<;EQpus<4^]2D'YC,_=YJ'eLo3_:PgW#BErqYY'5Q"Qsb;=-dcAo4q]I*mJS,#&XHL6Wf_nGa9=$D#t04k`l&"hY0
%MVnBnB>=5e(LR'kn%\XacbKM3=$HQB?`rhUgMQ-;Dk8=9o[DD5IJE2U]oA&#K>oTbhn&+Gg)#57qqn6us7"cE^@SH[rn@")4kt,U
%pa>NYEd@(3?[M4Q+2!4,qHldOT>'m^(Z*2oq"1W=2W?#V<58"Zo;hoQS*u`MoUXmSoY^TI2/E-EIsCL;DuJql2`KjGNpNq[^4'Q9
%djJLLDg^m<p?G<LiV24tAE8)DUT66$pKoFhh0V\@m^4u;Ie@^\fO"OGlM5ehlcUs++917V>DIG&j/"uSo\jl;G`BuIpXcaCnXM%.
%kr7Mp_,m\.X`&XP?iQfOH].c2D4\-9/q3]i=52#=IJctmhgXreA$'+6=!,3SQi>-cYQ*k5kMi]D&OgUt2gslF(I(gmnYdF7rO;7/
%pUqLZAB3'C?N+WPp]Xe=&J,sN-K\An7<JIk)\5/\i@gO9^$2Tm_<]FFQTt?1:VV.scG.202idH9^&"f%_O#3+p[Q>`5J6X907Q\i
%j7<D#dRuh$iu<Jrj_I*Yo*7d:qST4t@Ga+aoU7GHqY5-lB4gE+lX*tFFoCOsV_sQ#^]'ueA57XG_^AgfP$.Oo+4i!j4^,Z49Raa&
%V$6$>T:oqGo:8stqSOt9e`QB"LS&_F[sh`^nbZ[t=2/p$hlH-%Qaaa$iX6jApA@VgrTU6Ypt6UJ^&7%`s8M<_KasKRId<3lp9gP]
%FRiH3p=u.`^P`9empH+NkJ-ORkdorWf7*_Hf7s[Vn^39dVn[NMV=gBTr^n=3iG6bfn)7%`jgUk0o$(Nkj%E27X+0d>bu]D\cVL?C
%8j\%)nZQkhc;.eN^\ZDtDO_7N^[Jl3bL]Gpr+#TcLS+SB02Du85CV^ZYMZkM&n;^?i8s`ThENo0r5Z"Sp>U"Lfmiqa>9Eck2BK/_
%2%s'u5;4.)VjNY<_@KuLn^h*S[JA'K5/-\.n`[$75Q0B`?WmuD5)6-tSmjH:T0E8IbO#f^Hn^$?p<S2nk-lGGrogikq8)5J_*7VQ
%$ZFVj?hs]q?hiD&mel]ok\77!nk61#ps#GED&VYdo;ej<mE^hfkeHis4,,utdn;q%W5!CH,ldG507NKi:I"TrpV0dhq`k,OTC.oG
%#6aN<n'/=jroqJ5m=,!/8,r;*Du07a$X`f'^OA,Up#iNkC1bmqrqtIXY<<Am]Z@+2Qoa4UAD/D>F8X(F^A;b$cHj0J0S5;FB9229
%5PX7HW9Sm/_YXkI4egj/i.K'gIA?`2/-#/17h>2qhtcM`5Q06ck-$FFqu?SWIt.K"T>(#WT7-Q?&0,&Cnau>2YJ&Jn(cN6nW>*+N
%aG4,Ppl;KUgX!S*nZRE5a[OM2HK=tbM,)#/\;a_=rJBdHmsf(nq!Jqm`4c!2orl2Gn%A;Dg[hQ5l.^]4nb6tSa$4k4QCF)+rl$sB
%B)O0,nksemhu@f9OfJ5'q9(G(ou^?bp[uQ[I-obY^\lOVg37i!Q[[!,B\-S_Uh@sO=eJUi?8Wbhji9%QnGBC&GQ#dubXB!!VDg_P
%B>q(So:*LBkE!Bu`;TP5^]3;/YO4XSma_&]qV/JRp,m`sT'Lk\hYuJ`r]Z"[)mB4l1EZVMo7-`$+('FYT'n?4i;)Pc2a@<0RpVGs
%rj3XA:"'8pnCj4gX2"/\Wt4)n^NmB';]jk(J`"0@[GSXhegmA?Ac2B$^\mf?R0EPZ=^NiCgFp3%jX\8f^A4gJr8HO>q:Y5nrVR+J
%]0&XH^R[YdT(S'=k+ghJpqajL^AH<QGFh\7;L.lK56'>Xhg]pV2ZN=(fD^#)$>t.9a$iJq%NDgjqQ%)3mFPh<euR[qR<\Z4H+K%m
%jh38?M_++]5.L!Pq8TJMr5J->p<q"=rn%0pm2++IXKX/Ql]pr;l\F_NJEPlUJ,c"qrSd',)W1>SgV:%tq=SNs3uZ"jh"Y3m6&bg;
%]Y3:=DYj1L2a78JIgEI3pWpVNl4:V?D>/JOCUTSdqW-2Ihg4*"p%FaOoS*8;X8i!LrL8#8UhsqOj3tbhs/!2RqtR@Ro)J^?^K_C8
%$`T^.IOM;W-P'N\e]QY"Io"\JqXMUm!^1V]:5$:UW#KFMkH9r@%cjCha<1AlVisGc52mW>3*@.q-+a'>QQKR,48]2g\aCRNJ+rIT
%55O?D=-*CVl&C:'Sl5==O8n^"%OF'_?uI;3rqMh0qt1I`rTLH"qpS'MId'TgmG58/k^2o#4-M>G&;@=`QQ&Y!PdTRXFDeO:S,5K(
%lTsdkrm@FRnZ.08?dJ!%#Pn0#Dg\XSYQ<Q]MYc`/^-Xn\?2\iVg-7Ingb+*R;W<XdrgZ/3lM'o!s6F%kf;GNtckW[$eD9^GeM;3t
%T2kod"k6eZ?M>63LKaqIX#=%.n1[(OErD%Sk1*3g5Bqg`ZKWE^rjohqrpes,gKVF]Hg?fCq]T3^h_t,[Da3>)g<CRNesGi@a-c&]
%l4:=i3WSR>TO-a.D-HA9m`VqCQ+X,&Q*:%P:k)V"lY?)U+8ka;Q`ck%<OQVTn(Q;q[WSf=?[hn`5PO9Ss4lE,eS)MXYofQLK9n#j
%eNS%Z:[EdSRFkB?db;/Xp-.2i)aA[YVp/d)0sU&EXd.LfB4=BRB4=fo`ili!pJ#IplY>#M%o4b&IJN=r2^W_(Slj`IF4>K(k)uX*
%2LX.Wm%f!;LWsI=]j2u`l$n3Fk*U73X7PKFQLR=:f8KFr^X"KMgjR?4BCC55D5D/7HhXSHm?>i%mef.aH/n<kr7NEI7N,>T!LA.m
%EII4GZSBJ6lEtQ/2?END#;^5WWd]Tk[t"3\dq7H)f=F7R[KC-@qo/`qj[/k!f#ak5?Y.tI2]d2lJ)eN>C<TOm;"#:\]75mHb;<i!
%7q/^pA_tJ[p=!p8jF0!nl@[t`C@SkjCt;XtY]d.n3:@_$,6Vi9dY511Yt)S,%m2mSj7k\#D>&GU\p`XanD*UGIeq@_JMQV,]4f4(
%<LVT$1=%K*&6cnm<ENO2&UR$_8[:3eXPg&C#.<2HmqSnMrBskBQ:tnT<IFI`1;2f3'8'gk/@O'=P^7t.GDL`u;9)\E.K,#<eMuKe
%2BA[$`7o\!9mZT'::nkRD2rrr?6pI2mG4@?e'EF4bQ#AA@nH:L?W*ZdVjCJu-^$X_Te2+<X'%*2`eA@lh2CYn'93X,n%53<oB'[=
%`NZ10/=CAL#Mqa.?-TbCH2"CpSYgQqo$'8lIPc3s`[,B9i2c@oNh(XLlF;,ega37Fbib2ifaiE)faiCB16FZmmE&rqYDe,$Ld:@M
%]9Em4KjAJ@J<Q_uB,h^>nZKt9QSqg4j(e')HUB^5S*P]5]'471g`RL3G@PeXB(HJsJEnj!H^AO!e`_=H*>(3#oB*q#M;:0P)"UJe
%m?,)_O*lh'C<>Y%OVkaQ'4Y+^D]-g?<0:S1`DaAW^=fr1VN]l02ESCO+,1mlGrrK,W/%68qj;7`m#_4d>6cO)\U!/9Oki+oIQ^h$
%1N.TUe[FSFJ+"m$-DSDqUKn.q,W8G4X_ZWI)12;rHdPrm=H6SFbAKO6"<Ncle]=)&l47bCjr'A2R32;:P<CjCg(504Bn`f_$[)Rb
%D(Cb_rG[D/qHlIABsnW?dY`NP\b-de0ZBpf-0KWQh&ahs!T0"n:\X*ai\Ck__ebMkmB#<:V?t.+a3JJcjObJ"'oZ[mFkW.Np'l-u
%RV^%>TYKk=]@Vd:fi^d%eLfGmb[No7oG.+pc.Se0[GnlC>*utM]gggN6Iak-*,P@]>ACe'8[8hDOq>4<4F#)`LMGUYH_5N7YMI4t
%E8-pTHB'^lZg07Y]5d1KkMNqL%Juo3;_B_!\u+81j)+'62E;u3]jnDrigdC$#B9Z,ims'5)0)_Ura;gU'pBN=(i,RKQ1@jl?-IF1
%[k>$$I(&15@8%hBN>4:u2CjO6R[gK^>=Q"8Ahr$fbCkh&/391*.5mMiehr/jcH`\6o;Zi-K-d;!-drE?;!]d_F:?uLK@nEEo#jYN
%Z1>7l(9'?'-JSD+FdhMB4/`VN6?1hVSN#&,qW!Zo[Vh1O.?^VMk)'P+T=U7i"DUI$ZpWY.)!l%i0>2Rs(@AT"KJiioL'\?ZFJkeo
%NkR3Iq_a(OU.+J@!l)sTMs3l29S=a&`#Bt##$8,ob:>XeDsC91mI+a*2P)'Lbq?BlH!j.q<SgZ`g4XZ+$[HMBVC>CgNS,9)s00bV
%mDO(o10H1LSJ.<h'A$2^"K$U:WUnX^>*'oI7Wq6nP;E`Q2e1X8TQJn-Pg@t+e80>/m(M+kb)![HjRKo=1n+Z#3qY2]!G&i$,Y575
%^a6uaeB0<cC5fN9+cWb-NQTaFe1A!@Acf#mab>/Oq'aE%bBVoF=UiI>:-7.KK4=`5">%$N/7TLKXUsmNiP]89=k@f$7H$M<@G[Z!
%N"h,.CSD-,DArHU'S+n!].9@Q[`RYGDuRnPE2/u.VL%;BQPmQhUoD!hl^DqeS[YP=)UF4=V1.0<o<s>hBq6mo[eohr4'tl9nI]BS
%fnUKH<up=fGF4K#>@ec1Hu2CIqoi=u*6*ZtN6`ajL]5(N,"c'<Va9RUH)L@.0tp;jiG=-(ae6N9DYsDkD5,"(LW!DVkK:AYSZuF&
%]$)]7qq"Qb'K:!g:"h):NhU4(NNu9;LghnJls\YoR@t,F_\1KtH58.f.Blm87SSiY\@`nI&kR$'N194sL%^;DkMY2\i?Xn]]X/#h
%I7Enh]c?]gOp(ecPENmsCWIj/>O;j'O"aih(Kk+#o[jU;A,giG6JG!Vl#UW[?e8$#5d3et)K2t@A>Pc;1_m4H[P]:[VqH:KVWeUb
%P1X9l?#=)@da^4q)>/)EB%p!kHcgtW!kU(7LQ,is1qnmf_U2?;%B@O@C3"9r?@=p_s2ostnJD!7D%NR<,'Rcj;>9<622`]fg(]R9
%nguS98"SKdG>.mPRDm)k=H(dI!deJ4(cm#J*H(^_9DDu>*XG+KS[#dSV:aSU8/O.<7&`WC(n1dmHk7aE<ZBYsW#Wl]%ks3D2KoOK
%+:O++S(,E.+DKTX$BqE6lI[O<,mM+O[JNW/9Xd*]=V-%a4a.?<UF+<"Qef[s`fJ(JF44:RqT;A,4IAt"L[Zf^2LrQDUU:N.g'@:R
%jd%]?6uHTM2G*)SU&9o9CprWCFe,d<*U_L;di$E(Zl5a*[Y,(s7eZ.EJ*`tn?NGn+-m$9EIUgTW"BT&uDf(4r7C-r5&`_9Q8;H/X
%3-BU`)QNE`/juukpu0lNm")b8D#MI-4.B`l-*;H*7C%9SNLJ[eG_]qe1M880Ac-"@Rq6n>e*QE+5NY0)H0pm@Z@ErO(Yf9+`5Bp-
%e,F8@AA4*Jq`i#[[SgDN#QeA'agHuMV8Zn$VL:tS>kDSFkas32M&Grf+djV7]+IU34IX;)OBhKqKT9d5R"P+j6MLrm-AgjRW7gtt
%)2b&r])U#Me`Q<XD5t__b\$%,iqkuRb19!#F3CD`EJ>H8LtKDc'Ic#V3#(FI=e%g;GY)Fc]r?P1D><Zc&XZ"6b79"Q4]\44BmAqJ
%+-gGC;S0[91\p5u2S-0A_+&X-\Ym;7GPV!TXnUP&ik"+a2Ck5=>FoGSb(bNND072Zk;:H6Y195Zm'BO_m2NX-kZrKbG%opFZj#75
%JC['U+8>/s7iMB_Sb_@'*IQ168&F&H$24^cHNhWAP3<s4F[rSt^0glq'pS/N9;^Q!Id\*'cOfF:*<A*rGi9T;r@.$"q"plB?!6sj
%I;<mL=16"h3DVSm31!l^:Y6Gh5Ko-W7Ci-qFWQZYZ)qbaKM*lF7pOnU+#EWuc=0\i'maB%Ji33pa`Pk0rin'HN%s2hP5C=.qiCRM
%-1Ll]qYlPjDjm9jRK%>CO/]\`3X/nORd%Nr%H!7N&K8CGZ@sU3R@7FCbZbJB:4XWn=\Z4=f!N]Rr?A>-3F/FCrPJTN1\:=UYCkUR
%Po9AVaC%i@f`A?YZ#Q3X)i2P/31$c!1'*SBP=sD[4/^Ad44EcZs45]Sg#7B7'@c%LEV9O0C"l@B:Eu=-@Y6D`>WVWmkA5^&Y$@O7
%>Wq)lNM/&cEOJHLdH(>?I_jiA\u>VNVp+6QIt.KWN$1!!e5a^e)>5kS_,N@s2V!7d#>O4d48F$7(>_'j,,8NpaRMLmR"S,VW9Jc4
%O),#rai^Y2+]cqmMF\W6Ups#nRXaiaUSj->(lH_DKb$VdH923e/E_p,-fLh5ZEidAn8_lkRFfp34DqLr4d0l]cmt`n]MC3&h.=3:
%EUVk;HT:+)bPS`oo2E8`n_CHfTAJ;2BC%C-2bp)oSpa[8&^bM*cIU<0TcuVQ.;@g[9Xma_p>`SNCWu3B2bOkJ!/tO%d6o-W'A8S%
%]&O$YU04fT1]qdQISX7s(qaZX>!X/GWX=I4E6Tg!VBKP'HsM]QVQ6DUFsaH)5LmYlmRmpj13"4EQR,p8a^p<gb>r]<G>uNg9MVs*
%qSQ5'[><=KnVd%^AVY^Tg'f;4S$D<h@AV-])sJnui9j@WitM8:W1,h#"d<'P^@LU!L;kQC[[;`$3P>_)Du]6bCCP.6FQ;dB[r]bf
%If"C[cj()USREB(EbkGog\J8)Zh6$^KeZi-VH"u1=5*rn7A0dYdD/IP\gS7_8WG74V'O),RjoHkS)_<f2GeWtPt*;9I`!BrBFXE]
%>rNk\1E2DTpPtMb6gC(/BP%?>6\N+[0'>JU%EjcRG4+KGqoHo,g,L$k%,,m3l,Rr"SF'i?bi@'?3GE'pd;3)iaqTOHd"$dqcon2C
%iK$'6R0onn8m0VqoqeQR!iX*6L%/Zb6US3G;(/9r*m5#UBdG$6b"TgsW6Ji8geDq*'#?k*]Pj?W=5!;NQ[][GD4M?Hg'8'hW`>H^
%S'Wu]7N)g*RE.nm.Q"UE*S]_R;K[s\gH)kn[I_:<=)Tpj"Li&WpF93ED(jT2B'7fI)G;%'/iVI_*E8AK$/@j@"rLRP;p*+`&%!FH
%=%>V3M9ce=QPkBpH"B1WWH^h/mC\-ClQK-<:>Fm$:Us07dp.)=5igBuB=6(hCRTeTcu9m2XVq%2oX7%;bB/3_PLUK4n_GuAj'A.2
%$/HXEA=G5WO_d&lRe_MSp@S/89#d32PdHTk,`q$`C$aE6he7pW*;mTI&`^*gQq#i(<1g.mhqT^b'FlIEfK"XgLJ>u#8i;"tb*8V)
%jiDS#"A=@1=0_HbY[nU3]J'FlHDLF3?^jgO6t0E#j?o':j73e8mGaI2;21\I$;uq'/eV<7&)6AT9gkF%/i0A-4KQ$1G!N\e;_S.4
%T.Os_`'R:hK=:SG,0A%k+I"j6U@!&:_[g1GZ#)MKN4-i>WTd7hr)`%A2Wj.K9OQ#CiS_O(Jq;%@Cp:WNZElR-nR\109%&jUFCpD%
%NEE5nLWaL7N6o0`_?`.\4__'(K!J9<pE:%E@E#rs&WU/G.0C]N;7^j7.!Tsr^=Ec'I^.5(M9eqrdtFSq#c<Gd)F9:<R8O(YFBa6,
%FHeQ]!/q%sVp?(V!KSt?4DQl')LlMp7mDZEUO$!Cfr<e[BMX>D>f[@::Dk7K&PWou\)K'oBZMo0`df(]C!8<&IJYt@1o$VbLjuXU
%j;uq5`QZ8rbOonX(jqm\SAha]%]/9s0pra_V-MRP7ont;!VRY).GD.1jGq\7pEE5#g-'VFDj+M=d<IGDn54dA'=7A3k9F9!fP!0m
%3(JRDcQ\mKFC.B%Bb08pdTO9j`Yi,$?P6Kuata"1?!fA?<-=I_>YlIL>t0FZ'#W%iR*+0SP&XNBT2"b%nsCo5Ll3f"5b"4``#eK)
%/65lb8K*WrW<H(5doCj$JnLIfBBr`la=G+%<8H+g/:k[+nodXkeb>S*b17(X8U8&`-s@<hTe)(Q>#<B8AH`C5<NV/B@:mCm4[t,X
%a/54:(OR>uid3$TXO<)+"IS;6o[OBbY>8O>5?.PZHcHL#ME).>[!>HDa&NcV$&XeVU;EF#Xjn5_H;k40Yl/Y$%rL1+#abm6?K\&I
%Hjn8tHY;_q^P_&K_Jf(VKJV-HgV-k<RX!>23tL<NHIo@kj$I6hP,)#9<fIdF^u'6:RlQ;*pglHYrb38^_03I@-k3#TZ9skZ/M3]k
%Yr,3[irWjZN8C;^Z?=a6m(>PA'%1PjlT>s6<HoI?h):r@=3Lq3`i=UuWAA4)BWIpMs+[T,3B\u3S=P,\@_+p02VA8c<ZR9h#$;8Q
%Ht/,.R#G$U(Ts#8%']da^tos_9Mi07j+X>(I9@-5QT^+f;`$:,1ZOq<]7acM[ZJ;^n\R"d/[P7(MBlqAJG>3KF2Xj9WY3,f$tI:g
%*PL*s2L?!omrbiQ/QYZ>_PS"$$o$.R9'0MH3:*>Y9h^Hbo2UZKeVFCi+hQSYLFq!Je\.3?%)<gra_b5cYns%q/.>a*n>gG#9gY\0
%`QX;N4XZ&r<(VkurNj>11f8)G[Stb!TTBb,d5agLK6]`\kf!kM/4WF$*<]Y<%r*l?SnYrOO\M`IQLQ=>?EOPUiclSrU(5,2Pe=2<
%lu'pcfsu+>Q,Er/BYoW4j(*&l4=WhX;,0U-g0S#qqSB_"@i6Eulounn`WC;7ndAPU>;]N1eJQoX4+qI("r+M^m'5rd+!LjP6+eC:
%G7I70Yf&S++fGW%'FnWaC/>Tj=V>XuY+Q?Q$-#(<ZP-hAd5fBY=!,0Cqq>f$!sG^-cg/\])pbj"-LPqkWZpmk[_u]p1X1C2"2#bl
%?qZW;%ThXpG-'msc<`Xb!KAc[1o$`-.RIYGI&;=alS,h:ZFcW_7*)o=Za@dHJG]r:\tD_n:.FKE3haIhO*.(S4,=W"h^EYGa*kq6
%;^f(Kj4QFt,'1&Y\e,LoH=2EjRPo=);TU>a*c7fKQM$C.lV%*[@PP$=;Ins&DC?'b&7,qEn?=%Qne3'P+W*"SEIs>:H^NiM-8!'X
%bZ(:H<q6@Bk>1@nVVI\*a(>TlM_-joCaDc%3ZBA'!F[14;PJ//HOEGqlEO^*I/[A/kLQr-ijN>'X+PEFY?g=1+\'W>1C>h'=tlH-
%`EAALr8kV$o[V!N9m/BGrm1\<"^'>7B3\.A_.sK6XhLgi[=9E5Al.8*Tq5igB_o:ZKLY2G7"1p/0-Z]rMZABO*Pr[684;e\Sr:*;
%D%j'.Z59$/KGG.IBrcc(irk%!Adum*4D\fH[9(2fiST-\4g6O\BiZYmA^A$;A?F:XCl'5)\S!u"QQ6hrK4T%#(LV/C7US<@kupNM
%-J9rRlpiq;0HQP4@Td?"WUZG,N2&g3i.sOH4EeINZ.H'k"pMJP'rE*g&/#>`m2_.P,WL+$X7_#WbsdY"g!PE\%5Yes'./MjE],bH
%\:fgMr'!gF)>BP^hmgleg?KC$jM1fMdCZHoYQHuY9p[.d(!V?t)#BOhA>FYNTs_97P4Ypi9@;O1%4[]#NMWhqD7d&/n4HE!nh-!2
%q$T^IiT0:VH4qTu:*5h%aUO!^6QT5(`3J=ANLMKWq`5&Hn3dhuck`d9M(!OH53h0sn\udK:o)I&,&,t4+c6&;l]&nnaYa@niYa%J
%j3NlY#N<u`"pU9!ol<!7l@-ms`@L[5hhk[0ltjTU0#7u`G*5sb3XIq("I'GH(fh.L;2[Q!=-!Zq5Pd-Q`O!1noA(#?^@ZTi<.DDp
%]h,$PNmYY;G7<e/GeJ3C8T1+_O7bP4DZXS/#[NB0aDoXAUfn8R"+O:e/`nJ6J<MI0!$3)V?-<>1.1#p>D2N%^F4lKVXWLEkefm/A
%H!Mfo^QjP(\RO<iUC"p:.tK,:X/+dqfOZGbrMu7*U0Y`u)LHI0RSM:237.'i3aU7)@m2pI)d9<%#tC?DGr.jSh>QohAHb8`iJY[(
%:*^aOGWKsH$B'r&O#&[m?6.:(`2[;J@K@*4hNejo-l&YN;</<)V1EdNKdQ!t2ZmrTT$]MDCN55P>8g(C-.Z1eoOH]Y]6qL%M*a[f
%rL^T,W@jd:LNc9MDGcWm:Z(`I6V,\T=k8GP8Sh([[)dJFmcp?>V#*3lKg<8S#D1.cGg2M\##Xli1S<oZh]2'3CGHL]ZI+%G`f@Up
%\2iU[MauCcF,]!mS2$Dr^YslEGH@Hb2/l(/Z$qjLO8OE+Oc?n6:^6@*5DQ!6"2F7+@)>KD)S^/@?l?8*TJiMGG=pDgPdP'2`f)NG
%)QIUU^Cf(`_B`5$`[h25<_j7CoILM&S9Eu:cL/s\:/o1"7(C?QY`Z*I@ZJRt>%gjA,<1pO3tgZ1P&T'q*@]dBa"+D<CC!qs@-$T*
%6[E'3i)<&1.$gED/Y-RF$(LN.5cJQ%YT5Va#BLPrf=$3cMFk*e&b689Gn0Q;*+Rnd0-2s$-)D_2gtoKHQ/bMl;R3!^!I>_a:^8Bc
%jXt]ihUG>$<fbUbgl0^#1_Vu-e37CWV#kFWTKibd"Vco&]'1/-L!i"A^(P<bS#oRN$H.7nZPmnnGa_l`p8Bh0G"PGp9jGZaS=q40
%j@E]3l[F^d1_nbhn>5POTNpg:X.2#b\2d;*Bf0Yhb4l2-]E;rF/--HucH\<5GRJ;J$'D8Yi4o`FUM^E'Nb^/Q@guBHh$!$N/Z<sk
%L0^)"M-Gk=QC<ZJL,!O,AN^#??/1E;h!+Wj!#Fl<cB$(WX4V;N7G.jS9'UD4Qs$SO@78S2RM.&.!CE`#Koa/''N/DrHP(^kLp^gY
%\[lMfHRCd%3$8pa.7EE<W<(]Wj6g0YOpiK/.'g?0Q$"&Ulj21H\Hft#3TG)780X!SPXlXue",[r'^h`M$-e6*GG>U+/q%V,F*AhU
%<[A4eg=)f"=I]B\Zq3\@/^"ar"I<WVL^<VpbL&\QU-PZ_Uh^g?gf@\lM)[PpoT"9!:Z!SVj=,T^b<]h`KX?^Uj2>SG)k9pQZ7<5J
%m4t2+9o:]8@B[iZjr0T29I9l08NDd@*_\`ROR*,!L9uO9J!mpO8SD48AMZ?X;]9to9sG#mE&KX^#T/$4#=NIr!1o5iYA%ZJq08G:
%_?^>+:cS[EQdo`s=C+X&a7hu3@ZBX51gPE7nRNesF`@f-dl&SDk@Z4,6ZRDV]mhp)LhKZ2Y/2n(bDF79GiW<$E7a,^lnDdb*^W-l
%ED@aq+c3-bS^#pFS`Z0ZBgG4Ylng-$S/Zf]&Xk#SK[\V&69<R];1R'aBFARu3qoI%>FQj"gDh*;DkV2?BhLd<];lglEYl5DPI>lQ
%gk![=AgRR]-4%#+Ru<#]/N+WXOkfi:R2Noo^-pb]+S=q$V%*q^/EYN/FH$R^Ab+nig6uO..q_*B5gjNbaWkNiYu\_b6JQ5uS-0g]
%M^Yl5fG!dA!]JL@2>Zht(f>("f;D3UG@Y]YP6a:U!rl8W1IZX5[s`,s$h-(aUJ8us`'H!dVTKAMMlp@5j-%hQ?OX/R5=:Wg7Wqat
%P_>3:X&,<2SJS.9H[=_^hu8n!Ue6;AP#1M&EFg_)8o[R"Sr8@k4;J3OB)1a`&^ai/bemYk8)SGFpY&Tpebl;!XQR%#iqkJ`F'(ml
%+&E_D6"e!!YHM\3i9c,\-Xelpq6SE%\n<Hl,mp3Di1c*Of@lWU18lp<B?V_5fuJEpnjjo^$iUp:AG=$2n^2Ha2j2bb,`5-_8X[hk
%HNJf?I#[UENf(`o+d(5TfN+qq'YG4%?9to!lDg"0HB'4]Misr5_;]G+qsa@%lN,C.?(I[!S]eH37(=d-;MU$N@G:8HNb&'W##Uie
%U`st6I.OkD-qu(dBccI-5bItTo:"j^U8/lpdrA_n-;RQ#T_Rg6V@tKI?FC?f9loER!t\<>F9YR3?Z9(X%p!*R3F;s[%4D!LCW&tY
%%(EE1>!Z?F,XHBFI@$co/e;ap>a6&J0cTTPUoHCASKm#5Kq_8d,1iS4C3=ej`Gt:jLU\n/*%P>;CGG/:@6LN.Y0q1'PM=D^S3F>E
%2%uGnMttj6$:3tmMZFlQkZ@:M"=I=Do[L(4H(4k\DY"FEfVj/DUiQOP,2nQcBl_f3PiXYAps%H2RH]qC3@>?fFFd-*"%B`k_;dL-
%#p;f`H%b4DE17/9eM)P0^^tA!qr>C.BRNghh8oh?Tb<O7]cDR=NZY">bJmJlL>TL65;s59QSuV<NJhJu]7*me0sH?db0ss^ViBe8
%@;tQ#T4Rr<?WpYrb\Vt2i"!chnI;->g6<GJ($104EE]"B0I3->!k!:f*i'Dl<q'IFYSW's4OT4$bf+.aYSGrb/oc0U,aY.4;N"Fq
%Y5j-7g-Sl(2eI&+f:X[jmKUVd6[L:1p:J_AQ<uOhF7B*-iq]"(gRV,fUsI)/ojBdm],*eB*$,>D>2RSWHZB&Zm.$7tU&]R7D\;J6
%Y"/%.JV].G3`?%b0o62,`Voa#\E>u:o"Ae.<XB^sO&XD_.)TI@DN001]ms$n4o3l%"2H/F=q;MknWc1CpZM[u"W*bL\Ks/[]$r>e
%#t,7]RURN3lB6&dC5]`Iq/:7#ec<OK6SI=!Qr\<0-oD7`F.o;a\aRp/cao@*'%.<P7cQ5c<=T;e[!a'\>:!<,-;NNr%8I=CHYF4+
%2=*">Q1'<:i;4DT3m5r[@ZMGe>]>K2`$(73KZ"9M>rG<n9NhPZVkYZ31nEl6Qg>;s8eour@ElgulVob]b`\;+H?U</C&&gKA6?9[
%d3sc3jgRuoFGMt%-oD<<q"opN><JBjb'E'H#eR8P2XF%>MO74ST)ZeQgmfVSJ9+=hVt9i+Tr3t)U4gAO2tlAg-PIVm730dh,Ksc"
%9u6@rR'593(a"h"q-)Ks,fnpYjuu;c!Op*$^dpWD82C2;I9Y5JLf[,O`-u]S72;]do1>Sl-f-Y9R>6Pm\:6gs#nsAEUMG7=&N5*:
%iB^M0o^H>q]-I4EajmE&YuZ>gE#BdpR&MrP:9?N-6I&F=dXW3<4MJ:Ghm?\Z!,Kf\!FVhI"d]g65/`j`DZP\p4Z:kSB,o:Kq3]sm
%@ffQ.`^PeN&`Bu>!Ki'o_F$,&^4_K9Bdic7?@b5o0rYDs_^d4-+C6Gdf!=%TEX95u#?.\ena]jOaDNGtDrc%c-F1AupC9Z$=ST%<
%KVUm,.`S>`M>f)G\*L\$$QXT*Oh-N2c='Jf=i5g9eGgE3h2S@WGg"g$n8lQ;9LeePYmiL><0[">q[hR+oY6Bo(rAP7*&.B`g!E-U
%nUe<&9W8nm52>B[V?]S1kmY,&RKr2:I$_K!pB+l,`H+<2Wo8C-Y0)':h@?_36.CiKcDe6>cL`)-C(j^pk7kimj"*3bq*+4-/m+/%
%#JHXqH5)0HFp)e*?,T<nh[4;C%U`#&DSb=(fcqJCNPZETBr2kips'-Xo6F&.!!j5*)?7?0<d;HFg4J')4rD<H0&7GbOp$MBIYq#*
%`1`CcdS7864n"s](IB-J_a1,,N(Rmm'SP`FF_iuZRmVc;%i,=oRUTs8&B<'SI*X^EJWT(8T6R-_N#N#q%VWg4X]:4FA]9X3[:=mF
%M(N%<&(jV\%aJs017dq2Ph8\QEL_$J$Xu5u7ns$#Xq1dI'*0WfZYH`Ojh;M4+@!Cg*QZ`.>rhDH.4CJ7o,F%N-s0/N`Gm?'*)K#u
%#ETAY36sXW8KVVi4&ZV/(%/q`$b)inZQjupDM7a=cNj[?F+hA&NAq"S8*;1Rd#!p<OlW,-)ok"";HsZ:0_2_,iG'WE<qZQ7,nG,0
%E*4XP.tM[%7MU^lk7X1_rQbR4gSp`"AuM/U`g+"TdVeG-Kj`u;EqNh^[QO24@pq>^#4&i4s,5WdHOB;FU]]Z!DJ&MVKb:^o.r%Y.
%6Xi7jS8;#J%h5=QO*1&uPlcH_i)f_b8fY5Bh<qEijOtXZX:fB,`?oC$'I71!!]e]V.S2[La;C((VXP3N%rho,-WB&1cb\B&5r(@;
%<%'SM=r:[!ik_#4JC;,M>,9gWZJX]Jh<j"a64q/G('TFPnZsutK^<YB+kf8(dbq2P"KU>&.0-"4(XnB(Y02q210c!s-/D("5o3*\
%c-U\MMpd$,`1sV?,BD<Z:7cE7iu78E6=^PG3@lB,R,W#bL?Gk,,.:O7ejL&3-2n*Inj:ZJ_FA;9N&9]2i^],#bLt$K<8:7FffIGN
%ps"4fQ4PSY'l8GarS[g*=)"=bp[GcDqE0Yq;J6rhRN3pJp[ge$6?h.%8i70]!Mo:*4Gbg2Aj@+MP-6B=@0al(Qkm;Cq381u?#Xr>
%ACGJPdP&uhB"ZNm%-iICF/[);#)nJ1NpY4]i_:aVaCAF3ej<M%YZ:A\,Q*i<PLf.(/+/>6NM*jK:_M%]UF\_%_*9b5(Vat5C_.2Z
%LHrUr<L$]2P6QBf)2j=!oT9c0F1=aU<X+&/6WfYKbBDXS;Auu1YCW/+@7D";0Qq?WX$gKBJY&'HTZ2f=FsK,'^K`i3$ahVVA2Kog
%j^2`[D$nuN'qTUE,Fi-7XcfNcF.R`O+4N<&jc6ii1"*!k'U`Qi&t-o81Cio]08ctd%n0*o(.G.oe+Z#:k?2`Yc2hNsl3a2G?j'7n
%*)"]Lh3EmF:QT,7`hU5TbZ0?P[`Zj$"OF"I6gAVE19@9:b[_]DP%l6"4tAWSV.9B*/#-WsiRjVu(B+LT1u=#9jcNl*c61!C-blb7
%Ll3K;PcU*ZS'9trk:X5a4FXX!*N+$B4bGRI6<<6(hH0E]:Z=k<.Dr9_S%&/0&t5bf[8N!WHhTm25('Ojb2]N*_$WFB7p_I^*Ru<<
%N?K9/E3G)BB22LH5iOD$"rDnleOl$<Xs8nr%cZQFkmD*H^JT8&3hf9_WJjXM3MLYZCUM5U-J;5JAA1%HdM;PiL29I'l"g/7_USoL
%[poba?_]_*E#$D*!Bc2!eqR`kK09R'Ci$S&`g$Zs(m4XtAM4RAOR+3i'=3B@C<CTGcAr]SdtA:ScM;a=\jR=ONa7m+\Pd[j!Cpr;
%G5[sPj6s&'TadB/8]0hAa,WuN*-Q4#I_)g=4i.`6VE#-Ini8,OKHaGZMDP;s\bQ`J0i6kT26L,mTm?QBnK]S%@L4u[#ahD/ZK'_]
%]Ub/EH<p-:3C*>+=pG$2rZW/&WlY&)+\W*>:)rSF`Jp:!*pg/s3's:.V&p2Lg$%6D4"*Y?hHg[Qj't37ShR?k%tf6W\KDR2nh"XM
%]BotSK7).F'"!6X#dq,$'>8E1QY"G"66V.T'b!iZ$WWbZN@!roU$<\;!MLotQB:sS&_!c$PY#?hi\TtA(9sf_0UHosc1'9O/#N7*
%EhAG1[7Kt,l`u#P8es,[KM$n%jo3`IiT*%bB/WVpZ9!4?\!MmK.;=^lP@3H$nVKh4Y8.F@.YLnW&h94dh`Z#D`h"'1jSkG@*/d+V
%,_p&QPrnRNGnWUrDKRm.U1AhW.nXPT]I-A'e5.,/PmZ;!DW=Lk`::l!XBU^BRDRQ3nbTc:n&*Q6bTI]j`i5Ik`oq(A3[s-S3nQ(7
%/"%.jf;*7O,mK]TBI2G@SBq=-1%^VLr?1K:#&lNojSHl\@@hEt<S]SEA$)uZE:RA%U7#oEAQ)1jgm<lg.**3XQ,BFfr5&2[R@Li\
%0R>lRR1(J[l*,C!q.M8&rG5&+ZIFQmiC1&48[KJQ\fKcuc:fm2j)UWV@Goh%Y2m)B>Rl/@S^[ScF_F+D)0G.]#+nmI7n;>o>UJiX
%pjkfOU*`KH/dMK?jE!(hAPB$F-^pm+]'Z0)(mX*`CH=o;fZm8Q*MmA.m74MK>>fj=;I)@\!kuQk])Z5/Nal`qWRrA]m..c\GO;-.
%KM=S(;G?Bk9\!r*BUjeggj9#)=.CZ[l6%+eMr[2U.>XPiO"RKr1(NZ_0D$)Y97^%F'N@B,4E205TRm;e'gsPUAU4o83e!_O`n=f<
%1RA*nk[e9s\t9stQRXpjkG6*6jlMp!U_]tH)\JX_O]\HKQNmPn.13"(UWrlp-!X<#>30@2Jllj(9[_0]ec!]0>@&]Xmjau&;0M"&
%-TLVP)<8#OYWH(1K'DC)*0fJV1u(=>JQZ7\`%`.FRGiB3r,8R*gfRflEi^]*Knm.EK7d.f)grn*QVAm:Ls%Y0'blP[rlp>&p4K!-
%E^*V^04![d)E/aXVRnAIlo?aO:T17\jA@0n*mfN^6MM5Sn\bQjBj;9pDgZZae(bu]+:id+Mc:2:j%YXmlJAqf1L&]j]88=opSJoJ
%`3K^l;i)M3`:0aA.\fKQJf/RG7Y$NW[3kr3V/H)%-T=U\:N0V7Vn*FOc+1?7_Ge#-mP@ui%REqI4bR"l/8NF[4]PAA%AAfG#`SEk
%6J<$J>Qra`>L$0VX,o0D?KYYb^6IFufnC@Pls9c.c$@l0Gjku2GLb]6,h5r4@_l=Cr7:9W9^Ep`C25L!NQ"70m+:?U24.En=S]Dn
%DN<<[!]p@n'\F:4JbZt:R+BBh:>Luk4Edsg>]+Fr:Re5]54N\1W&*&8bd:LhTO.#Z.]'G_FZ!W-3?g<.5od5P?Jfciba<`Bnm)a/
%jrt!WBQI0OW_,LId/a#)ma$Y2Xe_b7"uRC/NB_ABp^m/8PZIoT>ZQ-_?qr^1D8dBpWn)`;bi6'W!.<]AnZUk3o6:pFas_nt<OY2a
%VT8dmR+r<@1'79g<-,8QnDI;Ab]>`VY:>r8cd22nI2@Fa)M>ee@dEp@Aup8JWcZ62gB6?uN!$;6"#c-%d&-"!&[e+oUq.@fOgc^N
%<q<r4FP5p"=$TCQo>?T-HnYC%=0[rjNMuj5*Y'X\#gq<gkQs$#pAsi83XT]u-ifqj?/6[e/^T`Ie-^D!P`atpW7,Z)lVnm<!)?a#
%!WI&r&<CDOg$h@LGDa6F757,$2%3gm&R&.-B]O+pp5iFI0uFY)H+oWui/<-)0_fpRM*0dGgQC9I9$S=iY:LhZ[@?uZ53'X?_TC]0
%;SJfeaU</b&(olBYPu9(a-U%grV1?#UUIe__PSM0%Zp5!#rcE8#hP;;H3p)M?QfH-L>j_q#N2<Vkp0k<!q2LcA*=LfC60j4J2LF=
%dWA<]9s0%,fi>i@*=/^;;B)JGH`4TLdoU4i:3MTU!-1$-'@Yk0r9?$dH/NM62T>s7UeBuA*EsoYa3-8r+kV>3T&(!r=$G\7l-asK
%9dNuk;&hQ`0R2Sja.V<FGl$3Ns(_="5_\YTB;0JKKV1iJ3>95%+`lru/tur./r9BuJ^!LpmngZ7"6M)4]UUj!fPU0tF548ga[&2F
%,!0ACQpJ\_"ZqqeLL[=5F!g%V!t)'t3?H7?e0f5=oR-g>20Rn'p6>lS:tZFOWb+9OI58pcddfF(\C;`qB:$#gK%W&75W?dEPd1>V
%HWU/jm-p7;<1!L3RsT#u6bN^_\A:euR&tb9#[on*H;LE)KeaZM3j`;t6OZ/#:]e]mFkQ@07_$DW_@3ls?eF]'jtkGAcK!jJZjXI?
%8\&G?Pp[17\e1rACEIYPEl9b)<GF85W:6J^MGX#?/@=Z^]!:EsrhR@)<<mqc4@L/EKoJ7D.-&q>bd:u^5m5>YRt+2o?mm=]lde2'
%*5l_C(IY8N=(MUH<$dh<_:qn%&L11RX..\#pa<bC@<re#FH,G&KpR>M/<'odT<Jj2P'@CHG_qC+e/<.pOn>k^bR7b/3!1PMoVgAO
%S5XDtrm=?9ilhg%m<5C[lSamhV$^G0d*Xd=8J4%DlL'ZGLEB$#Qc2jC?A><].):h8VcMY7JqQ8\GEqZ";"P=m/lBg-QENDIS!4M(
%Kh<_uYte_k4>1/QOCd;O!!4id0S_e20nl,:as+#1g!VaX4qFX1OmB.3,6KY\_I'Y>b#3,f*O&D/I[kCf4)+YFq[Y[Z?qC_%e/2LK
%lP?.NIMQg'E>baUg_fkF<"*MfeA5]jBA=XaC;<_np:FAJ!U+:V`$bVV]]MS%nAQWu7.je9%:6/ANYOq/!j[uDCA.EV>Bcu'P%1'2
%#)/3EAAC6-k3WmnLLMr4==q,Ti2V^e-#s$Aas>!m'\K1Sf</!(TL?B8T[?Z1F,9<_H$mV;"%P$C6i3::ingCq6J#ekd1E"1pls!<
%Fc"^s\;$@[!XCMr,]GdSBk$t@?.";Q3ZltR-S8a>Y'NQk.SC]KlB*_XEO!'U%SkfA91!\4hrZI!:`se4^&ADYX+m:*.a6g)&s<IZ
%E7g:c2K3;:JpN!JE]o"WbJ>X;+).\7U%W&;[9Bn<_]E$Li2fRh+[^T%p!?g^rO<K4>rQXsWDQhlVYM&2NA<^rC*&:=ni1?"[A_Un
%AR#;]:]^4)0!;4;!`V=Q4`G&(0;MbP<QP?lJc*d,5KYG#PAt%l?Ur4u!gnuW6#=F(TWhj_lF[YbC21(0qUlEdTSfm.BHdO!E(%e]
%WUDr3NE?R"eAN<>9Ta4gR1c[2G`oXETl[>\:nA^Q7\8+.@qT6N:sn*C/cZir'Zna/-[TeI:NIN!;l"h68Z*KF:fG/^<4ZYFandHE
%'9Im8c<;n6oJXmj?mn^$,-SFT/T<7$<$q)IaYWYk*`,@X9PX=N#_l7!jr^b+P)if4WQ6c?$FERiCetahMu#e8V:iuE-o'/a:O=sb
%-)q/\!X[!NpCA21/%g4(\7b$n".sh?GINZ^NKiWk!Xq^l+WKqL,Ip/McOd[Ni",01Ef6MK0tQgbcK2-5U9ZH%!1;8qOP$&W.2=ai
%X;d?qCXJSaiQ`=[qfb3!/Q#YW(gnjXV%uHBrH"b7(?t)3,Y(_=%D,&O$%sN7,s.I';S#"^Y$PDBn?/WX@=m?@$XQgM$+rKF*\B>Q
%U]_Mo,E/pl^'?;P!X+D4nAQI`"_2L?.6jIR$`:J(?TD7_6m7kOk+>kB0Z^%:]:NAm2Zk>sC+HqZ[%E80\l5&N=J=Df#o=,,8;\#h
%H$a@@$2ap;L>uemK89:/Xa(4*)+!+4Oe^DH-XFeFRp+-U=7o12kso-Ph<`;@)NqggA=4jNWrtj1;U-"/,O3GBl;tW\)DEB/<+VVC
%Q,8;#h[Y;5#*fIJIIRb@JhK;A7;LP2MYO3%ps`C>W;+.HX>&7lLXipGAl;`FqU5KE!RrMP#<e\*9Z&5WB"pSXaVRr\Q-^a=`u((n
%l*o4-+,=pEl`rO`k9Cg!*jdBKZ@#6oGg1Lcmi%OPm@;_&aRH,_gg)t)=1t9@rB/l+*O<Q?h,KkM(LT(<7*N3BK2C)ZZ3u_e'Tt7)
%Nbn:I'Gj8k'1!\rjk*e_mjN`>)^);P(p"]jdlFeI5785@%T>MMf8QIZGumm1HVKrfkGC>A]5I5)P]7`>/f/fUJY5mbDJTi"r)jP;
%2>?/pFlT7oSea(V7\\fJ'O8r?=BbrG!jpP#h/pfM%-9pBFfpQ<QA?dTBq:Ij;;-S&Ok+RINK:85;@[uDJP;,8M:cn)IA,/<s78YN
%$4tHFH_MK&SdDgpi6D]PJ*)^FpY*5HHg5mc*sSUq.J_3Kpl('B45Wi;ah8?Zq<aR=[_:#a"A>nAJnVImPqk&Z5hqINQs0A`J1370
%*I2Pfc`u=()RTckClm*tg#@VqB\\4_.+U1^@1?R.]>d4+Wm*^q8^e'2i'm7[(IRU8^M9^]:-ZVtR7ZHP8g"6c'&7]0B2.T6?FY!6
%d%/)_hC)?tH&kl5!2g&fAC[VpbYfpR[_@oWKtF+[`j8_/c5PQKbkEg/Fo[p+$>Pf@[_QIkUf`8`$<6P='_"*T^BL^USf<P4$?Na@
%K9V'%*Zp><>+o9_[U09H75I+UWi<$<W>3>XiiOM+4D"E&kc)`Y;hL-^OZ*f<N'n_e,7T-0\Wga,%_h&`SL_>jPu:Vo#g&Q::k#f6
%V?PQCNTJ,GBnB<!&5_;]SZREE,u7/i>)ub,0iV/ham8UQeQUPYDJb$Yh;';YNk<0aWY4W^e*KgDZ:N5W*#+XJ6"[rmCPE(A#+0pn
%Q"rDrYV:79n8P=IM;6CqbC8m;K]O&K[61H?qks^X[ZQo36dP9,9./N"dFt,,+K?`?s%[1*k)7!/.Z=ThY>fFdJ/[O'e!>$4Rf%AY
%ciR/KT`_-N=QH$d0;I<M3KSu\H7i=__Jnu1eR08ZJk8BWB%Ipb>`Q;7MFMYLG)*mKs+niaX0c3RTX3PP?K\>jR9A$#o`q2/dpTc3
%(dUrXWYKMYLddg(\n5(I#^ppe++4>l-l4BLgeBKfMB5<$_]/I=OmMl6?CZ4;F=C&FQ=k8;)X!*;M*S';TEN_mjqfl=`"0!aUE):_
%gI[%+Fj5LFH3JC)BBh7)mTZSGKQ<\/*p'!SF&d?npN_o<lg`W`NU6!nK=D':Qb+he$uT;_&8ka34?cpF/LMRmFdGWdc<>c;C#^J=
%KU3(]`J@d_X:E.$ReM)&(9]q[KLa&nR6:F-!V1%glq"Ht"?Pi95GFO2HVsmfAM5h6e;]OWHeKF2nWnS!0Mng,:Vk3C'7S[Y3I&s#
%a6@KH\jK173cphWCIACR;1)jsEn&P6b0s!tIut_o:T#SDjpC6*:UsN;a!ajV%'5B5;LkX#(SMVr'I]m4_aEGJ,_-f"g-N=UfH7ij
%3L#G3L+&97n.rUfq8/"c7jtGWTW6GhEBed.'4'1:k;A='WPR!S8#b"15_lsXA<+Qg^]<@`)liHMK3o<:^:<BEI3W^Rp`<g*MKYKo
%,&+Qo>[E;W6<^^fTZH!,)5ZVD[7FfJ)'oHe`Je-'QKI'A...H3_Ia?,oi#;ck2e6BA3r9,!5m@SAM_[U]HD:DN(^qBNdObmjhXh/
%:ZS?0;H_%m>[pl<k#6S1NP\uU$Y"'9Hh]9B0*:(#^^bQ?'rm^;+RVd$:#T<s?]]lQ=/5tY9>5[P1R>*dO3-uTM>2DMa-+af9D@5S
%W@[](:K)(^J[r6Q8WE8EJ/8D'C;(eW_o%pWHZKN.J5[m*;e2'?j)4!IMW>+=U3\m2g63b&EF68S]6O9>YHJ`VeY72q=0Ck^APnbX
%EHFI?%<i#10)%psT&[EYANrR47T+pn[2;r=]FAbZZ/\c+G9$;jL,D/U0Kp`NWjbY`26c.d)f_M8IJE]>[j=T[l"mM!7<]_.98^pH
%3>F3+.Tl,2X3M6k7e,;,%(:H"?lo&u5p,@?ddjP/^$irO<U.2CJuB<k497jh7oKO9<L.[*+E=%t]I**]J,i^!95/$M:>i>Bbg7<'
%V1!rLM.dLoR(]:8TeLX.a_@>3%&ROG2EemQ40Tm?T>t`blE]JnpS"C5j.m8uRg8Uqj'`>Rl'tUed4pbPPVks!aBLWQ\1pL`I05D%
%K3XfVPqTpdVb/<@(9nV#SsuBeG*Jg7/oUH^7&Y'RMF+Q-K`"j5l`na71K*K=qdmYQZn%D)X.np?/ggY9>t<B`*P7'>BB"qd^=@@e
%j?Q^nN>FKM\`Qft]8[]HNO;$oO@,XenZ'1]"kKHCLa@F[gR+mB(-r)b)YFB[0,./^\ss[F.8'*.C3T3K$E#7pjU?r2!Nq?s(fc.6
%q]#jU5jtmT7B(XqlfK)4\CF.?><93a;DQH7.I)5'X*0OZ2kkh]bY'_&4@*9'\EJrSY.OnN10E>V7[l5)%gd;qU6(nJ*&%@G#BFGZ
%4Z\"XlJLp>FJh.Ls%M=HQ'L"VK4bH%BN$jNeN851H7'!R(77bJ%Z<]pCMo:.6=#2`XG%:SK:Or[^!\@:Wi\"hbM3pb5ZQj/1J-nC
%&u2P.eklKVf7O-bFpV;8"7pm+)/]oF)&*o-\N"Y'^g/=b`_,XJ9EtlC.<^]=Gd%1JYI@Kl1*;=XRNWr<Q2:iSZK#Fdo(./bB`-A\
%aXS%gPg5E!Eq]>?,,l>([o.D)X#_pu@V8A\W\a'K`I%Q&@C]>T'Io*Ma<?[2[!ETphNPUg'Nj3XSa[mYCVY5G\q2)lLb5VI`Zspj
%jsmq,Ok$GWh:Vm#Js8=<;aNWYgrfdRH[F#QQR_h3C&$Aa:aN66dcp)a]k@1*pL\?]6Tm6SgU'@a+$?4sJWPV=`G0W(F`0GA[>99@
%d6Yo<"fW'$@f"HW]kBu;XTr0a!I'-.PFAS[Sq-*N-Dq?gd#[?oV!U<I7.R)KWOT^pWJj]uk%+t$.PWm,@)R38+hV'6(b;$^'aId<
%#GWZ(LfB^3hPegn*^jHhh.uK,8]lal&`stgVM#XWcs4_mr*+9,aQhb"72posJUrPC"D[UYZZ'+>n2j(gi[>H.7]_^n;lh[lp7k7l
%&\$I(mq0miic^d&nAOaO5IGgq-?sa:;9g#ZDkubPaF(S!^1=Vm+/__;O/(lDR8Gnc'E?J@GC;5h)YMsO6ZXgD+mDMWhH/RaOe<sJ
%\4N-W(V$7e4"XuG`u4.;/VRP*ea%!Mnr``2eWS2Ks-^peUu"`injfNnoq[Rj+*\S;$541oO30l-[mD!NrtY2XNI*h7&mEOpE*Egl
%=:H)o03)5NGZ[S0p]<<Fn/rZh!0W"<"%G#eAqMkOkESXd<HfE<\8+&3L%P0:S@uuHL,+/iPk(!4$;.@=Sl:lt:YgUQ]CQYUO\_3K
%]j$iIdLu$OeNo39*]<Rl0ib\\@T*eN6(-,(L*WUDh(+7Q?_424p]>#-rloY3Rbi(@ElmT,_J$SM8Faj=F/pQo+@8tjgOV"Wqqba8
%./SC4'Oo1Ajor)u;[#^_'-96A'X*I^$)4Jq#@Li@=p.s33bc)<cGf\"#Id)N?k2*HUuLSB\i>4pGW49tJS==3MG6V"]:-V#W@5_M
%M=lg&--6g%+h<t--k(N.EP#/F)O51s>7RsD?)"d5a<e#u=)^37hZ=Y9-dj(j)_RZ;pB^QAW%L]#U:$>X3Mpn2[mdSIDfr8;o#aSa
%BW3UV;tKWL<(,2_&0X--KY)N^Dn9,A#Vp!+;)RtriI@\-c_O`3p[[Tcq<G0dWXsDO#mHkV5=iZo1D<>tqDS:k[RW+&-+TRN<N/aF
%'`p*gSN#U[Ub.2f)Y@5)<Ytfco(>2kC:p;;"'AuZ`JQ,[SD?#adc'3MDCAXr:`8FKn$'Su.1[P-a^4#!0Ri18<cecp>$BD1kIl4e
%9m^FO3If?m0d-/B_+UP,lZ>'G-9;6"ME4IhI;2]S?)_WGTcZ3,VLr$)4rEnf><SWc]h&R7<:)[VM\D8en^?EfL3+dkSeGKYNL4q8
%I6&6!n)uJYUoG14lmDt[]Xn:5LM=[m;17!d.V'%IOdq;Al.`8]a$tt/]Msd9UR^PCRe"Vb31OQNi(Huo9m,pb5)O)GcRGl5]ik7_
%h:u@6W)PjX;W:Qm+pD_l%AlbZN.h1&i2.mPo"'^>!.Z<Mc^'E,!V8TmR<2UF!UJ+fThtfo+bV.O4l`,%-;C">lJG#`m69NWUY)N"
%CpK6;1pfWd:=Tu?^'`eF2C76n+,Sc<EjX-UZt/GRV0G64_51W"!a(_B25F?Q&i/:sBD7(kfqM9,As`qT'+NaGcqul]3D?9F$+L%e
%GWL.e.N>Vs<MBb^B?i:&29AJmOAfIbchVR`?sUD[$CG+QXH]rcr)&!TnnS6A*Q!IXIE*A`PAHs?NiFj_E;iQ"*%-n)M]qaWj5)X5
%RlAkL;(UF#"<Lt&#Zhn>7A0?[^Mm6t>FN$"eSA(i8gANZ2uf!+/le/l02&'XhN".P_[r:5F@GRF!]I`e):\'P4^.E/OpS5H9E?h)
%8;sOl,,&07OR?u8=H]+R:pk+]/W"sYS/G8Ee'8At)GU_K#"crE&C&-l`_5uO+Vj?iZ&a+$:mTen1Y=sE9LYpg.OpU,r<f6a2@dCZ
%mBIXbFSqLk'*F*06)+WO[+Q2oi!eNHdi<T#:lZK'`.HI;[g1!U!aV4-.-mO!&-.p::%D0gcVrk#Tm'iMOAA@SRV[I,,=)aRH,lD&
%WS:-cJ`GcIas!>[<RRF,6.Dl/2FYNN.Z7?_\J@@uU,hKFK8>ZX=)sPc<\YR(n;1<^/\MJDPR-@P0(T?qV+.S:g%+Pq95QSTA!Hjh
%Jk+cWh7F/sL#=G"N9O'D'Fdnsf*=+2hK8rpqV(JnFBZSW&POO9FF4lJkY<BE0XtfYNomoN?mS[k9>"<U9JeEo!)=0XLUY(%k:9`H
%XH,:j+f_JIDmV`eC)5_REQ>)r`cQ'np"2B3kIik^8cYoa.];ac>B#*DJ*U56`/Nu=Hh"S2j7@sVRAf8j0Bd!,[kk"U;KnUB7[]/`
%1[a0p2[i)_7ka:\-4\+])$t[R>MKmH\?=oAehX54?4r8S;ESqC)2T@#*Z8]K$CO[hmWGgp)@dC7[ng%F!S9?np?CQ$bU!s_,`(/G
%<CXLfg)1bH-t"`Q](Y<]HlVqJ3Z=cnr,NY6+?E)AlDH?OR>AfE?6(gVnX/s4^cR),Re:Xa<\+62:Yk9N!VWf'+4iL%PrB5PNd!$m
%<QYo0D#tpuc^Fp_3GQJqb,H=R*]Pin!aD6gX?+g\PpjIH:EWY3Mhqf.mWrnMLL2u9+m\72&(80]4s[<d2_[V9@0mpa4qP]^a=4iR
%IiHfcSp'4%TIb@,KK#E_]NAj6ZY7D]hk#TsY^)<!a2Q]SnB0;n<HH-[G8L))eCH;Tf)n^S]OrsDlJimlb.@/j>$!-Y^Ffu!X,MhH
%Kk#mQfK0__<;Y"T,V9B"X'ON<gr$G@$m0WJfmSM7\ig$B)G='^]_6M7\M(ulV'IRp_i0<pJ"[[.n[,VH;TU5j,?OLQO?:q?Q`71.
%k#cB1f-@>Y5USb1H"i3k8i1afX^=,m<U(T_YoGBuCrYW/U=KO?SJWXUTLQh-V)HJca+8Rm4GcTqaXNe!`Y%W4/B@,F9USImlc`VO
%ESm\J9_MD:f5'`+4-P'^)C^8j9TMVjf6!TBkXkltCU:%bUH;nMP(h3QaDG8+^Sr$th!Ri[SRBYtQ;R=fmU^AT0IXQJq#fI*d-d\2
%'Z2_j\Qu(I5Iec(m85L1joo"F4R"kgZ-/cm/<hVkH<!bu*8Yel2)kKueF7J)8b68f:RkO.M],8=G6]S.O(l)#q$a<!rm)S9NS46\
%<kOl!j/^uY/F@s"dcmNd^Vm5_(%5nr67G"QiL[@0_tAi(5JmR&$k)th/F^ui^d#^<rsT;51G&%AYe^91@0+JNeL:..FY,SJlg$!O
%VtSHhql9l];*E@g;alaL_9f5`pJ.Q5E'@Rc2?]PFmf$p)rR84OVepQm/'\b\IQQ&Ubu98b"aZW#;J[Ul8GoQO\(Tl$^-</sDQ]LX
%A:3D!T(8t.k%=?]TW)`2\Zrs`f?;RN,J14*A^m\AJJkGiX"*o<oRPa]R`_Ah*r=PDaqH-4O(br`R>aOe;O*lZ.=#Ae.nHHKbjs2^
%X:el,U.7<sJ^E!>4jhZh>koA@W&l0&o&^\KoWm!;W0p+sGJK96_PY$@LAa.:9AC+\:pm_Z*ZO>"NZ>26Cp^'Q.T+]8&D-m\+hi-V
%n'&:B4Wt^+'\mD^7tGK)i/+$SS>';%;fGm+ni(.pkpn4nW\l%GX21fDn;\&gnp\)<"^-[`FK3ZZa#l9Dfk3f$Vmd28C?aOgD4X`6
%@'W#eGMfn-cX;r`R-?f;,7:D`;2ngr,2,AUqERl)(-t,9.U>%YfjPBOM8rIJf,i.bafMPlqifpTL9^::"JMHt)OA(N1p-#!WjCm]
%F6(iJ*ICZ*8n=db&0W=P/['?D\-S;,iC+sG.jD&HXPLOr/V*/C\4[6k;!^Z7k<>"g*.#7aNW8Y+s3l&hs/G2\[^ld(rZ7?s*l[f$
%%2[bRO%='@9@*h,cpV@57T''_).j*M?Mf'-X@Z]b)/iePioO](hs9O>cQ.=ma7QNMQ+?3ekC\g:H7+`K&`_Ehpcj_Fq=)/PZgfs5
%H`DIr0F&S,>:K1UV[&TYMM9drL-h?P0C/]1n)!p)^?7poh6Yt5[N&%Ra,&f)LX_6""_F3.UWB"`RU\I#S_ee6]DoPSOs!nb(Mq*p
%dQGWndXAoJi^*tPr(PFekc`NNA6Sr=82D_[eK3WqQ$L%;.?Y*.82VA*AB6aLh)TjJUhZrBA<&E2;qFlME^VXZ.4C8J5YG'r)Ef3-
%e;.pRFIl,l52^Ells+tSbo:=.hEN3qaX%QXHR%QI\;TC[fgm=oQG0(%>W\@=GeJ8b8"Pccmi68Eb4!bKH2TITFHgjEG@[Pa)O5;&
%pNtfVi0r:Z!(Uiif/OP$G8-G3g9ErCj6apMiVh0n:ElBTJ`fOL!s)2+jMEYs'h_Q$Vi#$.1FQH=g^K5>^;:[RmBsucF7JfpC(C<O
%9ndr-&L),mmU.-+o&HQ>EKX0G4^V[p6K,kN77RD"SmDN'qE*5>,]:h9Kqh2h#'iRZ5;u:T]5TrS,Bk5ul.^bC_Un5T4NZ+sh6hRH
%;)O^T/tj;p3MbWAfVZ<k.@.'?d86OG-NL0Hg2K`<@TDj5R8L?u%CLP[*i/u2&g9g*,onEreUP:-LTS#-7H]`gUTcl]%WE)J/t!+C
%JbbH!q63k25.8I-%0__ek#RU=fmS8qNPeFD?Ie(Xg2Zb:_C2qt(M@HrV-^g:A1^l<'<UY%&+KXHWi>WtOeZ/^h+A[2='hu6!3D:i
%WFW(!55,ct)g-`qcH?W]Oj)hPk(]4Ti?MC9JBeqhIA@RPc`#!H$0ji%gC[c\MRC6HdlcT>)-q.Q+WfuH\`Bnr):>U)H5/W@ZZti4
%OBRs2@9'u_71gXpqhWuU:t>q$$.Rr`T2cpPa*S+A,_ZOf[8ii/GBn^'"6V.>43n2R9oAL*G(e-6o!3!I%I=[&H1pgA7-iJkI'!3m
%PS=qZl;CCi8s9&/9>5TD&s58Z;GlrZGl>9D;I;F8e\0m#RpX:II('KFV?Ze>+\!*W</D)F:>\?]ZiZ-&N<!nK))8A?q(,1e1!4=.
%W5f@t]9Nua;UHjX^q)k7W`=qkU8k@spAq0?dfQq\;ZqQ,CPAWj;,"B[^+Cd1='V"\Uf$]Gfh]1jl+T[b3r,),,+I<./"ML_=R3W/
%7.KI"A`n0=+$Sb#U6]T<].0lt"nVRsGC6I.[GK*%h&T+R//n]UUG>,*nRXbpq*HLDLca:i8j*kDR&O5NNEV(0Vps=d;/(/Ol/@b_
%p(gBGPK2*>np8bZSSoL.WbMtR]lQS4BS+!c%MK"iS<0i>1gm74+KqVf<G5CKW9<%)P*4]/U$H$'JdJJVHPTNN_ZNPIUc:S=PVC+4
%k=l3<V;V6j+/tHJ7/XN:07ANaTLt0g,[2\?Flf0-?p4VXnFcFP0\M2mD'q?=amUL>]p>hUY3I^5armS2EXNHpk9'N9b<omdWu"Mk
%)io^sVqsS*=;_$Z:<;iGajIs<9X:]'Ege`"WH-s<3Uhm81,S"TMBb=.aIoDL\+aj[dil`(R[ZZU3H>EOiL96[On`2X8=+[u:RY\.
%>$Nb[JlJJ!#jhmN.*PiX5!>Z%NXBb_-P!eP:o7;E;ZZS)0a1]:W1Z-jB`Ja&bUYDlF+eV"npuF-j`us-3IGUXk'GD%/"cB^UIhXe
%+k>uj4LN7l-7:qV-X>LEju,[IrkO2RCjL0[-l46C/=f<-*H&Dng1A>S.LP1&&UGDZR+E"94&?>(L(cueB=d<%ag&n9<'8mip0'BF
%cNZ4N3V7El'4JT<Z<k(.KmK&cg,#jMr`&\4<&/oU_f#5)%Xbt8;hT#i[h,:Ik2W+@mNGbO3`@*(L&K2(FWV#X_!)e(4ehT&,R5Y2
%mbRi<IS#ZtX^4oE-Wu-7@Bs33j@hCE`sR!GPIjm&'Jg@^Q@\=oBAWhuR'il-+TimL',_Y[;Y#(4EQ*qX$$Z,po=qGL8QCVH&<^)!
%X"CTKj_EF&UD,",MQ&Wj-d+m);KcoWIZ[O0j0eYr<?r0S"so\7=uhUnDHD^eo@iS+l;U`f`G6ni.gqN?OFkJqRB4@d`[",aW]a;/
%Uu5mTQQ]E`8I9j&qWf&W:*)gEm[.$N9:?DW^^,<L;iiPal]Lnbh2@,d=J\X#WtD/]OupjZ](aUc:OK/Mk3V('G<^Tu,;/\i(X_`h
%CFYmt>bp\cDH_$841rli`B_:GN9KQI8V(&)]n6?\T[X*!,RMj(HN=!^QWs?/p0M&o@Odu4,q3P;42friA1Hc^Bn[aGOjdrr]3;"l
%"8aW/2&<mZiq<Dk]k3:r$W4(6KtK+nfNq2T+huieU9Z0j]@7_NV%T>"8Uccfg^s^gjE&C`mtDm@+,>W,C'ibI=RX&KaKFDX]O%E_
%X$Jr<l@,d^%,u`27<2E[LNXH@a/s*/IVjgThY4UK`7+%f;L:f0O-CsPFNj%+J.TiMpMghRNRAH<?#":W<38<:D)<%RFA]s*oa]iY
%lFG&+aCd^GL,oP7g!YbE@APC0p418@L<\cp71ojq&QO5@]jS-B_h,.m2^/X,WaF?J+e)IJF]3&5P2PdSB-S678]Q[?<eZ.7f5^Pb
%Ji016PP<16:k9<O,Fj33>V:5E=M2$I#K/]iWnj<XO4.'S[7Ju-j*O\0.Ftr-I92KCfCT\J^kj"E[+f^U;aBj]jYGo5qS\+^>ICNq
%_cco_?Fo=^,_+D9Xu*_R&Cu+H-$V;+8EsS9b],Cn6n4Pcp7C"!\J_DDhPJ+bYL]b">0\KgR]aS!FTA(TYG-GenU*%:-;*7k/FF1e
%T/35H?uPr%GR1F&YRA-nACRDRMGA/-3?F\.JZm9o`RT(i<3b`r8YB_,_c`i5L*nA9aQcUnj`[LNG=@2TYkM8SW3DG@WsfLB%_)GQ
%6C-p@)V]U8&pGTJ,;%W]P%'#9.n4mYG-p20;SBTGMDDQI=?`6dhYs#$Iq-$I8mN-%$/$n>1?r"CNbc4>P>[,2oH%lWEDQ^JSmnfZ
%.QL)eGqpKg,#td8NK[Bgfjp``P%DU*ePVtj%Y$*i_G`;[%#)@]e#ZD4<Sl)%_$j"s3hqJE;SDf8+<kB3Wj@re?4\Z("!'ZPHt0-D
%=@Ui2O#JHZjp03*13%>^@CE*fb(s5"3I>8LWK*W,GsJ:M$R"OR7GTOFUe-W>EWRM?MXjUa]W87$PUU%@9.9T;NS463.lu3YS]mcs
%dqe>^T@,<jN$dTj0$1%Z?V=mg*kYB@^YHG,oA9'(B&,P]XZ7tYGOps(Q%OLLQPb$HWi%64TRPd_qX1bgE4)nNBkun.q,E>)%MJF:
%XhfFk*F3/:FY#8tn'Nd0>rUWi\`auu]!KjOi-p3&j*BSGI[#2g&arN1rCG1+B*+3dEmdQYFQ)61KlS=0asZXofBPm%W&q<6<7EYh
%:@DeK+Ihk`?8=1^*Ohl0"Y\q3WLt4c/V`W:PB@9VnPEg[*>-tZ0lt\(5.YjqPa:A1G*i;;fTX[Z*/9-[,[CIr;3-fH;Q1nJp*cE;
%c3DqD3'M5<Y1e-jE-7`'-LjuOJl,5ieTtUqjk,d`YnUc)*(u.^(7;8ih0/6)rSt,^BqON^Rp;S^._N5A4Cc8M3pi=^4U%\F4!"oD
%SB)qV[Cf'8L%'H-a-dZF56@^im'ak*j4"1iedt1"`hDDZ6CR2/"U\fc4elt][-iI(A:LddjWNuXUYB:igB_?>M2l=P"__a'0b72:
%b&ZIOO8pn9_?.u!Vb:R_o_%!1gEMKG4`\>qiTu_NVWuWF?e*G1MNV$BI$]!_ViEi6@/8;7lL<;Ya,GQ'o#A]Yg.Z4a;^juS4:g8j
%j%N=4X*GX-OZZ5h;&S=LW/ftmk6/'4_iJmeA_l+Y#^'fhl@,otN?#AsUcB_tM-9"P`j<8Yin0TA'7eg2!B!Uj,D['2@q*[n-`).,
%doT(G*S5(/P.*afr$6HEK;g(nhA&AsBC)T<C81&p\>R[g5tl^<,C/G#W6FkY6#1g,76M-u.=k:;S\a[8W>6QI!qKo"Mp?ZM.e]<?
%iB=3qA[FCI`ffA`jdqeHKae"KD.&8_1O4_if,PUJ]*F!kg:rt3*8YUPU2]92_4i:S$&'6h#t4.aKgV\&GN4n;,L^%PNq7RT,eIqk
%b#/cZ#Mg<M\(63"-$9O::sM;C>H6f#>?d,tcm?hjA`?F>\<,Ko83QWrNOr,Za*C@80EmjqO8[oQ&H")kT@%ol]g<j@qOKWM`g@`,
%^0U#"2M!IT%/)VlW:sXDLf!X4W'c65[(#)#(#;?WomT01*/<3ECPI(;_'0*IFde^pb<H\&?tS8gSI::V:k<&"pUcSNC^V])p]Sr1
%D'+p%0i'YW.c(d"&YSEhX5NZOA"Mf`bu&'E11UqK.Q_r;4iu5&;Kkt;FZ:.hd*)%nO!Or2;Y%,V>$/F'\C>8(54%L`4k2m87j<#&
%H"@;c+6XRI:.j>p[eNrkFf%$e=%1Z.&Ns$A'^m8:A^\@86nT:Q"cenhIW'=*V!<Sk:Gn@r9jB&:>Y*UZZq0.Slr.amEWdEJon:lr
%+D6E&YBtu^@U05V#!fSO`9=3X0EMICcluk9O9CQl.AF?$@qQ06T<PoB!l@gRV5IM9U?;ij\0BJ'KJG=5@]dW4D@4%n[aBg?6,^^J
%Th;,3N?1s/akr8AZ3YHZ@)G(CQNhDlfi/c$1TGIFPp5X=G^3<;imMtOV'%?N"[VG1(6u8/*'p9d:+o#kg\eqM)D!m7.R,pJ1eZnC
%2)5DYDn1N4.8l5[X1G;pa!=2p6@f8sc@+2Gm]kf5*j8->ZRlb-]a8]4F0!QeMZngG_g)[[ZGr[sh+3d?6j1KBaf^683*H<i_04Dr
%EPWF%/;U-m,9GOBK`FC2!9Ttj`$TGW3"dKl6?G=bh>o2[,(fQ4mt%ChhZ6O3%6n:?Jn`3a9(K29lr2YkH]F^p/abgpM,VHZI\;tD
%,[1?B7oit/&G?tD\jJX"[MOs<"\raOFDs,oaqbf91(:_K.4?E*LuR(Vgtd<!h>>+m58pF]Kg>.L?)LMapBNS7<n+jKO]p+]Lg!AB
%(V*F/jQEIsMK$XCGc,eY)$F,e5>R.`%$7K^oL6k6Y&YZ[[QGI"kjC'k1hCD<.Rm7u"d4381FY1-O@1=K<%^bEpKTfj2ggk566Lr=
%4jpbG'qC-98c`#OH2./hU(=KtLb_0)aHT,[<EtB^RF:r:+,AA.64/]I.V\d;K4M'>#e-5MXndp&+,@+s#X3rn'NlZC:W==[BfelB
%?ONYt>*gq!Ud]8DD7G#Xd?7B0(Z3?*nX<"!,=dukM(XZTSR0eMhT4to:YDH0@9LIj6B;dtT1?'iUGACmQdg=r#d#6&:29On?bA9e
%E@8]hG&PRh5!GLme#hE^C(rqU(\7p`(>)e,<qj%5G=h9`4?IlE8jQYFX=W%4/\Z(XUYK?'''5,f6Q4eifLWp?d:&>@YLupQUIdkB
%ZB39#/qQE$/(>#B7ZRopH3,<gVFjRRi05ja(osO6k'/=;R\_RP)P.LtdeGncCtZK>maE@Rm(qD(]WP8G[Z>[3.f&]E'fKH(AEQb8
%*Ai(Ms$Wb81q6@_3T\d";km9l'/V=KZU.G,j<ZjXDre3P;*oj*UPan#?8%4cO/gNZcD_H?`"D)1/-=R4%f)hu[%_qC.2P=2T3\.r
%jEH;WfF!jn=3o<hNBI>+\IKl#WiAf]R1Ys+CBR*'!6Rh5Sm9Z96<$5SS5^#u\Rt`g>Ak"l",^pYd4`DJ'OC%1;u?sn4CO:`4B/P3
%GLe"$KROR`5&No\^\c_%cW#3igs+nEEFKq0crR(?V3D;L9Jo*TSlUtg"MO1V$Ti+u)<3mP0S-+$GGg7umk,%SBbNe_HpW]hr>5-L
%e;0J%[E_?`(kAs9<Lt5p>3qkk7`h;/paYqFUb-_KY,P4$CKbliCOlQl,K:ub:a`-OQ*UiiJ9$F@J/1S[2cC*_5rl_63'Gl<TRubZ
%FcX5qeZAX(\S*&LdL!EYe3PWgnhX<@L6V.UFtPL?WJj"A$BBlb)>PXp-dp^[P1;<k&N\i;/4T0,<GYPQI8]R_Lh&3iT[566DkQ-I
%+:92cYYWujC=WOV&ZG;=;p#OV32,k2lRD6r#]OVOl1I$WrMdrhfm\D9^#uL'[WHPE5aP=_h2_PP4"30h*`U_p-)C0Z8a*/8+=Wal
%je-M;W2M*mJlJg+")BTO1N9=4f(:="RcCEN@&1lC%8M1fGPD#@Tl]+W^1ZK`\*3R+a#uQW/7uL=g?sd3B*g+Z<=tFbT^^r>[^QfH
%Z-)0(=ItMM(8]K*h_Q#RDI;b5j[K.k8ll,].b50Sq?G08Z:*T-jsB/4S]^DJ:c9q"!fSX9RX>ZBNV:b4IYQ_?`'T0(;-[C]e0N50
%24UgA)N*I9&0g:n>-f]5mrFaSArl#P1tQ:nLO7sEVhpGl\TQAH2*;8aRk8p.j8npoj:2Crd?%Hd-ie\b[#2]!#AB/7aD;-i4*TR.
%*b+;'GGLoVdu*%_/^91BIlR_$g08ln>e!U[X#C3OfsCMlRcB?;D[)q3c%0q(YS002Fj0:d+oImLl3pda.6p/&AFLG&2&F3e>>4Q@
%WbjqXa1SLMr,=fdF8-YOVltObX,nr4j`Mn["_HqTRteJ!jGIaq,hQ#,BP#YnrCD3Qcb5D-IGu3<q'rE-Gf1C/]["4T*Ul2LK[rVA
%?:bad0(jGm!Ja*qOYT1TY:+j,<RQIr`]@tJB(RFBhF(ISZfK(*jZE)u8VDf6L0_D8'o\U[igSM[U7jWMWr:%2i_AoANm`,Ao)taX
%d#D=1AcA_UY8U?Dljda(>G/L&7Ba6kG2kanjX@#cT&O(<G''oU5<cC&0h"Kt:G#&H%S+Ij='"SpcBfNC:c7>N(Yc'1*S$?%rPS2F
%cX,q/j@Cd1m:PniU952*MqEG(!gA5i\Wb7\$krFffmRB_V$Mg9*iCnDWDC>O?A;PgYn#P4inCa-KJYf1/f<TXW/&p$J8X,\PsK==
%80ZnqmeWs_<GEXVNgJD3qc)HMC,*hDdlZbA=)7*^c#lIs7:jQ[U$\EODpQr3\;u*lPj&d-JpoC&Si3a"7`d/YdJKmQIt_Bse@.rH
%5u[h[]HQJ-L;0]IauDg`=i5;6G#CY&nUY?o'U_0.<iHre/p*T`LV!d6<U-To$4tIIaF["V3p4#"YmdY"0VM.jr/O;KRPTsL(NQMW
%'&HDFRs<h2WX*HnVqbIMnj]H*-Booi`>mnh%3JaD&n5mBFEs/J52kfR,AUSj/<Yt9I;\GI`?\MOcl,G=o<),MmPXSG8q9S4:>.">
%QRW+H_AiHqX%suaFM%\Ho%MH$pXOS0Y1;OFf`^g9Q`BGO"K8?[hN`mOi&d+q*dN.j]h3E"^8.+J/EMR\:lHM6@"dW-0]3&XX2*A"
%M#`fu:T,tk=:mEuj7Q<bBDYS6?\h?4m9>X`3J9p&X_'H<WTO4d;8&G*Mn'.#)Sklp-dj=dj!o*<E9U\t,V-<o,/J07%2jAA(QTeB
%HMbg]$b\IJ$-_nKmbJ6OV#WHrF=-S$C#h:0D^tphX#Y,6"oMU0!OWDVTO>annZCZS;ES]:BQ5@P?EOqAA_Si;OZ:B!Z&(m2WmaU=
%3P9sVZYU/F#aclN9;YB\Moad$QT\uANuc>qB(Gbq(53Pt9HF2pXCT?0Z)RgO36RT9:Maln3%3f?W?*,]+1-:u#g@R!kk8qkdtH>!
%A]MkHP2tk<9i?Odk"C;].dGa[Q?K!#WYmt_H)Y;g#g+ufAe21V^VQl$G<(jHlud-=bR\n-FZeJ=W,Joi9)f0I5Y';LJfo;o4F(Z0
%gsnd&HD!`XI^'49Tc3#&<@e]1b&*YP/Du.9iN)?WAgl@$j[HK'`ZISp6ea^@B4&am>3R:nh8@m+:B'M^!rUs@nYA"6Xr%i/A%WRQ
%T]4')&O<QTX:N9SB;+,8WM6tBeN\gU(g9e%h=IXNb#Z"3Kt'HnHrcT+Tg+&V8dM@i$**"ZJuU=K*M+5W:C2(kV6'0`f1mt0W'Wl^
%'N].dG(;<8MCdOE]i7oHcm*<S_ZO%INr*kbrI<N_QX3=nlmh`]q*1C0-"p7l]cTs>)%#P"VL]/bKh=qi+H\Q3Ru@(9`&G\@EV;D>
%B,+u\7YYa8]^%uP=Ku<uk$s?)%0olS*p,X(p+A:!krl*Snr(12_:_e)3M+uF@Ud[M,\!gq5UA>4Kp\(dM?P/k;Dm<t'ViT1V'a-C
%.02k5ogT1mHEu\,#;s;q0iTst@/2W[RW<YpZo;6[l^UkD\F$=22k&pd'llY)>[.Mk.>gW.:Cmnl[>eQ"X8FIA(9p$0,uBo=1!J(j
%C0pfGZ26"_8\<G9Nc^)MAfO+5P4,dl0r?N_!KCF_of+[tLDe;M"`Q0KPfFPkC`q6\V*iajcn%]gIPtC5K-4ui)+hcZmU.5_')b^X
%M[`LJ!Lk/M)Je*%B^rZL7`)jFOm&,`m$-1]E`Z0W7SSP*buaYlM+[=UQl3Q<=<c&!"18li1?V"NNHg3?E]2TB8et>=GD9F3[WI\`
%OF]oU0V[%O,-$Vbc[h@+#bHDM>''e'U^qCJNdqF1#-fMX+]=Ch_<-YWR8PGm>XLLpc:^#OSkBces3Di+.&N"M^Eg%GcHGH0Q*fE.
%#TE-2\!V0T,fC2J'.2'c)MC+dW^*.oJI'oP$]S)g_35oWTt7^Z="kM['7sYYRr$Y2A3]5!WELd&Lj1O\<HU<;2tdrf->Z::,Ba,m
%5:D30II>=7O0&O>/SUj2U'o2=RqarXAmFR,_c1UaXJtN?O#D+L[?n/1YNWo\cBA!D5HqGK[`2pCR@!3%BX?!_Q7OL5S-uuWPU8gU
%Kn96Br>97&gn,ES<kl#l9J'.SEKSI5fK'BsW>5hIjY>=feOg\p)7'-,nTF*JbT%D-!d%Tpc!!dFWWIDVR)``oc&n-CR\m,K?k;]=
%M`WI()@&A4R4>7mR/Y#[k5j9$723Jh(=Um;qZumsm?clH>sa3B3^f[K!X&8A/"YA3;U21?qhOB6b:ULRV+#+HfHqp**3GXU(A>dH
%(`qbgb'>e56P1ZipqVTkImN,-S_-(&*S3KHDQ0m%X5nr.<EN0WV0m/L\*bn41W$/f68OO(Vi@OP2ITK*ne)4.h<:$]#V"_,l-?-]
%%;*6#=EKs9R'ug<?>QKd^IF2R%,\/)@N7Hn7;k&lo&F/d[bd?`4V<3MFk"2Ek\&\-<AU4Hg"/@q0`C8C\qGj$3]:P2V0oP,_NnSA
%f2kYkGs`XOYqKjQ<(`*95(m<33Sf]W!T7@B;Idb0*]^A1MARDB*O!V=/8,V^6g3Tg$E>6;_m29n=>eu-!+[-K(',PHqOq4H1hD11
%Fi=tm1O*sro[de,C_84:7&-J3LpW]0UolD'*1#+TV'q,YNX>ui-]S%Qcs%uXJYm=2S>t`fhqN1YUnH1@lZ<=9"uR<M^@DP!c1P+?
%K>+\+52h93,Mb>ei]@g/Mf<WL#?bg%W![r49T&q<@pLuY`[p^><?c&>_N@>FmA(60Lb!\6ekl\KGKlinfTH#aJ9hgCQX_^+FiNqJ
%"-fp-0*&3kXV9YFm>K7?EZqCiD4pQ,P]At=Jm=[VD,WpH>cXGCbI#FY8gBtR1gQFLa<!Y6?Td4OG[(;@,[P$*jG1QTC.]pY>$sdQ
%Xc!=:WcMnR&&n('_&,VuU6lTgG+cm?Kf!'[5L>5pC234$(F(?JPfQ>-.)5!D3NWoPEMAH*S\EE0,(.";Ts2K-<,uR!&dVZ<jlR\k
%(+a9rLb3q$BH0Q&_usa_ToAjbcgC-`!&?<L`+m4_gm^jLZ#l0#ZiiR`#4nkNELhoMeH-YO\XV:fFFL;^?EAHb);&/E@HcUI?3Rn7
%?:=nn[3]#gcfj52MFg^^b"M98"dP!NMY'FWXQ$>6OJ_etZdai(JHfj@BC(iR_*c_nV&(aWfF""d"B@=TL4[2V:LU1V=Q?WJ46U40
%FOs(2WHO@]&6JnC*'dt`Z)^j'g<hlOD:!BaBQI)sc`F=9USZ`j?QpR;X>Xi$1WCkBr&QV$g)<u(-qNW_Lq$'^H^&O'J]2R>8l'?-
%]/;3?Kn5:Zli#D%o4!C(BLS\f5&]$h_mNjVdiMPs!7!<@gE[oL@NT$_-66]M''urikL7l2q-r0LUV,UOSZk-a"[GRND``U4[h&!I
%JV86*>:8'CJV6aNEt)q)>F/,H4N+cNQfcAtCZ+s\hDed6$2+W!Y*cY#cBN3RZ3H67C^*WGmJY#9m<*ZWe&Q4<F8@`_@/3NC/k6m;
%Xa1Ju1u4W:-NkZdXa>SrK<'c"P6#V0Wt\@DjJ!>h9gH9'K@CK2e0##O^*tXAP!2-(8"E<^gnDGcQEF^)*$rf4!S<:2*)4-DR9><H
%RL1]6R+R6FR'u'SB^*h*&3LqP,NjQ9`l]E5@Th\[e8pZ:@NDuR[1pK41>5V54NZ]cpqgp=*!%t15cOSh9?LlD\R59ig#Es@_h"-b
%H9]4qYjd;`7ktCB;p$pr,r.lPctM^C+kgibQY7h'2W#jeZXDh%6-nQ`*LMdXCIuaMVnfNe8GUr*[J8;UMQn`gR(s]7QjR0\(GG26
%cBhQ$0D2/VEMI$kGQrG`F`^V^&0IH,3814gV+^MDj@i/#&K=A863rFf\MN9P'tA.uqr+I4mP@cUTV0DT:5!W[fl5ekGk"?O4k30s
%SV`<Z\acVu#LPX@.QT:NF[SNsS"cmZL*k,OqI@,/!Nkq3PDX:m$+DlKP;W5p`CdH.-8YiNSLh<D##jE=PdbHSa[\C<d['QbKsS:u
%W?N<>djfo7=10M!A_Mf7?)=>F406L@oi!m88)X=QduaO6eeArll<J#s=NY$OS6n\F8AD_1U0P^Xr"^9&>G]GfFcTL6'2U)q<&P0F
%_%DbjI'jSmDCcUbmb)4CQ6b!"]ZZ?8H*s;OB45+MPL`3(`O_d*=Z-&X_02SE4V;p%Zkk)'`UM.O4jZar'#XMaoiE:;*@a*&0sk#>
%FZ,4A(L!3-^SXTn,H;XIiY7SYpf1Y^VJ^.`:e"RK4>AMb&kSLoCtc949#F?4=pY&<C^<ZV&^Rt)"jg4o<t^fm*M/tL=H$7Rf/&_-
%29]D\X*A\$URh`!>6qNNf=b/]d6;e>GAR_E`cJ2Bms5RV-1!;Ef&\>$_u411:/8Z"C:O&G27Hi:--f4s'@1MRNB;AeAfd@Z!J5fd
%&R6=L=Gq.n*#BlH.c`:[\97.NA3hX16W]FE=@3$&*-P#6Xh\K`rF<*X'8fir-+J%KH(M7*:s=fU]0IOQZ+=fg0tk78j\F>j<[bdP
%]LZPcY3j0W<Z[0SUai*ATs<qQ(CER@OK;$m\q!MLHV%%.M[!CJHg*R>r7;jL-)WOZ$^?&[:`Q_1fQ.dhbYKMf/qn!P?1"(_DsR^l
%7_)h@dd2*9Jmg3^-]lp#aYEkEAa2&U=dk:1ACs($3(<E/3[g1V=n]_jZ)pDXMq3FsXOBqV-,Z>1P8kLUq@_W#V]ot4/0.n?e*1nQ
%6P$.NQ\hgp?:n.QZG`c5.V_&ID0Fg+]0<#9K!4WA`<hBZ<jb`*;R*WQcTRPWEF%$2do!LcIeJK7o=!s!d3D?Qbp'G?ST;)\0ro$=
%Z)RIoW_2k%\K.YskAsWoWp._TSY=%[oY*'ridEbM:^4H932ZEM3r%5m^[DOld5Dk.M@F7#E;jAd\AoFI4)XGa6.GZNA->nH3H)AP
%]N7fLjW"$&b,WAbhpV<CV)Bb>_<EuP)9$$sQ:_ISl"dVem"[eC7u+aE9L+3Z-YIVVB+#T]!/gIHpjINt+%]_(LH[!"O`mj(i9jen
%GSt?-r8FA(H&Kou8+hEWGspI=4_.;"pb#:)(6ef*Ju2/fH3`]]9^osDaFq.3;<J_hVWG^rRV<tS!9W+f"GA+KN(^gGW\YGR$9FPZ
%8N9/<&I99!^p[2^'j%$4#%XsdMS9Gl%attCDXd?fX=u&XVBAk>>;$0\U'6S/$PQ!@SZW'r)N\/gED3oK8:M,i<f><L3p3XEah;)"
%>s;HIfk[YlN&Tuh\MLuQZ$/W-<L)UuFu:npo[CPZ'LeJcROdZDZ_/JOrTtNZe>:(=&5$:0OeNE)[0e)V7''El-`;H:TmT*o8m%kl
%AZWM]i0#"eI4*>k$_:^aK63E?H9/hjj*09eF@s*<W%=Sm>EpBe7'ii!:(<Cj\]H%@F-gKVG5CIP/uNI[/gWu4SB)R_!6>;[&F,;6
%%])J^S(L/4Yn4]K/'^KkRq$Nf<\=043@]+.c!Te$:QX?n&8j"!&Rl_q7I.rgV()<)J?qPu(0P>Z[B?`2]'gXaLX&`A\p$/#((XhN
%;F#1@D!3q?N1[g[(oC]4AaQ&i+C>[JoQ@"sW$ofE"#5^>(T;3@M0MJt'c_6%Qf#RaR-7(K1G(u&$Kf#WA";!gdQ%K]NMZf-"Lssj
%S8FiMC#0dm,'=_+;Ug#p"#Xr+oP1rQS*qp@G+Jj.F>!rl*]T>ea.-uioa"Z8UX%:/EPl?!A`$$EZZZFFpp0[BM@O&JiCNL=WS[b5
%Bt*]6nRWMmL24]g<HmX]&LP63!L#MK*&9rKG4m7[knS?e(oS"uG)qrl;jiM(`qr\n,"P1,(esu]i2+`g!k)1iJ6H@=.Bp_eN9nCg
%_*Qc.XbG3J5Xq.8g91EA2)<V29Uj_+ePI8OT-A[K</s3PVkUo*jYX6an]fai8(s*WRt2C,QkZIYP2uaUjG3FcoFgL`!_+t9:94Sh
%^*j3KH;o-A*!IgbUBI\MIuM;s3+m;2%c)O2U/SdNTd6pG!Kel:lunpLC?htpQ`:cIFYC"J?O2Xr/6uAaTktP/$FN:4W>,#_^;d_t
%ilS\t:1acd8]hd\Gk)>@>t+mZF#[-qBt!qlgNYe,j"<4-KJK&hVHkr*Nj<<Jg4,W0_$CeYEtn"Q-1=Bk(;-NGgep2thB;+QKn`S$
%ld;_?WU//&!hfWNbgOXRNg?4oD;X+89IeLrfFaPA6^VHH>IGPr0!$ja#^6M[OUZDLDGit!(\ae/BM!bhi+@3Po,uC8O412>6BfQa
%4#k>4+!L$+)oZ'GR)8)GaSDR/K_*9\`m+k,a$&l=kFa4mi^'[^&^Y,O:MIC&SS[>]]5iNn+.=IEBTB1,:64c+(Erok/<*Du22YIU
%%MlKRP2H[m>Q:3\blQ`"(2DrkMi)?93N`aX0j11-aIKS7MaY1*CUTO3=?ELRfqCqu\#sQ?Hdn[l'sgL>"gjqhGhYM..mt'!MR-m(
%XHh-XIXbipa^RP:N,`%MZ4B4mhdh&7&i'p0k_+S?@g$6ukZD2I%'Y&P1j1M*+D91E<&1APWOl9ae^RZ[HSIuA&^HMiJVB@)TY:_W
%iTI_p](se6?J^<%Bj"/*/BZNNOPhDa8EW=s923NH@E]Jfj'?,4OI6\$&W]`B`Ah/n#)<c`q>K)hQib]G2]QMRm3gs3AL@3[\Ah,%
%9"4=UR\k(8BYruMM><`C"QWM^D4H)ZT.@-<VG)![C&rAAkUa!+C/&]uhV-bFcn[JS+sa"5At1'S<J\@@%BIhmOD4lkNj_l":R%+(
%E0Rf1+Hjqg4glJ3eD6AYX;DI(K`nXuB9Z5+oIifo\]U(//d[2u*35L:R.JgV9-rJ]5S'5f0TG>gFeTp&nEdS5Z8!S[bP$I/mUF.^
%6hJaPjQ0"ARM-Vb?s(75:K*`@C,n.qL]N'!f?Tp<.ps[%D6'QOd*nmKAF\<)Z;X?H2s_Y[QV0KM:]4<5#E2c>dII&rSOe8r;1k.E
%A.99&M`jRWX:&hG:TP)5_?,8g,OkfF=/tCP2o>CO.lrFqU9[4],TSC%'TV6XV/k%R[V)P@;q<+HM@9^+0ZtBfgtF?-".-R`r2:3F
%XeKH-%Jhb2H%^!6]WBu_[/K'o=Tq6Y5`J5uQK)['END`IlMrutEn!Sq)C2*dl\^%3%/T-LH)B0P6W]ZP914r`c:E/tHip^p$lEia
%L.kMXpgk<rXelj8lajP4N2I$c@^`sBolIu$WY4"_e/QOH551opjiL,((83>Eqhr<nnIl1^"&Gs%7Lueb*Z?8,=.j?0Z!F0-8i0D5
%kNrEWpWL1WT$m/`82]qm"_nj>0gq4U7AQplnkHkA59NWt[8nJE4Kpo!<SBhQ@qdEN=0`4?-D1.W!*\9PXYqSC63<AhFH/pq(ZhEY
%N00nV_jIE/>6m!mW44!9LWd]9>3ReCX%VGWcY^X'X\Wm$Z*<;O>_8O6UO7.KN3Z-1XJ]JNFW(7WMI9R-8js5J@e+m&Yb#SXQ9=U5
%(+6$JD6@EP;0Di7h5p#WpTD$13dNF^Vqa-b#)J`UY+V",7'mO><%;;QBUe9!6q^e4OK=,4`:M`4\J5;j&DqsW=!IUS4Kp,\5ehe6
%^OJM`ImCbu5ehe6^OJM`ImCbu5egYl^M?(Y#Zs$mUh0%!'*Y@e*'fa)'atF!V\ZLf(=`ms(oj]10bN#[dW1]bdH'\@\*Q!gk#<U0
%#]?4'e>X[[0h)WDTQ-:rE85q&mQV]c+--4/a8MWej">A/cT`0&lGGD%7<1uHD+\?^9;jktk6g#!.I5A<c_nUD9aA8sUJ895iMZ4!
%Yke:?d+lSUG+e>77a6<QN\qtsT*O=+RVOB9`[@A!.GoT9;uV7lVdpIM:i.'G8AHs>22QW+i_h2T??@:pRTEKZKK`eTP-r:RZJmg"
%HR7B;r0HiJp8mpP5&tGt,0iB2?Q*hHf)PN-KD^jar/lX0_`:8p1tN=X@G`R:H)q[5KK\lH2sAq#HM4=E4's2qjo]._1+':pe6@Ht
%>&6Pj34j)n34o4G3P0e6,/(l+Rr[_P9<'t1c(p4p;UCanK)Or^]0pLTs1cIQ_&BeV.Xk2(X#,`X#S3ST8^2"A&cgq$Pp=Am[gI)W
%rq9_q/%4IAqPhNUKhrAqi(^UZZ<[a1`j/OCWgbP:1lDsb'JiR9)Sg&LAf;kqr`$r:K(7F:h]FWEaOp.RZ^R7u4U:#LA.]OG(>Fi$
%,p`-<A\X/ML<C8U!faX'`?<WM'u6u?H=K07qs'EBpQ>U]V+T`OCnd2RR7%-_,+"/fibTpob<;4Tbo<ao@O`fP3#f#ZU3arbd(de\
%4EieL92\B!RL#0^/UeLV,/.6r;LJU&n?OP%Xmbh<Ug1Fh\h).o4Eu;%M98YYI6n)fG.Lg`65-DB""uU0Dk&.kGgAO%m<aZ%,[!%"
%3.fe2K2mPBjWY"h"QL7`@4)H8'-48a^\b37#1;Z3'):M+!Z7L>'1B!RldkZDP'?d(oDZK4oBm4+OH2aG$bL?-*Npu!;N1V'f$WgL
%nVNp$MS^_qEY:,rZLHR1@)aV#SN'Ab:ano!MA,;N\M?(A:+8RCh3O'+''L19s,V4p.>@!a'?hh<OE>7uZaj"Lq)^\6M_4tJ_=2J,
%<o?X1Xu`U!L5kh1FeBJK$@\>79(GlT-V;6eXTD"R@=J]#O1mg*?CuTuNlMt!-sN[IP=r0FJ@OOV3tSsqC^T7$h(,qElR^YP8?0sW
%m:7@PG\ri"^8i5-A=953OOm)(XKfn,QqAf?8OL#'K5*[g;)8sQL1WeO'ql/1>jh@X]jG+FU=H$Rs/;pIX&cIDZqU"e^oS*hE`7gM
%(Fj?PNE[-hd&jtOMeDs8PSN^_V!=m%\t$+N5\*@Ig.<[P[<j(,bqQD60?5Ogr&NTf0)>9WZ_EA/77kYT@R"d"]LF:YQ=.erIqi'<
%V[NoD4@)*>8J+#_-*Nni#]?<-907;BPV$/`6;%&Baeru9I=*:<g5O1b4LU='J#NIBfXL__G6r`t3lY#/6_gVi9it5=+-2DC]f$)9
%S+'^@`DLt!<il6DhP[pdj0&SCR(?A!PU9QoKdfFiX"Au24AtKR%rEQ4b`*7M>%aKDQ;VSdS2-#@(0k'#`0("-m$>AL^knQi3NXVO
%NoEck@]R].>oG%f\0^<ZB5&YmnR\IP1L$E^`YYOn[S@%]CoSJ@nkGV/l5YWb!qV]uE.=)I?UZB#&MpGB,d%(4BJ.<%U-u!bWaUL'
%Mkks3*?>!WU'S2Kmng<BD/^&Qe;n-Y;4W\77+<]SdUGb1f+(gP//MW0"A8^0Jge87imRa7g$KDE.7>S_ZYK6F0%EAJkq3%\is5%O
%_)>e`\&jb"j]I^<aG#LblIV=\D2nVuCt(F_k8h]*d&Y$We"*HnDQDuREJ-.S++1'8bdPCmopm@'IHPdmG1_)X*g+I(G`iPm*'tQj
%R6AE,E#A\sW^@j0No[UVL0"AK/Wis`rN?cfX8.Rc\5-NK-)6A`8i'F!(@icO'%F$W;`G=/3X#GE_p1o$-jJ$1f21-oc/*"d&8]l>
%drKoj:''i?gq.$E=-j1WrBQXEL6PG.&]U!#Xirh*h^(H7jUR@.MGbWJ=V\-$nWnf68q,/V48@[VGIecW5g?Sn1h@J2!C/W6kFtMF
%3u!T"[:qM<P)(!U-rrIMNX?crq\\?Blkl%!jiD("B,$.fCk)g\fHT;`YkI[6gKd>=!2\k[!b/<iXV<!j'r#o\_[#G%O9)l2@.+ce
%DhOO\@\Fg2)AW<Y6rn0-LbXB")$JVjab=W4WW"f4g*sDW[9)id2,B#mgF8k:K_:BJ"mMnAM!$k_=gR)5%^E_gMltK#)/g+HL]52n
%N^]$YN??V8@caPe<hs"g$I3`qd/j37:2$I2]%1[.LWrDUE^/-O5ZM+1Nu\FqHCUjU.+O-0PfG4uWI#X9"/-m01n6MFD&1jW90:Iu
%255f<#C!Gm`,p-CFC<#fO*a/BZ;j`;fhP'm6:>$-N@C#IWqE8:=&5_,"6Pr=,.W7T;ocFm=mO(=@AhD/f(=O'<uW1\c99%D;5uHX
%NiDTj1:.7:CLKD2bjD9k9-l6X+'\H4cP$?KA/t<WAI0bdXs?n<5'of'k;2,hY^XZdGgdo!Xj^PII2AK,q9#4:4.%I;Hja2EmNod1
%ak*bDQS+LZLirg@JZ)-@rZ^<;fC(+?Rd<2U4&$M<01:1GB&*h./:oLS)C9H$($uu+;Q`QV1YUa%;j9%;c30CD.6er3?k!SQgo`X6
%]8As.hg,/Sh52UD#c3-40U4Coh*Mq6,okt%-!`,p;rF59m\61C9uK.WX:(:IaAh56o<pZ*Q50Jn,UmOpPIRH(WoPKDU*PUN9b2:s
%PYu$WLW[NCNf-Nb5\roA5c$]AVp\cd8V#is[m0p,m\\!/o`?q7<]Q5J]6a[:PN:6>4E\bCmbMoadHao_"E@_JBiAZe@p&r(qlTI/
%ftZ?P0iMB^Ot#+</`8<70iCDRb*1e`rE,cqH(rloA9>2$,[_>+:>$ua/J?HehLs^%n!;PC6C5\+>X[C0L]R=EQ/E/bqsIRL%T.e1
%H'-=+d6X`-kpS]*ElG?I"el)lQ%mhd]EE9=5NJpS=aD<aX4Rt&]JC)20%gUa/OE1#C/`Vn\ifm[)Yf3*T9'/@s-VN7@PY!_9n1O8
%5h!^^#[q[-1!Pu@c70sE@OdR"g-&WubZaWl`?arckUNhSg)S8,I.cK7!\U1O0a[gEUhLthPU4^ES^Uk3RNmRgbVA5=V\AQ`gc^T@
%^DNj#E)YWmg*D*)9e9&QRFL99@Ft-d>6PXA(qXNQ"7`Be9<(+n]gGrOD:ObDcsC"?Qpt+f7+UDi<oZ@,Ao234lTE!ZqZ"fI5p7<P
%`%YnIAkRnK\\[>;PBT3:*qeBKVBptI_b<do&XMM>mZ<oCC'rpr<SpfLQmAs)&AZ1nl,k[C?I8ATE0PDqOotjW3+H$_[9<H]@u`p?
%VVrDo@*EeXI;WQr;I/JBU5Xs^o]p[%<V+O.1PB84=>j_o5V2=t9B2`k*.n52U9_:,?(nP*9e.;?Q#Ut&'R_[>oSg*CN>I!qJJI]j
%.,c<7636F_rS\,WKMZ\qZ6a%X9>kHj=4hinMDalJhg*El1QhV#&kO2=A^c>P\KMGH%VmB:5sN*P]q"oP""D:oGYsTVd#trjD-+W<
%Un9Q9G!Z03_KF4%Ca=^jO5`AB\tXre's]s?2+:Q9pnWpl*kL!+MM8$M$rd]m/FPA?[@4s_d5@1H@JH^AVQ*O?h(q&'i`)pL'S\/h
%E![2<(O'1N<21bIQ5X+_b^WL5/EbU8?#s/??Zp+TPuMV)p3,$:[)`kKNDlVi'K4?KfirUu=u8Qa]=a-l)%LsuerTaY@hjo9DH4tK
%B:2AQCY]V]Prb+&B-+;J;&$kr39iUD^JmLTm/\?2_j$<:PXTfc4HJW)L/4Fi+Zh]V]*ZR;J\na%?:^TKT%%m%!])@k9tWASpX[WP
%I^0^.H`\3LGqEDmScff>gA!5BK<.=&kmVBA"T]lr-d9f>58_eHP`7>aX^pOQ>jr1B)P-Z+S4t,LLGk1p*S0@M8Lr-#i`$5Y6is!j
%DL?FhB&rG;GnHC("b4s:`^e!3dO6mqA"pO?2KG#f#V%hfRO&/?*=439`rU0g:Wrac@4A;'aQ&X!V7BQMFkR_nZl+TnSdr,o%-#V[
%%-XDYW+On=L418N_1f9Vo2gb1fu-Y:'?sB>3;0h]@SMFk@GL-7IpDbI&rTXjg/J#sSV7GuDU\sWG<)*Oqb^4ZJ)qD8:]t;C&.0)F
%Ha]$?32Z>V0U.G2kuJ.?S\!Iq\3([hhC-S/d,jN(nfl3OQ$hb<BMd(.3R2&>\s4>#`CeXEC4+e$J\!1Y%Y>m9d?k]L+0(D?WF3\K
%3e;C6BTorsC_S6I!86&@_lhA3:kZpL^u356]K"mc1V%4uP+9H@G'LK(M%/[lZB]8ZA4OLoo_GYNNDF?6#dBX?69)d!=tGS.6WcLr
%_3(N#RJlN,D=Q^.OfY:jmA,G-LO=/Qo2K96f&WSc0,LYo'U=%[>K0E\l#Z2XSW)-W$`fdok#OMU@A"$CM'@Z7QXV?$:0!`ms15qH
%n(cG`iW9CJeI`g,:.D^?cMnXd@.o*)2W=F';RbBnq=pssDA_f""6>qU)sQX449d6kZ/+HW8e1((]jG+F@\b].U)"Dd&4K4.J@egq
%qc8F.U55!^I?Nodas09h2:H0)9)1@4c$*/BLnJXK'>7DL4RP)nFA(b)hY0&h,u)_llkrX'%Vi73p\AU;9Z)f$>Y;_i1E7%];[sGj
%3c3/214LH\,nF(uE_.cI*bjcl+lX8G:b#X@Iu(J#\N28Hp:^s@=ej?FOrW`Y'K$q3[=(RX:4Zj\6.L3;CQn3rAGI%&5trp`lpEgP
%>W@<X1gA;`)1uVIdFup[,p]7g\^GrQct?GCL-%`;85661Ync8u^ZUe.Bfh3T`kO?Nb-*=hR];i&nKBcfOWn6WFBf0kCZS[LJLM<_
%IP/eu<+o28+PXolB4Ubj4]4_r?'@*M$?S98mYb%[1cBJcb,uD<H*8S\K3h'GX;6S-5>A$hXc[4'0G=Ygbr<,/..mjQ60b;GO$d<J
%4IT.%o3?@<=d@n3Vfgq1$X&RCh:O$+o_d55mX4k.Fb`L^]D7TU3Q?Kf03%9@`GnVi-;WI7<`Q!b'u*j>mi%)@#5+]'fR*QPl4?;S
%if[K$/3:-I3rqLK!ADpMVSSE.n*KmF-Vkph^WlgZ"ZEV3iCkXZmR>1d9V.&ZjIF%mX>Ap9M+Eq2b-qDI(@jPQ::8VV'Z)o\M<dmK
%qM4;%RQ?!\'c9'*P.V8N;D_/jWYObb)sfUWG;1;J3r#H56.E4eN^-R#qXOF_(BmNh'>3NrlU#">1)gWl?NG-.,`P^r9Cg'n(cp.1
%>iJ_]^<?67>45BB@T?@7r&N/l[bg$q#1!R*WR)1b6LEQ,AC#/Fh3Pqkn^m5fO2#l]:^,QQ;lP=Hh92De0]Zc$5C`)@Y3s!q@2p/R
%gXi\tq>>=Dh5-qG3G+Un5]C5B90J#b6m8&hmS1q0#.qeEjDa#>6<+tjW@RJKNeF-';*F[ur:m%^/Q9-s8^W6:\!B?E4m<RC2-H3A
%G4^Q.mt&#9Jr?Mk49jNbgF_+?%Mm#Vdlt%GS^6KMHdcNf-^kAjg`\u<:A)mE`@hN?W32l\-tB&\rNGuNFpY6H`<nGj-rDW2OVQh]
%,t=^935>hH+LrDem+@3d&A?<B^IZA?!&R+_64jB"4sglDD;F#)O+a<J?kJO'L?+L[il.]3iEG!f`gr0JDc88d6,@Xn*iJ!>/EW!/
%Z\1[hZ"LKP2YPdjPN1mgM&'4U@.6cV"*_NH'F/QAE2o^NI5hP*3f\V'WAbDQ[fZn*pIVH+.'&kiVP#::%[53G8L+O8GX+A"(#U2c
%="8^H'K&K2L/9'=>Ee*r6%RVaVLY<&jj:1EP,X@,_ANa]q5aB48e\B!Y[op4F"+q)l1=2b;VYIX&VDOd?#j&9*)9H$Abegd#LfI"
%Pue\,0*R5bmkK5M9G->#)%dEMe9h-2pkoalO[At6rbQ`s&DWsUMe\<rHD#:OEDs/FL8:/S-bIY8^FZ[SRgMPr5JeoJKWTj77lhpD
%RfG,VaKQtSN:G!6-U$-:Xi1uF'fn)U'u\P$c./9)92#TF9Cp?(Qr72>[2WUT*H2JHqkuNXgo+7W'I+d:1T+/UD4:=r0U&mdV%=Bg
%66d:X2.EXKi?H\LG(#6"&DGeS]*)%X%$8BGl+t[V=VYrUC6'g0UX$3kRD!,$9MS^/l+;k"2j/l4g;ued^U!`VZD6DtP0;pBra%ZG
%VNj3]Ea$r>L+"K+IY>D$"W=p8,gOqS?8qR=H6kVrb6m3k4X(3-"Rlaa%P\hT&%Yn7YZSO.A<NC?#s*EdL^.T:IratBM+2/`PU>ZH
%O1p((JX+IH<iM-oMm&Ss.iqM+hm)re?1":sEDC0LPhNQBj&\2%$"lk/jLD%MUX#V^)XZ(c#uo+j;DF10p;1u77buOOKU)AMUjOp[
%T.Ir7@CNtTO$DCGYD1uS=M5R!=%!!hG0WcY_33'g[6gQY7io4YWO:r6$0uCOTWKR.Eh\iC*oo5bfuIKqR]un?N[`=#2I6p))KBlO
%h/k0fM8^C=FdCO!)SjTJ6<@cDX,S,jGLhSibEb]I8Il.N<`6?*.3.V,<u&[Rib-i(Es>u1UUsAh&9Fq.Vs?,TZQ\rLB\bia=#Yq#
%9of1gA1AM.*C<=SSOk)c:.jt]G;HV&*5Uj1YY>,5o[B&aN"gh]"BEn';JDT/0ILTAl1ejMoOKVT[t?,%4kCF:^C[M^%j$fDCemtR
%AdXL_Btt*%'LtYAZ=q<!5of:0]Oj=2a/n45m,/koroUdebaNF\&Q*WC,HGgFJ4N$MS2Vi#>$VU7O"@R5%)/199Hl3Z[\JunS;60q
%k7$e!??,%$(4pAH()21:Ymblf%`/>s;pR=CpCT)>!R'7eTNI[mCajM/N0&3RIa7GSf'c4&q?iD[<*!8/pSe<;=K<nbI?FtC!OeLC
%+Dt+H@A;'TElhB3/,H=[3oVY=k",$$*iJE?,iWoK4s*b"FfI^K)k3cB.EfL-+'N";Oj,*I?r`Tdm&j3JXYDW"B93[haUf0UPd6aX
%rKQ36$l4Ws9GUc0O!dE,N9"i!%V`d6QY/(8<VJ-*0P\`Zp_#q\W)G/0^a\-md_Y(qI@ZaaZt.X$oPs-dORg@"E]qGb!]JH>0m?T%
%Bs'Qu!a=O,Hc.bqO]NG&>FghPVb62XbCZ+$13g?VmHNhP#NWO0$HD]\$Z%e!$OE/8mJ.GN0>3i)pXS_9L0eAa]Kel5$5kL_RmK-k
%T?L=E%Wjtbq6mg;KPEejdtp'O#.*LXMj7,='7F<nH=;F*mm42(3a>5C2\Y"));UN^iN*EbQd9K\L:?u$BB>'U/7@Rp+k\A!TPAUu
%TsUQ4`FL&LU5dt]q;1GU%OQH2,0)12gu&L<lT3XU;kQD)8%&,\S$&/_e5VWD!#dX@h$@nnl#h,eeofg4;G9,&8XedI^2Ki=h>pF<
%45P-.]ONiZ1Di-I$Z?FMFIGaV,_K583[r5\`*M5iKq*_]^a:'Z-&?>#%oEbmG\rs*Sr$ijHh/smJjM7m=)P,ocAX5/R20_MB#FP&
%7b+Gh2=9F%DIg;RQA#&k;tc#)^kEq"J=74N-9l-t$D/)EX?ssKL5s7:OdT>KBSHQ3!`^^9Nb./8Nd^6Xr/$Nmo5B)!CU[2t^)L"@
%`u*448D2>XG3>h^&d2-5;b5O@PJt-4k#RE%Ab!Z8>+YjjOe.Z+eSmsT/PlB"NM&2a:LM!cV4S?Y@Bm)V-n2(j9p<I[-D$A@XsKM)
%5cKl,BGW59=TG1r^^iV[(feKYQ+<#[)'PWGqMk>;BW2uY)"9U.;&)DCmARrtOo$*;Ad^U_3nJ`OKge9-RKQ(lYKBZqM6d?RC7m[Y
%J)TLUaS&?=fSkZK^04F_jJQ$YlVW4i<@'sQV6ns5Dp?K/a^B"QE@#`U]8p0E!gb14`%B<.8JU+H/V(X$l4RNk?$bdTb.-1h8'Y"h
%?J\_E2jMh6&Wb8Rr2HbI\=$$#OG!@nW9Nlk(dAa7g:k$g09W3$iod`_7/=c?ijgiQ3CN\bfc6/jMC`<RS!:\2B%j"/[;ZAd5T4U<
%$VS.&nI_lAEA-+EZClM]<1P._Cci-8Q?6bjKo2]"(1;b<`Lu0U.BD9Eg2:./@Ags(KJ,B6D_d#R#]T$BnT1_j&XcZ7_f.n!V-B<;
%8PC4ZC1jm%3`J4o3?Y,+9WBCr1uE=5OK:1+mU0B_nUnKWfBqsqpcr/=Fs83;R2Um[jS1SYnYHBK_'8q<_ZJ@02gsMiCkqDNip4D?
%E9lRf*d>Io&XJoZmoAb616nk9_dQ]dm&^m#B\GbLbA^Hukj=nR!gRGVk:2Zu2,8?H%7U;h\#HUiT4_B4Sl@(5e+-[2L-Ke-O1<O_
%Yb(=^o(!UC<`p[1"WC4IRW#+3#P,,3^N*82('3(;@RO^M"o#3?lT>taRI))#H@L;3e?A>s0m8dGOKnV)\"4u74']#0q1W+ho:qU3
%kQgP.cdP%Li0,>rn`%)ds5<Z75Q+"mT7/Tu*Tn6HWN3"iiO4I8h8+O0&RKja=+`#&i;Fg>*/bpF(#g")'nD`^poJ$aWLBpZ2(=X/
%,P6!,^!`f04ki0Lp%ArWP(c0@7Fd(,Z\kWQ2j)[^!2;G[\?f*p:hmikP!;8'`J+/=k=$"p$Hs@f;,s<Ro`ss((iI1-AsB4-R]%*g
%b:t`@e<p<69#t5QIPK58UJK;;GjT7C,>p=[ji/HB^k#iD6>WuNjF`RH81FPP0DFH>5>QqK1T%^]KOED3.[@LQ[KCLJL%aYI;BH'M
%4^2Hs'J'fMo@-E=E%k$ud#O-;/Cq*/F=Oi)0Q"l&L##1am$_TB&N1e%U;5,4kS1=*Gi7Yg\oFVlLcaBgKYZU1((MbaCm5gY;+:)k
%GX<12IMN^*`kAtlFGT4H@e]e;f0Gaj)OMs#Zf4$QDUfDr8sYC`/etZ#ldhrf$9J/&LI`DK'g`q_A!IUjT?>6IU8":2d+KgNfWh)2
%2aFQbDB6nFMo^1PqetT2/Gh;n`nCH4D8AE*?nXYO;b7D08+-'VE[2I36D6/N;3r#rGB[D/Pie7'kEgg^0"2F_FV!\b)sN@g1]rJ5
%BNE5lD6A#N;/1*4+DN#K[af:H\Q0sT<PPQHRFUEiZJ@NRR]=6.]LEt@36?#nJ4u-[$OIF>*dH@E[AL9Elb`R+#B2[uE\c3PNfd,g
%WIe^04AELP*qH8YY&uD^j[-.4@.[cB/&9?9b$.=+XMe&T#ZKK/+%rqj-A)o,mgA%O`N8k*#Gt.X?ET1d06]nnWW(9bc["?;ECRsA
%-WX#-+D7sN?;ECUf\2+j%\CC\-h*-.f<+tB2ehAE<C<JaW;b&D?,b=@o3?s-*$qUT/5)#Bc/=`dEXu4m'3;Q9l6['';/'*u']<=X
%lf?g#?k!b>?a7B+((A#WYZsV)&s5&*d$D+AA`Z=2Q<;_p2qQ<N(5NhsVQT-UO[PPOWatBo6X)d`_@u#OS,.^Sgp28hQ>e$ZLW?@i
%"=8`Vj:e,3Kkld#d7BD''ke5jkj&@SAjC\/^thCn*rQ2ApsUf$JrgH/dM`305.Z=)8O4WD<p/sX<81ED+WjA,;Un^J;^SUMQ1\rZ
%m[$cM3o"5<mif&="jtB?pH,<s=]^C-n;mdp<d/.$"Je64%&4SdGZoHTke2#^5UBXqbiX^X$_VX5.FJN<,.F:(O[I8dL!5*C9gR2!
%'!XaO)S%mSfO^?mq,FJ\YC);e<'qBtV&$Phc&8^Th\C0O)gF:E@o935iCd1@<HSA11c)uQ7-M5qd1@pa.$/W6NeL>1j;O."WD_*M
%6O?D;.WXd@ns-=_knlF0RX?=DJDJcbOR(=]ILr6F&mRhb<E_G]=QCl90-P/\$;Nc_^QK('Z:%;YRc$TrR[*`D]No"a<@Lt2M<u\W
%*2e6$gVgRu-J:Vb1$SI+m@[YSYuj44LLrs,4WiAtXXbh@'o.bO[Yn&#LiLN&W@F0=cE0k8Wt;Qt%*E#C:3#rSB6%%b.t%0lZJq\/
%g3WEjV/9"$LGrJ&Z5fS'4[S$scWD[)TrQG`nqb/P].+,f;=Ju_.g,BGTr2Cc*W=n)#T6NgY/\gub",E$@=@BKk?ttK8\4.Q:t[<"
%9E7O2ahF;$eJKgSc3)A6T$u)W<oFH')O.bTeTAKW1'`u#)NUoEEU0d:W-)c>lYFS=714Ffppd<''&!>$R4[h_P4i'mar#qs6d3iY
%&j8`?:$@'R^^qu*CL%VXM<T"DkdW1`@J:%<C^]JmZ*.;gHmAeqX#8M^r<"L!8tL-XX+DS_H%aS0)e96&-n\"Pe*<Q\@(I]PV]emF
%3(@k\K&p1_Jp.e*2;u8P;:uTG-Nf:V61K0Z.,/@r2ks09</M`rA;\,J^/aOt!(:J4h9o%XXJoS2oU1-jcC`r[27*2C%k5AI`P_5.
%V`*+,<'t-9Ou!>-=\Fqm#c?riDs0YgW@3ju-WSghiC]DKNf]T`rM\OG*H9P$jI<X/I@\p-@?:%?$_4lkf>`VUR,#<Ua%nC<>/F_Y
%="KNhcjq-\2!T-r[rTK3+VCP;HQ;Yb&m1kmRTaibVJ7eZo\$#]WUu)NL`Sg`1&6.I@4cY"nb4+%i7VhXQb?`9:t_h][.Z1DBXlCu
%_4<K&<`AJ<m]WdI:/_P"IB`mCRT,Be5;s*a%C<.S4t8H/QH2$C%d)!4f3@a)OY:,SOc#+`==2K.[d5KW9dS:Z:k,i`[O;f^HY`+g
%X!4Xo1jkuK>Z5CA/H]@KVf:0L;UG"D_%A=ZRuuO><g$#sjC2uLo%6XOKo#iH5$RV8$Cm46hI.^IA?)N3KGI3\AZf-siYh#M!2#*k
%L<R\WSKsl>eHA;A;Ldf&(%6sZ/OrJL8H`d,Pcfa<GZ+c1fub[$dR-5o,7SMXRr^u7[M[\o'1F`Q=\DI(39JtRHb[5k`JF;Oj**Wj
%d1hM2<8\[KAKc_j0YjfGT^6:2'a2D(M],:,3*5VB/D*bS,%*sYHo10W/gI+`F%`"5(kefR,#O'ugZ=_><&'DQ`W!D90U5"%S^'FX
%-QP&oZD.>p;rL*O?"RX7_KmG*(H+3<'BLZBmmLCK>X8e,]q3dW\3Nrg8"gc=_-UP0[jcN8#!kd,icIgbg1MjJ<qG^Sm4(e>Q'CP?
%4BgWDM=Sa9MT;kD?:^_Y!3*R[!NI\i%;A_BCVdo7#rb)\$oDT;af+^n]**UgFXipI]WCnP5s:c.mm7/VpsO.5"_5$Y1Y+lX]Lo8U
%-$?PLHol`t8'Pb(i"Nl8<EYbQQ`,mkh$c9--BZh81!7")?UO&iL<>e";1hFt4K?L#':?'^[T#BWFMU"UN'96raX3O96WKs$l=qL+
%4?<AS3_ckre^6ONXNG2"n4&2MmOC!?h;_b7[^3JST"";sX.m5%M6NKpaR(k(%WEGR&cKKUQ7i<T6;^>(l!8.eF-$9"H6uSN%e)Q8
%qbH!.(?IGP>Ifi7;@-7/"*!kW"8nqL=:,dnd"V$0X[+D2NfB'O#'?F!"X`bSjj&ZSpd(gV7Z%aj%XVgV*[.D#/@_I&m0pD8[P!Qk
%8>ARi6,^R009J5J?`V\'"Z=7E3QmTT)B]0A\`E,>fG.N*'hQ?sO&LboSD@]Ch-T'br`KnFaN0t33D3JJef.J.ga<TSi=3\&ATE?t
%,,Ls@^R="m*[lEcICpcg?4hc`DGl0-LJbD:WCY>Y@inpF<J9HK7G)\U*>V#>OumYVkPeH0EQ!DR[R,mN?T^@Qk?[_?;mH[+"Q.]m
%T]0,I7"2$A.>!,6W[O?aMSiIu3\Lu1YKek5`URW$kcu>X@FQlK5i91)=E;3T83:@;>IoNh%C)Q)(gAhIVrR*dNI"O'>bY4XIlc/h
%M'q9p=)$<^$m6k$+t#Cc4l?(se^+3dq]5j/gVhV0$0>+0V!];fTXb.XV/f1:"A^U)Yq.o-ZEGc*dij.sPsWADdI4E&T!\PV7*qJ=
%Cg;PCMP*Em]p5:>8'$8YT)D.%b[@#ORVtuLlg[V\[WOMD_l."@cZqn.[Mq7#<b*u0::bm+Feb1%2u+J4+Q"WuA1]R>$i#k#k58<n
%Bo=&Hj9]en#a\\E[Wn[X-gaMqA2-^1D;IQcO0?]\Aj/>%^[,01BLcVO'JB[F,P2BFMjD[!f4;&mHo_>)Q&Hp2;R(1[g]W`j7_kSp
%D)oXi=9^m?\2)6Ukk*5Y?M+cs/Q[5D=,KG/`?U>GEY9cVMg"PsX>nF=&n1]R==/Y!We^rCJ7AJGm'tooH+[Q@Qk%.jehK!=Ig\dr
%^;?%d\gZ(GB`]T"b\>(-36!$bS`@;Yo0S7:!TR]H&)Xta\TJuEN!mZ3:3q"!<PK0ZqJ1Mi3e980VV:cfmhNf<U`t#c4#LO12@i[K
%QaBZb!!"VY@YGB3-GIZYf\.'dB^[""5?+&BUM1db,bcPG"D"!r51ECZ<X0a45Lkp&?i[gDLCsS$V'6JI<;Q6q)_cY\O1V\.BUQqU
%d$R(.MgN)$<D(P4U/H*O<&t)K!ceRe'c/==q:/\W)&CT\jAH2$JbRTpW((mra28PjZS;Fk8n.QW-K@mGcl9ZD&tsd2&#6b/p=NFc
%nV]ITJ.BYp#+WEC$Oeb6kF-tELO+$LppR[5'%_MNn!BBUpes:ifrWedAg70sJ`!a@N=teIkWMQn1AD5u=dQWkr`T9D7kjnE#GS?t
%>+oE[G_:M`>U17q6WHQB]\>#"h7Z+Y/lY4HfkEIQ/dOag-.r47;VBlZbV'`gSh;?UdZ+u+/=.NYq%=RB9%5g7adKJ4mRj<.PDP3V
%/CT1(I`CI-DW65'^!kP@4LS?`:oDPTh-toLGp/!P9psf_SRBhpn5(=IbWo9hNr-Z*_slorp:*%QP"S4F"TVW[_D#d#o;FrYX5ZoJ
%:hU'8>TVC,bl)=q/HT>b*R<ZUWoJrP#"2?EL`1"7->[NXU6ehlc+_2-bsR%j,!?0%8ZoaR*@t1RnpAX!9Q:XN1#IZ`e\&3?IQI-%
%R9(6"iY%`bojKl^U>%sOfn:8cYDWlWi'H^#'JE\5WE<snm`d@<c<6X+<QqYAI^mFd^&!'`L<-1M89r4g\O7`>Q*%o^<co-i/Mc%E
%+i@#.r+'>!a]Mki6qJcja1o;iG@AE%"KLQ<B_a5`*DHNTD%Wi9jIVeM7WBsa5R/J^l]rkRV4[Oa,Y\)Y6!ZoOa!fM?gZaCFHTDEq
%U<3hN%-b\Lok<Gd!i9JYE\oL7a'#$A`*3]Tle\e@nf[q6s8M1GrKHdF0E1(fJ,BhgAtORN\%h^u9@?$sMg#o#3cV[#>oSFIjY4H*
%X4N*SP@Sp(@l>4_FCu,(J3af7L&lIRN3,R:Ch'>doK]3T-i+OC8R'YdY0:pVrZ7&n#Jo\il9]c30$Y4Mb<Z]>\Q1u%[kX>BeY_Vp
%-ac&3Hc)?(dcWJ#,aAS*][cN$`cP=e8K(=a3[m*q#"Si^ko*1h08-tVI\DZ^&^K.6B%)PXNYA<3Gc=DhSMT&u69r0Aa[K:2$&%)l
%r,KgjHQ6E^>F"J["<I]SBr[?X\.p+%.C#ab8Bq:C2S"pF;cTeH*eO.8P[QZ22\-]uCIm/tHZ/ssY-(e-EO*J+dKcn;UJ)8G=f:mM
%p^F'+Re1-neIO=jBcY:fB`G8YB*4</Keh#;*al;J.L^F[Be#\`:!5@YLnZ.D](eXQ9AgIe_k^34hDlY>,,\.:nT!_<O_D:OrF0Mg
%)]:+:*FH'TObYj<&'?U1m5.cs=t+F':d!dS(+rGfRV"IHH:[s-d4OE3JN`>^`fA+@a7.PFs$0q_DLQoKpU]qFkEg,\\M"%(;@::0
%AE6q7Pc@tV?RJ7\iL1qCpF_pO"5rYAPSM`M]aZD7%klXr5rqOo43^#-3(ef5^0g+Z@n!(/i5"dmL'gifJC0rNT"bq%m[-_&febFm
%Q`D!J"&YpF4.RLC7f$V\@g].;<VAbJ\XW))%e;L1"p1L\g7inQ2V`L??^!aW)84JM(\+dC!NeQ%M1o9VHNVJ2:##T,2J']T.*>#Y
%hrMAC*bM6,hY8[hWGkG$CPPa&ig[VE*U[f+nn]DJk4l=leVGN?-$-2A-F&:</0.<)o#r]k7W^uep7$60C5$\[A`VV!_5?pKP;?^h
%<c2dY$X4q9S+&=kaZ9tfAlFWa]@Zf.1TSU8@7$W;ed-LQ=)8k"chSmKIasZL>IXuXXj@e<82r73Z2)H@?u5<:Wkfb8ehM"6d#X]3
%!%nUnhe^-J8KG#HfA@KX%pXBVKiW@\:Q:ThMRQqsX$GMhN&ncd[YbOYrQB;\-H4b&n$\j%6X[U"p!&>jJ:Nh`eY8NQKi.)t*ejf+
%,=E`kVQ0bV:SYR<SAL8#!fd+He.*0,r625oeOeW2OZ[MLgW,1N67^O*mAC9h--DUNjH;Mtm,+V,^/K>kpaI,GQ:!7jVoS[@[m&[H
%&$D5ha7Kga2dhr4I='ZDe@3UfKFs)#V%T3a><\<D/lNZu&es#.QI32>WC5NNes'[5lC$P^^G%"B@6X<o$:_"UZ%_PiD_'ABQ5fL4
%J;c#pNjKmtpQ1(?@PmG\2=<\9dr15d^MttI:,L2(2;`m64^RK:bj%^eWX2"4=bo0kM3Cen:#O1,GX]rPr2J]-l`k^-M_C\!e@1KE
%s7fbnDuFZP4q?5oGWq2aM_F\]'66"6&fPg54tIYebl:sC;jq!&8KLL/o'<)tRj_o;+1qE$I7.J?$&O,%BM8$1$1kAW#T.M`aM;I1
%VsfuPPK!%NA,LFu[Ds.I@#CpjeLFuIQ^lY:\0!fr`#GN/!^4Sf/D'+P5RK^KMDo:MDYVkl$0t\u*Gk$FmV,SB!Q.sH0NlC]Pg6%6
%.@%0dh5u+Y0'3)IbCKB7jk#^d`Ku`8'G8Y%UXGuLXFqa57ZPM4S]Suq<,$@HGt91YnWdGi"L%_c@S`cqoFdeQn`0Lr*hMO,Hnihu
%^'A$0Gt'Mq?;/&q$2QK8?VU0jeaVR&I!I^gWJ-`Dk^WMD9%g62.%_k##8WIke;6Y73_o6,%q;Lu@o?sM)uB6jEW=qon:(q^^be<c
%i`CA1$b`ep2RZ:a.&ph!#Rs=UnF8YJFP87I;-.%GeNUXj<b80,nT$X5,'r9b/RT=!Z2j=k9)]iE$*;#-[cL??\6h95R>CB_aVJ2b
%eMcc*Bo+':8^`_f_Q6?R'NN)W:doWVldmZRp$9<f`>?jKlJ'@^IsS6CDuF-UT#^<=5kDCT52f;/.\AruWsS<AdX7K^+6VDAl1e`1
%^6mR!PNe!h;_HApfP:j'a:?6XOhQ\e*gGVP:;P&_Ho@-9i?l*"Xl5dLl0fUQfAl1FF?7V+i!Ub=T+3QZCetj4`Y]Hl"><CHqr9Se
%-/Lo-I+W&"T]9jT;po%)F9DKDb7H6P6cQD/Ib9-iCukO#J,&UmlE-k;s3jY&@)8^D@[B)-ie1WI8?R<PFc`,FP<F)7e3K(Dk]3;n
%g*\M)<:kKk?*25l7)[iR\ot%p5MM)2o(idopr9D0(SgOXEmFh]AEN^4)#!,9GVMrh6ht_t^\8JsiV^G-"jYoLKCr\=?]9@PEhABI
%T,aKuGVm/p^L%uQ?X@pFVjD`LAGBqj5$8D\QDoVRmc;/2oca_RA2,54YQ^SWOU4UMH4O6iK)!7`p&!a<mTiijX<C+]TuM2i,3$5F
%lHHXW5Aee$qYYZJIG>F/..<("j(WFWg4[2-^@S<WCe`6(Idp`?YPqs@5*"@[6%(KWY<L;(QnY_b>0Q]Fb;o5\;m[g,U@OUMb"#YV
%+T[7[.2Xk:T^k'>T/T"FPuepddr,#hiI9F?5OR&t>Ig\D2!O(YC74hr!tg"[TD\1C3`LP[_EgOlMd2+=ic5'to.G`\(\6M`pp-=Q
%d6^9OZlbQ;AiDtBpY'(8@<R)@GQJLnO$.o.;ETGrDh"9]s4h$H`7'&r^&$41Hl0@(6i-%!SmM#&+C:!CU\Hs6R"R,)h"/1+*i:S<
%h/oQX<.#G1F!5+:=[n'F,J]GKmo'`SU+djYb'oIK,%eKnZ[(U_]CJOSXTUfKTF_Ts.>+oE3Y5dmN,_$<&L-(/Hhk?t-7NH,LS&p0
%MWYW+I;brmp3q7>-#'PEJ,[g.\Es#CIeh9>+j7o^N$K"S:BLe)T[f)*<i=H2"XOpTd3[Qi=rYUsZ6"o0mmO34RFs(PZ#R.u`"!o4
%D^C_,01<WKiQq+2%k[<Nh0QP.q\XD5r>?mY#85u[J*>a;iU_E/*2GGD[ibHI>pm]\A+dS:KrfTpe^,"$g^D&B)QjR&#\Y<_b"7Pn
%r:!XG:%:aaJG3(Y(h#2V:V^kX51n2B*BP'#p]'>jWjl%n!lPt;rS*+Y*CU*1nLJ/7WKM@kHS2`!cp2fQ2Mr$35t>!Qrr0%3jZJ_g
%h]#_mrSdJs13Y=]T0N&D>k\(&hjsIte)m+m?)<<@:&F83VBUfZ[*Yb=p=EK#3:0gh7c3dkLIN$E>]3^45VN=Y^EB@2n>EjLD5W5=
%!KBRdbjPp>OAs9VrGrKDnQ>4-BSCPKfs:&W!>%%Q4obGRIrX<9CHN+>_.cn;!K=;R4!TQ0G(],%JTmo,p&qWL>p_QgSN8"H8LD[d
%T,48W!Z(_D@@C0^BMt\tqNh=olpHs:bi\_6.&(;fJQ2h_RhO5jL[<HGq.*&H#:a:]2Ni#&Pg^Wl$@#j61miEZ"SpTA/[sY4R"ut?
%#qBo;ScV96j<g;uq1MKnDFp0C2naua1CP0BZLILPACfG[,?'B`Y$(jlC[6#%aUP2@`-di6,);HZ1%JLNi?`FaJ-H13-Th.?F3BTL
%I<61%I%p*F88TcakQ;-odT#t%W*'R8-DFhqci\"Vka?6Zi:nZ^jqPS[+`=Q/m*G4JI!t8YI%Ztt9m1-1Y!j4$--LcQ6'#fXQKdZQ
%nqaS=I&IMi[o$f33c6^7En-b!9f.^ma.B2sD#o7H>H(`dXC0m6(ghl57bVj%j&.@6iBT,4'.++g`#4VBeVG\!KLp=(p$jJ']2\Sl
%o*CF6+%e9./42[ir`U<[mK\%a!LclNqP_uZ"b9(8BI-MlMIS9]@<1Yf@b>!C'@Oj).MkZX<(m$*h^PI$rd_@Y/.aM%UrI+;E[$e7
%6Em8k#2uV5`okrQB27?_&*jj%0Fs?DC6iG4f7hERcN?;TCDJQPYN<5h&QY9CT0j\.flO.%[jgu"NH7r#4(b+HpBqD/8@n)*5kGin
%Y?LjA%@"pHhp%@s\J47c0E1&RA!r$\!Wp`]='OI,/)h>4AS\$A)!R8O\oEWdc:G.ODT$To`SMs$b-XF*f8QY^Y#qqs1AfuYM&J38
%]1OcGVO)S9$8;eXb>st[NhkDb/lQ-]i[W*]A+D%-0&MSTa3+M#gf`=o%:?LJ<:o2^G\hL"orD/rH;?1#2<#nI=GIon"W&j9j/o]M
%8dq%l=G!O0gc>L8#3[12mELZM)\b2P!b&KQkCL/TrY&#F\S_%_E(I`_+Y'Qck)pO2MnDVaCCQur!V4S!;g,7M'X(I#+XpPf";<sB
%V0dmFA/cU)$NdVMHMjpim[lNJMO"SnR`NT:f$FOCl;'_I6':<6XL7H*YC_e-D-@BpPrg8l9&c9@(h,Y8OP)`]OV*^R_-Y!P)s$P^
%egaCeD&)gkRMd)q_O;&p.+EcYA9>V(W8SMi@^(9N&-3\/C=h'Ldr'3\R,;+B6b6-;W[:Bo$Q_s].T"!]bIUXATPg/.1g+a]Z-TR$
%6=W#_BRpkm70OL1-AV^?@F+Q,l`i.l+2S6]O*=.Q+#-2K\o@N.g9[6N.q,W""alb<9%(R-/uk)XE[r,%92W:gQ=-DZjlF[M!sg7X
%NG[oB[FS%0!5Y;@E05=Q<oamSMDj6r'##iPd=#ooF`gOX5uGgK.8V$)#]aK\"GNj`;tHm^oTXAYVn3LV,hl4)bPApt`Na>-2@(.)
%!f$gq9Mipq$5HQmX=?T[NF9*RQXe_ln,T@5B`oa,YW6ODLK2N8-:;buaKh$&F%od;6!ad,)ZZFo>V$'g+-lSd\0:TX1'YKARPNHM
%rNMJQK,Q&DQ3M'n3Zf7&CK4HF'Q;2<S^]65*4ZGdg0F(06Ae%%;B8K1/0mm4/tlIK#D-uVlYpIClQZNW:-sk)c9[]L3E5*EO!5P,
%c,Ll5'2+?.U4q;i?l3e5Y1pp[!BttM)V@UA1e17cZ+s,]I#5X(RLOe_=3Rb'1o%)Dk*URN=gUOf;DY[VU?ATF>?RF$BHQlg[a:c'
%(@'SJ:q-,NUtF]b+O>u/Q[dH&9@6b]l>Xm=2"$j7q4&E[`,E<N'kfMgRQS\Mi&o[-.Ool6>Em#?j/)#(^3]C/hH/?I2(i"-`(b*N
%6<?JpD/F>P_p35ca*%%HKmf[4/2Khq=^(O\Ps^^M4\Y7RmD?ZlBtfX)f!S)RIEWk("]H$aL>$gCJn8&7'!qN:H%=)Afe?EKnsU"u
%2"^aRb-G3>K7jNS:HR'8+7uf+"oA;cVR-?:muT8q#QC?=f*8p<Eh:Ad1i0V)p/R=eYrl\@dQ?Bom3qc-@a`5Ynd"r?V(,l;mL_L=
%jO1s[;)&lTmg\]1a9f,'`(h*1:=TUceN'tP3O[:G.Z+b`,aO^jGX)d#"maR#G;cVc]`m^+.7ES%p,KjQL4VFX<id)1k995#0kY.c
%`RF+S\0bjL/,ABMU(>kh'i%?ebWBHrUe,C:@TIA,2?HR@M47JcMd%\YbqE\g$7sIi)WaI5W"OkN_136q<>Cdf<.%"Z'B7X9X*%Fm
%&7J#j@@,p?eu,Hp7I!S\orGVJQ7:ijDF:3I'T8EDa@`4`,U-72VW=*l-EY1'11W@2UnZcmg%&#PfNh4S,0Em<N(MfomJW8Gc[.DB
%If:^crM&Y7W7#;ANdPn`12qqY.cgir\TgoO;cRt58Mij&@@'\.,3gFHmJ7Wk/>=@Hbo2PK1I])kX6P:[8km2d]k+3Xn56U3?nqB-
%.l0"J0p8>4:D5gP8o)urqoC7\cb&dO:C;`i2$N*RCM\u9jb6\/9JMN[pgpN>T_m+rf.ssa<OoVQYA+=YRpGn*,8&6pAH3fr;%7ZS
%=3=PSs&aq'c%rpS$[qP2^AK]AidF`&"%$^o-n[3Y<$U<5*BGSS,1b+r#S8+BKsbHa#\]i1d4q@4i]E>Z85eR,[TbZEfo,%kjhiVK
%@nc`]ED]2m7bP<eOZm;@!C41ZidbVhX?";Q5_WW3TC//1'JL"c_oj?Jq%I[N#bh`m!8!g:ndO,ZTP7AZ]S?>(,PTS-Eu]+3b&1M;
%7!Xtb].TjN9q%54SC;L"lP"Ve='/EpEn#fEmncZ:D&1'<T')f5Z##`NGDBHV9r8:K<_]M.g"ojIAl4?FbHZA5q"1`.G*-<FrE-,l
%._lZcY=FHW);7S!o'%t?dRTnd75'3VI#O=o<fE7Ah83Pcg5dRn'.$A"ICl,"S_'k-RSI5b`\YIf*?`9R>R0*+>64"'f?QOPWV;T&
%hJ<?hMH7@l2(PbWoi,)%Sa]M:+lp,D=*$ZVH)g*iIo^B,[Dfg:$G&!kP@t7s>s'Zm?53HR1@q"HZq?<SI3U]fT6Crs)lU;)I166E
%I+.DXIdK:9<8kM2Ve,)`p5(CHJ>RL",mt,1ReFh-)D<a]Sd[n#cSLjpW<<k"9D6@n:hm&1l&7m=U6kc./g3j_Uf9LS8K*mh,%]5k
%6`J>tB\chC_:H(7%"H9:$=9l+a@?^lj:[1ieIk'i67hhEIK,r.R@dA6s+pR8+Ca]AcGTWA,mlXrm@P'gK&hFfmM%)8;[O%I#D'aU
%Be]$A*Ccsh(K&$cO88eKq%)IJIN61tijlTgKK3$(0..YPh_MF>YoO@[.5]r/+sk)ei2\@h#c&lnnE7'L[amg&+pJ]X7E<u8Ku;tt
%HKs+3ZkV8m3)0nh<Rou(-'W<i>G9_&"5^Z5^LF?fKna%!\U%@7.9N7MfnTsWr\W6+3C!8b'[Q_m`-o"9ToI+16`;h++rUF-_>D+4
%2gLgX/Gg-]!G!pZ<r1XnJOUll*em6_&AtYf^D56F*u_9l1V^&2E>lG7[.D0g]sjL:?8k&)%VK#7T@_B"Mp98RYAr*6n"3tXVgnZC
%J+@7PlJM=8o]L_qT7?^^s8)-OIeBbBiQqMZDuTUBs8I5Wq60hc\%hgh5PaW[qope/IJ_:Hr6=-urGV]7\,ZF'e(\70m^I]?pOE(P
%hnK'FJ,.k!8IIK52uM@$rV9guRm6k8rs_"r(U!~>
%AI9_PrivateDataEnd
